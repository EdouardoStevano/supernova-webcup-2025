import {
    b as requireReact,
    g as getDefaultExportFromCjs,
    j as jsxRuntimeExports,
    L as Link,
} from './index-BoZEYj4b.js';
import { r as requirePropTypes } from './index-BAK5nF8x.js';
import { B as Button } from './index--PclSZn2.js';
import { S as Star2 } from './Cube-found-ChOUz20m.js';
import { F as FooterRedirect } from './index-q5K6F14o.js';
var dist = {},
    _extends = {},
    es6_object_assign = {},
    _global = { exports: {} },
    hasRequired_global;
function require_global() {
    if (hasRequired_global) return _global.exports;
    hasRequired_global = 1;
    var e = (_global.exports =
        typeof window < 'u' && window.Math == Math
            ? window
            : typeof self < 'u' && self.Math == Math
              ? self
              : Function('return this')());
    return typeof __g == 'number' && (__g = e), _global.exports;
}
var _core = { exports: {} },
    hasRequired_core;
function require_core() {
    if (hasRequired_core) return _core.exports;
    hasRequired_core = 1;
    var e = (_core.exports = { version: '2.6.12' });
    return typeof __e == 'number' && (__e = e), _core.exports;
}
var _aFunction, hasRequired_aFunction;
function require_aFunction() {
    return (
        hasRequired_aFunction ||
            ((hasRequired_aFunction = 1),
            (_aFunction = function (e) {
                if (typeof e != 'function')
                    throw TypeError(e + ' is not a function!');
                return e;
            })),
        _aFunction
    );
}
var _ctx, hasRequired_ctx;
function require_ctx() {
    if (hasRequired_ctx) return _ctx;
    hasRequired_ctx = 1;
    var e = require_aFunction();
    return (
        (_ctx = function (t, r, i) {
            if ((e(t), r === void 0)) return t;
            switch (i) {
                case 1:
                    return function (s) {
                        return t.call(r, s);
                    };
                case 2:
                    return function (s, a) {
                        return t.call(r, s, a);
                    };
                case 3:
                    return function (s, a, n) {
                        return t.call(r, s, a, n);
                    };
            }
            return function () {
                return t.apply(r, arguments);
            };
        }),
        _ctx
    );
}
var _objectDp = {},
    _isObject,
    hasRequired_isObject;
function require_isObject() {
    return (
        hasRequired_isObject ||
            ((hasRequired_isObject = 1),
            (_isObject = function (e) {
                return typeof e == 'object'
                    ? e !== null
                    : typeof e == 'function';
            })),
        _isObject
    );
}
var _anObject, hasRequired_anObject;
function require_anObject() {
    if (hasRequired_anObject) return _anObject;
    hasRequired_anObject = 1;
    var e = require_isObject();
    return (
        (_anObject = function (t) {
            if (!e(t)) throw TypeError(t + ' is not an object!');
            return t;
        }),
        _anObject
    );
}
var _fails, hasRequired_fails;
function require_fails() {
    return (
        hasRequired_fails ||
            ((hasRequired_fails = 1),
            (_fails = function (e) {
                try {
                    return !!e();
                } catch {
                    return !0;
                }
            })),
        _fails
    );
}
var _descriptors, hasRequired_descriptors;
function require_descriptors() {
    return (
        hasRequired_descriptors ||
            ((hasRequired_descriptors = 1),
            (_descriptors = !require_fails()(function () {
                return (
                    Object.defineProperty({}, 'a', {
                        get: function () {
                            return 7;
                        },
                    }).a != 7
                );
            }))),
        _descriptors
    );
}
var _domCreate, hasRequired_domCreate;
function require_domCreate() {
    if (hasRequired_domCreate) return _domCreate;
    hasRequired_domCreate = 1;
    var e = require_isObject(),
        t = require_global().document,
        r = e(t) && e(t.createElement);
    return (
        (_domCreate = function (i) {
            return r ? t.createElement(i) : {};
        }),
        _domCreate
    );
}
var _ie8DomDefine, hasRequired_ie8DomDefine;
function require_ie8DomDefine() {
    return (
        hasRequired_ie8DomDefine ||
            ((hasRequired_ie8DomDefine = 1),
            (_ie8DomDefine =
                !require_descriptors() &&
                !require_fails()(function () {
                    return (
                        Object.defineProperty(require_domCreate()('div'), 'a', {
                            get: function () {
                                return 7;
                            },
                        }).a != 7
                    );
                }))),
        _ie8DomDefine
    );
}
var _toPrimitive, hasRequired_toPrimitive;
function require_toPrimitive() {
    if (hasRequired_toPrimitive) return _toPrimitive;
    hasRequired_toPrimitive = 1;
    var e = require_isObject();
    return (
        (_toPrimitive = function (t, r) {
            if (!e(t)) return t;
            var i, s;
            if (
                (r &&
                    typeof (i = t.toString) == 'function' &&
                    !e((s = i.call(t)))) ||
                (typeof (i = t.valueOf) == 'function' && !e((s = i.call(t)))) ||
                (!r &&
                    typeof (i = t.toString) == 'function' &&
                    !e((s = i.call(t))))
            )
                return s;
            throw TypeError("Can't convert object to primitive value");
        }),
        _toPrimitive
    );
}
var hasRequired_objectDp;
function require_objectDp() {
    if (hasRequired_objectDp) return _objectDp;
    hasRequired_objectDp = 1;
    var e = require_anObject(),
        t = require_ie8DomDefine(),
        r = require_toPrimitive(),
        i = Object.defineProperty;
    return (
        (_objectDp.f = require_descriptors()
            ? Object.defineProperty
            : function (a, n, l) {
                  if ((e(a), (n = r(n, !0)), e(l), t))
                      try {
                          return i(a, n, l);
                      } catch {}
                  if ('get' in l || 'set' in l)
                      throw TypeError('Accessors not supported!');
                  return 'value' in l && (a[n] = l.value), a;
              }),
        _objectDp
    );
}
var _propertyDesc, hasRequired_propertyDesc;
function require_propertyDesc() {
    return (
        hasRequired_propertyDesc ||
            ((hasRequired_propertyDesc = 1),
            (_propertyDesc = function (e, t) {
                return {
                    enumerable: !(e & 1),
                    configurable: !(e & 2),
                    writable: !(e & 4),
                    value: t,
                };
            })),
        _propertyDesc
    );
}
var _hide, hasRequired_hide;
function require_hide() {
    if (hasRequired_hide) return _hide;
    hasRequired_hide = 1;
    var e = require_objectDp(),
        t = require_propertyDesc();
    return (
        (_hide = require_descriptors()
            ? function (r, i, s) {
                  return e.f(r, i, t(1, s));
              }
            : function (r, i, s) {
                  return (r[i] = s), r;
              }),
        _hide
    );
}
var _has, hasRequired_has;
function require_has() {
    if (hasRequired_has) return _has;
    hasRequired_has = 1;
    var e = {}.hasOwnProperty;
    return (
        (_has = function (t, r) {
            return e.call(t, r);
        }),
        _has
    );
}
var _export, hasRequired_export;
function require_export() {
    if (hasRequired_export) return _export;
    hasRequired_export = 1;
    var e = require_global(),
        t = require_core(),
        r = require_ctx(),
        i = require_hide(),
        s = require_has(),
        a = 'prototype',
        n = function (l, o, f) {
            var y = l & n.F,
                E = l & n.G,
                u = l & n.S,
                b = l & n.P,
                _ = l & n.B,
                d = l & n.W,
                C = E ? t : t[o] || (t[o] = {}),
                c = C[a],
                m = E ? e : u ? e[o] : (e[o] || {})[a],
                p,
                g,
                P;
            E && (f = o);
            for (p in f)
                (g = !y && m && m[p] !== void 0),
                    !(g && s(C, p)) &&
                        ((P = g ? m[p] : f[p]),
                        (C[p] =
                            E && typeof m[p] != 'function'
                                ? f[p]
                                : _ && g
                                  ? r(P, e)
                                  : d && m[p] == P
                                    ? (function (A) {
                                          var F = function (T, D, L) {
                                              if (this instanceof A) {
                                                  switch (arguments.length) {
                                                      case 0:
                                                          return new A();
                                                      case 1:
                                                          return new A(T);
                                                      case 2:
                                                          return new A(T, D);
                                                  }
                                                  return new A(T, D, L);
                                              }
                                              return A.apply(this, arguments);
                                          };
                                          return (F[a] = A[a]), F;
                                      })(P)
                                    : b && typeof P == 'function'
                                      ? r(Function.call, P)
                                      : P),
                        b &&
                            (((C.virtual || (C.virtual = {}))[p] = P),
                            l & n.R && c && !c[p] && i(c, p, P)));
        };
    return (
        (n.F = 1),
        (n.G = 2),
        (n.S = 4),
        (n.P = 8),
        (n.B = 16),
        (n.W = 32),
        (n.U = 64),
        (n.R = 128),
        (_export = n),
        _export
    );
}
var _cof, hasRequired_cof;
function require_cof() {
    if (hasRequired_cof) return _cof;
    hasRequired_cof = 1;
    var e = {}.toString;
    return (
        (_cof = function (t) {
            return e.call(t).slice(8, -1);
        }),
        _cof
    );
}
var _iobject, hasRequired_iobject;
function require_iobject() {
    if (hasRequired_iobject) return _iobject;
    hasRequired_iobject = 1;
    var e = require_cof();
    return (
        (_iobject = Object('z').propertyIsEnumerable(0)
            ? Object
            : function (t) {
                  return e(t) == 'String' ? t.split('') : Object(t);
              }),
        _iobject
    );
}
var _defined, hasRequired_defined;
function require_defined() {
    return (
        hasRequired_defined ||
            ((hasRequired_defined = 1),
            (_defined = function (e) {
                if (e == null) throw TypeError("Can't call method on  " + e);
                return e;
            })),
        _defined
    );
}
var _toIobject, hasRequired_toIobject;
function require_toIobject() {
    if (hasRequired_toIobject) return _toIobject;
    hasRequired_toIobject = 1;
    var e = require_iobject(),
        t = require_defined();
    return (
        (_toIobject = function (r) {
            return e(t(r));
        }),
        _toIobject
    );
}
var _toInteger, hasRequired_toInteger;
function require_toInteger() {
    if (hasRequired_toInteger) return _toInteger;
    hasRequired_toInteger = 1;
    var e = Math.ceil,
        t = Math.floor;
    return (
        (_toInteger = function (r) {
            return isNaN((r = +r)) ? 0 : (r > 0 ? t : e)(r);
        }),
        _toInteger
    );
}
var _toLength, hasRequired_toLength;
function require_toLength() {
    if (hasRequired_toLength) return _toLength;
    hasRequired_toLength = 1;
    var e = require_toInteger(),
        t = Math.min;
    return (
        (_toLength = function (r) {
            return r > 0 ? t(e(r), 9007199254740991) : 0;
        }),
        _toLength
    );
}
var _toAbsoluteIndex, hasRequired_toAbsoluteIndex;
function require_toAbsoluteIndex() {
    if (hasRequired_toAbsoluteIndex) return _toAbsoluteIndex;
    hasRequired_toAbsoluteIndex = 1;
    var e = require_toInteger(),
        t = Math.max,
        r = Math.min;
    return (
        (_toAbsoluteIndex = function (i, s) {
            return (i = e(i)), i < 0 ? t(i + s, 0) : r(i, s);
        }),
        _toAbsoluteIndex
    );
}
var _arrayIncludes, hasRequired_arrayIncludes;
function require_arrayIncludes() {
    if (hasRequired_arrayIncludes) return _arrayIncludes;
    hasRequired_arrayIncludes = 1;
    var e = require_toIobject(),
        t = require_toLength(),
        r = require_toAbsoluteIndex();
    return (
        (_arrayIncludes = function (i) {
            return function (s, a, n) {
                var l = e(s),
                    o = t(l.length),
                    f = r(n, o),
                    y;
                if (i && a != a) {
                    for (; o > f; ) if (((y = l[f++]), y != y)) return !0;
                } else
                    for (; o > f; f++)
                        if ((i || f in l) && l[f] === a) return i || f || 0;
                return !i && -1;
            };
        }),
        _arrayIncludes
    );
}
var _shared = { exports: {} },
    _library,
    hasRequired_library;
function require_library() {
    return (
        hasRequired_library || ((hasRequired_library = 1), (_library = !0)),
        _library
    );
}
var hasRequired_shared;
function require_shared() {
    if (hasRequired_shared) return _shared.exports;
    hasRequired_shared = 1;
    var e = require_core(),
        t = require_global(),
        r = '__core-js_shared__',
        i = t[r] || (t[r] = {});
    return (
        (_shared.exports = function (s, a) {
            return i[s] || (i[s] = a !== void 0 ? a : {});
        })('versions', []).push({
            version: e.version,
            mode: require_library() ? 'pure' : 'global',
            copyright: '© 2020 Denis Pushkarev (zloirock.ru)',
        }),
        _shared.exports
    );
}
var _uid, hasRequired_uid;
function require_uid() {
    if (hasRequired_uid) return _uid;
    hasRequired_uid = 1;
    var e = 0,
        t = Math.random();
    return (
        (_uid = function (r) {
            return 'Symbol('.concat(
                r === void 0 ? '' : r,
                ')_',
                (++e + t).toString(36)
            );
        }),
        _uid
    );
}
var _sharedKey, hasRequired_sharedKey;
function require_sharedKey() {
    if (hasRequired_sharedKey) return _sharedKey;
    hasRequired_sharedKey = 1;
    var e = require_shared()('keys'),
        t = require_uid();
    return (
        (_sharedKey = function (r) {
            return e[r] || (e[r] = t(r));
        }),
        _sharedKey
    );
}
var _objectKeysInternal, hasRequired_objectKeysInternal;
function require_objectKeysInternal() {
    if (hasRequired_objectKeysInternal) return _objectKeysInternal;
    hasRequired_objectKeysInternal = 1;
    var e = require_has(),
        t = require_toIobject(),
        r = require_arrayIncludes()(!1),
        i = require_sharedKey()('IE_PROTO');
    return (
        (_objectKeysInternal = function (s, a) {
            var n = t(s),
                l = 0,
                o = [],
                f;
            for (f in n) f != i && e(n, f) && o.push(f);
            for (; a.length > l; )
                e(n, (f = a[l++])) && (~r(o, f) || o.push(f));
            return o;
        }),
        _objectKeysInternal
    );
}
var _enumBugKeys, hasRequired_enumBugKeys;
function require_enumBugKeys() {
    return (
        hasRequired_enumBugKeys ||
            ((hasRequired_enumBugKeys = 1),
            (_enumBugKeys =
                'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(
                    ','
                ))),
        _enumBugKeys
    );
}
var _objectKeys, hasRequired_objectKeys;
function require_objectKeys() {
    if (hasRequired_objectKeys) return _objectKeys;
    hasRequired_objectKeys = 1;
    var e = require_objectKeysInternal(),
        t = require_enumBugKeys();
    return (
        (_objectKeys =
            Object.keys ||
            function (i) {
                return e(i, t);
            }),
        _objectKeys
    );
}
var _objectGops = {},
    hasRequired_objectGops;
function require_objectGops() {
    return (
        hasRequired_objectGops ||
            ((hasRequired_objectGops = 1),
            (_objectGops.f = Object.getOwnPropertySymbols)),
        _objectGops
    );
}
var _objectPie = {},
    hasRequired_objectPie;
function require_objectPie() {
    return (
        hasRequired_objectPie ||
            ((hasRequired_objectPie = 1),
            (_objectPie.f = {}.propertyIsEnumerable)),
        _objectPie
    );
}
var _toObject, hasRequired_toObject;
function require_toObject() {
    if (hasRequired_toObject) return _toObject;
    hasRequired_toObject = 1;
    var e = require_defined();
    return (
        (_toObject = function (t) {
            return Object(e(t));
        }),
        _toObject
    );
}
var _objectAssign, hasRequired_objectAssign;
function require_objectAssign() {
    if (hasRequired_objectAssign) return _objectAssign;
    hasRequired_objectAssign = 1;
    var e = require_descriptors(),
        t = require_objectKeys(),
        r = require_objectGops(),
        i = require_objectPie(),
        s = require_toObject(),
        a = require_iobject(),
        n = Object.assign;
    return (
        (_objectAssign =
            !n ||
            require_fails()(function () {
                var l = {},
                    o = {},
                    f = Symbol(),
                    y = 'abcdefghijklmnopqrst';
                return (
                    (l[f] = 7),
                    y.split('').forEach(function (E) {
                        o[E] = E;
                    }),
                    n({}, l)[f] != 7 || Object.keys(n({}, o)).join('') != y
                );
            })
                ? function (o, f) {
                      for (
                          var y = s(o),
                              E = arguments.length,
                              u = 1,
                              b = r.f,
                              _ = i.f;
                          E > u;

                      )
                          for (
                              var d = a(arguments[u++]),
                                  C = b ? t(d).concat(b(d)) : t(d),
                                  c = C.length,
                                  m = 0,
                                  p;
                              c > m;

                          )
                              (p = C[m++]),
                                  (!e || _.call(d, p)) && (y[p] = d[p]);
                      return y;
                  }
                : n),
        _objectAssign
    );
}
var hasRequiredEs6_object_assign;
function requireEs6_object_assign() {
    if (hasRequiredEs6_object_assign) return es6_object_assign;
    hasRequiredEs6_object_assign = 1;
    var e = require_export();
    return (
        e(e.S + e.F, 'Object', { assign: require_objectAssign() }),
        es6_object_assign
    );
}
var assign$1, hasRequiredAssign$1;
function requireAssign$1() {
    return (
        hasRequiredAssign$1 ||
            ((hasRequiredAssign$1 = 1),
            requireEs6_object_assign(),
            (assign$1 = require_core().Object.assign)),
        assign$1
    );
}
var assign, hasRequiredAssign;
function requireAssign() {
    return (
        hasRequiredAssign ||
            ((hasRequiredAssign = 1),
            (assign = { default: requireAssign$1(), __esModule: !0 })),
        assign
    );
}
var hasRequired_extends;
function require_extends() {
    if (hasRequired_extends) return _extends;
    (hasRequired_extends = 1), (_extends.__esModule = !0);
    var e = requireAssign(),
        t = r(e);
    function r(i) {
        return i && i.__esModule ? i : { default: i };
    }
    return (
        (_extends.default =
            t.default ||
            function (i) {
                for (var s = 1; s < arguments.length; s++) {
                    var a = arguments[s];
                    for (var n in a)
                        Object.prototype.hasOwnProperty.call(a, n) &&
                            (i[n] = a[n]);
                }
                return i;
            }),
        _extends
    );
}
var es6_object_getPrototypeOf = {},
    _objectGpo,
    hasRequired_objectGpo;
function require_objectGpo() {
    if (hasRequired_objectGpo) return _objectGpo;
    hasRequired_objectGpo = 1;
    var e = require_has(),
        t = require_toObject(),
        r = require_sharedKey()('IE_PROTO'),
        i = Object.prototype;
    return (
        (_objectGpo =
            Object.getPrototypeOf ||
            function (s) {
                return (
                    (s = t(s)),
                    e(s, r)
                        ? s[r]
                        : typeof s.constructor == 'function' &&
                            s instanceof s.constructor
                          ? s.constructor.prototype
                          : s instanceof Object
                            ? i
                            : null
                );
            }),
        _objectGpo
    );
}
var _objectSap, hasRequired_objectSap;
function require_objectSap() {
    if (hasRequired_objectSap) return _objectSap;
    hasRequired_objectSap = 1;
    var e = require_export(),
        t = require_core(),
        r = require_fails();
    return (
        (_objectSap = function (i, s) {
            var a = (t.Object || {})[i] || Object[i],
                n = {};
            (n[i] = s(a)),
                e(
                    e.S +
                        e.F *
                            r(function () {
                                a(1);
                            }),
                    'Object',
                    n
                );
        }),
        _objectSap
    );
}
var hasRequiredEs6_object_getPrototypeOf;
function requireEs6_object_getPrototypeOf() {
    if (hasRequiredEs6_object_getPrototypeOf) return es6_object_getPrototypeOf;
    hasRequiredEs6_object_getPrototypeOf = 1;
    var e = require_toObject(),
        t = require_objectGpo();
    return (
        require_objectSap()('getPrototypeOf', function () {
            return function (i) {
                return t(e(i));
            };
        }),
        es6_object_getPrototypeOf
    );
}
var getPrototypeOf$1, hasRequiredGetPrototypeOf$1;
function requireGetPrototypeOf$1() {
    return (
        hasRequiredGetPrototypeOf$1 ||
            ((hasRequiredGetPrototypeOf$1 = 1),
            requireEs6_object_getPrototypeOf(),
            (getPrototypeOf$1 = require_core().Object.getPrototypeOf)),
        getPrototypeOf$1
    );
}
var getPrototypeOf, hasRequiredGetPrototypeOf;
function requireGetPrototypeOf() {
    return (
        hasRequiredGetPrototypeOf ||
            ((hasRequiredGetPrototypeOf = 1),
            (getPrototypeOf = {
                default: requireGetPrototypeOf$1(),
                __esModule: !0,
            })),
        getPrototypeOf
    );
}
var classCallCheck = {},
    hasRequiredClassCallCheck;
function requireClassCallCheck() {
    return (
        hasRequiredClassCallCheck ||
            ((hasRequiredClassCallCheck = 1),
            (classCallCheck.__esModule = !0),
            (classCallCheck.default = function (e, t) {
                if (!(e instanceof t))
                    throw new TypeError('Cannot call a class as a function');
            })),
        classCallCheck
    );
}
var createClass = {},
    es6_object_defineProperty = {},
    hasRequiredEs6_object_defineProperty;
function requireEs6_object_defineProperty() {
    if (hasRequiredEs6_object_defineProperty) return es6_object_defineProperty;
    hasRequiredEs6_object_defineProperty = 1;
    var e = require_export();
    return (
        e(e.S + e.F * !require_descriptors(), 'Object', {
            defineProperty: require_objectDp().f,
        }),
        es6_object_defineProperty
    );
}
var defineProperty$1, hasRequiredDefineProperty$1;
function requireDefineProperty$1() {
    if (hasRequiredDefineProperty$1) return defineProperty$1;
    (hasRequiredDefineProperty$1 = 1), requireEs6_object_defineProperty();
    var e = require_core().Object;
    return (
        (defineProperty$1 = function (r, i, s) {
            return e.defineProperty(r, i, s);
        }),
        defineProperty$1
    );
}
var defineProperty, hasRequiredDefineProperty;
function requireDefineProperty() {
    return (
        hasRequiredDefineProperty ||
            ((hasRequiredDefineProperty = 1),
            (defineProperty = {
                default: requireDefineProperty$1(),
                __esModule: !0,
            })),
        defineProperty
    );
}
var hasRequiredCreateClass;
function requireCreateClass() {
    if (hasRequiredCreateClass) return createClass;
    (hasRequiredCreateClass = 1), (createClass.__esModule = !0);
    var e = requireDefineProperty(),
        t = r(e);
    function r(i) {
        return i && i.__esModule ? i : { default: i };
    }
    return (
        (createClass.default = (function () {
            function i(s, a) {
                for (var n = 0; n < a.length; n++) {
                    var l = a[n];
                    (l.enumerable = l.enumerable || !1),
                        (l.configurable = !0),
                        'value' in l && (l.writable = !0),
                        (0, t.default)(s, l.key, l);
                }
            }
            return function (s, a, n) {
                return a && i(s.prototype, a), n && i(s, n), s;
            };
        })()),
        createClass
    );
}
var possibleConstructorReturn = {},
    _typeof = {},
    es6_string_iterator = {},
    _stringAt,
    hasRequired_stringAt;
function require_stringAt() {
    if (hasRequired_stringAt) return _stringAt;
    hasRequired_stringAt = 1;
    var e = require_toInteger(),
        t = require_defined();
    return (
        (_stringAt = function (r) {
            return function (i, s) {
                var a = String(t(i)),
                    n = e(s),
                    l = a.length,
                    o,
                    f;
                return n < 0 || n >= l
                    ? r
                        ? ''
                        : void 0
                    : ((o = a.charCodeAt(n)),
                      o < 55296 ||
                      o > 56319 ||
                      n + 1 === l ||
                      (f = a.charCodeAt(n + 1)) < 56320 ||
                      f > 57343
                          ? r
                              ? a.charAt(n)
                              : o
                          : r
                            ? a.slice(n, n + 2)
                            : ((o - 55296) << 10) + (f - 56320) + 65536);
            };
        }),
        _stringAt
    );
}
var _redefine, hasRequired_redefine;
function require_redefine() {
    return (
        hasRequired_redefine ||
            ((hasRequired_redefine = 1), (_redefine = require_hide())),
        _redefine
    );
}
var _iterators, hasRequired_iterators;
function require_iterators() {
    return (
        hasRequired_iterators ||
            ((hasRequired_iterators = 1), (_iterators = {})),
        _iterators
    );
}
var _objectDps, hasRequired_objectDps;
function require_objectDps() {
    if (hasRequired_objectDps) return _objectDps;
    hasRequired_objectDps = 1;
    var e = require_objectDp(),
        t = require_anObject(),
        r = require_objectKeys();
    return (
        (_objectDps = require_descriptors()
            ? Object.defineProperties
            : function (s, a) {
                  t(s);
                  for (var n = r(a), l = n.length, o = 0, f; l > o; )
                      e.f(s, (f = n[o++]), a[f]);
                  return s;
              }),
        _objectDps
    );
}
var _html, hasRequired_html;
function require_html() {
    if (hasRequired_html) return _html;
    hasRequired_html = 1;
    var e = require_global().document;
    return (_html = e && e.documentElement), _html;
}
var _objectCreate, hasRequired_objectCreate;
function require_objectCreate() {
    if (hasRequired_objectCreate) return _objectCreate;
    hasRequired_objectCreate = 1;
    var e = require_anObject(),
        t = require_objectDps(),
        r = require_enumBugKeys(),
        i = require_sharedKey()('IE_PROTO'),
        s = function () {},
        a = 'prototype',
        n = function () {
            var l = require_domCreate()('iframe'),
                o = r.length,
                f = '<',
                y = '>',
                E;
            for (
                l.style.display = 'none',
                    require_html().appendChild(l),
                    l.src = 'javascript:',
                    E = l.contentWindow.document,
                    E.open(),
                    E.write(
                        f +
                            'script' +
                            y +
                            'document.F=Object' +
                            f +
                            '/script' +
                            y
                    ),
                    E.close(),
                    n = E.F;
                o--;

            )
                delete n[a][r[o]];
            return n();
        };
    return (
        (_objectCreate =
            Object.create ||
            function (o, f) {
                var y;
                return (
                    o !== null
                        ? ((s[a] = e(o)),
                          (y = new s()),
                          (s[a] = null),
                          (y[i] = o))
                        : (y = n()),
                    f === void 0 ? y : t(y, f)
                );
            }),
        _objectCreate
    );
}
var _wks = { exports: {} },
    hasRequired_wks;
function require_wks() {
    if (hasRequired_wks) return _wks.exports;
    hasRequired_wks = 1;
    var e = require_shared()('wks'),
        t = require_uid(),
        r = require_global().Symbol,
        i = typeof r == 'function',
        s = (_wks.exports = function (a) {
            return e[a] || (e[a] = (i && r[a]) || (i ? r : t)('Symbol.' + a));
        });
    return (s.store = e), _wks.exports;
}
var _setToStringTag, hasRequired_setToStringTag;
function require_setToStringTag() {
    if (hasRequired_setToStringTag) return _setToStringTag;
    hasRequired_setToStringTag = 1;
    var e = require_objectDp().f,
        t = require_has(),
        r = require_wks()('toStringTag');
    return (
        (_setToStringTag = function (i, s, a) {
            i &&
                !t((i = a ? i : i.prototype), r) &&
                e(i, r, { configurable: !0, value: s });
        }),
        _setToStringTag
    );
}
var _iterCreate, hasRequired_iterCreate;
function require_iterCreate() {
    if (hasRequired_iterCreate) return _iterCreate;
    hasRequired_iterCreate = 1;
    var e = require_objectCreate(),
        t = require_propertyDesc(),
        r = require_setToStringTag(),
        i = {};
    return (
        require_hide()(i, require_wks()('iterator'), function () {
            return this;
        }),
        (_iterCreate = function (s, a, n) {
            (s.prototype = e(i, { next: t(1, n) })), r(s, a + ' Iterator');
        }),
        _iterCreate
    );
}
var _iterDefine, hasRequired_iterDefine;
function require_iterDefine() {
    if (hasRequired_iterDefine) return _iterDefine;
    hasRequired_iterDefine = 1;
    var e = require_library(),
        t = require_export(),
        r = require_redefine(),
        i = require_hide(),
        s = require_iterators(),
        a = require_iterCreate(),
        n = require_setToStringTag(),
        l = require_objectGpo(),
        o = require_wks()('iterator'),
        f = !([].keys && 'next' in [].keys()),
        y = '@@iterator',
        E = 'keys',
        u = 'values',
        b = function () {
            return this;
        };
    return (
        (_iterDefine = function (_, d, C, c, m, p, g) {
            a(C, d, c);
            var P = function (M) {
                    if (!f && M in D) return D[M];
                    switch (M) {
                        case E:
                            return function () {
                                return new C(this, M);
                            };
                        case u:
                            return function () {
                                return new C(this, M);
                            };
                    }
                    return function () {
                        return new C(this, M);
                    };
                },
                A = d + ' Iterator',
                F = m == u,
                T = !1,
                D = _.prototype,
                L = D[o] || D[y] || (m && D[m]),
                q = L || P(m),
                V = m ? (F ? P('entries') : q) : void 0,
                j = (d == 'Array' && D.entries) || L,
                G,
                B,
                S;
            if (
                (j &&
                    ((S = l(j.call(new _()))),
                    S !== Object.prototype &&
                        S.next &&
                        (n(S, A, !0),
                        !e && typeof S[o] != 'function' && i(S, o, b))),
                F &&
                    L &&
                    L.name !== u &&
                    ((T = !0),
                    (q = function () {
                        return L.call(this);
                    })),
                (!e || g) && (f || T || !D[o]) && i(D, o, q),
                (s[d] = q),
                (s[A] = b),
                m)
            )
                if (
                    ((G = {
                        values: F ? q : P(u),
                        keys: p ? q : P(E),
                        entries: V,
                    }),
                    g)
                )
                    for (B in G) B in D || r(D, B, G[B]);
                else t(t.P + t.F * (f || T), d, G);
            return G;
        }),
        _iterDefine
    );
}
var hasRequiredEs6_string_iterator;
function requireEs6_string_iterator() {
    if (hasRequiredEs6_string_iterator) return es6_string_iterator;
    hasRequiredEs6_string_iterator = 1;
    var e = require_stringAt()(!0);
    return (
        require_iterDefine()(
            String,
            'String',
            function (t) {
                (this._t = String(t)), (this._i = 0);
            },
            function () {
                var t = this._t,
                    r = this._i,
                    i;
                return r >= t.length
                    ? { value: void 0, done: !0 }
                    : ((i = e(t, r)),
                      (this._i += i.length),
                      { value: i, done: !1 });
            }
        ),
        es6_string_iterator
    );
}
var web_dom_iterable = {},
    _addToUnscopables,
    hasRequired_addToUnscopables;
function require_addToUnscopables() {
    return (
        hasRequired_addToUnscopables ||
            ((hasRequired_addToUnscopables = 1),
            (_addToUnscopables = function () {})),
        _addToUnscopables
    );
}
var _iterStep, hasRequired_iterStep;
function require_iterStep() {
    return (
        hasRequired_iterStep ||
            ((hasRequired_iterStep = 1),
            (_iterStep = function (e, t) {
                return { value: t, done: !!e };
            })),
        _iterStep
    );
}
var es6_array_iterator, hasRequiredEs6_array_iterator;
function requireEs6_array_iterator() {
    if (hasRequiredEs6_array_iterator) return es6_array_iterator;
    hasRequiredEs6_array_iterator = 1;
    var e = require_addToUnscopables(),
        t = require_iterStep(),
        r = require_iterators(),
        i = require_toIobject();
    return (
        (es6_array_iterator = require_iterDefine()(
            Array,
            'Array',
            function (s, a) {
                (this._t = i(s)), (this._i = 0), (this._k = a);
            },
            function () {
                var s = this._t,
                    a = this._k,
                    n = this._i++;
                return !s || n >= s.length
                    ? ((this._t = void 0), t(1))
                    : a == 'keys'
                      ? t(0, n)
                      : a == 'values'
                        ? t(0, s[n])
                        : t(0, [n, s[n]]);
            },
            'values'
        )),
        (r.Arguments = r.Array),
        e('keys'),
        e('values'),
        e('entries'),
        es6_array_iterator
    );
}
var hasRequiredWeb_dom_iterable;
function requireWeb_dom_iterable() {
    if (hasRequiredWeb_dom_iterable) return web_dom_iterable;
    (hasRequiredWeb_dom_iterable = 1), requireEs6_array_iterator();
    for (
        var e = require_global(),
            t = require_hide(),
            r = require_iterators(),
            i = require_wks()('toStringTag'),
            s =
                'CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList'.split(
                    ','
                ),
            a = 0;
        a < s.length;
        a++
    ) {
        var n = s[a],
            l = e[n],
            o = l && l.prototype;
        o && !o[i] && t(o, i, n), (r[n] = r.Array);
    }
    return web_dom_iterable;
}
var _wksExt = {},
    hasRequired_wksExt;
function require_wksExt() {
    return (
        hasRequired_wksExt ||
            ((hasRequired_wksExt = 1), (_wksExt.f = require_wks())),
        _wksExt
    );
}
var iterator$1, hasRequiredIterator$1;
function requireIterator$1() {
    return (
        hasRequiredIterator$1 ||
            ((hasRequiredIterator$1 = 1),
            requireEs6_string_iterator(),
            requireWeb_dom_iterable(),
            (iterator$1 = require_wksExt().f('iterator'))),
        iterator$1
    );
}
var iterator, hasRequiredIterator;
function requireIterator() {
    return (
        hasRequiredIterator ||
            ((hasRequiredIterator = 1),
            (iterator = { default: requireIterator$1(), __esModule: !0 })),
        iterator
    );
}
var es6_symbol = {},
    _meta = { exports: {} },
    hasRequired_meta;
function require_meta() {
    if (hasRequired_meta) return _meta.exports;
    hasRequired_meta = 1;
    var e = require_uid()('meta'),
        t = require_isObject(),
        r = require_has(),
        i = require_objectDp().f,
        s = 0,
        a =
            Object.isExtensible ||
            function () {
                return !0;
            },
        n = !require_fails()(function () {
            return a(Object.preventExtensions({}));
        }),
        l = function (u) {
            i(u, e, { value: { i: 'O' + ++s, w: {} } });
        },
        o = function (u, b) {
            if (!t(u))
                return typeof u == 'symbol'
                    ? u
                    : (typeof u == 'string' ? 'S' : 'P') + u;
            if (!r(u, e)) {
                if (!a(u)) return 'F';
                if (!b) return 'E';
                l(u);
            }
            return u[e].i;
        },
        f = function (u, b) {
            if (!r(u, e)) {
                if (!a(u)) return !0;
                if (!b) return !1;
                l(u);
            }
            return u[e].w;
        },
        y = function (u) {
            return n && E.NEED && a(u) && !r(u, e) && l(u), u;
        },
        E = (_meta.exports = {
            KEY: e,
            NEED: !1,
            fastKey: o,
            getWeak: f,
            onFreeze: y,
        });
    return _meta.exports;
}
var _wksDefine, hasRequired_wksDefine;
function require_wksDefine() {
    if (hasRequired_wksDefine) return _wksDefine;
    hasRequired_wksDefine = 1;
    var e = require_global(),
        t = require_core(),
        r = require_library(),
        i = require_wksExt(),
        s = require_objectDp().f;
    return (
        (_wksDefine = function (a) {
            var n = t.Symbol || (t.Symbol = r ? {} : e.Symbol || {});
            a.charAt(0) != '_' && !(a in n) && s(n, a, { value: i.f(a) });
        }),
        _wksDefine
    );
}
var _enumKeys, hasRequired_enumKeys;
function require_enumKeys() {
    if (hasRequired_enumKeys) return _enumKeys;
    hasRequired_enumKeys = 1;
    var e = require_objectKeys(),
        t = require_objectGops(),
        r = require_objectPie();
    return (
        (_enumKeys = function (i) {
            var s = e(i),
                a = t.f;
            if (a)
                for (var n = a(i), l = r.f, o = 0, f; n.length > o; )
                    l.call(i, (f = n[o++])) && s.push(f);
            return s;
        }),
        _enumKeys
    );
}
var _isArray, hasRequired_isArray;
function require_isArray() {
    if (hasRequired_isArray) return _isArray;
    hasRequired_isArray = 1;
    var e = require_cof();
    return (
        (_isArray =
            Array.isArray ||
            function (r) {
                return e(r) == 'Array';
            }),
        _isArray
    );
}
var _objectGopnExt = {},
    _objectGopn = {},
    hasRequired_objectGopn;
function require_objectGopn() {
    if (hasRequired_objectGopn) return _objectGopn;
    hasRequired_objectGopn = 1;
    var e = require_objectKeysInternal(),
        t = require_enumBugKeys().concat('length', 'prototype');
    return (
        (_objectGopn.f =
            Object.getOwnPropertyNames ||
            function (i) {
                return e(i, t);
            }),
        _objectGopn
    );
}
var hasRequired_objectGopnExt;
function require_objectGopnExt() {
    if (hasRequired_objectGopnExt) return _objectGopnExt;
    hasRequired_objectGopnExt = 1;
    var e = require_toIobject(),
        t = require_objectGopn().f,
        r = {}.toString,
        i =
            typeof window == 'object' && window && Object.getOwnPropertyNames
                ? Object.getOwnPropertyNames(window)
                : [],
        s = function (a) {
            try {
                return t(a);
            } catch {
                return i.slice();
            }
        };
    return (
        (_objectGopnExt.f = function (n) {
            return i && r.call(n) == '[object Window]' ? s(n) : t(e(n));
        }),
        _objectGopnExt
    );
}
var _objectGopd = {},
    hasRequired_objectGopd;
function require_objectGopd() {
    if (hasRequired_objectGopd) return _objectGopd;
    hasRequired_objectGopd = 1;
    var e = require_objectPie(),
        t = require_propertyDesc(),
        r = require_toIobject(),
        i = require_toPrimitive(),
        s = require_has(),
        a = require_ie8DomDefine(),
        n = Object.getOwnPropertyDescriptor;
    return (
        (_objectGopd.f = require_descriptors()
            ? n
            : function (o, f) {
                  if (((o = r(o)), (f = i(f, !0)), a))
                      try {
                          return n(o, f);
                      } catch {}
                  if (s(o, f)) return t(!e.f.call(o, f), o[f]);
              }),
        _objectGopd
    );
}
var hasRequiredEs6_symbol;
function requireEs6_symbol() {
    if (hasRequiredEs6_symbol) return es6_symbol;
    hasRequiredEs6_symbol = 1;
    var e = require_global(),
        t = require_has(),
        r = require_descriptors(),
        i = require_export(),
        s = require_redefine(),
        a = require_meta().KEY,
        n = require_fails(),
        l = require_shared(),
        o = require_setToStringTag(),
        f = require_uid(),
        y = require_wks(),
        E = require_wksExt(),
        u = require_wksDefine(),
        b = require_enumKeys(),
        _ = require_isArray(),
        d = require_anObject(),
        C = require_isObject(),
        c = require_toObject(),
        m = require_toIobject(),
        p = require_toPrimitive(),
        g = require_propertyDesc(),
        P = require_objectCreate(),
        A = require_objectGopnExt(),
        F = require_objectGopd(),
        T = require_objectGops(),
        D = require_objectDp(),
        L = require_objectKeys(),
        q = F.f,
        V = D.f,
        j = A.f,
        G = e.Symbol,
        B = e.JSON,
        S = B && B.stringify,
        M = 'prototype',
        x = y('_hidden'),
        k = y('toPrimitive'),
        R = {}.propertyIsEnumerable,
        I = l('symbol-registry'),
        O = l('symbols'),
        $ = l('op-symbols'),
        H = Object[M],
        X = typeof G == 'function' && !!T.f,
        Z = e.QObject,
        U = !Z || !Z[M] || !Z[M].findChild,
        te =
            r &&
            n(function () {
                return (
                    P(
                        V({}, 'a', {
                            get: function () {
                                return V(this, 'a', { value: 7 }).a;
                            },
                        })
                    ).a != 7
                );
            })
                ? function (Y, z, W) {
                      var K = q(H, z);
                      K && delete H[z], V(Y, z, W), K && Y !== H && V(H, z, K);
                  }
                : V,
        ne = function (Y) {
            var z = (O[Y] = P(G[M]));
            return (z._k = Y), z;
        },
        re =
            X && typeof G.iterator == 'symbol'
                ? function (Y) {
                      return typeof Y == 'symbol';
                  }
                : function (Y) {
                      return Y instanceof G;
                  },
        Q = function (z, W, K) {
            return (
                z === H && Q($, W, K),
                d(z),
                (W = p(W, !0)),
                d(K),
                t(O, W)
                    ? (K.enumerable
                          ? (t(z, x) && z[x][W] && (z[x][W] = !1),
                            (K = P(K, { enumerable: g(0, !1) })))
                          : (t(z, x) || V(z, x, g(1, {})), (z[x][W] = !0)),
                      te(z, W, K))
                    : V(z, W, K)
            );
        },
        ae = function (z, W) {
            d(z);
            for (var K = b((W = m(W))), ee = 0, ie = K.length, he; ie > ee; )
                Q(z, (he = K[ee++]), W[he]);
            return z;
        },
        J = function (z, W) {
            return W === void 0 ? P(z) : ae(P(z), W);
        },
        N = function (z) {
            var W = R.call(this, (z = p(z, !0)));
            return this === H && t(O, z) && !t($, z)
                ? !1
                : W || !t(this, z) || !t(O, z) || (t(this, x) && this[x][z])
                  ? W
                  : !0;
        },
        le = function (z, W) {
            if (
                ((z = m(z)), (W = p(W, !0)), !(z === H && t(O, W) && !t($, W)))
            ) {
                var K = q(z, W);
                return (
                    K &&
                        t(O, W) &&
                        !(t(z, x) && z[x][W]) &&
                        (K.enumerable = !0),
                    K
                );
            }
        },
        ce = function (z) {
            for (var W = j(m(z)), K = [], ee = 0, ie; W.length > ee; )
                !t(O, (ie = W[ee++])) && ie != x && ie != a && K.push(ie);
            return K;
        },
        fe = function (z) {
            for (
                var W = z === H, K = j(W ? $ : m(z)), ee = [], ie = 0, he;
                K.length > ie;

            )
                t(O, (he = K[ie++])) && (!W || t(H, he)) && ee.push(O[he]);
            return ee;
        };
    X ||
        ((G = function () {
            if (this instanceof G)
                throw TypeError('Symbol is not a constructor!');
            var z = f(arguments.length > 0 ? arguments[0] : void 0),
                W = function (K) {
                    this === H && W.call($, K),
                        t(this, x) && t(this[x], z) && (this[x][z] = !1),
                        te(this, z, g(1, K));
                };
            return r && U && te(H, z, { configurable: !0, set: W }), ne(z);
        }),
        s(G[M], 'toString', function () {
            return this._k;
        }),
        (F.f = le),
        (D.f = Q),
        (require_objectGopn().f = A.f = ce),
        (require_objectPie().f = N),
        (T.f = fe),
        r && !require_library() && s(H, 'propertyIsEnumerable', N, !0),
        (E.f = function (Y) {
            return ne(y(Y));
        })),
        i(i.G + i.W + i.F * !X, { Symbol: G });
    for (
        var oe =
                'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'.split(
                    ','
                ),
            pe = 0;
        oe.length > pe;

    )
        y(oe[pe++]);
    for (var ue = L(y.store), se = 0; ue.length > se; ) u(ue[se++]);
    i(i.S + i.F * !X, 'Symbol', {
        for: function (Y) {
            return t(I, (Y += '')) ? I[Y] : (I[Y] = G(Y));
        },
        keyFor: function (z) {
            if (!re(z)) throw TypeError(z + ' is not a symbol!');
            for (var W in I) if (I[W] === z) return W;
        },
        useSetter: function () {
            U = !0;
        },
        useSimple: function () {
            U = !1;
        },
    }),
        i(i.S + i.F * !X, 'Object', {
            create: J,
            defineProperty: Q,
            defineProperties: ae,
            getOwnPropertyDescriptor: le,
            getOwnPropertyNames: ce,
            getOwnPropertySymbols: fe,
        });
    var me = n(function () {
        T.f(1);
    });
    return (
        i(i.S + i.F * me, 'Object', {
            getOwnPropertySymbols: function (z) {
                return T.f(c(z));
            },
        }),
        B &&
            i(
                i.S +
                    i.F *
                        (!X ||
                            n(function () {
                                var Y = G();
                                return (
                                    S([Y]) != '[null]' ||
                                    S({ a: Y }) != '{}' ||
                                    S(Object(Y)) != '{}'
                                );
                            })),
                'JSON',
                {
                    stringify: function (z) {
                        for (var W = [z], K = 1, ee, ie; arguments.length > K; )
                            W.push(arguments[K++]);
                        if (
                            ((ie = ee = W[1]),
                            !((!C(ee) && z === void 0) || re(z)))
                        )
                            return (
                                _(ee) ||
                                    (ee = function (he, de) {
                                        if (
                                            (typeof ie == 'function' &&
                                                (de = ie.call(this, he, de)),
                                            !re(de))
                                        )
                                            return de;
                                    }),
                                (W[1] = ee),
                                S.apply(B, W)
                            );
                    },
                }
            ),
        G[M][k] || require_hide()(G[M], k, G[M].valueOf),
        o(G, 'Symbol'),
        o(Math, 'Math', !0),
        o(e.JSON, 'JSON', !0),
        es6_symbol
    );
}
var es7_symbol_asyncIterator = {},
    hasRequiredEs7_symbol_asyncIterator;
function requireEs7_symbol_asyncIterator() {
    return (
        hasRequiredEs7_symbol_asyncIterator ||
            ((hasRequiredEs7_symbol_asyncIterator = 1),
            require_wksDefine()('asyncIterator')),
        es7_symbol_asyncIterator
    );
}
var es7_symbol_observable = {},
    hasRequiredEs7_symbol_observable;
function requireEs7_symbol_observable() {
    return (
        hasRequiredEs7_symbol_observable ||
            ((hasRequiredEs7_symbol_observable = 1),
            require_wksDefine()('observable')),
        es7_symbol_observable
    );
}
var symbol$1, hasRequiredSymbol$1;
function requireSymbol$1() {
    return (
        hasRequiredSymbol$1 ||
            ((hasRequiredSymbol$1 = 1),
            requireEs6_symbol(),
            requireEs7_symbol_asyncIterator(),
            requireEs7_symbol_observable(),
            (symbol$1 = require_core().Symbol)),
        symbol$1
    );
}
var symbol, hasRequiredSymbol;
function requireSymbol() {
    return (
        hasRequiredSymbol ||
            ((hasRequiredSymbol = 1),
            (symbol = { default: requireSymbol$1(), __esModule: !0 })),
        symbol
    );
}
var hasRequired_typeof;
function require_typeof() {
    if (hasRequired_typeof) return _typeof;
    (hasRequired_typeof = 1), (_typeof.__esModule = !0);
    var e = requireIterator(),
        t = a(e),
        r = requireSymbol(),
        i = a(r),
        s =
            typeof i.default == 'function' && typeof t.default == 'symbol'
                ? function (n) {
                      return typeof n;
                  }
                : function (n) {
                      return n &&
                          typeof i.default == 'function' &&
                          n.constructor === i.default &&
                          n !== i.default.prototype
                          ? 'symbol'
                          : typeof n;
                  };
    function a(n) {
        return n && n.__esModule ? n : { default: n };
    }
    return (
        (_typeof.default =
            typeof i.default == 'function' && s(t.default) === 'symbol'
                ? function (n) {
                      return typeof n > 'u' ? 'undefined' : s(n);
                  }
                : function (n) {
                      return n &&
                          typeof i.default == 'function' &&
                          n.constructor === i.default &&
                          n !== i.default.prototype
                          ? 'symbol'
                          : typeof n > 'u'
                            ? 'undefined'
                            : s(n);
                  }),
        _typeof
    );
}
var hasRequiredPossibleConstructorReturn;
function requirePossibleConstructorReturn() {
    if (hasRequiredPossibleConstructorReturn) return possibleConstructorReturn;
    (hasRequiredPossibleConstructorReturn = 1),
        (possibleConstructorReturn.__esModule = !0);
    var e = require_typeof(),
        t = r(e);
    function r(i) {
        return i && i.__esModule ? i : { default: i };
    }
    return (
        (possibleConstructorReturn.default = function (i, s) {
            if (!i)
                throw new ReferenceError(
                    "this hasn't been initialised - super() hasn't been called"
                );
            return s &&
                ((typeof s > 'u' ? 'undefined' : (0, t.default)(s)) ===
                    'object' ||
                    typeof s == 'function')
                ? s
                : i;
        }),
        possibleConstructorReturn
    );
}
var inherits = {},
    es6_object_setPrototypeOf = {},
    _setProto,
    hasRequired_setProto;
function require_setProto() {
    if (hasRequired_setProto) return _setProto;
    hasRequired_setProto = 1;
    var e = require_isObject(),
        t = require_anObject(),
        r = function (i, s) {
            if ((t(i), !e(s) && s !== null))
                throw TypeError(s + ": can't set as prototype!");
        };
    return (
        (_setProto = {
            set:
                Object.setPrototypeOf ||
                ('__proto__' in {}
                    ? (function (i, s, a) {
                          try {
                              (a = require_ctx()(
                                  Function.call,
                                  require_objectGopd().f(
                                      Object.prototype,
                                      '__proto__'
                                  ).set,
                                  2
                              )),
                                  a(i, []),
                                  (s = !(i instanceof Array));
                          } catch {
                              s = !0;
                          }
                          return function (l, o) {
                              return (
                                  r(l, o), s ? (l.__proto__ = o) : a(l, o), l
                              );
                          };
                      })({}, !1)
                    : void 0),
            check: r,
        }),
        _setProto
    );
}
var hasRequiredEs6_object_setPrototypeOf;
function requireEs6_object_setPrototypeOf() {
    if (hasRequiredEs6_object_setPrototypeOf) return es6_object_setPrototypeOf;
    hasRequiredEs6_object_setPrototypeOf = 1;
    var e = require_export();
    return (
        e(e.S, 'Object', { setPrototypeOf: require_setProto().set }),
        es6_object_setPrototypeOf
    );
}
var setPrototypeOf$1, hasRequiredSetPrototypeOf$1;
function requireSetPrototypeOf$1() {
    return (
        hasRequiredSetPrototypeOf$1 ||
            ((hasRequiredSetPrototypeOf$1 = 1),
            requireEs6_object_setPrototypeOf(),
            (setPrototypeOf$1 = require_core().Object.setPrototypeOf)),
        setPrototypeOf$1
    );
}
var setPrototypeOf, hasRequiredSetPrototypeOf;
function requireSetPrototypeOf() {
    return (
        hasRequiredSetPrototypeOf ||
            ((hasRequiredSetPrototypeOf = 1),
            (setPrototypeOf = {
                default: requireSetPrototypeOf$1(),
                __esModule: !0,
            })),
        setPrototypeOf
    );
}
var es6_object_create = {},
    hasRequiredEs6_object_create;
function requireEs6_object_create() {
    if (hasRequiredEs6_object_create) return es6_object_create;
    hasRequiredEs6_object_create = 1;
    var e = require_export();
    return (
        e(e.S, 'Object', { create: require_objectCreate() }), es6_object_create
    );
}
var create$1, hasRequiredCreate$1;
function requireCreate$1() {
    if (hasRequiredCreate$1) return create$1;
    (hasRequiredCreate$1 = 1), requireEs6_object_create();
    var e = require_core().Object;
    return (
        (create$1 = function (r, i) {
            return e.create(r, i);
        }),
        create$1
    );
}
var create, hasRequiredCreate;
function requireCreate() {
    return (
        hasRequiredCreate ||
            ((hasRequiredCreate = 1),
            (create = { default: requireCreate$1(), __esModule: !0 })),
        create
    );
}
var hasRequiredInherits;
function requireInherits() {
    if (hasRequiredInherits) return inherits;
    (hasRequiredInherits = 1), (inherits.__esModule = !0);
    var e = requireSetPrototypeOf(),
        t = n(e),
        r = requireCreate(),
        i = n(r),
        s = require_typeof(),
        a = n(s);
    function n(l) {
        return l && l.__esModule ? l : { default: l };
    }
    return (
        (inherits.default = function (l, o) {
            if (typeof o != 'function' && o !== null)
                throw new TypeError(
                    'Super expression must either be null or a function, not ' +
                        (typeof o > 'u' ? 'undefined' : (0, a.default)(o))
                );
            (l.prototype = (0, i.default)(o && o.prototype, {
                constructor: {
                    value: l,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0,
                },
            })),
                o && (t.default ? (0, t.default)(l, o) : (l.__proto__ = o));
        }),
        inherits
    );
}
var lottie$1 = { exports: {} },
    lottie = lottie$1.exports,
    hasRequiredLottie;
function requireLottie() {
    return (
        hasRequiredLottie ||
            ((hasRequiredLottie = 1),
            (function (module, exports) {
                typeof navigator < 'u' &&
                    (function (e, t) {
                        module.exports = t();
                    })(lottie, function () {
                        var svgNS = 'http://www.w3.org/2000/svg',
                            locationHref = '',
                            _useWebWorker = !1,
                            initialDefaultFrame = -999999,
                            setWebWorker = function (t) {
                                _useWebWorker = !!t;
                            },
                            getWebWorker = function () {
                                return _useWebWorker;
                            },
                            setLocationHref = function (t) {
                                locationHref = t;
                            },
                            getLocationHref = function () {
                                return locationHref;
                            };
                        function createTag(e) {
                            return document.createElement(e);
                        }
                        function extendPrototype(e, t) {
                            var r,
                                i = e.length,
                                s;
                            for (r = 0; r < i; r += 1) {
                                s = e[r].prototype;
                                for (var a in s)
                                    Object.prototype.hasOwnProperty.call(
                                        s,
                                        a
                                    ) && (t.prototype[a] = s[a]);
                            }
                        }
                        function getDescriptor(e, t) {
                            return Object.getOwnPropertyDescriptor(e, t);
                        }
                        function createProxyFunction(e) {
                            function t() {}
                            return (t.prototype = e), t;
                        }
                        var audioControllerFactory = (function () {
                                function e(t) {
                                    (this.audios = []),
                                        (this.audioFactory = t),
                                        (this._volume = 1),
                                        (this._isMuted = !1);
                                }
                                return (
                                    (e.prototype = {
                                        addAudio: function (r) {
                                            this.audios.push(r);
                                        },
                                        pause: function () {
                                            var r,
                                                i = this.audios.length;
                                            for (r = 0; r < i; r += 1)
                                                this.audios[r].pause();
                                        },
                                        resume: function () {
                                            var r,
                                                i = this.audios.length;
                                            for (r = 0; r < i; r += 1)
                                                this.audios[r].resume();
                                        },
                                        setRate: function (r) {
                                            var i,
                                                s = this.audios.length;
                                            for (i = 0; i < s; i += 1)
                                                this.audios[i].setRate(r);
                                        },
                                        createAudio: function (r) {
                                            return this.audioFactory
                                                ? this.audioFactory(r)
                                                : window.Howl
                                                  ? new window.Howl({
                                                        src: [r],
                                                    })
                                                  : {
                                                        isPlaying: !1,
                                                        play: function () {
                                                            this.isPlaying = !0;
                                                        },
                                                        seek: function () {
                                                            this.isPlaying = !1;
                                                        },
                                                        playing: function () {},
                                                        rate: function () {},
                                                        setVolume:
                                                            function () {},
                                                    };
                                        },
                                        setAudioFactory: function (r) {
                                            this.audioFactory = r;
                                        },
                                        setVolume: function (r) {
                                            (this._volume = r),
                                                this._updateVolume();
                                        },
                                        mute: function () {
                                            (this._isMuted = !0),
                                                this._updateVolume();
                                        },
                                        unmute: function () {
                                            (this._isMuted = !1),
                                                this._updateVolume();
                                        },
                                        getVolume: function () {
                                            return this._volume;
                                        },
                                        _updateVolume: function () {
                                            var r,
                                                i = this.audios.length;
                                            for (r = 0; r < i; r += 1)
                                                this.audios[r].volume(
                                                    this._volume *
                                                        (this._isMuted ? 0 : 1)
                                                );
                                        },
                                    }),
                                    function () {
                                        return new e();
                                    }
                                );
                            })(),
                            createTypedArray = (function () {
                                function e(r, i) {
                                    var s = 0,
                                        a = [],
                                        n;
                                    switch (r) {
                                        case 'int16':
                                        case 'uint8c':
                                            n = 1;
                                            break;
                                        default:
                                            n = 1.1;
                                            break;
                                    }
                                    for (s = 0; s < i; s += 1) a.push(n);
                                    return a;
                                }
                                function t(r, i) {
                                    return r === 'float32'
                                        ? new Float32Array(i)
                                        : r === 'int16'
                                          ? new Int16Array(i)
                                          : r === 'uint8c'
                                            ? new Uint8ClampedArray(i)
                                            : e(r, i);
                                }
                                return typeof Uint8ClampedArray == 'function' &&
                                    typeof Float32Array == 'function'
                                    ? t
                                    : e;
                            })();
                        function createSizedArray(e) {
                            return Array.apply(null, { length: e });
                        }
                        function _typeof$6(e) {
                            '@babel/helpers - typeof';
                            return (
                                typeof Symbol == 'function' &&
                                typeof Symbol.iterator == 'symbol'
                                    ? (_typeof$6 = function (r) {
                                          return typeof r;
                                      })
                                    : (_typeof$6 = function (r) {
                                          return r &&
                                              typeof Symbol == 'function' &&
                                              r.constructor === Symbol &&
                                              r !== Symbol.prototype
                                              ? 'symbol'
                                              : typeof r;
                                      }),
                                _typeof$6(e)
                            );
                        }
                        var subframeEnabled = !0,
                            expressionsPlugin = null,
                            expressionsInterfaces = null,
                            idPrefix$1 = '',
                            isSafari = /^((?!chrome|android).)*safari/i.test(
                                navigator.userAgent
                            ),
                            bmPow = Math.pow,
                            bmSqrt = Math.sqrt,
                            bmFloor = Math.floor,
                            bmMax = Math.max,
                            bmMin = Math.min,
                            BMMath = {};
                        (function () {
                            var e = [
                                    'abs',
                                    'acos',
                                    'acosh',
                                    'asin',
                                    'asinh',
                                    'atan',
                                    'atanh',
                                    'atan2',
                                    'ceil',
                                    'cbrt',
                                    'expm1',
                                    'clz32',
                                    'cos',
                                    'cosh',
                                    'exp',
                                    'floor',
                                    'fround',
                                    'hypot',
                                    'imul',
                                    'log',
                                    'log1p',
                                    'log2',
                                    'log10',
                                    'max',
                                    'min',
                                    'pow',
                                    'random',
                                    'round',
                                    'sign',
                                    'sin',
                                    'sinh',
                                    'sqrt',
                                    'tan',
                                    'tanh',
                                    'trunc',
                                    'E',
                                    'LN10',
                                    'LN2',
                                    'LOG10E',
                                    'LOG2E',
                                    'PI',
                                    'SQRT1_2',
                                    'SQRT2',
                                ],
                                t,
                                r = e.length;
                            for (t = 0; t < r; t += 1)
                                BMMath[e[t]] = Math[e[t]];
                        })(),
                            (BMMath.random = Math.random),
                            (BMMath.abs = function (e) {
                                var t = _typeof$6(e);
                                if (t === 'object' && e.length) {
                                    var r = createSizedArray(e.length),
                                        i,
                                        s = e.length;
                                    for (i = 0; i < s; i += 1)
                                        r[i] = Math.abs(e[i]);
                                    return r;
                                }
                                return Math.abs(e);
                            });
                        var defaultCurveSegments = 150,
                            degToRads = Math.PI / 180,
                            roundCorner = 0.5519;
                        function styleDiv(e) {
                            (e.style.position = 'absolute'),
                                (e.style.top = 0),
                                (e.style.left = 0),
                                (e.style.display = 'block'),
                                (e.style.transformOrigin = '0 0'),
                                (e.style.webkitTransformOrigin = '0 0'),
                                (e.style.backfaceVisibility = 'visible'),
                                (e.style.webkitBackfaceVisibility = 'visible'),
                                (e.style.transformStyle = 'preserve-3d'),
                                (e.style.webkitTransformStyle = 'preserve-3d'),
                                (e.style.mozTransformStyle = 'preserve-3d');
                        }
                        function BMEnterFrameEvent(e, t, r, i) {
                            (this.type = e),
                                (this.currentTime = t),
                                (this.totalTime = r),
                                (this.direction = i < 0 ? -1 : 1);
                        }
                        function BMCompleteEvent(e, t) {
                            (this.type = e), (this.direction = t < 0 ? -1 : 1);
                        }
                        function BMCompleteLoopEvent(e, t, r, i) {
                            (this.type = e),
                                (this.currentLoop = r),
                                (this.totalLoops = t),
                                (this.direction = i < 0 ? -1 : 1);
                        }
                        function BMSegmentStartEvent(e, t, r) {
                            (this.type = e),
                                (this.firstFrame = t),
                                (this.totalFrames = r);
                        }
                        function BMDestroyEvent(e, t) {
                            (this.type = e), (this.target = t);
                        }
                        function BMRenderFrameErrorEvent(e, t) {
                            (this.type = 'renderFrameError'),
                                (this.nativeError = e),
                                (this.currentTime = t);
                        }
                        function BMConfigErrorEvent(e) {
                            (this.type = 'configError'), (this.nativeError = e);
                        }
                        var createElementID = (function () {
                            var e = 0;
                            return function () {
                                return (
                                    (e += 1),
                                    idPrefix$1 + '__lottie_element_' + e
                                );
                            };
                        })();
                        function HSVtoRGB(e, t, r) {
                            var i, s, a, n, l, o, f, y;
                            switch (
                                ((n = Math.floor(e * 6)),
                                (l = e * 6 - n),
                                (o = r * (1 - t)),
                                (f = r * (1 - l * t)),
                                (y = r * (1 - (1 - l) * t)),
                                n % 6)
                            ) {
                                case 0:
                                    (i = r), (s = y), (a = o);
                                    break;
                                case 1:
                                    (i = f), (s = r), (a = o);
                                    break;
                                case 2:
                                    (i = o), (s = r), (a = y);
                                    break;
                                case 3:
                                    (i = o), (s = f), (a = r);
                                    break;
                                case 4:
                                    (i = y), (s = o), (a = r);
                                    break;
                                case 5:
                                    (i = r), (s = o), (a = f);
                                    break;
                            }
                            return [i, s, a];
                        }
                        function RGBtoHSV(e, t, r) {
                            var i = Math.max(e, t, r),
                                s = Math.min(e, t, r),
                                a = i - s,
                                n,
                                l = i === 0 ? 0 : a / i,
                                o = i / 255;
                            switch (i) {
                                case s:
                                    n = 0;
                                    break;
                                case e:
                                    (n = t - r + a * (t < r ? 6 : 0)),
                                        (n /= 6 * a);
                                    break;
                                case t:
                                    (n = r - e + a * 2), (n /= 6 * a);
                                    break;
                                case r:
                                    (n = e - t + a * 4), (n /= 6 * a);
                                    break;
                            }
                            return [n, l, o];
                        }
                        function addSaturationToRGB(e, t) {
                            var r = RGBtoHSV(
                                e[0] * 255,
                                e[1] * 255,
                                e[2] * 255
                            );
                            return (
                                (r[1] += t),
                                r[1] > 1 ? (r[1] = 1) : r[1] <= 0 && (r[1] = 0),
                                HSVtoRGB(r[0], r[1], r[2])
                            );
                        }
                        function addBrightnessToRGB(e, t) {
                            var r = RGBtoHSV(
                                e[0] * 255,
                                e[1] * 255,
                                e[2] * 255
                            );
                            return (
                                (r[2] += t),
                                r[2] > 1 ? (r[2] = 1) : r[2] < 0 && (r[2] = 0),
                                HSVtoRGB(r[0], r[1], r[2])
                            );
                        }
                        function addHueToRGB(e, t) {
                            var r = RGBtoHSV(
                                e[0] * 255,
                                e[1] * 255,
                                e[2] * 255
                            );
                            return (
                                (r[0] += t / 360),
                                r[0] > 1
                                    ? (r[0] -= 1)
                                    : r[0] < 0 && (r[0] += 1),
                                HSVtoRGB(r[0], r[1], r[2])
                            );
                        }
                        var rgbToHex = (function () {
                                var e = [],
                                    t,
                                    r;
                                for (t = 0; t < 256; t += 1)
                                    (r = t.toString(16)),
                                        (e[t] = r.length === 1 ? '0' + r : r);
                                return function (i, s, a) {
                                    return (
                                        i < 0 && (i = 0),
                                        s < 0 && (s = 0),
                                        a < 0 && (a = 0),
                                        '#' + e[i] + e[s] + e[a]
                                    );
                                };
                            })(),
                            setSubframeEnabled = function (t) {
                                subframeEnabled = !!t;
                            },
                            getSubframeEnabled = function () {
                                return subframeEnabled;
                            },
                            setExpressionsPlugin = function (t) {
                                expressionsPlugin = t;
                            },
                            getExpressionsPlugin = function () {
                                return expressionsPlugin;
                            },
                            setExpressionInterfaces = function (t) {
                                expressionsInterfaces = t;
                            },
                            getExpressionInterfaces = function () {
                                return expressionsInterfaces;
                            },
                            setDefaultCurveSegments = function (t) {
                                defaultCurveSegments = t;
                            },
                            getDefaultCurveSegments = function () {
                                return defaultCurveSegments;
                            },
                            setIdPrefix = function (t) {
                                idPrefix$1 = t;
                            };
                        function createNS(e) {
                            return document.createElementNS(svgNS, e);
                        }
                        function _typeof$5(e) {
                            '@babel/helpers - typeof';
                            return (
                                typeof Symbol == 'function' &&
                                typeof Symbol.iterator == 'symbol'
                                    ? (_typeof$5 = function (r) {
                                          return typeof r;
                                      })
                                    : (_typeof$5 = function (r) {
                                          return r &&
                                              typeof Symbol == 'function' &&
                                              r.constructor === Symbol &&
                                              r !== Symbol.prototype
                                              ? 'symbol'
                                              : typeof r;
                                      }),
                                _typeof$5(e)
                            );
                        }
                        var dataManager = (function () {
                                var e = 1,
                                    t = [],
                                    r,
                                    i,
                                    s = {
                                        onmessage: function () {},
                                        postMessage: function (b) {
                                            r({ data: b });
                                        },
                                    },
                                    a = {
                                        postMessage: function (b) {
                                            s.onmessage({ data: b });
                                        },
                                    };
                                function n(u) {
                                    if (
                                        window.Worker &&
                                        window.Blob &&
                                        getWebWorker()
                                    ) {
                                        var b = new Blob(
                                                [
                                                    'var _workerSelf = self; self.onmessage = ',
                                                    u.toString(),
                                                ],
                                                { type: 'text/javascript' }
                                            ),
                                            _ = URL.createObjectURL(b);
                                        return new Worker(_);
                                    }
                                    return (r = u), s;
                                }
                                function l() {
                                    i ||
                                        ((i = n(function (b) {
                                            function _() {
                                                function C(B, S) {
                                                    var M,
                                                        x,
                                                        k = B.length,
                                                        R,
                                                        I,
                                                        O,
                                                        $;
                                                    for (x = 0; x < k; x += 1)
                                                        if (
                                                            ((M = B[x]),
                                                            'ks' in M &&
                                                                !M.completed)
                                                        ) {
                                                            if (
                                                                ((M.completed =
                                                                    !0),
                                                                M.hasMask)
                                                            ) {
                                                                var H =
                                                                    M.masksProperties;
                                                                for (
                                                                    I =
                                                                        H.length,
                                                                        R = 0;
                                                                    R < I;
                                                                    R += 1
                                                                )
                                                                    if (
                                                                        H[R].pt
                                                                            .k.i
                                                                    )
                                                                        P(
                                                                            H[R]
                                                                                .pt
                                                                                .k
                                                                        );
                                                                    else
                                                                        for (
                                                                            $ =
                                                                                H[
                                                                                    R
                                                                                ]
                                                                                    .pt
                                                                                    .k
                                                                                    .length,
                                                                                O = 0;
                                                                            O <
                                                                            $;
                                                                            O += 1
                                                                        )
                                                                            H[R]
                                                                                .pt
                                                                                .k[
                                                                                O
                                                                            ]
                                                                                .s &&
                                                                                P(
                                                                                    H[
                                                                                        R
                                                                                    ]
                                                                                        .pt
                                                                                        .k[
                                                                                        O
                                                                                    ]
                                                                                        .s[0]
                                                                                ),
                                                                                H[
                                                                                    R
                                                                                ]
                                                                                    .pt
                                                                                    .k[
                                                                                    O
                                                                                ]
                                                                                    .e &&
                                                                                    P(
                                                                                        H[
                                                                                            R
                                                                                        ]
                                                                                            .pt
                                                                                            .k[
                                                                                            O
                                                                                        ]
                                                                                            .e[0]
                                                                                    );
                                                            }
                                                            M.ty === 0
                                                                ? ((M.layers =
                                                                      p(
                                                                          M.refId,
                                                                          S
                                                                      )),
                                                                  C(
                                                                      M.layers,
                                                                      S
                                                                  ))
                                                                : M.ty === 4
                                                                  ? g(M.shapes)
                                                                  : M.ty ===
                                                                        5 &&
                                                                    j(M);
                                                        }
                                                }
                                                function c(B, S) {
                                                    if (B) {
                                                        var M = 0,
                                                            x = B.length;
                                                        for (
                                                            M = 0;
                                                            M < x;
                                                            M += 1
                                                        )
                                                            B[M].t === 1 &&
                                                                ((B[
                                                                    M
                                                                ].data.layers =
                                                                    p(
                                                                        B[M]
                                                                            .data
                                                                            .refId,
                                                                        S
                                                                    )),
                                                                C(
                                                                    B[M].data
                                                                        .layers,
                                                                    S
                                                                ));
                                                    }
                                                }
                                                function m(B, S) {
                                                    for (
                                                        var M = 0, x = S.length;
                                                        M < x;

                                                    ) {
                                                        if (S[M].id === B)
                                                            return S[M];
                                                        M += 1;
                                                    }
                                                    return null;
                                                }
                                                function p(B, S) {
                                                    var M = m(B, S);
                                                    return M
                                                        ? M.layers.__used
                                                            ? JSON.parse(
                                                                  JSON.stringify(
                                                                      M.layers
                                                                  )
                                                              )
                                                            : ((M.layers.__used =
                                                                  !0),
                                                              M.layers)
                                                        : null;
                                                }
                                                function g(B) {
                                                    var S,
                                                        M = B.length,
                                                        x,
                                                        k;
                                                    for (
                                                        S = M - 1;
                                                        S >= 0;
                                                        S -= 1
                                                    )
                                                        if (B[S].ty === 'sh')
                                                            if (B[S].ks.k.i)
                                                                P(B[S].ks.k);
                                                            else
                                                                for (
                                                                    k =
                                                                        B[S].ks
                                                                            .k
                                                                            .length,
                                                                        x = 0;
                                                                    x < k;
                                                                    x += 1
                                                                )
                                                                    B[S].ks.k[x]
                                                                        .s &&
                                                                        P(
                                                                            B[S]
                                                                                .ks
                                                                                .k[
                                                                                x
                                                                            ]
                                                                                .s[0]
                                                                        ),
                                                                        B[S].ks
                                                                            .k[
                                                                            x
                                                                        ].e &&
                                                                            P(
                                                                                B[
                                                                                    S
                                                                                ]
                                                                                    .ks
                                                                                    .k[
                                                                                    x
                                                                                ]
                                                                                    .e[0]
                                                                            );
                                                        else
                                                            B[S].ty === 'gr' &&
                                                                g(B[S].it);
                                                }
                                                function P(B) {
                                                    var S,
                                                        M = B.i.length;
                                                    for (S = 0; S < M; S += 1)
                                                        (B.i[S][0] +=
                                                            B.v[S][0]),
                                                            (B.i[S][1] +=
                                                                B.v[S][1]),
                                                            (B.o[S][0] +=
                                                                B.v[S][0]),
                                                            (B.o[S][1] +=
                                                                B.v[S][1]);
                                                }
                                                function A(B, S) {
                                                    var M = S
                                                        ? S.split('.')
                                                        : [100, 100, 100];
                                                    return B[0] > M[0]
                                                        ? !0
                                                        : M[0] > B[0]
                                                          ? !1
                                                          : B[1] > M[1]
                                                            ? !0
                                                            : M[1] > B[1]
                                                              ? !1
                                                              : B[2] > M[2]
                                                                ? !0
                                                                : M[2] > B[2]
                                                                  ? !1
                                                                  : null;
                                                }
                                                var F = (function () {
                                                        var B = [4, 4, 14];
                                                        function S(x) {
                                                            var k = x.t.d;
                                                            x.t.d = {
                                                                k: [
                                                                    {
                                                                        s: k,
                                                                        t: 0,
                                                                    },
                                                                ],
                                                            };
                                                        }
                                                        function M(x) {
                                                            var k,
                                                                R = x.length;
                                                            for (
                                                                k = 0;
                                                                k < R;
                                                                k += 1
                                                            )
                                                                x[k].ty === 5 &&
                                                                    S(x[k]);
                                                        }
                                                        return function (x) {
                                                            if (
                                                                A(B, x.v) &&
                                                                (M(x.layers),
                                                                x.assets)
                                                            ) {
                                                                var k,
                                                                    R =
                                                                        x.assets
                                                                            .length;
                                                                for (
                                                                    k = 0;
                                                                    k < R;
                                                                    k += 1
                                                                )
                                                                    x.assets[k]
                                                                        .layers &&
                                                                        M(
                                                                            x
                                                                                .assets[
                                                                                k
                                                                            ]
                                                                                .layers
                                                                        );
                                                            }
                                                        };
                                                    })(),
                                                    T = (function () {
                                                        var B = [4, 7, 99];
                                                        return function (S) {
                                                            if (
                                                                S.chars &&
                                                                !A(B, S.v)
                                                            ) {
                                                                var M,
                                                                    x =
                                                                        S.chars
                                                                            .length;
                                                                for (
                                                                    M = 0;
                                                                    M < x;
                                                                    M += 1
                                                                ) {
                                                                    var k =
                                                                        S.chars[
                                                                            M
                                                                        ];
                                                                    k.data &&
                                                                        k.data
                                                                            .shapes &&
                                                                        (g(
                                                                            k
                                                                                .data
                                                                                .shapes
                                                                        ),
                                                                        (k.data.ip = 0),
                                                                        (k.data.op = 99999),
                                                                        (k.data.st = 0),
                                                                        (k.data.sr = 1),
                                                                        (k.data.ks =
                                                                            {
                                                                                p: {
                                                                                    k: [
                                                                                        0,
                                                                                        0,
                                                                                    ],
                                                                                    a: 0,
                                                                                },
                                                                                s: {
                                                                                    k: [
                                                                                        100,
                                                                                        100,
                                                                                    ],
                                                                                    a: 0,
                                                                                },
                                                                                a: {
                                                                                    k: [
                                                                                        0,
                                                                                        0,
                                                                                    ],
                                                                                    a: 0,
                                                                                },
                                                                                r: {
                                                                                    k: 0,
                                                                                    a: 0,
                                                                                },
                                                                                o: {
                                                                                    k: 100,
                                                                                    a: 0,
                                                                                },
                                                                            }),
                                                                        S.chars[
                                                                            M
                                                                        ].t ||
                                                                            (k.data.shapes.push(
                                                                                {
                                                                                    ty: 'no',
                                                                                }
                                                                            ),
                                                                            k.data.shapes[0].it.push(
                                                                                {
                                                                                    p: {
                                                                                        k: [
                                                                                            0,
                                                                                            0,
                                                                                        ],
                                                                                        a: 0,
                                                                                    },
                                                                                    s: {
                                                                                        k: [
                                                                                            100,
                                                                                            100,
                                                                                        ],
                                                                                        a: 0,
                                                                                    },
                                                                                    a: {
                                                                                        k: [
                                                                                            0,
                                                                                            0,
                                                                                        ],
                                                                                        a: 0,
                                                                                    },
                                                                                    r: {
                                                                                        k: 0,
                                                                                        a: 0,
                                                                                    },
                                                                                    o: {
                                                                                        k: 100,
                                                                                        a: 0,
                                                                                    },
                                                                                    sk: {
                                                                                        k: 0,
                                                                                        a: 0,
                                                                                    },
                                                                                    sa: {
                                                                                        k: 0,
                                                                                        a: 0,
                                                                                    },
                                                                                    ty: 'tr',
                                                                                }
                                                                            )));
                                                                }
                                                            }
                                                        };
                                                    })(),
                                                    D = (function () {
                                                        var B = [5, 7, 15];
                                                        function S(x) {
                                                            var k = x.t.p;
                                                            typeof k.a ==
                                                                'number' &&
                                                                (k.a = {
                                                                    a: 0,
                                                                    k: k.a,
                                                                }),
                                                                typeof k.p ==
                                                                    'number' &&
                                                                    (k.p = {
                                                                        a: 0,
                                                                        k: k.p,
                                                                    }),
                                                                typeof k.r ==
                                                                    'number' &&
                                                                    (k.r = {
                                                                        a: 0,
                                                                        k: k.r,
                                                                    });
                                                        }
                                                        function M(x) {
                                                            var k,
                                                                R = x.length;
                                                            for (
                                                                k = 0;
                                                                k < R;
                                                                k += 1
                                                            )
                                                                x[k].ty === 5 &&
                                                                    S(x[k]);
                                                        }
                                                        return function (x) {
                                                            if (
                                                                A(B, x.v) &&
                                                                (M(x.layers),
                                                                x.assets)
                                                            ) {
                                                                var k,
                                                                    R =
                                                                        x.assets
                                                                            .length;
                                                                for (
                                                                    k = 0;
                                                                    k < R;
                                                                    k += 1
                                                                )
                                                                    x.assets[k]
                                                                        .layers &&
                                                                        M(
                                                                            x
                                                                                .assets[
                                                                                k
                                                                            ]
                                                                                .layers
                                                                        );
                                                            }
                                                        };
                                                    })(),
                                                    L = (function () {
                                                        var B = [4, 1, 9];
                                                        function S(x) {
                                                            var k,
                                                                R = x.length,
                                                                I,
                                                                O;
                                                            for (
                                                                k = 0;
                                                                k < R;
                                                                k += 1
                                                            )
                                                                if (
                                                                    x[k].ty ===
                                                                    'gr'
                                                                )
                                                                    S(x[k].it);
                                                                else if (
                                                                    x[k].ty ===
                                                                        'fl' ||
                                                                    x[k].ty ===
                                                                        'st'
                                                                )
                                                                    if (
                                                                        x[k].c
                                                                            .k &&
                                                                        x[k].c
                                                                            .k[0]
                                                                            .i
                                                                    )
                                                                        for (
                                                                            O =
                                                                                x[
                                                                                    k
                                                                                ]
                                                                                    .c
                                                                                    .k
                                                                                    .length,
                                                                                I = 0;
                                                                            I <
                                                                            O;
                                                                            I += 1
                                                                        )
                                                                            x[k]
                                                                                .c
                                                                                .k[
                                                                                I
                                                                            ]
                                                                                .s &&
                                                                                ((x[
                                                                                    k
                                                                                ].c.k[
                                                                                    I
                                                                                ].s[0] /=
                                                                                    255),
                                                                                (x[
                                                                                    k
                                                                                ].c.k[
                                                                                    I
                                                                                ].s[1] /=
                                                                                    255),
                                                                                (x[
                                                                                    k
                                                                                ].c.k[
                                                                                    I
                                                                                ].s[2] /=
                                                                                    255),
                                                                                (x[
                                                                                    k
                                                                                ].c.k[
                                                                                    I
                                                                                ].s[3] /=
                                                                                    255)),
                                                                                x[
                                                                                    k
                                                                                ]
                                                                                    .c
                                                                                    .k[
                                                                                    I
                                                                                ]
                                                                                    .e &&
                                                                                    ((x[
                                                                                        k
                                                                                    ].c.k[
                                                                                        I
                                                                                    ].e[0] /=
                                                                                        255),
                                                                                    (x[
                                                                                        k
                                                                                    ].c.k[
                                                                                        I
                                                                                    ].e[1] /=
                                                                                        255),
                                                                                    (x[
                                                                                        k
                                                                                    ].c.k[
                                                                                        I
                                                                                    ].e[2] /=
                                                                                        255),
                                                                                    (x[
                                                                                        k
                                                                                    ].c.k[
                                                                                        I
                                                                                    ].e[3] /=
                                                                                        255));
                                                                    else
                                                                        (x[
                                                                            k
                                                                        ].c.k[0] /=
                                                                            255),
                                                                            (x[
                                                                                k
                                                                            ].c.k[1] /=
                                                                                255),
                                                                            (x[
                                                                                k
                                                                            ].c.k[2] /=
                                                                                255),
                                                                            (x[
                                                                                k
                                                                            ].c.k[3] /=
                                                                                255);
                                                        }
                                                        function M(x) {
                                                            var k,
                                                                R = x.length;
                                                            for (
                                                                k = 0;
                                                                k < R;
                                                                k += 1
                                                            )
                                                                x[k].ty === 4 &&
                                                                    S(
                                                                        x[k]
                                                                            .shapes
                                                                    );
                                                        }
                                                        return function (x) {
                                                            if (
                                                                A(B, x.v) &&
                                                                (M(x.layers),
                                                                x.assets)
                                                            ) {
                                                                var k,
                                                                    R =
                                                                        x.assets
                                                                            .length;
                                                                for (
                                                                    k = 0;
                                                                    k < R;
                                                                    k += 1
                                                                )
                                                                    x.assets[k]
                                                                        .layers &&
                                                                        M(
                                                                            x
                                                                                .assets[
                                                                                k
                                                                            ]
                                                                                .layers
                                                                        );
                                                            }
                                                        };
                                                    })(),
                                                    q = (function () {
                                                        var B = [4, 4, 18];
                                                        function S(x) {
                                                            var k,
                                                                R = x.length,
                                                                I,
                                                                O;
                                                            for (
                                                                k = R - 1;
                                                                k >= 0;
                                                                k -= 1
                                                            )
                                                                if (
                                                                    x[k].ty ===
                                                                    'sh'
                                                                )
                                                                    if (
                                                                        x[k].ks
                                                                            .k.i
                                                                    )
                                                                        x[
                                                                            k
                                                                        ].ks.k.c =
                                                                            x[
                                                                                k
                                                                            ].closed;
                                                                    else
                                                                        for (
                                                                            O =
                                                                                x[
                                                                                    k
                                                                                ]
                                                                                    .ks
                                                                                    .k
                                                                                    .length,
                                                                                I = 0;
                                                                            I <
                                                                            O;
                                                                            I += 1
                                                                        )
                                                                            x[k]
                                                                                .ks
                                                                                .k[
                                                                                I
                                                                            ]
                                                                                .s &&
                                                                                (x[
                                                                                    k
                                                                                ].ks.k[
                                                                                    I
                                                                                ].s[0].c =
                                                                                    x[
                                                                                        k
                                                                                    ].closed),
                                                                                x[
                                                                                    k
                                                                                ]
                                                                                    .ks
                                                                                    .k[
                                                                                    I
                                                                                ]
                                                                                    .e &&
                                                                                    (x[
                                                                                        k
                                                                                    ].ks.k[
                                                                                        I
                                                                                    ].e[0].c =
                                                                                        x[
                                                                                            k
                                                                                        ].closed);
                                                                else
                                                                    x[k].ty ===
                                                                        'gr' &&
                                                                        S(
                                                                            x[k]
                                                                                .it
                                                                        );
                                                        }
                                                        function M(x) {
                                                            var k,
                                                                R,
                                                                I = x.length,
                                                                O,
                                                                $,
                                                                H,
                                                                X;
                                                            for (
                                                                R = 0;
                                                                R < I;
                                                                R += 1
                                                            ) {
                                                                if (
                                                                    ((k = x[R]),
                                                                    k.hasMask)
                                                                ) {
                                                                    var Z =
                                                                        k.masksProperties;
                                                                    for (
                                                                        $ =
                                                                            Z.length,
                                                                            O = 0;
                                                                        O < $;
                                                                        O += 1
                                                                    )
                                                                        if (
                                                                            Z[O]
                                                                                .pt
                                                                                .k
                                                                                .i
                                                                        )
                                                                            Z[
                                                                                O
                                                                            ].pt.k.c =
                                                                                Z[
                                                                                    O
                                                                                ].cl;
                                                                        else
                                                                            for (
                                                                                X =
                                                                                    Z[
                                                                                        O
                                                                                    ]
                                                                                        .pt
                                                                                        .k
                                                                                        .length,
                                                                                    H = 0;
                                                                                H <
                                                                                X;
                                                                                H += 1
                                                                            )
                                                                                Z[
                                                                                    O
                                                                                ]
                                                                                    .pt
                                                                                    .k[
                                                                                    H
                                                                                ]
                                                                                    .s &&
                                                                                    (Z[
                                                                                        O
                                                                                    ].pt.k[
                                                                                        H
                                                                                    ].s[0].c =
                                                                                        Z[
                                                                                            O
                                                                                        ].cl),
                                                                                    Z[
                                                                                        O
                                                                                    ]
                                                                                        .pt
                                                                                        .k[
                                                                                        H
                                                                                    ]
                                                                                        .e &&
                                                                                        (Z[
                                                                                            O
                                                                                        ].pt.k[
                                                                                            H
                                                                                        ].e[0].c =
                                                                                            Z[
                                                                                                O
                                                                                            ].cl);
                                                                }
                                                                k.ty === 4 &&
                                                                    S(k.shapes);
                                                            }
                                                        }
                                                        return function (x) {
                                                            if (
                                                                A(B, x.v) &&
                                                                (M(x.layers),
                                                                x.assets)
                                                            ) {
                                                                var k,
                                                                    R =
                                                                        x.assets
                                                                            .length;
                                                                for (
                                                                    k = 0;
                                                                    k < R;
                                                                    k += 1
                                                                )
                                                                    x.assets[k]
                                                                        .layers &&
                                                                        M(
                                                                            x
                                                                                .assets[
                                                                                k
                                                                            ]
                                                                                .layers
                                                                        );
                                                            }
                                                        };
                                                    })();
                                                function V(B) {
                                                    B.__complete ||
                                                        (L(B),
                                                        F(B),
                                                        T(B),
                                                        D(B),
                                                        q(B),
                                                        C(B.layers, B.assets),
                                                        c(B.chars, B.assets),
                                                        (B.__complete = !0));
                                                }
                                                function j(B) {
                                                    B.t.a.length === 0 &&
                                                        'm' in B.t.p;
                                                }
                                                var G = {};
                                                return (
                                                    (G.completeData = V),
                                                    (G.checkColors = L),
                                                    (G.checkChars = T),
                                                    (G.checkPathProperties = D),
                                                    (G.checkShapes = q),
                                                    (G.completeLayers = C),
                                                    G
                                                );
                                            }
                                            if (
                                                (a.dataManager ||
                                                    (a.dataManager = _()),
                                                a.assetLoader ||
                                                    (a.assetLoader =
                                                        (function () {
                                                            function C(m) {
                                                                var p =
                                                                    m.getResponseHeader(
                                                                        'content-type'
                                                                    );
                                                                return (p &&
                                                                    m.responseType ===
                                                                        'json' &&
                                                                    p.indexOf(
                                                                        'json'
                                                                    ) !== -1) ||
                                                                    (m.response &&
                                                                        _typeof$5(
                                                                            m.response
                                                                        ) ===
                                                                            'object')
                                                                    ? m.response
                                                                    : m.response &&
                                                                        typeof m.response ==
                                                                            'string'
                                                                      ? JSON.parse(
                                                                            m.response
                                                                        )
                                                                      : m.responseText
                                                                        ? JSON.parse(
                                                                              m.responseText
                                                                          )
                                                                        : null;
                                                            }
                                                            function c(
                                                                m,
                                                                p,
                                                                g,
                                                                P
                                                            ) {
                                                                var A,
                                                                    F =
                                                                        new XMLHttpRequest();
                                                                try {
                                                                    F.responseType =
                                                                        'json';
                                                                } catch {}
                                                                F.onreadystatechange =
                                                                    function () {
                                                                        if (
                                                                            F.readyState ===
                                                                            4
                                                                        )
                                                                            if (
                                                                                F.status ===
                                                                                200
                                                                            )
                                                                                (A =
                                                                                    C(
                                                                                        F
                                                                                    )),
                                                                                    g(
                                                                                        A
                                                                                    );
                                                                            else
                                                                                try {
                                                                                    (A =
                                                                                        C(
                                                                                            F
                                                                                        )),
                                                                                        g(
                                                                                            A
                                                                                        );
                                                                                } catch (T) {
                                                                                    P &&
                                                                                        P(
                                                                                            T
                                                                                        );
                                                                                }
                                                                    };
                                                                try {
                                                                    F.open(
                                                                        [
                                                                            'G',
                                                                            'E',
                                                                            'T',
                                                                        ].join(
                                                                            ''
                                                                        ),
                                                                        m,
                                                                        !0
                                                                    );
                                                                } catch {
                                                                    F.open(
                                                                        [
                                                                            'G',
                                                                            'E',
                                                                            'T',
                                                                        ].join(
                                                                            ''
                                                                        ),
                                                                        p +
                                                                            '/' +
                                                                            m,
                                                                        !0
                                                                    );
                                                                }
                                                                F.send();
                                                            }
                                                            return { load: c };
                                                        })()),
                                                b.data.type === 'loadAnimation')
                                            )
                                                a.assetLoader.load(
                                                    b.data.path,
                                                    b.data.fullPath,
                                                    function (C) {
                                                        a.dataManager.completeData(
                                                            C
                                                        ),
                                                            a.postMessage({
                                                                id: b.data.id,
                                                                payload: C,
                                                                status: 'success',
                                                            });
                                                    },
                                                    function () {
                                                        a.postMessage({
                                                            id: b.data.id,
                                                            status: 'error',
                                                        });
                                                    }
                                                );
                                            else if (
                                                b.data.type === 'complete'
                                            ) {
                                                var d = b.data.animation;
                                                a.dataManager.completeData(d),
                                                    a.postMessage({
                                                        id: b.data.id,
                                                        payload: d,
                                                        status: 'success',
                                                    });
                                            } else
                                                b.data.type === 'loadData' &&
                                                    a.assetLoader.load(
                                                        b.data.path,
                                                        b.data.fullPath,
                                                        function (C) {
                                                            a.postMessage({
                                                                id: b.data.id,
                                                                payload: C,
                                                                status: 'success',
                                                            });
                                                        },
                                                        function () {
                                                            a.postMessage({
                                                                id: b.data.id,
                                                                status: 'error',
                                                            });
                                                        }
                                                    );
                                        })),
                                        (i.onmessage = function (u) {
                                            var b = u.data,
                                                _ = b.id,
                                                d = t[_];
                                            (t[_] = null),
                                                b.status === 'success'
                                                    ? d.onComplete(b.payload)
                                                    : d.onError && d.onError();
                                        }));
                                }
                                function o(u, b) {
                                    e += 1;
                                    var _ = 'processId_' + e;
                                    return (
                                        (t[_] = { onComplete: u, onError: b }),
                                        _
                                    );
                                }
                                function f(u, b, _) {
                                    l();
                                    var d = o(b, _);
                                    i.postMessage({
                                        type: 'loadAnimation',
                                        path: u,
                                        fullPath:
                                            window.location.origin +
                                            window.location.pathname,
                                        id: d,
                                    });
                                }
                                function y(u, b, _) {
                                    l();
                                    var d = o(b, _);
                                    i.postMessage({
                                        type: 'loadData',
                                        path: u,
                                        fullPath:
                                            window.location.origin +
                                            window.location.pathname,
                                        id: d,
                                    });
                                }
                                function E(u, b, _) {
                                    l();
                                    var d = o(b, _);
                                    i.postMessage({
                                        type: 'complete',
                                        animation: u,
                                        id: d,
                                    });
                                }
                                return {
                                    loadAnimation: f,
                                    loadData: y,
                                    completeAnimation: E,
                                };
                            })(),
                            ImagePreloader = (function () {
                                var e = (function () {
                                    var c = createTag('canvas');
                                    (c.width = 1), (c.height = 1);
                                    var m = c.getContext('2d');
                                    return (
                                        (m.fillStyle = 'rgba(0,0,0,0)'),
                                        m.fillRect(0, 0, 1, 1),
                                        c
                                    );
                                })();
                                function t() {
                                    (this.loadedAssets += 1),
                                        this.loadedAssets ===
                                            this.totalImages &&
                                            this.loadedFootagesCount ===
                                                this.totalFootages &&
                                            this.imagesLoadedCb &&
                                            this.imagesLoadedCb(null);
                                }
                                function r() {
                                    (this.loadedFootagesCount += 1),
                                        this.loadedAssets ===
                                            this.totalImages &&
                                            this.loadedFootagesCount ===
                                                this.totalFootages &&
                                            this.imagesLoadedCb &&
                                            this.imagesLoadedCb(null);
                                }
                                function i(c, m, p) {
                                    var g = '';
                                    if (c.e) g = c.p;
                                    else if (m) {
                                        var P = c.p;
                                        P.indexOf('images/') !== -1 &&
                                            (P = P.split('/')[1]),
                                            (g = m + P);
                                    } else
                                        (g = p),
                                            (g += c.u ? c.u : ''),
                                            (g += c.p);
                                    return g;
                                }
                                function s(c) {
                                    var m = 0,
                                        p = setInterval(
                                            function () {
                                                var g = c.getBBox();
                                                (g.width || m > 500) &&
                                                    (this._imageLoaded(),
                                                    clearInterval(p)),
                                                    (m += 1);
                                            }.bind(this),
                                            50
                                        );
                                }
                                function a(c) {
                                    var m = i(c, this.assetsPath, this.path),
                                        p = createNS('image');
                                    isSafari
                                        ? this.testImageLoaded(p)
                                        : p.addEventListener(
                                              'load',
                                              this._imageLoaded,
                                              !1
                                          ),
                                        p.addEventListener(
                                            'error',
                                            function () {
                                                (g.img = e),
                                                    this._imageLoaded();
                                            }.bind(this),
                                            !1
                                        ),
                                        p.setAttributeNS(
                                            'http://www.w3.org/1999/xlink',
                                            'href',
                                            m
                                        ),
                                        this._elementHelper.append
                                            ? this._elementHelper.append(p)
                                            : this._elementHelper.appendChild(
                                                  p
                                              );
                                    var g = { img: p, assetData: c };
                                    return g;
                                }
                                function n(c) {
                                    var m = i(c, this.assetsPath, this.path),
                                        p = createTag('img');
                                    (p.crossOrigin = 'anonymous'),
                                        p.addEventListener(
                                            'load',
                                            this._imageLoaded,
                                            !1
                                        ),
                                        p.addEventListener(
                                            'error',
                                            function () {
                                                (g.img = e),
                                                    this._imageLoaded();
                                            }.bind(this),
                                            !1
                                        ),
                                        (p.src = m);
                                    var g = { img: p, assetData: c };
                                    return g;
                                }
                                function l(c) {
                                    var m = { assetData: c },
                                        p = i(c, this.assetsPath, this.path);
                                    return (
                                        dataManager.loadData(
                                            p,
                                            function (g) {
                                                (m.img = g),
                                                    this._footageLoaded();
                                            }.bind(this),
                                            function () {
                                                (m.img = {}),
                                                    this._footageLoaded();
                                            }.bind(this)
                                        ),
                                        m
                                    );
                                }
                                function o(c, m) {
                                    this.imagesLoadedCb = m;
                                    var p,
                                        g = c.length;
                                    for (p = 0; p < g; p += 1)
                                        c[p].layers ||
                                            (!c[p].t || c[p].t === 'seq'
                                                ? ((this.totalImages += 1),
                                                  this.images.push(
                                                      this._createImageData(
                                                          c[p]
                                                      )
                                                  ))
                                                : c[p].t === 3 &&
                                                  ((this.totalFootages += 1),
                                                  this.images.push(
                                                      this.createFootageData(
                                                          c[p]
                                                      )
                                                  )));
                                }
                                function f(c) {
                                    this.path = c || '';
                                }
                                function y(c) {
                                    this.assetsPath = c || '';
                                }
                                function E(c) {
                                    for (
                                        var m = 0, p = this.images.length;
                                        m < p;

                                    ) {
                                        if (this.images[m].assetData === c)
                                            return this.images[m].img;
                                        m += 1;
                                    }
                                    return null;
                                }
                                function u() {
                                    (this.imagesLoadedCb = null),
                                        (this.images.length = 0);
                                }
                                function b() {
                                    return (
                                        this.totalImages === this.loadedAssets
                                    );
                                }
                                function _() {
                                    return (
                                        this.totalFootages ===
                                        this.loadedFootagesCount
                                    );
                                }
                                function d(c, m) {
                                    c === 'svg'
                                        ? ((this._elementHelper = m),
                                          (this._createImageData =
                                              this.createImageData.bind(this)))
                                        : (this._createImageData =
                                              this.createImgData.bind(this));
                                }
                                function C() {
                                    (this._imageLoaded = t.bind(this)),
                                        (this._footageLoaded = r.bind(this)),
                                        (this.testImageLoaded = s.bind(this)),
                                        (this.createFootageData = l.bind(this)),
                                        (this.assetsPath = ''),
                                        (this.path = ''),
                                        (this.totalImages = 0),
                                        (this.totalFootages = 0),
                                        (this.loadedAssets = 0),
                                        (this.loadedFootagesCount = 0),
                                        (this.imagesLoadedCb = null),
                                        (this.images = []);
                                }
                                return (
                                    (C.prototype = {
                                        loadAssets: o,
                                        setAssetsPath: y,
                                        setPath: f,
                                        loadedImages: b,
                                        loadedFootages: _,
                                        destroy: u,
                                        getAsset: E,
                                        createImgData: n,
                                        createImageData: a,
                                        imageLoaded: t,
                                        footageLoaded: r,
                                        setCacheType: d,
                                    }),
                                    C
                                );
                            })();
                        function BaseEvent() {}
                        BaseEvent.prototype = {
                            triggerEvent: function (t, r) {
                                if (this._cbs[t])
                                    for (
                                        var i = this._cbs[t], s = 0;
                                        s < i.length;
                                        s += 1
                                    )
                                        i[s](r);
                            },
                            addEventListener: function (t, r) {
                                return (
                                    this._cbs[t] || (this._cbs[t] = []),
                                    this._cbs[t].push(r),
                                    function () {
                                        this.removeEventListener(t, r);
                                    }.bind(this)
                                );
                            },
                            removeEventListener: function (t, r) {
                                if (!r) this._cbs[t] = null;
                                else if (this._cbs[t]) {
                                    for (
                                        var i = 0, s = this._cbs[t].length;
                                        i < s;

                                    )
                                        this._cbs[t][i] === r &&
                                            (this._cbs[t].splice(i, 1),
                                            (i -= 1),
                                            (s -= 1)),
                                            (i += 1);
                                    this._cbs[t].length ||
                                        (this._cbs[t] = null);
                                }
                            },
                        };
                        var markerParser = (function () {
                                function e(t) {
                                    for (
                                        var r = t.split(`\r
`),
                                            i = {},
                                            s,
                                            a = 0,
                                            n = 0;
                                        n < r.length;
                                        n += 1
                                    )
                                        (s = r[n].split(':')),
                                            s.length === 2 &&
                                                ((i[s[0]] = s[1].trim()),
                                                (a += 1));
                                    if (a === 0) throw new Error();
                                    return i;
                                }
                                return function (t) {
                                    for (
                                        var r = [], i = 0;
                                        i < t.length;
                                        i += 1
                                    ) {
                                        var s = t[i],
                                            a = { time: s.tm, duration: s.dr };
                                        try {
                                            a.payload = JSON.parse(t[i].cm);
                                        } catch {
                                            try {
                                                a.payload = e(t[i].cm);
                                            } catch {
                                                a.payload = { name: t[i].cm };
                                            }
                                        }
                                        r.push(a);
                                    }
                                    return r;
                                };
                            })(),
                            ProjectInterface = (function () {
                                function e(t) {
                                    this.compositions.push(t);
                                }
                                return function () {
                                    function t(r) {
                                        for (
                                            var i = 0,
                                                s = this.compositions.length;
                                            i < s;

                                        ) {
                                            if (
                                                this.compositions[i].data &&
                                                this.compositions[i].data.nm ===
                                                    r
                                            )
                                                return (
                                                    this.compositions[i]
                                                        .prepareFrame &&
                                                        this.compositions[i]
                                                            .data.xt &&
                                                        this.compositions[
                                                            i
                                                        ].prepareFrame(
                                                            this.currentFrame
                                                        ),
                                                    this.compositions[i]
                                                        .compInterface
                                                );
                                            i += 1;
                                        }
                                        return null;
                                    }
                                    return (
                                        (t.compositions = []),
                                        (t.currentFrame = 0),
                                        (t.registerComposition = e),
                                        t
                                    );
                                };
                            })(),
                            renderers = {},
                            registerRenderer = function (t, r) {
                                renderers[t] = r;
                            };
                        function getRenderer(e) {
                            return renderers[e];
                        }
                        function getRegisteredRenderer() {
                            if (renderers.canvas) return 'canvas';
                            for (var e in renderers) if (renderers[e]) return e;
                            return '';
                        }
                        function _typeof$4(e) {
                            '@babel/helpers - typeof';
                            return (
                                typeof Symbol == 'function' &&
                                typeof Symbol.iterator == 'symbol'
                                    ? (_typeof$4 = function (r) {
                                          return typeof r;
                                      })
                                    : (_typeof$4 = function (r) {
                                          return r &&
                                              typeof Symbol == 'function' &&
                                              r.constructor === Symbol &&
                                              r !== Symbol.prototype
                                              ? 'symbol'
                                              : typeof r;
                                      }),
                                _typeof$4(e)
                            );
                        }
                        var AnimationItem = function () {
                            (this._cbs = []),
                                (this.name = ''),
                                (this.path = ''),
                                (this.isLoaded = !1),
                                (this.currentFrame = 0),
                                (this.currentRawFrame = 0),
                                (this.firstFrame = 0),
                                (this.totalFrames = 0),
                                (this.frameRate = 0),
                                (this.frameMult = 0),
                                (this.playSpeed = 1),
                                (this.playDirection = 1),
                                (this.playCount = 0),
                                (this.animationData = {}),
                                (this.assets = []),
                                (this.isPaused = !0),
                                (this.autoplay = !1),
                                (this.loop = !0),
                                (this.renderer = null),
                                (this.animationID = createElementID()),
                                (this.assetsPath = ''),
                                (this.timeCompleted = 0),
                                (this.segmentPos = 0),
                                (this.isSubframeEnabled = getSubframeEnabled()),
                                (this.segments = []),
                                (this._idle = !0),
                                (this._completedLoop = !1),
                                (this.projectInterface = ProjectInterface()),
                                (this.imagePreloader = new ImagePreloader()),
                                (this.audioController =
                                    audioControllerFactory()),
                                (this.markers = []),
                                (this.configAnimation =
                                    this.configAnimation.bind(this)),
                                (this.onSetupError =
                                    this.onSetupError.bind(this)),
                                (this.onSegmentComplete =
                                    this.onSegmentComplete.bind(this)),
                                (this.drawnFrameEvent = new BMEnterFrameEvent(
                                    'drawnFrame',
                                    0,
                                    0,
                                    0
                                )),
                                (this.expressionsPlugin =
                                    getExpressionsPlugin());
                        };
                        extendPrototype([BaseEvent], AnimationItem),
                            (AnimationItem.prototype.setParams = function (e) {
                                (e.wrapper || e.container) &&
                                    (this.wrapper = e.wrapper || e.container);
                                var t = 'svg';
                                e.animType
                                    ? (t = e.animType)
                                    : e.renderer && (t = e.renderer);
                                var r = getRenderer(t);
                                (this.renderer = new r(
                                    this,
                                    e.rendererSettings
                                )),
                                    this.imagePreloader.setCacheType(
                                        t,
                                        this.renderer.globalData.defs
                                    ),
                                    this.renderer.setProjectInterface(
                                        this.projectInterface
                                    ),
                                    (this.animType = t),
                                    e.loop === '' ||
                                    e.loop === null ||
                                    e.loop === void 0 ||
                                    e.loop === !0
                                        ? (this.loop = !0)
                                        : e.loop === !1
                                          ? (this.loop = !1)
                                          : (this.loop = parseInt(e.loop, 10)),
                                    (this.autoplay =
                                        'autoplay' in e ? e.autoplay : !0),
                                    (this.name = e.name ? e.name : ''),
                                    (this.autoloadSegments =
                                        Object.prototype.hasOwnProperty.call(
                                            e,
                                            'autoloadSegments'
                                        )
                                            ? e.autoloadSegments
                                            : !0),
                                    (this.assetsPath = e.assetsPath),
                                    (this.initialSegment = e.initialSegment),
                                    e.audioFactory &&
                                        this.audioController.setAudioFactory(
                                            e.audioFactory
                                        ),
                                    e.animationData
                                        ? this.setupAnimation(e.animationData)
                                        : e.path &&
                                          (e.path.lastIndexOf('\\') !== -1
                                              ? (this.path = e.path.substr(
                                                    0,
                                                    e.path.lastIndexOf('\\') + 1
                                                ))
                                              : (this.path = e.path.substr(
                                                    0,
                                                    e.path.lastIndexOf('/') + 1
                                                )),
                                          (this.fileName = e.path.substr(
                                              e.path.lastIndexOf('/') + 1
                                          )),
                                          (this.fileName = this.fileName.substr(
                                              0,
                                              this.fileName.lastIndexOf('.json')
                                          )),
                                          dataManager.loadAnimation(
                                              e.path,
                                              this.configAnimation,
                                              this.onSetupError
                                          ));
                            }),
                            (AnimationItem.prototype.onSetupError =
                                function () {
                                    this.trigger('data_failed');
                                }),
                            (AnimationItem.prototype.setupAnimation = function (
                                e
                            ) {
                                dataManager.completeAnimation(
                                    e,
                                    this.configAnimation
                                );
                            }),
                            (AnimationItem.prototype.setData = function (e, t) {
                                t &&
                                    _typeof$4(t) !== 'object' &&
                                    (t = JSON.parse(t));
                                var r = { wrapper: e, animationData: t },
                                    i = e.attributes;
                                (r.path = i.getNamedItem('data-animation-path')
                                    ? i.getNamedItem('data-animation-path')
                                          .value
                                    : i.getNamedItem('data-bm-path')
                                      ? i.getNamedItem('data-bm-path').value
                                      : i.getNamedItem('bm-path')
                                        ? i.getNamedItem('bm-path').value
                                        : ''),
                                    (r.animType = i.getNamedItem(
                                        'data-anim-type'
                                    )
                                        ? i.getNamedItem('data-anim-type').value
                                        : i.getNamedItem('data-bm-type')
                                          ? i.getNamedItem('data-bm-type').value
                                          : i.getNamedItem('bm-type')
                                            ? i.getNamedItem('bm-type').value
                                            : i.getNamedItem('data-bm-renderer')
                                              ? i.getNamedItem(
                                                    'data-bm-renderer'
                                                ).value
                                              : i.getNamedItem('bm-renderer')
                                                ? i.getNamedItem('bm-renderer')
                                                      .value
                                                : getRegisteredRenderer() ||
                                                  'canvas');
                                var s = i.getNamedItem('data-anim-loop')
                                    ? i.getNamedItem('data-anim-loop').value
                                    : i.getNamedItem('data-bm-loop')
                                      ? i.getNamedItem('data-bm-loop').value
                                      : i.getNamedItem('bm-loop')
                                        ? i.getNamedItem('bm-loop').value
                                        : '';
                                s === 'false'
                                    ? (r.loop = !1)
                                    : s === 'true'
                                      ? (r.loop = !0)
                                      : s !== '' && (r.loop = parseInt(s, 10));
                                var a = i.getNamedItem('data-anim-autoplay')
                                    ? i.getNamedItem('data-anim-autoplay').value
                                    : i.getNamedItem('data-bm-autoplay')
                                      ? i.getNamedItem('data-bm-autoplay').value
                                      : i.getNamedItem('bm-autoplay')
                                        ? i.getNamedItem('bm-autoplay').value
                                        : !0;
                                (r.autoplay = a !== 'false'),
                                    (r.name = i.getNamedItem('data-name')
                                        ? i.getNamedItem('data-name').value
                                        : i.getNamedItem('data-bm-name')
                                          ? i.getNamedItem('data-bm-name').value
                                          : i.getNamedItem('bm-name')
                                            ? i.getNamedItem('bm-name').value
                                            : '');
                                var n = i.getNamedItem('data-anim-prerender')
                                    ? i.getNamedItem('data-anim-prerender')
                                          .value
                                    : i.getNamedItem('data-bm-prerender')
                                      ? i.getNamedItem('data-bm-prerender')
                                            .value
                                      : i.getNamedItem('bm-prerender')
                                        ? i.getNamedItem('bm-prerender').value
                                        : '';
                                n === 'false' && (r.prerender = !1),
                                    r.path
                                        ? this.setParams(r)
                                        : this.trigger('destroy');
                            }),
                            (AnimationItem.prototype.includeLayers = function (
                                e
                            ) {
                                e.op > this.animationData.op &&
                                    ((this.animationData.op = e.op),
                                    (this.totalFrames = Math.floor(
                                        e.op - this.animationData.ip
                                    )));
                                var t = this.animationData.layers,
                                    r,
                                    i = t.length,
                                    s = e.layers,
                                    a,
                                    n = s.length;
                                for (a = 0; a < n; a += 1)
                                    for (r = 0; r < i; ) {
                                        if (t[r].id === s[a].id) {
                                            t[r] = s[a];
                                            break;
                                        }
                                        r += 1;
                                    }
                                if (
                                    ((e.chars || e.fonts) &&
                                        (this.renderer.globalData.fontManager.addChars(
                                            e.chars
                                        ),
                                        this.renderer.globalData.fontManager.addFonts(
                                            e.fonts,
                                            this.renderer.globalData.defs
                                        )),
                                    e.assets)
                                )
                                    for (
                                        i = e.assets.length, r = 0;
                                        r < i;
                                        r += 1
                                    )
                                        this.animationData.assets.push(
                                            e.assets[r]
                                        );
                                (this.animationData.__complete = !1),
                                    dataManager.completeAnimation(
                                        this.animationData,
                                        this.onSegmentComplete
                                    );
                            }),
                            (AnimationItem.prototype.onSegmentComplete =
                                function (e) {
                                    this.animationData = e;
                                    var t = getExpressionsPlugin();
                                    t && t.initExpressions(this),
                                        this.loadNextSegment();
                                }),
                            (AnimationItem.prototype.loadNextSegment =
                                function () {
                                    var e = this.animationData.segments;
                                    if (
                                        !e ||
                                        e.length === 0 ||
                                        !this.autoloadSegments
                                    ) {
                                        this.trigger('data_ready'),
                                            (this.timeCompleted =
                                                this.totalFrames);
                                        return;
                                    }
                                    var t = e.shift();
                                    this.timeCompleted =
                                        t.time * this.frameRate;
                                    var r =
                                        this.path +
                                        this.fileName +
                                        '_' +
                                        this.segmentPos +
                                        '.json';
                                    (this.segmentPos += 1),
                                        dataManager.loadData(
                                            r,
                                            this.includeLayers.bind(this),
                                            function () {
                                                this.trigger('data_failed');
                                            }.bind(this)
                                        );
                                }),
                            (AnimationItem.prototype.loadSegments =
                                function () {
                                    var e = this.animationData.segments;
                                    e ||
                                        (this.timeCompleted = this.totalFrames),
                                        this.loadNextSegment();
                                }),
                            (AnimationItem.prototype.imagesLoaded =
                                function () {
                                    this.trigger('loaded_images'),
                                        this.checkLoaded();
                                }),
                            (AnimationItem.prototype.preloadImages =
                                function () {
                                    this.imagePreloader.setAssetsPath(
                                        this.assetsPath
                                    ),
                                        this.imagePreloader.setPath(this.path),
                                        this.imagePreloader.loadAssets(
                                            this.animationData.assets,
                                            this.imagesLoaded.bind(this)
                                        );
                                }),
                            (AnimationItem.prototype.configAnimation =
                                function (e) {
                                    if (this.renderer)
                                        try {
                                            (this.animationData = e),
                                                this.initialSegment
                                                    ? ((this.totalFrames =
                                                          Math.floor(
                                                              this
                                                                  .initialSegment[1] -
                                                                  this
                                                                      .initialSegment[0]
                                                          )),
                                                      (this.firstFrame =
                                                          Math.round(
                                                              this
                                                                  .initialSegment[0]
                                                          )))
                                                    : ((this.totalFrames =
                                                          Math.floor(
                                                              this.animationData
                                                                  .op -
                                                                  this
                                                                      .animationData
                                                                      .ip
                                                          )),
                                                      (this.firstFrame =
                                                          Math.round(
                                                              this.animationData
                                                                  .ip
                                                          ))),
                                                this.renderer.configAnimation(
                                                    e
                                                ),
                                                e.assets || (e.assets = []),
                                                (this.assets =
                                                    this.animationData.assets),
                                                (this.frameRate =
                                                    this.animationData.fr),
                                                (this.frameMult =
                                                    this.animationData.fr /
                                                    1e3),
                                                this.renderer.searchExtraCompositions(
                                                    e.assets
                                                ),
                                                (this.markers = markerParser(
                                                    e.markers || []
                                                )),
                                                this.trigger('config_ready'),
                                                this.preloadImages(),
                                                this.loadSegments(),
                                                this.updaFrameModifier(),
                                                this.waitForFontsLoaded(),
                                                this.isPaused &&
                                                    this.audioController.pause();
                                        } catch (t) {
                                            this.triggerConfigError(t);
                                        }
                                }),
                            (AnimationItem.prototype.waitForFontsLoaded =
                                function () {
                                    this.renderer &&
                                        (this.renderer.globalData.fontManager
                                            .isLoaded
                                            ? this.checkLoaded()
                                            : setTimeout(
                                                  this.waitForFontsLoaded.bind(
                                                      this
                                                  ),
                                                  20
                                              ));
                                }),
                            (AnimationItem.prototype.checkLoaded = function () {
                                if (
                                    !this.isLoaded &&
                                    this.renderer.globalData.fontManager
                                        .isLoaded &&
                                    (this.imagePreloader.loadedImages() ||
                                        this.renderer.rendererType !==
                                            'canvas') &&
                                    this.imagePreloader.loadedFootages()
                                ) {
                                    this.isLoaded = !0;
                                    var e = getExpressionsPlugin();
                                    e && e.initExpressions(this),
                                        this.renderer.initItems(),
                                        setTimeout(
                                            function () {
                                                this.trigger('DOMLoaded');
                                            }.bind(this),
                                            0
                                        ),
                                        this.gotoFrame(),
                                        this.autoplay && this.play();
                                }
                            }),
                            (AnimationItem.prototype.resize = function (e, t) {
                                var r = typeof e == 'number' ? e : void 0,
                                    i = typeof t == 'number' ? t : void 0;
                                this.renderer.updateContainerSize(r, i);
                            }),
                            (AnimationItem.prototype.setSubframe = function (
                                e
                            ) {
                                this.isSubframeEnabled = !!e;
                            }),
                            (AnimationItem.prototype.gotoFrame = function () {
                                (this.currentFrame = this.isSubframeEnabled
                                    ? this.currentRawFrame
                                    : ~~this.currentRawFrame),
                                    this.timeCompleted !== this.totalFrames &&
                                        this.currentFrame >
                                            this.timeCompleted &&
                                        (this.currentFrame =
                                            this.timeCompleted),
                                    this.trigger('enterFrame'),
                                    this.renderFrame(),
                                    this.trigger('drawnFrame');
                            }),
                            (AnimationItem.prototype.renderFrame = function () {
                                if (!(this.isLoaded === !1 || !this.renderer))
                                    try {
                                        this.expressionsPlugin &&
                                            this.expressionsPlugin.resetFrame(),
                                            this.renderer.renderFrame(
                                                this.currentFrame +
                                                    this.firstFrame
                                            );
                                    } catch (e) {
                                        this.triggerRenderFrameError(e);
                                    }
                            }),
                            (AnimationItem.prototype.play = function (e) {
                                (e && this.name !== e) ||
                                    (this.isPaused === !0 &&
                                        ((this.isPaused = !1),
                                        this.trigger('_play'),
                                        this.audioController.resume(),
                                        this._idle &&
                                            ((this._idle = !1),
                                            this.trigger('_active'))));
                            }),
                            (AnimationItem.prototype.pause = function (e) {
                                (e && this.name !== e) ||
                                    (this.isPaused === !1 &&
                                        ((this.isPaused = !0),
                                        this.trigger('_pause'),
                                        (this._idle = !0),
                                        this.trigger('_idle'),
                                        this.audioController.pause()));
                            }),
                            (AnimationItem.prototype.togglePause = function (
                                e
                            ) {
                                (e && this.name !== e) ||
                                    (this.isPaused === !0
                                        ? this.play()
                                        : this.pause());
                            }),
                            (AnimationItem.prototype.stop = function (e) {
                                (e && this.name !== e) ||
                                    (this.pause(),
                                    (this.playCount = 0),
                                    (this._completedLoop = !1),
                                    this.setCurrentRawFrameValue(0));
                            }),
                            (AnimationItem.prototype.getMarkerData = function (
                                e
                            ) {
                                for (
                                    var t, r = 0;
                                    r < this.markers.length;
                                    r += 1
                                )
                                    if (
                                        ((t = this.markers[r]),
                                        t.payload && t.payload.name === e)
                                    )
                                        return t;
                                return null;
                            }),
                            (AnimationItem.prototype.goToAndStop = function (
                                e,
                                t,
                                r
                            ) {
                                if (!(r && this.name !== r)) {
                                    var i = Number(e);
                                    if (isNaN(i)) {
                                        var s = this.getMarkerData(e);
                                        s && this.goToAndStop(s.time, !0);
                                    } else
                                        t
                                            ? this.setCurrentRawFrameValue(e)
                                            : this.setCurrentRawFrameValue(
                                                  e * this.frameModifier
                                              );
                                    this.pause();
                                }
                            }),
                            (AnimationItem.prototype.goToAndPlay = function (
                                e,
                                t,
                                r
                            ) {
                                if (!(r && this.name !== r)) {
                                    var i = Number(e);
                                    if (isNaN(i)) {
                                        var s = this.getMarkerData(e);
                                        s &&
                                            (s.duration
                                                ? this.playSegments(
                                                      [
                                                          s.time,
                                                          s.time + s.duration,
                                                      ],
                                                      !0
                                                  )
                                                : this.goToAndStop(s.time, !0));
                                    } else this.goToAndStop(i, t, r);
                                    this.play();
                                }
                            }),
                            (AnimationItem.prototype.advanceTime = function (
                                e
                            ) {
                                if (
                                    !(
                                        this.isPaused === !0 ||
                                        this.isLoaded === !1
                                    )
                                ) {
                                    var t =
                                            this.currentRawFrame +
                                            e * this.frameModifier,
                                        r = !1;
                                    t >= this.totalFrames - 1 &&
                                    this.frameModifier > 0
                                        ? !this.loop ||
                                          this.playCount === this.loop
                                            ? this.checkSegments(
                                                  t > this.totalFrames
                                                      ? t % this.totalFrames
                                                      : 0
                                              ) ||
                                              ((r = !0),
                                              (t = this.totalFrames - 1))
                                            : t >= this.totalFrames
                                              ? ((this.playCount += 1),
                                                this.checkSegments(
                                                    t % this.totalFrames
                                                ) ||
                                                    (this.setCurrentRawFrameValue(
                                                        t % this.totalFrames
                                                    ),
                                                    (this._completedLoop = !0),
                                                    this.trigger(
                                                        'loopComplete'
                                                    )))
                                              : this.setCurrentRawFrameValue(t)
                                        : t < 0
                                          ? this.checkSegments(
                                                t % this.totalFrames
                                            ) ||
                                            (this.loop &&
                                            !(
                                                this.playCount-- <= 0 &&
                                                this.loop !== !0
                                            )
                                                ? (this.setCurrentRawFrameValue(
                                                      this.totalFrames +
                                                          (t % this.totalFrames)
                                                  ),
                                                  this._completedLoop
                                                      ? this.trigger(
                                                            'loopComplete'
                                                        )
                                                      : (this._completedLoop =
                                                            !0))
                                                : ((r = !0), (t = 0)))
                                          : this.setCurrentRawFrameValue(t),
                                        r &&
                                            (this.setCurrentRawFrameValue(t),
                                            this.pause(),
                                            this.trigger('complete'));
                                }
                            }),
                            (AnimationItem.prototype.adjustSegment = function (
                                e,
                                t
                            ) {
                                (this.playCount = 0),
                                    e[1] < e[0]
                                        ? (this.frameModifier > 0 &&
                                              (this.playSpeed < 0
                                                  ? this.setSpeed(
                                                        -this.playSpeed
                                                    )
                                                  : this.setDirection(-1)),
                                          (this.totalFrames = e[0] - e[1]),
                                          (this.timeCompleted =
                                              this.totalFrames),
                                          (this.firstFrame = e[1]),
                                          this.setCurrentRawFrameValue(
                                              this.totalFrames - 0.001 - t
                                          ))
                                        : e[1] > e[0] &&
                                          (this.frameModifier < 0 &&
                                              (this.playSpeed < 0
                                                  ? this.setSpeed(
                                                        -this.playSpeed
                                                    )
                                                  : this.setDirection(1)),
                                          (this.totalFrames = e[1] - e[0]),
                                          (this.timeCompleted =
                                              this.totalFrames),
                                          (this.firstFrame = e[0]),
                                          this.setCurrentRawFrameValue(
                                              0.001 + t
                                          )),
                                    this.trigger('segmentStart');
                            }),
                            (AnimationItem.prototype.setSegment = function (
                                e,
                                t
                            ) {
                                var r = -1;
                                this.isPaused &&
                                    (this.currentRawFrame + this.firstFrame < e
                                        ? (r = e)
                                        : this.currentRawFrame +
                                              this.firstFrame >
                                              t && (r = t - e)),
                                    (this.firstFrame = e),
                                    (this.totalFrames = t - e),
                                    (this.timeCompleted = this.totalFrames),
                                    r !== -1 && this.goToAndStop(r, !0);
                            }),
                            (AnimationItem.prototype.playSegments = function (
                                e,
                                t
                            ) {
                                if (
                                    (t && (this.segments.length = 0),
                                    _typeof$4(e[0]) === 'object')
                                ) {
                                    var r,
                                        i = e.length;
                                    for (r = 0; r < i; r += 1)
                                        this.segments.push(e[r]);
                                } else this.segments.push(e);
                                this.segments.length &&
                                    t &&
                                    this.adjustSegment(
                                        this.segments.shift(),
                                        0
                                    ),
                                    this.isPaused && this.play();
                            }),
                            (AnimationItem.prototype.resetSegments = function (
                                e
                            ) {
                                (this.segments.length = 0),
                                    this.segments.push([
                                        this.animationData.ip,
                                        this.animationData.op,
                                    ]),
                                    e && this.checkSegments(0);
                            }),
                            (AnimationItem.prototype.checkSegments = function (
                                e
                            ) {
                                return this.segments.length
                                    ? (this.adjustSegment(
                                          this.segments.shift(),
                                          e
                                      ),
                                      !0)
                                    : !1;
                            }),
                            (AnimationItem.prototype.destroy = function (e) {
                                (e && this.name !== e) ||
                                    !this.renderer ||
                                    (this.renderer.destroy(),
                                    this.imagePreloader.destroy(),
                                    this.trigger('destroy'),
                                    (this._cbs = null),
                                    (this.onEnterFrame = null),
                                    (this.onLoopComplete = null),
                                    (this.onComplete = null),
                                    (this.onSegmentStart = null),
                                    (this.onDestroy = null),
                                    (this.renderer = null),
                                    (this.expressionsPlugin = null),
                                    (this.imagePreloader = null),
                                    (this.projectInterface = null));
                            }),
                            (AnimationItem.prototype.setCurrentRawFrameValue =
                                function (e) {
                                    (this.currentRawFrame = e),
                                        this.gotoFrame();
                                }),
                            (AnimationItem.prototype.setSpeed = function (e) {
                                (this.playSpeed = e), this.updaFrameModifier();
                            }),
                            (AnimationItem.prototype.setDirection = function (
                                e
                            ) {
                                (this.playDirection = e < 0 ? -1 : 1),
                                    this.updaFrameModifier();
                            }),
                            (AnimationItem.prototype.setLoop = function (e) {
                                this.loop = e;
                            }),
                            (AnimationItem.prototype.setVolume = function (
                                e,
                                t
                            ) {
                                (t && this.name !== t) ||
                                    this.audioController.setVolume(e);
                            }),
                            (AnimationItem.prototype.getVolume = function () {
                                return this.audioController.getVolume();
                            }),
                            (AnimationItem.prototype.mute = function (e) {
                                (e && this.name !== e) ||
                                    this.audioController.mute();
                            }),
                            (AnimationItem.prototype.unmute = function (e) {
                                (e && this.name !== e) ||
                                    this.audioController.unmute();
                            }),
                            (AnimationItem.prototype.updaFrameModifier =
                                function () {
                                    (this.frameModifier =
                                        this.frameMult *
                                        this.playSpeed *
                                        this.playDirection),
                                        this.audioController.setRate(
                                            this.playSpeed * this.playDirection
                                        );
                                }),
                            (AnimationItem.prototype.getPath = function () {
                                return this.path;
                            }),
                            (AnimationItem.prototype.getAssetsPath = function (
                                e
                            ) {
                                var t = '';
                                if (e.e) t = e.p;
                                else if (this.assetsPath) {
                                    var r = e.p;
                                    r.indexOf('images/') !== -1 &&
                                        (r = r.split('/')[1]),
                                        (t = this.assetsPath + r);
                                } else
                                    (t = this.path),
                                        (t += e.u ? e.u : ''),
                                        (t += e.p);
                                return t;
                            }),
                            (AnimationItem.prototype.getAssetData = function (
                                e
                            ) {
                                for (
                                    var t = 0, r = this.assets.length;
                                    t < r;

                                ) {
                                    if (e === this.assets[t].id)
                                        return this.assets[t];
                                    t += 1;
                                }
                                return null;
                            }),
                            (AnimationItem.prototype.hide = function () {
                                this.renderer.hide();
                            }),
                            (AnimationItem.prototype.show = function () {
                                this.renderer.show();
                            }),
                            (AnimationItem.prototype.getDuration = function (
                                e
                            ) {
                                return e
                                    ? this.totalFrames
                                    : this.totalFrames / this.frameRate;
                            }),
                            (AnimationItem.prototype.updateDocumentData =
                                function (e, t, r) {
                                    try {
                                        var i =
                                            this.renderer.getElementByPath(e);
                                        i.updateDocumentData(t, r);
                                    } catch {}
                                }),
                            (AnimationItem.prototype.trigger = function (e) {
                                if (this._cbs && this._cbs[e])
                                    switch (e) {
                                        case 'enterFrame':
                                            this.triggerEvent(
                                                e,
                                                new BMEnterFrameEvent(
                                                    e,
                                                    this.currentFrame,
                                                    this.totalFrames,
                                                    this.frameModifier
                                                )
                                            );
                                            break;
                                        case 'drawnFrame':
                                            (this.drawnFrameEvent.currentTime =
                                                this.currentFrame),
                                                (this.drawnFrameEvent.totalTime =
                                                    this.totalFrames),
                                                (this.drawnFrameEvent.direction =
                                                    this.frameModifier),
                                                this.triggerEvent(
                                                    e,
                                                    this.drawnFrameEvent
                                                );
                                            break;
                                        case 'loopComplete':
                                            this.triggerEvent(
                                                e,
                                                new BMCompleteLoopEvent(
                                                    e,
                                                    this.loop,
                                                    this.playCount,
                                                    this.frameMult
                                                )
                                            );
                                            break;
                                        case 'complete':
                                            this.triggerEvent(
                                                e,
                                                new BMCompleteEvent(
                                                    e,
                                                    this.frameMult
                                                )
                                            );
                                            break;
                                        case 'segmentStart':
                                            this.triggerEvent(
                                                e,
                                                new BMSegmentStartEvent(
                                                    e,
                                                    this.firstFrame,
                                                    this.totalFrames
                                                )
                                            );
                                            break;
                                        case 'destroy':
                                            this.triggerEvent(
                                                e,
                                                new BMDestroyEvent(e, this)
                                            );
                                            break;
                                        default:
                                            this.triggerEvent(e);
                                    }
                                e === 'enterFrame' &&
                                    this.onEnterFrame &&
                                    this.onEnterFrame.call(
                                        this,
                                        new BMEnterFrameEvent(
                                            e,
                                            this.currentFrame,
                                            this.totalFrames,
                                            this.frameMult
                                        )
                                    ),
                                    e === 'loopComplete' &&
                                        this.onLoopComplete &&
                                        this.onLoopComplete.call(
                                            this,
                                            new BMCompleteLoopEvent(
                                                e,
                                                this.loop,
                                                this.playCount,
                                                this.frameMult
                                            )
                                        ),
                                    e === 'complete' &&
                                        this.onComplete &&
                                        this.onComplete.call(
                                            this,
                                            new BMCompleteEvent(
                                                e,
                                                this.frameMult
                                            )
                                        ),
                                    e === 'segmentStart' &&
                                        this.onSegmentStart &&
                                        this.onSegmentStart.call(
                                            this,
                                            new BMSegmentStartEvent(
                                                e,
                                                this.firstFrame,
                                                this.totalFrames
                                            )
                                        ),
                                    e === 'destroy' &&
                                        this.onDestroy &&
                                        this.onDestroy.call(
                                            this,
                                            new BMDestroyEvent(e, this)
                                        );
                            }),
                            (AnimationItem.prototype.triggerRenderFrameError =
                                function (e) {
                                    var t = new BMRenderFrameErrorEvent(
                                        e,
                                        this.currentFrame
                                    );
                                    this.triggerEvent('error', t),
                                        this.onError &&
                                            this.onError.call(this, t);
                                }),
                            (AnimationItem.prototype.triggerConfigError =
                                function (e) {
                                    var t = new BMConfigErrorEvent(
                                        e,
                                        this.currentFrame
                                    );
                                    this.triggerEvent('error', t),
                                        this.onError &&
                                            this.onError.call(this, t);
                                });
                        var animationManager = (function () {
                                var e = {},
                                    t = [],
                                    r = 0,
                                    i = 0,
                                    s = 0,
                                    a = !0,
                                    n = !1;
                                function l(S) {
                                    for (var M = 0, x = S.target; M < i; )
                                        t[M].animation === x &&
                                            (t.splice(M, 1),
                                            (M -= 1),
                                            (i -= 1),
                                            x.isPaused || E()),
                                            (M += 1);
                                }
                                function o(S, M) {
                                    if (!S) return null;
                                    for (var x = 0; x < i; ) {
                                        if (
                                            t[x].elem === S &&
                                            t[x].elem !== null
                                        )
                                            return t[x].animation;
                                        x += 1;
                                    }
                                    var k = new AnimationItem();
                                    return u(k, S), k.setData(S, M), k;
                                }
                                function f() {
                                    var S,
                                        M = t.length,
                                        x = [];
                                    for (S = 0; S < M; S += 1)
                                        x.push(t[S].animation);
                                    return x;
                                }
                                function y() {
                                    (s += 1), L();
                                }
                                function E() {
                                    s -= 1;
                                }
                                function u(S, M) {
                                    S.addEventListener('destroy', l),
                                        S.addEventListener('_active', y),
                                        S.addEventListener('_idle', E),
                                        t.push({ elem: M, animation: S }),
                                        (i += 1);
                                }
                                function b(S) {
                                    var M = new AnimationItem();
                                    return u(M, null), M.setParams(S), M;
                                }
                                function _(S, M) {
                                    var x;
                                    for (x = 0; x < i; x += 1)
                                        t[x].animation.setSpeed(S, M);
                                }
                                function d(S, M) {
                                    var x;
                                    for (x = 0; x < i; x += 1)
                                        t[x].animation.setDirection(S, M);
                                }
                                function C(S) {
                                    var M;
                                    for (M = 0; M < i; M += 1)
                                        t[M].animation.play(S);
                                }
                                function c(S) {
                                    var M = S - r,
                                        x;
                                    for (x = 0; x < i; x += 1)
                                        t[x].animation.advanceTime(M);
                                    (r = S),
                                        s && !n
                                            ? window.requestAnimationFrame(c)
                                            : (a = !0);
                                }
                                function m(S) {
                                    (r = S), window.requestAnimationFrame(c);
                                }
                                function p(S) {
                                    var M;
                                    for (M = 0; M < i; M += 1)
                                        t[M].animation.pause(S);
                                }
                                function g(S, M, x) {
                                    var k;
                                    for (k = 0; k < i; k += 1)
                                        t[k].animation.goToAndStop(S, M, x);
                                }
                                function P(S) {
                                    var M;
                                    for (M = 0; M < i; M += 1)
                                        t[M].animation.stop(S);
                                }
                                function A(S) {
                                    var M;
                                    for (M = 0; M < i; M += 1)
                                        t[M].animation.togglePause(S);
                                }
                                function F(S) {
                                    var M;
                                    for (M = i - 1; M >= 0; M -= 1)
                                        t[M].animation.destroy(S);
                                }
                                function T(S, M, x) {
                                    var k = [].concat(
                                            [].slice.call(
                                                document.getElementsByClassName(
                                                    'lottie'
                                                )
                                            ),
                                            [].slice.call(
                                                document.getElementsByClassName(
                                                    'bodymovin'
                                                )
                                            )
                                        ),
                                        R,
                                        I = k.length;
                                    for (R = 0; R < I; R += 1)
                                        x &&
                                            k[R].setAttribute(
                                                'data-bm-type',
                                                x
                                            ),
                                            o(k[R], S);
                                    if (M && I === 0) {
                                        x || (x = 'svg');
                                        var O =
                                            document.getElementsByTagName(
                                                'body'
                                            )[0];
                                        O.innerText = '';
                                        var $ = createTag('div');
                                        ($.style.width = '100%'),
                                            ($.style.height = '100%'),
                                            $.setAttribute('data-bm-type', x),
                                            O.appendChild($),
                                            o($, S);
                                    }
                                }
                                function D() {
                                    var S;
                                    for (S = 0; S < i; S += 1)
                                        t[S].animation.resize();
                                }
                                function L() {
                                    !n &&
                                        s &&
                                        a &&
                                        (window.requestAnimationFrame(m),
                                        (a = !1));
                                }
                                function q() {
                                    n = !0;
                                }
                                function V() {
                                    (n = !1), L();
                                }
                                function j(S, M) {
                                    var x;
                                    for (x = 0; x < i; x += 1)
                                        t[x].animation.setVolume(S, M);
                                }
                                function G(S) {
                                    var M;
                                    for (M = 0; M < i; M += 1)
                                        t[M].animation.mute(S);
                                }
                                function B(S) {
                                    var M;
                                    for (M = 0; M < i; M += 1)
                                        t[M].animation.unmute(S);
                                }
                                return (
                                    (e.registerAnimation = o),
                                    (e.loadAnimation = b),
                                    (e.setSpeed = _),
                                    (e.setDirection = d),
                                    (e.play = C),
                                    (e.pause = p),
                                    (e.stop = P),
                                    (e.togglePause = A),
                                    (e.searchAnimations = T),
                                    (e.resize = D),
                                    (e.goToAndStop = g),
                                    (e.destroy = F),
                                    (e.freeze = q),
                                    (e.unfreeze = V),
                                    (e.setVolume = j),
                                    (e.mute = G),
                                    (e.unmute = B),
                                    (e.getRegisteredAnimations = f),
                                    e
                                );
                            })(),
                            BezierFactory = (function () {
                                var e = {};
                                e.getBezierEasing = r;
                                var t = {};
                                function r(m, p, g, P, A) {
                                    var F =
                                        A ||
                                        (
                                            'bez_' +
                                            m +
                                            '_' +
                                            p +
                                            '_' +
                                            g +
                                            '_' +
                                            P
                                        ).replace(/\./g, 'p');
                                    if (t[F]) return t[F];
                                    var T = new c([m, p, g, P]);
                                    return (t[F] = T), T;
                                }
                                var i = 4,
                                    s = 0.001,
                                    a = 1e-7,
                                    n = 10,
                                    l = 11,
                                    o = 1 / (l - 1),
                                    f = typeof Float32Array == 'function';
                                function y(m, p) {
                                    return 1 - 3 * p + 3 * m;
                                }
                                function E(m, p) {
                                    return 3 * p - 6 * m;
                                }
                                function u(m) {
                                    return 3 * m;
                                }
                                function b(m, p, g) {
                                    return (
                                        ((y(p, g) * m + E(p, g)) * m + u(p)) * m
                                    );
                                }
                                function _(m, p, g) {
                                    return (
                                        3 * y(p, g) * m * m +
                                        2 * E(p, g) * m +
                                        u(p)
                                    );
                                }
                                function d(m, p, g, P, A) {
                                    var F,
                                        T,
                                        D = 0;
                                    do
                                        (T = p + (g - p) / 2),
                                            (F = b(T, P, A) - m),
                                            F > 0 ? (g = T) : (p = T);
                                    while (Math.abs(F) > a && ++D < n);
                                    return T;
                                }
                                function C(m, p, g, P) {
                                    for (var A = 0; A < i; ++A) {
                                        var F = _(p, g, P);
                                        if (F === 0) return p;
                                        var T = b(p, g, P) - m;
                                        p -= T / F;
                                    }
                                    return p;
                                }
                                function c(m) {
                                    (this._p = m),
                                        (this._mSampleValues = f
                                            ? new Float32Array(l)
                                            : new Array(l)),
                                        (this._precomputed = !1),
                                        (this.get = this.get.bind(this));
                                }
                                return (
                                    (c.prototype = {
                                        get: function (p) {
                                            var g = this._p[0],
                                                P = this._p[1],
                                                A = this._p[2],
                                                F = this._p[3];
                                            return (
                                                this._precomputed ||
                                                    this._precompute(),
                                                g === P && A === F
                                                    ? p
                                                    : p === 0
                                                      ? 0
                                                      : p === 1
                                                        ? 1
                                                        : b(
                                                              this._getTForX(p),
                                                              P,
                                                              F
                                                          )
                                            );
                                        },
                                        _precompute: function () {
                                            var p = this._p[0],
                                                g = this._p[1],
                                                P = this._p[2],
                                                A = this._p[3];
                                            (this._precomputed = !0),
                                                (p !== g || P !== A) &&
                                                    this._calcSampleValues();
                                        },
                                        _calcSampleValues: function () {
                                            for (
                                                var p = this._p[0],
                                                    g = this._p[2],
                                                    P = 0;
                                                P < l;
                                                ++P
                                            )
                                                this._mSampleValues[P] = b(
                                                    P * o,
                                                    p,
                                                    g
                                                );
                                        },
                                        _getTForX: function (p) {
                                            for (
                                                var g = this._p[0],
                                                    P = this._p[2],
                                                    A = this._mSampleValues,
                                                    F = 0,
                                                    T = 1,
                                                    D = l - 1;
                                                T !== D && A[T] <= p;
                                                ++T
                                            )
                                                F += o;
                                            --T;
                                            var L =
                                                    (p - A[T]) /
                                                    (A[T + 1] - A[T]),
                                                q = F + L * o,
                                                V = _(q, g, P);
                                            return V >= s
                                                ? C(p, q, g, P)
                                                : V === 0
                                                  ? q
                                                  : d(p, F, F + o, g, P);
                                        },
                                    }),
                                    e
                                );
                            })(),
                            pooling = (function () {
                                function e(t) {
                                    return t.concat(createSizedArray(t.length));
                                }
                                return { double: e };
                            })(),
                            poolFactory = (function () {
                                return function (e, t, r) {
                                    var i = 0,
                                        s = e,
                                        a = createSizedArray(s),
                                        n = { newElement: l, release: o };
                                    function l() {
                                        var f;
                                        return (
                                            i
                                                ? ((i -= 1), (f = a[i]))
                                                : (f = t()),
                                            f
                                        );
                                    }
                                    function o(f) {
                                        i === s &&
                                            ((a = pooling.double(a)), (s *= 2)),
                                            r && r(f),
                                            (a[i] = f),
                                            (i += 1);
                                    }
                                    return n;
                                };
                            })(),
                            bezierLengthPool = (function () {
                                function e() {
                                    return {
                                        addedLength: 0,
                                        percents: createTypedArray(
                                            'float32',
                                            getDefaultCurveSegments()
                                        ),
                                        lengths: createTypedArray(
                                            'float32',
                                            getDefaultCurveSegments()
                                        ),
                                    };
                                }
                                return poolFactory(8, e);
                            })(),
                            segmentsLengthPool = (function () {
                                function e() {
                                    return { lengths: [], totalLength: 0 };
                                }
                                function t(r) {
                                    var i,
                                        s = r.lengths.length;
                                    for (i = 0; i < s; i += 1)
                                        bezierLengthPool.release(r.lengths[i]);
                                    r.lengths.length = 0;
                                }
                                return poolFactory(8, e, t);
                            })();
                        function bezFunction() {
                            var e = Math;
                            function t(u, b, _, d, C, c) {
                                var m =
                                    u * d +
                                    b * C +
                                    _ * c -
                                    C * d -
                                    c * u -
                                    _ * b;
                                return m > -0.001 && m < 0.001;
                            }
                            function r(u, b, _, d, C, c, m, p, g) {
                                if (_ === 0 && c === 0 && g === 0)
                                    return t(u, b, d, C, m, p);
                                var P = e.sqrt(
                                        e.pow(d - u, 2) +
                                            e.pow(C - b, 2) +
                                            e.pow(c - _, 2)
                                    ),
                                    A = e.sqrt(
                                        e.pow(m - u, 2) +
                                            e.pow(p - b, 2) +
                                            e.pow(g - _, 2)
                                    ),
                                    F = e.sqrt(
                                        e.pow(m - d, 2) +
                                            e.pow(p - C, 2) +
                                            e.pow(g - c, 2)
                                    ),
                                    T;
                                return (
                                    P > A
                                        ? P > F
                                            ? (T = P - A - F)
                                            : (T = F - A - P)
                                        : F > A
                                          ? (T = F - A - P)
                                          : (T = A - P - F),
                                    T > -1e-4 && T < 1e-4
                                );
                            }
                            var i = (function () {
                                return function (u, b, _, d) {
                                    var C = getDefaultCurveSegments(),
                                        c,
                                        m,
                                        p,
                                        g,
                                        P,
                                        A = 0,
                                        F,
                                        T = [],
                                        D = [],
                                        L = bezierLengthPool.newElement();
                                    for (p = _.length, c = 0; c < C; c += 1) {
                                        for (
                                            P = c / (C - 1), F = 0, m = 0;
                                            m < p;
                                            m += 1
                                        )
                                            (g =
                                                bmPow(1 - P, 3) * u[m] +
                                                3 * bmPow(1 - P, 2) * P * _[m] +
                                                3 *
                                                    (1 - P) *
                                                    bmPow(P, 2) *
                                                    d[m] +
                                                bmPow(P, 3) * b[m]),
                                                (T[m] = g),
                                                D[m] !== null &&
                                                    (F += bmPow(
                                                        T[m] - D[m],
                                                        2
                                                    )),
                                                (D[m] = T[m]);
                                        F && ((F = bmSqrt(F)), (A += F)),
                                            (L.percents[c] = P),
                                            (L.lengths[c] = A);
                                    }
                                    return (L.addedLength = A), L;
                                };
                            })();
                            function s(u) {
                                var b = segmentsLengthPool.newElement(),
                                    _ = u.c,
                                    d = u.v,
                                    C = u.o,
                                    c = u.i,
                                    m,
                                    p = u._length,
                                    g = b.lengths,
                                    P = 0;
                                for (m = 0; m < p - 1; m += 1)
                                    (g[m] = i(d[m], d[m + 1], C[m], c[m + 1])),
                                        (P += g[m].addedLength);
                                return (
                                    _ &&
                                        p &&
                                        ((g[m] = i(d[m], d[0], C[m], c[0])),
                                        (P += g[m].addedLength)),
                                    (b.totalLength = P),
                                    b
                                );
                            }
                            function a(u) {
                                (this.segmentLength = 0),
                                    (this.points = new Array(u));
                            }
                            function n(u, b) {
                                (this.partialLength = u), (this.point = b);
                            }
                            var l = (function () {
                                var u = {};
                                return function (b, _, d, C) {
                                    var c = (
                                        b[0] +
                                        '_' +
                                        b[1] +
                                        '_' +
                                        _[0] +
                                        '_' +
                                        _[1] +
                                        '_' +
                                        d[0] +
                                        '_' +
                                        d[1] +
                                        '_' +
                                        C[0] +
                                        '_' +
                                        C[1]
                                    ).replace(/\./g, 'p');
                                    if (!u[c]) {
                                        var m = getDefaultCurveSegments(),
                                            p,
                                            g,
                                            P,
                                            A,
                                            F,
                                            T = 0,
                                            D,
                                            L,
                                            q = null;
                                        b.length === 2 &&
                                            (b[0] !== _[0] || b[1] !== _[1]) &&
                                            t(
                                                b[0],
                                                b[1],
                                                _[0],
                                                _[1],
                                                b[0] + d[0],
                                                b[1] + d[1]
                                            ) &&
                                            t(
                                                b[0],
                                                b[1],
                                                _[0],
                                                _[1],
                                                _[0] + C[0],
                                                _[1] + C[1]
                                            ) &&
                                            (m = 2);
                                        var V = new a(m);
                                        for (
                                            P = d.length, p = 0;
                                            p < m;
                                            p += 1
                                        ) {
                                            for (
                                                L = createSizedArray(P),
                                                    F = p / (m - 1),
                                                    D = 0,
                                                    g = 0;
                                                g < P;
                                                g += 1
                                            )
                                                (A =
                                                    bmPow(1 - F, 3) * b[g] +
                                                    3 *
                                                        bmPow(1 - F, 2) *
                                                        F *
                                                        (b[g] + d[g]) +
                                                    3 *
                                                        (1 - F) *
                                                        bmPow(F, 2) *
                                                        (_[g] + C[g]) +
                                                    bmPow(F, 3) * _[g]),
                                                    (L[g] = A),
                                                    q !== null &&
                                                        (D += bmPow(
                                                            L[g] - q[g],
                                                            2
                                                        ));
                                            (D = bmSqrt(D)),
                                                (T += D),
                                                (V.points[p] = new n(D, L)),
                                                (q = L);
                                        }
                                        (V.segmentLength = T), (u[c] = V);
                                    }
                                    return u[c];
                                };
                            })();
                            function o(u, b) {
                                var _ = b.percents,
                                    d = b.lengths,
                                    C = _.length,
                                    c = bmFloor((C - 1) * u),
                                    m = u * b.addedLength,
                                    p = 0;
                                if (c === C - 1 || c === 0 || m === d[c])
                                    return _[c];
                                for (var g = d[c] > m ? -1 : 1, P = !0; P; )
                                    if (
                                        (d[c] <= m && d[c + 1] > m
                                            ? ((p =
                                                  (m - d[c]) /
                                                  (d[c + 1] - d[c])),
                                              (P = !1))
                                            : (c += g),
                                        c < 0 || c >= C - 1)
                                    ) {
                                        if (c === C - 1) return _[c];
                                        P = !1;
                                    }
                                return _[c] + (_[c + 1] - _[c]) * p;
                            }
                            function f(u, b, _, d, C, c) {
                                var m = o(C, c),
                                    p = 1 - m,
                                    g =
                                        e.round(
                                            (p * p * p * u[0] +
                                                (m * p * p +
                                                    p * m * p +
                                                    p * p * m) *
                                                    _[0] +
                                                (m * m * p +
                                                    p * m * m +
                                                    m * p * m) *
                                                    d[0] +
                                                m * m * m * b[0]) *
                                                1e3
                                        ) / 1e3,
                                    P =
                                        e.round(
                                            (p * p * p * u[1] +
                                                (m * p * p +
                                                    p * m * p +
                                                    p * p * m) *
                                                    _[1] +
                                                (m * m * p +
                                                    p * m * m +
                                                    m * p * m) *
                                                    d[1] +
                                                m * m * m * b[1]) *
                                                1e3
                                        ) / 1e3;
                                return [g, P];
                            }
                            var y = createTypedArray('float32', 8);
                            function E(u, b, _, d, C, c, m) {
                                C < 0 ? (C = 0) : C > 1 && (C = 1);
                                var p = o(C, m);
                                c = c > 1 ? 1 : c;
                                var g = o(c, m),
                                    P,
                                    A = u.length,
                                    F = 1 - p,
                                    T = 1 - g,
                                    D = F * F * F,
                                    L = p * F * F * 3,
                                    q = p * p * F * 3,
                                    V = p * p * p,
                                    j = F * F * T,
                                    G = p * F * T + F * p * T + F * F * g,
                                    B = p * p * T + F * p * g + p * F * g,
                                    S = p * p * g,
                                    M = F * T * T,
                                    x = p * T * T + F * g * T + F * T * g,
                                    k = p * g * T + F * g * g + p * T * g,
                                    R = p * g * g,
                                    I = T * T * T,
                                    O = g * T * T + T * g * T + T * T * g,
                                    $ = g * g * T + T * g * g + g * T * g,
                                    H = g * g * g;
                                for (P = 0; P < A; P += 1)
                                    (y[P * 4] =
                                        e.round(
                                            (D * u[P] +
                                                L * _[P] +
                                                q * d[P] +
                                                V * b[P]) *
                                                1e3
                                        ) / 1e3),
                                        (y[P * 4 + 1] =
                                            e.round(
                                                (j * u[P] +
                                                    G * _[P] +
                                                    B * d[P] +
                                                    S * b[P]) *
                                                    1e3
                                            ) / 1e3),
                                        (y[P * 4 + 2] =
                                            e.round(
                                                (M * u[P] +
                                                    x * _[P] +
                                                    k * d[P] +
                                                    R * b[P]) *
                                                    1e3
                                            ) / 1e3),
                                        (y[P * 4 + 3] =
                                            e.round(
                                                (I * u[P] +
                                                    O * _[P] +
                                                    $ * d[P] +
                                                    H * b[P]) *
                                                    1e3
                                            ) / 1e3);
                                return y;
                            }
                            return {
                                getSegmentsLength: s,
                                getNewSegment: E,
                                getPointInSegment: f,
                                buildBezierData: l,
                                pointOnLine2D: t,
                                pointOnLine3D: r,
                            };
                        }
                        var bez = bezFunction(),
                            initFrame = initialDefaultFrame,
                            mathAbs = Math.abs;
                        function interpolateValue(e, t) {
                            var r = this.offsetTime,
                                i;
                            this.propType === 'multidimensional' &&
                                (i = createTypedArray(
                                    'float32',
                                    this.pv.length
                                ));
                            for (
                                var s = t.lastIndex,
                                    a = s,
                                    n = this.keyframes.length - 1,
                                    l = !0,
                                    o,
                                    f,
                                    y;
                                l;

                            ) {
                                if (
                                    ((o = this.keyframes[a]),
                                    (f = this.keyframes[a + 1]),
                                    a === n - 1 && e >= f.t - r)
                                ) {
                                    o.h && (o = f), (s = 0);
                                    break;
                                }
                                if (f.t - r > e) {
                                    s = a;
                                    break;
                                }
                                a < n - 1 ? (a += 1) : ((s = 0), (l = !1));
                            }
                            y = this.keyframesMetadata[a] || {};
                            var E,
                                u,
                                b,
                                _,
                                d,
                                C,
                                c = f.t - r,
                                m = o.t - r,
                                p;
                            if (o.to) {
                                y.bezierData ||
                                    (y.bezierData = bez.buildBezierData(
                                        o.s,
                                        f.s || o.e,
                                        o.to,
                                        o.ti
                                    ));
                                var g = y.bezierData;
                                if (e >= c || e < m) {
                                    var P = e >= c ? g.points.length - 1 : 0;
                                    for (
                                        u = g.points[P].point.length, E = 0;
                                        E < u;
                                        E += 1
                                    )
                                        i[E] = g.points[P].point[E];
                                } else {
                                    y.__fnct
                                        ? (C = y.__fnct)
                                        : ((C = BezierFactory.getBezierEasing(
                                              o.o.x,
                                              o.o.y,
                                              o.i.x,
                                              o.i.y,
                                              o.n
                                          ).get),
                                          (y.__fnct = C)),
                                        (b = C((e - m) / (c - m)));
                                    var A = g.segmentLength * b,
                                        F,
                                        T =
                                            t.lastFrame < e &&
                                            t._lastKeyframeIndex === a
                                                ? t._lastAddedLength
                                                : 0;
                                    for (
                                        d =
                                            t.lastFrame < e &&
                                            t._lastKeyframeIndex === a
                                                ? t._lastPoint
                                                : 0,
                                            l = !0,
                                            _ = g.points.length;
                                        l;

                                    ) {
                                        if (
                                            ((T += g.points[d].partialLength),
                                            A === 0 ||
                                                b === 0 ||
                                                d === g.points.length - 1)
                                        ) {
                                            for (
                                                u = g.points[d].point.length,
                                                    E = 0;
                                                E < u;
                                                E += 1
                                            )
                                                i[E] = g.points[d].point[E];
                                            break;
                                        } else if (
                                            A >= T &&
                                            A <
                                                T +
                                                    g.points[d + 1]
                                                        .partialLength
                                        ) {
                                            for (
                                                F =
                                                    (A - T) /
                                                    g.points[d + 1]
                                                        .partialLength,
                                                    u =
                                                        g.points[d].point
                                                            .length,
                                                    E = 0;
                                                E < u;
                                                E += 1
                                            )
                                                i[E] =
                                                    g.points[d].point[E] +
                                                    (g.points[d + 1].point[E] -
                                                        g.points[d].point[E]) *
                                                        F;
                                            break;
                                        }
                                        d < _ - 1 ? (d += 1) : (l = !1);
                                    }
                                    (t._lastPoint = d),
                                        (t._lastAddedLength =
                                            T - g.points[d].partialLength),
                                        (t._lastKeyframeIndex = a);
                                }
                            } else {
                                var D, L, q, V, j;
                                if (
                                    ((n = o.s.length),
                                    (p = f.s || o.e),
                                    this.sh && o.h !== 1)
                                )
                                    if (e >= c)
                                        (i[0] = p[0]),
                                            (i[1] = p[1]),
                                            (i[2] = p[2]);
                                    else if (e <= m)
                                        (i[0] = o.s[0]),
                                            (i[1] = o.s[1]),
                                            (i[2] = o.s[2]);
                                    else {
                                        var G = createQuaternion(o.s),
                                            B = createQuaternion(p),
                                            S = (e - m) / (c - m);
                                        quaternionToEuler(i, slerp(G, B, S));
                                    }
                                else
                                    for (a = 0; a < n; a += 1)
                                        o.h !== 1 &&
                                            (e >= c
                                                ? (b = 1)
                                                : e < m
                                                  ? (b = 0)
                                                  : (o.o.x.constructor === Array
                                                        ? (y.__fnct ||
                                                              (y.__fnct = []),
                                                          y.__fnct[a]
                                                              ? (C =
                                                                    y.__fnct[a])
                                                              : ((D =
                                                                    o.o.x[a] ===
                                                                    void 0
                                                                        ? o.o
                                                                              .x[0]
                                                                        : o.o.x[
                                                                              a
                                                                          ]),
                                                                (L =
                                                                    o.o.y[a] ===
                                                                    void 0
                                                                        ? o.o
                                                                              .y[0]
                                                                        : o.o.y[
                                                                              a
                                                                          ]),
                                                                (q =
                                                                    o.i.x[a] ===
                                                                    void 0
                                                                        ? o.i
                                                                              .x[0]
                                                                        : o.i.x[
                                                                              a
                                                                          ]),
                                                                (V =
                                                                    o.i.y[a] ===
                                                                    void 0
                                                                        ? o.i
                                                                              .y[0]
                                                                        : o.i.y[
                                                                              a
                                                                          ]),
                                                                (C =
                                                                    BezierFactory.getBezierEasing(
                                                                        D,
                                                                        L,
                                                                        q,
                                                                        V
                                                                    ).get),
                                                                (y.__fnct[a] =
                                                                    C)))
                                                        : y.__fnct
                                                          ? (C = y.__fnct)
                                                          : ((D = o.o.x),
                                                            (L = o.o.y),
                                                            (q = o.i.x),
                                                            (V = o.i.y),
                                                            (C =
                                                                BezierFactory.getBezierEasing(
                                                                    D,
                                                                    L,
                                                                    q,
                                                                    V
                                                                ).get),
                                                            (o.keyframeMetadata =
                                                                C)),
                                                    (b = C(
                                                        (e - m) / (c - m)
                                                    )))),
                                            (p = f.s || o.e),
                                            (j =
                                                o.h === 1
                                                    ? o.s[a]
                                                    : o.s[a] +
                                                      (p[a] - o.s[a]) * b),
                                            this.propType === 'multidimensional'
                                                ? (i[a] = j)
                                                : (i = j);
                            }
                            return (t.lastIndex = s), i;
                        }
                        function slerp(e, t, r) {
                            var i = [],
                                s = e[0],
                                a = e[1],
                                n = e[2],
                                l = e[3],
                                o = t[0],
                                f = t[1],
                                y = t[2],
                                E = t[3],
                                u,
                                b,
                                _,
                                d,
                                C;
                            return (
                                (b = s * o + a * f + n * y + l * E),
                                b < 0 &&
                                    ((b = -b),
                                    (o = -o),
                                    (f = -f),
                                    (y = -y),
                                    (E = -E)),
                                1 - b > 1e-6
                                    ? ((u = Math.acos(b)),
                                      (_ = Math.sin(u)),
                                      (d = Math.sin((1 - r) * u) / _),
                                      (C = Math.sin(r * u) / _))
                                    : ((d = 1 - r), (C = r)),
                                (i[0] = d * s + C * o),
                                (i[1] = d * a + C * f),
                                (i[2] = d * n + C * y),
                                (i[3] = d * l + C * E),
                                i
                            );
                        }
                        function quaternionToEuler(e, t) {
                            var r = t[0],
                                i = t[1],
                                s = t[2],
                                a = t[3],
                                n = Math.atan2(
                                    2 * i * a - 2 * r * s,
                                    1 - 2 * i * i - 2 * s * s
                                ),
                                l = Math.asin(2 * r * i + 2 * s * a),
                                o = Math.atan2(
                                    2 * r * a - 2 * i * s,
                                    1 - 2 * r * r - 2 * s * s
                                );
                            (e[0] = n / degToRads),
                                (e[1] = l / degToRads),
                                (e[2] = o / degToRads);
                        }
                        function createQuaternion(e) {
                            var t = e[0] * degToRads,
                                r = e[1] * degToRads,
                                i = e[2] * degToRads,
                                s = Math.cos(t / 2),
                                a = Math.cos(r / 2),
                                n = Math.cos(i / 2),
                                l = Math.sin(t / 2),
                                o = Math.sin(r / 2),
                                f = Math.sin(i / 2),
                                y = s * a * n - l * o * f,
                                E = l * o * n + s * a * f,
                                u = l * a * n + s * o * f,
                                b = s * o * n - l * a * f;
                            return [E, u, b, y];
                        }
                        function getValueAtCurrentTime() {
                            var e = this.comp.renderedFrame - this.offsetTime,
                                t = this.keyframes[0].t - this.offsetTime,
                                r =
                                    this.keyframes[this.keyframes.length - 1]
                                        .t - this.offsetTime;
                            if (
                                !(
                                    e === this._caching.lastFrame ||
                                    (this._caching.lastFrame !== initFrame &&
                                        ((this._caching.lastFrame >= r &&
                                            e >= r) ||
                                            (this._caching.lastFrame < t &&
                                                e < t)))
                                )
                            ) {
                                this._caching.lastFrame >= e &&
                                    ((this._caching._lastKeyframeIndex = -1),
                                    (this._caching.lastIndex = 0));
                                var i = this.interpolateValue(e, this._caching);
                                this.pv = i;
                            }
                            return (this._caching.lastFrame = e), this.pv;
                        }
                        function setVValue(e) {
                            var t;
                            if (this.propType === 'unidimensional')
                                (t = e * this.mult),
                                    mathAbs(this.v - t) > 1e-5 &&
                                        ((this.v = t), (this._mdf = !0));
                            else
                                for (var r = 0, i = this.v.length; r < i; )
                                    (t = e[r] * this.mult),
                                        mathAbs(this.v[r] - t) > 1e-5 &&
                                            ((this.v[r] = t), (this._mdf = !0)),
                                        (r += 1);
                        }
                        function processEffectsSequence() {
                            if (
                                !(
                                    this.elem.globalData.frameId ===
                                        this.frameId ||
                                    !this.effectsSequence.length
                                )
                            ) {
                                if (this.lock) {
                                    this.setVValue(this.pv);
                                    return;
                                }
                                (this.lock = !0),
                                    (this._mdf = this._isFirstFrame);
                                var e,
                                    t = this.effectsSequence.length,
                                    r = this.kf ? this.pv : this.data.k;
                                for (e = 0; e < t; e += 1)
                                    r = this.effectsSequence[e](r);
                                this.setVValue(r),
                                    (this._isFirstFrame = !1),
                                    (this.lock = !1),
                                    (this.frameId =
                                        this.elem.globalData.frameId);
                            }
                        }
                        function addEffect(e) {
                            this.effectsSequence.push(e),
                                this.container.addDynamicProperty(this);
                        }
                        function ValueProperty(e, t, r, i) {
                            (this.propType = 'unidimensional'),
                                (this.mult = r || 1),
                                (this.data = t),
                                (this.v = r ? t.k * r : t.k),
                                (this.pv = t.k),
                                (this._mdf = !1),
                                (this.elem = e),
                                (this.container = i),
                                (this.comp = e.comp),
                                (this.k = !1),
                                (this.kf = !1),
                                (this.vel = 0),
                                (this.effectsSequence = []),
                                (this._isFirstFrame = !0),
                                (this.getValue = processEffectsSequence),
                                (this.setVValue = setVValue),
                                (this.addEffect = addEffect);
                        }
                        function MultiDimensionalProperty(e, t, r, i) {
                            (this.propType = 'multidimensional'),
                                (this.mult = r || 1),
                                (this.data = t),
                                (this._mdf = !1),
                                (this.elem = e),
                                (this.container = i),
                                (this.comp = e.comp),
                                (this.k = !1),
                                (this.kf = !1),
                                (this.frameId = -1);
                            var s,
                                a = t.k.length;
                            for (
                                this.v = createTypedArray('float32', a),
                                    this.pv = createTypedArray('float32', a),
                                    this.vel = createTypedArray('float32', a),
                                    s = 0;
                                s < a;
                                s += 1
                            )
                                (this.v[s] = t.k[s] * this.mult),
                                    (this.pv[s] = t.k[s]);
                            (this._isFirstFrame = !0),
                                (this.effectsSequence = []),
                                (this.getValue = processEffectsSequence),
                                (this.setVValue = setVValue),
                                (this.addEffect = addEffect);
                        }
                        function KeyframedValueProperty(e, t, r, i) {
                            (this.propType = 'unidimensional'),
                                (this.keyframes = t.k),
                                (this.keyframesMetadata = []),
                                (this.offsetTime = e.data.st),
                                (this.frameId = -1),
                                (this._caching = {
                                    lastFrame: initFrame,
                                    lastIndex: 0,
                                    value: 0,
                                    _lastKeyframeIndex: -1,
                                }),
                                (this.k = !0),
                                (this.kf = !0),
                                (this.data = t),
                                (this.mult = r || 1),
                                (this.elem = e),
                                (this.container = i),
                                (this.comp = e.comp),
                                (this.v = initFrame),
                                (this.pv = initFrame),
                                (this._isFirstFrame = !0),
                                (this.getValue = processEffectsSequence),
                                (this.setVValue = setVValue),
                                (this.interpolateValue = interpolateValue),
                                (this.effectsSequence = [
                                    getValueAtCurrentTime.bind(this),
                                ]),
                                (this.addEffect = addEffect);
                        }
                        function KeyframedMultidimensionalProperty(e, t, r, i) {
                            this.propType = 'multidimensional';
                            var s,
                                a = t.k.length,
                                n,
                                l,
                                o,
                                f;
                            for (s = 0; s < a - 1; s += 1)
                                t.k[s].to &&
                                    t.k[s].s &&
                                    t.k[s + 1] &&
                                    t.k[s + 1].s &&
                                    ((n = t.k[s].s),
                                    (l = t.k[s + 1].s),
                                    (o = t.k[s].to),
                                    (f = t.k[s].ti),
                                    ((n.length === 2 &&
                                        !(n[0] === l[0] && n[1] === l[1]) &&
                                        bez.pointOnLine2D(
                                            n[0],
                                            n[1],
                                            l[0],
                                            l[1],
                                            n[0] + o[0],
                                            n[1] + o[1]
                                        ) &&
                                        bez.pointOnLine2D(
                                            n[0],
                                            n[1],
                                            l[0],
                                            l[1],
                                            l[0] + f[0],
                                            l[1] + f[1]
                                        )) ||
                                        (n.length === 3 &&
                                            !(
                                                n[0] === l[0] &&
                                                n[1] === l[1] &&
                                                n[2] === l[2]
                                            ) &&
                                            bez.pointOnLine3D(
                                                n[0],
                                                n[1],
                                                n[2],
                                                l[0],
                                                l[1],
                                                l[2],
                                                n[0] + o[0],
                                                n[1] + o[1],
                                                n[2] + o[2]
                                            ) &&
                                            bez.pointOnLine3D(
                                                n[0],
                                                n[1],
                                                n[2],
                                                l[0],
                                                l[1],
                                                l[2],
                                                l[0] + f[0],
                                                l[1] + f[1],
                                                l[2] + f[2]
                                            ))) &&
                                        ((t.k[s].to = null),
                                        (t.k[s].ti = null)),
                                    n[0] === l[0] &&
                                        n[1] === l[1] &&
                                        o[0] === 0 &&
                                        o[1] === 0 &&
                                        f[0] === 0 &&
                                        f[1] === 0 &&
                                        (n.length === 2 ||
                                            (n[2] === l[2] &&
                                                o[2] === 0 &&
                                                f[2] === 0)) &&
                                        ((t.k[s].to = null),
                                        (t.k[s].ti = null)));
                            (this.effectsSequence = [
                                getValueAtCurrentTime.bind(this),
                            ]),
                                (this.data = t),
                                (this.keyframes = t.k),
                                (this.keyframesMetadata = []),
                                (this.offsetTime = e.data.st),
                                (this.k = !0),
                                (this.kf = !0),
                                (this._isFirstFrame = !0),
                                (this.mult = r || 1),
                                (this.elem = e),
                                (this.container = i),
                                (this.comp = e.comp),
                                (this.getValue = processEffectsSequence),
                                (this.setVValue = setVValue),
                                (this.interpolateValue = interpolateValue),
                                (this.frameId = -1);
                            var y = t.k[0].s.length;
                            for (
                                this.v = createTypedArray('float32', y),
                                    this.pv = createTypedArray('float32', y),
                                    s = 0;
                                s < y;
                                s += 1
                            )
                                (this.v[s] = initFrame),
                                    (this.pv[s] = initFrame);
                            (this._caching = {
                                lastFrame: initFrame,
                                lastIndex: 0,
                                value: createTypedArray('float32', y),
                            }),
                                (this.addEffect = addEffect);
                        }
                        var PropertyFactory = (function () {
                            function e(r, i, s, a, n) {
                                i.sid &&
                                    (i = r.globalData.slotManager.getProp(i));
                                var l;
                                if (!i.k.length)
                                    l = new ValueProperty(r, i, a, n);
                                else if (typeof i.k[0] == 'number')
                                    l = new MultiDimensionalProperty(
                                        r,
                                        i,
                                        a,
                                        n
                                    );
                                else
                                    switch (s) {
                                        case 0:
                                            l = new KeyframedValueProperty(
                                                r,
                                                i,
                                                a,
                                                n
                                            );
                                            break;
                                        case 1:
                                            l =
                                                new KeyframedMultidimensionalProperty(
                                                    r,
                                                    i,
                                                    a,
                                                    n
                                                );
                                            break;
                                    }
                                return (
                                    l.effectsSequence.length &&
                                        n.addDynamicProperty(l),
                                    l
                                );
                            }
                            var t = { getProp: e };
                            return t;
                        })();
                        function DynamicPropertyContainer() {}
                        DynamicPropertyContainer.prototype = {
                            addDynamicProperty: function (t) {
                                this.dynamicProperties.indexOf(t) === -1 &&
                                    (this.dynamicProperties.push(t),
                                    this.container.addDynamicProperty(this),
                                    (this._isAnimated = !0));
                            },
                            iterateDynamicProperties: function () {
                                this._mdf = !1;
                                var t,
                                    r = this.dynamicProperties.length;
                                for (t = 0; t < r; t += 1)
                                    this.dynamicProperties[t].getValue(),
                                        this.dynamicProperties[t]._mdf &&
                                            (this._mdf = !0);
                            },
                            initDynamicPropertyContainer: function (t) {
                                (this.container = t),
                                    (this.dynamicProperties = []),
                                    (this._mdf = !1),
                                    (this._isAnimated = !1);
                            },
                        };
                        var pointPool = (function () {
                            function e() {
                                return createTypedArray('float32', 2);
                            }
                            return poolFactory(8, e);
                        })();
                        function ShapePath() {
                            (this.c = !1),
                                (this._length = 0),
                                (this._maxLength = 8),
                                (this.v = createSizedArray(this._maxLength)),
                                (this.o = createSizedArray(this._maxLength)),
                                (this.i = createSizedArray(this._maxLength));
                        }
                        (ShapePath.prototype.setPathData = function (e, t) {
                            (this.c = e), this.setLength(t);
                            for (var r = 0; r < t; )
                                (this.v[r] = pointPool.newElement()),
                                    (this.o[r] = pointPool.newElement()),
                                    (this.i[r] = pointPool.newElement()),
                                    (r += 1);
                        }),
                            (ShapePath.prototype.setLength = function (e) {
                                for (; this._maxLength < e; )
                                    this.doubleArrayLength();
                                this._length = e;
                            }),
                            (ShapePath.prototype.doubleArrayLength =
                                function () {
                                    (this.v = this.v.concat(
                                        createSizedArray(this._maxLength)
                                    )),
                                        (this.i = this.i.concat(
                                            createSizedArray(this._maxLength)
                                        )),
                                        (this.o = this.o.concat(
                                            createSizedArray(this._maxLength)
                                        )),
                                        (this._maxLength *= 2);
                                }),
                            (ShapePath.prototype.setXYAt = function (
                                e,
                                t,
                                r,
                                i,
                                s
                            ) {
                                var a;
                                switch (
                                    ((this._length = Math.max(
                                        this._length,
                                        i + 1
                                    )),
                                    this._length >= this._maxLength &&
                                        this.doubleArrayLength(),
                                    r)
                                ) {
                                    case 'v':
                                        a = this.v;
                                        break;
                                    case 'i':
                                        a = this.i;
                                        break;
                                    case 'o':
                                        a = this.o;
                                        break;
                                    default:
                                        a = [];
                                        break;
                                }
                                (!a[i] || (a[i] && !s)) &&
                                    (a[i] = pointPool.newElement()),
                                    (a[i][0] = e),
                                    (a[i][1] = t);
                            }),
                            (ShapePath.prototype.setTripleAt = function (
                                e,
                                t,
                                r,
                                i,
                                s,
                                a,
                                n,
                                l
                            ) {
                                this.setXYAt(e, t, 'v', n, l),
                                    this.setXYAt(r, i, 'o', n, l),
                                    this.setXYAt(s, a, 'i', n, l);
                            }),
                            (ShapePath.prototype.reverse = function () {
                                var e = new ShapePath();
                                e.setPathData(this.c, this._length);
                                var t = this.v,
                                    r = this.o,
                                    i = this.i,
                                    s = 0;
                                this.c &&
                                    (e.setTripleAt(
                                        t[0][0],
                                        t[0][1],
                                        i[0][0],
                                        i[0][1],
                                        r[0][0],
                                        r[0][1],
                                        0,
                                        !1
                                    ),
                                    (s = 1));
                                var a = this._length - 1,
                                    n = this._length,
                                    l;
                                for (l = s; l < n; l += 1)
                                    e.setTripleAt(
                                        t[a][0],
                                        t[a][1],
                                        i[a][0],
                                        i[a][1],
                                        r[a][0],
                                        r[a][1],
                                        l,
                                        !1
                                    ),
                                        (a -= 1);
                                return e;
                            }),
                            (ShapePath.prototype.length = function () {
                                return this._length;
                            });
                        var shapePool = (function () {
                            function e() {
                                return new ShapePath();
                            }
                            function t(s) {
                                var a = s._length,
                                    n;
                                for (n = 0; n < a; n += 1)
                                    pointPool.release(s.v[n]),
                                        pointPool.release(s.i[n]),
                                        pointPool.release(s.o[n]),
                                        (s.v[n] = null),
                                        (s.i[n] = null),
                                        (s.o[n] = null);
                                (s._length = 0), (s.c = !1);
                            }
                            function r(s) {
                                var a = i.newElement(),
                                    n,
                                    l =
                                        s._length === void 0
                                            ? s.v.length
                                            : s._length;
                                for (
                                    a.setLength(l), a.c = s.c, n = 0;
                                    n < l;
                                    n += 1
                                )
                                    a.setTripleAt(
                                        s.v[n][0],
                                        s.v[n][1],
                                        s.o[n][0],
                                        s.o[n][1],
                                        s.i[n][0],
                                        s.i[n][1],
                                        n
                                    );
                                return a;
                            }
                            var i = poolFactory(4, e, t);
                            return (i.clone = r), i;
                        })();
                        function ShapeCollection() {
                            (this._length = 0),
                                (this._maxLength = 4),
                                (this.shapes = createSizedArray(
                                    this._maxLength
                                ));
                        }
                        (ShapeCollection.prototype.addShape = function (e) {
                            this._length === this._maxLength &&
                                ((this.shapes = this.shapes.concat(
                                    createSizedArray(this._maxLength)
                                )),
                                (this._maxLength *= 2)),
                                (this.shapes[this._length] = e),
                                (this._length += 1);
                        }),
                            (ShapeCollection.prototype.releaseShapes =
                                function () {
                                    var e;
                                    for (e = 0; e < this._length; e += 1)
                                        shapePool.release(this.shapes[e]);
                                    this._length = 0;
                                });
                        var shapeCollectionPool = (function () {
                                var e = { newShapeCollection: s, release: a },
                                    t = 0,
                                    r = 4,
                                    i = createSizedArray(r);
                                function s() {
                                    var n;
                                    return (
                                        t
                                            ? ((t -= 1), (n = i[t]))
                                            : (n = new ShapeCollection()),
                                        n
                                    );
                                }
                                function a(n) {
                                    var l,
                                        o = n._length;
                                    for (l = 0; l < o; l += 1)
                                        shapePool.release(n.shapes[l]);
                                    (n._length = 0),
                                        t === r &&
                                            ((i = pooling.double(i)), (r *= 2)),
                                        (i[t] = n),
                                        (t += 1);
                                }
                                return e;
                            })(),
                            ShapePropertyFactory = (function () {
                                var e = -999999;
                                function t(c, m, p) {
                                    var g = p.lastIndex,
                                        P,
                                        A,
                                        F,
                                        T,
                                        D,
                                        L,
                                        q,
                                        V,
                                        j,
                                        G = this.keyframes;
                                    if (c < G[0].t - this.offsetTime)
                                        (P = G[0].s[0]), (F = !0), (g = 0);
                                    else if (
                                        c >=
                                        G[G.length - 1].t - this.offsetTime
                                    )
                                        (P = G[G.length - 1].s
                                            ? G[G.length - 1].s[0]
                                            : G[G.length - 2].e[0]),
                                            (F = !0);
                                    else {
                                        for (
                                            var B = g,
                                                S = G.length - 1,
                                                M = !0,
                                                x,
                                                k,
                                                R;
                                            M &&
                                            ((x = G[B]),
                                            (k = G[B + 1]),
                                            !(k.t - this.offsetTime > c));

                                        )
                                            B < S - 1 ? (B += 1) : (M = !1);
                                        if (
                                            ((R =
                                                this.keyframesMetadata[B] ||
                                                {}),
                                            (F = x.h === 1),
                                            (g = B),
                                            !F)
                                        ) {
                                            if (c >= k.t - this.offsetTime)
                                                V = 1;
                                            else if (c < x.t - this.offsetTime)
                                                V = 0;
                                            else {
                                                var I;
                                                R.__fnct
                                                    ? (I = R.__fnct)
                                                    : ((I =
                                                          BezierFactory.getBezierEasing(
                                                              x.o.x,
                                                              x.o.y,
                                                              x.i.x,
                                                              x.i.y
                                                          ).get),
                                                      (R.__fnct = I)),
                                                    (V = I(
                                                        (c -
                                                            (x.t -
                                                                this
                                                                    .offsetTime)) /
                                                            (k.t -
                                                                this
                                                                    .offsetTime -
                                                                (x.t -
                                                                    this
                                                                        .offsetTime))
                                                    ));
                                            }
                                            A = k.s ? k.s[0] : x.e[0];
                                        }
                                        P = x.s[0];
                                    }
                                    for (
                                        L = m._length,
                                            q = P.i[0].length,
                                            p.lastIndex = g,
                                            T = 0;
                                        T < L;
                                        T += 1
                                    )
                                        for (D = 0; D < q; D += 1)
                                            (j = F
                                                ? P.i[T][D]
                                                : P.i[T][D] +
                                                  (A.i[T][D] - P.i[T][D]) * V),
                                                (m.i[T][D] = j),
                                                (j = F
                                                    ? P.o[T][D]
                                                    : P.o[T][D] +
                                                      (A.o[T][D] - P.o[T][D]) *
                                                          V),
                                                (m.o[T][D] = j),
                                                (j = F
                                                    ? P.v[T][D]
                                                    : P.v[T][D] +
                                                      (A.v[T][D] - P.v[T][D]) *
                                                          V),
                                                (m.v[T][D] = j);
                                }
                                function r() {
                                    var c =
                                            this.comp.renderedFrame -
                                            this.offsetTime,
                                        m =
                                            this.keyframes[0].t -
                                            this.offsetTime,
                                        p =
                                            this.keyframes[
                                                this.keyframes.length - 1
                                            ].t - this.offsetTime,
                                        g = this._caching.lastFrame;
                                    return (
                                        (g !== e &&
                                            ((g < m && c < m) ||
                                                (g > p && c > p))) ||
                                            ((this._caching.lastIndex =
                                                g < c
                                                    ? this._caching.lastIndex
                                                    : 0),
                                            this.interpolateShape(
                                                c,
                                                this.pv,
                                                this._caching
                                            )),
                                        (this._caching.lastFrame = c),
                                        this.pv
                                    );
                                }
                                function i() {
                                    this.paths = this.localShapeCollection;
                                }
                                function s(c, m) {
                                    if (c._length !== m._length || c.c !== m.c)
                                        return !1;
                                    var p,
                                        g = c._length;
                                    for (p = 0; p < g; p += 1)
                                        if (
                                            c.v[p][0] !== m.v[p][0] ||
                                            c.v[p][1] !== m.v[p][1] ||
                                            c.o[p][0] !== m.o[p][0] ||
                                            c.o[p][1] !== m.o[p][1] ||
                                            c.i[p][0] !== m.i[p][0] ||
                                            c.i[p][1] !== m.i[p][1]
                                        )
                                            return !1;
                                    return !0;
                                }
                                function a(c) {
                                    s(this.v, c) ||
                                        ((this.v = shapePool.clone(c)),
                                        this.localShapeCollection.releaseShapes(),
                                        this.localShapeCollection.addShape(
                                            this.v
                                        ),
                                        (this._mdf = !0),
                                        (this.paths =
                                            this.localShapeCollection));
                                }
                                function n() {
                                    if (
                                        this.elem.globalData.frameId !==
                                        this.frameId
                                    ) {
                                        if (!this.effectsSequence.length) {
                                            this._mdf = !1;
                                            return;
                                        }
                                        if (this.lock) {
                                            this.setVValue(this.pv);
                                            return;
                                        }
                                        (this.lock = !0), (this._mdf = !1);
                                        var c;
                                        this.kf
                                            ? (c = this.pv)
                                            : this.data.ks
                                              ? (c = this.data.ks.k)
                                              : (c = this.data.pt.k);
                                        var m,
                                            p = this.effectsSequence.length;
                                        for (m = 0; m < p; m += 1)
                                            c = this.effectsSequence[m](c);
                                        this.setVValue(c),
                                            (this.lock = !1),
                                            (this.frameId =
                                                this.elem.globalData.frameId);
                                    }
                                }
                                function l(c, m, p) {
                                    (this.propType = 'shape'),
                                        (this.comp = c.comp),
                                        (this.container = c),
                                        (this.elem = c),
                                        (this.data = m),
                                        (this.k = !1),
                                        (this.kf = !1),
                                        (this._mdf = !1);
                                    var g = p === 3 ? m.pt.k : m.ks.k;
                                    (this.v = shapePool.clone(g)),
                                        (this.pv = shapePool.clone(this.v)),
                                        (this.localShapeCollection =
                                            shapeCollectionPool.newShapeCollection()),
                                        (this.paths =
                                            this.localShapeCollection),
                                        this.paths.addShape(this.v),
                                        (this.reset = i),
                                        (this.effectsSequence = []);
                                }
                                function o(c) {
                                    this.effectsSequence.push(c),
                                        this.container.addDynamicProperty(this);
                                }
                                (l.prototype.interpolateShape = t),
                                    (l.prototype.getValue = n),
                                    (l.prototype.setVValue = a),
                                    (l.prototype.addEffect = o);
                                function f(c, m, p) {
                                    (this.propType = 'shape'),
                                        (this.comp = c.comp),
                                        (this.elem = c),
                                        (this.container = c),
                                        (this.offsetTime = c.data.st),
                                        (this.keyframes =
                                            p === 3 ? m.pt.k : m.ks.k),
                                        (this.keyframesMetadata = []),
                                        (this.k = !0),
                                        (this.kf = !0);
                                    var g = this.keyframes[0].s[0].i.length;
                                    (this.v = shapePool.newElement()),
                                        this.v.setPathData(
                                            this.keyframes[0].s[0].c,
                                            g
                                        ),
                                        (this.pv = shapePool.clone(this.v)),
                                        (this.localShapeCollection =
                                            shapeCollectionPool.newShapeCollection()),
                                        (this.paths =
                                            this.localShapeCollection),
                                        this.paths.addShape(this.v),
                                        (this.lastFrame = e),
                                        (this.reset = i),
                                        (this._caching = {
                                            lastFrame: e,
                                            lastIndex: 0,
                                        }),
                                        (this.effectsSequence = [r.bind(this)]);
                                }
                                (f.prototype.getValue = n),
                                    (f.prototype.interpolateShape = t),
                                    (f.prototype.setVValue = a),
                                    (f.prototype.addEffect = o);
                                var y = (function () {
                                        var c = roundCorner;
                                        function m(p, g) {
                                            (this.v = shapePool.newElement()),
                                                this.v.setPathData(!0, 4),
                                                (this.localShapeCollection =
                                                    shapeCollectionPool.newShapeCollection()),
                                                (this.paths =
                                                    this.localShapeCollection),
                                                this.localShapeCollection.addShape(
                                                    this.v
                                                ),
                                                (this.d = g.d),
                                                (this.elem = p),
                                                (this.comp = p.comp),
                                                (this.frameId = -1),
                                                this.initDynamicPropertyContainer(
                                                    p
                                                ),
                                                (this.p =
                                                    PropertyFactory.getProp(
                                                        p,
                                                        g.p,
                                                        1,
                                                        0,
                                                        this
                                                    )),
                                                (this.s =
                                                    PropertyFactory.getProp(
                                                        p,
                                                        g.s,
                                                        1,
                                                        0,
                                                        this
                                                    )),
                                                this.dynamicProperties.length
                                                    ? (this.k = !0)
                                                    : ((this.k = !1),
                                                      this.convertEllToPath());
                                        }
                                        return (
                                            (m.prototype = {
                                                reset: i,
                                                getValue: function () {
                                                    this.elem.globalData
                                                        .frameId !==
                                                        this.frameId &&
                                                        ((this.frameId =
                                                            this.elem.globalData.frameId),
                                                        this.iterateDynamicProperties(),
                                                        this._mdf &&
                                                            this.convertEllToPath());
                                                },
                                                convertEllToPath: function () {
                                                    var g = this.p.v[0],
                                                        P = this.p.v[1],
                                                        A = this.s.v[0] / 2,
                                                        F = this.s.v[1] / 2,
                                                        T = this.d !== 3,
                                                        D = this.v;
                                                    (D.v[0][0] = g),
                                                        (D.v[0][1] = P - F),
                                                        (D.v[1][0] = T
                                                            ? g + A
                                                            : g - A),
                                                        (D.v[1][1] = P),
                                                        (D.v[2][0] = g),
                                                        (D.v[2][1] = P + F),
                                                        (D.v[3][0] = T
                                                            ? g - A
                                                            : g + A),
                                                        (D.v[3][1] = P),
                                                        (D.i[0][0] = T
                                                            ? g - A * c
                                                            : g + A * c),
                                                        (D.i[0][1] = P - F),
                                                        (D.i[1][0] = T
                                                            ? g + A
                                                            : g - A),
                                                        (D.i[1][1] = P - F * c),
                                                        (D.i[2][0] = T
                                                            ? g + A * c
                                                            : g - A * c),
                                                        (D.i[2][1] = P + F),
                                                        (D.i[3][0] = T
                                                            ? g - A
                                                            : g + A),
                                                        (D.i[3][1] = P + F * c),
                                                        (D.o[0][0] = T
                                                            ? g + A * c
                                                            : g - A * c),
                                                        (D.o[0][1] = P - F),
                                                        (D.o[1][0] = T
                                                            ? g + A
                                                            : g - A),
                                                        (D.o[1][1] = P + F * c),
                                                        (D.o[2][0] = T
                                                            ? g - A * c
                                                            : g + A * c),
                                                        (D.o[2][1] = P + F),
                                                        (D.o[3][0] = T
                                                            ? g - A
                                                            : g + A),
                                                        (D.o[3][1] = P - F * c);
                                                },
                                            }),
                                            extendPrototype(
                                                [DynamicPropertyContainer],
                                                m
                                            ),
                                            m
                                        );
                                    })(),
                                    E = (function () {
                                        function c(m, p) {
                                            (this.v = shapePool.newElement()),
                                                this.v.setPathData(!0, 0),
                                                (this.elem = m),
                                                (this.comp = m.comp),
                                                (this.data = p),
                                                (this.frameId = -1),
                                                (this.d = p.d),
                                                this.initDynamicPropertyContainer(
                                                    m
                                                ),
                                                p.sy === 1
                                                    ? ((this.ir =
                                                          PropertyFactory.getProp(
                                                              m,
                                                              p.ir,
                                                              0,
                                                              0,
                                                              this
                                                          )),
                                                      (this.is =
                                                          PropertyFactory.getProp(
                                                              m,
                                                              p.is,
                                                              0,
                                                              0.01,
                                                              this
                                                          )),
                                                      (this.convertToPath =
                                                          this.convertStarToPath))
                                                    : (this.convertToPath =
                                                          this.convertPolygonToPath),
                                                (this.pt =
                                                    PropertyFactory.getProp(
                                                        m,
                                                        p.pt,
                                                        0,
                                                        0,
                                                        this
                                                    )),
                                                (this.p =
                                                    PropertyFactory.getProp(
                                                        m,
                                                        p.p,
                                                        1,
                                                        0,
                                                        this
                                                    )),
                                                (this.r =
                                                    PropertyFactory.getProp(
                                                        m,
                                                        p.r,
                                                        0,
                                                        degToRads,
                                                        this
                                                    )),
                                                (this.or =
                                                    PropertyFactory.getProp(
                                                        m,
                                                        p.or,
                                                        0,
                                                        0,
                                                        this
                                                    )),
                                                (this.os =
                                                    PropertyFactory.getProp(
                                                        m,
                                                        p.os,
                                                        0,
                                                        0.01,
                                                        this
                                                    )),
                                                (this.localShapeCollection =
                                                    shapeCollectionPool.newShapeCollection()),
                                                this.localShapeCollection.addShape(
                                                    this.v
                                                ),
                                                (this.paths =
                                                    this.localShapeCollection),
                                                this.dynamicProperties.length
                                                    ? (this.k = !0)
                                                    : ((this.k = !1),
                                                      this.convertToPath());
                                        }
                                        return (
                                            (c.prototype = {
                                                reset: i,
                                                getValue: function () {
                                                    this.elem.globalData
                                                        .frameId !==
                                                        this.frameId &&
                                                        ((this.frameId =
                                                            this.elem.globalData.frameId),
                                                        this.iterateDynamicProperties(),
                                                        this._mdf &&
                                                            this.convertToPath());
                                                },
                                                convertStarToPath: function () {
                                                    var p =
                                                            Math.floor(
                                                                this.pt.v
                                                            ) * 2,
                                                        g = (Math.PI * 2) / p,
                                                        P = !0,
                                                        A = this.or.v,
                                                        F = this.ir.v,
                                                        T = this.os.v,
                                                        D = this.is.v,
                                                        L =
                                                            (2 * Math.PI * A) /
                                                            (p * 2),
                                                        q =
                                                            (2 * Math.PI * F) /
                                                            (p * 2),
                                                        V,
                                                        j,
                                                        G,
                                                        B,
                                                        S = -Math.PI / 2;
                                                    S += this.r.v;
                                                    var M =
                                                        this.data.d === 3
                                                            ? -1
                                                            : 1;
                                                    for (
                                                        this.v._length = 0,
                                                            V = 0;
                                                        V < p;
                                                        V += 1
                                                    ) {
                                                        (j = P ? A : F),
                                                            (G = P ? T : D),
                                                            (B = P ? L : q);
                                                        var x = j * Math.cos(S),
                                                            k = j * Math.sin(S),
                                                            R =
                                                                x === 0 &&
                                                                k === 0
                                                                    ? 0
                                                                    : k /
                                                                      Math.sqrt(
                                                                          x *
                                                                              x +
                                                                              k *
                                                                                  k
                                                                      ),
                                                            I =
                                                                x === 0 &&
                                                                k === 0
                                                                    ? 0
                                                                    : -x /
                                                                      Math.sqrt(
                                                                          x *
                                                                              x +
                                                                              k *
                                                                                  k
                                                                      );
                                                        (x += +this.p.v[0]),
                                                            (k += +this.p.v[1]),
                                                            this.v.setTripleAt(
                                                                x,
                                                                k,
                                                                x -
                                                                    R *
                                                                        B *
                                                                        G *
                                                                        M,
                                                                k -
                                                                    I *
                                                                        B *
                                                                        G *
                                                                        M,
                                                                x +
                                                                    R *
                                                                        B *
                                                                        G *
                                                                        M,
                                                                k +
                                                                    I *
                                                                        B *
                                                                        G *
                                                                        M,
                                                                V,
                                                                !0
                                                            ),
                                                            (P = !P),
                                                            (S += g * M);
                                                    }
                                                },
                                                convertPolygonToPath:
                                                    function () {
                                                        var p = Math.floor(
                                                                this.pt.v
                                                            ),
                                                            g =
                                                                (Math.PI * 2) /
                                                                p,
                                                            P = this.or.v,
                                                            A = this.os.v,
                                                            F =
                                                                (2 *
                                                                    Math.PI *
                                                                    P) /
                                                                (p * 4),
                                                            T,
                                                            D = -Math.PI * 0.5,
                                                            L =
                                                                this.data.d ===
                                                                3
                                                                    ? -1
                                                                    : 1;
                                                        for (
                                                            D += this.r.v,
                                                                this.v._length = 0,
                                                                T = 0;
                                                            T < p;
                                                            T += 1
                                                        ) {
                                                            var q =
                                                                    P *
                                                                    Math.cos(D),
                                                                V =
                                                                    P *
                                                                    Math.sin(D),
                                                                j =
                                                                    q === 0 &&
                                                                    V === 0
                                                                        ? 0
                                                                        : V /
                                                                          Math.sqrt(
                                                                              q *
                                                                                  q +
                                                                                  V *
                                                                                      V
                                                                          ),
                                                                G =
                                                                    q === 0 &&
                                                                    V === 0
                                                                        ? 0
                                                                        : -q /
                                                                          Math.sqrt(
                                                                              q *
                                                                                  q +
                                                                                  V *
                                                                                      V
                                                                          );
                                                            (q += +this.p.v[0]),
                                                                (V +=
                                                                    +this.p
                                                                        .v[1]),
                                                                this.v.setTripleAt(
                                                                    q,
                                                                    V,
                                                                    q -
                                                                        j *
                                                                            F *
                                                                            A *
                                                                            L,
                                                                    V -
                                                                        G *
                                                                            F *
                                                                            A *
                                                                            L,
                                                                    q +
                                                                        j *
                                                                            F *
                                                                            A *
                                                                            L,
                                                                    V +
                                                                        G *
                                                                            F *
                                                                            A *
                                                                            L,
                                                                    T,
                                                                    !0
                                                                ),
                                                                (D += g * L);
                                                        }
                                                        (this.paths.length = 0),
                                                            (this.paths[0] =
                                                                this.v);
                                                    },
                                            }),
                                            extendPrototype(
                                                [DynamicPropertyContainer],
                                                c
                                            ),
                                            c
                                        );
                                    })(),
                                    u = (function () {
                                        function c(m, p) {
                                            (this.v = shapePool.newElement()),
                                                (this.v.c = !0),
                                                (this.localShapeCollection =
                                                    shapeCollectionPool.newShapeCollection()),
                                                this.localShapeCollection.addShape(
                                                    this.v
                                                ),
                                                (this.paths =
                                                    this.localShapeCollection),
                                                (this.elem = m),
                                                (this.comp = m.comp),
                                                (this.frameId = -1),
                                                (this.d = p.d),
                                                this.initDynamicPropertyContainer(
                                                    m
                                                ),
                                                (this.p =
                                                    PropertyFactory.getProp(
                                                        m,
                                                        p.p,
                                                        1,
                                                        0,
                                                        this
                                                    )),
                                                (this.s =
                                                    PropertyFactory.getProp(
                                                        m,
                                                        p.s,
                                                        1,
                                                        0,
                                                        this
                                                    )),
                                                (this.r =
                                                    PropertyFactory.getProp(
                                                        m,
                                                        p.r,
                                                        0,
                                                        0,
                                                        this
                                                    )),
                                                this.dynamicProperties.length
                                                    ? (this.k = !0)
                                                    : ((this.k = !1),
                                                      this.convertRectToPath());
                                        }
                                        return (
                                            (c.prototype = {
                                                convertRectToPath: function () {
                                                    var p = this.p.v[0],
                                                        g = this.p.v[1],
                                                        P = this.s.v[0] / 2,
                                                        A = this.s.v[1] / 2,
                                                        F = bmMin(
                                                            P,
                                                            A,
                                                            this.r.v
                                                        ),
                                                        T =
                                                            F *
                                                            (1 - roundCorner);
                                                    (this.v._length = 0),
                                                        this.d === 2 ||
                                                        this.d === 1
                                                            ? (this.v.setTripleAt(
                                                                  p + P,
                                                                  g - A + F,
                                                                  p + P,
                                                                  g - A + F,
                                                                  p + P,
                                                                  g - A + T,
                                                                  0,
                                                                  !0
                                                              ),
                                                              this.v.setTripleAt(
                                                                  p + P,
                                                                  g + A - F,
                                                                  p + P,
                                                                  g + A - T,
                                                                  p + P,
                                                                  g + A - F,
                                                                  1,
                                                                  !0
                                                              ),
                                                              F !== 0
                                                                  ? (this.v.setTripleAt(
                                                                        p +
                                                                            P -
                                                                            F,
                                                                        g + A,
                                                                        p +
                                                                            P -
                                                                            F,
                                                                        g + A,
                                                                        p +
                                                                            P -
                                                                            T,
                                                                        g + A,
                                                                        2,
                                                                        !0
                                                                    ),
                                                                    this.v.setTripleAt(
                                                                        p -
                                                                            P +
                                                                            F,
                                                                        g + A,
                                                                        p -
                                                                            P +
                                                                            T,
                                                                        g + A,
                                                                        p -
                                                                            P +
                                                                            F,
                                                                        g + A,
                                                                        3,
                                                                        !0
                                                                    ),
                                                                    this.v.setTripleAt(
                                                                        p - P,
                                                                        g +
                                                                            A -
                                                                            F,
                                                                        p - P,
                                                                        g +
                                                                            A -
                                                                            F,
                                                                        p - P,
                                                                        g +
                                                                            A -
                                                                            T,
                                                                        4,
                                                                        !0
                                                                    ),
                                                                    this.v.setTripleAt(
                                                                        p - P,
                                                                        g -
                                                                            A +
                                                                            F,
                                                                        p - P,
                                                                        g -
                                                                            A +
                                                                            T,
                                                                        p - P,
                                                                        g -
                                                                            A +
                                                                            F,
                                                                        5,
                                                                        !0
                                                                    ),
                                                                    this.v.setTripleAt(
                                                                        p -
                                                                            P +
                                                                            F,
                                                                        g - A,
                                                                        p -
                                                                            P +
                                                                            F,
                                                                        g - A,
                                                                        p -
                                                                            P +
                                                                            T,
                                                                        g - A,
                                                                        6,
                                                                        !0
                                                                    ),
                                                                    this.v.setTripleAt(
                                                                        p +
                                                                            P -
                                                                            F,
                                                                        g - A,
                                                                        p +
                                                                            P -
                                                                            T,
                                                                        g - A,
                                                                        p +
                                                                            P -
                                                                            F,
                                                                        g - A,
                                                                        7,
                                                                        !0
                                                                    ))
                                                                  : (this.v.setTripleAt(
                                                                        p - P,
                                                                        g + A,
                                                                        p -
                                                                            P +
                                                                            T,
                                                                        g + A,
                                                                        p - P,
                                                                        g + A,
                                                                        2
                                                                    ),
                                                                    this.v.setTripleAt(
                                                                        p - P,
                                                                        g - A,
                                                                        p - P,
                                                                        g -
                                                                            A +
                                                                            T,
                                                                        p - P,
                                                                        g - A,
                                                                        3
                                                                    )))
                                                            : (this.v.setTripleAt(
                                                                  p + P,
                                                                  g - A + F,
                                                                  p + P,
                                                                  g - A + T,
                                                                  p + P,
                                                                  g - A + F,
                                                                  0,
                                                                  !0
                                                              ),
                                                              F !== 0
                                                                  ? (this.v.setTripleAt(
                                                                        p +
                                                                            P -
                                                                            F,
                                                                        g - A,
                                                                        p +
                                                                            P -
                                                                            F,
                                                                        g - A,
                                                                        p +
                                                                            P -
                                                                            T,
                                                                        g - A,
                                                                        1,
                                                                        !0
                                                                    ),
                                                                    this.v.setTripleAt(
                                                                        p -
                                                                            P +
                                                                            F,
                                                                        g - A,
                                                                        p -
                                                                            P +
                                                                            T,
                                                                        g - A,
                                                                        p -
                                                                            P +
                                                                            F,
                                                                        g - A,
                                                                        2,
                                                                        !0
                                                                    ),
                                                                    this.v.setTripleAt(
                                                                        p - P,
                                                                        g -
                                                                            A +
                                                                            F,
                                                                        p - P,
                                                                        g -
                                                                            A +
                                                                            F,
                                                                        p - P,
                                                                        g -
                                                                            A +
                                                                            T,
                                                                        3,
                                                                        !0
                                                                    ),
                                                                    this.v.setTripleAt(
                                                                        p - P,
                                                                        g +
                                                                            A -
                                                                            F,
                                                                        p - P,
                                                                        g +
                                                                            A -
                                                                            T,
                                                                        p - P,
                                                                        g +
                                                                            A -
                                                                            F,
                                                                        4,
                                                                        !0
                                                                    ),
                                                                    this.v.setTripleAt(
                                                                        p -
                                                                            P +
                                                                            F,
                                                                        g + A,
                                                                        p -
                                                                            P +
                                                                            F,
                                                                        g + A,
                                                                        p -
                                                                            P +
                                                                            T,
                                                                        g + A,
                                                                        5,
                                                                        !0
                                                                    ),
                                                                    this.v.setTripleAt(
                                                                        p +
                                                                            P -
                                                                            F,
                                                                        g + A,
                                                                        p +
                                                                            P -
                                                                            T,
                                                                        g + A,
                                                                        p +
                                                                            P -
                                                                            F,
                                                                        g + A,
                                                                        6,
                                                                        !0
                                                                    ),
                                                                    this.v.setTripleAt(
                                                                        p + P,
                                                                        g +
                                                                            A -
                                                                            F,
                                                                        p + P,
                                                                        g +
                                                                            A -
                                                                            F,
                                                                        p + P,
                                                                        g +
                                                                            A -
                                                                            T,
                                                                        7,
                                                                        !0
                                                                    ))
                                                                  : (this.v.setTripleAt(
                                                                        p - P,
                                                                        g - A,
                                                                        p -
                                                                            P +
                                                                            T,
                                                                        g - A,
                                                                        p - P,
                                                                        g - A,
                                                                        1,
                                                                        !0
                                                                    ),
                                                                    this.v.setTripleAt(
                                                                        p - P,
                                                                        g + A,
                                                                        p - P,
                                                                        g +
                                                                            A -
                                                                            T,
                                                                        p - P,
                                                                        g + A,
                                                                        2,
                                                                        !0
                                                                    ),
                                                                    this.v.setTripleAt(
                                                                        p + P,
                                                                        g + A,
                                                                        p +
                                                                            P -
                                                                            T,
                                                                        g + A,
                                                                        p + P,
                                                                        g + A,
                                                                        3,
                                                                        !0
                                                                    )));
                                                },
                                                getValue: function () {
                                                    this.elem.globalData
                                                        .frameId !==
                                                        this.frameId &&
                                                        ((this.frameId =
                                                            this.elem.globalData.frameId),
                                                        this.iterateDynamicProperties(),
                                                        this._mdf &&
                                                            this.convertRectToPath());
                                                },
                                                reset: i,
                                            }),
                                            extendPrototype(
                                                [DynamicPropertyContainer],
                                                c
                                            ),
                                            c
                                        );
                                    })();
                                function b(c, m, p) {
                                    var g;
                                    if (p === 3 || p === 4) {
                                        var P = p === 3 ? m.pt : m.ks,
                                            A = P.k;
                                        A.length
                                            ? (g = new f(c, m, p))
                                            : (g = new l(c, m, p));
                                    } else
                                        p === 5
                                            ? (g = new u(c, m))
                                            : p === 6
                                              ? (g = new y(c, m))
                                              : p === 7 && (g = new E(c, m));
                                    return g.k && c.addDynamicProperty(g), g;
                                }
                                function _() {
                                    return l;
                                }
                                function d() {
                                    return f;
                                }
                                var C = {};
                                return (
                                    (C.getShapeProp = b),
                                    (C.getConstructorFunction = _),
                                    (C.getKeyframedConstructorFunction = d),
                                    C
                                );
                            })();
                        /*!
 Transformation Matrix v2.0
 (c) Epistemex 2014-2015
 www.epistemex.com
 By Ken Fyrstenberg
 Contributions by leeoniya.
 License: MIT, header required.
 */ var Matrix = (function () {
                            var e = Math.cos,
                                t = Math.sin,
                                r = Math.tan,
                                i = Math.round;
                            function s() {
                                return (
                                    (this.props[0] = 1),
                                    (this.props[1] = 0),
                                    (this.props[2] = 0),
                                    (this.props[3] = 0),
                                    (this.props[4] = 0),
                                    (this.props[5] = 1),
                                    (this.props[6] = 0),
                                    (this.props[7] = 0),
                                    (this.props[8] = 0),
                                    (this.props[9] = 0),
                                    (this.props[10] = 1),
                                    (this.props[11] = 0),
                                    (this.props[12] = 0),
                                    (this.props[13] = 0),
                                    (this.props[14] = 0),
                                    (this.props[15] = 1),
                                    this
                                );
                            }
                            function a(x) {
                                if (x === 0) return this;
                                var k = e(x),
                                    R = t(x);
                                return this._t(
                                    k,
                                    -R,
                                    0,
                                    0,
                                    R,
                                    k,
                                    0,
                                    0,
                                    0,
                                    0,
                                    1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    1
                                );
                            }
                            function n(x) {
                                if (x === 0) return this;
                                var k = e(x),
                                    R = t(x);
                                return this._t(
                                    1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    k,
                                    -R,
                                    0,
                                    0,
                                    R,
                                    k,
                                    0,
                                    0,
                                    0,
                                    0,
                                    1
                                );
                            }
                            function l(x) {
                                if (x === 0) return this;
                                var k = e(x),
                                    R = t(x);
                                return this._t(
                                    k,
                                    0,
                                    R,
                                    0,
                                    0,
                                    1,
                                    0,
                                    0,
                                    -R,
                                    0,
                                    k,
                                    0,
                                    0,
                                    0,
                                    0,
                                    1
                                );
                            }
                            function o(x) {
                                if (x === 0) return this;
                                var k = e(x),
                                    R = t(x);
                                return this._t(
                                    k,
                                    -R,
                                    0,
                                    0,
                                    R,
                                    k,
                                    0,
                                    0,
                                    0,
                                    0,
                                    1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    1
                                );
                            }
                            function f(x, k) {
                                return this._t(1, k, x, 1, 0, 0);
                            }
                            function y(x, k) {
                                return this.shear(r(x), r(k));
                            }
                            function E(x, k) {
                                var R = e(k),
                                    I = t(k);
                                return this._t(
                                    R,
                                    I,
                                    0,
                                    0,
                                    -I,
                                    R,
                                    0,
                                    0,
                                    0,
                                    0,
                                    1,
                                    0,
                                    0,
                                    0,
                                    0,
                                    1
                                )
                                    ._t(
                                        1,
                                        0,
                                        0,
                                        0,
                                        r(x),
                                        1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        1
                                    )
                                    ._t(
                                        R,
                                        -I,
                                        0,
                                        0,
                                        I,
                                        R,
                                        0,
                                        0,
                                        0,
                                        0,
                                        1,
                                        0,
                                        0,
                                        0,
                                        0,
                                        1
                                    );
                            }
                            function u(x, k, R) {
                                return (
                                    !R && R !== 0 && (R = 1),
                                    x === 1 && k === 1 && R === 1
                                        ? this
                                        : this._t(
                                              x,
                                              0,
                                              0,
                                              0,
                                              0,
                                              k,
                                              0,
                                              0,
                                              0,
                                              0,
                                              R,
                                              0,
                                              0,
                                              0,
                                              0,
                                              1
                                          )
                                );
                            }
                            function b(
                                x,
                                k,
                                R,
                                I,
                                O,
                                $,
                                H,
                                X,
                                Z,
                                U,
                                te,
                                ne,
                                re,
                                Q,
                                ae,
                                J
                            ) {
                                return (
                                    (this.props[0] = x),
                                    (this.props[1] = k),
                                    (this.props[2] = R),
                                    (this.props[3] = I),
                                    (this.props[4] = O),
                                    (this.props[5] = $),
                                    (this.props[6] = H),
                                    (this.props[7] = X),
                                    (this.props[8] = Z),
                                    (this.props[9] = U),
                                    (this.props[10] = te),
                                    (this.props[11] = ne),
                                    (this.props[12] = re),
                                    (this.props[13] = Q),
                                    (this.props[14] = ae),
                                    (this.props[15] = J),
                                    this
                                );
                            }
                            function _(x, k, R) {
                                return (
                                    (R = R || 0),
                                    x !== 0 || k !== 0 || R !== 0
                                        ? this._t(
                                              1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              1,
                                              0,
                                              0,
                                              0,
                                              0,
                                              1,
                                              0,
                                              x,
                                              k,
                                              R,
                                              1
                                          )
                                        : this
                                );
                            }
                            function d(
                                x,
                                k,
                                R,
                                I,
                                O,
                                $,
                                H,
                                X,
                                Z,
                                U,
                                te,
                                ne,
                                re,
                                Q,
                                ae,
                                J
                            ) {
                                var N = this.props;
                                if (
                                    x === 1 &&
                                    k === 0 &&
                                    R === 0 &&
                                    I === 0 &&
                                    O === 0 &&
                                    $ === 1 &&
                                    H === 0 &&
                                    X === 0 &&
                                    Z === 0 &&
                                    U === 0 &&
                                    te === 1 &&
                                    ne === 0
                                )
                                    return (
                                        (N[12] = N[12] * x + N[15] * re),
                                        (N[13] = N[13] * $ + N[15] * Q),
                                        (N[14] = N[14] * te + N[15] * ae),
                                        (N[15] *= J),
                                        (this._identityCalculated = !1),
                                        this
                                    );
                                var le = N[0],
                                    ce = N[1],
                                    fe = N[2],
                                    oe = N[3],
                                    pe = N[4],
                                    ue = N[5],
                                    se = N[6],
                                    me = N[7],
                                    Y = N[8],
                                    z = N[9],
                                    W = N[10],
                                    K = N[11],
                                    ee = N[12],
                                    ie = N[13],
                                    he = N[14],
                                    de = N[15];
                                return (
                                    (N[0] = le * x + ce * O + fe * Z + oe * re),
                                    (N[1] = le * k + ce * $ + fe * U + oe * Q),
                                    (N[2] =
                                        le * R + ce * H + fe * te + oe * ae),
                                    (N[3] = le * I + ce * X + fe * ne + oe * J),
                                    (N[4] = pe * x + ue * O + se * Z + me * re),
                                    (N[5] = pe * k + ue * $ + se * U + me * Q),
                                    (N[6] =
                                        pe * R + ue * H + se * te + me * ae),
                                    (N[7] = pe * I + ue * X + se * ne + me * J),
                                    (N[8] = Y * x + z * O + W * Z + K * re),
                                    (N[9] = Y * k + z * $ + W * U + K * Q),
                                    (N[10] = Y * R + z * H + W * te + K * ae),
                                    (N[11] = Y * I + z * X + W * ne + K * J),
                                    (N[12] =
                                        ee * x + ie * O + he * Z + de * re),
                                    (N[13] = ee * k + ie * $ + he * U + de * Q),
                                    (N[14] =
                                        ee * R + ie * H + he * te + de * ae),
                                    (N[15] =
                                        ee * I + ie * X + he * ne + de * J),
                                    (this._identityCalculated = !1),
                                    this
                                );
                            }
                            function C(x) {
                                var k = x.props;
                                return this.transform(
                                    k[0],
                                    k[1],
                                    k[2],
                                    k[3],
                                    k[4],
                                    k[5],
                                    k[6],
                                    k[7],
                                    k[8],
                                    k[9],
                                    k[10],
                                    k[11],
                                    k[12],
                                    k[13],
                                    k[14],
                                    k[15]
                                );
                            }
                            function c() {
                                return (
                                    this._identityCalculated ||
                                        ((this._identity = !(
                                            this.props[0] !== 1 ||
                                            this.props[1] !== 0 ||
                                            this.props[2] !== 0 ||
                                            this.props[3] !== 0 ||
                                            this.props[4] !== 0 ||
                                            this.props[5] !== 1 ||
                                            this.props[6] !== 0 ||
                                            this.props[7] !== 0 ||
                                            this.props[8] !== 0 ||
                                            this.props[9] !== 0 ||
                                            this.props[10] !== 1 ||
                                            this.props[11] !== 0 ||
                                            this.props[12] !== 0 ||
                                            this.props[13] !== 0 ||
                                            this.props[14] !== 0 ||
                                            this.props[15] !== 1
                                        )),
                                        (this._identityCalculated = !0)),
                                    this._identity
                                );
                            }
                            function m(x) {
                                for (var k = 0; k < 16; ) {
                                    if (x.props[k] !== this.props[k]) return !1;
                                    k += 1;
                                }
                                return !0;
                            }
                            function p(x) {
                                var k;
                                for (k = 0; k < 16; k += 1)
                                    x.props[k] = this.props[k];
                                return x;
                            }
                            function g(x) {
                                var k;
                                for (k = 0; k < 16; k += 1)
                                    this.props[k] = x[k];
                            }
                            function P(x, k, R) {
                                return {
                                    x:
                                        x * this.props[0] +
                                        k * this.props[4] +
                                        R * this.props[8] +
                                        this.props[12],
                                    y:
                                        x * this.props[1] +
                                        k * this.props[5] +
                                        R * this.props[9] +
                                        this.props[13],
                                    z:
                                        x * this.props[2] +
                                        k * this.props[6] +
                                        R * this.props[10] +
                                        this.props[14],
                                };
                            }
                            function A(x, k, R) {
                                return (
                                    x * this.props[0] +
                                    k * this.props[4] +
                                    R * this.props[8] +
                                    this.props[12]
                                );
                            }
                            function F(x, k, R) {
                                return (
                                    x * this.props[1] +
                                    k * this.props[5] +
                                    R * this.props[9] +
                                    this.props[13]
                                );
                            }
                            function T(x, k, R) {
                                return (
                                    x * this.props[2] +
                                    k * this.props[6] +
                                    R * this.props[10] +
                                    this.props[14]
                                );
                            }
                            function D() {
                                var x =
                                        this.props[0] * this.props[5] -
                                        this.props[1] * this.props[4],
                                    k = this.props[5] / x,
                                    R = -this.props[1] / x,
                                    I = -this.props[4] / x,
                                    O = this.props[0] / x,
                                    $ =
                                        (this.props[4] * this.props[13] -
                                            this.props[5] * this.props[12]) /
                                        x,
                                    H =
                                        -(
                                            this.props[0] * this.props[13] -
                                            this.props[1] * this.props[12]
                                        ) / x,
                                    X = new Matrix();
                                return (
                                    (X.props[0] = k),
                                    (X.props[1] = R),
                                    (X.props[4] = I),
                                    (X.props[5] = O),
                                    (X.props[12] = $),
                                    (X.props[13] = H),
                                    X
                                );
                            }
                            function L(x) {
                                var k = this.getInverseMatrix();
                                return k.applyToPointArray(
                                    x[0],
                                    x[1],
                                    x[2] || 0
                                );
                            }
                            function q(x) {
                                var k,
                                    R = x.length,
                                    I = [];
                                for (k = 0; k < R; k += 1) I[k] = L(x[k]);
                                return I;
                            }
                            function V(x, k, R) {
                                var I = createTypedArray('float32', 6);
                                if (this.isIdentity())
                                    (I[0] = x[0]),
                                        (I[1] = x[1]),
                                        (I[2] = k[0]),
                                        (I[3] = k[1]),
                                        (I[4] = R[0]),
                                        (I[5] = R[1]);
                                else {
                                    var O = this.props[0],
                                        $ = this.props[1],
                                        H = this.props[4],
                                        X = this.props[5],
                                        Z = this.props[12],
                                        U = this.props[13];
                                    (I[0] = x[0] * O + x[1] * H + Z),
                                        (I[1] = x[0] * $ + x[1] * X + U),
                                        (I[2] = k[0] * O + k[1] * H + Z),
                                        (I[3] = k[0] * $ + k[1] * X + U),
                                        (I[4] = R[0] * O + R[1] * H + Z),
                                        (I[5] = R[0] * $ + R[1] * X + U);
                                }
                                return I;
                            }
                            function j(x, k, R) {
                                var I;
                                return (
                                    this.isIdentity()
                                        ? (I = [x, k, R])
                                        : (I = [
                                              x * this.props[0] +
                                                  k * this.props[4] +
                                                  R * this.props[8] +
                                                  this.props[12],
                                              x * this.props[1] +
                                                  k * this.props[5] +
                                                  R * this.props[9] +
                                                  this.props[13],
                                              x * this.props[2] +
                                                  k * this.props[6] +
                                                  R * this.props[10] +
                                                  this.props[14],
                                          ]),
                                    I
                                );
                            }
                            function G(x, k) {
                                if (this.isIdentity()) return x + ',' + k;
                                var R = this.props;
                                return (
                                    Math.round(
                                        (x * R[0] + k * R[4] + R[12]) * 100
                                    ) /
                                        100 +
                                    ',' +
                                    Math.round(
                                        (x * R[1] + k * R[5] + R[13]) * 100
                                    ) /
                                        100
                                );
                            }
                            function B() {
                                for (
                                    var x = 0,
                                        k = this.props,
                                        R = 'matrix3d(',
                                        I = 1e4;
                                    x < 16;

                                )
                                    (R += i(k[x] * I) / I),
                                        (R += x === 15 ? ')' : ','),
                                        (x += 1);
                                return R;
                            }
                            function S(x) {
                                var k = 1e4;
                                return (x < 1e-6 && x > 0) ||
                                    (x > -1e-6 && x < 0)
                                    ? i(x * k) / k
                                    : x;
                            }
                            function M() {
                                var x = this.props,
                                    k = S(x[0]),
                                    R = S(x[1]),
                                    I = S(x[4]),
                                    O = S(x[5]),
                                    $ = S(x[12]),
                                    H = S(x[13]);
                                return (
                                    'matrix(' +
                                    k +
                                    ',' +
                                    R +
                                    ',' +
                                    I +
                                    ',' +
                                    O +
                                    ',' +
                                    $ +
                                    ',' +
                                    H +
                                    ')'
                                );
                            }
                            return function () {
                                (this.reset = s),
                                    (this.rotate = a),
                                    (this.rotateX = n),
                                    (this.rotateY = l),
                                    (this.rotateZ = o),
                                    (this.skew = y),
                                    (this.skewFromAxis = E),
                                    (this.shear = f),
                                    (this.scale = u),
                                    (this.setTransform = b),
                                    (this.translate = _),
                                    (this.transform = d),
                                    (this.multiply = C),
                                    (this.applyToPoint = P),
                                    (this.applyToX = A),
                                    (this.applyToY = F),
                                    (this.applyToZ = T),
                                    (this.applyToPointArray = j),
                                    (this.applyToTriplePoints = V),
                                    (this.applyToPointStringified = G),
                                    (this.toCSS = B),
                                    (this.to2dCSS = M),
                                    (this.clone = p),
                                    (this.cloneFromProps = g),
                                    (this.equals = m),
                                    (this.inversePoints = q),
                                    (this.inversePoint = L),
                                    (this.getInverseMatrix = D),
                                    (this._t = this.transform),
                                    (this.isIdentity = c),
                                    (this._identity = !0),
                                    (this._identityCalculated = !1),
                                    (this.props = createTypedArray(
                                        'float32',
                                        16
                                    )),
                                    this.reset();
                            };
                        })();
                        function _typeof$3(e) {
                            '@babel/helpers - typeof';
                            return (
                                typeof Symbol == 'function' &&
                                typeof Symbol.iterator == 'symbol'
                                    ? (_typeof$3 = function (r) {
                                          return typeof r;
                                      })
                                    : (_typeof$3 = function (r) {
                                          return r &&
                                              typeof Symbol == 'function' &&
                                              r.constructor === Symbol &&
                                              r !== Symbol.prototype
                                              ? 'symbol'
                                              : typeof r;
                                      }),
                                _typeof$3(e)
                            );
                        }
                        var lottie = {};
                        function setLocation(e) {
                            setLocationHref(e);
                        }
                        function searchAnimations() {
                            animationManager.searchAnimations();
                        }
                        function setSubframeRendering(e) {
                            setSubframeEnabled(e);
                        }
                        function setPrefix(e) {
                            setIdPrefix(e);
                        }
                        function loadAnimation(e) {
                            return animationManager.loadAnimation(e);
                        }
                        function setQuality(e) {
                            if (typeof e == 'string')
                                switch (e) {
                                    case 'high':
                                        setDefaultCurveSegments(200);
                                        break;
                                    default:
                                    case 'medium':
                                        setDefaultCurveSegments(50);
                                        break;
                                    case 'low':
                                        setDefaultCurveSegments(10);
                                        break;
                                }
                            else
                                !isNaN(e) &&
                                    e > 1 &&
                                    setDefaultCurveSegments(e);
                        }
                        function inBrowser() {
                            return typeof navigator < 'u';
                        }
                        function installPlugin(e, t) {
                            e === 'expressions' && setExpressionsPlugin(t);
                        }
                        function getFactory(e) {
                            switch (e) {
                                case 'propertyFactory':
                                    return PropertyFactory;
                                case 'shapePropertyFactory':
                                    return ShapePropertyFactory;
                                case 'matrix':
                                    return Matrix;
                                default:
                                    return null;
                            }
                        }
                        (lottie.play = animationManager.play),
                            (lottie.pause = animationManager.pause),
                            (lottie.setLocationHref = setLocation),
                            (lottie.togglePause = animationManager.togglePause),
                            (lottie.setSpeed = animationManager.setSpeed),
                            (lottie.setDirection =
                                animationManager.setDirection),
                            (lottie.stop = animationManager.stop),
                            (lottie.searchAnimations = searchAnimations),
                            (lottie.registerAnimation =
                                animationManager.registerAnimation),
                            (lottie.loadAnimation = loadAnimation),
                            (lottie.setSubframeRendering =
                                setSubframeRendering),
                            (lottie.resize = animationManager.resize),
                            (lottie.goToAndStop = animationManager.goToAndStop),
                            (lottie.destroy = animationManager.destroy),
                            (lottie.setQuality = setQuality),
                            (lottie.inBrowser = inBrowser),
                            (lottie.installPlugin = installPlugin),
                            (lottie.freeze = animationManager.freeze),
                            (lottie.unfreeze = animationManager.unfreeze),
                            (lottie.setVolume = animationManager.setVolume),
                            (lottie.mute = animationManager.mute),
                            (lottie.unmute = animationManager.unmute),
                            (lottie.getRegisteredAnimations =
                                animationManager.getRegisteredAnimations),
                            (lottie.useWebWorker = setWebWorker),
                            (lottie.setIDPrefix = setPrefix),
                            (lottie.__getFactory = getFactory),
                            (lottie.version = '5.12.2');
                        function checkReady() {
                            document.readyState === 'complete' &&
                                (clearInterval(readyStateCheckInterval),
                                searchAnimations());
                        }
                        function getQueryVariable(e) {
                            for (
                                var t = queryString.split('&'), r = 0;
                                r < t.length;
                                r += 1
                            ) {
                                var i = t[r].split('=');
                                if (decodeURIComponent(i[0]) == e)
                                    return decodeURIComponent(i[1]);
                            }
                            return null;
                        }
                        var queryString = '';
                        {
                            var scripts =
                                    document.getElementsByTagName('script'),
                                index = scripts.length - 1,
                                myScript = scripts[index] || { src: '' };
                            (queryString = myScript.src
                                ? myScript.src.replace(/^[^\?]+\??/, '')
                                : ''),
                                getQueryVariable('renderer');
                        }
                        var readyStateCheckInterval = setInterval(
                            checkReady,
                            100
                        );
                        try {
                            _typeof$3(exports) !== 'object' &&
                                (window.bodymovin = lottie);
                        } catch (e) {}
                        var ShapeModifiers = (function () {
                            var e = {},
                                t = {};
                            (e.registerModifier = r), (e.getModifier = i);
                            function r(s, a) {
                                t[s] || (t[s] = a);
                            }
                            function i(s, a, n) {
                                return new t[s](a, n);
                            }
                            return e;
                        })();
                        function ShapeModifier() {}
                        (ShapeModifier.prototype.initModifierProperties =
                            function () {}),
                            (ShapeModifier.prototype.addShapeToModifier =
                                function () {}),
                            (ShapeModifier.prototype.addShape = function (e) {
                                if (!this.closed) {
                                    e.sh.container.addDynamicProperty(e.sh);
                                    var t = {
                                        shape: e.sh,
                                        data: e,
                                        localShapeCollection:
                                            shapeCollectionPool.newShapeCollection(),
                                    };
                                    this.shapes.push(t),
                                        this.addShapeToModifier(t),
                                        this._isAnimated && e.setAsAnimated();
                                }
                            }),
                            (ShapeModifier.prototype.init = function (e, t) {
                                (this.shapes = []),
                                    (this.elem = e),
                                    this.initDynamicPropertyContainer(e),
                                    this.initModifierProperties(e, t),
                                    (this.frameId = initialDefaultFrame),
                                    (this.closed = !1),
                                    (this.k = !1),
                                    this.dynamicProperties.length
                                        ? (this.k = !0)
                                        : this.getValue(!0);
                            }),
                            (ShapeModifier.prototype.processKeys = function () {
                                this.elem.globalData.frameId !== this.frameId &&
                                    ((this.frameId =
                                        this.elem.globalData.frameId),
                                    this.iterateDynamicProperties());
                            }),
                            extendPrototype(
                                [DynamicPropertyContainer],
                                ShapeModifier
                            );
                        function TrimModifier() {}
                        extendPrototype([ShapeModifier], TrimModifier),
                            (TrimModifier.prototype.initModifierProperties =
                                function (e, t) {
                                    (this.s = PropertyFactory.getProp(
                                        e,
                                        t.s,
                                        0,
                                        0.01,
                                        this
                                    )),
                                        (this.e = PropertyFactory.getProp(
                                            e,
                                            t.e,
                                            0,
                                            0.01,
                                            this
                                        )),
                                        (this.o = PropertyFactory.getProp(
                                            e,
                                            t.o,
                                            0,
                                            0,
                                            this
                                        )),
                                        (this.sValue = 0),
                                        (this.eValue = 0),
                                        (this.getValue = this.processKeys),
                                        (this.m = t.m),
                                        (this._isAnimated =
                                            !!this.s.effectsSequence.length ||
                                            !!this.e.effectsSequence.length ||
                                            !!this.o.effectsSequence.length);
                                }),
                            (TrimModifier.prototype.addShapeToModifier =
                                function (e) {
                                    e.pathsData = [];
                                }),
                            (TrimModifier.prototype.calculateShapeEdges =
                                function (e, t, r, i, s) {
                                    var a = [];
                                    t <= 1
                                        ? a.push({ s: e, e: t })
                                        : e >= 1
                                          ? a.push({ s: e - 1, e: t - 1 })
                                          : (a.push({ s: e, e: 1 }),
                                            a.push({ s: 0, e: t - 1 }));
                                    var n = [],
                                        l,
                                        o = a.length,
                                        f;
                                    for (l = 0; l < o; l += 1)
                                        if (
                                            ((f = a[l]),
                                            !(f.e * s < i || f.s * s > i + r))
                                        ) {
                                            var y, E;
                                            f.s * s <= i
                                                ? (y = 0)
                                                : (y = (f.s * s - i) / r),
                                                f.e * s >= i + r
                                                    ? (E = 1)
                                                    : (E = (f.e * s - i) / r),
                                                n.push([y, E]);
                                        }
                                    return n.length || n.push([0, 0]), n;
                                }),
                            (TrimModifier.prototype.releasePathsData =
                                function (e) {
                                    var t,
                                        r = e.length;
                                    for (t = 0; t < r; t += 1)
                                        segmentsLengthPool.release(e[t]);
                                    return (e.length = 0), e;
                                }),
                            (TrimModifier.prototype.processShapes = function (
                                e
                            ) {
                                var t, r;
                                if (this._mdf || e) {
                                    var i = (this.o.v % 360) / 360;
                                    if (
                                        (i < 0 && (i += 1),
                                        this.s.v > 1
                                            ? (t = 1 + i)
                                            : this.s.v < 0
                                              ? (t = 0 + i)
                                              : (t = this.s.v + i),
                                        this.e.v > 1
                                            ? (r = 1 + i)
                                            : this.e.v < 0
                                              ? (r = 0 + i)
                                              : (r = this.e.v + i),
                                        t > r)
                                    ) {
                                        var s = t;
                                        (t = r), (r = s);
                                    }
                                    (t = Math.round(t * 1e4) * 1e-4),
                                        (r = Math.round(r * 1e4) * 1e-4),
                                        (this.sValue = t),
                                        (this.eValue = r);
                                } else (t = this.sValue), (r = this.eValue);
                                var a,
                                    n,
                                    l = this.shapes.length,
                                    o,
                                    f,
                                    y,
                                    E,
                                    u,
                                    b = 0;
                                if (r === t)
                                    for (n = 0; n < l; n += 1)
                                        this.shapes[
                                            n
                                        ].localShapeCollection.releaseShapes(),
                                            (this.shapes[n].shape._mdf = !0),
                                            (this.shapes[n].shape.paths =
                                                this.shapes[
                                                    n
                                                ].localShapeCollection),
                                            this._mdf &&
                                                (this.shapes[
                                                    n
                                                ].pathsData.length = 0);
                                else if (
                                    (r === 1 && t === 0) ||
                                    (r === 0 && t === 1)
                                ) {
                                    if (this._mdf)
                                        for (n = 0; n < l; n += 1)
                                            (this.shapes[n].pathsData.length =
                                                0),
                                                (this.shapes[n].shape._mdf =
                                                    !0);
                                } else {
                                    var _ = [],
                                        d,
                                        C;
                                    for (n = 0; n < l; n += 1)
                                        if (
                                            ((d = this.shapes[n]),
                                            !d.shape._mdf &&
                                                !this._mdf &&
                                                !e &&
                                                this.m !== 2)
                                        )
                                            d.shape.paths =
                                                d.localShapeCollection;
                                        else {
                                            if (
                                                ((a = d.shape.paths),
                                                (f = a._length),
                                                (u = 0),
                                                !d.shape._mdf &&
                                                    d.pathsData.length)
                                            )
                                                u = d.totalShapeLength;
                                            else {
                                                for (
                                                    y = this.releasePathsData(
                                                        d.pathsData
                                                    ),
                                                        o = 0;
                                                    o < f;
                                                    o += 1
                                                )
                                                    (E = bez.getSegmentsLength(
                                                        a.shapes[o]
                                                    )),
                                                        y.push(E),
                                                        (u += E.totalLength);
                                                (d.totalShapeLength = u),
                                                    (d.pathsData = y);
                                            }
                                            (b += u), (d.shape._mdf = !0);
                                        }
                                    var c = t,
                                        m = r,
                                        p = 0,
                                        g;
                                    for (n = l - 1; n >= 0; n -= 1)
                                        if (
                                            ((d = this.shapes[n]), d.shape._mdf)
                                        ) {
                                            for (
                                                C = d.localShapeCollection,
                                                    C.releaseShapes(),
                                                    this.m === 2 && l > 1
                                                        ? ((g =
                                                              this.calculateShapeEdges(
                                                                  t,
                                                                  r,
                                                                  d.totalShapeLength,
                                                                  p,
                                                                  b
                                                              )),
                                                          (p +=
                                                              d.totalShapeLength))
                                                        : (g = [[c, m]]),
                                                    f = g.length,
                                                    o = 0;
                                                o < f;
                                                o += 1
                                            ) {
                                                (c = g[o][0]),
                                                    (m = g[o][1]),
                                                    (_.length = 0),
                                                    m <= 1
                                                        ? _.push({
                                                              s:
                                                                  d.totalShapeLength *
                                                                  c,
                                                              e:
                                                                  d.totalShapeLength *
                                                                  m,
                                                          })
                                                        : c >= 1
                                                          ? _.push({
                                                                s:
                                                                    d.totalShapeLength *
                                                                    (c - 1),
                                                                e:
                                                                    d.totalShapeLength *
                                                                    (m - 1),
                                                            })
                                                          : (_.push({
                                                                s:
                                                                    d.totalShapeLength *
                                                                    c,
                                                                e: d.totalShapeLength,
                                                            }),
                                                            _.push({
                                                                s: 0,
                                                                e:
                                                                    d.totalShapeLength *
                                                                    (m - 1),
                                                            }));
                                                var P = this.addShapes(d, _[0]);
                                                if (_[0].s !== _[0].e) {
                                                    if (_.length > 1) {
                                                        var A =
                                                            d.shape.paths
                                                                .shapes[
                                                                d.shape.paths
                                                                    ._length - 1
                                                            ];
                                                        if (A.c) {
                                                            var F = P.pop();
                                                            this.addPaths(P, C),
                                                                (P =
                                                                    this.addShapes(
                                                                        d,
                                                                        _[1],
                                                                        F
                                                                    ));
                                                        } else
                                                            this.addPaths(P, C),
                                                                (P =
                                                                    this.addShapes(
                                                                        d,
                                                                        _[1]
                                                                    ));
                                                    }
                                                    this.addPaths(P, C);
                                                }
                                            }
                                            d.shape.paths = C;
                                        }
                                }
                            }),
                            (TrimModifier.prototype.addPaths = function (e, t) {
                                var r,
                                    i = e.length;
                                for (r = 0; r < i; r += 1) t.addShape(e[r]);
                            }),
                            (TrimModifier.prototype.addSegment = function (
                                e,
                                t,
                                r,
                                i,
                                s,
                                a,
                                n
                            ) {
                                s.setXYAt(t[0], t[1], 'o', a),
                                    s.setXYAt(r[0], r[1], 'i', a + 1),
                                    n && s.setXYAt(e[0], e[1], 'v', a),
                                    s.setXYAt(i[0], i[1], 'v', a + 1);
                            }),
                            (TrimModifier.prototype.addSegmentFromArray =
                                function (e, t, r, i) {
                                    t.setXYAt(e[1], e[5], 'o', r),
                                        t.setXYAt(e[2], e[6], 'i', r + 1),
                                        i && t.setXYAt(e[0], e[4], 'v', r),
                                        t.setXYAt(e[3], e[7], 'v', r + 1);
                                }),
                            (TrimModifier.prototype.addShapes = function (
                                e,
                                t,
                                r
                            ) {
                                var i = e.pathsData,
                                    s = e.shape.paths.shapes,
                                    a,
                                    n = e.shape.paths._length,
                                    l,
                                    o,
                                    f = 0,
                                    y,
                                    E,
                                    u,
                                    b,
                                    _ = [],
                                    d,
                                    C = !0;
                                for (
                                    r
                                        ? ((E = r._length), (d = r._length))
                                        : ((r = shapePool.newElement()),
                                          (E = 0),
                                          (d = 0)),
                                        _.push(r),
                                        a = 0;
                                    a < n;
                                    a += 1
                                ) {
                                    for (
                                        u = i[a].lengths,
                                            r.c = s[a].c,
                                            o = s[a].c
                                                ? u.length
                                                : u.length + 1,
                                            l = 1;
                                        l < o;
                                        l += 1
                                    )
                                        if (
                                            ((y = u[l - 1]),
                                            f + y.addedLength < t.s)
                                        )
                                            (f += y.addedLength), (r.c = !1);
                                        else if (f > t.e) {
                                            r.c = !1;
                                            break;
                                        } else
                                            t.s <= f && t.e >= f + y.addedLength
                                                ? (this.addSegment(
                                                      s[a].v[l - 1],
                                                      s[a].o[l - 1],
                                                      s[a].i[l],
                                                      s[a].v[l],
                                                      r,
                                                      E,
                                                      C
                                                  ),
                                                  (C = !1))
                                                : ((b = bez.getNewSegment(
                                                      s[a].v[l - 1],
                                                      s[a].v[l],
                                                      s[a].o[l - 1],
                                                      s[a].i[l],
                                                      (t.s - f) / y.addedLength,
                                                      (t.e - f) / y.addedLength,
                                                      u[l - 1]
                                                  )),
                                                  this.addSegmentFromArray(
                                                      b,
                                                      r,
                                                      E,
                                                      C
                                                  ),
                                                  (C = !1),
                                                  (r.c = !1)),
                                                (f += y.addedLength),
                                                (E += 1);
                                    if (s[a].c && u.length) {
                                        if (((y = u[l - 1]), f <= t.e)) {
                                            var c = u[l - 1].addedLength;
                                            t.s <= f && t.e >= f + c
                                                ? (this.addSegment(
                                                      s[a].v[l - 1],
                                                      s[a].o[l - 1],
                                                      s[a].i[0],
                                                      s[a].v[0],
                                                      r,
                                                      E,
                                                      C
                                                  ),
                                                  (C = !1))
                                                : ((b = bez.getNewSegment(
                                                      s[a].v[l - 1],
                                                      s[a].v[0],
                                                      s[a].o[l - 1],
                                                      s[a].i[0],
                                                      (t.s - f) / c,
                                                      (t.e - f) / c,
                                                      u[l - 1]
                                                  )),
                                                  this.addSegmentFromArray(
                                                      b,
                                                      r,
                                                      E,
                                                      C
                                                  ),
                                                  (C = !1),
                                                  (r.c = !1));
                                        } else r.c = !1;
                                        (f += y.addedLength), (E += 1);
                                    }
                                    if (
                                        (r._length &&
                                            (r.setXYAt(
                                                r.v[d][0],
                                                r.v[d][1],
                                                'i',
                                                d
                                            ),
                                            r.setXYAt(
                                                r.v[r._length - 1][0],
                                                r.v[r._length - 1][1],
                                                'o',
                                                r._length - 1
                                            )),
                                        f > t.e)
                                    )
                                        break;
                                    a < n - 1 &&
                                        ((r = shapePool.newElement()),
                                        (C = !0),
                                        _.push(r),
                                        (E = 0));
                                }
                                return _;
                            });
                        function PuckerAndBloatModifier() {}
                        extendPrototype(
                            [ShapeModifier],
                            PuckerAndBloatModifier
                        ),
                            (PuckerAndBloatModifier.prototype.initModifierProperties =
                                function (e, t) {
                                    (this.getValue = this.processKeys),
                                        (this.amount = PropertyFactory.getProp(
                                            e,
                                            t.a,
                                            0,
                                            null,
                                            this
                                        )),
                                        (this._isAnimated =
                                            !!this.amount.effectsSequence
                                                .length);
                                }),
                            (PuckerAndBloatModifier.prototype.processPath =
                                function (e, t) {
                                    var r = t / 100,
                                        i = [0, 0],
                                        s = e._length,
                                        a = 0;
                                    for (a = 0; a < s; a += 1)
                                        (i[0] += e.v[a][0]),
                                            (i[1] += e.v[a][1]);
                                    (i[0] /= s), (i[1] /= s);
                                    var n = shapePool.newElement();
                                    n.c = e.c;
                                    var l, o, f, y, E, u;
                                    for (a = 0; a < s; a += 1)
                                        (l =
                                            e.v[a][0] + (i[0] - e.v[a][0]) * r),
                                            (o =
                                                e.v[a][1] +
                                                (i[1] - e.v[a][1]) * r),
                                            (f =
                                                e.o[a][0] +
                                                (i[0] - e.o[a][0]) * -r),
                                            (y =
                                                e.o[a][1] +
                                                (i[1] - e.o[a][1]) * -r),
                                            (E =
                                                e.i[a][0] +
                                                (i[0] - e.i[a][0]) * -r),
                                            (u =
                                                e.i[a][1] +
                                                (i[1] - e.i[a][1]) * -r),
                                            n.setTripleAt(l, o, f, y, E, u, a);
                                    return n;
                                }),
                            (PuckerAndBloatModifier.prototype.processShapes =
                                function (e) {
                                    var t,
                                        r,
                                        i = this.shapes.length,
                                        s,
                                        a,
                                        n = this.amount.v;
                                    if (n !== 0) {
                                        var l, o;
                                        for (r = 0; r < i; r += 1) {
                                            if (
                                                ((l = this.shapes[r]),
                                                (o = l.localShapeCollection),
                                                !(
                                                    !l.shape._mdf &&
                                                    !this._mdf &&
                                                    !e
                                                ))
                                            )
                                                for (
                                                    o.releaseShapes(),
                                                        l.shape._mdf = !0,
                                                        t =
                                                            l.shape.paths
                                                                .shapes,
                                                        a =
                                                            l.shape.paths
                                                                ._length,
                                                        s = 0;
                                                    s < a;
                                                    s += 1
                                                )
                                                    o.addShape(
                                                        this.processPath(
                                                            t[s],
                                                            n
                                                        )
                                                    );
                                            l.shape.paths =
                                                l.localShapeCollection;
                                        }
                                    }
                                    this.dynamicProperties.length ||
                                        (this._mdf = !1);
                                });
                        var TransformPropertyFactory = (function () {
                            var e = [0, 0];
                            function t(o) {
                                var f = this._mdf;
                                this.iterateDynamicProperties(),
                                    (this._mdf = this._mdf || f),
                                    this.a &&
                                        o.translate(
                                            -this.a.v[0],
                                            -this.a.v[1],
                                            this.a.v[2]
                                        ),
                                    this.s &&
                                        o.scale(
                                            this.s.v[0],
                                            this.s.v[1],
                                            this.s.v[2]
                                        ),
                                    this.sk &&
                                        o.skewFromAxis(-this.sk.v, this.sa.v),
                                    this.r
                                        ? o.rotate(-this.r.v)
                                        : o
                                              .rotateZ(-this.rz.v)
                                              .rotateY(this.ry.v)
                                              .rotateX(this.rx.v)
                                              .rotateZ(-this.or.v[2])
                                              .rotateY(this.or.v[1])
                                              .rotateX(this.or.v[0]),
                                    this.data.p.s
                                        ? this.data.p.z
                                            ? o.translate(
                                                  this.px.v,
                                                  this.py.v,
                                                  -this.pz.v
                                              )
                                            : o.translate(
                                                  this.px.v,
                                                  this.py.v,
                                                  0
                                              )
                                        : o.translate(
                                              this.p.v[0],
                                              this.p.v[1],
                                              -this.p.v[2]
                                          );
                            }
                            function r(o) {
                                if (
                                    this.elem.globalData.frameId !==
                                    this.frameId
                                ) {
                                    if (
                                        (this._isDirty &&
                                            (this.precalculateMatrix(),
                                            (this._isDirty = !1)),
                                        this.iterateDynamicProperties(),
                                        this._mdf || o)
                                    ) {
                                        var f;
                                        if (
                                            (this.v.cloneFromProps(
                                                this.pre.props
                                            ),
                                            this.appliedTransformations < 1 &&
                                                this.v.translate(
                                                    -this.a.v[0],
                                                    -this.a.v[1],
                                                    this.a.v[2]
                                                ),
                                            this.appliedTransformations < 2 &&
                                                this.v.scale(
                                                    this.s.v[0],
                                                    this.s.v[1],
                                                    this.s.v[2]
                                                ),
                                            this.sk &&
                                                this.appliedTransformations <
                                                    3 &&
                                                this.v.skewFromAxis(
                                                    -this.sk.v,
                                                    this.sa.v
                                                ),
                                            this.r &&
                                            this.appliedTransformations < 4
                                                ? this.v.rotate(-this.r.v)
                                                : !this.r &&
                                                  this.appliedTransformations <
                                                      4 &&
                                                  this.v
                                                      .rotateZ(-this.rz.v)
                                                      .rotateY(this.ry.v)
                                                      .rotateX(this.rx.v)
                                                      .rotateZ(-this.or.v[2])
                                                      .rotateY(this.or.v[1])
                                                      .rotateX(this.or.v[0]),
                                            this.autoOriented)
                                        ) {
                                            var y, E;
                                            if (
                                                ((f =
                                                    this.elem.globalData
                                                        .frameRate),
                                                this.p &&
                                                    this.p.keyframes &&
                                                    this.p.getValueAtTime)
                                            )
                                                this.p._caching.lastFrame +
                                                    this.p.offsetTime <=
                                                this.p.keyframes[0].t
                                                    ? ((y =
                                                          this.p.getValueAtTime(
                                                              (this.p
                                                                  .keyframes[0]
                                                                  .t +
                                                                  0.01) /
                                                                  f,
                                                              0
                                                          )),
                                                      (E =
                                                          this.p.getValueAtTime(
                                                              this.p
                                                                  .keyframes[0]
                                                                  .t / f,
                                                              0
                                                          )))
                                                    : this.p._caching
                                                            .lastFrame +
                                                            this.p.offsetTime >=
                                                        this.p.keyframes[
                                                            this.p.keyframes
                                                                .length - 1
                                                        ].t
                                                      ? ((y =
                                                            this.p.getValueAtTime(
                                                                this.p
                                                                    .keyframes[
                                                                    this.p
                                                                        .keyframes
                                                                        .length -
                                                                        1
                                                                ].t / f,
                                                                0
                                                            )),
                                                        (E =
                                                            this.p.getValueAtTime(
                                                                (this.p
                                                                    .keyframes[
                                                                    this.p
                                                                        .keyframes
                                                                        .length -
                                                                        1
                                                                ].t -
                                                                    0.05) /
                                                                    f,
                                                                0
                                                            )))
                                                      : ((y = this.p.pv),
                                                        (E =
                                                            this.p.getValueAtTime(
                                                                (this.p._caching
                                                                    .lastFrame +
                                                                    this.p
                                                                        .offsetTime -
                                                                    0.01) /
                                                                    f,
                                                                this.p
                                                                    .offsetTime
                                                            )));
                                            else if (
                                                this.px &&
                                                this.px.keyframes &&
                                                this.py.keyframes &&
                                                this.px.getValueAtTime &&
                                                this.py.getValueAtTime
                                            ) {
                                                (y = []), (E = []);
                                                var u = this.px,
                                                    b = this.py;
                                                u._caching.lastFrame +
                                                    u.offsetTime <=
                                                u.keyframes[0].t
                                                    ? ((y[0] = u.getValueAtTime(
                                                          (u.keyframes[0].t +
                                                              0.01) /
                                                              f,
                                                          0
                                                      )),
                                                      (y[1] = b.getValueAtTime(
                                                          (b.keyframes[0].t +
                                                              0.01) /
                                                              f,
                                                          0
                                                      )),
                                                      (E[0] = u.getValueAtTime(
                                                          u.keyframes[0].t / f,
                                                          0
                                                      )),
                                                      (E[1] = b.getValueAtTime(
                                                          b.keyframes[0].t / f,
                                                          0
                                                      )))
                                                    : u._caching.lastFrame +
                                                            u.offsetTime >=
                                                        u.keyframes[
                                                            u.keyframes.length -
                                                                1
                                                        ].t
                                                      ? ((y[0] =
                                                            u.getValueAtTime(
                                                                u.keyframes[
                                                                    u.keyframes
                                                                        .length -
                                                                        1
                                                                ].t / f,
                                                                0
                                                            )),
                                                        (y[1] =
                                                            b.getValueAtTime(
                                                                b.keyframes[
                                                                    b.keyframes
                                                                        .length -
                                                                        1
                                                                ].t / f,
                                                                0
                                                            )),
                                                        (E[0] =
                                                            u.getValueAtTime(
                                                                (u.keyframes[
                                                                    u.keyframes
                                                                        .length -
                                                                        1
                                                                ].t -
                                                                    0.01) /
                                                                    f,
                                                                0
                                                            )),
                                                        (E[1] =
                                                            b.getValueAtTime(
                                                                (b.keyframes[
                                                                    b.keyframes
                                                                        .length -
                                                                        1
                                                                ].t -
                                                                    0.01) /
                                                                    f,
                                                                0
                                                            )))
                                                      : ((y = [u.pv, b.pv]),
                                                        (E[0] =
                                                            u.getValueAtTime(
                                                                (u._caching
                                                                    .lastFrame +
                                                                    u.offsetTime -
                                                                    0.01) /
                                                                    f,
                                                                u.offsetTime
                                                            )),
                                                        (E[1] =
                                                            b.getValueAtTime(
                                                                (b._caching
                                                                    .lastFrame +
                                                                    b.offsetTime -
                                                                    0.01) /
                                                                    f,
                                                                b.offsetTime
                                                            )));
                                            } else (E = e), (y = E);
                                            this.v.rotate(
                                                -Math.atan2(
                                                    y[1] - E[1],
                                                    y[0] - E[0]
                                                )
                                            );
                                        }
                                        this.data.p && this.data.p.s
                                            ? this.data.p.z
                                                ? this.v.translate(
                                                      this.px.v,
                                                      this.py.v,
                                                      -this.pz.v
                                                  )
                                                : this.v.translate(
                                                      this.px.v,
                                                      this.py.v,
                                                      0
                                                  )
                                            : this.v.translate(
                                                  this.p.v[0],
                                                  this.p.v[1],
                                                  -this.p.v[2]
                                              );
                                    }
                                    this.frameId = this.elem.globalData.frameId;
                                }
                            }
                            function i() {
                                if (
                                    ((this.appliedTransformations = 0),
                                    this.pre.reset(),
                                    !this.a.effectsSequence.length)
                                )
                                    this.pre.translate(
                                        -this.a.v[0],
                                        -this.a.v[1],
                                        this.a.v[2]
                                    ),
                                        (this.appliedTransformations = 1);
                                else return;
                                if (!this.s.effectsSequence.length)
                                    this.pre.scale(
                                        this.s.v[0],
                                        this.s.v[1],
                                        this.s.v[2]
                                    ),
                                        (this.appliedTransformations = 2);
                                else return;
                                if (this.sk)
                                    if (
                                        !this.sk.effectsSequence.length &&
                                        !this.sa.effectsSequence.length
                                    )
                                        this.pre.skewFromAxis(
                                            -this.sk.v,
                                            this.sa.v
                                        ),
                                            (this.appliedTransformations = 3);
                                    else return;
                                this.r
                                    ? this.r.effectsSequence.length ||
                                      (this.pre.rotate(-this.r.v),
                                      (this.appliedTransformations = 4))
                                    : !this.rz.effectsSequence.length &&
                                      !this.ry.effectsSequence.length &&
                                      !this.rx.effectsSequence.length &&
                                      !this.or.effectsSequence.length &&
                                      (this.pre
                                          .rotateZ(-this.rz.v)
                                          .rotateY(this.ry.v)
                                          .rotateX(this.rx.v)
                                          .rotateZ(-this.or.v[2])
                                          .rotateY(this.or.v[1])
                                          .rotateX(this.or.v[0]),
                                      (this.appliedTransformations = 4));
                            }
                            function s() {}
                            function a(o) {
                                this._addDynamicProperty(o),
                                    this.elem.addDynamicProperty(o),
                                    (this._isDirty = !0);
                            }
                            function n(o, f, y) {
                                if (
                                    ((this.elem = o),
                                    (this.frameId = -1),
                                    (this.propType = 'transform'),
                                    (this.data = f),
                                    (this.v = new Matrix()),
                                    (this.pre = new Matrix()),
                                    (this.appliedTransformations = 0),
                                    this.initDynamicPropertyContainer(y || o),
                                    f.p && f.p.s
                                        ? ((this.px = PropertyFactory.getProp(
                                              o,
                                              f.p.x,
                                              0,
                                              0,
                                              this
                                          )),
                                          (this.py = PropertyFactory.getProp(
                                              o,
                                              f.p.y,
                                              0,
                                              0,
                                              this
                                          )),
                                          f.p.z &&
                                              (this.pz =
                                                  PropertyFactory.getProp(
                                                      o,
                                                      f.p.z,
                                                      0,
                                                      0,
                                                      this
                                                  )))
                                        : (this.p = PropertyFactory.getProp(
                                              o,
                                              f.p || { k: [0, 0, 0] },
                                              1,
                                              0,
                                              this
                                          )),
                                    f.rx)
                                ) {
                                    if (
                                        ((this.rx = PropertyFactory.getProp(
                                            o,
                                            f.rx,
                                            0,
                                            degToRads,
                                            this
                                        )),
                                        (this.ry = PropertyFactory.getProp(
                                            o,
                                            f.ry,
                                            0,
                                            degToRads,
                                            this
                                        )),
                                        (this.rz = PropertyFactory.getProp(
                                            o,
                                            f.rz,
                                            0,
                                            degToRads,
                                            this
                                        )),
                                        f.or.k[0].ti)
                                    ) {
                                        var E,
                                            u = f.or.k.length;
                                        for (E = 0; E < u; E += 1)
                                            (f.or.k[E].to = null),
                                                (f.or.k[E].ti = null);
                                    }
                                    (this.or = PropertyFactory.getProp(
                                        o,
                                        f.or,
                                        1,
                                        degToRads,
                                        this
                                    )),
                                        (this.or.sh = !0);
                                } else
                                    this.r = PropertyFactory.getProp(
                                        o,
                                        f.r || { k: 0 },
                                        0,
                                        degToRads,
                                        this
                                    );
                                f.sk &&
                                    ((this.sk = PropertyFactory.getProp(
                                        o,
                                        f.sk,
                                        0,
                                        degToRads,
                                        this
                                    )),
                                    (this.sa = PropertyFactory.getProp(
                                        o,
                                        f.sa,
                                        0,
                                        degToRads,
                                        this
                                    ))),
                                    (this.a = PropertyFactory.getProp(
                                        o,
                                        f.a || { k: [0, 0, 0] },
                                        1,
                                        0,
                                        this
                                    )),
                                    (this.s = PropertyFactory.getProp(
                                        o,
                                        f.s || { k: [100, 100, 100] },
                                        1,
                                        0.01,
                                        this
                                    )),
                                    f.o
                                        ? (this.o = PropertyFactory.getProp(
                                              o,
                                              f.o,
                                              0,
                                              0.01,
                                              o
                                          ))
                                        : (this.o = { _mdf: !1, v: 1 }),
                                    (this._isDirty = !0),
                                    this.dynamicProperties.length ||
                                        this.getValue(!0);
                            }
                            (n.prototype = {
                                applyToMatrix: t,
                                getValue: r,
                                precalculateMatrix: i,
                                autoOrient: s,
                            }),
                                extendPrototype([DynamicPropertyContainer], n),
                                (n.prototype.addDynamicProperty = a),
                                (n.prototype._addDynamicProperty =
                                    DynamicPropertyContainer.prototype.addDynamicProperty);
                            function l(o, f, y) {
                                return new n(o, f, y);
                            }
                            return { getTransformProperty: l };
                        })();
                        function RepeaterModifier() {}
                        extendPrototype([ShapeModifier], RepeaterModifier),
                            (RepeaterModifier.prototype.initModifierProperties =
                                function (e, t) {
                                    (this.getValue = this.processKeys),
                                        (this.c = PropertyFactory.getProp(
                                            e,
                                            t.c,
                                            0,
                                            null,
                                            this
                                        )),
                                        (this.o = PropertyFactory.getProp(
                                            e,
                                            t.o,
                                            0,
                                            null,
                                            this
                                        )),
                                        (this.tr =
                                            TransformPropertyFactory.getTransformProperty(
                                                e,
                                                t.tr,
                                                this
                                            )),
                                        (this.so = PropertyFactory.getProp(
                                            e,
                                            t.tr.so,
                                            0,
                                            0.01,
                                            this
                                        )),
                                        (this.eo = PropertyFactory.getProp(
                                            e,
                                            t.tr.eo,
                                            0,
                                            0.01,
                                            this
                                        )),
                                        (this.data = t),
                                        this.dynamicProperties.length ||
                                            this.getValue(!0),
                                        (this._isAnimated =
                                            !!this.dynamicProperties.length),
                                        (this.pMatrix = new Matrix()),
                                        (this.rMatrix = new Matrix()),
                                        (this.sMatrix = new Matrix()),
                                        (this.tMatrix = new Matrix()),
                                        (this.matrix = new Matrix());
                                }),
                            (RepeaterModifier.prototype.applyTransforms =
                                function (e, t, r, i, s, a) {
                                    var n = a ? -1 : 1,
                                        l = i.s.v[0] + (1 - i.s.v[0]) * (1 - s),
                                        o = i.s.v[1] + (1 - i.s.v[1]) * (1 - s);
                                    e.translate(
                                        i.p.v[0] * n * s,
                                        i.p.v[1] * n * s,
                                        i.p.v[2]
                                    ),
                                        t.translate(
                                            -i.a.v[0],
                                            -i.a.v[1],
                                            i.a.v[2]
                                        ),
                                        t.rotate(-i.r.v * n * s),
                                        t.translate(
                                            i.a.v[0],
                                            i.a.v[1],
                                            i.a.v[2]
                                        ),
                                        r.translate(
                                            -i.a.v[0],
                                            -i.a.v[1],
                                            i.a.v[2]
                                        ),
                                        r.scale(a ? 1 / l : l, a ? 1 / o : o),
                                        r.translate(
                                            i.a.v[0],
                                            i.a.v[1],
                                            i.a.v[2]
                                        );
                                }),
                            (RepeaterModifier.prototype.init = function (
                                e,
                                t,
                                r,
                                i
                            ) {
                                for (
                                    this.elem = e,
                                        this.arr = t,
                                        this.pos = r,
                                        this.elemsData = i,
                                        this._currentCopies = 0,
                                        this._elements = [],
                                        this._groups = [],
                                        this.frameId = -1,
                                        this.initDynamicPropertyContainer(e),
                                        this.initModifierProperties(e, t[r]);
                                    r > 0;

                                )
                                    (r -= 1), this._elements.unshift(t[r]);
                                this.dynamicProperties.length
                                    ? (this.k = !0)
                                    : this.getValue(!0);
                            }),
                            (RepeaterModifier.prototype.resetElements =
                                function (e) {
                                    var t,
                                        r = e.length;
                                    for (t = 0; t < r; t += 1)
                                        (e[t]._processed = !1),
                                            e[t].ty === 'gr' &&
                                                this.resetElements(e[t].it);
                                }),
                            (RepeaterModifier.prototype.cloneElements =
                                function (e) {
                                    var t = JSON.parse(JSON.stringify(e));
                                    return this.resetElements(t), t;
                                }),
                            (RepeaterModifier.prototype.changeGroupRender =
                                function (e, t) {
                                    var r,
                                        i = e.length;
                                    for (r = 0; r < i; r += 1)
                                        (e[r]._render = t),
                                            e[r].ty === 'gr' &&
                                                this.changeGroupRender(
                                                    e[r].it,
                                                    t
                                                );
                                }),
                            (RepeaterModifier.prototype.processShapes =
                                function (e) {
                                    var t,
                                        r,
                                        i,
                                        s,
                                        a,
                                        n = !1;
                                    if (this._mdf || e) {
                                        var l = Math.ceil(this.c.v);
                                        if (this._groups.length < l) {
                                            for (; this._groups.length < l; ) {
                                                var o = {
                                                    it: this.cloneElements(
                                                        this._elements
                                                    ),
                                                    ty: 'gr',
                                                };
                                                o.it.push({
                                                    a: {
                                                        a: 0,
                                                        ix: 1,
                                                        k: [0, 0],
                                                    },
                                                    nm: 'Transform',
                                                    o: { a: 0, ix: 7, k: 100 },
                                                    p: {
                                                        a: 0,
                                                        ix: 2,
                                                        k: [0, 0],
                                                    },
                                                    r: {
                                                        a: 1,
                                                        ix: 6,
                                                        k: [
                                                            {
                                                                s: 0,
                                                                e: 0,
                                                                t: 0,
                                                            },
                                                            {
                                                                s: 0,
                                                                e: 0,
                                                                t: 1,
                                                            },
                                                        ],
                                                    },
                                                    s: {
                                                        a: 0,
                                                        ix: 3,
                                                        k: [100, 100],
                                                    },
                                                    sa: { a: 0, ix: 5, k: 0 },
                                                    sk: { a: 0, ix: 4, k: 0 },
                                                    ty: 'tr',
                                                }),
                                                    this.arr.splice(0, 0, o),
                                                    this._groups.splice(
                                                        0,
                                                        0,
                                                        o
                                                    ),
                                                    (this._currentCopies += 1);
                                            }
                                            this.elem.reloadShapes(), (n = !0);
                                        }
                                        a = 0;
                                        var f;
                                        for (
                                            i = 0;
                                            i <= this._groups.length - 1;
                                            i += 1
                                        ) {
                                            if (
                                                ((f = a < l),
                                                (this._groups[i]._render = f),
                                                this.changeGroupRender(
                                                    this._groups[i].it,
                                                    f
                                                ),
                                                !f)
                                            ) {
                                                var y = this.elemsData[i].it,
                                                    E = y[y.length - 1];
                                                E.transform.op.v !== 0
                                                    ? ((E.transform.op._mdf =
                                                          !0),
                                                      (E.transform.op.v = 0))
                                                    : (E.transform.op._mdf =
                                                          !1);
                                            }
                                            a += 1;
                                        }
                                        this._currentCopies = l;
                                        var u = this.o.v,
                                            b = u % 1,
                                            _ =
                                                u > 0
                                                    ? Math.floor(u)
                                                    : Math.ceil(u),
                                            d = this.pMatrix.props,
                                            C = this.rMatrix.props,
                                            c = this.sMatrix.props;
                                        this.pMatrix.reset(),
                                            this.rMatrix.reset(),
                                            this.sMatrix.reset(),
                                            this.tMatrix.reset(),
                                            this.matrix.reset();
                                        var m = 0;
                                        if (u > 0) {
                                            for (; m < _; )
                                                this.applyTransforms(
                                                    this.pMatrix,
                                                    this.rMatrix,
                                                    this.sMatrix,
                                                    this.tr,
                                                    1,
                                                    !1
                                                ),
                                                    (m += 1);
                                            b &&
                                                (this.applyTransforms(
                                                    this.pMatrix,
                                                    this.rMatrix,
                                                    this.sMatrix,
                                                    this.tr,
                                                    b,
                                                    !1
                                                ),
                                                (m += b));
                                        } else if (u < 0) {
                                            for (; m > _; )
                                                this.applyTransforms(
                                                    this.pMatrix,
                                                    this.rMatrix,
                                                    this.sMatrix,
                                                    this.tr,
                                                    1,
                                                    !0
                                                ),
                                                    (m -= 1);
                                            b &&
                                                (this.applyTransforms(
                                                    this.pMatrix,
                                                    this.rMatrix,
                                                    this.sMatrix,
                                                    this.tr,
                                                    -b,
                                                    !0
                                                ),
                                                (m -= b));
                                        }
                                        (i =
                                            this.data.m === 1
                                                ? 0
                                                : this._currentCopies - 1),
                                            (s = this.data.m === 1 ? 1 : -1),
                                            (a = this._currentCopies);
                                        for (var p, g; a; ) {
                                            if (
                                                ((t = this.elemsData[i].it),
                                                (r =
                                                    t[t.length - 1].transform
                                                        .mProps.v.props),
                                                (g = r.length),
                                                (t[
                                                    t.length - 1
                                                ].transform.mProps._mdf = !0),
                                                (t[
                                                    t.length - 1
                                                ].transform.op._mdf = !0),
                                                (t[
                                                    t.length - 1
                                                ].transform.op.v =
                                                    this._currentCopies === 1
                                                        ? this.so.v
                                                        : this.so.v +
                                                          (this.eo.v -
                                                              this.so.v) *
                                                              (i /
                                                                  (this
                                                                      ._currentCopies -
                                                                      1))),
                                                m !== 0)
                                            ) {
                                                for (
                                                    ((i !== 0 && s === 1) ||
                                                        (i !==
                                                            this
                                                                ._currentCopies -
                                                                1 &&
                                                            s === -1)) &&
                                                        this.applyTransforms(
                                                            this.pMatrix,
                                                            this.rMatrix,
                                                            this.sMatrix,
                                                            this.tr,
                                                            1,
                                                            !1
                                                        ),
                                                        this.matrix.transform(
                                                            C[0],
                                                            C[1],
                                                            C[2],
                                                            C[3],
                                                            C[4],
                                                            C[5],
                                                            C[6],
                                                            C[7],
                                                            C[8],
                                                            C[9],
                                                            C[10],
                                                            C[11],
                                                            C[12],
                                                            C[13],
                                                            C[14],
                                                            C[15]
                                                        ),
                                                        this.matrix.transform(
                                                            c[0],
                                                            c[1],
                                                            c[2],
                                                            c[3],
                                                            c[4],
                                                            c[5],
                                                            c[6],
                                                            c[7],
                                                            c[8],
                                                            c[9],
                                                            c[10],
                                                            c[11],
                                                            c[12],
                                                            c[13],
                                                            c[14],
                                                            c[15]
                                                        ),
                                                        this.matrix.transform(
                                                            d[0],
                                                            d[1],
                                                            d[2],
                                                            d[3],
                                                            d[4],
                                                            d[5],
                                                            d[6],
                                                            d[7],
                                                            d[8],
                                                            d[9],
                                                            d[10],
                                                            d[11],
                                                            d[12],
                                                            d[13],
                                                            d[14],
                                                            d[15]
                                                        ),
                                                        p = 0;
                                                    p < g;
                                                    p += 1
                                                )
                                                    r[p] = this.matrix.props[p];
                                                this.matrix.reset();
                                            } else
                                                for (
                                                    this.matrix.reset(), p = 0;
                                                    p < g;
                                                    p += 1
                                                )
                                                    r[p] = this.matrix.props[p];
                                            (m += 1), (a -= 1), (i += s);
                                        }
                                    } else
                                        for (
                                            a = this._currentCopies,
                                                i = 0,
                                                s = 1;
                                            a;

                                        )
                                            (t = this.elemsData[i].it),
                                                (r =
                                                    t[t.length - 1].transform
                                                        .mProps.v.props),
                                                (t[
                                                    t.length - 1
                                                ].transform.mProps._mdf = !1),
                                                (t[
                                                    t.length - 1
                                                ].transform.op._mdf = !1),
                                                (a -= 1),
                                                (i += s);
                                    return n;
                                }),
                            (RepeaterModifier.prototype.addShape =
                                function () {});
                        function RoundCornersModifier() {}
                        extendPrototype([ShapeModifier], RoundCornersModifier),
                            (RoundCornersModifier.prototype.initModifierProperties =
                                function (e, t) {
                                    (this.getValue = this.processKeys),
                                        (this.rd = PropertyFactory.getProp(
                                            e,
                                            t.r,
                                            0,
                                            null,
                                            this
                                        )),
                                        (this._isAnimated =
                                            !!this.rd.effectsSequence.length);
                                }),
                            (RoundCornersModifier.prototype.processPath =
                                function (e, t) {
                                    var r = shapePool.newElement();
                                    r.c = e.c;
                                    var i,
                                        s = e._length,
                                        a,
                                        n,
                                        l,
                                        o,
                                        f,
                                        y,
                                        E = 0,
                                        u,
                                        b,
                                        _,
                                        d,
                                        C,
                                        c;
                                    for (i = 0; i < s; i += 1)
                                        (a = e.v[i]),
                                            (l = e.o[i]),
                                            (n = e.i[i]),
                                            a[0] === l[0] &&
                                            a[1] === l[1] &&
                                            a[0] === n[0] &&
                                            a[1] === n[1]
                                                ? (i === 0 || i === s - 1) &&
                                                  !e.c
                                                    ? (r.setTripleAt(
                                                          a[0],
                                                          a[1],
                                                          l[0],
                                                          l[1],
                                                          n[0],
                                                          n[1],
                                                          E
                                                      ),
                                                      (E += 1))
                                                    : (i === 0
                                                          ? (o = e.v[s - 1])
                                                          : (o = e.v[i - 1]),
                                                      (f = Math.sqrt(
                                                          Math.pow(
                                                              a[0] - o[0],
                                                              2
                                                          ) +
                                                              Math.pow(
                                                                  a[1] - o[1],
                                                                  2
                                                              )
                                                      )),
                                                      (y = f
                                                          ? Math.min(f / 2, t) /
                                                            f
                                                          : 0),
                                                      (C =
                                                          a[0] +
                                                          (o[0] - a[0]) * y),
                                                      (u = C),
                                                      (c =
                                                          a[1] -
                                                          (a[1] - o[1]) * y),
                                                      (b = c),
                                                      (_ =
                                                          u -
                                                          (u - a[0]) *
                                                              roundCorner),
                                                      (d =
                                                          b -
                                                          (b - a[1]) *
                                                              roundCorner),
                                                      r.setTripleAt(
                                                          u,
                                                          b,
                                                          _,
                                                          d,
                                                          C,
                                                          c,
                                                          E
                                                      ),
                                                      (E += 1),
                                                      i === s - 1
                                                          ? (o = e.v[0])
                                                          : (o = e.v[i + 1]),
                                                      (f = Math.sqrt(
                                                          Math.pow(
                                                              a[0] - o[0],
                                                              2
                                                          ) +
                                                              Math.pow(
                                                                  a[1] - o[1],
                                                                  2
                                                              )
                                                      )),
                                                      (y = f
                                                          ? Math.min(f / 2, t) /
                                                            f
                                                          : 0),
                                                      (_ =
                                                          a[0] +
                                                          (o[0] - a[0]) * y),
                                                      (u = _),
                                                      (d =
                                                          a[1] +
                                                          (o[1] - a[1]) * y),
                                                      (b = d),
                                                      (C =
                                                          u -
                                                          (u - a[0]) *
                                                              roundCorner),
                                                      (c =
                                                          b -
                                                          (b - a[1]) *
                                                              roundCorner),
                                                      r.setTripleAt(
                                                          u,
                                                          b,
                                                          _,
                                                          d,
                                                          C,
                                                          c,
                                                          E
                                                      ),
                                                      (E += 1))
                                                : (r.setTripleAt(
                                                      e.v[i][0],
                                                      e.v[i][1],
                                                      e.o[i][0],
                                                      e.o[i][1],
                                                      e.i[i][0],
                                                      e.i[i][1],
                                                      E
                                                  ),
                                                  (E += 1));
                                    return r;
                                }),
                            (RoundCornersModifier.prototype.processShapes =
                                function (e) {
                                    var t,
                                        r,
                                        i = this.shapes.length,
                                        s,
                                        a,
                                        n = this.rd.v;
                                    if (n !== 0) {
                                        var l, o;
                                        for (r = 0; r < i; r += 1) {
                                            if (
                                                ((l = this.shapes[r]),
                                                (o = l.localShapeCollection),
                                                !(
                                                    !l.shape._mdf &&
                                                    !this._mdf &&
                                                    !e
                                                ))
                                            )
                                                for (
                                                    o.releaseShapes(),
                                                        l.shape._mdf = !0,
                                                        t =
                                                            l.shape.paths
                                                                .shapes,
                                                        a =
                                                            l.shape.paths
                                                                ._length,
                                                        s = 0;
                                                    s < a;
                                                    s += 1
                                                )
                                                    o.addShape(
                                                        this.processPath(
                                                            t[s],
                                                            n
                                                        )
                                                    );
                                            l.shape.paths =
                                                l.localShapeCollection;
                                        }
                                    }
                                    this.dynamicProperties.length ||
                                        (this._mdf = !1);
                                });
                        function floatEqual(e, t) {
                            return (
                                Math.abs(e - t) * 1e5 <=
                                Math.min(Math.abs(e), Math.abs(t))
                            );
                        }
                        function floatZero(e) {
                            return Math.abs(e) <= 1e-5;
                        }
                        function lerp(e, t, r) {
                            return e * (1 - r) + t * r;
                        }
                        function lerpPoint(e, t, r) {
                            return [lerp(e[0], t[0], r), lerp(e[1], t[1], r)];
                        }
                        function quadRoots(e, t, r) {
                            if (e === 0) return [];
                            var i = t * t - 4 * e * r;
                            if (i < 0) return [];
                            var s = -t / (2 * e);
                            if (i === 0) return [s];
                            var a = Math.sqrt(i) / (2 * e);
                            return [s - a, s + a];
                        }
                        function polynomialCoefficients(e, t, r, i) {
                            return [
                                -e + 3 * t - 3 * r + i,
                                3 * e - 6 * t + 3 * r,
                                -3 * e + 3 * t,
                                e,
                            ];
                        }
                        function singlePoint(e) {
                            return new PolynomialBezier(e, e, e, e, !1);
                        }
                        function PolynomialBezier(e, t, r, i, s) {
                            s &&
                                pointEqual(e, t) &&
                                (t = lerpPoint(e, i, 1 / 3)),
                                s &&
                                    pointEqual(r, i) &&
                                    (r = lerpPoint(e, i, 2 / 3));
                            var a = polynomialCoefficients(
                                    e[0],
                                    t[0],
                                    r[0],
                                    i[0]
                                ),
                                n = polynomialCoefficients(
                                    e[1],
                                    t[1],
                                    r[1],
                                    i[1]
                                );
                            (this.a = [a[0], n[0]]),
                                (this.b = [a[1], n[1]]),
                                (this.c = [a[2], n[2]]),
                                (this.d = [a[3], n[3]]),
                                (this.points = [e, t, r, i]);
                        }
                        (PolynomialBezier.prototype.point = function (e) {
                            return [
                                ((this.a[0] * e + this.b[0]) * e + this.c[0]) *
                                    e +
                                    this.d[0],
                                ((this.a[1] * e + this.b[1]) * e + this.c[1]) *
                                    e +
                                    this.d[1],
                            ];
                        }),
                            (PolynomialBezier.prototype.derivative = function (
                                e
                            ) {
                                return [
                                    (3 * e * this.a[0] + 2 * this.b[0]) * e +
                                        this.c[0],
                                    (3 * e * this.a[1] + 2 * this.b[1]) * e +
                                        this.c[1],
                                ];
                            }),
                            (PolynomialBezier.prototype.tangentAngle =
                                function (e) {
                                    var t = this.derivative(e);
                                    return Math.atan2(t[1], t[0]);
                                }),
                            (PolynomialBezier.prototype.normalAngle = function (
                                e
                            ) {
                                var t = this.derivative(e);
                                return Math.atan2(t[0], t[1]);
                            }),
                            (PolynomialBezier.prototype.inflectionPoints =
                                function () {
                                    var e =
                                        this.a[1] * this.b[0] -
                                        this.a[0] * this.b[1];
                                    if (floatZero(e)) return [];
                                    var t =
                                            (-0.5 *
                                                (this.a[1] * this.c[0] -
                                                    this.a[0] * this.c[1])) /
                                            e,
                                        r =
                                            t * t -
                                            ((1 / 3) *
                                                (this.b[1] * this.c[0] -
                                                    this.b[0] * this.c[1])) /
                                                e;
                                    if (r < 0) return [];
                                    var i = Math.sqrt(r);
                                    return floatZero(i)
                                        ? i > 0 && i < 1
                                            ? [t]
                                            : []
                                        : [t - i, t + i].filter(function (s) {
                                              return s > 0 && s < 1;
                                          });
                                }),
                            (PolynomialBezier.prototype.split = function (e) {
                                if (e <= 0)
                                    return [singlePoint(this.points[0]), this];
                                if (e >= 1)
                                    return [
                                        this,
                                        singlePoint(
                                            this.points[this.points.length - 1]
                                        ),
                                    ];
                                var t = lerpPoint(
                                        this.points[0],
                                        this.points[1],
                                        e
                                    ),
                                    r = lerpPoint(
                                        this.points[1],
                                        this.points[2],
                                        e
                                    ),
                                    i = lerpPoint(
                                        this.points[2],
                                        this.points[3],
                                        e
                                    ),
                                    s = lerpPoint(t, r, e),
                                    a = lerpPoint(r, i, e),
                                    n = lerpPoint(s, a, e);
                                return [
                                    new PolynomialBezier(
                                        this.points[0],
                                        t,
                                        s,
                                        n,
                                        !0
                                    ),
                                    new PolynomialBezier(
                                        n,
                                        a,
                                        i,
                                        this.points[3],
                                        !0
                                    ),
                                ];
                            });
                        function extrema(e, t) {
                            var r = e.points[0][t],
                                i = e.points[e.points.length - 1][t];
                            if (r > i) {
                                var s = i;
                                (i = r), (r = s);
                            }
                            for (
                                var a = quadRoots(
                                        3 * e.a[t],
                                        2 * e.b[t],
                                        e.c[t]
                                    ),
                                    n = 0;
                                n < a.length;
                                n += 1
                            )
                                if (a[n] > 0 && a[n] < 1) {
                                    var l = e.point(a[n])[t];
                                    l < r ? (r = l) : l > i && (i = l);
                                }
                            return { min: r, max: i };
                        }
                        (PolynomialBezier.prototype.bounds = function () {
                            return { x: extrema(this, 0), y: extrema(this, 1) };
                        }),
                            (PolynomialBezier.prototype.boundingBox =
                                function () {
                                    var e = this.bounds();
                                    return {
                                        left: e.x.min,
                                        right: e.x.max,
                                        top: e.y.min,
                                        bottom: e.y.max,
                                        width: e.x.max - e.x.min,
                                        height: e.y.max - e.y.min,
                                        cx: (e.x.max + e.x.min) / 2,
                                        cy: (e.y.max + e.y.min) / 2,
                                    };
                                });
                        function intersectData(e, t, r) {
                            var i = e.boundingBox();
                            return {
                                cx: i.cx,
                                cy: i.cy,
                                width: i.width,
                                height: i.height,
                                bez: e,
                                t: (t + r) / 2,
                                t1: t,
                                t2: r,
                            };
                        }
                        function splitData(e) {
                            var t = e.bez.split(0.5);
                            return [
                                intersectData(t[0], e.t1, e.t),
                                intersectData(t[1], e.t, e.t2),
                            ];
                        }
                        function boxIntersect(e, t) {
                            return (
                                Math.abs(e.cx - t.cx) * 2 < e.width + t.width &&
                                Math.abs(e.cy - t.cy) * 2 < e.height + t.height
                            );
                        }
                        function intersectsImpl(e, t, r, i, s, a) {
                            if (boxIntersect(e, t)) {
                                if (
                                    r >= a ||
                                    (e.width <= i &&
                                        e.height <= i &&
                                        t.width <= i &&
                                        t.height <= i)
                                ) {
                                    s.push([e.t, t.t]);
                                    return;
                                }
                                var n = splitData(e),
                                    l = splitData(t);
                                intersectsImpl(n[0], l[0], r + 1, i, s, a),
                                    intersectsImpl(n[0], l[1], r + 1, i, s, a),
                                    intersectsImpl(n[1], l[0], r + 1, i, s, a),
                                    intersectsImpl(n[1], l[1], r + 1, i, s, a);
                            }
                        }
                        (PolynomialBezier.prototype.intersections = function (
                            e,
                            t,
                            r
                        ) {
                            t === void 0 && (t = 2), r === void 0 && (r = 7);
                            var i = [];
                            return (
                                intersectsImpl(
                                    intersectData(this, 0, 1),
                                    intersectData(e, 0, 1),
                                    0,
                                    t,
                                    i,
                                    r
                                ),
                                i
                            );
                        }),
                            (PolynomialBezier.shapeSegment = function (e, t) {
                                var r = (t + 1) % e.length();
                                return new PolynomialBezier(
                                    e.v[t],
                                    e.o[t],
                                    e.i[r],
                                    e.v[r],
                                    !0
                                );
                            }),
                            (PolynomialBezier.shapeSegmentInverted = function (
                                e,
                                t
                            ) {
                                var r = (t + 1) % e.length();
                                return new PolynomialBezier(
                                    e.v[r],
                                    e.i[r],
                                    e.o[t],
                                    e.v[t],
                                    !0
                                );
                            });
                        function crossProduct(e, t) {
                            return [
                                e[1] * t[2] - e[2] * t[1],
                                e[2] * t[0] - e[0] * t[2],
                                e[0] * t[1] - e[1] * t[0],
                            ];
                        }
                        function lineIntersection(e, t, r, i) {
                            var s = [e[0], e[1], 1],
                                a = [t[0], t[1], 1],
                                n = [r[0], r[1], 1],
                                l = [i[0], i[1], 1],
                                o = crossProduct(
                                    crossProduct(s, a),
                                    crossProduct(n, l)
                                );
                            return floatZero(o[2])
                                ? null
                                : [o[0] / o[2], o[1] / o[2]];
                        }
                        function polarOffset(e, t, r) {
                            return [
                                e[0] + Math.cos(t) * r,
                                e[1] - Math.sin(t) * r,
                            ];
                        }
                        function pointDistance(e, t) {
                            return Math.hypot(e[0] - t[0], e[1] - t[1]);
                        }
                        function pointEqual(e, t) {
                            return (
                                floatEqual(e[0], t[0]) && floatEqual(e[1], t[1])
                            );
                        }
                        function ZigZagModifier() {}
                        extendPrototype([ShapeModifier], ZigZagModifier),
                            (ZigZagModifier.prototype.initModifierProperties =
                                function (e, t) {
                                    (this.getValue = this.processKeys),
                                        (this.amplitude =
                                            PropertyFactory.getProp(
                                                e,
                                                t.s,
                                                0,
                                                null,
                                                this
                                            )),
                                        (this.frequency =
                                            PropertyFactory.getProp(
                                                e,
                                                t.r,
                                                0,
                                                null,
                                                this
                                            )),
                                        (this.pointsType =
                                            PropertyFactory.getProp(
                                                e,
                                                t.pt,
                                                0,
                                                null,
                                                this
                                            )),
                                        (this._isAnimated =
                                            this.amplitude.effectsSequence
                                                .length !== 0 ||
                                            this.frequency.effectsSequence
                                                .length !== 0 ||
                                            this.pointsType.effectsSequence
                                                .length !== 0);
                                });
                        function setPoint(e, t, r, i, s, a, n) {
                            var l = r - Math.PI / 2,
                                o = r + Math.PI / 2,
                                f = t[0] + Math.cos(r) * i * s,
                                y = t[1] - Math.sin(r) * i * s;
                            e.setTripleAt(
                                f,
                                y,
                                f + Math.cos(l) * a,
                                y - Math.sin(l) * a,
                                f + Math.cos(o) * n,
                                y - Math.sin(o) * n,
                                e.length()
                            );
                        }
                        function getPerpendicularVector(e, t) {
                            var r = [t[0] - e[0], t[1] - e[1]],
                                i = -Math.PI * 0.5,
                                s = [
                                    Math.cos(i) * r[0] - Math.sin(i) * r[1],
                                    Math.sin(i) * r[0] + Math.cos(i) * r[1],
                                ];
                            return s;
                        }
                        function getProjectingAngle(e, t) {
                            var r = t === 0 ? e.length() - 1 : t - 1,
                                i = (t + 1) % e.length(),
                                s = e.v[r],
                                a = e.v[i],
                                n = getPerpendicularVector(s, a);
                            return Math.atan2(0, 1) - Math.atan2(n[1], n[0]);
                        }
                        function zigZagCorner(e, t, r, i, s, a, n) {
                            var l = getProjectingAngle(t, r),
                                o = t.v[r % t._length],
                                f = t.v[r === 0 ? t._length - 1 : r - 1],
                                y = t.v[(r + 1) % t._length],
                                E =
                                    a === 2
                                        ? Math.sqrt(
                                              Math.pow(o[0] - f[0], 2) +
                                                  Math.pow(o[1] - f[1], 2)
                                          )
                                        : 0,
                                u =
                                    a === 2
                                        ? Math.sqrt(
                                              Math.pow(o[0] - y[0], 2) +
                                                  Math.pow(o[1] - y[1], 2)
                                          )
                                        : 0;
                            setPoint(
                                e,
                                t.v[r % t._length],
                                l,
                                n,
                                i,
                                u / ((s + 1) * 2),
                                E / ((s + 1) * 2)
                            );
                        }
                        function zigZagSegment(e, t, r, i, s, a) {
                            for (var n = 0; n < i; n += 1) {
                                var l = (n + 1) / (i + 1),
                                    o =
                                        s === 2
                                            ? Math.sqrt(
                                                  Math.pow(
                                                      t.points[3][0] -
                                                          t.points[0][0],
                                                      2
                                                  ) +
                                                      Math.pow(
                                                          t.points[3][1] -
                                                              t.points[0][1],
                                                          2
                                                      )
                                              )
                                            : 0,
                                    f = t.normalAngle(l),
                                    y = t.point(l);
                                setPoint(
                                    e,
                                    y,
                                    f,
                                    a,
                                    r,
                                    o / ((i + 1) * 2),
                                    o / ((i + 1) * 2)
                                ),
                                    (a = -a);
                            }
                            return a;
                        }
                        (ZigZagModifier.prototype.processPath = function (
                            e,
                            t,
                            r,
                            i
                        ) {
                            var s = e._length,
                                a = shapePool.newElement();
                            if (((a.c = e.c), e.c || (s -= 1), s === 0))
                                return a;
                            var n = -1,
                                l = PolynomialBezier.shapeSegment(e, 0);
                            zigZagCorner(a, e, 0, t, r, i, n);
                            for (var o = 0; o < s; o += 1)
                                (n = zigZagSegment(a, l, t, r, i, -n)),
                                    o === s - 1 && !e.c
                                        ? (l = null)
                                        : (l = PolynomialBezier.shapeSegment(
                                              e,
                                              (o + 1) % s
                                          )),
                                    zigZagCorner(a, e, o + 1, t, r, i, n);
                            return a;
                        }),
                            (ZigZagModifier.prototype.processShapes = function (
                                e
                            ) {
                                var t,
                                    r,
                                    i = this.shapes.length,
                                    s,
                                    a,
                                    n = this.amplitude.v,
                                    l = Math.max(
                                        0,
                                        Math.round(this.frequency.v)
                                    ),
                                    o = this.pointsType.v;
                                if (n !== 0) {
                                    var f, y;
                                    for (r = 0; r < i; r += 1) {
                                        if (
                                            ((f = this.shapes[r]),
                                            (y = f.localShapeCollection),
                                            !(
                                                !f.shape._mdf &&
                                                !this._mdf &&
                                                !e
                                            ))
                                        )
                                            for (
                                                y.releaseShapes(),
                                                    f.shape._mdf = !0,
                                                    t = f.shape.paths.shapes,
                                                    a = f.shape.paths._length,
                                                    s = 0;
                                                s < a;
                                                s += 1
                                            )
                                                y.addShape(
                                                    this.processPath(
                                                        t[s],
                                                        n,
                                                        l,
                                                        o
                                                    )
                                                );
                                        f.shape.paths = f.localShapeCollection;
                                    }
                                }
                                this.dynamicProperties.length ||
                                    (this._mdf = !1);
                            });
                        function linearOffset(e, t, r) {
                            var i = Math.atan2(t[0] - e[0], t[1] - e[1]);
                            return [polarOffset(e, i, r), polarOffset(t, i, r)];
                        }
                        function offsetSegment(e, t) {
                            var r, i, s, a, n, l, o;
                            (o = linearOffset(e.points[0], e.points[1], t)),
                                (r = o[0]),
                                (i = o[1]),
                                (o = linearOffset(e.points[1], e.points[2], t)),
                                (s = o[0]),
                                (a = o[1]),
                                (o = linearOffset(e.points[2], e.points[3], t)),
                                (n = o[0]),
                                (l = o[1]);
                            var f = lineIntersection(r, i, s, a);
                            f === null && (f = i);
                            var y = lineIntersection(n, l, s, a);
                            return (
                                y === null && (y = n),
                                new PolynomialBezier(r, f, y, l)
                            );
                        }
                        function joinLines(e, t, r, i, s) {
                            var a = t.points[3],
                                n = r.points[0];
                            if (i === 3 || pointEqual(a, n)) return a;
                            if (i === 2) {
                                var l = -t.tangentAngle(1),
                                    o = -r.tangentAngle(0) + Math.PI,
                                    f = lineIntersection(
                                        a,
                                        polarOffset(a, l + Math.PI / 2, 100),
                                        n,
                                        polarOffset(n, l + Math.PI / 2, 100)
                                    ),
                                    y = f
                                        ? pointDistance(f, a)
                                        : pointDistance(a, n) / 2,
                                    E = polarOffset(a, l, 2 * y * roundCorner);
                                return (
                                    e.setXYAt(E[0], E[1], 'o', e.length() - 1),
                                    (E = polarOffset(
                                        n,
                                        o,
                                        2 * y * roundCorner
                                    )),
                                    e.setTripleAt(
                                        n[0],
                                        n[1],
                                        n[0],
                                        n[1],
                                        E[0],
                                        E[1],
                                        e.length()
                                    ),
                                    n
                                );
                            }
                            var u = pointEqual(a, t.points[2])
                                    ? t.points[0]
                                    : t.points[2],
                                b = pointEqual(n, r.points[1])
                                    ? r.points[3]
                                    : r.points[1],
                                _ = lineIntersection(u, a, n, b);
                            return _ && pointDistance(_, a) < s
                                ? (e.setTripleAt(
                                      _[0],
                                      _[1],
                                      _[0],
                                      _[1],
                                      _[0],
                                      _[1],
                                      e.length()
                                  ),
                                  _)
                                : a;
                        }
                        function getIntersection(e, t) {
                            var r = e.intersections(t);
                            return (
                                r.length && floatEqual(r[0][0], 1) && r.shift(),
                                r.length ? r[0] : null
                            );
                        }
                        function pruneSegmentIntersection(e, t) {
                            var r = e.slice(),
                                i = t.slice(),
                                s = getIntersection(e[e.length - 1], t[0]);
                            return (
                                s &&
                                    ((r[e.length - 1] = e[e.length - 1].split(
                                        s[0]
                                    )[0]),
                                    (i[0] = t[0].split(s[1])[1])),
                                e.length > 1 &&
                                t.length > 1 &&
                                ((s = getIntersection(e[0], t[t.length - 1])),
                                s)
                                    ? [
                                          [e[0].split(s[0])[0]],
                                          [t[t.length - 1].split(s[1])[1]],
                                      ]
                                    : [r, i]
                            );
                        }
                        function pruneIntersections(e) {
                            for (var t, r = 1; r < e.length; r += 1)
                                (t = pruneSegmentIntersection(e[r - 1], e[r])),
                                    (e[r - 1] = t[0]),
                                    (e[r] = t[1]);
                            return (
                                e.length > 1 &&
                                    ((t = pruneSegmentIntersection(
                                        e[e.length - 1],
                                        e[0]
                                    )),
                                    (e[e.length - 1] = t[0]),
                                    (e[0] = t[1])),
                                e
                            );
                        }
                        function offsetSegmentSplit(e, t) {
                            var r = e.inflectionPoints(),
                                i,
                                s,
                                a,
                                n;
                            if (r.length === 0) return [offsetSegment(e, t)];
                            if (r.length === 1 || floatEqual(r[1], 1))
                                return (
                                    (a = e.split(r[0])),
                                    (i = a[0]),
                                    (s = a[1]),
                                    [offsetSegment(i, t), offsetSegment(s, t)]
                                );
                            (a = e.split(r[0])), (i = a[0]);
                            var l = (r[1] - r[0]) / (1 - r[0]);
                            return (
                                (a = a[1].split(l)),
                                (n = a[0]),
                                (s = a[1]),
                                [
                                    offsetSegment(i, t),
                                    offsetSegment(n, t),
                                    offsetSegment(s, t),
                                ]
                            );
                        }
                        function OffsetPathModifier() {}
                        extendPrototype([ShapeModifier], OffsetPathModifier),
                            (OffsetPathModifier.prototype.initModifierProperties =
                                function (e, t) {
                                    (this.getValue = this.processKeys),
                                        (this.amount = PropertyFactory.getProp(
                                            e,
                                            t.a,
                                            0,
                                            null,
                                            this
                                        )),
                                        (this.miterLimit =
                                            PropertyFactory.getProp(
                                                e,
                                                t.ml,
                                                0,
                                                null,
                                                this
                                            )),
                                        (this.lineJoin = t.lj),
                                        (this._isAnimated =
                                            this.amount.effectsSequence
                                                .length !== 0);
                                }),
                            (OffsetPathModifier.prototype.processPath =
                                function (e, t, r, i) {
                                    var s = shapePool.newElement();
                                    s.c = e.c;
                                    var a = e.length();
                                    e.c || (a -= 1);
                                    var n,
                                        l,
                                        o,
                                        f = [];
                                    for (n = 0; n < a; n += 1)
                                        (o = PolynomialBezier.shapeSegment(
                                            e,
                                            n
                                        )),
                                            f.push(offsetSegmentSplit(o, t));
                                    if (!e.c)
                                        for (n = a - 1; n >= 0; n -= 1)
                                            (o =
                                                PolynomialBezier.shapeSegmentInverted(
                                                    e,
                                                    n
                                                )),
                                                f.push(
                                                    offsetSegmentSplit(o, t)
                                                );
                                    f = pruneIntersections(f);
                                    var y = null,
                                        E = null;
                                    for (n = 0; n < f.length; n += 1) {
                                        var u = f[n];
                                        for (
                                            E &&
                                                (y = joinLines(
                                                    s,
                                                    E,
                                                    u[0],
                                                    r,
                                                    i
                                                )),
                                                E = u[u.length - 1],
                                                l = 0;
                                            l < u.length;
                                            l += 1
                                        )
                                            (o = u[l]),
                                                y && pointEqual(o.points[0], y)
                                                    ? s.setXYAt(
                                                          o.points[1][0],
                                                          o.points[1][1],
                                                          'o',
                                                          s.length() - 1
                                                      )
                                                    : s.setTripleAt(
                                                          o.points[0][0],
                                                          o.points[0][1],
                                                          o.points[1][0],
                                                          o.points[1][1],
                                                          o.points[0][0],
                                                          o.points[0][1],
                                                          s.length()
                                                      ),
                                                s.setTripleAt(
                                                    o.points[3][0],
                                                    o.points[3][1],
                                                    o.points[3][0],
                                                    o.points[3][1],
                                                    o.points[2][0],
                                                    o.points[2][1],
                                                    s.length()
                                                ),
                                                (y = o.points[3]);
                                    }
                                    return (
                                        f.length &&
                                            joinLines(s, E, f[0][0], r, i),
                                        s
                                    );
                                }),
                            (OffsetPathModifier.prototype.processShapes =
                                function (e) {
                                    var t,
                                        r,
                                        i = this.shapes.length,
                                        s,
                                        a,
                                        n = this.amount.v,
                                        l = this.miterLimit.v,
                                        o = this.lineJoin;
                                    if (n !== 0) {
                                        var f, y;
                                        for (r = 0; r < i; r += 1) {
                                            if (
                                                ((f = this.shapes[r]),
                                                (y = f.localShapeCollection),
                                                !(
                                                    !f.shape._mdf &&
                                                    !this._mdf &&
                                                    !e
                                                ))
                                            )
                                                for (
                                                    y.releaseShapes(),
                                                        f.shape._mdf = !0,
                                                        t =
                                                            f.shape.paths
                                                                .shapes,
                                                        a =
                                                            f.shape.paths
                                                                ._length,
                                                        s = 0;
                                                    s < a;
                                                    s += 1
                                                )
                                                    y.addShape(
                                                        this.processPath(
                                                            t[s],
                                                            n,
                                                            o,
                                                            l
                                                        )
                                                    );
                                            f.shape.paths =
                                                f.localShapeCollection;
                                        }
                                    }
                                    this.dynamicProperties.length ||
                                        (this._mdf = !1);
                                });
                        function getFontProperties(e) {
                            for (
                                var t = e.fStyle ? e.fStyle.split(' ') : [],
                                    r = 'normal',
                                    i = 'normal',
                                    s = t.length,
                                    a,
                                    n = 0;
                                n < s;
                                n += 1
                            )
                                switch (((a = t[n].toLowerCase()), a)) {
                                    case 'italic':
                                        i = 'italic';
                                        break;
                                    case 'bold':
                                        r = '700';
                                        break;
                                    case 'black':
                                        r = '900';
                                        break;
                                    case 'medium':
                                        r = '500';
                                        break;
                                    case 'regular':
                                    case 'normal':
                                        r = '400';
                                        break;
                                    case 'light':
                                    case 'thin':
                                        r = '200';
                                        break;
                                }
                            return { style: i, weight: e.fWeight || r };
                        }
                        var FontManager = (function () {
                            var e = 5e3,
                                t = {
                                    w: 0,
                                    size: 0,
                                    shapes: [],
                                    data: { shapes: [] },
                                },
                                r = [];
                            r = r.concat([
                                2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364,
                                2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373,
                                2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
                                2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402,
                                2403,
                            ]);
                            var i = 127988,
                                s = 917631,
                                a = 917601,
                                n = 917626,
                                l = 65039,
                                o = 8205,
                                f = 127462,
                                y = 127487,
                                E = [
                                    'd83cdffb',
                                    'd83cdffc',
                                    'd83cdffd',
                                    'd83cdffe',
                                    'd83cdfff',
                                ];
                            function u(S) {
                                var M = S.split(','),
                                    x,
                                    k = M.length,
                                    R = [];
                                for (x = 0; x < k; x += 1)
                                    M[x] !== 'sans-serif' &&
                                        M[x] !== 'monospace' &&
                                        R.push(M[x]);
                                return R.join(',');
                            }
                            function b(S, M) {
                                var x = createTag('span');
                                x.setAttribute('aria-hidden', !0),
                                    (x.style.fontFamily = M);
                                var k = createTag('span');
                                (k.innerText = 'giItT1WQy@!-/#'),
                                    (x.style.position = 'absolute'),
                                    (x.style.left = '-10000px'),
                                    (x.style.top = '-10000px'),
                                    (x.style.fontSize = '300px'),
                                    (x.style.fontVariant = 'normal'),
                                    (x.style.fontStyle = 'normal'),
                                    (x.style.fontWeight = 'normal'),
                                    (x.style.letterSpacing = '0'),
                                    x.appendChild(k),
                                    document.body.appendChild(x);
                                var R = k.offsetWidth;
                                return (
                                    (k.style.fontFamily = u(S) + ', ' + M),
                                    { node: k, w: R, parent: x }
                                );
                            }
                            function _() {
                                var S,
                                    M = this.fonts.length,
                                    x,
                                    k,
                                    R = M;
                                for (S = 0; S < M; S += 1)
                                    this.fonts[S].loaded
                                        ? (R -= 1)
                                        : this.fonts[S].fOrigin === 'n' ||
                                            this.fonts[S].origin === 0
                                          ? (this.fonts[S].loaded = !0)
                                          : ((x = this.fonts[S].monoCase.node),
                                            (k = this.fonts[S].monoCase.w),
                                            x.offsetWidth !== k
                                                ? ((R -= 1),
                                                  (this.fonts[S].loaded = !0))
                                                : ((x =
                                                      this.fonts[S].sansCase
                                                          .node),
                                                  (k =
                                                      this.fonts[S].sansCase.w),
                                                  x.offsetWidth !== k &&
                                                      ((R -= 1),
                                                      (this.fonts[S].loaded =
                                                          !0))),
                                            this.fonts[S].loaded &&
                                                (this.fonts[
                                                    S
                                                ].sansCase.parent.parentNode.removeChild(
                                                    this.fonts[S].sansCase
                                                        .parent
                                                ),
                                                this.fonts[
                                                    S
                                                ].monoCase.parent.parentNode.removeChild(
                                                    this.fonts[S].monoCase
                                                        .parent
                                                )));
                                R !== 0 && Date.now() - this.initTime < e
                                    ? setTimeout(
                                          this.checkLoadedFontsBinded,
                                          20
                                      )
                                    : setTimeout(this.setIsLoadedBinded, 10);
                            }
                            function d(S, M) {
                                var x = document.body && M ? 'svg' : 'canvas',
                                    k,
                                    R = getFontProperties(S);
                                if (x === 'svg') {
                                    var I = createNS('text');
                                    (I.style.fontSize = '100px'),
                                        I.setAttribute(
                                            'font-family',
                                            S.fFamily
                                        ),
                                        I.setAttribute('font-style', R.style),
                                        I.setAttribute('font-weight', R.weight),
                                        (I.textContent = '1'),
                                        S.fClass
                                            ? ((I.style.fontFamily = 'inherit'),
                                              I.setAttribute('class', S.fClass))
                                            : (I.style.fontFamily = S.fFamily),
                                        M.appendChild(I),
                                        (k = I);
                                } else {
                                    var O = new OffscreenCanvas(
                                        500,
                                        500
                                    ).getContext('2d');
                                    (O.font =
                                        R.style +
                                        ' ' +
                                        R.weight +
                                        ' 100px ' +
                                        S.fFamily),
                                        (k = O);
                                }
                                function $(H) {
                                    return x === 'svg'
                                        ? ((k.textContent = H),
                                          k.getComputedTextLength())
                                        : k.measureText(H).width;
                                }
                                return { measureText: $ };
                            }
                            function C(S, M) {
                                if (!S) {
                                    this.isLoaded = !0;
                                    return;
                                }
                                if (this.chars) {
                                    (this.isLoaded = !0), (this.fonts = S.list);
                                    return;
                                }
                                if (!document.body) {
                                    (this.isLoaded = !0),
                                        S.list.forEach(function (te) {
                                            (te.helper = d(te)),
                                                (te.cache = {});
                                        }),
                                        (this.fonts = S.list);
                                    return;
                                }
                                var x = S.list,
                                    k,
                                    R = x.length,
                                    I = R;
                                for (k = 0; k < R; k += 1) {
                                    var O = !0,
                                        $,
                                        H;
                                    if (
                                        ((x[k].loaded = !1),
                                        (x[k].monoCase = b(
                                            x[k].fFamily,
                                            'monospace'
                                        )),
                                        (x[k].sansCase = b(
                                            x[k].fFamily,
                                            'sans-serif'
                                        )),
                                        !x[k].fPath)
                                    )
                                        (x[k].loaded = !0), (I -= 1);
                                    else if (
                                        x[k].fOrigin === 'p' ||
                                        x[k].origin === 3
                                    ) {
                                        if (
                                            (($ = document.querySelectorAll(
                                                'style[f-forigin="p"][f-family="' +
                                                    x[k].fFamily +
                                                    '"], style[f-origin="3"][f-family="' +
                                                    x[k].fFamily +
                                                    '"]'
                                            )),
                                            $.length > 0 && (O = !1),
                                            O)
                                        ) {
                                            var X = createTag('style');
                                            X.setAttribute(
                                                'f-forigin',
                                                x[k].fOrigin
                                            ),
                                                X.setAttribute(
                                                    'f-origin',
                                                    x[k].origin
                                                ),
                                                X.setAttribute(
                                                    'f-family',
                                                    x[k].fFamily
                                                ),
                                                (X.type = 'text/css'),
                                                (X.innerText =
                                                    '@font-face {font-family: ' +
                                                    x[k].fFamily +
                                                    "; font-style: normal; src: url('" +
                                                    x[k].fPath +
                                                    "');}"),
                                                M.appendChild(X);
                                        }
                                    } else if (
                                        x[k].fOrigin === 'g' ||
                                        x[k].origin === 1
                                    ) {
                                        for (
                                            $ = document.querySelectorAll(
                                                'link[f-forigin="g"], link[f-origin="1"]'
                                            ),
                                                H = 0;
                                            H < $.length;
                                            H += 1
                                        )
                                            $[H].href.indexOf(x[k].fPath) !==
                                                -1 && (O = !1);
                                        if (O) {
                                            var Z = createTag('link');
                                            Z.setAttribute(
                                                'f-forigin',
                                                x[k].fOrigin
                                            ),
                                                Z.setAttribute(
                                                    'f-origin',
                                                    x[k].origin
                                                ),
                                                (Z.type = 'text/css'),
                                                (Z.rel = 'stylesheet'),
                                                (Z.href = x[k].fPath),
                                                document.body.appendChild(Z);
                                        }
                                    } else if (
                                        x[k].fOrigin === 't' ||
                                        x[k].origin === 2
                                    ) {
                                        for (
                                            $ = document.querySelectorAll(
                                                'script[f-forigin="t"], script[f-origin="2"]'
                                            ),
                                                H = 0;
                                            H < $.length;
                                            H += 1
                                        )
                                            x[k].fPath === $[H].src && (O = !1);
                                        if (O) {
                                            var U = createTag('link');
                                            U.setAttribute(
                                                'f-forigin',
                                                x[k].fOrigin
                                            ),
                                                U.setAttribute(
                                                    'f-origin',
                                                    x[k].origin
                                                ),
                                                U.setAttribute(
                                                    'rel',
                                                    'stylesheet'
                                                ),
                                                U.setAttribute(
                                                    'href',
                                                    x[k].fPath
                                                ),
                                                M.appendChild(U);
                                        }
                                    }
                                    (x[k].helper = d(x[k], M)),
                                        (x[k].cache = {}),
                                        this.fonts.push(x[k]);
                                }
                                I === 0
                                    ? (this.isLoaded = !0)
                                    : setTimeout(
                                          this.checkLoadedFonts.bind(this),
                                          100
                                      );
                            }
                            function c(S) {
                                if (S) {
                                    this.chars || (this.chars = []);
                                    var M,
                                        x = S.length,
                                        k,
                                        R = this.chars.length,
                                        I;
                                    for (M = 0; M < x; M += 1) {
                                        for (k = 0, I = !1; k < R; )
                                            this.chars[k].style ===
                                                S[M].style &&
                                                this.chars[k].fFamily ===
                                                    S[M].fFamily &&
                                                this.chars[k].ch === S[M].ch &&
                                                (I = !0),
                                                (k += 1);
                                        I || (this.chars.push(S[M]), (R += 1));
                                    }
                                }
                            }
                            function m(S, M, x) {
                                for (
                                    var k = 0, R = this.chars.length;
                                    k < R;

                                ) {
                                    if (
                                        this.chars[k].ch === S &&
                                        this.chars[k].style === M &&
                                        this.chars[k].fFamily === x
                                    )
                                        return this.chars[k];
                                    k += 1;
                                }
                                return (
                                    ((typeof S == 'string' &&
                                        S.charCodeAt(0) !== 13) ||
                                        !S) &&
                                        console &&
                                        console.warn &&
                                        !this._warned &&
                                        ((this._warned = !0),
                                        console.warn(
                                            'Missing character from exported characters list: ',
                                            S,
                                            M,
                                            x
                                        )),
                                    t
                                );
                            }
                            function p(S, M, x) {
                                var k = this.getFontByName(M),
                                    R = S;
                                if (!k.cache[R]) {
                                    var I = k.helper;
                                    if (S === ' ') {
                                        var O = I.measureText('|' + S + '|'),
                                            $ = I.measureText('||');
                                        k.cache[R] = (O - $) / 100;
                                    } else k.cache[R] = I.measureText(S) / 100;
                                }
                                return k.cache[R] * x;
                            }
                            function g(S) {
                                for (
                                    var M = 0, x = this.fonts.length;
                                    M < x;

                                ) {
                                    if (this.fonts[M].fName === S)
                                        return this.fonts[M];
                                    M += 1;
                                }
                                return this.fonts[0];
                            }
                            function P(S) {
                                var M = 0,
                                    x = S.charCodeAt(0);
                                if (x >= 55296 && x <= 56319) {
                                    var k = S.charCodeAt(1);
                                    k >= 56320 &&
                                        k <= 57343 &&
                                        (M =
                                            (x - 55296) * 1024 +
                                            k -
                                            56320 +
                                            65536);
                                }
                                return M;
                            }
                            function A(S, M) {
                                var x = S.toString(16) + M.toString(16);
                                return E.indexOf(x) !== -1;
                            }
                            function F(S) {
                                return S === o;
                            }
                            function T(S) {
                                return S === l;
                            }
                            function D(S) {
                                var M = P(S);
                                return M >= f && M <= y;
                            }
                            function L(S) {
                                return D(S.substr(0, 2)) && D(S.substr(2, 2));
                            }
                            function q(S) {
                                return r.indexOf(S) !== -1;
                            }
                            function V(S, M) {
                                var x = P(S.substr(M, 2));
                                if (x !== i) return !1;
                                var k = 0;
                                for (M += 2; k < 5; ) {
                                    if (
                                        ((x = P(S.substr(M, 2))),
                                        x < a || x > n)
                                    )
                                        return !1;
                                    (k += 1), (M += 2);
                                }
                                return P(S.substr(M, 2)) === s;
                            }
                            function j() {
                                this.isLoaded = !0;
                            }
                            var G = function () {
                                (this.fonts = []),
                                    (this.chars = null),
                                    (this.typekitLoaded = 0),
                                    (this.isLoaded = !1),
                                    (this._warned = !1),
                                    (this.initTime = Date.now()),
                                    (this.setIsLoadedBinded =
                                        this.setIsLoaded.bind(this)),
                                    (this.checkLoadedFontsBinded =
                                        this.checkLoadedFonts.bind(this));
                            };
                            (G.isModifier = A),
                                (G.isZeroWidthJoiner = F),
                                (G.isFlagEmoji = L),
                                (G.isRegionalCode = D),
                                (G.isCombinedCharacter = q),
                                (G.isRegionalFlag = V),
                                (G.isVariationSelector = T),
                                (G.BLACK_FLAG_CODE_POINT = i);
                            var B = {
                                addChars: c,
                                addFonts: C,
                                getCharData: m,
                                getFontByName: g,
                                measureText: p,
                                checkLoadedFonts: _,
                                setIsLoaded: j,
                            };
                            return (G.prototype = B), G;
                        })();
                        function SlotManager(e) {
                            this.animationData = e;
                        }
                        SlotManager.prototype.getProp = function (e) {
                            return this.animationData.slots &&
                                this.animationData.slots[e.sid]
                                ? Object.assign(
                                      e,
                                      this.animationData.slots[e.sid].p
                                  )
                                : e;
                        };
                        function slotFactory(e) {
                            return new SlotManager(e);
                        }
                        function RenderableElement() {}
                        RenderableElement.prototype = {
                            initRenderable: function () {
                                (this.isInRange = !1),
                                    (this.hidden = !1),
                                    (this.isTransparent = !1),
                                    (this.renderableComponents = []);
                            },
                            addRenderableComponent: function (t) {
                                this.renderableComponents.indexOf(t) === -1 &&
                                    this.renderableComponents.push(t);
                            },
                            removeRenderableComponent: function (t) {
                                this.renderableComponents.indexOf(t) !== -1 &&
                                    this.renderableComponents.splice(
                                        this.renderableComponents.indexOf(t),
                                        1
                                    );
                            },
                            prepareRenderableFrame: function (t) {
                                this.checkLayerLimits(t);
                            },
                            checkTransparency: function () {
                                this.finalTransform.mProp.o.v <= 0
                                    ? !this.isTransparent &&
                                      this.globalData.renderConfig
                                          .hideOnTransparent &&
                                      ((this.isTransparent = !0), this.hide())
                                    : this.isTransparent &&
                                      ((this.isTransparent = !1), this.show());
                            },
                            checkLayerLimits: function (t) {
                                this.data.ip - this.data.st <= t &&
                                this.data.op - this.data.st > t
                                    ? this.isInRange !== !0 &&
                                      ((this.globalData._mdf = !0),
                                      (this._mdf = !0),
                                      (this.isInRange = !0),
                                      this.show())
                                    : this.isInRange !== !1 &&
                                      ((this.globalData._mdf = !0),
                                      (this.isInRange = !1),
                                      this.hide());
                            },
                            renderRenderable: function () {
                                var t,
                                    r = this.renderableComponents.length;
                                for (t = 0; t < r; t += 1)
                                    this.renderableComponents[t].renderFrame(
                                        this._isFirstFrame
                                    );
                            },
                            sourceRectAtTime: function () {
                                return {
                                    top: 0,
                                    left: 0,
                                    width: 100,
                                    height: 100,
                                };
                            },
                            getLayerSize: function () {
                                return this.data.ty === 5
                                    ? {
                                          w: this.data.textData.width,
                                          h: this.data.textData.height,
                                      }
                                    : {
                                          w: this.data.width,
                                          h: this.data.height,
                                      };
                            },
                        };
                        var getBlendMode = (function () {
                            var e = {
                                0: 'source-over',
                                1: 'multiply',
                                2: 'screen',
                                3: 'overlay',
                                4: 'darken',
                                5: 'lighten',
                                6: 'color-dodge',
                                7: 'color-burn',
                                8: 'hard-light',
                                9: 'soft-light',
                                10: 'difference',
                                11: 'exclusion',
                                12: 'hue',
                                13: 'saturation',
                                14: 'color',
                                15: 'luminosity',
                            };
                            return function (t) {
                                return e[t] || '';
                            };
                        })();
                        function SliderEffect(e, t, r) {
                            this.p = PropertyFactory.getProp(t, e.v, 0, 0, r);
                        }
                        function AngleEffect(e, t, r) {
                            this.p = PropertyFactory.getProp(t, e.v, 0, 0, r);
                        }
                        function ColorEffect(e, t, r) {
                            this.p = PropertyFactory.getProp(t, e.v, 1, 0, r);
                        }
                        function PointEffect(e, t, r) {
                            this.p = PropertyFactory.getProp(t, e.v, 1, 0, r);
                        }
                        function LayerIndexEffect(e, t, r) {
                            this.p = PropertyFactory.getProp(t, e.v, 0, 0, r);
                        }
                        function MaskIndexEffect(e, t, r) {
                            this.p = PropertyFactory.getProp(t, e.v, 0, 0, r);
                        }
                        function CheckboxEffect(e, t, r) {
                            this.p = PropertyFactory.getProp(t, e.v, 0, 0, r);
                        }
                        function NoValueEffect() {
                            this.p = {};
                        }
                        function EffectsManager(e, t) {
                            var r = e.ef || [];
                            this.effectElements = [];
                            var i,
                                s = r.length,
                                a;
                            for (i = 0; i < s; i += 1)
                                (a = new GroupEffect(r[i], t)),
                                    this.effectElements.push(a);
                        }
                        function GroupEffect(e, t) {
                            this.init(e, t);
                        }
                        extendPrototype(
                            [DynamicPropertyContainer],
                            GroupEffect
                        ),
                            (GroupEffect.prototype.getValue =
                                GroupEffect.prototype.iterateDynamicProperties),
                            (GroupEffect.prototype.init = function (e, t) {
                                (this.data = e),
                                    (this.effectElements = []),
                                    this.initDynamicPropertyContainer(t);
                                var r,
                                    i = this.data.ef.length,
                                    s,
                                    a = this.data.ef;
                                for (r = 0; r < i; r += 1) {
                                    switch (((s = null), a[r].ty)) {
                                        case 0:
                                            s = new SliderEffect(a[r], t, this);
                                            break;
                                        case 1:
                                            s = new AngleEffect(a[r], t, this);
                                            break;
                                        case 2:
                                            s = new ColorEffect(a[r], t, this);
                                            break;
                                        case 3:
                                            s = new PointEffect(a[r], t, this);
                                            break;
                                        case 4:
                                        case 7:
                                            s = new CheckboxEffect(
                                                a[r],
                                                t,
                                                this
                                            );
                                            break;
                                        case 10:
                                            s = new LayerIndexEffect(
                                                a[r],
                                                t,
                                                this
                                            );
                                            break;
                                        case 11:
                                            s = new MaskIndexEffect(
                                                a[r],
                                                t,
                                                this
                                            );
                                            break;
                                        case 5:
                                            s = new EffectsManager(a[r], t);
                                            break;
                                        default:
                                            s = new NoValueEffect(a[r]);
                                            break;
                                    }
                                    s && this.effectElements.push(s);
                                }
                            });
                        function BaseElement() {}
                        BaseElement.prototype = {
                            checkMasks: function () {
                                if (!this.data.hasMask) return !1;
                                for (
                                    var t = 0,
                                        r = this.data.masksProperties.length;
                                    t < r;

                                ) {
                                    if (
                                        this.data.masksProperties[t].mode !==
                                            'n' &&
                                        this.data.masksProperties[t].cl !== !1
                                    )
                                        return !0;
                                    t += 1;
                                }
                                return !1;
                            },
                            initExpressions: function () {
                                var t = getExpressionInterfaces();
                                if (t) {
                                    var r = t('layer'),
                                        i = t('effects'),
                                        s = t('shape'),
                                        a = t('text'),
                                        n = t('comp');
                                    (this.layerInterface = r(this)),
                                        this.data.hasMask &&
                                            this.maskManager &&
                                            this.layerInterface.registerMaskInterface(
                                                this.maskManager
                                            );
                                    var l = i.createEffectsInterface(
                                        this,
                                        this.layerInterface
                                    );
                                    this.layerInterface.registerEffectsInterface(
                                        l
                                    ),
                                        this.data.ty === 0 || this.data.xt
                                            ? (this.compInterface = n(this))
                                            : this.data.ty === 4
                                              ? ((this.layerInterface.shapeInterface =
                                                    s(
                                                        this.shapesData,
                                                        this.itemsData,
                                                        this.layerInterface
                                                    )),
                                                (this.layerInterface.content =
                                                    this.layerInterface.shapeInterface))
                                              : this.data.ty === 5 &&
                                                ((this.layerInterface.textInterface =
                                                    a(this)),
                                                (this.layerInterface.text =
                                                    this.layerInterface.textInterface));
                                }
                            },
                            setBlendMode: function () {
                                var t = getBlendMode(this.data.bm),
                                    r = this.baseElement || this.layerElement;
                                r.style['mix-blend-mode'] = t;
                            },
                            initBaseData: function (t, r, i) {
                                (this.globalData = r),
                                    (this.comp = i),
                                    (this.data = t),
                                    (this.layerId = createElementID()),
                                    this.data.sr || (this.data.sr = 1),
                                    (this.effectsManager = new EffectsManager(
                                        this.data,
                                        this,
                                        this.dynamicProperties
                                    ));
                            },
                            getType: function () {
                                return this.type;
                            },
                            sourceRectAtTime: function () {},
                        };
                        function FrameElement() {}
                        FrameElement.prototype = {
                            initFrame: function () {
                                (this._isFirstFrame = !1),
                                    (this.dynamicProperties = []),
                                    (this._mdf = !1);
                            },
                            prepareProperties: function (t, r) {
                                var i,
                                    s = this.dynamicProperties.length;
                                for (i = 0; i < s; i += 1)
                                    (r ||
                                        (this._isParent &&
                                            this.dynamicProperties[i]
                                                .propType === 'transform')) &&
                                        (this.dynamicProperties[i].getValue(),
                                        this.dynamicProperties[i]._mdf &&
                                            ((this.globalData._mdf = !0),
                                            (this._mdf = !0)));
                            },
                            addDynamicProperty: function (t) {
                                this.dynamicProperties.indexOf(t) === -1 &&
                                    this.dynamicProperties.push(t);
                            },
                        };
                        function FootageElement(e, t, r) {
                            this.initFrame(),
                                this.initRenderable(),
                                (this.assetData = t.getAssetData(e.refId)),
                                (this.footageData = t.imageLoader.getAsset(
                                    this.assetData
                                )),
                                this.initBaseData(e, t, r);
                        }
                        (FootageElement.prototype.prepareFrame =
                            function () {}),
                            extendPrototype(
                                [RenderableElement, BaseElement, FrameElement],
                                FootageElement
                            ),
                            (FootageElement.prototype.getBaseElement =
                                function () {
                                    return null;
                                }),
                            (FootageElement.prototype.renderFrame =
                                function () {}),
                            (FootageElement.prototype.destroy = function () {}),
                            (FootageElement.prototype.initExpressions =
                                function () {
                                    var e = getExpressionInterfaces();
                                    if (e) {
                                        var t = e('footage');
                                        this.layerInterface = t(this);
                                    }
                                }),
                            (FootageElement.prototype.getFootageData =
                                function () {
                                    return this.footageData;
                                });
                        function AudioElement(e, t, r) {
                            this.initFrame(),
                                this.initRenderable(),
                                (this.assetData = t.getAssetData(e.refId)),
                                this.initBaseData(e, t, r),
                                (this._isPlaying = !1),
                                (this._canPlay = !1);
                            var i = this.globalData.getAssetsPath(
                                this.assetData
                            );
                            (this.audio =
                                this.globalData.audioController.createAudio(i)),
                                (this._currentTime = 0),
                                this.globalData.audioController.addAudio(this),
                                (this._volumeMultiplier = 1),
                                (this._volume = 1),
                                (this._previousVolume = null),
                                (this.tm = e.tm
                                    ? PropertyFactory.getProp(
                                          this,
                                          e.tm,
                                          0,
                                          t.frameRate,
                                          this
                                      )
                                    : { _placeholder: !0 }),
                                (this.lv = PropertyFactory.getProp(
                                    this,
                                    e.au && e.au.lv ? e.au.lv : { k: [100] },
                                    1,
                                    0.01,
                                    this
                                ));
                        }
                        (AudioElement.prototype.prepareFrame = function (e) {
                            if (
                                (this.prepareRenderableFrame(e, !0),
                                this.prepareProperties(e, !0),
                                this.tm._placeholder)
                            )
                                this._currentTime = e / this.data.sr;
                            else {
                                var t = this.tm.v;
                                this._currentTime = t;
                            }
                            this._volume = this.lv.v[0];
                            var r = this._volume * this._volumeMultiplier;
                            this._previousVolume !== r &&
                                ((this._previousVolume = r),
                                this.audio.volume(r));
                        }),
                            extendPrototype(
                                [RenderableElement, BaseElement, FrameElement],
                                AudioElement
                            ),
                            (AudioElement.prototype.renderFrame = function () {
                                this.isInRange &&
                                    this._canPlay &&
                                    (this._isPlaying
                                        ? (!this.audio.playing() ||
                                              Math.abs(
                                                  this._currentTime /
                                                      this.globalData
                                                          .frameRate -
                                                      this.audio.seek()
                                              ) > 0.1) &&
                                          this.audio.seek(
                                              this._currentTime /
                                                  this.globalData.frameRate
                                          )
                                        : (this.audio.play(),
                                          this.audio.seek(
                                              this._currentTime /
                                                  this.globalData.frameRate
                                          ),
                                          (this._isPlaying = !0)));
                            }),
                            (AudioElement.prototype.show = function () {}),
                            (AudioElement.prototype.hide = function () {
                                this.audio.pause(), (this._isPlaying = !1);
                            }),
                            (AudioElement.prototype.pause = function () {
                                this.audio.pause(),
                                    (this._isPlaying = !1),
                                    (this._canPlay = !1);
                            }),
                            (AudioElement.prototype.resume = function () {
                                this._canPlay = !0;
                            }),
                            (AudioElement.prototype.setRate = function (e) {
                                this.audio.rate(e);
                            }),
                            (AudioElement.prototype.volume = function (e) {
                                (this._volumeMultiplier = e),
                                    (this._previousVolume = e * this._volume),
                                    this.audio.volume(this._previousVolume);
                            }),
                            (AudioElement.prototype.getBaseElement =
                                function () {
                                    return null;
                                }),
                            (AudioElement.prototype.destroy = function () {}),
                            (AudioElement.prototype.sourceRectAtTime =
                                function () {}),
                            (AudioElement.prototype.initExpressions =
                                function () {});
                        function BaseRenderer() {}
                        (BaseRenderer.prototype.checkLayers = function (e) {
                            var t,
                                r = this.layers.length,
                                i;
                            for (
                                this.completeLayers = !0, t = r - 1;
                                t >= 0;
                                t -= 1
                            )
                                this.elements[t] ||
                                    ((i = this.layers[t]),
                                    i.ip - i.st <= e - this.layers[t].st &&
                                        i.op - i.st > e - this.layers[t].st &&
                                        this.buildItem(t)),
                                    (this.completeLayers = this.elements[t]
                                        ? this.completeLayers
                                        : !1);
                            this.checkPendingElements();
                        }),
                            (BaseRenderer.prototype.createItem = function (e) {
                                switch (e.ty) {
                                    case 2:
                                        return this.createImage(e);
                                    case 0:
                                        return this.createComp(e);
                                    case 1:
                                        return this.createSolid(e);
                                    case 3:
                                        return this.createNull(e);
                                    case 4:
                                        return this.createShape(e);
                                    case 5:
                                        return this.createText(e);
                                    case 6:
                                        return this.createAudio(e);
                                    case 13:
                                        return this.createCamera(e);
                                    case 15:
                                        return this.createFootage(e);
                                    default:
                                        return this.createNull(e);
                                }
                            }),
                            (BaseRenderer.prototype.createCamera = function () {
                                throw new Error(
                                    "You're using a 3d camera. Try the html renderer."
                                );
                            }),
                            (BaseRenderer.prototype.createAudio = function (e) {
                                return new AudioElement(
                                    e,
                                    this.globalData,
                                    this
                                );
                            }),
                            (BaseRenderer.prototype.createFootage = function (
                                e
                            ) {
                                return new FootageElement(
                                    e,
                                    this.globalData,
                                    this
                                );
                            }),
                            (BaseRenderer.prototype.buildAllItems =
                                function () {
                                    var e,
                                        t = this.layers.length;
                                    for (e = 0; e < t; e += 1)
                                        this.buildItem(e);
                                    this.checkPendingElements();
                                }),
                            (BaseRenderer.prototype.includeLayers = function (
                                e
                            ) {
                                this.completeLayers = !1;
                                var t,
                                    r = e.length,
                                    i,
                                    s = this.layers.length;
                                for (t = 0; t < r; t += 1)
                                    for (i = 0; i < s; ) {
                                        if (this.layers[i].id === e[t].id) {
                                            this.layers[i] = e[t];
                                            break;
                                        }
                                        i += 1;
                                    }
                            }),
                            (BaseRenderer.prototype.setProjectInterface =
                                function (e) {
                                    this.globalData.projectInterface = e;
                                }),
                            (BaseRenderer.prototype.initItems = function () {
                                this.globalData.progressiveLoad ||
                                    this.buildAllItems();
                            }),
                            (BaseRenderer.prototype.buildElementParenting =
                                function (e, t, r) {
                                    for (
                                        var i = this.elements,
                                            s = this.layers,
                                            a = 0,
                                            n = s.length;
                                        a < n;

                                    )
                                        s[a].ind == t &&
                                            (!i[a] || i[a] === !0
                                                ? (this.buildItem(a),
                                                  this.addPendingElement(e))
                                                : (r.push(i[a]),
                                                  i[a].setAsParent(),
                                                  s[a].parent !== void 0
                                                      ? this.buildElementParenting(
                                                            e,
                                                            s[a].parent,
                                                            r
                                                        )
                                                      : e.setHierarchy(r))),
                                            (a += 1);
                                }),
                            (BaseRenderer.prototype.addPendingElement =
                                function (e) {
                                    this.pendingElements.push(e);
                                }),
                            (BaseRenderer.prototype.searchExtraCompositions =
                                function (e) {
                                    var t,
                                        r = e.length;
                                    for (t = 0; t < r; t += 1)
                                        if (e[t].xt) {
                                            var i = this.createComp(e[t]);
                                            i.initExpressions(),
                                                this.globalData.projectInterface.registerComposition(
                                                    i
                                                );
                                        }
                                }),
                            (BaseRenderer.prototype.getElementById = function (
                                e
                            ) {
                                var t,
                                    r = this.elements.length;
                                for (t = 0; t < r; t += 1)
                                    if (this.elements[t].data.ind === e)
                                        return this.elements[t];
                                return null;
                            }),
                            (BaseRenderer.prototype.getElementByPath =
                                function (e) {
                                    var t = e.shift(),
                                        r;
                                    if (typeof t == 'number')
                                        r = this.elements[t];
                                    else {
                                        var i,
                                            s = this.elements.length;
                                        for (i = 0; i < s; i += 1)
                                            if (
                                                this.elements[i].data.nm === t
                                            ) {
                                                r = this.elements[i];
                                                break;
                                            }
                                    }
                                    return e.length === 0
                                        ? r
                                        : r.getElementByPath(e);
                                }),
                            (BaseRenderer.prototype.setupGlobalData = function (
                                e,
                                t
                            ) {
                                (this.globalData.fontManager =
                                    new FontManager()),
                                    (this.globalData.slotManager =
                                        slotFactory(e)),
                                    this.globalData.fontManager.addChars(
                                        e.chars
                                    ),
                                    this.globalData.fontManager.addFonts(
                                        e.fonts,
                                        t
                                    ),
                                    (this.globalData.getAssetData =
                                        this.animationItem.getAssetData.bind(
                                            this.animationItem
                                        )),
                                    (this.globalData.getAssetsPath =
                                        this.animationItem.getAssetsPath.bind(
                                            this.animationItem
                                        )),
                                    (this.globalData.imageLoader =
                                        this.animationItem.imagePreloader),
                                    (this.globalData.audioController =
                                        this.animationItem.audioController),
                                    (this.globalData.frameId = 0),
                                    (this.globalData.frameRate = e.fr),
                                    (this.globalData.nm = e.nm),
                                    (this.globalData.compSize = {
                                        w: e.w,
                                        h: e.h,
                                    });
                            });
                        var effectTypes = {
                            TRANSFORM_EFFECT: 'transformEFfect',
                        };
                        function TransformElement() {}
                        TransformElement.prototype = {
                            initTransform: function () {
                                var t = new Matrix();
                                (this.finalTransform = {
                                    mProp: this.data.ks
                                        ? TransformPropertyFactory.getTransformProperty(
                                              this,
                                              this.data.ks,
                                              this
                                          )
                                        : { o: 0 },
                                    _matMdf: !1,
                                    _localMatMdf: !1,
                                    _opMdf: !1,
                                    mat: t,
                                    localMat: t,
                                    localOpacity: 1,
                                }),
                                    this.data.ao &&
                                        (this.finalTransform.mProp.autoOriented =
                                            !0),
                                    this.data.ty;
                            },
                            renderTransform: function () {
                                if (
                                    ((this.finalTransform._opMdf =
                                        this.finalTransform.mProp.o._mdf ||
                                        this._isFirstFrame),
                                    (this.finalTransform._matMdf =
                                        this.finalTransform.mProp._mdf ||
                                        this._isFirstFrame),
                                    this.hierarchy)
                                ) {
                                    var t,
                                        r = this.finalTransform.mat,
                                        i = 0,
                                        s = this.hierarchy.length;
                                    if (!this.finalTransform._matMdf)
                                        for (; i < s; ) {
                                            if (
                                                this.hierarchy[i].finalTransform
                                                    .mProp._mdf
                                            ) {
                                                this.finalTransform._matMdf =
                                                    !0;
                                                break;
                                            }
                                            i += 1;
                                        }
                                    if (this.finalTransform._matMdf)
                                        for (
                                            t =
                                                this.finalTransform.mProp.v
                                                    .props,
                                                r.cloneFromProps(t),
                                                i = 0;
                                            i < s;
                                            i += 1
                                        )
                                            r.multiply(
                                                this.hierarchy[i].finalTransform
                                                    .mProp.v
                                            );
                                }
                                this.finalTransform._matMdf &&
                                    (this.finalTransform._localMatMdf =
                                        this.finalTransform._matMdf),
                                    this.finalTransform._opMdf &&
                                        (this.finalTransform.localOpacity =
                                            this.finalTransform.mProp.o.v);
                            },
                            renderLocalTransform: function () {
                                if (this.localTransforms) {
                                    var t = 0,
                                        r = this.localTransforms.length;
                                    if (
                                        ((this.finalTransform._localMatMdf =
                                            this.finalTransform._matMdf),
                                        !this.finalTransform._localMatMdf ||
                                            !this.finalTransform._opMdf)
                                    )
                                        for (; t < r; )
                                            this.localTransforms[t]._mdf &&
                                                (this.finalTransform._localMatMdf =
                                                    !0),
                                                this.localTransforms[t]
                                                    ._opMdf &&
                                                    !this.finalTransform
                                                        ._opMdf &&
                                                    ((this.finalTransform.localOpacity =
                                                        this.finalTransform.mProp.o.v),
                                                    (this.finalTransform._opMdf =
                                                        !0)),
                                                (t += 1);
                                    if (this.finalTransform._localMatMdf) {
                                        var i = this.finalTransform.localMat;
                                        for (
                                            this.localTransforms[0].matrix.clone(
                                                i
                                            ),
                                                t = 1;
                                            t < r;
                                            t += 1
                                        ) {
                                            var s =
                                                this.localTransforms[t].matrix;
                                            i.multiply(s);
                                        }
                                        i.multiply(this.finalTransform.mat);
                                    }
                                    if (this.finalTransform._opMdf) {
                                        var a =
                                            this.finalTransform.localOpacity;
                                        for (t = 0; t < r; t += 1)
                                            a *=
                                                this.localTransforms[t]
                                                    .opacity * 0.01;
                                        this.finalTransform.localOpacity = a;
                                    }
                                }
                            },
                            searchEffectTransforms: function () {
                                if (this.renderableEffectsManager) {
                                    var t =
                                        this.renderableEffectsManager.getEffects(
                                            effectTypes.TRANSFORM_EFFECT
                                        );
                                    if (t.length) {
                                        (this.localTransforms = []),
                                            (this.finalTransform.localMat =
                                                new Matrix());
                                        var r = 0,
                                            i = t.length;
                                        for (r = 0; r < i; r += 1)
                                            this.localTransforms.push(t[r]);
                                    }
                                }
                            },
                            globalToLocal: function (t) {
                                var r = [];
                                r.push(this.finalTransform);
                                for (var i = !0, s = this.comp; i; )
                                    s.finalTransform
                                        ? (s.data.hasMask &&
                                              r.splice(0, 0, s.finalTransform),
                                          (s = s.comp))
                                        : (i = !1);
                                var a,
                                    n = r.length,
                                    l;
                                for (a = 0; a < n; a += 1)
                                    (l = r[a].mat.applyToPointArray(0, 0, 0)),
                                        (t = [t[0] - l[0], t[1] - l[1], 0]);
                                return t;
                            },
                            mHelper: new Matrix(),
                        };
                        function MaskElement(e, t, r) {
                            (this.data = e),
                                (this.element = t),
                                (this.globalData = r),
                                (this.storedData = []),
                                (this.masksProperties =
                                    this.data.masksProperties || []),
                                (this.maskElement = null);
                            var i = this.globalData.defs,
                                s,
                                a = this.masksProperties
                                    ? this.masksProperties.length
                                    : 0;
                            (this.viewData = createSizedArray(a)),
                                (this.solidPath = '');
                            var n,
                                l = this.masksProperties,
                                o = 0,
                                f = [],
                                y,
                                E,
                                u = createElementID(),
                                b,
                                _,
                                d,
                                C,
                                c = 'clipPath',
                                m = 'clip-path';
                            for (s = 0; s < a; s += 1)
                                if (
                                    (((l[s].mode !== 'a' &&
                                        l[s].mode !== 'n') ||
                                        l[s].inv ||
                                        l[s].o.k !== 100 ||
                                        l[s].o.x) &&
                                        ((c = 'mask'), (m = 'mask')),
                                    (l[s].mode === 's' || l[s].mode === 'i') &&
                                    o === 0
                                        ? ((b = createNS('rect')),
                                          b.setAttribute('fill', '#ffffff'),
                                          b.setAttribute(
                                              'width',
                                              this.element.comp.data.w || 0
                                          ),
                                          b.setAttribute(
                                              'height',
                                              this.element.comp.data.h || 0
                                          ),
                                          f.push(b))
                                        : (b = null),
                                    (n = createNS('path')),
                                    l[s].mode === 'n')
                                )
                                    (this.viewData[s] = {
                                        op: PropertyFactory.getProp(
                                            this.element,
                                            l[s].o,
                                            0,
                                            0.01,
                                            this.element
                                        ),
                                        prop: ShapePropertyFactory.getShapeProp(
                                            this.element,
                                            l[s],
                                            3
                                        ),
                                        elem: n,
                                        lastPath: '',
                                    }),
                                        i.appendChild(n);
                                else {
                                    (o += 1),
                                        n.setAttribute(
                                            'fill',
                                            l[s].mode === 's'
                                                ? '#000000'
                                                : '#ffffff'
                                        ),
                                        n.setAttribute('clip-rule', 'nonzero');
                                    var p;
                                    if (
                                        (l[s].x.k !== 0
                                            ? ((c = 'mask'),
                                              (m = 'mask'),
                                              (C = PropertyFactory.getProp(
                                                  this.element,
                                                  l[s].x,
                                                  0,
                                                  null,
                                                  this.element
                                              )),
                                              (p = createElementID()),
                                              (_ = createNS('filter')),
                                              _.setAttribute('id', p),
                                              (d = createNS('feMorphology')),
                                              d.setAttribute(
                                                  'operator',
                                                  'erode'
                                              ),
                                              d.setAttribute(
                                                  'in',
                                                  'SourceGraphic'
                                              ),
                                              d.setAttribute('radius', '0'),
                                              _.appendChild(d),
                                              i.appendChild(_),
                                              n.setAttribute(
                                                  'stroke',
                                                  l[s].mode === 's'
                                                      ? '#000000'
                                                      : '#ffffff'
                                              ))
                                            : ((d = null), (C = null)),
                                        (this.storedData[s] = {
                                            elem: n,
                                            x: C,
                                            expan: d,
                                            lastPath: '',
                                            lastOperator: '',
                                            filterId: p,
                                            lastRadius: 0,
                                        }),
                                        l[s].mode === 'i')
                                    ) {
                                        E = f.length;
                                        var g = createNS('g');
                                        for (y = 0; y < E; y += 1)
                                            g.appendChild(f[y]);
                                        var P = createNS('mask');
                                        P.setAttribute('mask-type', 'alpha'),
                                            P.setAttribute('id', u + '_' + o),
                                            P.appendChild(n),
                                            i.appendChild(P),
                                            g.setAttribute(
                                                'mask',
                                                'url(' +
                                                    getLocationHref() +
                                                    '#' +
                                                    u +
                                                    '_' +
                                                    o +
                                                    ')'
                                            ),
                                            (f.length = 0),
                                            f.push(g);
                                    } else f.push(n);
                                    l[s].inv &&
                                        !this.solidPath &&
                                        (this.solidPath =
                                            this.createLayerSolidPath()),
                                        (this.viewData[s] = {
                                            elem: n,
                                            lastPath: '',
                                            op: PropertyFactory.getProp(
                                                this.element,
                                                l[s].o,
                                                0,
                                                0.01,
                                                this.element
                                            ),
                                            prop: ShapePropertyFactory.getShapeProp(
                                                this.element,
                                                l[s],
                                                3
                                            ),
                                            invRect: b,
                                        }),
                                        this.viewData[s].prop.k ||
                                            this.drawPath(
                                                l[s],
                                                this.viewData[s].prop.v,
                                                this.viewData[s]
                                            );
                                }
                            for (
                                this.maskElement = createNS(c),
                                    a = f.length,
                                    s = 0;
                                s < a;
                                s += 1
                            )
                                this.maskElement.appendChild(f[s]);
                            o > 0 &&
                                (this.maskElement.setAttribute('id', u),
                                this.element.maskedElement.setAttribute(
                                    m,
                                    'url(' + getLocationHref() + '#' + u + ')'
                                ),
                                i.appendChild(this.maskElement)),
                                this.viewData.length &&
                                    this.element.addRenderableComponent(this);
                        }
                        (MaskElement.prototype.getMaskProperty = function (e) {
                            return this.viewData[e].prop;
                        }),
                            (MaskElement.prototype.renderFrame = function (e) {
                                var t = this.element.finalTransform.mat,
                                    r,
                                    i = this.masksProperties.length;
                                for (r = 0; r < i; r += 1)
                                    if (
                                        ((this.viewData[r].prop._mdf || e) &&
                                            this.drawPath(
                                                this.masksProperties[r],
                                                this.viewData[r].prop.v,
                                                this.viewData[r]
                                            ),
                                        (this.viewData[r].op._mdf || e) &&
                                            this.viewData[r].elem.setAttribute(
                                                'fill-opacity',
                                                this.viewData[r].op.v
                                            ),
                                        this.masksProperties[r].mode !== 'n' &&
                                            (this.viewData[r].invRect &&
                                                (this.element.finalTransform
                                                    .mProp._mdf ||
                                                    e) &&
                                                this.viewData[
                                                    r
                                                ].invRect.setAttribute(
                                                    'transform',
                                                    t
                                                        .getInverseMatrix()
                                                        .to2dCSS()
                                                ),
                                            this.storedData[r].x &&
                                                (this.storedData[r].x._mdf ||
                                                    e)))
                                    ) {
                                        var s = this.storedData[r].expan;
                                        this.storedData[r].x.v < 0
                                            ? (this.storedData[r]
                                                  .lastOperator !== 'erode' &&
                                                  ((this.storedData[
                                                      r
                                                  ].lastOperator = 'erode'),
                                                  this.storedData[
                                                      r
                                                  ].elem.setAttribute(
                                                      'filter',
                                                      'url(' +
                                                          getLocationHref() +
                                                          '#' +
                                                          this.storedData[r]
                                                              .filterId +
                                                          ')'
                                                  )),
                                              s.setAttribute(
                                                  'radius',
                                                  -this.storedData[r].x.v
                                              ))
                                            : (this.storedData[r]
                                                  .lastOperator !== 'dilate' &&
                                                  ((this.storedData[
                                                      r
                                                  ].lastOperator = 'dilate'),
                                                  this.storedData[
                                                      r
                                                  ].elem.setAttribute(
                                                      'filter',
                                                      null
                                                  )),
                                              this.storedData[
                                                  r
                                              ].elem.setAttribute(
                                                  'stroke-width',
                                                  this.storedData[r].x.v * 2
                                              ));
                                    }
                            }),
                            (MaskElement.prototype.getMaskelement =
                                function () {
                                    return this.maskElement;
                                }),
                            (MaskElement.prototype.createLayerSolidPath =
                                function () {
                                    var e = 'M0,0 ';
                                    return (
                                        (e +=
                                            ' h' + this.globalData.compSize.w),
                                        (e +=
                                            ' v' + this.globalData.compSize.h),
                                        (e +=
                                            ' h-' + this.globalData.compSize.w),
                                        (e +=
                                            ' v-' +
                                            this.globalData.compSize.h +
                                            ' '),
                                        e
                                    );
                                }),
                            (MaskElement.prototype.drawPath = function (
                                e,
                                t,
                                r
                            ) {
                                var i = ' M' + t.v[0][0] + ',' + t.v[0][1],
                                    s,
                                    a;
                                for (a = t._length, s = 1; s < a; s += 1)
                                    i +=
                                        ' C' +
                                        t.o[s - 1][0] +
                                        ',' +
                                        t.o[s - 1][1] +
                                        ' ' +
                                        t.i[s][0] +
                                        ',' +
                                        t.i[s][1] +
                                        ' ' +
                                        t.v[s][0] +
                                        ',' +
                                        t.v[s][1];
                                if (
                                    (t.c &&
                                        a > 1 &&
                                        (i +=
                                            ' C' +
                                            t.o[s - 1][0] +
                                            ',' +
                                            t.o[s - 1][1] +
                                            ' ' +
                                            t.i[0][0] +
                                            ',' +
                                            t.i[0][1] +
                                            ' ' +
                                            t.v[0][0] +
                                            ',' +
                                            t.v[0][1]),
                                    r.lastPath !== i)
                                ) {
                                    var n = '';
                                    r.elem &&
                                        (t.c &&
                                            (n = e.inv
                                                ? this.solidPath + i
                                                : i),
                                        r.elem.setAttribute('d', n)),
                                        (r.lastPath = i);
                                }
                            }),
                            (MaskElement.prototype.destroy = function () {
                                (this.element = null),
                                    (this.globalData = null),
                                    (this.maskElement = null),
                                    (this.data = null),
                                    (this.masksProperties = null);
                            });
                        var filtersFactory = (function () {
                                var e = {};
                                (e.createFilter = t),
                                    (e.createAlphaToLuminanceFilter = r);
                                function t(i, s) {
                                    var a = createNS('filter');
                                    return (
                                        a.setAttribute('id', i),
                                        s !== !0 &&
                                            (a.setAttribute(
                                                'filterUnits',
                                                'objectBoundingBox'
                                            ),
                                            a.setAttribute('x', '0%'),
                                            a.setAttribute('y', '0%'),
                                            a.setAttribute('width', '100%'),
                                            a.setAttribute('height', '100%')),
                                        a
                                    );
                                }
                                function r() {
                                    var i = createNS('feColorMatrix');
                                    return (
                                        i.setAttribute('type', 'matrix'),
                                        i.setAttribute(
                                            'color-interpolation-filters',
                                            'sRGB'
                                        ),
                                        i.setAttribute(
                                            'values',
                                            '0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1'
                                        ),
                                        i
                                    );
                                }
                                return e;
                            })(),
                            featureSupport = (function () {
                                var e = {
                                    maskType: !0,
                                    svgLumaHidden: !0,
                                    offscreenCanvas:
                                        typeof OffscreenCanvas < 'u',
                                };
                                return (
                                    (/MSIE 10/i.test(navigator.userAgent) ||
                                        /MSIE 9/i.test(navigator.userAgent) ||
                                        /rv:11.0/i.test(navigator.userAgent) ||
                                        /Edge\/\d./i.test(
                                            navigator.userAgent
                                        )) &&
                                        (e.maskType = !1),
                                    /firefox/i.test(navigator.userAgent) &&
                                        (e.svgLumaHidden = !1),
                                    e
                                );
                            })(),
                            registeredEffects$1 = {},
                            idPrefix = 'filter_result_';
                        function SVGEffects(e) {
                            var t,
                                r = 'SourceGraphic',
                                i = e.data.ef ? e.data.ef.length : 0,
                                s = createElementID(),
                                a = filtersFactory.createFilter(s, !0),
                                n = 0;
                            this.filters = [];
                            var l;
                            for (t = 0; t < i; t += 1) {
                                l = null;
                                var o = e.data.ef[t].ty;
                                if (registeredEffects$1[o]) {
                                    var f = registeredEffects$1[o].effect;
                                    (l = new f(
                                        a,
                                        e.effectsManager.effectElements[t],
                                        e,
                                        idPrefix + n,
                                        r
                                    )),
                                        (r = idPrefix + n),
                                        registeredEffects$1[o].countsAsEffect &&
                                            (n += 1);
                                }
                                l && this.filters.push(l);
                            }
                            n &&
                                (e.globalData.defs.appendChild(a),
                                e.layerElement.setAttribute(
                                    'filter',
                                    'url(' + getLocationHref() + '#' + s + ')'
                                )),
                                this.filters.length &&
                                    e.addRenderableComponent(this);
                        }
                        (SVGEffects.prototype.renderFrame = function (e) {
                            var t,
                                r = this.filters.length;
                            for (t = 0; t < r; t += 1)
                                this.filters[t].renderFrame(e);
                        }),
                            (SVGEffects.prototype.getEffects = function (e) {
                                var t,
                                    r = this.filters.length,
                                    i = [];
                                for (t = 0; t < r; t += 1)
                                    this.filters[t].type === e &&
                                        i.push(this.filters[t]);
                                return i;
                            });
                        function registerEffect$1(e, t, r) {
                            registeredEffects$1[e] = {
                                effect: t,
                                countsAsEffect: r,
                            };
                        }
                        function SVGBaseElement() {}
                        SVGBaseElement.prototype = {
                            initRendererElement: function () {
                                this.layerElement = createNS('g');
                            },
                            createContainerElements: function () {
                                (this.matteElement = createNS('g')),
                                    (this.transformedElement =
                                        this.layerElement),
                                    (this.maskedElement = this.layerElement),
                                    (this._sizeChanged = !1);
                                var t = null;
                                if (this.data.td) {
                                    this.matteMasks = {};
                                    var r = createNS('g');
                                    r.setAttribute('id', this.layerId),
                                        r.appendChild(this.layerElement),
                                        (t = r),
                                        this.globalData.defs.appendChild(r);
                                } else
                                    this.data.tt
                                        ? (this.matteElement.appendChild(
                                              this.layerElement
                                          ),
                                          (t = this.matteElement),
                                          (this.baseElement =
                                              this.matteElement))
                                        : (this.baseElement =
                                              this.layerElement);
                                if (
                                    (this.data.ln &&
                                        this.layerElement.setAttribute(
                                            'id',
                                            this.data.ln
                                        ),
                                    this.data.cl &&
                                        this.layerElement.setAttribute(
                                            'class',
                                            this.data.cl
                                        ),
                                    this.data.ty === 0 && !this.data.hd)
                                ) {
                                    var i = createNS('clipPath'),
                                        s = createNS('path');
                                    s.setAttribute(
                                        'd',
                                        'M0,0 L' +
                                            this.data.w +
                                            ',0 L' +
                                            this.data.w +
                                            ',' +
                                            this.data.h +
                                            ' L0,' +
                                            this.data.h +
                                            'z'
                                    );
                                    var a = createElementID();
                                    if (
                                        (i.setAttribute('id', a),
                                        i.appendChild(s),
                                        this.globalData.defs.appendChild(i),
                                        this.checkMasks())
                                    ) {
                                        var n = createNS('g');
                                        n.setAttribute(
                                            'clip-path',
                                            'url(' +
                                                getLocationHref() +
                                                '#' +
                                                a +
                                                ')'
                                        ),
                                            n.appendChild(this.layerElement),
                                            (this.transformedElement = n),
                                            t
                                                ? t.appendChild(
                                                      this.transformedElement
                                                  )
                                                : (this.baseElement =
                                                      this.transformedElement);
                                    } else
                                        this.layerElement.setAttribute(
                                            'clip-path',
                                            'url(' +
                                                getLocationHref() +
                                                '#' +
                                                a +
                                                ')'
                                        );
                                }
                                this.data.bm !== 0 && this.setBlendMode();
                            },
                            renderElement: function () {
                                this.finalTransform._localMatMdf &&
                                    this.transformedElement.setAttribute(
                                        'transform',
                                        this.finalTransform.localMat.to2dCSS()
                                    ),
                                    this.finalTransform._opMdf &&
                                        this.transformedElement.setAttribute(
                                            'opacity',
                                            this.finalTransform.localOpacity
                                        );
                            },
                            destroyBaseElement: function () {
                                (this.layerElement = null),
                                    (this.matteElement = null),
                                    this.maskManager.destroy();
                            },
                            getBaseElement: function () {
                                return this.data.hd ? null : this.baseElement;
                            },
                            createRenderableComponents: function () {
                                (this.maskManager = new MaskElement(
                                    this.data,
                                    this,
                                    this.globalData
                                )),
                                    (this.renderableEffectsManager =
                                        new SVGEffects(this)),
                                    this.searchEffectTransforms();
                            },
                            getMatte: function (t) {
                                if (
                                    (this.matteMasks || (this.matteMasks = {}),
                                    !this.matteMasks[t])
                                ) {
                                    var r = this.layerId + '_' + t,
                                        i,
                                        s,
                                        a,
                                        n;
                                    if (t === 1 || t === 3) {
                                        var l = createNS('mask');
                                        l.setAttribute('id', r),
                                            l.setAttribute(
                                                'mask-type',
                                                t === 3 ? 'luminance' : 'alpha'
                                            ),
                                            (a = createNS('use')),
                                            a.setAttributeNS(
                                                'http://www.w3.org/1999/xlink',
                                                'href',
                                                '#' + this.layerId
                                            ),
                                            l.appendChild(a),
                                            this.globalData.defs.appendChild(l),
                                            !featureSupport.maskType &&
                                                t === 1 &&
                                                (l.setAttribute(
                                                    'mask-type',
                                                    'luminance'
                                                ),
                                                (i = createElementID()),
                                                (s =
                                                    filtersFactory.createFilter(
                                                        i
                                                    )),
                                                this.globalData.defs.appendChild(
                                                    s
                                                ),
                                                s.appendChild(
                                                    filtersFactory.createAlphaToLuminanceFilter()
                                                ),
                                                (n = createNS('g')),
                                                n.appendChild(a),
                                                l.appendChild(n),
                                                n.setAttribute(
                                                    'filter',
                                                    'url(' +
                                                        getLocationHref() +
                                                        '#' +
                                                        i +
                                                        ')'
                                                ));
                                    } else if (t === 2) {
                                        var o = createNS('mask');
                                        o.setAttribute('id', r),
                                            o.setAttribute(
                                                'mask-type',
                                                'alpha'
                                            );
                                        var f = createNS('g');
                                        o.appendChild(f),
                                            (i = createElementID()),
                                            (s =
                                                filtersFactory.createFilter(i));
                                        var y = createNS('feComponentTransfer');
                                        y.setAttribute('in', 'SourceGraphic'),
                                            s.appendChild(y);
                                        var E = createNS('feFuncA');
                                        E.setAttribute('type', 'table'),
                                            E.setAttribute(
                                                'tableValues',
                                                '1.0 0.0'
                                            ),
                                            y.appendChild(E),
                                            this.globalData.defs.appendChild(s);
                                        var u = createNS('rect');
                                        u.setAttribute(
                                            'width',
                                            this.comp.data.w
                                        ),
                                            u.setAttribute(
                                                'height',
                                                this.comp.data.h
                                            ),
                                            u.setAttribute('x', '0'),
                                            u.setAttribute('y', '0'),
                                            u.setAttribute('fill', '#ffffff'),
                                            u.setAttribute('opacity', '0'),
                                            f.setAttribute(
                                                'filter',
                                                'url(' +
                                                    getLocationHref() +
                                                    '#' +
                                                    i +
                                                    ')'
                                            ),
                                            f.appendChild(u),
                                            (a = createNS('use')),
                                            a.setAttributeNS(
                                                'http://www.w3.org/1999/xlink',
                                                'href',
                                                '#' + this.layerId
                                            ),
                                            f.appendChild(a),
                                            featureSupport.maskType ||
                                                (o.setAttribute(
                                                    'mask-type',
                                                    'luminance'
                                                ),
                                                s.appendChild(
                                                    filtersFactory.createAlphaToLuminanceFilter()
                                                ),
                                                (n = createNS('g')),
                                                f.appendChild(u),
                                                n.appendChild(
                                                    this.layerElement
                                                ),
                                                f.appendChild(n)),
                                            this.globalData.defs.appendChild(o);
                                    }
                                    this.matteMasks[t] = r;
                                }
                                return this.matteMasks[t];
                            },
                            setMatte: function (t) {
                                this.matteElement &&
                                    this.matteElement.setAttribute(
                                        'mask',
                                        'url(' +
                                            getLocationHref() +
                                            '#' +
                                            t +
                                            ')'
                                    );
                            },
                        };
                        function HierarchyElement() {}
                        HierarchyElement.prototype = {
                            initHierarchy: function () {
                                (this.hierarchy = []),
                                    (this._isParent = !1),
                                    this.checkParenting();
                            },
                            setHierarchy: function (t) {
                                this.hierarchy = t;
                            },
                            setAsParent: function () {
                                this._isParent = !0;
                            },
                            checkParenting: function () {
                                this.data.parent !== void 0 &&
                                    this.comp.buildElementParenting(
                                        this,
                                        this.data.parent,
                                        []
                                    );
                            },
                        };
                        function RenderableDOMElement() {}
                        (function () {
                            var e = {
                                initElement: function (r, i, s) {
                                    this.initFrame(),
                                        this.initBaseData(r, i, s),
                                        this.initTransform(r, i, s),
                                        this.initHierarchy(),
                                        this.initRenderable(),
                                        this.initRendererElement(),
                                        this.createContainerElements(),
                                        this.createRenderableComponents(),
                                        this.createContent(),
                                        this.hide();
                                },
                                hide: function () {
                                    if (
                                        !this.hidden &&
                                        (!this.isInRange || this.isTransparent)
                                    ) {
                                        var r =
                                            this.baseElement ||
                                            this.layerElement;
                                        (r.style.display = 'none'),
                                            (this.hidden = !0);
                                    }
                                },
                                show: function () {
                                    if (this.isInRange && !this.isTransparent) {
                                        if (!this.data.hd) {
                                            var r =
                                                this.baseElement ||
                                                this.layerElement;
                                            r.style.display = 'block';
                                        }
                                        (this.hidden = !1),
                                            (this._isFirstFrame = !0);
                                    }
                                },
                                renderFrame: function () {
                                    this.data.hd ||
                                        this.hidden ||
                                        (this.renderTransform(),
                                        this.renderRenderable(),
                                        this.renderLocalTransform(),
                                        this.renderElement(),
                                        this.renderInnerContent(),
                                        this._isFirstFrame &&
                                            (this._isFirstFrame = !1));
                                },
                                renderInnerContent: function () {},
                                prepareFrame: function (r) {
                                    (this._mdf = !1),
                                        this.prepareRenderableFrame(r),
                                        this.prepareProperties(
                                            r,
                                            this.isInRange
                                        ),
                                        this.checkTransparency();
                                },
                                destroy: function () {
                                    (this.innerElem = null),
                                        this.destroyBaseElement();
                                },
                            };
                            extendPrototype(
                                [RenderableElement, createProxyFunction(e)],
                                RenderableDOMElement
                            );
                        })();
                        function IImageElement(e, t, r) {
                            (this.assetData = t.getAssetData(e.refId)),
                                this.assetData &&
                                    this.assetData.sid &&
                                    (this.assetData = t.slotManager.getProp(
                                        this.assetData
                                    )),
                                this.initElement(e, t, r),
                                (this.sourceRect = {
                                    top: 0,
                                    left: 0,
                                    width: this.assetData.w,
                                    height: this.assetData.h,
                                });
                        }
                        extendPrototype(
                            [
                                BaseElement,
                                TransformElement,
                                SVGBaseElement,
                                HierarchyElement,
                                FrameElement,
                                RenderableDOMElement,
                            ],
                            IImageElement
                        ),
                            (IImageElement.prototype.createContent =
                                function () {
                                    var e = this.globalData.getAssetsPath(
                                        this.assetData
                                    );
                                    (this.innerElem = createNS('image')),
                                        this.innerElem.setAttribute(
                                            'width',
                                            this.assetData.w + 'px'
                                        ),
                                        this.innerElem.setAttribute(
                                            'height',
                                            this.assetData.h + 'px'
                                        ),
                                        this.innerElem.setAttribute(
                                            'preserveAspectRatio',
                                            this.assetData.pr ||
                                                this.globalData.renderConfig
                                                    .imagePreserveAspectRatio
                                        ),
                                        this.innerElem.setAttributeNS(
                                            'http://www.w3.org/1999/xlink',
                                            'href',
                                            e
                                        ),
                                        this.layerElement.appendChild(
                                            this.innerElem
                                        );
                                }),
                            (IImageElement.prototype.sourceRectAtTime =
                                function () {
                                    return this.sourceRect;
                                });
                        function ProcessedElement(e, t) {
                            (this.elem = e), (this.pos = t);
                        }
                        function IShapeElement() {}
                        IShapeElement.prototype = {
                            addShapeToModifiers: function (t) {
                                var r,
                                    i = this.shapeModifiers.length;
                                for (r = 0; r < i; r += 1)
                                    this.shapeModifiers[r].addShape(t);
                            },
                            isShapeInAnimatedModifiers: function (t) {
                                for (
                                    var r = 0, i = this.shapeModifiers.length;
                                    r < i;

                                )
                                    if (
                                        this.shapeModifiers[
                                            r
                                        ].isAnimatedWithShape(t)
                                    )
                                        return !0;
                                return !1;
                            },
                            renderModifiers: function () {
                                if (this.shapeModifiers.length) {
                                    var t,
                                        r = this.shapes.length;
                                    for (t = 0; t < r; t += 1)
                                        this.shapes[t].sh.reset();
                                    r = this.shapeModifiers.length;
                                    var i;
                                    for (
                                        t = r - 1;
                                        t >= 0 &&
                                        ((i = this.shapeModifiers[
                                            t
                                        ].processShapes(this._isFirstFrame)),
                                        !i);
                                        t -= 1
                                    );
                                }
                            },
                            searchProcessedElement: function (t) {
                                for (
                                    var r = this.processedElements,
                                        i = 0,
                                        s = r.length;
                                    i < s;

                                ) {
                                    if (r[i].elem === t) return r[i].pos;
                                    i += 1;
                                }
                                return 0;
                            },
                            addProcessedElement: function (t, r) {
                                for (
                                    var i = this.processedElements,
                                        s = i.length;
                                    s;

                                )
                                    if (((s -= 1), i[s].elem === t)) {
                                        i[s].pos = r;
                                        return;
                                    }
                                i.push(new ProcessedElement(t, r));
                            },
                            prepareFrame: function (t) {
                                this.prepareRenderableFrame(t),
                                    this.prepareProperties(t, this.isInRange);
                            },
                        };
                        var lineCapEnum = {
                                1: 'butt',
                                2: 'round',
                                3: 'square',
                            },
                            lineJoinEnum = {
                                1: 'miter',
                                2: 'round',
                                3: 'bevel',
                            };
                        function SVGShapeData(e, t, r) {
                            (this.caches = []),
                                (this.styles = []),
                                (this.transformers = e),
                                (this.lStr = ''),
                                (this.sh = r),
                                (this.lvl = t),
                                (this._isAnimated = !!r.k);
                            for (var i = 0, s = e.length; i < s; ) {
                                if (e[i].mProps.dynamicProperties.length) {
                                    this._isAnimated = !0;
                                    break;
                                }
                                i += 1;
                            }
                        }
                        SVGShapeData.prototype.setAsAnimated = function () {
                            this._isAnimated = !0;
                        };
                        function SVGStyleData(e, t) {
                            (this.data = e),
                                (this.type = e.ty),
                                (this.d = ''),
                                (this.lvl = t),
                                (this._mdf = !1),
                                (this.closed = e.hd === !0),
                                (this.pElem = createNS('path')),
                                (this.msElem = null);
                        }
                        SVGStyleData.prototype.reset = function () {
                            (this.d = ''), (this._mdf = !1);
                        };
                        function DashProperty(e, t, r, i) {
                            (this.elem = e),
                                (this.frameId = -1),
                                (this.dataProps = createSizedArray(t.length)),
                                (this.renderer = r),
                                (this.k = !1),
                                (this.dashStr = ''),
                                (this.dashArray = createTypedArray(
                                    'float32',
                                    t.length ? t.length - 1 : 0
                                )),
                                (this.dashoffset = createTypedArray(
                                    'float32',
                                    1
                                )),
                                this.initDynamicPropertyContainer(i);
                            var s,
                                a = t.length || 0,
                                n;
                            for (s = 0; s < a; s += 1)
                                (n = PropertyFactory.getProp(
                                    e,
                                    t[s].v,
                                    0,
                                    0,
                                    this
                                )),
                                    (this.k = n.k || this.k),
                                    (this.dataProps[s] = { n: t[s].n, p: n });
                            this.k || this.getValue(!0),
                                (this._isAnimated = this.k);
                        }
                        (DashProperty.prototype.getValue = function (e) {
                            if (
                                !(
                                    this.elem.globalData.frameId ===
                                        this.frameId && !e
                                ) &&
                                ((this.frameId = this.elem.globalData.frameId),
                                this.iterateDynamicProperties(),
                                (this._mdf = this._mdf || e),
                                this._mdf)
                            ) {
                                var t = 0,
                                    r = this.dataProps.length;
                                for (
                                    this.renderer === 'svg' &&
                                        (this.dashStr = ''),
                                        t = 0;
                                    t < r;
                                    t += 1
                                )
                                    this.dataProps[t].n !== 'o'
                                        ? this.renderer === 'svg'
                                            ? (this.dashStr +=
                                                  ' ' + this.dataProps[t].p.v)
                                            : (this.dashArray[t] =
                                                  this.dataProps[t].p.v)
                                        : (this.dashoffset[0] =
                                              this.dataProps[t].p.v);
                            }
                        }),
                            extendPrototype(
                                [DynamicPropertyContainer],
                                DashProperty
                            );
                        function SVGStrokeStyleData(e, t, r) {
                            this.initDynamicPropertyContainer(e),
                                (this.getValue = this.iterateDynamicProperties),
                                (this.o = PropertyFactory.getProp(
                                    e,
                                    t.o,
                                    0,
                                    0.01,
                                    this
                                )),
                                (this.w = PropertyFactory.getProp(
                                    e,
                                    t.w,
                                    0,
                                    null,
                                    this
                                )),
                                (this.d = new DashProperty(
                                    e,
                                    t.d || {},
                                    'svg',
                                    this
                                )),
                                (this.c = PropertyFactory.getProp(
                                    e,
                                    t.c,
                                    1,
                                    255,
                                    this
                                )),
                                (this.style = r),
                                (this._isAnimated = !!this._isAnimated);
                        }
                        extendPrototype(
                            [DynamicPropertyContainer],
                            SVGStrokeStyleData
                        );
                        function SVGFillStyleData(e, t, r) {
                            this.initDynamicPropertyContainer(e),
                                (this.getValue = this.iterateDynamicProperties),
                                (this.o = PropertyFactory.getProp(
                                    e,
                                    t.o,
                                    0,
                                    0.01,
                                    this
                                )),
                                (this.c = PropertyFactory.getProp(
                                    e,
                                    t.c,
                                    1,
                                    255,
                                    this
                                )),
                                (this.style = r);
                        }
                        extendPrototype(
                            [DynamicPropertyContainer],
                            SVGFillStyleData
                        );
                        function SVGNoStyleData(e, t, r) {
                            this.initDynamicPropertyContainer(e),
                                (this.getValue = this.iterateDynamicProperties),
                                (this.style = r);
                        }
                        extendPrototype(
                            [DynamicPropertyContainer],
                            SVGNoStyleData
                        );
                        function GradientProperty(e, t, r) {
                            (this.data = t),
                                (this.c = createTypedArray('uint8c', t.p * 4));
                            var i = t.k.k[0].s
                                ? t.k.k[0].s.length - t.p * 4
                                : t.k.k.length - t.p * 4;
                            (this.o = createTypedArray('float32', i)),
                                (this._cmdf = !1),
                                (this._omdf = !1),
                                (this._collapsable = this.checkCollapsable()),
                                (this._hasOpacity = i),
                                this.initDynamicPropertyContainer(r),
                                (this.prop = PropertyFactory.getProp(
                                    e,
                                    t.k,
                                    1,
                                    null,
                                    this
                                )),
                                (this.k = this.prop.k),
                                this.getValue(!0);
                        }
                        (GradientProperty.prototype.comparePoints = function (
                            e,
                            t
                        ) {
                            for (var r = 0, i = this.o.length / 2, s; r < i; ) {
                                if (
                                    ((s = Math.abs(
                                        e[r * 4] - e[t * 4 + r * 2]
                                    )),
                                    s > 0.01)
                                )
                                    return !1;
                                r += 1;
                            }
                            return !0;
                        }),
                            (GradientProperty.prototype.checkCollapsable =
                                function () {
                                    if (this.o.length / 2 !== this.c.length / 4)
                                        return !1;
                                    if (this.data.k.k[0].s)
                                        for (
                                            var e = 0, t = this.data.k.k.length;
                                            e < t;

                                        ) {
                                            if (
                                                !this.comparePoints(
                                                    this.data.k.k[e].s,
                                                    this.data.p
                                                )
                                            )
                                                return !1;
                                            e += 1;
                                        }
                                    else if (
                                        !this.comparePoints(
                                            this.data.k.k,
                                            this.data.p
                                        )
                                    )
                                        return !1;
                                    return !0;
                                }),
                            (GradientProperty.prototype.getValue = function (
                                e
                            ) {
                                if (
                                    (this.prop.getValue(),
                                    (this._mdf = !1),
                                    (this._cmdf = !1),
                                    (this._omdf = !1),
                                    this.prop._mdf || e)
                                ) {
                                    var t,
                                        r = this.data.p * 4,
                                        i,
                                        s;
                                    for (t = 0; t < r; t += 1)
                                        (i = t % 4 === 0 ? 100 : 255),
                                            (s = Math.round(
                                                this.prop.v[t] * i
                                            )),
                                            this.c[t] !== s &&
                                                ((this.c[t] = s),
                                                (this._cmdf = !e));
                                    if (this.o.length)
                                        for (
                                            r = this.prop.v.length,
                                                t = this.data.p * 4;
                                            t < r;
                                            t += 1
                                        )
                                            (i = t % 2 === 0 ? 100 : 1),
                                                (s =
                                                    t % 2 === 0
                                                        ? Math.round(
                                                              this.prop.v[t] *
                                                                  100
                                                          )
                                                        : this.prop.v[t]),
                                                this.o[t - this.data.p * 4] !==
                                                    s &&
                                                    ((this.o[
                                                        t - this.data.p * 4
                                                    ] = s),
                                                    (this._omdf = !e));
                                    this._mdf = !e;
                                }
                            }),
                            extendPrototype(
                                [DynamicPropertyContainer],
                                GradientProperty
                            );
                        function SVGGradientFillStyleData(e, t, r) {
                            this.initDynamicPropertyContainer(e),
                                (this.getValue = this.iterateDynamicProperties),
                                this.initGradientData(e, t, r);
                        }
                        (SVGGradientFillStyleData.prototype.initGradientData =
                            function (e, t, r) {
                                (this.o = PropertyFactory.getProp(
                                    e,
                                    t.o,
                                    0,
                                    0.01,
                                    this
                                )),
                                    (this.s = PropertyFactory.getProp(
                                        e,
                                        t.s,
                                        1,
                                        null,
                                        this
                                    )),
                                    (this.e = PropertyFactory.getProp(
                                        e,
                                        t.e,
                                        1,
                                        null,
                                        this
                                    )),
                                    (this.h = PropertyFactory.getProp(
                                        e,
                                        t.h || { k: 0 },
                                        0,
                                        0.01,
                                        this
                                    )),
                                    (this.a = PropertyFactory.getProp(
                                        e,
                                        t.a || { k: 0 },
                                        0,
                                        degToRads,
                                        this
                                    )),
                                    (this.g = new GradientProperty(
                                        e,
                                        t.g,
                                        this
                                    )),
                                    (this.style = r),
                                    (this.stops = []),
                                    this.setGradientData(r.pElem, t),
                                    this.setGradientOpacity(t, r),
                                    (this._isAnimated = !!this._isAnimated);
                            }),
                            (SVGGradientFillStyleData.prototype.setGradientData =
                                function (e, t) {
                                    var r = createElementID(),
                                        i = createNS(
                                            t.t === 1
                                                ? 'linearGradient'
                                                : 'radialGradient'
                                        );
                                    i.setAttribute('id', r),
                                        i.setAttribute('spreadMethod', 'pad'),
                                        i.setAttribute(
                                            'gradientUnits',
                                            'userSpaceOnUse'
                                        );
                                    var s = [],
                                        a,
                                        n,
                                        l;
                                    for (l = t.g.p * 4, n = 0; n < l; n += 4)
                                        (a = createNS('stop')),
                                            i.appendChild(a),
                                            s.push(a);
                                    e.setAttribute(
                                        t.ty === 'gf' ? 'fill' : 'stroke',
                                        'url(' +
                                            getLocationHref() +
                                            '#' +
                                            r +
                                            ')'
                                    ),
                                        (this.gf = i),
                                        (this.cst = s);
                                }),
                            (SVGGradientFillStyleData.prototype.setGradientOpacity =
                                function (e, t) {
                                    if (
                                        this.g._hasOpacity &&
                                        !this.g._collapsable
                                    ) {
                                        var r,
                                            i,
                                            s,
                                            a = createNS('mask'),
                                            n = createNS('path');
                                        a.appendChild(n);
                                        var l = createElementID(),
                                            o = createElementID();
                                        a.setAttribute('id', o);
                                        var f = createNS(
                                            e.t === 1
                                                ? 'linearGradient'
                                                : 'radialGradient'
                                        );
                                        f.setAttribute('id', l),
                                            f.setAttribute(
                                                'spreadMethod',
                                                'pad'
                                            ),
                                            f.setAttribute(
                                                'gradientUnits',
                                                'userSpaceOnUse'
                                            ),
                                            (s = e.g.k.k[0].s
                                                ? e.g.k.k[0].s.length
                                                : e.g.k.k.length);
                                        var y = this.stops;
                                        for (i = e.g.p * 4; i < s; i += 2)
                                            (r = createNS('stop')),
                                                r.setAttribute(
                                                    'stop-color',
                                                    'rgb(255,255,255)'
                                                ),
                                                f.appendChild(r),
                                                y.push(r);
                                        n.setAttribute(
                                            e.ty === 'gf' ? 'fill' : 'stroke',
                                            'url(' +
                                                getLocationHref() +
                                                '#' +
                                                l +
                                                ')'
                                        ),
                                            e.ty === 'gs' &&
                                                (n.setAttribute(
                                                    'stroke-linecap',
                                                    lineCapEnum[e.lc || 2]
                                                ),
                                                n.setAttribute(
                                                    'stroke-linejoin',
                                                    lineJoinEnum[e.lj || 2]
                                                ),
                                                e.lj === 1 &&
                                                    n.setAttribute(
                                                        'stroke-miterlimit',
                                                        e.ml
                                                    )),
                                            (this.of = f),
                                            (this.ms = a),
                                            (this.ost = y),
                                            (this.maskId = o),
                                            (t.msElem = n);
                                    }
                                }),
                            extendPrototype(
                                [DynamicPropertyContainer],
                                SVGGradientFillStyleData
                            );
                        function SVGGradientStrokeStyleData(e, t, r) {
                            this.initDynamicPropertyContainer(e),
                                (this.getValue = this.iterateDynamicProperties),
                                (this.w = PropertyFactory.getProp(
                                    e,
                                    t.w,
                                    0,
                                    null,
                                    this
                                )),
                                (this.d = new DashProperty(
                                    e,
                                    t.d || {},
                                    'svg',
                                    this
                                )),
                                this.initGradientData(e, t, r),
                                (this._isAnimated = !!this._isAnimated);
                        }
                        extendPrototype(
                            [
                                SVGGradientFillStyleData,
                                DynamicPropertyContainer,
                            ],
                            SVGGradientStrokeStyleData
                        );
                        function ShapeGroupData() {
                            (this.it = []),
                                (this.prevViewData = []),
                                (this.gr = createNS('g'));
                        }
                        function SVGTransformData(e, t, r) {
                            (this.transform = {
                                mProps: e,
                                op: t,
                                container: r,
                            }),
                                (this.elements = []),
                                (this._isAnimated =
                                    this.transform.mProps.dynamicProperties
                                        .length ||
                                    this.transform.op.effectsSequence.length);
                        }
                        var buildShapeString = function (t, r, i, s) {
                                if (r === 0) return '';
                                var a = t.o,
                                    n = t.i,
                                    l = t.v,
                                    o,
                                    f =
                                        ' M' +
                                        s.applyToPointStringified(
                                            l[0][0],
                                            l[0][1]
                                        );
                                for (o = 1; o < r; o += 1)
                                    f +=
                                        ' C' +
                                        s.applyToPointStringified(
                                            a[o - 1][0],
                                            a[o - 1][1]
                                        ) +
                                        ' ' +
                                        s.applyToPointStringified(
                                            n[o][0],
                                            n[o][1]
                                        ) +
                                        ' ' +
                                        s.applyToPointStringified(
                                            l[o][0],
                                            l[o][1]
                                        );
                                return (
                                    i &&
                                        r &&
                                        ((f +=
                                            ' C' +
                                            s.applyToPointStringified(
                                                a[o - 1][0],
                                                a[o - 1][1]
                                            ) +
                                            ' ' +
                                            s.applyToPointStringified(
                                                n[0][0],
                                                n[0][1]
                                            ) +
                                            ' ' +
                                            s.applyToPointStringified(
                                                l[0][0],
                                                l[0][1]
                                            )),
                                        (f += 'z')),
                                    f
                                );
                            },
                            SVGElementsRenderer = (function () {
                                var e = new Matrix(),
                                    t = new Matrix(),
                                    r = { createRenderFunction: i };
                                function i(E) {
                                    switch (E.ty) {
                                        case 'fl':
                                            return l;
                                        case 'gf':
                                            return f;
                                        case 'gs':
                                            return o;
                                        case 'st':
                                            return y;
                                        case 'sh':
                                        case 'el':
                                        case 'rc':
                                        case 'sr':
                                            return n;
                                        case 'tr':
                                            return s;
                                        case 'no':
                                            return a;
                                        default:
                                            return null;
                                    }
                                }
                                function s(E, u, b) {
                                    (b || u.transform.op._mdf) &&
                                        u.transform.container.setAttribute(
                                            'opacity',
                                            u.transform.op.v
                                        ),
                                        (b || u.transform.mProps._mdf) &&
                                            u.transform.container.setAttribute(
                                                'transform',
                                                u.transform.mProps.v.to2dCSS()
                                            );
                                }
                                function a() {}
                                function n(E, u, b) {
                                    var _,
                                        d,
                                        C,
                                        c,
                                        m,
                                        p,
                                        g = u.styles.length,
                                        P = u.lvl,
                                        A,
                                        F,
                                        T,
                                        D;
                                    for (p = 0; p < g; p += 1) {
                                        if (
                                            ((c = u.sh._mdf || b),
                                            u.styles[p].lvl < P)
                                        ) {
                                            for (
                                                F = t.reset(),
                                                    T = P - u.styles[p].lvl,
                                                    D =
                                                        u.transformers.length -
                                                        1;
                                                !c && T > 0;

                                            )
                                                (c =
                                                    u.transformers[D].mProps
                                                        ._mdf || c),
                                                    (T -= 1),
                                                    (D -= 1);
                                            if (c)
                                                for (
                                                    T = P - u.styles[p].lvl,
                                                        D =
                                                            u.transformers
                                                                .length - 1;
                                                    T > 0;

                                                )
                                                    F.multiply(
                                                        u.transformers[D].mProps
                                                            .v
                                                    ),
                                                        (T -= 1),
                                                        (D -= 1);
                                        } else F = e;
                                        if (
                                            ((A = u.sh.paths),
                                            (d = A._length),
                                            c)
                                        ) {
                                            for (C = '', _ = 0; _ < d; _ += 1)
                                                (m = A.shapes[_]),
                                                    m &&
                                                        m._length &&
                                                        (C += buildShapeString(
                                                            m,
                                                            m._length,
                                                            m.c,
                                                            F
                                                        ));
                                            u.caches[p] = C;
                                        } else C = u.caches[p];
                                        (u.styles[p].d += E.hd === !0 ? '' : C),
                                            (u.styles[p]._mdf =
                                                c || u.styles[p]._mdf);
                                    }
                                }
                                function l(E, u, b) {
                                    var _ = u.style;
                                    (u.c._mdf || b) &&
                                        _.pElem.setAttribute(
                                            'fill',
                                            'rgb(' +
                                                bmFloor(u.c.v[0]) +
                                                ',' +
                                                bmFloor(u.c.v[1]) +
                                                ',' +
                                                bmFloor(u.c.v[2]) +
                                                ')'
                                        ),
                                        (u.o._mdf || b) &&
                                            _.pElem.setAttribute(
                                                'fill-opacity',
                                                u.o.v
                                            );
                                }
                                function o(E, u, b) {
                                    f(E, u, b), y(E, u, b);
                                }
                                function f(E, u, b) {
                                    var _ = u.gf,
                                        d = u.g._hasOpacity,
                                        C = u.s.v,
                                        c = u.e.v;
                                    if (u.o._mdf || b) {
                                        var m =
                                            E.ty === 'gf'
                                                ? 'fill-opacity'
                                                : 'stroke-opacity';
                                        u.style.pElem.setAttribute(m, u.o.v);
                                    }
                                    if (u.s._mdf || b) {
                                        var p = E.t === 1 ? 'x1' : 'cx',
                                            g = p === 'x1' ? 'y1' : 'cy';
                                        _.setAttribute(p, C[0]),
                                            _.setAttribute(g, C[1]),
                                            d &&
                                                !u.g._collapsable &&
                                                (u.of.setAttribute(p, C[0]),
                                                u.of.setAttribute(g, C[1]));
                                    }
                                    var P, A, F, T;
                                    if (u.g._cmdf || b) {
                                        P = u.cst;
                                        var D = u.g.c;
                                        for (F = P.length, A = 0; A < F; A += 1)
                                            (T = P[A]),
                                                T.setAttribute(
                                                    'offset',
                                                    D[A * 4] + '%'
                                                ),
                                                T.setAttribute(
                                                    'stop-color',
                                                    'rgb(' +
                                                        D[A * 4 + 1] +
                                                        ',' +
                                                        D[A * 4 + 2] +
                                                        ',' +
                                                        D[A * 4 + 3] +
                                                        ')'
                                                );
                                    }
                                    if (d && (u.g._omdf || b)) {
                                        var L = u.g.o;
                                        for (
                                            u.g._collapsable
                                                ? (P = u.cst)
                                                : (P = u.ost),
                                                F = P.length,
                                                A = 0;
                                            A < F;
                                            A += 1
                                        )
                                            (T = P[A]),
                                                u.g._collapsable ||
                                                    T.setAttribute(
                                                        'offset',
                                                        L[A * 2] + '%'
                                                    ),
                                                T.setAttribute(
                                                    'stop-opacity',
                                                    L[A * 2 + 1]
                                                );
                                    }
                                    if (E.t === 1)
                                        (u.e._mdf || b) &&
                                            (_.setAttribute('x2', c[0]),
                                            _.setAttribute('y2', c[1]),
                                            d &&
                                                !u.g._collapsable &&
                                                (u.of.setAttribute('x2', c[0]),
                                                u.of.setAttribute('y2', c[1])));
                                    else {
                                        var q;
                                        if (
                                            ((u.s._mdf || u.e._mdf || b) &&
                                                ((q = Math.sqrt(
                                                    Math.pow(C[0] - c[0], 2) +
                                                        Math.pow(C[1] - c[1], 2)
                                                )),
                                                _.setAttribute('r', q),
                                                d &&
                                                    !u.g._collapsable &&
                                                    u.of.setAttribute('r', q)),
                                            u.e._mdf ||
                                                u.h._mdf ||
                                                u.a._mdf ||
                                                b)
                                        ) {
                                            q ||
                                                (q = Math.sqrt(
                                                    Math.pow(C[0] - c[0], 2) +
                                                        Math.pow(C[1] - c[1], 2)
                                                ));
                                            var V = Math.atan2(
                                                    c[1] - C[1],
                                                    c[0] - C[0]
                                                ),
                                                j = u.h.v;
                                            j >= 1
                                                ? (j = 0.99)
                                                : j <= -1 && (j = -0.99);
                                            var G = q * j,
                                                B =
                                                    Math.cos(V + u.a.v) * G +
                                                    C[0],
                                                S =
                                                    Math.sin(V + u.a.v) * G +
                                                    C[1];
                                            _.setAttribute('fx', B),
                                                _.setAttribute('fy', S),
                                                d &&
                                                    !u.g._collapsable &&
                                                    (u.of.setAttribute('fx', B),
                                                    u.of.setAttribute('fy', S));
                                        }
                                    }
                                }
                                function y(E, u, b) {
                                    var _ = u.style,
                                        d = u.d;
                                    d &&
                                        (d._mdf || b) &&
                                        d.dashStr &&
                                        (_.pElem.setAttribute(
                                            'stroke-dasharray',
                                            d.dashStr
                                        ),
                                        _.pElem.setAttribute(
                                            'stroke-dashoffset',
                                            d.dashoffset[0]
                                        )),
                                        u.c &&
                                            (u.c._mdf || b) &&
                                            _.pElem.setAttribute(
                                                'stroke',
                                                'rgb(' +
                                                    bmFloor(u.c.v[0]) +
                                                    ',' +
                                                    bmFloor(u.c.v[1]) +
                                                    ',' +
                                                    bmFloor(u.c.v[2]) +
                                                    ')'
                                            ),
                                        (u.o._mdf || b) &&
                                            _.pElem.setAttribute(
                                                'stroke-opacity',
                                                u.o.v
                                            ),
                                        (u.w._mdf || b) &&
                                            (_.pElem.setAttribute(
                                                'stroke-width',
                                                u.w.v
                                            ),
                                            _.msElem &&
                                                _.msElem.setAttribute(
                                                    'stroke-width',
                                                    u.w.v
                                                ));
                                }
                                return r;
                            })();
                        function SVGShapeElement(e, t, r) {
                            (this.shapes = []),
                                (this.shapesData = e.shapes),
                                (this.stylesList = []),
                                (this.shapeModifiers = []),
                                (this.itemsData = []),
                                (this.processedElements = []),
                                (this.animatedContents = []),
                                this.initElement(e, t, r),
                                (this.prevViewData = []);
                        }
                        extendPrototype(
                            [
                                BaseElement,
                                TransformElement,
                                SVGBaseElement,
                                IShapeElement,
                                HierarchyElement,
                                FrameElement,
                                RenderableDOMElement,
                            ],
                            SVGShapeElement
                        ),
                            (SVGShapeElement.prototype.initSecondaryElement =
                                function () {}),
                            (SVGShapeElement.prototype.identityMatrix =
                                new Matrix()),
                            (SVGShapeElement.prototype.buildExpressionInterface =
                                function () {}),
                            (SVGShapeElement.prototype.createContent =
                                function () {
                                    this.searchShapes(
                                        this.shapesData,
                                        this.itemsData,
                                        this.prevViewData,
                                        this.layerElement,
                                        0,
                                        [],
                                        !0
                                    ),
                                        this.filterUniqueShapes();
                                }),
                            (SVGShapeElement.prototype.filterUniqueShapes =
                                function () {
                                    var e,
                                        t = this.shapes.length,
                                        r,
                                        i,
                                        s = this.stylesList.length,
                                        a,
                                        n = [],
                                        l = !1;
                                    for (i = 0; i < s; i += 1) {
                                        for (
                                            a = this.stylesList[i],
                                                l = !1,
                                                n.length = 0,
                                                e = 0;
                                            e < t;
                                            e += 1
                                        )
                                            (r = this.shapes[e]),
                                                r.styles.indexOf(a) !== -1 &&
                                                    (n.push(r),
                                                    (l = r._isAnimated || l));
                                        n.length > 1 &&
                                            l &&
                                            this.setShapesAsAnimated(n);
                                    }
                                }),
                            (SVGShapeElement.prototype.setShapesAsAnimated =
                                function (e) {
                                    var t,
                                        r = e.length;
                                    for (t = 0; t < r; t += 1)
                                        e[t].setAsAnimated();
                                }),
                            (SVGShapeElement.prototype.createStyleElement =
                                function (e, t) {
                                    var r,
                                        i = new SVGStyleData(e, t),
                                        s = i.pElem;
                                    if (e.ty === 'st')
                                        r = new SVGStrokeStyleData(this, e, i);
                                    else if (e.ty === 'fl')
                                        r = new SVGFillStyleData(this, e, i);
                                    else if (e.ty === 'gf' || e.ty === 'gs') {
                                        var a =
                                            e.ty === 'gf'
                                                ? SVGGradientFillStyleData
                                                : SVGGradientStrokeStyleData;
                                        (r = new a(this, e, i)),
                                            this.globalData.defs.appendChild(
                                                r.gf
                                            ),
                                            r.maskId &&
                                                (this.globalData.defs.appendChild(
                                                    r.ms
                                                ),
                                                this.globalData.defs.appendChild(
                                                    r.of
                                                ),
                                                s.setAttribute(
                                                    'mask',
                                                    'url(' +
                                                        getLocationHref() +
                                                        '#' +
                                                        r.maskId +
                                                        ')'
                                                ));
                                    } else
                                        e.ty === 'no' &&
                                            (r = new SVGNoStyleData(
                                                this,
                                                e,
                                                i
                                            ));
                                    return (
                                        (e.ty === 'st' || e.ty === 'gs') &&
                                            (s.setAttribute(
                                                'stroke-linecap',
                                                lineCapEnum[e.lc || 2]
                                            ),
                                            s.setAttribute(
                                                'stroke-linejoin',
                                                lineJoinEnum[e.lj || 2]
                                            ),
                                            s.setAttribute('fill-opacity', '0'),
                                            e.lj === 1 &&
                                                s.setAttribute(
                                                    'stroke-miterlimit',
                                                    e.ml
                                                )),
                                        e.r === 2 &&
                                            s.setAttribute(
                                                'fill-rule',
                                                'evenodd'
                                            ),
                                        e.ln && s.setAttribute('id', e.ln),
                                        e.cl && s.setAttribute('class', e.cl),
                                        e.bm &&
                                            (s.style['mix-blend-mode'] =
                                                getBlendMode(e.bm)),
                                        this.stylesList.push(i),
                                        this.addToAnimatedContents(e, r),
                                        r
                                    );
                                }),
                            (SVGShapeElement.prototype.createGroupElement =
                                function (e) {
                                    var t = new ShapeGroupData();
                                    return (
                                        e.ln && t.gr.setAttribute('id', e.ln),
                                        e.cl &&
                                            t.gr.setAttribute('class', e.cl),
                                        e.bm &&
                                            (t.gr.style['mix-blend-mode'] =
                                                getBlendMode(e.bm)),
                                        t
                                    );
                                }),
                            (SVGShapeElement.prototype.createTransformElement =
                                function (e, t) {
                                    var r =
                                            TransformPropertyFactory.getTransformProperty(
                                                this,
                                                e,
                                                this
                                            ),
                                        i = new SVGTransformData(r, r.o, t);
                                    return this.addToAnimatedContents(e, i), i;
                                }),
                            (SVGShapeElement.prototype.createShapeElement =
                                function (e, t, r) {
                                    var i = 4;
                                    e.ty === 'rc'
                                        ? (i = 5)
                                        : e.ty === 'el'
                                          ? (i = 6)
                                          : e.ty === 'sr' && (i = 7);
                                    var s = ShapePropertyFactory.getShapeProp(
                                            this,
                                            e,
                                            i,
                                            this
                                        ),
                                        a = new SVGShapeData(t, r, s);
                                    return (
                                        this.shapes.push(a),
                                        this.addShapeToModifiers(a),
                                        this.addToAnimatedContents(e, a),
                                        a
                                    );
                                }),
                            (SVGShapeElement.prototype.addToAnimatedContents =
                                function (e, t) {
                                    for (
                                        var r = 0,
                                            i = this.animatedContents.length;
                                        r < i;

                                    ) {
                                        if (
                                            this.animatedContents[r].element ===
                                            t
                                        )
                                            return;
                                        r += 1;
                                    }
                                    this.animatedContents.push({
                                        fn: SVGElementsRenderer.createRenderFunction(
                                            e
                                        ),
                                        element: t,
                                        data: e,
                                    });
                                }),
                            (SVGShapeElement.prototype.setElementStyles =
                                function (e) {
                                    var t = e.styles,
                                        r,
                                        i = this.stylesList.length;
                                    for (r = 0; r < i; r += 1)
                                        this.stylesList[r].closed ||
                                            t.push(this.stylesList[r]);
                                }),
                            (SVGShapeElement.prototype.reloadShapes =
                                function () {
                                    this._isFirstFrame = !0;
                                    var e,
                                        t = this.itemsData.length;
                                    for (e = 0; e < t; e += 1)
                                        this.prevViewData[e] =
                                            this.itemsData[e];
                                    for (
                                        this.searchShapes(
                                            this.shapesData,
                                            this.itemsData,
                                            this.prevViewData,
                                            this.layerElement,
                                            0,
                                            [],
                                            !0
                                        ),
                                            this.filterUniqueShapes(),
                                            t = this.dynamicProperties.length,
                                            e = 0;
                                        e < t;
                                        e += 1
                                    )
                                        this.dynamicProperties[e].getValue();
                                    this.renderModifiers();
                                }),
                            (SVGShapeElement.prototype.searchShapes = function (
                                e,
                                t,
                                r,
                                i,
                                s,
                                a,
                                n
                            ) {
                                var l = [].concat(a),
                                    o,
                                    f = e.length - 1,
                                    y,
                                    E,
                                    u = [],
                                    b = [],
                                    _,
                                    d,
                                    C;
                                for (o = f; o >= 0; o -= 1) {
                                    if (
                                        ((C = this.searchProcessedElement(
                                            e[o]
                                        )),
                                        C
                                            ? (t[o] = r[C - 1])
                                            : (e[o]._render = n),
                                        e[o].ty === 'fl' ||
                                            e[o].ty === 'st' ||
                                            e[o].ty === 'gf' ||
                                            e[o].ty === 'gs' ||
                                            e[o].ty === 'no')
                                    )
                                        C
                                            ? (t[o].style.closed = !1)
                                            : (t[o] = this.createStyleElement(
                                                  e[o],
                                                  s
                                              )),
                                            e[o]._render &&
                                                t[o].style.pElem.parentNode !==
                                                    i &&
                                                i.appendChild(t[o].style.pElem),
                                            u.push(t[o].style);
                                    else if (e[o].ty === 'gr') {
                                        if (!C)
                                            t[o] = this.createGroupElement(
                                                e[o]
                                            );
                                        else
                                            for (
                                                E = t[o].it.length, y = 0;
                                                y < E;
                                                y += 1
                                            )
                                                t[o].prevViewData[y] =
                                                    t[o].it[y];
                                        this.searchShapes(
                                            e[o].it,
                                            t[o].it,
                                            t[o].prevViewData,
                                            t[o].gr,
                                            s + 1,
                                            l,
                                            n
                                        ),
                                            e[o]._render &&
                                                t[o].gr.parentNode !== i &&
                                                i.appendChild(t[o].gr);
                                    } else
                                        e[o].ty === 'tr'
                                            ? (C ||
                                                  (t[o] =
                                                      this.createTransformElement(
                                                          e[o],
                                                          i
                                                      )),
                                              (_ = t[o].transform),
                                              l.push(_))
                                            : e[o].ty === 'sh' ||
                                                e[o].ty === 'rc' ||
                                                e[o].ty === 'el' ||
                                                e[o].ty === 'sr'
                                              ? (C ||
                                                    (t[o] =
                                                        this.createShapeElement(
                                                            e[o],
                                                            l,
                                                            s
                                                        )),
                                                this.setElementStyles(t[o]))
                                              : e[o].ty === 'tm' ||
                                                  e[o].ty === 'rd' ||
                                                  e[o].ty === 'ms' ||
                                                  e[o].ty === 'pb' ||
                                                  e[o].ty === 'zz' ||
                                                  e[o].ty === 'op'
                                                ? (C
                                                      ? ((d = t[o]),
                                                        (d.closed = !1))
                                                      : ((d =
                                                            ShapeModifiers.getModifier(
                                                                e[o].ty
                                                            )),
                                                        d.init(this, e[o]),
                                                        (t[o] = d),
                                                        this.shapeModifiers.push(
                                                            d
                                                        )),
                                                  b.push(d))
                                                : e[o].ty === 'rp' &&
                                                  (C
                                                      ? ((d = t[o]),
                                                        (d.closed = !0))
                                                      : ((d =
                                                            ShapeModifiers.getModifier(
                                                                e[o].ty
                                                            )),
                                                        (t[o] = d),
                                                        d.init(this, e, o, t),
                                                        this.shapeModifiers.push(
                                                            d
                                                        ),
                                                        (n = !1)),
                                                  b.push(d));
                                    this.addProcessedElement(e[o], o + 1);
                                }
                                for (f = u.length, o = 0; o < f; o += 1)
                                    u[o].closed = !0;
                                for (f = b.length, o = 0; o < f; o += 1)
                                    b[o].closed = !0;
                            }),
                            (SVGShapeElement.prototype.renderInnerContent =
                                function () {
                                    this.renderModifiers();
                                    var e,
                                        t = this.stylesList.length;
                                    for (e = 0; e < t; e += 1)
                                        this.stylesList[e].reset();
                                    for (
                                        this.renderShape(), e = 0;
                                        e < t;
                                        e += 1
                                    )
                                        (this.stylesList[e]._mdf ||
                                            this._isFirstFrame) &&
                                            (this.stylesList[e].msElem &&
                                                (this.stylesList[
                                                    e
                                                ].msElem.setAttribute(
                                                    'd',
                                                    this.stylesList[e].d
                                                ),
                                                (this.stylesList[e].d =
                                                    'M0 0' +
                                                    this.stylesList[e].d)),
                                            this.stylesList[
                                                e
                                            ].pElem.setAttribute(
                                                'd',
                                                this.stylesList[e].d || 'M0 0'
                                            ));
                                }),
                            (SVGShapeElement.prototype.renderShape =
                                function () {
                                    var e,
                                        t = this.animatedContents.length,
                                        r;
                                    for (e = 0; e < t; e += 1)
                                        (r = this.animatedContents[e]),
                                            (this._isFirstFrame ||
                                                r.element._isAnimated) &&
                                                r.data !== !0 &&
                                                r.fn(
                                                    r.data,
                                                    r.element,
                                                    this._isFirstFrame
                                                );
                                }),
                            (SVGShapeElement.prototype.destroy = function () {
                                this.destroyBaseElement(),
                                    (this.shapesData = null),
                                    (this.itemsData = null);
                            });
                        function LetterProps(e, t, r, i, s, a) {
                            (this.o = e),
                                (this.sw = t),
                                (this.sc = r),
                                (this.fc = i),
                                (this.m = s),
                                (this.p = a),
                                (this._mdf = {
                                    o: !0,
                                    sw: !!t,
                                    sc: !!r,
                                    fc: !!i,
                                    m: !0,
                                    p: !0,
                                });
                        }
                        LetterProps.prototype.update = function (
                            e,
                            t,
                            r,
                            i,
                            s,
                            a
                        ) {
                            (this._mdf.o = !1),
                                (this._mdf.sw = !1),
                                (this._mdf.sc = !1),
                                (this._mdf.fc = !1),
                                (this._mdf.m = !1),
                                (this._mdf.p = !1);
                            var n = !1;
                            return (
                                this.o !== e &&
                                    ((this.o = e),
                                    (this._mdf.o = !0),
                                    (n = !0)),
                                this.sw !== t &&
                                    ((this.sw = t),
                                    (this._mdf.sw = !0),
                                    (n = !0)),
                                this.sc !== r &&
                                    ((this.sc = r),
                                    (this._mdf.sc = !0),
                                    (n = !0)),
                                this.fc !== i &&
                                    ((this.fc = i),
                                    (this._mdf.fc = !0),
                                    (n = !0)),
                                this.m !== s &&
                                    ((this.m = s),
                                    (this._mdf.m = !0),
                                    (n = !0)),
                                a.length &&
                                    (this.p[0] !== a[0] ||
                                        this.p[1] !== a[1] ||
                                        this.p[4] !== a[4] ||
                                        this.p[5] !== a[5] ||
                                        this.p[12] !== a[12] ||
                                        this.p[13] !== a[13]) &&
                                    ((this.p = a),
                                    (this._mdf.p = !0),
                                    (n = !0)),
                                n
                            );
                        };
                        function TextProperty(e, t) {
                            (this._frameId = initialDefaultFrame),
                                (this.pv = ''),
                                (this.v = ''),
                                (this.kf = !1),
                                (this._isFirstFrame = !0),
                                (this._mdf = !1),
                                t.d &&
                                    t.d.sid &&
                                    (t.d = e.globalData.slotManager.getProp(
                                        t.d
                                    )),
                                (this.data = t),
                                (this.elem = e),
                                (this.comp = this.elem.comp),
                                (this.keysIndex = 0),
                                (this.canResize = !1),
                                (this.minimumFontSize = 1),
                                (this.effectsSequence = []),
                                (this.currentData = {
                                    ascent: 0,
                                    boxWidth: this.defaultBoxWidth,
                                    f: '',
                                    fStyle: '',
                                    fWeight: '',
                                    fc: '',
                                    j: '',
                                    justifyOffset: '',
                                    l: [],
                                    lh: 0,
                                    lineWidths: [],
                                    ls: '',
                                    of: '',
                                    s: '',
                                    sc: '',
                                    sw: 0,
                                    t: 0,
                                    tr: 0,
                                    sz: 0,
                                    ps: null,
                                    fillColorAnim: !1,
                                    strokeColorAnim: !1,
                                    strokeWidthAnim: !1,
                                    yOffset: 0,
                                    finalSize: 0,
                                    finalText: [],
                                    finalLineHeight: 0,
                                    __complete: !1,
                                }),
                                this.copyData(
                                    this.currentData,
                                    this.data.d.k[0].s
                                ),
                                this.searchProperty() ||
                                    this.completeTextData(this.currentData);
                        }
                        (TextProperty.prototype.defaultBoxWidth = [0, 0]),
                            (TextProperty.prototype.copyData = function (e, t) {
                                for (var r in t)
                                    Object.prototype.hasOwnProperty.call(
                                        t,
                                        r
                                    ) && (e[r] = t[r]);
                                return e;
                            }),
                            (TextProperty.prototype.setCurrentData = function (
                                e
                            ) {
                                e.__complete || this.completeTextData(e),
                                    (this.currentData = e),
                                    (this.currentData.boxWidth =
                                        this.currentData.boxWidth ||
                                        this.defaultBoxWidth),
                                    (this._mdf = !0);
                            }),
                            (TextProperty.prototype.searchProperty =
                                function () {
                                    return this.searchKeyframes();
                                }),
                            (TextProperty.prototype.searchKeyframes =
                                function () {
                                    return (
                                        (this.kf = this.data.d.k.length > 1),
                                        this.kf &&
                                            this.addEffect(
                                                this.getKeyframeValue.bind(this)
                                            ),
                                        this.kf
                                    );
                                }),
                            (TextProperty.prototype.addEffect = function (e) {
                                this.effectsSequence.push(e),
                                    this.elem.addDynamicProperty(this);
                            }),
                            (TextProperty.prototype.getValue = function (e) {
                                if (
                                    !(
                                        (this.elem.globalData.frameId ===
                                            this.frameId ||
                                            !this.effectsSequence.length) &&
                                        !e
                                    )
                                ) {
                                    this.currentData.t =
                                        this.data.d.k[this.keysIndex].s.t;
                                    var t = this.currentData,
                                        r = this.keysIndex;
                                    if (this.lock) {
                                        this.setCurrentData(this.currentData);
                                        return;
                                    }
                                    (this.lock = !0), (this._mdf = !1);
                                    var i,
                                        s = this.effectsSequence.length,
                                        a =
                                            e ||
                                            this.data.d.k[this.keysIndex].s;
                                    for (i = 0; i < s; i += 1)
                                        r !== this.keysIndex
                                            ? (a = this.effectsSequence[i](
                                                  a,
                                                  a.t
                                              ))
                                            : (a = this.effectsSequence[i](
                                                  this.currentData,
                                                  a.t
                                              ));
                                    t !== a && this.setCurrentData(a),
                                        (this.v = this.currentData),
                                        (this.pv = this.v),
                                        (this.lock = !1),
                                        (this.frameId =
                                            this.elem.globalData.frameId);
                                }
                            }),
                            (TextProperty.prototype.getKeyframeValue =
                                function () {
                                    for (
                                        var e = this.data.d.k,
                                            t = this.elem.comp.renderedFrame,
                                            r = 0,
                                            i = e.length;
                                        r <= i - 1 &&
                                        !(r === i - 1 || e[r + 1].t > t);

                                    )
                                        r += 1;
                                    return (
                                        this.keysIndex !== r &&
                                            (this.keysIndex = r),
                                        this.data.d.k[this.keysIndex].s
                                    );
                                }),
                            (TextProperty.prototype.buildFinalText = function (
                                e
                            ) {
                                for (
                                    var t = [],
                                        r = 0,
                                        i = e.length,
                                        s,
                                        a,
                                        n = !1,
                                        l = !1,
                                        o = '';
                                    r < i;

                                )
                                    (n = l),
                                        (l = !1),
                                        (s = e.charCodeAt(r)),
                                        (o = e.charAt(r)),
                                        FontManager.isCombinedCharacter(s)
                                            ? (n = !0)
                                            : s >= 55296 && s <= 56319
                                              ? FontManager.isRegionalFlag(e, r)
                                                  ? (o = e.substr(r, 14))
                                                  : ((a = e.charCodeAt(r + 1)),
                                                    a >= 56320 &&
                                                        a <= 57343 &&
                                                        (FontManager.isModifier(
                                                            s,
                                                            a
                                                        )
                                                            ? ((o = e.substr(
                                                                  r,
                                                                  2
                                                              )),
                                                              (n = !0))
                                                            : FontManager.isFlagEmoji(
                                                                    e.substr(
                                                                        r,
                                                                        4
                                                                    )
                                                                )
                                                              ? (o = e.substr(
                                                                    r,
                                                                    4
                                                                ))
                                                              : (o = e.substr(
                                                                    r,
                                                                    2
                                                                ))))
                                              : s > 56319
                                                ? ((a = e.charCodeAt(r + 1)),
                                                  FontManager.isVariationSelector(
                                                      s
                                                  ) && (n = !0))
                                                : FontManager.isZeroWidthJoiner(
                                                      s
                                                  ) && ((n = !0), (l = !0)),
                                        n
                                            ? ((t[t.length - 1] += o), (n = !1))
                                            : t.push(o),
                                        (r += o.length);
                                return t;
                            }),
                            (TextProperty.prototype.completeTextData =
                                function (e) {
                                    e.__complete = !0;
                                    var t = this.elem.globalData.fontManager,
                                        r = this.data,
                                        i = [],
                                        s,
                                        a,
                                        n,
                                        l = 0,
                                        o,
                                        f = r.m.g,
                                        y = 0,
                                        E = 0,
                                        u = 0,
                                        b = [],
                                        _ = 0,
                                        d = 0,
                                        C,
                                        c,
                                        m = t.getFontByName(e.f),
                                        p,
                                        g = 0,
                                        P = getFontProperties(m);
                                    (e.fWeight = P.weight),
                                        (e.fStyle = P.style),
                                        (e.finalSize = e.s),
                                        (e.finalText = this.buildFinalText(
                                            e.t
                                        )),
                                        (a = e.finalText.length),
                                        (e.finalLineHeight = e.lh);
                                    var A = (e.tr / 1e3) * e.finalSize,
                                        F;
                                    if (e.sz)
                                        for (
                                            var T = !0,
                                                D = e.sz[0],
                                                L = e.sz[1],
                                                q,
                                                V;
                                            T;

                                        ) {
                                            (V = this.buildFinalText(e.t)),
                                                (q = 0),
                                                (_ = 0),
                                                (a = V.length),
                                                (A =
                                                    (e.tr / 1e3) * e.finalSize);
                                            var j = -1;
                                            for (s = 0; s < a; s += 1)
                                                (F = V[s].charCodeAt(0)),
                                                    (n = !1),
                                                    V[s] === ' '
                                                        ? (j = s)
                                                        : (F === 13 ||
                                                              F === 3) &&
                                                          ((_ = 0),
                                                          (n = !0),
                                                          (q +=
                                                              e.finalLineHeight ||
                                                              e.finalSize *
                                                                  1.2)),
                                                    t.chars
                                                        ? ((p = t.getCharData(
                                                              V[s],
                                                              m.fStyle,
                                                              m.fFamily
                                                          )),
                                                          (g = n
                                                              ? 0
                                                              : (p.w *
                                                                    e.finalSize) /
                                                                100))
                                                        : (g = t.measureText(
                                                              V[s],
                                                              e.f,
                                                              e.finalSize
                                                          )),
                                                    _ + g > D && V[s] !== ' '
                                                        ? (j === -1
                                                              ? (a += 1)
                                                              : (s = j),
                                                          (q +=
                                                              e.finalLineHeight ||
                                                              e.finalSize *
                                                                  1.2),
                                                          V.splice(
                                                              s,
                                                              j === s ? 1 : 0,
                                                              '\r'
                                                          ),
                                                          (j = -1),
                                                          (_ = 0))
                                                        : ((_ += g), (_ += A));
                                            (q +=
                                                (m.ascent * e.finalSize) / 100),
                                                this.canResize &&
                                                e.finalSize >
                                                    this.minimumFontSize &&
                                                L < q
                                                    ? ((e.finalSize -= 1),
                                                      (e.finalLineHeight =
                                                          (e.finalSize * e.lh) /
                                                          e.s))
                                                    : ((e.finalText = V),
                                                      (a = e.finalText.length),
                                                      (T = !1));
                                        }
                                    (_ = -A), (g = 0);
                                    var G = 0,
                                        B;
                                    for (s = 0; s < a; s += 1)
                                        if (
                                            ((n = !1),
                                            (B = e.finalText[s]),
                                            (F = B.charCodeAt(0)),
                                            F === 13 || F === 3
                                                ? ((G = 0),
                                                  b.push(_),
                                                  (d = _ > d ? _ : d),
                                                  (_ = -2 * A),
                                                  (o = ''),
                                                  (n = !0),
                                                  (u += 1))
                                                : (o = B),
                                            t.chars
                                                ? ((p = t.getCharData(
                                                      B,
                                                      m.fStyle,
                                                      t.getFontByName(e.f)
                                                          .fFamily
                                                  )),
                                                  (g = n
                                                      ? 0
                                                      : (p.w * e.finalSize) /
                                                        100))
                                                : (g = t.measureText(
                                                      o,
                                                      e.f,
                                                      e.finalSize
                                                  )),
                                            B === ' '
                                                ? (G += g + A)
                                                : ((_ += g + A + G), (G = 0)),
                                            i.push({
                                                l: g,
                                                an: g,
                                                add: y,
                                                n,
                                                anIndexes: [],
                                                val: o,
                                                line: u,
                                                animatorJustifyOffset: 0,
                                            }),
                                            f == 2)
                                        ) {
                                            if (
                                                ((y += g),
                                                o === '' ||
                                                    o === ' ' ||
                                                    s === a - 1)
                                            ) {
                                                for (
                                                    (o === '' || o === ' ') &&
                                                    (y -= g);
                                                    E <= s;

                                                )
                                                    (i[E].an = y),
                                                        (i[E].ind = l),
                                                        (i[E].extra = g),
                                                        (E += 1);
                                                (l += 1), (y = 0);
                                            }
                                        } else if (f == 3) {
                                            if (
                                                ((y += g),
                                                o === '' || s === a - 1)
                                            ) {
                                                for (
                                                    o === '' && (y -= g);
                                                    E <= s;

                                                )
                                                    (i[E].an = y),
                                                        (i[E].ind = l),
                                                        (i[E].extra = g),
                                                        (E += 1);
                                                (y = 0), (l += 1);
                                            }
                                        } else
                                            (i[l].ind = l),
                                                (i[l].extra = 0),
                                                (l += 1);
                                    if (
                                        ((e.l = i),
                                        (d = _ > d ? _ : d),
                                        b.push(_),
                                        e.sz)
                                    )
                                        (e.boxWidth = e.sz[0]),
                                            (e.justifyOffset = 0);
                                    else
                                        switch (((e.boxWidth = d), e.j)) {
                                            case 1:
                                                e.justifyOffset = -e.boxWidth;
                                                break;
                                            case 2:
                                                e.justifyOffset =
                                                    -e.boxWidth / 2;
                                                break;
                                            default:
                                                e.justifyOffset = 0;
                                        }
                                    e.lineWidths = b;
                                    var S = r.a,
                                        M,
                                        x;
                                    c = S.length;
                                    var k,
                                        R,
                                        I = [];
                                    for (C = 0; C < c; C += 1) {
                                        for (
                                            M = S[C],
                                                M.a.sc &&
                                                    (e.strokeColorAnim = !0),
                                                M.a.sw &&
                                                    (e.strokeWidthAnim = !0),
                                                (M.a.fc ||
                                                    M.a.fh ||
                                                    M.a.fs ||
                                                    M.a.fb) &&
                                                    (e.fillColorAnim = !0),
                                                R = 0,
                                                k = M.s.b,
                                                s = 0;
                                            s < a;
                                            s += 1
                                        )
                                            (x = i[s]),
                                                (x.anIndexes[C] = R),
                                                ((k == 1 && x.val !== '') ||
                                                    (k == 2 &&
                                                        x.val !== '' &&
                                                        x.val !== ' ') ||
                                                    (k == 3 &&
                                                        (x.n ||
                                                            x.val == ' ' ||
                                                            s == a - 1)) ||
                                                    (k == 4 &&
                                                        (x.n || s == a - 1))) &&
                                                    (M.s.rn === 1 && I.push(R),
                                                    (R += 1));
                                        r.a[C].s.totalChars = R;
                                        var O = -1,
                                            $;
                                        if (M.s.rn === 1)
                                            for (s = 0; s < a; s += 1)
                                                (x = i[s]),
                                                    O != x.anIndexes[C] &&
                                                        ((O = x.anIndexes[C]),
                                                        ($ = I.splice(
                                                            Math.floor(
                                                                Math.random() *
                                                                    I.length
                                                            ),
                                                            1
                                                        )[0])),
                                                    (x.anIndexes[C] = $);
                                    }
                                    (e.yOffset =
                                        e.finalLineHeight || e.finalSize * 1.2),
                                        (e.ls = e.ls || 0),
                                        (e.ascent =
                                            (m.ascent * e.finalSize) / 100);
                                }),
                            (TextProperty.prototype.updateDocumentData =
                                function (e, t) {
                                    t = t === void 0 ? this.keysIndex : t;
                                    var r = this.copyData(
                                        {},
                                        this.data.d.k[t].s
                                    );
                                    (r = this.copyData(r, e)),
                                        (this.data.d.k[t].s = r),
                                        this.recalculate(t),
                                        this.setCurrentData(r),
                                        this.elem.addDynamicProperty(this);
                                }),
                            (TextProperty.prototype.recalculate = function (e) {
                                var t = this.data.d.k[e].s;
                                (t.__complete = !1),
                                    (this.keysIndex = 0),
                                    (this._isFirstFrame = !0),
                                    this.getValue(t);
                            }),
                            (TextProperty.prototype.canResizeFont = function (
                                e
                            ) {
                                (this.canResize = e),
                                    this.recalculate(this.keysIndex),
                                    this.elem.addDynamicProperty(this);
                            }),
                            (TextProperty.prototype.setMinimumFontSize =
                                function (e) {
                                    (this.minimumFontSize = Math.floor(e) || 1),
                                        this.recalculate(this.keysIndex),
                                        this.elem.addDynamicProperty(this);
                                });
                        var TextSelectorProp = (function () {
                            var e = Math.max,
                                t = Math.min,
                                r = Math.floor;
                            function i(a, n) {
                                (this._currentTextLength = -1),
                                    (this.k = !1),
                                    (this.data = n),
                                    (this.elem = a),
                                    (this.comp = a.comp),
                                    (this.finalS = 0),
                                    (this.finalE = 0),
                                    this.initDynamicPropertyContainer(a),
                                    (this.s = PropertyFactory.getProp(
                                        a,
                                        n.s || { k: 0 },
                                        0,
                                        0,
                                        this
                                    )),
                                    'e' in n
                                        ? (this.e = PropertyFactory.getProp(
                                              a,
                                              n.e,
                                              0,
                                              0,
                                              this
                                          ))
                                        : (this.e = { v: 100 }),
                                    (this.o = PropertyFactory.getProp(
                                        a,
                                        n.o || { k: 0 },
                                        0,
                                        0,
                                        this
                                    )),
                                    (this.xe = PropertyFactory.getProp(
                                        a,
                                        n.xe || { k: 0 },
                                        0,
                                        0,
                                        this
                                    )),
                                    (this.ne = PropertyFactory.getProp(
                                        a,
                                        n.ne || { k: 0 },
                                        0,
                                        0,
                                        this
                                    )),
                                    (this.sm = PropertyFactory.getProp(
                                        a,
                                        n.sm || { k: 100 },
                                        0,
                                        0,
                                        this
                                    )),
                                    (this.a = PropertyFactory.getProp(
                                        a,
                                        n.a,
                                        0,
                                        0.01,
                                        this
                                    )),
                                    this.dynamicProperties.length ||
                                        this.getValue();
                            }
                            (i.prototype = {
                                getMult: function (n) {
                                    this._currentTextLength !==
                                        this.elem.textProperty.currentData.l
                                            .length && this.getValue();
                                    var l = 0,
                                        o = 0,
                                        f = 1,
                                        y = 1;
                                    this.ne.v > 0
                                        ? (l = this.ne.v / 100)
                                        : (o = -this.ne.v / 100),
                                        this.xe.v > 0
                                            ? (f = 1 - this.xe.v / 100)
                                            : (y = 1 + this.xe.v / 100);
                                    var E = BezierFactory.getBezierEasing(
                                            l,
                                            o,
                                            f,
                                            y
                                        ).get,
                                        u = 0,
                                        b = this.finalS,
                                        _ = this.finalE,
                                        d = this.data.sh;
                                    if (d === 2)
                                        _ === b
                                            ? (u = n >= _ ? 1 : 0)
                                            : (u = e(
                                                  0,
                                                  t(
                                                      0.5 / (_ - b) +
                                                          (n - b) / (_ - b),
                                                      1
                                                  )
                                              )),
                                            (u = E(u));
                                    else if (d === 3)
                                        _ === b
                                            ? (u = n >= _ ? 0 : 1)
                                            : (u =
                                                  1 -
                                                  e(
                                                      0,
                                                      t(
                                                          0.5 / (_ - b) +
                                                              (n - b) / (_ - b),
                                                          1
                                                      )
                                                  )),
                                            (u = E(u));
                                    else if (d === 4)
                                        _ === b
                                            ? (u = 0)
                                            : ((u = e(
                                                  0,
                                                  t(
                                                      0.5 / (_ - b) +
                                                          (n - b) / (_ - b),
                                                      1
                                                  )
                                              )),
                                              u < 0.5
                                                  ? (u *= 2)
                                                  : (u = 1 - 2 * (u - 0.5))),
                                            (u = E(u));
                                    else if (d === 5) {
                                        if (_ === b) u = 0;
                                        else {
                                            var C = _ - b;
                                            n = t(e(0, n + 0.5 - b), _ - b);
                                            var c = -C / 2 + n,
                                                m = C / 2;
                                            u = Math.sqrt(
                                                1 - (c * c) / (m * m)
                                            );
                                        }
                                        u = E(u);
                                    } else
                                        d === 6
                                            ? (_ === b
                                                  ? (u = 0)
                                                  : ((n = t(
                                                        e(0, n + 0.5 - b),
                                                        _ - b
                                                    )),
                                                    (u =
                                                        (1 +
                                                            Math.cos(
                                                                Math.PI +
                                                                    (Math.PI *
                                                                        2 *
                                                                        n) /
                                                                        (_ - b)
                                                            )) /
                                                        2)),
                                              (u = E(u)))
                                            : (n >= r(b) &&
                                                  (n - b < 0
                                                      ? (u = e(
                                                            0,
                                                            t(
                                                                t(_, 1) -
                                                                    (b - n),
                                                                1
                                                            )
                                                        ))
                                                      : (u = e(
                                                            0,
                                                            t(_ - n, 1)
                                                        ))),
                                              (u = E(u)));
                                    if (this.sm.v !== 100) {
                                        var p = this.sm.v * 0.01;
                                        p === 0 && (p = 1e-8);
                                        var g = 0.5 - p * 0.5;
                                        u < g
                                            ? (u = 0)
                                            : ((u = (u - g) / p),
                                              u > 1 && (u = 1));
                                    }
                                    return u * this.a.v;
                                },
                                getValue: function (n) {
                                    this.iterateDynamicProperties(),
                                        (this._mdf = n || this._mdf),
                                        (this._currentTextLength =
                                            this.elem.textProperty.currentData.l
                                                .length || 0),
                                        n &&
                                            this.data.r === 2 &&
                                            (this.e.v =
                                                this._currentTextLength);
                                    var l =
                                            this.data.r === 2
                                                ? 1
                                                : 100 / this.data.totalChars,
                                        o = this.o.v / l,
                                        f = this.s.v / l + o,
                                        y = this.e.v / l + o;
                                    if (f > y) {
                                        var E = f;
                                        (f = y), (y = E);
                                    }
                                    (this.finalS = f), (this.finalE = y);
                                },
                            }),
                                extendPrototype([DynamicPropertyContainer], i);
                            function s(a, n, l) {
                                return new i(a, n);
                            }
                            return { getTextSelectorProp: s };
                        })();
                        function TextAnimatorDataProperty(e, t, r) {
                            var i = { propType: !1 },
                                s = PropertyFactory.getProp,
                                a = t.a;
                            (this.a = {
                                r: a.r ? s(e, a.r, 0, degToRads, r) : i,
                                rx: a.rx ? s(e, a.rx, 0, degToRads, r) : i,
                                ry: a.ry ? s(e, a.ry, 0, degToRads, r) : i,
                                sk: a.sk ? s(e, a.sk, 0, degToRads, r) : i,
                                sa: a.sa ? s(e, a.sa, 0, degToRads, r) : i,
                                s: a.s ? s(e, a.s, 1, 0.01, r) : i,
                                a: a.a ? s(e, a.a, 1, 0, r) : i,
                                o: a.o ? s(e, a.o, 0, 0.01, r) : i,
                                p: a.p ? s(e, a.p, 1, 0, r) : i,
                                sw: a.sw ? s(e, a.sw, 0, 0, r) : i,
                                sc: a.sc ? s(e, a.sc, 1, 0, r) : i,
                                fc: a.fc ? s(e, a.fc, 1, 0, r) : i,
                                fh: a.fh ? s(e, a.fh, 0, 0, r) : i,
                                fs: a.fs ? s(e, a.fs, 0, 0.01, r) : i,
                                fb: a.fb ? s(e, a.fb, 0, 0.01, r) : i,
                                t: a.t ? s(e, a.t, 0, 0, r) : i,
                            }),
                                (this.s = TextSelectorProp.getTextSelectorProp(
                                    e,
                                    t.s,
                                    r
                                )),
                                (this.s.t = t.s.t);
                        }
                        function TextAnimatorProperty(e, t, r) {
                            (this._isFirstFrame = !0),
                                (this._hasMaskedPath = !1),
                                (this._frameId = -1),
                                (this._textData = e),
                                (this._renderType = t),
                                (this._elem = r),
                                (this._animatorsData = createSizedArray(
                                    this._textData.a.length
                                )),
                                (this._pathData = {}),
                                (this._moreOptions = { alignment: {} }),
                                (this.renderedLetters = []),
                                (this.lettersChangedFlag = !1),
                                this.initDynamicPropertyContainer(r);
                        }
                        (TextAnimatorProperty.prototype.searchProperties =
                            function () {
                                var e,
                                    t = this._textData.a.length,
                                    r,
                                    i = PropertyFactory.getProp;
                                for (e = 0; e < t; e += 1)
                                    (r = this._textData.a[e]),
                                        (this._animatorsData[e] =
                                            new TextAnimatorDataProperty(
                                                this._elem,
                                                r,
                                                this
                                            ));
                                this._textData.p && 'm' in this._textData.p
                                    ? ((this._pathData = {
                                          a: i(
                                              this._elem,
                                              this._textData.p.a,
                                              0,
                                              0,
                                              this
                                          ),
                                          f: i(
                                              this._elem,
                                              this._textData.p.f,
                                              0,
                                              0,
                                              this
                                          ),
                                          l: i(
                                              this._elem,
                                              this._textData.p.l,
                                              0,
                                              0,
                                              this
                                          ),
                                          r: i(
                                              this._elem,
                                              this._textData.p.r,
                                              0,
                                              0,
                                              this
                                          ),
                                          p: i(
                                              this._elem,
                                              this._textData.p.p,
                                              0,
                                              0,
                                              this
                                          ),
                                          m: this._elem.maskManager.getMaskProperty(
                                              this._textData.p.m
                                          ),
                                      }),
                                      (this._hasMaskedPath = !0))
                                    : (this._hasMaskedPath = !1),
                                    (this._moreOptions.alignment = i(
                                        this._elem,
                                        this._textData.m.a,
                                        1,
                                        0,
                                        this
                                    ));
                            }),
                            (TextAnimatorProperty.prototype.getMeasures =
                                function (e, t) {
                                    if (
                                        ((this.lettersChangedFlag = t),
                                        !(
                                            !this._mdf &&
                                            !this._isFirstFrame &&
                                            !t &&
                                            (!this._hasMaskedPath ||
                                                !this._pathData.m._mdf)
                                        ))
                                    ) {
                                        this._isFirstFrame = !1;
                                        var r = this._moreOptions.alignment.v,
                                            i = this._animatorsData,
                                            s = this._textData,
                                            a = this.mHelper,
                                            n = this._renderType,
                                            l = this.renderedLetters.length,
                                            o,
                                            f,
                                            y,
                                            E,
                                            u = e.l,
                                            b,
                                            _,
                                            d,
                                            C,
                                            c,
                                            m,
                                            p,
                                            g,
                                            P,
                                            A,
                                            F,
                                            T,
                                            D,
                                            L,
                                            q;
                                        if (this._hasMaskedPath) {
                                            if (
                                                ((q = this._pathData.m),
                                                !this._pathData.n ||
                                                    this._pathData._mdf)
                                            ) {
                                                var V = q.v;
                                                this._pathData.r.v &&
                                                    (V = V.reverse()),
                                                    (b = {
                                                        tLength: 0,
                                                        segments: [],
                                                    }),
                                                    (E = V._length - 1);
                                                var j;
                                                for (
                                                    T = 0, y = 0;
                                                    y < E;
                                                    y += 1
                                                )
                                                    (j = bez.buildBezierData(
                                                        V.v[y],
                                                        V.v[y + 1],
                                                        [
                                                            V.o[y][0] -
                                                                V.v[y][0],
                                                            V.o[y][1] -
                                                                V.v[y][1],
                                                        ],
                                                        [
                                                            V.i[y + 1][0] -
                                                                V.v[y + 1][0],
                                                            V.i[y + 1][1] -
                                                                V.v[y + 1][1],
                                                        ]
                                                    )),
                                                        (b.tLength +=
                                                            j.segmentLength),
                                                        b.segments.push(j),
                                                        (T += j.segmentLength);
                                                (y = E),
                                                    q.v.c &&
                                                        ((j =
                                                            bez.buildBezierData(
                                                                V.v[y],
                                                                V.v[0],
                                                                [
                                                                    V.o[y][0] -
                                                                        V.v[
                                                                            y
                                                                        ][0],
                                                                    V.o[y][1] -
                                                                        V.v[
                                                                            y
                                                                        ][1],
                                                                ],
                                                                [
                                                                    V.i[0][0] -
                                                                        V
                                                                            .v[0][0],
                                                                    V.i[0][1] -
                                                                        V
                                                                            .v[0][1],
                                                                ]
                                                            )),
                                                        (b.tLength +=
                                                            j.segmentLength),
                                                        b.segments.push(j),
                                                        (T += j.segmentLength)),
                                                    (this._pathData.pi = b);
                                            }
                                            if (
                                                ((b = this._pathData.pi),
                                                (_ = this._pathData.f.v),
                                                (p = 0),
                                                (m = 1),
                                                (C = 0),
                                                (c = !0),
                                                (A = b.segments),
                                                _ < 0 && q.v.c)
                                            )
                                                for (
                                                    b.tLength < Math.abs(_) &&
                                                        (_ =
                                                            -Math.abs(_) %
                                                            b.tLength),
                                                        p = A.length - 1,
                                                        P = A[p].points,
                                                        m = P.length - 1;
                                                    _ < 0;

                                                )
                                                    (_ += P[m].partialLength),
                                                        (m -= 1),
                                                        m < 0 &&
                                                            ((p -= 1),
                                                            (P = A[p].points),
                                                            (m = P.length - 1));
                                            (P = A[p].points),
                                                (g = P[m - 1]),
                                                (d = P[m]),
                                                (F = d.partialLength);
                                        }
                                        (E = u.length), (o = 0), (f = 0);
                                        var G = e.finalSize * 1.2 * 0.714,
                                            B = !0,
                                            S,
                                            M,
                                            x,
                                            k,
                                            R;
                                        k = i.length;
                                        var I,
                                            O = -1,
                                            $,
                                            H,
                                            X,
                                            Z = _,
                                            U = p,
                                            te = m,
                                            ne = -1,
                                            re,
                                            Q,
                                            ae,
                                            J,
                                            N,
                                            le,
                                            ce,
                                            fe,
                                            oe = '',
                                            pe = this.defaultPropsArray,
                                            ue;
                                        if (e.j === 2 || e.j === 1) {
                                            var se = 0,
                                                me = 0,
                                                Y = e.j === 2 ? -0.5 : -1,
                                                z = 0,
                                                W = !0;
                                            for (y = 0; y < E; y += 1)
                                                if (u[y].n) {
                                                    for (
                                                        se && (se += me);
                                                        z < y;

                                                    )
                                                        (u[
                                                            z
                                                        ].animatorJustifyOffset =
                                                            se),
                                                            (z += 1);
                                                    (se = 0), (W = !0);
                                                } else {
                                                    for (x = 0; x < k; x += 1)
                                                        (S = i[x].a),
                                                            S.t.propType &&
                                                                (W &&
                                                                    e.j === 2 &&
                                                                    (me +=
                                                                        S.t.v *
                                                                        Y),
                                                                (M = i[x].s),
                                                                (I = M.getMult(
                                                                    u[y]
                                                                        .anIndexes[
                                                                        x
                                                                    ],
                                                                    s.a[x].s
                                                                        .totalChars
                                                                )),
                                                                I.length
                                                                    ? (se +=
                                                                          S.t
                                                                              .v *
                                                                          I[0] *
                                                                          Y)
                                                                    : (se +=
                                                                          S.t
                                                                              .v *
                                                                          I *
                                                                          Y));
                                                    W = !1;
                                                }
                                            for (se && (se += me); z < y; )
                                                (u[z].animatorJustifyOffset =
                                                    se),
                                                    (z += 1);
                                        }
                                        for (y = 0; y < E; y += 1) {
                                            if ((a.reset(), (re = 1), u[y].n))
                                                (o = 0),
                                                    (f += e.yOffset),
                                                    (f += B ? 1 : 0),
                                                    (_ = Z),
                                                    (B = !1),
                                                    this._hasMaskedPath &&
                                                        ((p = U),
                                                        (m = te),
                                                        (P = A[p].points),
                                                        (g = P[m - 1]),
                                                        (d = P[m]),
                                                        (F = d.partialLength),
                                                        (C = 0)),
                                                    (oe = ''),
                                                    (fe = ''),
                                                    (le = ''),
                                                    (ue = ''),
                                                    (pe =
                                                        this.defaultPropsArray);
                                            else {
                                                if (this._hasMaskedPath) {
                                                    if (ne !== u[y].line) {
                                                        switch (e.j) {
                                                            case 1:
                                                                _ +=
                                                                    T -
                                                                    e
                                                                        .lineWidths[
                                                                        u[y]
                                                                            .line
                                                                    ];
                                                                break;
                                                            case 2:
                                                                _ +=
                                                                    (T -
                                                                        e
                                                                            .lineWidths[
                                                                            u[y]
                                                                                .line
                                                                        ]) /
                                                                    2;
                                                                break;
                                                        }
                                                        ne = u[y].line;
                                                    }
                                                    O !== u[y].ind &&
                                                        (u[O] &&
                                                            (_ += u[O].extra),
                                                        (_ += u[y].an / 2),
                                                        (O = u[y].ind)),
                                                        (_ +=
                                                            r[0] *
                                                            u[y].an *
                                                            0.005);
                                                    var K = 0;
                                                    for (x = 0; x < k; x += 1)
                                                        (S = i[x].a),
                                                            S.p.propType &&
                                                                ((M = i[x].s),
                                                                (I = M.getMult(
                                                                    u[y]
                                                                        .anIndexes[
                                                                        x
                                                                    ],
                                                                    s.a[x].s
                                                                        .totalChars
                                                                )),
                                                                I.length
                                                                    ? (K +=
                                                                          S.p
                                                                              .v[0] *
                                                                          I[0])
                                                                    : (K +=
                                                                          S.p
                                                                              .v[0] *
                                                                          I)),
                                                            S.a.propType &&
                                                                ((M = i[x].s),
                                                                (I = M.getMult(
                                                                    u[y]
                                                                        .anIndexes[
                                                                        x
                                                                    ],
                                                                    s.a[x].s
                                                                        .totalChars
                                                                )),
                                                                I.length
                                                                    ? (K +=
                                                                          S.a
                                                                              .v[0] *
                                                                          I[0])
                                                                    : (K +=
                                                                          S.a
                                                                              .v[0] *
                                                                          I));
                                                    for (
                                                        c = !0,
                                                            this._pathData.a
                                                                .v &&
                                                                ((_ =
                                                                    u[0].an *
                                                                        0.5 +
                                                                    ((T -
                                                                        this
                                                                            ._pathData
                                                                            .f
                                                                            .v -
                                                                        u[0]
                                                                            .an *
                                                                            0.5 -
                                                                        u[
                                                                            u.length -
                                                                                1
                                                                        ].an *
                                                                            0.5) *
                                                                        O) /
                                                                        (E -
                                                                            1)),
                                                                (_ +=
                                                                    this
                                                                        ._pathData
                                                                        .f.v));
                                                        c;

                                                    )
                                                        C + F >= _ + K || !P
                                                            ? ((D =
                                                                  (_ + K - C) /
                                                                  d.partialLength),
                                                              (H =
                                                                  g.point[0] +
                                                                  (d.point[0] -
                                                                      g
                                                                          .point[0]) *
                                                                      D),
                                                              (X =
                                                                  g.point[1] +
                                                                  (d.point[1] -
                                                                      g
                                                                          .point[1]) *
                                                                      D),
                                                              a.translate(
                                                                  -r[0] *
                                                                      u[y].an *
                                                                      0.005,
                                                                  -(r[1] * G) *
                                                                      0.01
                                                              ),
                                                              (c = !1))
                                                            : P &&
                                                              ((C +=
                                                                  d.partialLength),
                                                              (m += 1),
                                                              m >= P.length &&
                                                                  ((m = 0),
                                                                  (p += 1),
                                                                  A[p]
                                                                      ? (P =
                                                                            A[p]
                                                                                .points)
                                                                      : q.v.c
                                                                        ? ((m = 0),
                                                                          (p = 0),
                                                                          (P =
                                                                              A[
                                                                                  p
                                                                              ]
                                                                                  .points))
                                                                        : ((C -=
                                                                              d.partialLength),
                                                                          (P =
                                                                              null))),
                                                              P &&
                                                                  ((g = d),
                                                                  (d = P[m]),
                                                                  (F =
                                                                      d.partialLength)));
                                                    ($ =
                                                        u[y].an / 2 - u[y].add),
                                                        a.translate(-$, 0, 0);
                                                } else
                                                    ($ =
                                                        u[y].an / 2 - u[y].add),
                                                        a.translate(-$, 0, 0),
                                                        a.translate(
                                                            -r[0] *
                                                                u[y].an *
                                                                0.005,
                                                            -r[1] * G * 0.01,
                                                            0
                                                        );
                                                for (x = 0; x < k; x += 1)
                                                    (S = i[x].a),
                                                        S.t.propType &&
                                                            ((M = i[x].s),
                                                            (I = M.getMult(
                                                                u[y].anIndexes[
                                                                    x
                                                                ],
                                                                s.a[x].s
                                                                    .totalChars
                                                            )),
                                                            (o !== 0 ||
                                                                e.j !== 0) &&
                                                                (this
                                                                    ._hasMaskedPath
                                                                    ? I.length
                                                                        ? (_ +=
                                                                              S
                                                                                  .t
                                                                                  .v *
                                                                              I[0])
                                                                        : (_ +=
                                                                              S
                                                                                  .t
                                                                                  .v *
                                                                              I)
                                                                    : I.length
                                                                      ? (o +=
                                                                            S.t
                                                                                .v *
                                                                            I[0])
                                                                      : (o +=
                                                                            S.t
                                                                                .v *
                                                                            I)));
                                                for (
                                                    e.strokeWidthAnim &&
                                                        (ae = e.sw || 0),
                                                        e.strokeColorAnim &&
                                                            (e.sc
                                                                ? (Q = [
                                                                      e.sc[0],
                                                                      e.sc[1],
                                                                      e.sc[2],
                                                                  ])
                                                                : (Q = [
                                                                      0, 0, 0,
                                                                  ])),
                                                        e.fillColorAnim &&
                                                            e.fc &&
                                                            (J = [
                                                                e.fc[0],
                                                                e.fc[1],
                                                                e.fc[2],
                                                            ]),
                                                        x = 0;
                                                    x < k;
                                                    x += 1
                                                )
                                                    (S = i[x].a),
                                                        S.a.propType &&
                                                            ((M = i[x].s),
                                                            (I = M.getMult(
                                                                u[y].anIndexes[
                                                                    x
                                                                ],
                                                                s.a[x].s
                                                                    .totalChars
                                                            )),
                                                            I.length
                                                                ? a.translate(
                                                                      -S.a
                                                                          .v[0] *
                                                                          I[0],
                                                                      -S.a
                                                                          .v[1] *
                                                                          I[1],
                                                                      S.a.v[2] *
                                                                          I[2]
                                                                  )
                                                                : a.translate(
                                                                      -S.a
                                                                          .v[0] *
                                                                          I,
                                                                      -S.a
                                                                          .v[1] *
                                                                          I,
                                                                      S.a.v[2] *
                                                                          I
                                                                  ));
                                                for (x = 0; x < k; x += 1)
                                                    (S = i[x].a),
                                                        S.s.propType &&
                                                            ((M = i[x].s),
                                                            (I = M.getMult(
                                                                u[y].anIndexes[
                                                                    x
                                                                ],
                                                                s.a[x].s
                                                                    .totalChars
                                                            )),
                                                            I.length
                                                                ? a.scale(
                                                                      1 +
                                                                          (S.s
                                                                              .v[0] -
                                                                              1) *
                                                                              I[0],
                                                                      1 +
                                                                          (S.s
                                                                              .v[1] -
                                                                              1) *
                                                                              I[1],
                                                                      1
                                                                  )
                                                                : a.scale(
                                                                      1 +
                                                                          (S.s
                                                                              .v[0] -
                                                                              1) *
                                                                              I,
                                                                      1 +
                                                                          (S.s
                                                                              .v[1] -
                                                                              1) *
                                                                              I,
                                                                      1
                                                                  ));
                                                for (x = 0; x < k; x += 1) {
                                                    if (
                                                        ((S = i[x].a),
                                                        (M = i[x].s),
                                                        (I = M.getMult(
                                                            u[y].anIndexes[x],
                                                            s.a[x].s.totalChars
                                                        )),
                                                        S.sk.propType &&
                                                            (I.length
                                                                ? a.skewFromAxis(
                                                                      -S.sk.v *
                                                                          I[0],
                                                                      S.sa.v *
                                                                          I[1]
                                                                  )
                                                                : a.skewFromAxis(
                                                                      -S.sk.v *
                                                                          I,
                                                                      S.sa.v * I
                                                                  )),
                                                        S.r.propType &&
                                                            (I.length
                                                                ? a.rotateZ(
                                                                      -S.r.v *
                                                                          I[2]
                                                                  )
                                                                : a.rotateZ(
                                                                      -S.r.v * I
                                                                  )),
                                                        S.ry.propType &&
                                                            (I.length
                                                                ? a.rotateY(
                                                                      S.ry.v *
                                                                          I[1]
                                                                  )
                                                                : a.rotateY(
                                                                      S.ry.v * I
                                                                  )),
                                                        S.rx.propType &&
                                                            (I.length
                                                                ? a.rotateX(
                                                                      S.rx.v *
                                                                          I[0]
                                                                  )
                                                                : a.rotateX(
                                                                      S.rx.v * I
                                                                  )),
                                                        S.o.propType &&
                                                            (I.length
                                                                ? (re +=
                                                                      (S.o.v *
                                                                          I[0] -
                                                                          re) *
                                                                      I[0])
                                                                : (re +=
                                                                      (S.o.v *
                                                                          I -
                                                                          re) *
                                                                      I)),
                                                        e.strokeWidthAnim &&
                                                            S.sw.propType &&
                                                            (I.length
                                                                ? (ae +=
                                                                      S.sw.v *
                                                                      I[0])
                                                                : (ae +=
                                                                      S.sw.v *
                                                                      I)),
                                                        e.strokeColorAnim &&
                                                            S.sc.propType)
                                                    )
                                                        for (
                                                            N = 0;
                                                            N < 3;
                                                            N += 1
                                                        )
                                                            I.length
                                                                ? (Q[N] +=
                                                                      (S.sc.v[
                                                                          N
                                                                      ] -
                                                                          Q[
                                                                              N
                                                                          ]) *
                                                                      I[0])
                                                                : (Q[N] +=
                                                                      (S.sc.v[
                                                                          N
                                                                      ] -
                                                                          Q[
                                                                              N
                                                                          ]) *
                                                                      I);
                                                    if (
                                                        e.fillColorAnim &&
                                                        e.fc
                                                    ) {
                                                        if (S.fc.propType)
                                                            for (
                                                                N = 0;
                                                                N < 3;
                                                                N += 1
                                                            )
                                                                I.length
                                                                    ? (J[N] +=
                                                                          (S.fc
                                                                              .v[
                                                                              N
                                                                          ] -
                                                                              J[
                                                                                  N
                                                                              ]) *
                                                                          I[0])
                                                                    : (J[N] +=
                                                                          (S.fc
                                                                              .v[
                                                                              N
                                                                          ] -
                                                                              J[
                                                                                  N
                                                                              ]) *
                                                                          I);
                                                        S.fh.propType &&
                                                            (I.length
                                                                ? (J =
                                                                      addHueToRGB(
                                                                          J,
                                                                          S.fh
                                                                              .v *
                                                                              I[0]
                                                                      ))
                                                                : (J =
                                                                      addHueToRGB(
                                                                          J,
                                                                          S.fh
                                                                              .v *
                                                                              I
                                                                      ))),
                                                            S.fs.propType &&
                                                                (I.length
                                                                    ? (J =
                                                                          addSaturationToRGB(
                                                                              J,
                                                                              S
                                                                                  .fs
                                                                                  .v *
                                                                                  I[0]
                                                                          ))
                                                                    : (J =
                                                                          addSaturationToRGB(
                                                                              J,
                                                                              S
                                                                                  .fs
                                                                                  .v *
                                                                                  I
                                                                          ))),
                                                            S.fb.propType &&
                                                                (I.length
                                                                    ? (J =
                                                                          addBrightnessToRGB(
                                                                              J,
                                                                              S
                                                                                  .fb
                                                                                  .v *
                                                                                  I[0]
                                                                          ))
                                                                    : (J =
                                                                          addBrightnessToRGB(
                                                                              J,
                                                                              S
                                                                                  .fb
                                                                                  .v *
                                                                                  I
                                                                          )));
                                                    }
                                                }
                                                for (x = 0; x < k; x += 1)
                                                    (S = i[x].a),
                                                        S.p.propType &&
                                                            ((M = i[x].s),
                                                            (I = M.getMult(
                                                                u[y].anIndexes[
                                                                    x
                                                                ],
                                                                s.a[x].s
                                                                    .totalChars
                                                            )),
                                                            this._hasMaskedPath
                                                                ? I.length
                                                                    ? a.translate(
                                                                          0,
                                                                          S.p
                                                                              .v[1] *
                                                                              I[0],
                                                                          -S.p
                                                                              .v[2] *
                                                                              I[1]
                                                                      )
                                                                    : a.translate(
                                                                          0,
                                                                          S.p
                                                                              .v[1] *
                                                                              I,
                                                                          -S.p
                                                                              .v[2] *
                                                                              I
                                                                      )
                                                                : I.length
                                                                  ? a.translate(
                                                                        S.p
                                                                            .v[0] *
                                                                            I[0],
                                                                        S.p
                                                                            .v[1] *
                                                                            I[1],
                                                                        -S.p
                                                                            .v[2] *
                                                                            I[2]
                                                                    )
                                                                  : a.translate(
                                                                        S.p
                                                                            .v[0] *
                                                                            I,
                                                                        S.p
                                                                            .v[1] *
                                                                            I,
                                                                        -S.p
                                                                            .v[2] *
                                                                            I
                                                                    ));
                                                if (
                                                    (e.strokeWidthAnim &&
                                                        (le = ae < 0 ? 0 : ae),
                                                    e.strokeColorAnim &&
                                                        (ce =
                                                            'rgb(' +
                                                            Math.round(
                                                                Q[0] * 255
                                                            ) +
                                                            ',' +
                                                            Math.round(
                                                                Q[1] * 255
                                                            ) +
                                                            ',' +
                                                            Math.round(
                                                                Q[2] * 255
                                                            ) +
                                                            ')'),
                                                    e.fillColorAnim &&
                                                        e.fc &&
                                                        (fe =
                                                            'rgb(' +
                                                            Math.round(
                                                                J[0] * 255
                                                            ) +
                                                            ',' +
                                                            Math.round(
                                                                J[1] * 255
                                                            ) +
                                                            ',' +
                                                            Math.round(
                                                                J[2] * 255
                                                            ) +
                                                            ')'),
                                                    this._hasMaskedPath)
                                                ) {
                                                    if (
                                                        (a.translate(0, -e.ls),
                                                        a.translate(
                                                            0,
                                                            r[1] * G * 0.01 + f,
                                                            0
                                                        ),
                                                        this._pathData.p.v)
                                                    ) {
                                                        L =
                                                            (d.point[1] -
                                                                g.point[1]) /
                                                            (d.point[0] -
                                                                g.point[0]);
                                                        var ee =
                                                            (Math.atan(L) *
                                                                180) /
                                                            Math.PI;
                                                        d.point[0] <
                                                            g.point[0] &&
                                                            (ee += 180),
                                                            a.rotate(
                                                                (-ee *
                                                                    Math.PI) /
                                                                    180
                                                            );
                                                    }
                                                    a.translate(H, X, 0),
                                                        (_ -=
                                                            r[0] *
                                                            u[y].an *
                                                            0.005),
                                                        u[y + 1] &&
                                                            O !==
                                                                u[y + 1].ind &&
                                                            ((_ += u[y].an / 2),
                                                            (_ +=
                                                                e.tr *
                                                                0.001 *
                                                                e.finalSize));
                                                } else {
                                                    switch (
                                                        (a.translate(o, f, 0),
                                                        e.ps &&
                                                            a.translate(
                                                                e.ps[0],
                                                                e.ps[1] +
                                                                    e.ascent,
                                                                0
                                                            ),
                                                        e.j)
                                                    ) {
                                                        case 1:
                                                            a.translate(
                                                                u[y]
                                                                    .animatorJustifyOffset +
                                                                    e.justifyOffset +
                                                                    (e.boxWidth -
                                                                        e
                                                                            .lineWidths[
                                                                            u[y]
                                                                                .line
                                                                        ]),
                                                                0,
                                                                0
                                                            );
                                                            break;
                                                        case 2:
                                                            a.translate(
                                                                u[y]
                                                                    .animatorJustifyOffset +
                                                                    e.justifyOffset +
                                                                    (e.boxWidth -
                                                                        e
                                                                            .lineWidths[
                                                                            u[y]
                                                                                .line
                                                                        ]) /
                                                                        2,
                                                                0,
                                                                0
                                                            );
                                                            break;
                                                    }
                                                    a.translate(0, -e.ls),
                                                        a.translate($, 0, 0),
                                                        a.translate(
                                                            r[0] *
                                                                u[y].an *
                                                                0.005,
                                                            r[1] * G * 0.01,
                                                            0
                                                        ),
                                                        (o +=
                                                            u[y].l +
                                                            e.tr *
                                                                0.001 *
                                                                e.finalSize);
                                                }
                                                n === 'html'
                                                    ? (oe = a.toCSS())
                                                    : n === 'svg'
                                                      ? (oe = a.to2dCSS())
                                                      : (pe = [
                                                            a.props[0],
                                                            a.props[1],
                                                            a.props[2],
                                                            a.props[3],
                                                            a.props[4],
                                                            a.props[5],
                                                            a.props[6],
                                                            a.props[7],
                                                            a.props[8],
                                                            a.props[9],
                                                            a.props[10],
                                                            a.props[11],
                                                            a.props[12],
                                                            a.props[13],
                                                            a.props[14],
                                                            a.props[15],
                                                        ]),
                                                    (ue = re);
                                            }
                                            l <= y
                                                ? ((R = new LetterProps(
                                                      ue,
                                                      le,
                                                      ce,
                                                      fe,
                                                      oe,
                                                      pe
                                                  )),
                                                  this.renderedLetters.push(R),
                                                  (l += 1),
                                                  (this.lettersChangedFlag =
                                                      !0))
                                                : ((R =
                                                      this.renderedLetters[y]),
                                                  (this.lettersChangedFlag =
                                                      R.update(
                                                          ue,
                                                          le,
                                                          ce,
                                                          fe,
                                                          oe,
                                                          pe
                                                      ) ||
                                                      this.lettersChangedFlag));
                                        }
                                    }
                                }),
                            (TextAnimatorProperty.prototype.getValue =
                                function () {
                                    this._elem.globalData.frameId !==
                                        this._frameId &&
                                        ((this._frameId =
                                            this._elem.globalData.frameId),
                                        this.iterateDynamicProperties());
                                }),
                            (TextAnimatorProperty.prototype.mHelper =
                                new Matrix()),
                            (TextAnimatorProperty.prototype.defaultPropsArray =
                                []),
                            extendPrototype(
                                [DynamicPropertyContainer],
                                TextAnimatorProperty
                            );
                        function ITextElement() {}
                        (ITextElement.prototype.initElement = function (
                            e,
                            t,
                            r
                        ) {
                            (this.lettersChangedFlag = !0),
                                this.initFrame(),
                                this.initBaseData(e, t, r),
                                (this.textProperty = new TextProperty(
                                    this,
                                    e.t,
                                    this.dynamicProperties
                                )),
                                (this.textAnimator = new TextAnimatorProperty(
                                    e.t,
                                    this.renderType,
                                    this
                                )),
                                this.initTransform(e, t, r),
                                this.initHierarchy(),
                                this.initRenderable(),
                                this.initRendererElement(),
                                this.createContainerElements(),
                                this.createRenderableComponents(),
                                this.createContent(),
                                this.hide(),
                                this.textAnimator.searchProperties(
                                    this.dynamicProperties
                                );
                        }),
                            (ITextElement.prototype.prepareFrame = function (
                                e
                            ) {
                                (this._mdf = !1),
                                    this.prepareRenderableFrame(e),
                                    this.prepareProperties(e, this.isInRange);
                            }),
                            (ITextElement.prototype.createPathShape = function (
                                e,
                                t
                            ) {
                                var r,
                                    i = t.length,
                                    s,
                                    a = '';
                                for (r = 0; r < i; r += 1)
                                    t[r].ty === 'sh' &&
                                        ((s = t[r].ks.k),
                                        (a += buildShapeString(
                                            s,
                                            s.i.length,
                                            !0,
                                            e
                                        )));
                                return a;
                            }),
                            (ITextElement.prototype.updateDocumentData =
                                function (e, t) {
                                    this.textProperty.updateDocumentData(e, t);
                                }),
                            (ITextElement.prototype.canResizeFont = function (
                                e
                            ) {
                                this.textProperty.canResizeFont(e);
                            }),
                            (ITextElement.prototype.setMinimumFontSize =
                                function (e) {
                                    this.textProperty.setMinimumFontSize(e);
                                }),
                            (ITextElement.prototype.applyTextPropertiesToMatrix =
                                function (e, t, r, i, s) {
                                    switch (
                                        (e.ps &&
                                            t.translate(
                                                e.ps[0],
                                                e.ps[1] + e.ascent,
                                                0
                                            ),
                                        t.translate(0, -e.ls, 0),
                                        e.j)
                                    ) {
                                        case 1:
                                            t.translate(
                                                e.justifyOffset +
                                                    (e.boxWidth -
                                                        e.lineWidths[r]),
                                                0,
                                                0
                                            );
                                            break;
                                        case 2:
                                            t.translate(
                                                e.justifyOffset +
                                                    (e.boxWidth -
                                                        e.lineWidths[r]) /
                                                        2,
                                                0,
                                                0
                                            );
                                            break;
                                    }
                                    t.translate(i, s, 0);
                                }),
                            (ITextElement.prototype.buildColor = function (e) {
                                return (
                                    'rgb(' +
                                    Math.round(e[0] * 255) +
                                    ',' +
                                    Math.round(e[1] * 255) +
                                    ',' +
                                    Math.round(e[2] * 255) +
                                    ')'
                                );
                            }),
                            (ITextElement.prototype.emptyProp =
                                new LetterProps()),
                            (ITextElement.prototype.destroy = function () {}),
                            (ITextElement.prototype.validateText = function () {
                                (this.textProperty._mdf ||
                                    this.textProperty._isFirstFrame) &&
                                    (this.buildNewText(),
                                    (this.textProperty._isFirstFrame = !1),
                                    (this.textProperty._mdf = !1));
                            });
                        var emptyShapeData = { shapes: [] };
                        function SVGTextLottieElement(e, t, r) {
                            (this.textSpans = []),
                                (this.renderType = 'svg'),
                                this.initElement(e, t, r);
                        }
                        extendPrototype(
                            [
                                BaseElement,
                                TransformElement,
                                SVGBaseElement,
                                HierarchyElement,
                                FrameElement,
                                RenderableDOMElement,
                                ITextElement,
                            ],
                            SVGTextLottieElement
                        ),
                            (SVGTextLottieElement.prototype.createContent =
                                function () {
                                    this.data.singleShape &&
                                        !this.globalData.fontManager.chars &&
                                        (this.textContainer = createNS('text'));
                                }),
                            (SVGTextLottieElement.prototype.buildTextContents =
                                function (e) {
                                    for (
                                        var t = 0, r = e.length, i = [], s = '';
                                        t < r;

                                    )
                                        e[t] === '\r' || e[t] === ''
                                            ? (i.push(s), (s = ''))
                                            : (s += e[t]),
                                            (t += 1);
                                    return i.push(s), i;
                                }),
                            (SVGTextLottieElement.prototype.buildShapeData =
                                function (e, t) {
                                    if (e.shapes && e.shapes.length) {
                                        var r = e.shapes[0];
                                        if (r.it) {
                                            var i = r.it[r.it.length - 1];
                                            i.s &&
                                                ((i.s.k[0] = t),
                                                (i.s.k[1] = t));
                                        }
                                    }
                                    return e;
                                }),
                            (SVGTextLottieElement.prototype.buildNewText =
                                function () {
                                    this.addDynamicProperty(this);
                                    var e,
                                        t,
                                        r = this.textProperty.currentData;
                                    (this.renderedLetters = createSizedArray(
                                        r ? r.l.length : 0
                                    )),
                                        r.fc
                                            ? this.layerElement.setAttribute(
                                                  'fill',
                                                  this.buildColor(r.fc)
                                              )
                                            : this.layerElement.setAttribute(
                                                  'fill',
                                                  'rgba(0,0,0,0)'
                                              ),
                                        r.sc &&
                                            (this.layerElement.setAttribute(
                                                'stroke',
                                                this.buildColor(r.sc)
                                            ),
                                            this.layerElement.setAttribute(
                                                'stroke-width',
                                                r.sw
                                            )),
                                        this.layerElement.setAttribute(
                                            'font-size',
                                            r.finalSize
                                        );
                                    var i =
                                        this.globalData.fontManager.getFontByName(
                                            r.f
                                        );
                                    if (i.fClass)
                                        this.layerElement.setAttribute(
                                            'class',
                                            i.fClass
                                        );
                                    else {
                                        this.layerElement.setAttribute(
                                            'font-family',
                                            i.fFamily
                                        );
                                        var s = r.fWeight,
                                            a = r.fStyle;
                                        this.layerElement.setAttribute(
                                            'font-style',
                                            a
                                        ),
                                            this.layerElement.setAttribute(
                                                'font-weight',
                                                s
                                            );
                                    }
                                    this.layerElement.setAttribute(
                                        'aria-label',
                                        r.t
                                    );
                                    var n = r.l || [],
                                        l = !!this.globalData.fontManager.chars;
                                    t = n.length;
                                    var o,
                                        f = this.mHelper,
                                        y = '',
                                        E = this.data.singleShape,
                                        u = 0,
                                        b = 0,
                                        _ = !0,
                                        d = r.tr * 0.001 * r.finalSize;
                                    if (E && !l && !r.sz) {
                                        var C = this.textContainer,
                                            c = 'start';
                                        switch (r.j) {
                                            case 1:
                                                c = 'end';
                                                break;
                                            case 2:
                                                c = 'middle';
                                                break;
                                            default:
                                                c = 'start';
                                                break;
                                        }
                                        C.setAttribute('text-anchor', c),
                                            C.setAttribute('letter-spacing', d);
                                        var m = this.buildTextContents(
                                            r.finalText
                                        );
                                        for (
                                            t = m.length,
                                                b = r.ps
                                                    ? r.ps[1] + r.ascent
                                                    : 0,
                                                e = 0;
                                            e < t;
                                            e += 1
                                        )
                                            (o =
                                                this.textSpans[e].span ||
                                                createNS('tspan')),
                                                (o.textContent = m[e]),
                                                o.setAttribute('x', 0),
                                                o.setAttribute('y', b),
                                                (o.style.display = 'inherit'),
                                                C.appendChild(o),
                                                this.textSpans[e] ||
                                                    (this.textSpans[e] = {
                                                        span: null,
                                                        glyph: null,
                                                    }),
                                                (this.textSpans[e].span = o),
                                                (b += r.finalLineHeight);
                                        this.layerElement.appendChild(C);
                                    } else {
                                        var p = this.textSpans.length,
                                            g;
                                        for (e = 0; e < t; e += 1) {
                                            if (
                                                (this.textSpans[e] ||
                                                    (this.textSpans[e] = {
                                                        span: null,
                                                        childSpan: null,
                                                        glyph: null,
                                                    }),
                                                !l || !E || e === 0)
                                            ) {
                                                if (
                                                    ((o =
                                                        p > e
                                                            ? this.textSpans[e]
                                                                  .span
                                                            : createNS(
                                                                  l
                                                                      ? 'g'
                                                                      : 'text'
                                                              )),
                                                    p <= e)
                                                ) {
                                                    if (
                                                        (o.setAttribute(
                                                            'stroke-linecap',
                                                            'butt'
                                                        ),
                                                        o.setAttribute(
                                                            'stroke-linejoin',
                                                            'round'
                                                        ),
                                                        o.setAttribute(
                                                            'stroke-miterlimit',
                                                            '4'
                                                        ),
                                                        (this.textSpans[
                                                            e
                                                        ].span = o),
                                                        l)
                                                    ) {
                                                        var P = createNS('g');
                                                        o.appendChild(P),
                                                            (this.textSpans[
                                                                e
                                                            ].childSpan = P);
                                                    }
                                                    (this.textSpans[e].span =
                                                        o),
                                                        this.layerElement.appendChild(
                                                            o
                                                        );
                                                }
                                                o.style.display = 'inherit';
                                            }
                                            if (
                                                (f.reset(),
                                                E &&
                                                    (n[e].n &&
                                                        ((u = -d),
                                                        (b += r.yOffset),
                                                        (b += _ ? 1 : 0),
                                                        (_ = !1)),
                                                    this.applyTextPropertiesToMatrix(
                                                        r,
                                                        f,
                                                        n[e].line,
                                                        u,
                                                        b
                                                    ),
                                                    (u += n[e].l || 0),
                                                    (u += d)),
                                                l)
                                            ) {
                                                g =
                                                    this.globalData.fontManager.getCharData(
                                                        r.finalText[e],
                                                        i.fStyle,
                                                        this.globalData.fontManager.getFontByName(
                                                            r.f
                                                        ).fFamily
                                                    );
                                                var A;
                                                if (g.t === 1)
                                                    A = new SVGCompElement(
                                                        g.data,
                                                        this.globalData,
                                                        this
                                                    );
                                                else {
                                                    var F = emptyShapeData;
                                                    g.data &&
                                                        g.data.shapes &&
                                                        (F =
                                                            this.buildShapeData(
                                                                g.data,
                                                                r.finalSize
                                                            )),
                                                        (A =
                                                            new SVGShapeElement(
                                                                F,
                                                                this.globalData,
                                                                this
                                                            ));
                                                }
                                                if (this.textSpans[e].glyph) {
                                                    var T =
                                                        this.textSpans[e].glyph;
                                                    this.textSpans[
                                                        e
                                                    ].childSpan.removeChild(
                                                        T.layerElement
                                                    ),
                                                        T.destroy();
                                                }
                                                (this.textSpans[e].glyph = A),
                                                    (A._debug = !0),
                                                    A.prepareFrame(0),
                                                    A.renderFrame(),
                                                    this.textSpans[
                                                        e
                                                    ].childSpan.appendChild(
                                                        A.layerElement
                                                    ),
                                                    g.t === 1 &&
                                                        this.textSpans[
                                                            e
                                                        ].childSpan.setAttribute(
                                                            'transform',
                                                            'scale(' +
                                                                r.finalSize /
                                                                    100 +
                                                                ',' +
                                                                r.finalSize /
                                                                    100 +
                                                                ')'
                                                        );
                                            } else
                                                E &&
                                                    o.setAttribute(
                                                        'transform',
                                                        'translate(' +
                                                            f.props[12] +
                                                            ',' +
                                                            f.props[13] +
                                                            ')'
                                                    ),
                                                    (o.textContent = n[e].val),
                                                    o.setAttributeNS(
                                                        'http://www.w3.org/XML/1998/namespace',
                                                        'xml:space',
                                                        'preserve'
                                                    );
                                        }
                                        E && o && o.setAttribute('d', y);
                                    }
                                    for (; e < this.textSpans.length; )
                                        (this.textSpans[e].span.style.display =
                                            'none'),
                                            (e += 1);
                                    this._sizeChanged = !0;
                                }),
                            (SVGTextLottieElement.prototype.sourceRectAtTime =
                                function () {
                                    if (
                                        (this.prepareFrame(
                                            this.comp.renderedFrame -
                                                this.data.st
                                        ),
                                        this.renderInnerContent(),
                                        this._sizeChanged)
                                    ) {
                                        this._sizeChanged = !1;
                                        var e = this.layerElement.getBBox();
                                        this.bbox = {
                                            top: e.y,
                                            left: e.x,
                                            width: e.width,
                                            height: e.height,
                                        };
                                    }
                                    return this.bbox;
                                }),
                            (SVGTextLottieElement.prototype.getValue =
                                function () {
                                    var e,
                                        t = this.textSpans.length,
                                        r;
                                    for (
                                        this.renderedFrame =
                                            this.comp.renderedFrame,
                                            e = 0;
                                        e < t;
                                        e += 1
                                    )
                                        (r = this.textSpans[e].glyph),
                                            r &&
                                                (r.prepareFrame(
                                                    this.comp.renderedFrame -
                                                        this.data.st
                                                ),
                                                r._mdf && (this._mdf = !0));
                                }),
                            (SVGTextLottieElement.prototype.renderInnerContent =
                                function () {
                                    if (
                                        (this.validateText(),
                                        (!this.data.singleShape || this._mdf) &&
                                            (this.textAnimator.getMeasures(
                                                this.textProperty.currentData,
                                                this.lettersChangedFlag
                                            ),
                                            this.lettersChangedFlag ||
                                                this.textAnimator
                                                    .lettersChangedFlag))
                                    ) {
                                        this._sizeChanged = !0;
                                        var e,
                                            t,
                                            r =
                                                this.textAnimator
                                                    .renderedLetters,
                                            i = this.textProperty.currentData.l;
                                        t = i.length;
                                        var s, a, n;
                                        for (e = 0; e < t; e += 1)
                                            i[e].n ||
                                                ((s = r[e]),
                                                (a = this.textSpans[e].span),
                                                (n = this.textSpans[e].glyph),
                                                n && n.renderFrame(),
                                                s._mdf.m &&
                                                    a.setAttribute(
                                                        'transform',
                                                        s.m
                                                    ),
                                                s._mdf.o &&
                                                    a.setAttribute(
                                                        'opacity',
                                                        s.o
                                                    ),
                                                s._mdf.sw &&
                                                    a.setAttribute(
                                                        'stroke-width',
                                                        s.sw
                                                    ),
                                                s._mdf.sc &&
                                                    a.setAttribute(
                                                        'stroke',
                                                        s.sc
                                                    ),
                                                s._mdf.fc &&
                                                    a.setAttribute(
                                                        'fill',
                                                        s.fc
                                                    ));
                                    }
                                });
                        function ISolidElement(e, t, r) {
                            this.initElement(e, t, r);
                        }
                        extendPrototype([IImageElement], ISolidElement),
                            (ISolidElement.prototype.createContent =
                                function () {
                                    var e = createNS('rect');
                                    e.setAttribute('width', this.data.sw),
                                        e.setAttribute('height', this.data.sh),
                                        e.setAttribute('fill', this.data.sc),
                                        this.layerElement.appendChild(e);
                                });
                        function NullElement(e, t, r) {
                            this.initFrame(),
                                this.initBaseData(e, t, r),
                                this.initFrame(),
                                this.initTransform(e, t, r),
                                this.initHierarchy();
                        }
                        (NullElement.prototype.prepareFrame = function (e) {
                            this.prepareProperties(e, !0);
                        }),
                            (NullElement.prototype.renderFrame =
                                function () {}),
                            (NullElement.prototype.getBaseElement =
                                function () {
                                    return null;
                                }),
                            (NullElement.prototype.destroy = function () {}),
                            (NullElement.prototype.sourceRectAtTime =
                                function () {}),
                            (NullElement.prototype.hide = function () {}),
                            extendPrototype(
                                [
                                    BaseElement,
                                    TransformElement,
                                    HierarchyElement,
                                    FrameElement,
                                ],
                                NullElement
                            );
                        function SVGRendererBase() {}
                        extendPrototype([BaseRenderer], SVGRendererBase),
                            (SVGRendererBase.prototype.createNull = function (
                                e
                            ) {
                                return new NullElement(
                                    e,
                                    this.globalData,
                                    this
                                );
                            }),
                            (SVGRendererBase.prototype.createShape = function (
                                e
                            ) {
                                return new SVGShapeElement(
                                    e,
                                    this.globalData,
                                    this
                                );
                            }),
                            (SVGRendererBase.prototype.createText = function (
                                e
                            ) {
                                return new SVGTextLottieElement(
                                    e,
                                    this.globalData,
                                    this
                                );
                            }),
                            (SVGRendererBase.prototype.createImage = function (
                                e
                            ) {
                                return new IImageElement(
                                    e,
                                    this.globalData,
                                    this
                                );
                            }),
                            (SVGRendererBase.prototype.createSolid = function (
                                e
                            ) {
                                return new ISolidElement(
                                    e,
                                    this.globalData,
                                    this
                                );
                            }),
                            (SVGRendererBase.prototype.configAnimation =
                                function (e) {
                                    this.svgElement.setAttribute(
                                        'xmlns',
                                        'http://www.w3.org/2000/svg'
                                    ),
                                        this.svgElement.setAttribute(
                                            'xmlns:xlink',
                                            'http://www.w3.org/1999/xlink'
                                        ),
                                        this.renderConfig.viewBoxSize
                                            ? this.svgElement.setAttribute(
                                                  'viewBox',
                                                  this.renderConfig.viewBoxSize
                                              )
                                            : this.svgElement.setAttribute(
                                                  'viewBox',
                                                  '0 0 ' + e.w + ' ' + e.h
                                              ),
                                        this.renderConfig.viewBoxOnly ||
                                            (this.svgElement.setAttribute(
                                                'width',
                                                e.w
                                            ),
                                            this.svgElement.setAttribute(
                                                'height',
                                                e.h
                                            ),
                                            (this.svgElement.style.width =
                                                '100%'),
                                            (this.svgElement.style.height =
                                                '100%'),
                                            (this.svgElement.style.transform =
                                                'translate3d(0,0,0)'),
                                            (this.svgElement.style.contentVisibility =
                                                this.renderConfig.contentVisibility)),
                                        this.renderConfig.width &&
                                            this.svgElement.setAttribute(
                                                'width',
                                                this.renderConfig.width
                                            ),
                                        this.renderConfig.height &&
                                            this.svgElement.setAttribute(
                                                'height',
                                                this.renderConfig.height
                                            ),
                                        this.renderConfig.className &&
                                            this.svgElement.setAttribute(
                                                'class',
                                                this.renderConfig.className
                                            ),
                                        this.renderConfig.id &&
                                            this.svgElement.setAttribute(
                                                'id',
                                                this.renderConfig.id
                                            ),
                                        this.renderConfig.focusable !==
                                            void 0 &&
                                            this.svgElement.setAttribute(
                                                'focusable',
                                                this.renderConfig.focusable
                                            ),
                                        this.svgElement.setAttribute(
                                            'preserveAspectRatio',
                                            this.renderConfig
                                                .preserveAspectRatio
                                        ),
                                        this.animationItem.wrapper.appendChild(
                                            this.svgElement
                                        );
                                    var t = this.globalData.defs;
                                    this.setupGlobalData(e, t),
                                        (this.globalData.progressiveLoad =
                                            this.renderConfig.progressiveLoad),
                                        (this.data = e);
                                    var r = createNS('clipPath'),
                                        i = createNS('rect');
                                    i.setAttribute('width', e.w),
                                        i.setAttribute('height', e.h),
                                        i.setAttribute('x', 0),
                                        i.setAttribute('y', 0);
                                    var s = createElementID();
                                    r.setAttribute('id', s),
                                        r.appendChild(i),
                                        this.layerElement.setAttribute(
                                            'clip-path',
                                            'url(' +
                                                getLocationHref() +
                                                '#' +
                                                s +
                                                ')'
                                        ),
                                        t.appendChild(r),
                                        (this.layers = e.layers),
                                        (this.elements = createSizedArray(
                                            e.layers.length
                                        ));
                                }),
                            (SVGRendererBase.prototype.destroy = function () {
                                this.animationItem.wrapper &&
                                    (this.animationItem.wrapper.innerText = ''),
                                    (this.layerElement = null),
                                    (this.globalData.defs = null);
                                var e,
                                    t = this.layers ? this.layers.length : 0;
                                for (e = 0; e < t; e += 1)
                                    this.elements[e] &&
                                        this.elements[e].destroy &&
                                        this.elements[e].destroy();
                                (this.elements.length = 0),
                                    (this.destroyed = !0),
                                    (this.animationItem = null);
                            }),
                            (SVGRendererBase.prototype.updateContainerSize =
                                function () {}),
                            (SVGRendererBase.prototype.findIndexByInd =
                                function (e) {
                                    var t = 0,
                                        r = this.layers.length;
                                    for (t = 0; t < r; t += 1)
                                        if (this.layers[t].ind === e) return t;
                                    return -1;
                                }),
                            (SVGRendererBase.prototype.buildItem = function (
                                e
                            ) {
                                var t = this.elements;
                                if (!(t[e] || this.layers[e].ty === 99)) {
                                    t[e] = !0;
                                    var r = this.createItem(this.layers[e]);
                                    if (
                                        ((t[e] = r),
                                        getExpressionsPlugin() &&
                                            (this.layers[e].ty === 0 &&
                                                this.globalData.projectInterface.registerComposition(
                                                    r
                                                ),
                                            r.initExpressions()),
                                        this.appendElementInPos(r, e),
                                        this.layers[e].tt)
                                    ) {
                                        var i =
                                            'tp' in this.layers[e]
                                                ? this.findIndexByInd(
                                                      this.layers[e].tp
                                                  )
                                                : e - 1;
                                        if (i === -1) return;
                                        if (
                                            !this.elements[i] ||
                                            this.elements[i] === !0
                                        )
                                            this.buildItem(i),
                                                this.addPendingElement(r);
                                        else {
                                            var s = t[i],
                                                a = s.getMatte(
                                                    this.layers[e].tt
                                                );
                                            r.setMatte(a);
                                        }
                                    }
                                }
                            }),
                            (SVGRendererBase.prototype.checkPendingElements =
                                function () {
                                    for (; this.pendingElements.length; ) {
                                        var e = this.pendingElements.pop();
                                        if ((e.checkParenting(), e.data.tt))
                                            for (
                                                var t = 0,
                                                    r = this.elements.length;
                                                t < r;

                                            ) {
                                                if (this.elements[t] === e) {
                                                    var i =
                                                            'tp' in e.data
                                                                ? this.findIndexByInd(
                                                                      e.data.tp
                                                                  )
                                                                : t - 1,
                                                        s = this.elements[i],
                                                        a = s.getMatte(
                                                            this.layers[t].tt
                                                        );
                                                    e.setMatte(a);
                                                    break;
                                                }
                                                t += 1;
                                            }
                                    }
                                }),
                            (SVGRendererBase.prototype.renderFrame = function (
                                e
                            ) {
                                if (
                                    !(
                                        this.renderedFrame === e ||
                                        this.destroyed
                                    )
                                ) {
                                    e === null
                                        ? (e = this.renderedFrame)
                                        : (this.renderedFrame = e),
                                        (this.globalData.frameNum = e),
                                        (this.globalData.frameId += 1),
                                        (this.globalData.projectInterface.currentFrame =
                                            e),
                                        (this.globalData._mdf = !1);
                                    var t,
                                        r = this.layers.length;
                                    for (
                                        this.completeLayers ||
                                            this.checkLayers(e),
                                            t = r - 1;
                                        t >= 0;
                                        t -= 1
                                    )
                                        (this.completeLayers ||
                                            this.elements[t]) &&
                                            this.elements[t].prepareFrame(
                                                e - this.layers[t].st
                                            );
                                    if (this.globalData._mdf)
                                        for (t = 0; t < r; t += 1)
                                            (this.completeLayers ||
                                                this.elements[t]) &&
                                                this.elements[t].renderFrame();
                                }
                            }),
                            (SVGRendererBase.prototype.appendElementInPos =
                                function (e, t) {
                                    var r = e.getBaseElement();
                                    if (r) {
                                        for (var i = 0, s; i < t; )
                                            this.elements[i] &&
                                                this.elements[i] !== !0 &&
                                                this.elements[
                                                    i
                                                ].getBaseElement() &&
                                                (s =
                                                    this.elements[
                                                        i
                                                    ].getBaseElement()),
                                                (i += 1);
                                        s
                                            ? this.layerElement.insertBefore(
                                                  r,
                                                  s
                                              )
                                            : this.layerElement.appendChild(r);
                                    }
                                }),
                            (SVGRendererBase.prototype.hide = function () {
                                this.layerElement.style.display = 'none';
                            }),
                            (SVGRendererBase.prototype.show = function () {
                                this.layerElement.style.display = 'block';
                            });
                        function ICompElement() {}
                        extendPrototype(
                            [
                                BaseElement,
                                TransformElement,
                                HierarchyElement,
                                FrameElement,
                                RenderableDOMElement,
                            ],
                            ICompElement
                        ),
                            (ICompElement.prototype.initElement = function (
                                e,
                                t,
                                r
                            ) {
                                this.initFrame(),
                                    this.initBaseData(e, t, r),
                                    this.initTransform(e, t, r),
                                    this.initRenderable(),
                                    this.initHierarchy(),
                                    this.initRendererElement(),
                                    this.createContainerElements(),
                                    this.createRenderableComponents(),
                                    (this.data.xt || !t.progressiveLoad) &&
                                        this.buildAllItems(),
                                    this.hide();
                            }),
                            (ICompElement.prototype.prepareFrame = function (
                                e
                            ) {
                                if (
                                    ((this._mdf = !1),
                                    this.prepareRenderableFrame(e),
                                    this.prepareProperties(e, this.isInRange),
                                    !(!this.isInRange && !this.data.xt))
                                ) {
                                    if (this.tm._placeholder)
                                        this.renderedFrame = e / this.data.sr;
                                    else {
                                        var t = this.tm.v;
                                        t === this.data.op &&
                                            (t = this.data.op - 1),
                                            (this.renderedFrame = t);
                                    }
                                    var r,
                                        i = this.elements.length;
                                    for (
                                        this.completeLayers ||
                                            this.checkLayers(
                                                this.renderedFrame
                                            ),
                                            r = i - 1;
                                        r >= 0;
                                        r -= 1
                                    )
                                        (this.completeLayers ||
                                            this.elements[r]) &&
                                            (this.elements[r].prepareFrame(
                                                this.renderedFrame -
                                                    this.layers[r].st
                                            ),
                                            this.elements[r]._mdf &&
                                                (this._mdf = !0));
                                }
                            }),
                            (ICompElement.prototype.renderInnerContent =
                                function () {
                                    var e,
                                        t = this.layers.length;
                                    for (e = 0; e < t; e += 1)
                                        (this.completeLayers ||
                                            this.elements[e]) &&
                                            this.elements[e].renderFrame();
                                }),
                            (ICompElement.prototype.setElements = function (e) {
                                this.elements = e;
                            }),
                            (ICompElement.prototype.getElements = function () {
                                return this.elements;
                            }),
                            (ICompElement.prototype.destroyElements =
                                function () {
                                    var e,
                                        t = this.layers.length;
                                    for (e = 0; e < t; e += 1)
                                        this.elements[e] &&
                                            this.elements[e].destroy();
                                }),
                            (ICompElement.prototype.destroy = function () {
                                this.destroyElements(),
                                    this.destroyBaseElement();
                            });
                        function SVGCompElement(e, t, r) {
                            (this.layers = e.layers),
                                (this.supports3d = !0),
                                (this.completeLayers = !1),
                                (this.pendingElements = []),
                                (this.elements = this.layers
                                    ? createSizedArray(this.layers.length)
                                    : []),
                                this.initElement(e, t, r),
                                (this.tm = e.tm
                                    ? PropertyFactory.getProp(
                                          this,
                                          e.tm,
                                          0,
                                          t.frameRate,
                                          this
                                      )
                                    : { _placeholder: !0 });
                        }
                        extendPrototype(
                            [SVGRendererBase, ICompElement, SVGBaseElement],
                            SVGCompElement
                        ),
                            (SVGCompElement.prototype.createComp = function (
                                e
                            ) {
                                return new SVGCompElement(
                                    e,
                                    this.globalData,
                                    this
                                );
                            });
                        function SVGRenderer(e, t) {
                            (this.animationItem = e),
                                (this.layers = null),
                                (this.renderedFrame = -1),
                                (this.svgElement = createNS('svg'));
                            var r = '';
                            if (t && t.title) {
                                var i = createNS('title'),
                                    s = createElementID();
                                i.setAttribute('id', s),
                                    (i.textContent = t.title),
                                    this.svgElement.appendChild(i),
                                    (r += s);
                            }
                            if (t && t.description) {
                                var a = createNS('desc'),
                                    n = createElementID();
                                a.setAttribute('id', n),
                                    (a.textContent = t.description),
                                    this.svgElement.appendChild(a),
                                    (r += ' ' + n);
                            }
                            r &&
                                this.svgElement.setAttribute(
                                    'aria-labelledby',
                                    r
                                );
                            var l = createNS('defs');
                            this.svgElement.appendChild(l);
                            var o = createNS('g');
                            this.svgElement.appendChild(o),
                                (this.layerElement = o),
                                (this.renderConfig = {
                                    preserveAspectRatio:
                                        (t && t.preserveAspectRatio) ||
                                        'xMidYMid meet',
                                    imagePreserveAspectRatio:
                                        (t && t.imagePreserveAspectRatio) ||
                                        'xMidYMid slice',
                                    contentVisibility:
                                        (t && t.contentVisibility) || 'visible',
                                    progressiveLoad:
                                        (t && t.progressiveLoad) || !1,
                                    hideOnTransparent: !(
                                        t && t.hideOnTransparent === !1
                                    ),
                                    viewBoxOnly: (t && t.viewBoxOnly) || !1,
                                    viewBoxSize: (t && t.viewBoxSize) || !1,
                                    className: (t && t.className) || '',
                                    id: (t && t.id) || '',
                                    focusable: t && t.focusable,
                                    filterSize: {
                                        width:
                                            (t &&
                                                t.filterSize &&
                                                t.filterSize.width) ||
                                            '100%',
                                        height:
                                            (t &&
                                                t.filterSize &&
                                                t.filterSize.height) ||
                                            '100%',
                                        x:
                                            (t &&
                                                t.filterSize &&
                                                t.filterSize.x) ||
                                            '0%',
                                        y:
                                            (t &&
                                                t.filterSize &&
                                                t.filterSize.y) ||
                                            '0%',
                                    },
                                    width: t && t.width,
                                    height: t && t.height,
                                    runExpressions:
                                        !t ||
                                        t.runExpressions === void 0 ||
                                        t.runExpressions,
                                }),
                                (this.globalData = {
                                    _mdf: !1,
                                    frameNum: -1,
                                    defs: l,
                                    renderConfig: this.renderConfig,
                                }),
                                (this.elements = []),
                                (this.pendingElements = []),
                                (this.destroyed = !1),
                                (this.rendererType = 'svg');
                        }
                        extendPrototype([SVGRendererBase], SVGRenderer),
                            (SVGRenderer.prototype.createComp = function (e) {
                                return new SVGCompElement(
                                    e,
                                    this.globalData,
                                    this
                                );
                            });
                        function ShapeTransformManager() {
                            (this.sequences = {}),
                                (this.sequenceList = []),
                                (this.transform_key_count = 0);
                        }
                        ShapeTransformManager.prototype = {
                            addTransformSequence: function (t) {
                                var r,
                                    i = t.length,
                                    s = '_';
                                for (r = 0; r < i; r += 1)
                                    s += t[r].transform.key + '_';
                                var a = this.sequences[s];
                                return (
                                    a ||
                                        ((a = {
                                            transforms: [].concat(t),
                                            finalTransform: new Matrix(),
                                            _mdf: !1,
                                        }),
                                        (this.sequences[s] = a),
                                        this.sequenceList.push(a)),
                                    a
                                );
                            },
                            processSequence: function (t, r) {
                                for (
                                    var i = 0, s = t.transforms.length, a = r;
                                    i < s && !r;

                                ) {
                                    if (t.transforms[i].transform.mProps._mdf) {
                                        a = !0;
                                        break;
                                    }
                                    i += 1;
                                }
                                if (a)
                                    for (
                                        t.finalTransform.reset(), i = s - 1;
                                        i >= 0;
                                        i -= 1
                                    )
                                        t.finalTransform.multiply(
                                            t.transforms[i].transform.mProps.v
                                        );
                                t._mdf = a;
                            },
                            processSequences: function (t) {
                                var r,
                                    i = this.sequenceList.length;
                                for (r = 0; r < i; r += 1)
                                    this.processSequence(
                                        this.sequenceList[r],
                                        t
                                    );
                            },
                            getNewKey: function () {
                                return (
                                    (this.transform_key_count += 1),
                                    '_' + this.transform_key_count
                                );
                            },
                        };
                        var lumaLoader = function () {
                            var t = '__lottie_element_luma_buffer',
                                r = null,
                                i = null,
                                s = null;
                            function a() {
                                var o = createNS('svg'),
                                    f = createNS('filter'),
                                    y = createNS('feColorMatrix');
                                return (
                                    f.setAttribute('id', t),
                                    y.setAttribute('type', 'matrix'),
                                    y.setAttribute(
                                        'color-interpolation-filters',
                                        'sRGB'
                                    ),
                                    y.setAttribute(
                                        'values',
                                        '0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0'
                                    ),
                                    f.appendChild(y),
                                    o.appendChild(f),
                                    o.setAttribute('id', t + '_svg'),
                                    featureSupport.svgLumaHidden &&
                                        (o.style.display = 'none'),
                                    o
                                );
                            }
                            function n() {
                                r ||
                                    ((s = a()),
                                    document.body.appendChild(s),
                                    (r = createTag('canvas')),
                                    (i = r.getContext('2d')),
                                    (i.filter = 'url(#' + t + ')'),
                                    (i.fillStyle = 'rgba(0,0,0,0)'),
                                    i.fillRect(0, 0, 1, 1));
                            }
                            function l(o) {
                                return (
                                    r || n(),
                                    (r.width = o.width),
                                    (r.height = o.height),
                                    (i.filter = 'url(#' + t + ')'),
                                    r
                                );
                            }
                            return { load: n, get: l };
                        };
                        function createCanvas(e, t) {
                            if (featureSupport.offscreenCanvas)
                                return new OffscreenCanvas(e, t);
                            var r = createTag('canvas');
                            return (r.width = e), (r.height = t), r;
                        }
                        var assetLoader = (function () {
                                return {
                                    loadLumaCanvas: lumaLoader.load,
                                    getLumaCanvas: lumaLoader.get,
                                    createCanvas,
                                };
                            })(),
                            registeredEffects = {};
                        function CVEffects(e) {
                            var t,
                                r = e.data.ef ? e.data.ef.length : 0;
                            this.filters = [];
                            var i;
                            for (t = 0; t < r; t += 1) {
                                i = null;
                                var s = e.data.ef[t].ty;
                                if (registeredEffects[s]) {
                                    var a = registeredEffects[s].effect;
                                    i = new a(
                                        e.effectsManager.effectElements[t],
                                        e
                                    );
                                }
                                i && this.filters.push(i);
                            }
                            this.filters.length &&
                                e.addRenderableComponent(this);
                        }
                        (CVEffects.prototype.renderFrame = function (e) {
                            var t,
                                r = this.filters.length;
                            for (t = 0; t < r; t += 1)
                                this.filters[t].renderFrame(e);
                        }),
                            (CVEffects.prototype.getEffects = function (e) {
                                var t,
                                    r = this.filters.length,
                                    i = [];
                                for (t = 0; t < r; t += 1)
                                    this.filters[t].type === e &&
                                        i.push(this.filters[t]);
                                return i;
                            });
                        function registerEffect(e, t) {
                            registeredEffects[e] = { effect: t };
                        }
                        function CVMaskElement(e, t) {
                            (this.data = e),
                                (this.element = t),
                                (this.masksProperties =
                                    this.data.masksProperties || []),
                                (this.viewData = createSizedArray(
                                    this.masksProperties.length
                                ));
                            var r,
                                i = this.masksProperties.length,
                                s = !1;
                            for (r = 0; r < i; r += 1)
                                this.masksProperties[r].mode !== 'n' &&
                                    (s = !0),
                                    (this.viewData[r] =
                                        ShapePropertyFactory.getShapeProp(
                                            this.element,
                                            this.masksProperties[r],
                                            3
                                        ));
                            (this.hasMasks = s),
                                s && this.element.addRenderableComponent(this);
                        }
                        (CVMaskElement.prototype.renderFrame = function () {
                            if (this.hasMasks) {
                                var e = this.element.finalTransform.mat,
                                    t = this.element.canvasContext,
                                    r,
                                    i = this.masksProperties.length,
                                    s,
                                    a,
                                    n;
                                for (t.beginPath(), r = 0; r < i; r += 1)
                                    if (this.masksProperties[r].mode !== 'n') {
                                        this.masksProperties[r].inv &&
                                            (t.moveTo(0, 0),
                                            t.lineTo(
                                                this.element.globalData.compSize
                                                    .w,
                                                0
                                            ),
                                            t.lineTo(
                                                this.element.globalData.compSize
                                                    .w,
                                                this.element.globalData.compSize
                                                    .h
                                            ),
                                            t.lineTo(
                                                0,
                                                this.element.globalData.compSize
                                                    .h
                                            ),
                                            t.lineTo(0, 0)),
                                            (n = this.viewData[r].v),
                                            (s = e.applyToPointArray(
                                                n.v[0][0],
                                                n.v[0][1],
                                                0
                                            )),
                                            t.moveTo(s[0], s[1]);
                                        var l,
                                            o = n._length;
                                        for (l = 1; l < o; l += 1)
                                            (a = e.applyToTriplePoints(
                                                n.o[l - 1],
                                                n.i[l],
                                                n.v[l]
                                            )),
                                                t.bezierCurveTo(
                                                    a[0],
                                                    a[1],
                                                    a[2],
                                                    a[3],
                                                    a[4],
                                                    a[5]
                                                );
                                        (a = e.applyToTriplePoints(
                                            n.o[l - 1],
                                            n.i[0],
                                            n.v[0]
                                        )),
                                            t.bezierCurveTo(
                                                a[0],
                                                a[1],
                                                a[2],
                                                a[3],
                                                a[4],
                                                a[5]
                                            );
                                    }
                                this.element.globalData.renderer.save(!0),
                                    t.clip();
                            }
                        }),
                            (CVMaskElement.prototype.getMaskProperty =
                                MaskElement.prototype.getMaskProperty),
                            (CVMaskElement.prototype.destroy = function () {
                                this.element = null;
                            });
                        function CVBaseElement() {}
                        var operationsMap = {
                            1: 'source-in',
                            2: 'source-out',
                            3: 'source-in',
                            4: 'source-out',
                        };
                        (CVBaseElement.prototype = {
                            createElements: function () {},
                            initRendererElement: function () {},
                            createContainerElements: function () {
                                if (this.data.tt >= 1) {
                                    this.buffers = [];
                                    var t = this.globalData.canvasContext,
                                        r = assetLoader.createCanvas(
                                            t.canvas.width,
                                            t.canvas.height
                                        );
                                    this.buffers.push(r);
                                    var i = assetLoader.createCanvas(
                                        t.canvas.width,
                                        t.canvas.height
                                    );
                                    this.buffers.push(i),
                                        this.data.tt >= 3 &&
                                            !document._isProxy &&
                                            assetLoader.loadLumaCanvas();
                                }
                                (this.canvasContext =
                                    this.globalData.canvasContext),
                                    (this.transformCanvas =
                                        this.globalData.transformCanvas),
                                    (this.renderableEffectsManager =
                                        new CVEffects(this)),
                                    this.searchEffectTransforms();
                            },
                            createContent: function () {},
                            setBlendMode: function () {
                                var t = this.globalData;
                                if (t.blendMode !== this.data.bm) {
                                    t.blendMode = this.data.bm;
                                    var r = getBlendMode(this.data.bm);
                                    t.canvasContext.globalCompositeOperation =
                                        r;
                                }
                            },
                            createRenderableComponents: function () {
                                (this.maskManager = new CVMaskElement(
                                    this.data,
                                    this
                                )),
                                    (this.transformEffects =
                                        this.renderableEffectsManager.getEffects(
                                            effectTypes.TRANSFORM_EFFECT
                                        ));
                            },
                            hideElement: function () {
                                !this.hidden &&
                                    (!this.isInRange || this.isTransparent) &&
                                    (this.hidden = !0);
                            },
                            showElement: function () {
                                this.isInRange &&
                                    !this.isTransparent &&
                                    ((this.hidden = !1),
                                    (this._isFirstFrame = !0),
                                    (this.maskManager._isFirstFrame = !0));
                            },
                            clearCanvas: function (t) {
                                t.clearRect(
                                    this.transformCanvas.tx,
                                    this.transformCanvas.ty,
                                    this.transformCanvas.w *
                                        this.transformCanvas.sx,
                                    this.transformCanvas.h *
                                        this.transformCanvas.sy
                                );
                            },
                            prepareLayer: function () {
                                if (this.data.tt >= 1) {
                                    var t = this.buffers[0],
                                        r = t.getContext('2d');
                                    this.clearCanvas(r),
                                        r.drawImage(
                                            this.canvasContext.canvas,
                                            0,
                                            0
                                        ),
                                        (this.currentTransform =
                                            this.canvasContext.getTransform()),
                                        this.canvasContext.setTransform(
                                            1,
                                            0,
                                            0,
                                            1,
                                            0,
                                            0
                                        ),
                                        this.clearCanvas(this.canvasContext),
                                        this.canvasContext.setTransform(
                                            this.currentTransform
                                        );
                                }
                            },
                            exitLayer: function () {
                                if (this.data.tt >= 1) {
                                    var t = this.buffers[1],
                                        r = t.getContext('2d');
                                    this.clearCanvas(r),
                                        r.drawImage(
                                            this.canvasContext.canvas,
                                            0,
                                            0
                                        ),
                                        this.canvasContext.setTransform(
                                            1,
                                            0,
                                            0,
                                            1,
                                            0,
                                            0
                                        ),
                                        this.clearCanvas(this.canvasContext),
                                        this.canvasContext.setTransform(
                                            this.currentTransform
                                        );
                                    var i = this.comp.getElementById(
                                        'tp' in this.data
                                            ? this.data.tp
                                            : this.data.ind - 1
                                    );
                                    if (
                                        (i.renderFrame(!0),
                                        this.canvasContext.setTransform(
                                            1,
                                            0,
                                            0,
                                            1,
                                            0,
                                            0
                                        ),
                                        this.data.tt >= 3 && !document._isProxy)
                                    ) {
                                        var s = assetLoader.getLumaCanvas(
                                                this.canvasContext.canvas
                                            ),
                                            a = s.getContext('2d');
                                        a.drawImage(
                                            this.canvasContext.canvas,
                                            0,
                                            0
                                        ),
                                            this.clearCanvas(
                                                this.canvasContext
                                            ),
                                            this.canvasContext.drawImage(
                                                s,
                                                0,
                                                0
                                            );
                                    }
                                    (this.canvasContext.globalCompositeOperation =
                                        operationsMap[this.data.tt]),
                                        this.canvasContext.drawImage(t, 0, 0),
                                        (this.canvasContext.globalCompositeOperation =
                                            'destination-over'),
                                        this.canvasContext.drawImage(
                                            this.buffers[0],
                                            0,
                                            0
                                        ),
                                        this.canvasContext.setTransform(
                                            this.currentTransform
                                        ),
                                        (this.canvasContext.globalCompositeOperation =
                                            'source-over');
                                }
                            },
                            renderFrame: function (t) {
                                if (
                                    !(this.hidden || this.data.hd) &&
                                    !(this.data.td === 1 && !t)
                                ) {
                                    this.renderTransform(),
                                        this.renderRenderable(),
                                        this.renderLocalTransform(),
                                        this.setBlendMode();
                                    var r = this.data.ty === 0;
                                    this.prepareLayer(),
                                        this.globalData.renderer.save(r),
                                        this.globalData.renderer.ctxTransform(
                                            this.finalTransform.localMat.props
                                        ),
                                        this.globalData.renderer.ctxOpacity(
                                            this.finalTransform.localOpacity
                                        ),
                                        this.renderInnerContent(),
                                        this.globalData.renderer.restore(r),
                                        this.exitLayer(),
                                        this.maskManager.hasMasks &&
                                            this.globalData.renderer.restore(
                                                !0
                                            ),
                                        this._isFirstFrame &&
                                            (this._isFirstFrame = !1);
                                }
                            },
                            destroy: function () {
                                (this.canvasContext = null),
                                    (this.data = null),
                                    (this.globalData = null),
                                    this.maskManager.destroy();
                            },
                            mHelper: new Matrix(),
                        }),
                            (CVBaseElement.prototype.hide =
                                CVBaseElement.prototype.hideElement),
                            (CVBaseElement.prototype.show =
                                CVBaseElement.prototype.showElement);
                        function CVShapeData(e, t, r, i) {
                            (this.styledShapes = []),
                                (this.tr = [0, 0, 0, 0, 0, 0]);
                            var s = 4;
                            t.ty === 'rc'
                                ? (s = 5)
                                : t.ty === 'el'
                                  ? (s = 6)
                                  : t.ty === 'sr' && (s = 7),
                                (this.sh = ShapePropertyFactory.getShapeProp(
                                    e,
                                    t,
                                    s,
                                    e
                                ));
                            var a,
                                n = r.length,
                                l;
                            for (a = 0; a < n; a += 1)
                                r[a].closed ||
                                    ((l = {
                                        transforms: i.addTransformSequence(
                                            r[a].transforms
                                        ),
                                        trNodes: [],
                                    }),
                                    this.styledShapes.push(l),
                                    r[a].elements.push(l));
                        }
                        CVShapeData.prototype.setAsAnimated =
                            SVGShapeData.prototype.setAsAnimated;
                        function CVShapeElement(e, t, r) {
                            (this.shapes = []),
                                (this.shapesData = e.shapes),
                                (this.stylesList = []),
                                (this.itemsData = []),
                                (this.prevViewData = []),
                                (this.shapeModifiers = []),
                                (this.processedElements = []),
                                (this.transformsManager =
                                    new ShapeTransformManager()),
                                this.initElement(e, t, r);
                        }
                        extendPrototype(
                            [
                                BaseElement,
                                TransformElement,
                                CVBaseElement,
                                IShapeElement,
                                HierarchyElement,
                                FrameElement,
                                RenderableElement,
                            ],
                            CVShapeElement
                        ),
                            (CVShapeElement.prototype.initElement =
                                RenderableDOMElement.prototype.initElement),
                            (CVShapeElement.prototype.transformHelper = {
                                opacity: 1,
                                _opMdf: !1,
                            }),
                            (CVShapeElement.prototype.dashResetter = []),
                            (CVShapeElement.prototype.createContent =
                                function () {
                                    this.searchShapes(
                                        this.shapesData,
                                        this.itemsData,
                                        this.prevViewData,
                                        !0,
                                        []
                                    );
                                }),
                            (CVShapeElement.prototype.createStyleElement =
                                function (e, t) {
                                    var r = {
                                            data: e,
                                            type: e.ty,
                                            preTransforms:
                                                this.transformsManager.addTransformSequence(
                                                    t
                                                ),
                                            transforms: [],
                                            elements: [],
                                            closed: e.hd === !0,
                                        },
                                        i = {};
                                    if (
                                        (e.ty === 'fl' || e.ty === 'st'
                                            ? ((i.c = PropertyFactory.getProp(
                                                  this,
                                                  e.c,
                                                  1,
                                                  255,
                                                  this
                                              )),
                                              i.c.k ||
                                                  (r.co =
                                                      'rgb(' +
                                                      bmFloor(i.c.v[0]) +
                                                      ',' +
                                                      bmFloor(i.c.v[1]) +
                                                      ',' +
                                                      bmFloor(i.c.v[2]) +
                                                      ')'))
                                            : (e.ty === 'gf' ||
                                                  e.ty === 'gs') &&
                                              ((i.s = PropertyFactory.getProp(
                                                  this,
                                                  e.s,
                                                  1,
                                                  null,
                                                  this
                                              )),
                                              (i.e = PropertyFactory.getProp(
                                                  this,
                                                  e.e,
                                                  1,
                                                  null,
                                                  this
                                              )),
                                              (i.h = PropertyFactory.getProp(
                                                  this,
                                                  e.h || { k: 0 },
                                                  0,
                                                  0.01,
                                                  this
                                              )),
                                              (i.a = PropertyFactory.getProp(
                                                  this,
                                                  e.a || { k: 0 },
                                                  0,
                                                  degToRads,
                                                  this
                                              )),
                                              (i.g = new GradientProperty(
                                                  this,
                                                  e.g,
                                                  this
                                              ))),
                                        (i.o = PropertyFactory.getProp(
                                            this,
                                            e.o,
                                            0,
                                            0.01,
                                            this
                                        )),
                                        e.ty === 'st' || e.ty === 'gs')
                                    ) {
                                        if (
                                            ((r.lc = lineCapEnum[e.lc || 2]),
                                            (r.lj = lineJoinEnum[e.lj || 2]),
                                            e.lj == 1 && (r.ml = e.ml),
                                            (i.w = PropertyFactory.getProp(
                                                this,
                                                e.w,
                                                0,
                                                null,
                                                this
                                            )),
                                            i.w.k || (r.wi = i.w.v),
                                            e.d)
                                        ) {
                                            var s = new DashProperty(
                                                this,
                                                e.d,
                                                'canvas',
                                                this
                                            );
                                            (i.d = s),
                                                i.d.k ||
                                                    ((r.da = i.d.dashArray),
                                                    (r.do = i.d.dashoffset[0]));
                                        }
                                    } else
                                        r.r = e.r === 2 ? 'evenodd' : 'nonzero';
                                    return (
                                        this.stylesList.push(r),
                                        (i.style = r),
                                        i
                                    );
                                }),
                            (CVShapeElement.prototype.createGroupElement =
                                function () {
                                    var e = { it: [], prevViewData: [] };
                                    return e;
                                }),
                            (CVShapeElement.prototype.createTransformElement =
                                function (e) {
                                    var t = {
                                        transform: {
                                            opacity: 1,
                                            _opMdf: !1,
                                            key: this.transformsManager.getNewKey(),
                                            op: PropertyFactory.getProp(
                                                this,
                                                e.o,
                                                0,
                                                0.01,
                                                this
                                            ),
                                            mProps: TransformPropertyFactory.getTransformProperty(
                                                this,
                                                e,
                                                this
                                            ),
                                        },
                                    };
                                    return t;
                                }),
                            (CVShapeElement.prototype.createShapeElement =
                                function (e) {
                                    var t = new CVShapeData(
                                        this,
                                        e,
                                        this.stylesList,
                                        this.transformsManager
                                    );
                                    return (
                                        this.shapes.push(t),
                                        this.addShapeToModifiers(t),
                                        t
                                    );
                                }),
                            (CVShapeElement.prototype.reloadShapes =
                                function () {
                                    this._isFirstFrame = !0;
                                    var e,
                                        t = this.itemsData.length;
                                    for (e = 0; e < t; e += 1)
                                        this.prevViewData[e] =
                                            this.itemsData[e];
                                    for (
                                        this.searchShapes(
                                            this.shapesData,
                                            this.itemsData,
                                            this.prevViewData,
                                            !0,
                                            []
                                        ),
                                            t = this.dynamicProperties.length,
                                            e = 0;
                                        e < t;
                                        e += 1
                                    )
                                        this.dynamicProperties[e].getValue();
                                    this.renderModifiers(),
                                        this.transformsManager.processSequences(
                                            this._isFirstFrame
                                        );
                                }),
                            (CVShapeElement.prototype.addTransformToStyleList =
                                function (e) {
                                    var t,
                                        r = this.stylesList.length;
                                    for (t = 0; t < r; t += 1)
                                        this.stylesList[t].closed ||
                                            this.stylesList[t].transforms.push(
                                                e
                                            );
                                }),
                            (CVShapeElement.prototype.removeTransformFromStyleList =
                                function () {
                                    var e,
                                        t = this.stylesList.length;
                                    for (e = 0; e < t; e += 1)
                                        this.stylesList[e].closed ||
                                            this.stylesList[e].transforms.pop();
                                }),
                            (CVShapeElement.prototype.closeStyles = function (
                                e
                            ) {
                                var t,
                                    r = e.length;
                                for (t = 0; t < r; t += 1) e[t].closed = !0;
                            }),
                            (CVShapeElement.prototype.searchShapes = function (
                                e,
                                t,
                                r,
                                i,
                                s
                            ) {
                                var a,
                                    n = e.length - 1,
                                    l,
                                    o,
                                    f = [],
                                    y = [],
                                    E,
                                    u,
                                    b,
                                    _ = [].concat(s);
                                for (a = n; a >= 0; a -= 1) {
                                    if (
                                        ((E = this.searchProcessedElement(
                                            e[a]
                                        )),
                                        E
                                            ? (t[a] = r[E - 1])
                                            : (e[a]._shouldRender = i),
                                        e[a].ty === 'fl' ||
                                            e[a].ty === 'st' ||
                                            e[a].ty === 'gf' ||
                                            e[a].ty === 'gs')
                                    )
                                        E
                                            ? (t[a].style.closed = !1)
                                            : (t[a] = this.createStyleElement(
                                                  e[a],
                                                  _
                                              )),
                                            f.push(t[a].style);
                                    else if (e[a].ty === 'gr') {
                                        if (!E)
                                            t[a] = this.createGroupElement(
                                                e[a]
                                            );
                                        else
                                            for (
                                                o = t[a].it.length, l = 0;
                                                l < o;
                                                l += 1
                                            )
                                                t[a].prevViewData[l] =
                                                    t[a].it[l];
                                        this.searchShapes(
                                            e[a].it,
                                            t[a].it,
                                            t[a].prevViewData,
                                            i,
                                            _
                                        );
                                    } else
                                        e[a].ty === 'tr'
                                            ? (E ||
                                                  ((b =
                                                      this.createTransformElement(
                                                          e[a]
                                                      )),
                                                  (t[a] = b)),
                                              _.push(t[a]),
                                              this.addTransformToStyleList(
                                                  t[a]
                                              ))
                                            : e[a].ty === 'sh' ||
                                                e[a].ty === 'rc' ||
                                                e[a].ty === 'el' ||
                                                e[a].ty === 'sr'
                                              ? E ||
                                                (t[a] = this.createShapeElement(
                                                    e[a]
                                                ))
                                              : e[a].ty === 'tm' ||
                                                  e[a].ty === 'rd' ||
                                                  e[a].ty === 'pb' ||
                                                  e[a].ty === 'zz' ||
                                                  e[a].ty === 'op'
                                                ? (E
                                                      ? ((u = t[a]),
                                                        (u.closed = !1))
                                                      : ((u =
                                                            ShapeModifiers.getModifier(
                                                                e[a].ty
                                                            )),
                                                        u.init(this, e[a]),
                                                        (t[a] = u),
                                                        this.shapeModifiers.push(
                                                            u
                                                        )),
                                                  y.push(u))
                                                : e[a].ty === 'rp' &&
                                                  (E
                                                      ? ((u = t[a]),
                                                        (u.closed = !0))
                                                      : ((u =
                                                            ShapeModifiers.getModifier(
                                                                e[a].ty
                                                            )),
                                                        (t[a] = u),
                                                        u.init(this, e, a, t),
                                                        this.shapeModifiers.push(
                                                            u
                                                        ),
                                                        (i = !1)),
                                                  y.push(u));
                                    this.addProcessedElement(e[a], a + 1);
                                }
                                for (
                                    this.removeTransformFromStyleList(),
                                        this.closeStyles(f),
                                        n = y.length,
                                        a = 0;
                                    a < n;
                                    a += 1
                                )
                                    y[a].closed = !0;
                            }),
                            (CVShapeElement.prototype.renderInnerContent =
                                function () {
                                    (this.transformHelper.opacity = 1),
                                        (this.transformHelper._opMdf = !1),
                                        this.renderModifiers(),
                                        this.transformsManager.processSequences(
                                            this._isFirstFrame
                                        ),
                                        this.renderShape(
                                            this.transformHelper,
                                            this.shapesData,
                                            this.itemsData,
                                            !0
                                        );
                                }),
                            (CVShapeElement.prototype.renderShapeTransform =
                                function (e, t) {
                                    (e._opMdf ||
                                        t.op._mdf ||
                                        this._isFirstFrame) &&
                                        ((t.opacity = e.opacity),
                                        (t.opacity *= t.op.v),
                                        (t._opMdf = !0));
                                }),
                            (CVShapeElement.prototype.drawLayer = function () {
                                var e,
                                    t = this.stylesList.length,
                                    r,
                                    i,
                                    s,
                                    a,
                                    n,
                                    l,
                                    o = this.globalData.renderer,
                                    f = this.globalData.canvasContext,
                                    y,
                                    E;
                                for (e = 0; e < t; e += 1)
                                    if (
                                        ((E = this.stylesList[e]),
                                        (y = E.type),
                                        !(
                                            ((y === 'st' || y === 'gs') &&
                                                E.wi === 0) ||
                                            !E.data._shouldRender ||
                                            E.coOp === 0 ||
                                            this.globalData
                                                .currentGlobalAlpha === 0
                                        ))
                                    ) {
                                        for (
                                            o.save(),
                                                n = E.elements,
                                                y === 'st' || y === 'gs'
                                                    ? (o.ctxStrokeStyle(
                                                          y === 'st'
                                                              ? E.co
                                                              : E.grd
                                                      ),
                                                      o.ctxLineWidth(E.wi),
                                                      o.ctxLineCap(E.lc),
                                                      o.ctxLineJoin(E.lj),
                                                      o.ctxMiterLimit(
                                                          E.ml || 0
                                                      ))
                                                    : o.ctxFillStyle(
                                                          y === 'fl'
                                                              ? E.co
                                                              : E.grd
                                                      ),
                                                o.ctxOpacity(E.coOp),
                                                y !== 'st' &&
                                                    y !== 'gs' &&
                                                    f.beginPath(),
                                                o.ctxTransform(
                                                    E.preTransforms
                                                        .finalTransform.props
                                                ),
                                                i = n.length,
                                                r = 0;
                                            r < i;
                                            r += 1
                                        ) {
                                            for (
                                                (y === 'st' || y === 'gs') &&
                                                    (f.beginPath(),
                                                    E.da &&
                                                        (f.setLineDash(E.da),
                                                        (f.lineDashOffset =
                                                            E.do))),
                                                    l = n[r].trNodes,
                                                    a = l.length,
                                                    s = 0;
                                                s < a;
                                                s += 1
                                            )
                                                l[s].t === 'm'
                                                    ? f.moveTo(
                                                          l[s].p[0],
                                                          l[s].p[1]
                                                      )
                                                    : l[s].t === 'c'
                                                      ? f.bezierCurveTo(
                                                            l[s].pts[0],
                                                            l[s].pts[1],
                                                            l[s].pts[2],
                                                            l[s].pts[3],
                                                            l[s].pts[4],
                                                            l[s].pts[5]
                                                        )
                                                      : f.closePath();
                                            (y === 'st' || y === 'gs') &&
                                                (o.ctxStroke(),
                                                E.da &&
                                                    f.setLineDash(
                                                        this.dashResetter
                                                    ));
                                        }
                                        y !== 'st' &&
                                            y !== 'gs' &&
                                            this.globalData.renderer.ctxFill(
                                                E.r
                                            ),
                                            o.restore();
                                    }
                            }),
                            (CVShapeElement.prototype.renderShape = function (
                                e,
                                t,
                                r,
                                i
                            ) {
                                var s,
                                    a = t.length - 1,
                                    n;
                                for (n = e, s = a; s >= 0; s -= 1)
                                    t[s].ty === 'tr'
                                        ? ((n = r[s].transform),
                                          this.renderShapeTransform(e, n))
                                        : t[s].ty === 'sh' ||
                                            t[s].ty === 'el' ||
                                            t[s].ty === 'rc' ||
                                            t[s].ty === 'sr'
                                          ? this.renderPath(t[s], r[s])
                                          : t[s].ty === 'fl'
                                            ? this.renderFill(t[s], r[s], n)
                                            : t[s].ty === 'st'
                                              ? this.renderStroke(t[s], r[s], n)
                                              : t[s].ty === 'gf' ||
                                                  t[s].ty === 'gs'
                                                ? this.renderGradientFill(
                                                      t[s],
                                                      r[s],
                                                      n
                                                  )
                                                : t[s].ty === 'gr'
                                                  ? this.renderShape(
                                                        n,
                                                        t[s].it,
                                                        r[s].it
                                                    )
                                                  : t[s].ty;
                                i && this.drawLayer();
                            }),
                            (CVShapeElement.prototype.renderStyledShape =
                                function (e, t) {
                                    if (
                                        this._isFirstFrame ||
                                        t._mdf ||
                                        e.transforms._mdf
                                    ) {
                                        var r = e.trNodes,
                                            i = t.paths,
                                            s,
                                            a,
                                            n,
                                            l = i._length;
                                        r.length = 0;
                                        var o = e.transforms.finalTransform;
                                        for (n = 0; n < l; n += 1) {
                                            var f = i.shapes[n];
                                            if (f && f.v) {
                                                for (
                                                    a = f._length, s = 1;
                                                    s < a;
                                                    s += 1
                                                )
                                                    s === 1 &&
                                                        r.push({
                                                            t: 'm',
                                                            p: o.applyToPointArray(
                                                                f.v[0][0],
                                                                f.v[0][1],
                                                                0
                                                            ),
                                                        }),
                                                        r.push({
                                                            t: 'c',
                                                            pts: o.applyToTriplePoints(
                                                                f.o[s - 1],
                                                                f.i[s],
                                                                f.v[s]
                                                            ),
                                                        });
                                                a === 1 &&
                                                    r.push({
                                                        t: 'm',
                                                        p: o.applyToPointArray(
                                                            f.v[0][0],
                                                            f.v[0][1],
                                                            0
                                                        ),
                                                    }),
                                                    f.c &&
                                                        a &&
                                                        (r.push({
                                                            t: 'c',
                                                            pts: o.applyToTriplePoints(
                                                                f.o[s - 1],
                                                                f.i[0],
                                                                f.v[0]
                                                            ),
                                                        }),
                                                        r.push({ t: 'z' }));
                                            }
                                        }
                                        e.trNodes = r;
                                    }
                                }),
                            (CVShapeElement.prototype.renderPath = function (
                                e,
                                t
                            ) {
                                if (e.hd !== !0 && e._shouldRender) {
                                    var r,
                                        i = t.styledShapes.length;
                                    for (r = 0; r < i; r += 1)
                                        this.renderStyledShape(
                                            t.styledShapes[r],
                                            t.sh
                                        );
                                }
                            }),
                            (CVShapeElement.prototype.renderFill = function (
                                e,
                                t,
                                r
                            ) {
                                var i = t.style;
                                (t.c._mdf || this._isFirstFrame) &&
                                    (i.co =
                                        'rgb(' +
                                        bmFloor(t.c.v[0]) +
                                        ',' +
                                        bmFloor(t.c.v[1]) +
                                        ',' +
                                        bmFloor(t.c.v[2]) +
                                        ')'),
                                    (t.o._mdf ||
                                        r._opMdf ||
                                        this._isFirstFrame) &&
                                        (i.coOp = t.o.v * r.opacity);
                            }),
                            (CVShapeElement.prototype.renderGradientFill =
                                function (e, t, r) {
                                    var i = t.style,
                                        s;
                                    if (
                                        !i.grd ||
                                        t.g._mdf ||
                                        t.s._mdf ||
                                        t.e._mdf ||
                                        (e.t !== 1 && (t.h._mdf || t.a._mdf))
                                    ) {
                                        var a = this.globalData.canvasContext,
                                            n = t.s.v,
                                            l = t.e.v;
                                        if (e.t === 1)
                                            s = a.createLinearGradient(
                                                n[0],
                                                n[1],
                                                l[0],
                                                l[1]
                                            );
                                        else {
                                            var o = Math.sqrt(
                                                    Math.pow(n[0] - l[0], 2) +
                                                        Math.pow(n[1] - l[1], 2)
                                                ),
                                                f = Math.atan2(
                                                    l[1] - n[1],
                                                    l[0] - n[0]
                                                ),
                                                y = t.h.v;
                                            y >= 1
                                                ? (y = 0.99)
                                                : y <= -1 && (y = -0.99);
                                            var E = o * y,
                                                u =
                                                    Math.cos(f + t.a.v) * E +
                                                    n[0],
                                                b =
                                                    Math.sin(f + t.a.v) * E +
                                                    n[1];
                                            s = a.createRadialGradient(
                                                u,
                                                b,
                                                0,
                                                n[0],
                                                n[1],
                                                o
                                            );
                                        }
                                        var _,
                                            d = e.g.p,
                                            C = t.g.c,
                                            c = 1;
                                        for (_ = 0; _ < d; _ += 1)
                                            t.g._hasOpacity &&
                                                t.g._collapsable &&
                                                (c = t.g.o[_ * 2 + 1]),
                                                s.addColorStop(
                                                    C[_ * 4] / 100,
                                                    'rgba(' +
                                                        C[_ * 4 + 1] +
                                                        ',' +
                                                        C[_ * 4 + 2] +
                                                        ',' +
                                                        C[_ * 4 + 3] +
                                                        ',' +
                                                        c +
                                                        ')'
                                                );
                                        i.grd = s;
                                    }
                                    i.coOp = t.o.v * r.opacity;
                                }),
                            (CVShapeElement.prototype.renderStroke = function (
                                e,
                                t,
                                r
                            ) {
                                var i = t.style,
                                    s = t.d;
                                s &&
                                    (s._mdf || this._isFirstFrame) &&
                                    ((i.da = s.dashArray),
                                    (i.do = s.dashoffset[0])),
                                    (t.c._mdf || this._isFirstFrame) &&
                                        (i.co =
                                            'rgb(' +
                                            bmFloor(t.c.v[0]) +
                                            ',' +
                                            bmFloor(t.c.v[1]) +
                                            ',' +
                                            bmFloor(t.c.v[2]) +
                                            ')'),
                                    (t.o._mdf ||
                                        r._opMdf ||
                                        this._isFirstFrame) &&
                                        (i.coOp = t.o.v * r.opacity),
                                    (t.w._mdf || this._isFirstFrame) &&
                                        (i.wi = t.w.v);
                            }),
                            (CVShapeElement.prototype.destroy = function () {
                                (this.shapesData = null),
                                    (this.globalData = null),
                                    (this.canvasContext = null),
                                    (this.stylesList.length = 0),
                                    (this.itemsData.length = 0);
                            });
                        function CVTextElement(e, t, r) {
                            (this.textSpans = []),
                                (this.yOffset = 0),
                                (this.fillColorAnim = !1),
                                (this.strokeColorAnim = !1),
                                (this.strokeWidthAnim = !1),
                                (this.stroke = !1),
                                (this.fill = !1),
                                (this.justifyOffset = 0),
                                (this.currentRender = null),
                                (this.renderType = 'canvas'),
                                (this.values = {
                                    fill: 'rgba(0,0,0,0)',
                                    stroke: 'rgba(0,0,0,0)',
                                    sWidth: 0,
                                    fValue: '',
                                }),
                                this.initElement(e, t, r);
                        }
                        extendPrototype(
                            [
                                BaseElement,
                                TransformElement,
                                CVBaseElement,
                                HierarchyElement,
                                FrameElement,
                                RenderableElement,
                                ITextElement,
                            ],
                            CVTextElement
                        ),
                            (CVTextElement.prototype.tHelper =
                                createTag('canvas').getContext('2d')),
                            (CVTextElement.prototype.buildNewText =
                                function () {
                                    var e = this.textProperty.currentData;
                                    this.renderedLetters = createSizedArray(
                                        e.l ? e.l.length : 0
                                    );
                                    var t = !1;
                                    e.fc
                                        ? ((t = !0),
                                          (this.values.fill = this.buildColor(
                                              e.fc
                                          )))
                                        : (this.values.fill = 'rgba(0,0,0,0)'),
                                        (this.fill = t);
                                    var r = !1;
                                    e.sc &&
                                        ((r = !0),
                                        (this.values.stroke = this.buildColor(
                                            e.sc
                                        )),
                                        (this.values.sWidth = e.sw));
                                    var i =
                                            this.globalData.fontManager.getFontByName(
                                                e.f
                                            ),
                                        s,
                                        a,
                                        n = e.l,
                                        l = this.mHelper;
                                    (this.stroke = r),
                                        (this.values.fValue =
                                            e.finalSize +
                                            'px ' +
                                            this.globalData.fontManager.getFontByName(
                                                e.f
                                            ).fFamily),
                                        (a = e.finalText.length);
                                    var o,
                                        f,
                                        y,
                                        E,
                                        u,
                                        b,
                                        _,
                                        d,
                                        C,
                                        c,
                                        m = this.data.singleShape,
                                        p = e.tr * 0.001 * e.finalSize,
                                        g = 0,
                                        P = 0,
                                        A = !0,
                                        F = 0;
                                    for (s = 0; s < a; s += 1) {
                                        (o =
                                            this.globalData.fontManager.getCharData(
                                                e.finalText[s],
                                                i.fStyle,
                                                this.globalData.fontManager.getFontByName(
                                                    e.f
                                                ).fFamily
                                            )),
                                            (f = (o && o.data) || {}),
                                            l.reset(),
                                            m &&
                                                n[s].n &&
                                                ((g = -p),
                                                (P += e.yOffset),
                                                (P += A ? 1 : 0),
                                                (A = !1)),
                                            (u = f.shapes
                                                ? f.shapes[0].it
                                                : []),
                                            (_ = u.length),
                                            l.scale(
                                                e.finalSize / 100,
                                                e.finalSize / 100
                                            ),
                                            m &&
                                                this.applyTextPropertiesToMatrix(
                                                    e,
                                                    l,
                                                    n[s].line,
                                                    g,
                                                    P
                                                ),
                                            (C = createSizedArray(_ - 1));
                                        var T = 0;
                                        for (b = 0; b < _; b += 1)
                                            if (u[b].ty === 'sh') {
                                                for (
                                                    E = u[b].ks.k.i.length,
                                                        d = u[b].ks.k,
                                                        c = [],
                                                        y = 1;
                                                    y < E;
                                                    y += 1
                                                )
                                                    y === 1 &&
                                                        c.push(
                                                            l.applyToX(
                                                                d.v[0][0],
                                                                d.v[0][1],
                                                                0
                                                            ),
                                                            l.applyToY(
                                                                d.v[0][0],
                                                                d.v[0][1],
                                                                0
                                                            )
                                                        ),
                                                        c.push(
                                                            l.applyToX(
                                                                d.o[y - 1][0],
                                                                d.o[y - 1][1],
                                                                0
                                                            ),
                                                            l.applyToY(
                                                                d.o[y - 1][0],
                                                                d.o[y - 1][1],
                                                                0
                                                            ),
                                                            l.applyToX(
                                                                d.i[y][0],
                                                                d.i[y][1],
                                                                0
                                                            ),
                                                            l.applyToY(
                                                                d.i[y][0],
                                                                d.i[y][1],
                                                                0
                                                            ),
                                                            l.applyToX(
                                                                d.v[y][0],
                                                                d.v[y][1],
                                                                0
                                                            ),
                                                            l.applyToY(
                                                                d.v[y][0],
                                                                d.v[y][1],
                                                                0
                                                            )
                                                        );
                                                c.push(
                                                    l.applyToX(
                                                        d.o[y - 1][0],
                                                        d.o[y - 1][1],
                                                        0
                                                    ),
                                                    l.applyToY(
                                                        d.o[y - 1][0],
                                                        d.o[y - 1][1],
                                                        0
                                                    ),
                                                    l.applyToX(
                                                        d.i[0][0],
                                                        d.i[0][1],
                                                        0
                                                    ),
                                                    l.applyToY(
                                                        d.i[0][0],
                                                        d.i[0][1],
                                                        0
                                                    ),
                                                    l.applyToX(
                                                        d.v[0][0],
                                                        d.v[0][1],
                                                        0
                                                    ),
                                                    l.applyToY(
                                                        d.v[0][0],
                                                        d.v[0][1],
                                                        0
                                                    )
                                                ),
                                                    (C[T] = c),
                                                    (T += 1);
                                            }
                                        m && ((g += n[s].l), (g += p)),
                                            this.textSpans[F]
                                                ? (this.textSpans[F].elem = C)
                                                : (this.textSpans[F] = {
                                                      elem: C,
                                                  }),
                                            (F += 1);
                                    }
                                }),
                            (CVTextElement.prototype.renderInnerContent =
                                function () {
                                    this.validateText();
                                    var e = this.canvasContext;
                                    (e.font = this.values.fValue),
                                        this.globalData.renderer.ctxLineCap(
                                            'butt'
                                        ),
                                        this.globalData.renderer.ctxLineJoin(
                                            'miter'
                                        ),
                                        this.globalData.renderer.ctxMiterLimit(
                                            4
                                        ),
                                        this.data.singleShape ||
                                            this.textAnimator.getMeasures(
                                                this.textProperty.currentData,
                                                this.lettersChangedFlag
                                            );
                                    var t,
                                        r,
                                        i,
                                        s,
                                        a,
                                        n,
                                        l = this.textAnimator.renderedLetters,
                                        o = this.textProperty.currentData.l;
                                    r = o.length;
                                    var f,
                                        y = null,
                                        E = null,
                                        u = null,
                                        b,
                                        _,
                                        d = this.globalData.renderer;
                                    for (t = 0; t < r; t += 1)
                                        if (!o[t].n) {
                                            if (
                                                ((f = l[t]),
                                                f &&
                                                    (d.save(),
                                                    d.ctxTransform(f.p),
                                                    d.ctxOpacity(f.o)),
                                                this.fill)
                                            ) {
                                                for (
                                                    f && f.fc
                                                        ? y !== f.fc &&
                                                          (d.ctxFillStyle(f.fc),
                                                          (y = f.fc))
                                                        : y !==
                                                              this.values
                                                                  .fill &&
                                                          ((y =
                                                              this.values.fill),
                                                          d.ctxFillStyle(
                                                              this.values.fill
                                                          )),
                                                        b =
                                                            this.textSpans[t]
                                                                .elem,
                                                        s = b.length,
                                                        this.globalData.canvasContext.beginPath(),
                                                        i = 0;
                                                    i < s;
                                                    i += 1
                                                )
                                                    for (
                                                        _ = b[i],
                                                            n = _.length,
                                                            this.globalData.canvasContext.moveTo(
                                                                _[0],
                                                                _[1]
                                                            ),
                                                            a = 2;
                                                        a < n;
                                                        a += 6
                                                    )
                                                        this.globalData.canvasContext.bezierCurveTo(
                                                            _[a],
                                                            _[a + 1],
                                                            _[a + 2],
                                                            _[a + 3],
                                                            _[a + 4],
                                                            _[a + 5]
                                                        );
                                                this.globalData.canvasContext.closePath(),
                                                    d.ctxFill();
                                            }
                                            if (this.stroke) {
                                                for (
                                                    f && f.sw
                                                        ? u !== f.sw &&
                                                          ((u = f.sw),
                                                          d.ctxLineWidth(f.sw))
                                                        : u !==
                                                              this.values
                                                                  .sWidth &&
                                                          ((u =
                                                              this.values
                                                                  .sWidth),
                                                          d.ctxLineWidth(
                                                              this.values.sWidth
                                                          )),
                                                        f && f.sc
                                                            ? E !== f.sc &&
                                                              ((E = f.sc),
                                                              d.ctxStrokeStyle(
                                                                  f.sc
                                                              ))
                                                            : E !==
                                                                  this.values
                                                                      .stroke &&
                                                              ((E =
                                                                  this.values
                                                                      .stroke),
                                                              d.ctxStrokeStyle(
                                                                  this.values
                                                                      .stroke
                                                              )),
                                                        b =
                                                            this.textSpans[t]
                                                                .elem,
                                                        s = b.length,
                                                        this.globalData.canvasContext.beginPath(),
                                                        i = 0;
                                                    i < s;
                                                    i += 1
                                                )
                                                    for (
                                                        _ = b[i],
                                                            n = _.length,
                                                            this.globalData.canvasContext.moveTo(
                                                                _[0],
                                                                _[1]
                                                            ),
                                                            a = 2;
                                                        a < n;
                                                        a += 6
                                                    )
                                                        this.globalData.canvasContext.bezierCurveTo(
                                                            _[a],
                                                            _[a + 1],
                                                            _[a + 2],
                                                            _[a + 3],
                                                            _[a + 4],
                                                            _[a + 5]
                                                        );
                                                this.globalData.canvasContext.closePath(),
                                                    d.ctxStroke();
                                            }
                                            f &&
                                                this.globalData.renderer.restore();
                                        }
                                });
                        function CVImageElement(e, t, r) {
                            (this.assetData = t.getAssetData(e.refId)),
                                (this.img = t.imageLoader.getAsset(
                                    this.assetData
                                )),
                                this.initElement(e, t, r);
                        }
                        extendPrototype(
                            [
                                BaseElement,
                                TransformElement,
                                CVBaseElement,
                                HierarchyElement,
                                FrameElement,
                                RenderableElement,
                            ],
                            CVImageElement
                        ),
                            (CVImageElement.prototype.initElement =
                                SVGShapeElement.prototype.initElement),
                            (CVImageElement.prototype.prepareFrame =
                                IImageElement.prototype.prepareFrame),
                            (CVImageElement.prototype.createContent =
                                function () {
                                    if (
                                        this.img.width &&
                                        (this.assetData.w !== this.img.width ||
                                            this.assetData.h !==
                                                this.img.height)
                                    ) {
                                        var e = createTag('canvas');
                                        (e.width = this.assetData.w),
                                            (e.height = this.assetData.h);
                                        var t = e.getContext('2d'),
                                            r = this.img.width,
                                            i = this.img.height,
                                            s = r / i,
                                            a =
                                                this.assetData.w /
                                                this.assetData.h,
                                            n,
                                            l,
                                            o =
                                                this.assetData.pr ||
                                                this.globalData.renderConfig
                                                    .imagePreserveAspectRatio;
                                        (s > a && o === 'xMidYMid slice') ||
                                        (s < a && o !== 'xMidYMid slice')
                                            ? ((l = i), (n = l * a))
                                            : ((n = r), (l = n / a)),
                                            t.drawImage(
                                                this.img,
                                                (r - n) / 2,
                                                (i - l) / 2,
                                                n,
                                                l,
                                                0,
                                                0,
                                                this.assetData.w,
                                                this.assetData.h
                                            ),
                                            (this.img = e);
                                    }
                                }),
                            (CVImageElement.prototype.renderInnerContent =
                                function () {
                                    this.canvasContext.drawImage(
                                        this.img,
                                        0,
                                        0
                                    );
                                }),
                            (CVImageElement.prototype.destroy = function () {
                                this.img = null;
                            });
                        function CVSolidElement(e, t, r) {
                            this.initElement(e, t, r);
                        }
                        extendPrototype(
                            [
                                BaseElement,
                                TransformElement,
                                CVBaseElement,
                                HierarchyElement,
                                FrameElement,
                                RenderableElement,
                            ],
                            CVSolidElement
                        ),
                            (CVSolidElement.prototype.initElement =
                                SVGShapeElement.prototype.initElement),
                            (CVSolidElement.prototype.prepareFrame =
                                IImageElement.prototype.prepareFrame),
                            (CVSolidElement.prototype.renderInnerContent =
                                function () {
                                    this.globalData.renderer.ctxFillStyle(
                                        this.data.sc
                                    ),
                                        this.globalData.renderer.ctxFillRect(
                                            0,
                                            0,
                                            this.data.sw,
                                            this.data.sh
                                        );
                                });
                        function CanvasRendererBase() {}
                        extendPrototype([BaseRenderer], CanvasRendererBase),
                            (CanvasRendererBase.prototype.createShape =
                                function (e) {
                                    return new CVShapeElement(
                                        e,
                                        this.globalData,
                                        this
                                    );
                                }),
                            (CanvasRendererBase.prototype.createText =
                                function (e) {
                                    return new CVTextElement(
                                        e,
                                        this.globalData,
                                        this
                                    );
                                }),
                            (CanvasRendererBase.prototype.createImage =
                                function (e) {
                                    return new CVImageElement(
                                        e,
                                        this.globalData,
                                        this
                                    );
                                }),
                            (CanvasRendererBase.prototype.createSolid =
                                function (e) {
                                    return new CVSolidElement(
                                        e,
                                        this.globalData,
                                        this
                                    );
                                }),
                            (CanvasRendererBase.prototype.createNull =
                                SVGRenderer.prototype.createNull),
                            (CanvasRendererBase.prototype.ctxTransform =
                                function (e) {
                                    (e[0] === 1 &&
                                        e[1] === 0 &&
                                        e[4] === 0 &&
                                        e[5] === 1 &&
                                        e[12] === 0 &&
                                        e[13] === 0) ||
                                        this.canvasContext.transform(
                                            e[0],
                                            e[1],
                                            e[4],
                                            e[5],
                                            e[12],
                                            e[13]
                                        );
                                }),
                            (CanvasRendererBase.prototype.ctxOpacity =
                                function (e) {
                                    this.canvasContext.globalAlpha *=
                                        e < 0 ? 0 : e;
                                }),
                            (CanvasRendererBase.prototype.ctxFillStyle =
                                function (e) {
                                    this.canvasContext.fillStyle = e;
                                }),
                            (CanvasRendererBase.prototype.ctxStrokeStyle =
                                function (e) {
                                    this.canvasContext.strokeStyle = e;
                                }),
                            (CanvasRendererBase.prototype.ctxLineWidth =
                                function (e) {
                                    this.canvasContext.lineWidth = e;
                                }),
                            (CanvasRendererBase.prototype.ctxLineCap =
                                function (e) {
                                    this.canvasContext.lineCap = e;
                                }),
                            (CanvasRendererBase.prototype.ctxLineJoin =
                                function (e) {
                                    this.canvasContext.lineJoin = e;
                                }),
                            (CanvasRendererBase.prototype.ctxMiterLimit =
                                function (e) {
                                    this.canvasContext.miterLimit = e;
                                }),
                            (CanvasRendererBase.prototype.ctxFill = function (
                                e
                            ) {
                                this.canvasContext.fill(e);
                            }),
                            (CanvasRendererBase.prototype.ctxFillRect =
                                function (e, t, r, i) {
                                    this.canvasContext.fillRect(e, t, r, i);
                                }),
                            (CanvasRendererBase.prototype.ctxStroke =
                                function () {
                                    this.canvasContext.stroke();
                                }),
                            (CanvasRendererBase.prototype.reset = function () {
                                if (!this.renderConfig.clearCanvas) {
                                    this.canvasContext.restore();
                                    return;
                                }
                                this.contextData.reset();
                            }),
                            (CanvasRendererBase.prototype.save = function () {
                                this.canvasContext.save();
                            }),
                            (CanvasRendererBase.prototype.restore = function (
                                e
                            ) {
                                if (!this.renderConfig.clearCanvas) {
                                    this.canvasContext.restore();
                                    return;
                                }
                                e &&
                                    (this.globalData.blendMode = 'source-over'),
                                    this.contextData.restore(e);
                            }),
                            (CanvasRendererBase.prototype.configAnimation =
                                function (e) {
                                    if (this.animationItem.wrapper) {
                                        this.animationItem.container =
                                            createTag('canvas');
                                        var t =
                                            this.animationItem.container.style;
                                        (t.width = '100%'), (t.height = '100%');
                                        var r = '0px 0px 0px';
                                        (t.transformOrigin = r),
                                            (t.mozTransformOrigin = r),
                                            (t.webkitTransformOrigin = r),
                                            (t['-webkit-transform'] = r),
                                            (t.contentVisibility =
                                                this.renderConfig.contentVisibility),
                                            this.animationItem.wrapper.appendChild(
                                                this.animationItem.container
                                            ),
                                            (this.canvasContext =
                                                this.animationItem.container.getContext(
                                                    '2d'
                                                )),
                                            this.renderConfig.className &&
                                                this.animationItem.container.setAttribute(
                                                    'class',
                                                    this.renderConfig.className
                                                ),
                                            this.renderConfig.id &&
                                                this.animationItem.container.setAttribute(
                                                    'id',
                                                    this.renderConfig.id
                                                );
                                    } else
                                        this.canvasContext =
                                            this.renderConfig.context;
                                    this.contextData.setContext(
                                        this.canvasContext
                                    ),
                                        (this.data = e),
                                        (this.layers = e.layers),
                                        (this.transformCanvas = {
                                            w: e.w,
                                            h: e.h,
                                            sx: 0,
                                            sy: 0,
                                            tx: 0,
                                            ty: 0,
                                        }),
                                        this.setupGlobalData(e, document.body),
                                        (this.globalData.canvasContext =
                                            this.canvasContext),
                                        (this.globalData.renderer = this),
                                        (this.globalData.isDashed = !1),
                                        (this.globalData.progressiveLoad =
                                            this.renderConfig.progressiveLoad),
                                        (this.globalData.transformCanvas =
                                            this.transformCanvas),
                                        (this.elements = createSizedArray(
                                            e.layers.length
                                        )),
                                        this.updateContainerSize();
                                }),
                            (CanvasRendererBase.prototype.updateContainerSize =
                                function (e, t) {
                                    this.reset();
                                    var r, i;
                                    e
                                        ? ((r = e),
                                          (i = t),
                                          (this.canvasContext.canvas.width = r),
                                          (this.canvasContext.canvas.height =
                                              i))
                                        : (this.animationItem.wrapper &&
                                          this.animationItem.container
                                              ? ((r =
                                                    this.animationItem.wrapper
                                                        .offsetWidth),
                                                (i =
                                                    this.animationItem.wrapper
                                                        .offsetHeight))
                                              : ((r =
                                                    this.canvasContext.canvas
                                                        .width),
                                                (i =
                                                    this.canvasContext.canvas
                                                        .height)),
                                          (this.canvasContext.canvas.width =
                                              r * this.renderConfig.dpr),
                                          (this.canvasContext.canvas.height =
                                              i * this.renderConfig.dpr));
                                    var s, a;
                                    if (
                                        this.renderConfig.preserveAspectRatio.indexOf(
                                            'meet'
                                        ) !== -1 ||
                                        this.renderConfig.preserveAspectRatio.indexOf(
                                            'slice'
                                        ) !== -1
                                    ) {
                                        var n =
                                                this.renderConfig.preserveAspectRatio.split(
                                                    ' '
                                                ),
                                            l = n[1] || 'meet',
                                            o = n[0] || 'xMidYMid',
                                            f = o.substr(0, 4),
                                            y = o.substr(4);
                                        (s = r / i),
                                            (a =
                                                this.transformCanvas.w /
                                                this.transformCanvas.h),
                                            (a > s && l === 'meet') ||
                                            (a < s && l === 'slice')
                                                ? ((this.transformCanvas.sx =
                                                      r /
                                                      (this.transformCanvas.w /
                                                          this.renderConfig
                                                              .dpr)),
                                                  (this.transformCanvas.sy =
                                                      r /
                                                      (this.transformCanvas.w /
                                                          this.renderConfig
                                                              .dpr)))
                                                : ((this.transformCanvas.sx =
                                                      i /
                                                      (this.transformCanvas.h /
                                                          this.renderConfig
                                                              .dpr)),
                                                  (this.transformCanvas.sy =
                                                      i /
                                                      (this.transformCanvas.h /
                                                          this.renderConfig
                                                              .dpr))),
                                            f === 'xMid' &&
                                            ((a < s && l === 'meet') ||
                                                (a > s && l === 'slice'))
                                                ? (this.transformCanvas.tx =
                                                      ((r -
                                                          this.transformCanvas
                                                              .w *
                                                              (i /
                                                                  this
                                                                      .transformCanvas
                                                                      .h)) /
                                                          2) *
                                                      this.renderConfig.dpr)
                                                : f === 'xMax' &&
                                                    ((a < s && l === 'meet') ||
                                                        (a > s &&
                                                            l === 'slice'))
                                                  ? (this.transformCanvas.tx =
                                                        (r -
                                                            this.transformCanvas
                                                                .w *
                                                                (i /
                                                                    this
                                                                        .transformCanvas
                                                                        .h)) *
                                                        this.renderConfig.dpr)
                                                  : (this.transformCanvas.tx = 0),
                                            y === 'YMid' &&
                                            ((a > s && l === 'meet') ||
                                                (a < s && l === 'slice'))
                                                ? (this.transformCanvas.ty =
                                                      ((i -
                                                          this.transformCanvas
                                                              .h *
                                                              (r /
                                                                  this
                                                                      .transformCanvas
                                                                      .w)) /
                                                          2) *
                                                      this.renderConfig.dpr)
                                                : y === 'YMax' &&
                                                    ((a > s && l === 'meet') ||
                                                        (a < s &&
                                                            l === 'slice'))
                                                  ? (this.transformCanvas.ty =
                                                        (i -
                                                            this.transformCanvas
                                                                .h *
                                                                (r /
                                                                    this
                                                                        .transformCanvas
                                                                        .w)) *
                                                        this.renderConfig.dpr)
                                                  : (this.transformCanvas.ty = 0);
                                    } else
                                        this.renderConfig
                                            .preserveAspectRatio === 'none'
                                            ? ((this.transformCanvas.sx =
                                                  r /
                                                  (this.transformCanvas.w /
                                                      this.renderConfig.dpr)),
                                              (this.transformCanvas.sy =
                                                  i /
                                                  (this.transformCanvas.h /
                                                      this.renderConfig.dpr)),
                                              (this.transformCanvas.tx = 0),
                                              (this.transformCanvas.ty = 0))
                                            : ((this.transformCanvas.sx =
                                                  this.renderConfig.dpr),
                                              (this.transformCanvas.sy =
                                                  this.renderConfig.dpr),
                                              (this.transformCanvas.tx = 0),
                                              (this.transformCanvas.ty = 0));
                                    (this.transformCanvas.props = [
                                        this.transformCanvas.sx,
                                        0,
                                        0,
                                        0,
                                        0,
                                        this.transformCanvas.sy,
                                        0,
                                        0,
                                        0,
                                        0,
                                        1,
                                        0,
                                        this.transformCanvas.tx,
                                        this.transformCanvas.ty,
                                        0,
                                        1,
                                    ]),
                                        this.ctxTransform(
                                            this.transformCanvas.props
                                        ),
                                        this.canvasContext.beginPath(),
                                        this.canvasContext.rect(
                                            0,
                                            0,
                                            this.transformCanvas.w,
                                            this.transformCanvas.h
                                        ),
                                        this.canvasContext.closePath(),
                                        this.canvasContext.clip(),
                                        this.renderFrame(
                                            this.renderedFrame,
                                            !0
                                        );
                                }),
                            (CanvasRendererBase.prototype.destroy =
                                function () {
                                    this.renderConfig.clearCanvas &&
                                        this.animationItem.wrapper &&
                                        (this.animationItem.wrapper.innerText =
                                            '');
                                    var e,
                                        t = this.layers
                                            ? this.layers.length
                                            : 0;
                                    for (e = t - 1; e >= 0; e -= 1)
                                        this.elements[e] &&
                                            this.elements[e].destroy &&
                                            this.elements[e].destroy();
                                    (this.elements.length = 0),
                                        (this.globalData.canvasContext = null),
                                        (this.animationItem.container = null),
                                        (this.destroyed = !0);
                                }),
                            (CanvasRendererBase.prototype.renderFrame =
                                function (e, t) {
                                    if (
                                        !(
                                            (this.renderedFrame === e &&
                                                this.renderConfig
                                                    .clearCanvas === !0 &&
                                                !t) ||
                                            this.destroyed ||
                                            e === -1
                                        )
                                    ) {
                                        (this.renderedFrame = e),
                                            (this.globalData.frameNum =
                                                e -
                                                this.animationItem
                                                    ._isFirstFrame),
                                            (this.globalData.frameId += 1),
                                            (this.globalData._mdf =
                                                !this.renderConfig
                                                    .clearCanvas || t),
                                            (this.globalData.projectInterface.currentFrame =
                                                e);
                                        var r,
                                            i = this.layers.length;
                                        for (
                                            this.completeLayers ||
                                                this.checkLayers(e),
                                                r = i - 1;
                                            r >= 0;
                                            r -= 1
                                        )
                                            (this.completeLayers ||
                                                this.elements[r]) &&
                                                this.elements[r].prepareFrame(
                                                    e - this.layers[r].st
                                                );
                                        if (this.globalData._mdf) {
                                            for (
                                                this.renderConfig
                                                    .clearCanvas === !0
                                                    ? this.canvasContext.clearRect(
                                                          0,
                                                          0,
                                                          this.transformCanvas
                                                              .w,
                                                          this.transformCanvas.h
                                                      )
                                                    : this.save(),
                                                    r = i - 1;
                                                r >= 0;
                                                r -= 1
                                            )
                                                (this.completeLayers ||
                                                    this.elements[r]) &&
                                                    this.elements[
                                                        r
                                                    ].renderFrame();
                                            this.renderConfig.clearCanvas !==
                                                !0 && this.restore();
                                        }
                                    }
                                }),
                            (CanvasRendererBase.prototype.buildItem = function (
                                e
                            ) {
                                var t = this.elements;
                                if (!(t[e] || this.layers[e].ty === 99)) {
                                    var r = this.createItem(
                                        this.layers[e],
                                        this,
                                        this.globalData
                                    );
                                    (t[e] = r), r.initExpressions();
                                }
                            }),
                            (CanvasRendererBase.prototype.checkPendingElements =
                                function () {
                                    for (; this.pendingElements.length; ) {
                                        var e = this.pendingElements.pop();
                                        e.checkParenting();
                                    }
                                }),
                            (CanvasRendererBase.prototype.hide = function () {
                                this.animationItem.container.style.display =
                                    'none';
                            }),
                            (CanvasRendererBase.prototype.show = function () {
                                this.animationItem.container.style.display =
                                    'block';
                            });
                        function CanvasContext() {
                            (this.opacity = -1),
                                (this.transform = createTypedArray(
                                    'float32',
                                    16
                                )),
                                (this.fillStyle = ''),
                                (this.strokeStyle = ''),
                                (this.lineWidth = ''),
                                (this.lineCap = ''),
                                (this.lineJoin = ''),
                                (this.miterLimit = ''),
                                (this.id = Math.random());
                        }
                        function CVContextData() {
                            (this.stack = []),
                                (this.cArrPos = 0),
                                (this.cTr = new Matrix());
                            var e,
                                t = 15;
                            for (e = 0; e < t; e += 1) {
                                var r = new CanvasContext();
                                this.stack[e] = r;
                            }
                            (this._length = t),
                                (this.nativeContext = null),
                                (this.transformMat = new Matrix()),
                                (this.currentOpacity = 1),
                                (this.currentFillStyle = ''),
                                (this.appliedFillStyle = ''),
                                (this.currentStrokeStyle = ''),
                                (this.appliedStrokeStyle = ''),
                                (this.currentLineWidth = ''),
                                (this.appliedLineWidth = ''),
                                (this.currentLineCap = ''),
                                (this.appliedLineCap = ''),
                                (this.currentLineJoin = ''),
                                (this.appliedLineJoin = ''),
                                (this.appliedMiterLimit = ''),
                                (this.currentMiterLimit = '');
                        }
                        (CVContextData.prototype.duplicate = function () {
                            var e = this._length * 2,
                                t = 0;
                            for (t = this._length; t < e; t += 1)
                                this.stack[t] = new CanvasContext();
                            this._length = e;
                        }),
                            (CVContextData.prototype.reset = function () {
                                (this.cArrPos = 0),
                                    this.cTr.reset(),
                                    (this.stack[this.cArrPos].opacity = 1);
                            }),
                            (CVContextData.prototype.restore = function (e) {
                                this.cArrPos -= 1;
                                var t = this.stack[this.cArrPos],
                                    r = t.transform,
                                    i,
                                    s = this.cTr.props;
                                for (i = 0; i < 16; i += 1) s[i] = r[i];
                                if (e) {
                                    this.nativeContext.restore();
                                    var a = this.stack[this.cArrPos + 1];
                                    (this.appliedFillStyle = a.fillStyle),
                                        (this.appliedStrokeStyle =
                                            a.strokeStyle),
                                        (this.appliedLineWidth = a.lineWidth),
                                        (this.appliedLineCap = a.lineCap),
                                        (this.appliedLineJoin = a.lineJoin),
                                        (this.appliedMiterLimit = a.miterLimit);
                                }
                                this.nativeContext.setTransform(
                                    r[0],
                                    r[1],
                                    r[4],
                                    r[5],
                                    r[12],
                                    r[13]
                                ),
                                    (e ||
                                        (t.opacity !== -1 &&
                                            this.currentOpacity !==
                                                t.opacity)) &&
                                        ((this.nativeContext.globalAlpha =
                                            t.opacity),
                                        (this.currentOpacity = t.opacity)),
                                    (this.currentFillStyle = t.fillStyle),
                                    (this.currentStrokeStyle = t.strokeStyle),
                                    (this.currentLineWidth = t.lineWidth),
                                    (this.currentLineCap = t.lineCap),
                                    (this.currentLineJoin = t.lineJoin),
                                    (this.currentMiterLimit = t.miterLimit);
                            }),
                            (CVContextData.prototype.save = function (e) {
                                e && this.nativeContext.save();
                                var t = this.cTr.props;
                                this._length <= this.cArrPos &&
                                    this.duplicate();
                                var r = this.stack[this.cArrPos],
                                    i;
                                for (i = 0; i < 16; i += 1)
                                    r.transform[i] = t[i];
                                this.cArrPos += 1;
                                var s = this.stack[this.cArrPos];
                                (s.opacity = r.opacity),
                                    (s.fillStyle = r.fillStyle),
                                    (s.strokeStyle = r.strokeStyle),
                                    (s.lineWidth = r.lineWidth),
                                    (s.lineCap = r.lineCap),
                                    (s.lineJoin = r.lineJoin),
                                    (s.miterLimit = r.miterLimit);
                            }),
                            (CVContextData.prototype.setOpacity = function (e) {
                                this.stack[this.cArrPos].opacity = e;
                            }),
                            (CVContextData.prototype.setContext = function (e) {
                                this.nativeContext = e;
                            }),
                            (CVContextData.prototype.fillStyle = function (e) {
                                this.stack[this.cArrPos].fillStyle !== e &&
                                    ((this.currentFillStyle = e),
                                    (this.stack[this.cArrPos].fillStyle = e));
                            }),
                            (CVContextData.prototype.strokeStyle = function (
                                e
                            ) {
                                this.stack[this.cArrPos].strokeStyle !== e &&
                                    ((this.currentStrokeStyle = e),
                                    (this.stack[this.cArrPos].strokeStyle = e));
                            }),
                            (CVContextData.prototype.lineWidth = function (e) {
                                this.stack[this.cArrPos].lineWidth !== e &&
                                    ((this.currentLineWidth = e),
                                    (this.stack[this.cArrPos].lineWidth = e));
                            }),
                            (CVContextData.prototype.lineCap = function (e) {
                                this.stack[this.cArrPos].lineCap !== e &&
                                    ((this.currentLineCap = e),
                                    (this.stack[this.cArrPos].lineCap = e));
                            }),
                            (CVContextData.prototype.lineJoin = function (e) {
                                this.stack[this.cArrPos].lineJoin !== e &&
                                    ((this.currentLineJoin = e),
                                    (this.stack[this.cArrPos].lineJoin = e));
                            }),
                            (CVContextData.prototype.miterLimit = function (e) {
                                this.stack[this.cArrPos].miterLimit !== e &&
                                    ((this.currentMiterLimit = e),
                                    (this.stack[this.cArrPos].miterLimit = e));
                            }),
                            (CVContextData.prototype.transform = function (e) {
                                this.transformMat.cloneFromProps(e);
                                var t = this.cTr;
                                this.transformMat.multiply(t),
                                    t.cloneFromProps(this.transformMat.props);
                                var r = t.props;
                                this.nativeContext.setTransform(
                                    r[0],
                                    r[1],
                                    r[4],
                                    r[5],
                                    r[12],
                                    r[13]
                                );
                            }),
                            (CVContextData.prototype.opacity = function (e) {
                                var t = this.stack[this.cArrPos].opacity;
                                (t *= e < 0 ? 0 : e),
                                    this.stack[this.cArrPos].opacity !== t &&
                                        (this.currentOpacity !== e &&
                                            ((this.nativeContext.globalAlpha =
                                                e),
                                            (this.currentOpacity = e)),
                                        (this.stack[this.cArrPos].opacity = t));
                            }),
                            (CVContextData.prototype.fill = function (e) {
                                this.appliedFillStyle !==
                                    this.currentFillStyle &&
                                    ((this.appliedFillStyle =
                                        this.currentFillStyle),
                                    (this.nativeContext.fillStyle =
                                        this.appliedFillStyle)),
                                    this.nativeContext.fill(e);
                            }),
                            (CVContextData.prototype.fillRect = function (
                                e,
                                t,
                                r,
                                i
                            ) {
                                this.appliedFillStyle !==
                                    this.currentFillStyle &&
                                    ((this.appliedFillStyle =
                                        this.currentFillStyle),
                                    (this.nativeContext.fillStyle =
                                        this.appliedFillStyle)),
                                    this.nativeContext.fillRect(e, t, r, i);
                            }),
                            (CVContextData.prototype.stroke = function () {
                                this.appliedStrokeStyle !==
                                    this.currentStrokeStyle &&
                                    ((this.appliedStrokeStyle =
                                        this.currentStrokeStyle),
                                    (this.nativeContext.strokeStyle =
                                        this.appliedStrokeStyle)),
                                    this.appliedLineWidth !==
                                        this.currentLineWidth &&
                                        ((this.appliedLineWidth =
                                            this.currentLineWidth),
                                        (this.nativeContext.lineWidth =
                                            this.appliedLineWidth)),
                                    this.appliedLineCap !==
                                        this.currentLineCap &&
                                        ((this.appliedLineCap =
                                            this.currentLineCap),
                                        (this.nativeContext.lineCap =
                                            this.appliedLineCap)),
                                    this.appliedLineJoin !==
                                        this.currentLineJoin &&
                                        ((this.appliedLineJoin =
                                            this.currentLineJoin),
                                        (this.nativeContext.lineJoin =
                                            this.appliedLineJoin)),
                                    this.appliedMiterLimit !==
                                        this.currentMiterLimit &&
                                        ((this.appliedMiterLimit =
                                            this.currentMiterLimit),
                                        (this.nativeContext.miterLimit =
                                            this.appliedMiterLimit)),
                                    this.nativeContext.stroke();
                            });
                        function CVCompElement(e, t, r) {
                            (this.completeLayers = !1),
                                (this.layers = e.layers),
                                (this.pendingElements = []),
                                (this.elements = createSizedArray(
                                    this.layers.length
                                )),
                                this.initElement(e, t, r),
                                (this.tm = e.tm
                                    ? PropertyFactory.getProp(
                                          this,
                                          e.tm,
                                          0,
                                          t.frameRate,
                                          this
                                      )
                                    : { _placeholder: !0 });
                        }
                        extendPrototype(
                            [CanvasRendererBase, ICompElement, CVBaseElement],
                            CVCompElement
                        ),
                            (CVCompElement.prototype.renderInnerContent =
                                function () {
                                    var e = this.canvasContext;
                                    e.beginPath(),
                                        e.moveTo(0, 0),
                                        e.lineTo(this.data.w, 0),
                                        e.lineTo(this.data.w, this.data.h),
                                        e.lineTo(0, this.data.h),
                                        e.lineTo(0, 0),
                                        e.clip();
                                    var t,
                                        r = this.layers.length;
                                    for (t = r - 1; t >= 0; t -= 1)
                                        (this.completeLayers ||
                                            this.elements[t]) &&
                                            this.elements[t].renderFrame();
                                }),
                            (CVCompElement.prototype.destroy = function () {
                                var e,
                                    t = this.layers.length;
                                for (e = t - 1; e >= 0; e -= 1)
                                    this.elements[e] &&
                                        this.elements[e].destroy();
                                (this.layers = null), (this.elements = null);
                            }),
                            (CVCompElement.prototype.createComp = function (e) {
                                return new CVCompElement(
                                    e,
                                    this.globalData,
                                    this
                                );
                            });
                        function CanvasRenderer(e, t) {
                            (this.animationItem = e),
                                (this.renderConfig = {
                                    clearCanvas:
                                        t && t.clearCanvas !== void 0
                                            ? t.clearCanvas
                                            : !0,
                                    context: (t && t.context) || null,
                                    progressiveLoad:
                                        (t && t.progressiveLoad) || !1,
                                    preserveAspectRatio:
                                        (t && t.preserveAspectRatio) ||
                                        'xMidYMid meet',
                                    imagePreserveAspectRatio:
                                        (t && t.imagePreserveAspectRatio) ||
                                        'xMidYMid slice',
                                    contentVisibility:
                                        (t && t.contentVisibility) || 'visible',
                                    className: (t && t.className) || '',
                                    id: (t && t.id) || '',
                                    runExpressions:
                                        !t ||
                                        t.runExpressions === void 0 ||
                                        t.runExpressions,
                                }),
                                (this.renderConfig.dpr = (t && t.dpr) || 1),
                                this.animationItem.wrapper &&
                                    (this.renderConfig.dpr =
                                        (t && t.dpr) ||
                                        window.devicePixelRatio ||
                                        1),
                                (this.renderedFrame = -1),
                                (this.globalData = {
                                    frameNum: -1,
                                    _mdf: !1,
                                    renderConfig: this.renderConfig,
                                    currentGlobalAlpha: -1,
                                }),
                                (this.contextData = new CVContextData()),
                                (this.elements = []),
                                (this.pendingElements = []),
                                (this.transformMat = new Matrix()),
                                (this.completeLayers = !1),
                                (this.rendererType = 'canvas'),
                                this.renderConfig.clearCanvas &&
                                    ((this.ctxTransform =
                                        this.contextData.transform.bind(
                                            this.contextData
                                        )),
                                    (this.ctxOpacity =
                                        this.contextData.opacity.bind(
                                            this.contextData
                                        )),
                                    (this.ctxFillStyle =
                                        this.contextData.fillStyle.bind(
                                            this.contextData
                                        )),
                                    (this.ctxStrokeStyle =
                                        this.contextData.strokeStyle.bind(
                                            this.contextData
                                        )),
                                    (this.ctxLineWidth =
                                        this.contextData.lineWidth.bind(
                                            this.contextData
                                        )),
                                    (this.ctxLineCap =
                                        this.contextData.lineCap.bind(
                                            this.contextData
                                        )),
                                    (this.ctxLineJoin =
                                        this.contextData.lineJoin.bind(
                                            this.contextData
                                        )),
                                    (this.ctxMiterLimit =
                                        this.contextData.miterLimit.bind(
                                            this.contextData
                                        )),
                                    (this.ctxFill = this.contextData.fill.bind(
                                        this.contextData
                                    )),
                                    (this.ctxFillRect =
                                        this.contextData.fillRect.bind(
                                            this.contextData
                                        )),
                                    (this.ctxStroke =
                                        this.contextData.stroke.bind(
                                            this.contextData
                                        )),
                                    (this.save = this.contextData.save.bind(
                                        this.contextData
                                    )));
                        }
                        extendPrototype([CanvasRendererBase], CanvasRenderer),
                            (CanvasRenderer.prototype.createComp = function (
                                e
                            ) {
                                return new CVCompElement(
                                    e,
                                    this.globalData,
                                    this
                                );
                            });
                        function HBaseElement() {}
                        (HBaseElement.prototype = {
                            checkBlendMode: function () {},
                            initRendererElement: function () {
                                (this.baseElement = createTag(
                                    this.data.tg || 'div'
                                )),
                                    this.data.hasMask
                                        ? ((this.svgElement = createNS('svg')),
                                          (this.layerElement = createNS('g')),
                                          (this.maskedElement =
                                              this.layerElement),
                                          this.svgElement.appendChild(
                                              this.layerElement
                                          ),
                                          this.baseElement.appendChild(
                                              this.svgElement
                                          ))
                                        : (this.layerElement =
                                              this.baseElement),
                                    styleDiv(this.baseElement);
                            },
                            createContainerElements: function () {
                                (this.renderableEffectsManager = new CVEffects(
                                    this
                                )),
                                    (this.transformedElement =
                                        this.baseElement),
                                    (this.maskedElement = this.layerElement),
                                    this.data.ln &&
                                        this.layerElement.setAttribute(
                                            'id',
                                            this.data.ln
                                        ),
                                    this.data.cl &&
                                        this.layerElement.setAttribute(
                                            'class',
                                            this.data.cl
                                        ),
                                    this.data.bm !== 0 && this.setBlendMode();
                            },
                            renderElement: function () {
                                var t = this.transformedElement
                                    ? this.transformedElement.style
                                    : {};
                                if (this.finalTransform._matMdf) {
                                    var r = this.finalTransform.mat.toCSS();
                                    (t.transform = r), (t.webkitTransform = r);
                                }
                                this.finalTransform._opMdf &&
                                    (t.opacity = this.finalTransform.mProp.o.v);
                            },
                            renderFrame: function () {
                                this.data.hd ||
                                    this.hidden ||
                                    (this.renderTransform(),
                                    this.renderRenderable(),
                                    this.renderElement(),
                                    this.renderInnerContent(),
                                    this._isFirstFrame &&
                                        (this._isFirstFrame = !1));
                            },
                            destroy: function () {
                                (this.layerElement = null),
                                    (this.transformedElement = null),
                                    this.matteElement &&
                                        (this.matteElement = null),
                                    this.maskManager &&
                                        (this.maskManager.destroy(),
                                        (this.maskManager = null));
                            },
                            createRenderableComponents: function () {
                                this.maskManager = new MaskElement(
                                    this.data,
                                    this,
                                    this.globalData
                                );
                            },
                            addEffects: function () {},
                            setMatte: function () {},
                        }),
                            (HBaseElement.prototype.getBaseElement =
                                SVGBaseElement.prototype.getBaseElement),
                            (HBaseElement.prototype.destroyBaseElement =
                                HBaseElement.prototype.destroy),
                            (HBaseElement.prototype.buildElementParenting =
                                BaseRenderer.prototype.buildElementParenting);
                        function HSolidElement(e, t, r) {
                            this.initElement(e, t, r);
                        }
                        extendPrototype(
                            [
                                BaseElement,
                                TransformElement,
                                HBaseElement,
                                HierarchyElement,
                                FrameElement,
                                RenderableDOMElement,
                            ],
                            HSolidElement
                        ),
                            (HSolidElement.prototype.createContent =
                                function () {
                                    var e;
                                    this.data.hasMask
                                        ? ((e = createNS('rect')),
                                          e.setAttribute('width', this.data.sw),
                                          e.setAttribute(
                                              'height',
                                              this.data.sh
                                          ),
                                          e.setAttribute('fill', this.data.sc),
                                          this.svgElement.setAttribute(
                                              'width',
                                              this.data.sw
                                          ),
                                          this.svgElement.setAttribute(
                                              'height',
                                              this.data.sh
                                          ))
                                        : ((e = createTag('div')),
                                          (e.style.width = this.data.sw + 'px'),
                                          (e.style.height =
                                              this.data.sh + 'px'),
                                          (e.style.backgroundColor =
                                              this.data.sc)),
                                        this.layerElement.appendChild(e);
                                });
                        function HShapeElement(e, t, r) {
                            (this.shapes = []),
                                (this.shapesData = e.shapes),
                                (this.stylesList = []),
                                (this.shapeModifiers = []),
                                (this.itemsData = []),
                                (this.processedElements = []),
                                (this.animatedContents = []),
                                (this.shapesContainer = createNS('g')),
                                this.initElement(e, t, r),
                                (this.prevViewData = []),
                                (this.currentBBox = {
                                    x: 999999,
                                    y: -999999,
                                    h: 0,
                                    w: 0,
                                });
                        }
                        extendPrototype(
                            [
                                BaseElement,
                                TransformElement,
                                HSolidElement,
                                SVGShapeElement,
                                HBaseElement,
                                HierarchyElement,
                                FrameElement,
                                RenderableElement,
                            ],
                            HShapeElement
                        ),
                            (HShapeElement.prototype._renderShapeFrame =
                                HShapeElement.prototype.renderInnerContent),
                            (HShapeElement.prototype.createContent =
                                function () {
                                    var e;
                                    if (
                                        ((this.baseElement.style.fontSize = 0),
                                        this.data.hasMask)
                                    )
                                        this.layerElement.appendChild(
                                            this.shapesContainer
                                        ),
                                            (e = this.svgElement);
                                    else {
                                        e = createNS('svg');
                                        var t = this.comp.data
                                            ? this.comp.data
                                            : this.globalData.compSize;
                                        e.setAttribute('width', t.w),
                                            e.setAttribute('height', t.h),
                                            e.appendChild(this.shapesContainer),
                                            this.layerElement.appendChild(e);
                                    }
                                    this.searchShapes(
                                        this.shapesData,
                                        this.itemsData,
                                        this.prevViewData,
                                        this.shapesContainer,
                                        0,
                                        [],
                                        !0
                                    ),
                                        this.filterUniqueShapes(),
                                        (this.shapeCont = e);
                                }),
                            (HShapeElement.prototype.getTransformedPoint =
                                function (e, t) {
                                    var r,
                                        i = e.length;
                                    for (r = 0; r < i; r += 1)
                                        t = e[r].mProps.v.applyToPointArray(
                                            t[0],
                                            t[1],
                                            0
                                        );
                                    return t;
                                }),
                            (HShapeElement.prototype.calculateShapeBoundingBox =
                                function (e, t) {
                                    var r = e.sh.v,
                                        i = e.transformers,
                                        s,
                                        a = r._length,
                                        n,
                                        l,
                                        o,
                                        f;
                                    if (!(a <= 1)) {
                                        for (s = 0; s < a - 1; s += 1)
                                            (n = this.getTransformedPoint(
                                                i,
                                                r.v[s]
                                            )),
                                                (l = this.getTransformedPoint(
                                                    i,
                                                    r.o[s]
                                                )),
                                                (o = this.getTransformedPoint(
                                                    i,
                                                    r.i[s + 1]
                                                )),
                                                (f = this.getTransformedPoint(
                                                    i,
                                                    r.v[s + 1]
                                                )),
                                                this.checkBounds(n, l, o, f, t);
                                        r.c &&
                                            ((n = this.getTransformedPoint(
                                                i,
                                                r.v[s]
                                            )),
                                            (l = this.getTransformedPoint(
                                                i,
                                                r.o[s]
                                            )),
                                            (o = this.getTransformedPoint(
                                                i,
                                                r.i[0]
                                            )),
                                            (f = this.getTransformedPoint(
                                                i,
                                                r.v[0]
                                            )),
                                            this.checkBounds(n, l, o, f, t));
                                    }
                                }),
                            (HShapeElement.prototype.checkBounds = function (
                                e,
                                t,
                                r,
                                i,
                                s
                            ) {
                                this.getBoundsOfCurve(e, t, r, i);
                                var a = this.shapeBoundingBox;
                                (s.x = bmMin(a.left, s.x)),
                                    (s.xMax = bmMax(a.right, s.xMax)),
                                    (s.y = bmMin(a.top, s.y)),
                                    (s.yMax = bmMax(a.bottom, s.yMax));
                            }),
                            (HShapeElement.prototype.shapeBoundingBox = {
                                left: 0,
                                right: 0,
                                top: 0,
                                bottom: 0,
                            }),
                            (HShapeElement.prototype.tempBoundingBox = {
                                x: 0,
                                xMax: 0,
                                y: 0,
                                yMax: 0,
                                width: 0,
                                height: 0,
                            }),
                            (HShapeElement.prototype.getBoundsOfCurve =
                                function (e, t, r, i) {
                                    for (
                                        var s = [
                                                [e[0], i[0]],
                                                [e[1], i[1]],
                                            ],
                                            a,
                                            n,
                                            l,
                                            o,
                                            f,
                                            y,
                                            E,
                                            u = 0;
                                        u < 2;
                                        ++u
                                    )
                                        (n = 6 * e[u] - 12 * t[u] + 6 * r[u]),
                                            (a =
                                                -3 * e[u] +
                                                9 * t[u] -
                                                9 * r[u] +
                                                3 * i[u]),
                                            (l = 3 * t[u] - 3 * e[u]),
                                            (n |= 0),
                                            (a |= 0),
                                            (l |= 0),
                                            (a === 0 && n === 0) ||
                                                (a === 0
                                                    ? ((o = -l / n),
                                                      o > 0 &&
                                                          o < 1 &&
                                                          s[u].push(
                                                              this.calculateF(
                                                                  o,
                                                                  e,
                                                                  t,
                                                                  r,
                                                                  i,
                                                                  u
                                                              )
                                                          ))
                                                    : ((f = n * n - 4 * l * a),
                                                      f >= 0 &&
                                                          ((y =
                                                              (-n + bmSqrt(f)) /
                                                              (2 * a)),
                                                          y > 0 &&
                                                              y < 1 &&
                                                              s[u].push(
                                                                  this.calculateF(
                                                                      y,
                                                                      e,
                                                                      t,
                                                                      r,
                                                                      i,
                                                                      u
                                                                  )
                                                              ),
                                                          (E =
                                                              (-n - bmSqrt(f)) /
                                                              (2 * a)),
                                                          E > 0 &&
                                                              E < 1 &&
                                                              s[u].push(
                                                                  this.calculateF(
                                                                      E,
                                                                      e,
                                                                      t,
                                                                      r,
                                                                      i,
                                                                      u
                                                                  )
                                                              ))));
                                    (this.shapeBoundingBox.left = bmMin.apply(
                                        null,
                                        s[0]
                                    )),
                                        (this.shapeBoundingBox.top =
                                            bmMin.apply(null, s[1])),
                                        (this.shapeBoundingBox.right =
                                            bmMax.apply(null, s[0])),
                                        (this.shapeBoundingBox.bottom =
                                            bmMax.apply(null, s[1]));
                                }),
                            (HShapeElement.prototype.calculateF = function (
                                e,
                                t,
                                r,
                                i,
                                s,
                                a
                            ) {
                                return (
                                    bmPow(1 - e, 3) * t[a] +
                                    3 * bmPow(1 - e, 2) * e * r[a] +
                                    3 * (1 - e) * bmPow(e, 2) * i[a] +
                                    bmPow(e, 3) * s[a]
                                );
                            }),
                            (HShapeElement.prototype.calculateBoundingBox =
                                function (e, t) {
                                    var r,
                                        i = e.length;
                                    for (r = 0; r < i; r += 1)
                                        e[r] && e[r].sh
                                            ? this.calculateShapeBoundingBox(
                                                  e[r],
                                                  t
                                              )
                                            : e[r] && e[r].it
                                              ? this.calculateBoundingBox(
                                                    e[r].it,
                                                    t
                                                )
                                              : e[r] &&
                                                e[r].style &&
                                                e[r].w &&
                                                this.expandStrokeBoundingBox(
                                                    e[r].w,
                                                    t
                                                );
                                }),
                            (HShapeElement.prototype.expandStrokeBoundingBox =
                                function (e, t) {
                                    var r = 0;
                                    if (e.keyframes) {
                                        for (
                                            var i = 0;
                                            i < e.keyframes.length;
                                            i += 1
                                        ) {
                                            var s = e.keyframes[i].s;
                                            s > r && (r = s);
                                        }
                                        r *= e.mult;
                                    } else r = e.v * e.mult;
                                    (t.x -= r),
                                        (t.xMax += r),
                                        (t.y -= r),
                                        (t.yMax += r);
                                }),
                            (HShapeElement.prototype.currentBoxContains =
                                function (e) {
                                    return (
                                        this.currentBBox.x <= e.x &&
                                        this.currentBBox.y <= e.y &&
                                        this.currentBBox.width +
                                            this.currentBBox.x >=
                                            e.x + e.width &&
                                        this.currentBBox.height +
                                            this.currentBBox.y >=
                                            e.y + e.height
                                    );
                                }),
                            (HShapeElement.prototype.renderInnerContent =
                                function () {
                                    if (
                                        (this._renderShapeFrame(),
                                        !this.hidden &&
                                            (this._isFirstFrame || this._mdf))
                                    ) {
                                        var e = this.tempBoundingBox,
                                            t = 999999;
                                        if (
                                            ((e.x = t),
                                            (e.xMax = -t),
                                            (e.y = t),
                                            (e.yMax = -t),
                                            this.calculateBoundingBox(
                                                this.itemsData,
                                                e
                                            ),
                                            (e.width =
                                                e.xMax < e.x
                                                    ? 0
                                                    : e.xMax - e.x),
                                            (e.height =
                                                e.yMax < e.y
                                                    ? 0
                                                    : e.yMax - e.y),
                                            this.currentBoxContains(e))
                                        )
                                            return;
                                        var r = !1;
                                        if (
                                            (this.currentBBox.w !== e.width &&
                                                ((this.currentBBox.w = e.width),
                                                this.shapeCont.setAttribute(
                                                    'width',
                                                    e.width
                                                ),
                                                (r = !0)),
                                            this.currentBBox.h !== e.height &&
                                                ((this.currentBBox.h =
                                                    e.height),
                                                this.shapeCont.setAttribute(
                                                    'height',
                                                    e.height
                                                ),
                                                (r = !0)),
                                            r ||
                                                this.currentBBox.x !== e.x ||
                                                this.currentBBox.y !== e.y)
                                        ) {
                                            (this.currentBBox.w = e.width),
                                                (this.currentBBox.h = e.height),
                                                (this.currentBBox.x = e.x),
                                                (this.currentBBox.y = e.y),
                                                this.shapeCont.setAttribute(
                                                    'viewBox',
                                                    this.currentBBox.x +
                                                        ' ' +
                                                        this.currentBBox.y +
                                                        ' ' +
                                                        this.currentBBox.w +
                                                        ' ' +
                                                        this.currentBBox.h
                                                );
                                            var i = this.shapeCont.style,
                                                s =
                                                    'translate(' +
                                                    this.currentBBox.x +
                                                    'px,' +
                                                    this.currentBBox.y +
                                                    'px)';
                                            (i.transform = s),
                                                (i.webkitTransform = s);
                                        }
                                    }
                                });
                        function HTextElement(e, t, r) {
                            (this.textSpans = []),
                                (this.textPaths = []),
                                (this.currentBBox = {
                                    x: 999999,
                                    y: -999999,
                                    h: 0,
                                    w: 0,
                                }),
                                (this.renderType = 'svg'),
                                (this.isMasked = !1),
                                this.initElement(e, t, r);
                        }
                        extendPrototype(
                            [
                                BaseElement,
                                TransformElement,
                                HBaseElement,
                                HierarchyElement,
                                FrameElement,
                                RenderableDOMElement,
                                ITextElement,
                            ],
                            HTextElement
                        ),
                            (HTextElement.prototype.createContent =
                                function () {
                                    if (
                                        ((this.isMasked = this.checkMasks()),
                                        this.isMasked)
                                    ) {
                                        (this.renderType = 'svg'),
                                            (this.compW = this.comp.data.w),
                                            (this.compH = this.comp.data.h),
                                            this.svgElement.setAttribute(
                                                'width',
                                                this.compW
                                            ),
                                            this.svgElement.setAttribute(
                                                'height',
                                                this.compH
                                            );
                                        var e = createNS('g');
                                        this.maskedElement.appendChild(e),
                                            (this.innerElem = e);
                                    } else
                                        (this.renderType = 'html'),
                                            (this.innerElem =
                                                this.layerElement);
                                    this.checkParenting();
                                }),
                            (HTextElement.prototype.buildNewText = function () {
                                var e = this.textProperty.currentData;
                                this.renderedLetters = createSizedArray(
                                    e.l ? e.l.length : 0
                                );
                                var t = this.innerElem.style,
                                    r = e.fc
                                        ? this.buildColor(e.fc)
                                        : 'rgba(0,0,0,0)';
                                (t.fill = r),
                                    (t.color = r),
                                    e.sc &&
                                        ((t.stroke = this.buildColor(e.sc)),
                                        (t.strokeWidth = e.sw + 'px'));
                                var i =
                                    this.globalData.fontManager.getFontByName(
                                        e.f
                                    );
                                if (!this.globalData.fontManager.chars)
                                    if (
                                        ((t.fontSize = e.finalSize + 'px'),
                                        (t.lineHeight = e.finalSize + 'px'),
                                        i.fClass)
                                    )
                                        this.innerElem.className = i.fClass;
                                    else {
                                        t.fontFamily = i.fFamily;
                                        var s = e.fWeight,
                                            a = e.fStyle;
                                        (t.fontStyle = a), (t.fontWeight = s);
                                    }
                                var n,
                                    l,
                                    o = e.l;
                                l = o.length;
                                var f,
                                    y,
                                    E,
                                    u = this.mHelper,
                                    b,
                                    _ = '',
                                    d = 0;
                                for (n = 0; n < l; n += 1) {
                                    if (
                                        (this.globalData.fontManager.chars
                                            ? (this.textPaths[d]
                                                  ? (f = this.textPaths[d])
                                                  : ((f = createNS('path')),
                                                    f.setAttribute(
                                                        'stroke-linecap',
                                                        lineCapEnum[1]
                                                    ),
                                                    f.setAttribute(
                                                        'stroke-linejoin',
                                                        lineJoinEnum[2]
                                                    ),
                                                    f.setAttribute(
                                                        'stroke-miterlimit',
                                                        '4'
                                                    )),
                                              this.isMasked ||
                                                  (this.textSpans[d]
                                                      ? ((y =
                                                            this.textSpans[d]),
                                                        (E = y.children[0]))
                                                      : ((y = createTag('div')),
                                                        (y.style.lineHeight = 0),
                                                        (E = createNS('svg')),
                                                        E.appendChild(f),
                                                        styleDiv(y))))
                                            : this.isMasked
                                              ? (f = this.textPaths[d]
                                                    ? this.textPaths[d]
                                                    : createNS('text'))
                                              : this.textSpans[d]
                                                ? ((y = this.textSpans[d]),
                                                  (f = this.textPaths[d]))
                                                : ((y = createTag('span')),
                                                  styleDiv(y),
                                                  (f = createTag('span')),
                                                  styleDiv(f),
                                                  y.appendChild(f)),
                                        this.globalData.fontManager.chars)
                                    ) {
                                        var C =
                                                this.globalData.fontManager.getCharData(
                                                    e.finalText[n],
                                                    i.fStyle,
                                                    this.globalData.fontManager.getFontByName(
                                                        e.f
                                                    ).fFamily
                                                ),
                                            c;
                                        if (
                                            (C ? (c = C.data) : (c = null),
                                            u.reset(),
                                            c &&
                                                c.shapes &&
                                                c.shapes.length &&
                                                ((b = c.shapes[0].it),
                                                u.scale(
                                                    e.finalSize / 100,
                                                    e.finalSize / 100
                                                ),
                                                (_ = this.createPathShape(
                                                    u,
                                                    b
                                                )),
                                                f.setAttribute('d', _)),
                                            this.isMasked)
                                        )
                                            this.innerElem.appendChild(f);
                                        else {
                                            if (
                                                (this.innerElem.appendChild(y),
                                                c && c.shapes)
                                            ) {
                                                document.body.appendChild(E);
                                                var m = E.getBBox();
                                                E.setAttribute(
                                                    'width',
                                                    m.width + 2
                                                ),
                                                    E.setAttribute(
                                                        'height',
                                                        m.height + 2
                                                    ),
                                                    E.setAttribute(
                                                        'viewBox',
                                                        m.x -
                                                            1 +
                                                            ' ' +
                                                            (m.y - 1) +
                                                            ' ' +
                                                            (m.width + 2) +
                                                            ' ' +
                                                            (m.height + 2)
                                                    );
                                                var p = E.style,
                                                    g =
                                                        'translate(' +
                                                        (m.x - 1) +
                                                        'px,' +
                                                        (m.y - 1) +
                                                        'px)';
                                                (p.transform = g),
                                                    (p.webkitTransform = g),
                                                    (o[n].yOffset = m.y - 1);
                                            } else
                                                E.setAttribute('width', 1),
                                                    E.setAttribute('height', 1);
                                            y.appendChild(E);
                                        }
                                    } else if (
                                        ((f.textContent = o[n].val),
                                        f.setAttributeNS(
                                            'http://www.w3.org/XML/1998/namespace',
                                            'xml:space',
                                            'preserve'
                                        ),
                                        this.isMasked)
                                    )
                                        this.innerElem.appendChild(f);
                                    else {
                                        this.innerElem.appendChild(y);
                                        var P = f.style,
                                            A =
                                                'translate3d(0,' +
                                                -e.finalSize / 1.2 +
                                                'px,0)';
                                        (P.transform = A),
                                            (P.webkitTransform = A);
                                    }
                                    this.isMasked
                                        ? (this.textSpans[d] = f)
                                        : (this.textSpans[d] = y),
                                        (this.textSpans[d].style.display =
                                            'block'),
                                        (this.textPaths[d] = f),
                                        (d += 1);
                                }
                                for (; d < this.textSpans.length; )
                                    (this.textSpans[d].style.display = 'none'),
                                        (d += 1);
                            }),
                            (HTextElement.prototype.renderInnerContent =
                                function () {
                                    this.validateText();
                                    var e;
                                    if (this.data.singleShape) {
                                        if (
                                            !this._isFirstFrame &&
                                            !this.lettersChangedFlag
                                        )
                                            return;
                                        if (
                                            this.isMasked &&
                                            this.finalTransform._matMdf
                                        ) {
                                            this.svgElement.setAttribute(
                                                'viewBox',
                                                -this.finalTransform.mProp.p
                                                    .v[0] +
                                                    ' ' +
                                                    -this.finalTransform.mProp.p
                                                        .v[1] +
                                                    ' ' +
                                                    this.compW +
                                                    ' ' +
                                                    this.compH
                                            ),
                                                (e = this.svgElement.style);
                                            var t =
                                                'translate(' +
                                                -this.finalTransform.mProp.p
                                                    .v[0] +
                                                'px,' +
                                                -this.finalTransform.mProp.p
                                                    .v[1] +
                                                'px)';
                                            (e.transform = t),
                                                (e.webkitTransform = t);
                                        }
                                    }
                                    if (
                                        (this.textAnimator.getMeasures(
                                            this.textProperty.currentData,
                                            this.lettersChangedFlag
                                        ),
                                        !(
                                            !this.lettersChangedFlag &&
                                            !this.textAnimator
                                                .lettersChangedFlag
                                        ))
                                    ) {
                                        var r,
                                            i,
                                            s = 0,
                                            a =
                                                this.textAnimator
                                                    .renderedLetters,
                                            n = this.textProperty.currentData.l;
                                        i = n.length;
                                        var l, o, f;
                                        for (r = 0; r < i; r += 1)
                                            n[r].n
                                                ? (s += 1)
                                                : ((o = this.textSpans[r]),
                                                  (f = this.textPaths[r]),
                                                  (l = a[s]),
                                                  (s += 1),
                                                  l._mdf.m &&
                                                      (this.isMasked
                                                          ? o.setAttribute(
                                                                'transform',
                                                                l.m
                                                            )
                                                          : ((o.style.webkitTransform =
                                                                l.m),
                                                            (o.style.transform =
                                                                l.m))),
                                                  (o.style.opacity = l.o),
                                                  l.sw &&
                                                      l._mdf.sw &&
                                                      f.setAttribute(
                                                          'stroke-width',
                                                          l.sw
                                                      ),
                                                  l.sc &&
                                                      l._mdf.sc &&
                                                      f.setAttribute(
                                                          'stroke',
                                                          l.sc
                                                      ),
                                                  l.fc &&
                                                      l._mdf.fc &&
                                                      (f.setAttribute(
                                                          'fill',
                                                          l.fc
                                                      ),
                                                      (f.style.color = l.fc)));
                                        if (
                                            this.innerElem.getBBox &&
                                            !this.hidden &&
                                            (this._isFirstFrame || this._mdf)
                                        ) {
                                            var y = this.innerElem.getBBox();
                                            this.currentBBox.w !== y.width &&
                                                ((this.currentBBox.w = y.width),
                                                this.svgElement.setAttribute(
                                                    'width',
                                                    y.width
                                                )),
                                                this.currentBBox.h !==
                                                    y.height &&
                                                    ((this.currentBBox.h =
                                                        y.height),
                                                    this.svgElement.setAttribute(
                                                        'height',
                                                        y.height
                                                    ));
                                            var E = 1;
                                            if (
                                                this.currentBBox.w !==
                                                    y.width + E * 2 ||
                                                this.currentBBox.h !==
                                                    y.height + E * 2 ||
                                                this.currentBBox.x !==
                                                    y.x - E ||
                                                this.currentBBox.y !== y.y - E
                                            ) {
                                                (this.currentBBox.w =
                                                    y.width + E * 2),
                                                    (this.currentBBox.h =
                                                        y.height + E * 2),
                                                    (this.currentBBox.x =
                                                        y.x - E),
                                                    (this.currentBBox.y =
                                                        y.y - E),
                                                    this.svgElement.setAttribute(
                                                        'viewBox',
                                                        this.currentBBox.x +
                                                            ' ' +
                                                            this.currentBBox.y +
                                                            ' ' +
                                                            this.currentBBox.w +
                                                            ' ' +
                                                            this.currentBBox.h
                                                    ),
                                                    (e = this.svgElement.style);
                                                var u =
                                                    'translate(' +
                                                    this.currentBBox.x +
                                                    'px,' +
                                                    this.currentBBox.y +
                                                    'px)';
                                                (e.transform = u),
                                                    (e.webkitTransform = u);
                                            }
                                        }
                                    }
                                });
                        function HCameraElement(e, t, r) {
                            this.initFrame(),
                                this.initBaseData(e, t, r),
                                this.initHierarchy();
                            var i = PropertyFactory.getProp;
                            if (
                                ((this.pe = i(this, e.pe, 0, 0, this)),
                                e.ks.p.s
                                    ? ((this.px = i(
                                          this,
                                          e.ks.p.x,
                                          1,
                                          0,
                                          this
                                      )),
                                      (this.py = i(this, e.ks.p.y, 1, 0, this)),
                                      (this.pz = i(this, e.ks.p.z, 1, 0, this)))
                                    : (this.p = i(this, e.ks.p, 1, 0, this)),
                                e.ks.a &&
                                    (this.a = i(this, e.ks.a, 1, 0, this)),
                                e.ks.or.k.length && e.ks.or.k[0].to)
                            ) {
                                var s,
                                    a = e.ks.or.k.length;
                                for (s = 0; s < a; s += 1)
                                    (e.ks.or.k[s].to = null),
                                        (e.ks.or.k[s].ti = null);
                            }
                            (this.or = i(this, e.ks.or, 1, degToRads, this)),
                                (this.or.sh = !0),
                                (this.rx = i(
                                    this,
                                    e.ks.rx,
                                    0,
                                    degToRads,
                                    this
                                )),
                                (this.ry = i(
                                    this,
                                    e.ks.ry,
                                    0,
                                    degToRads,
                                    this
                                )),
                                (this.rz = i(
                                    this,
                                    e.ks.rz,
                                    0,
                                    degToRads,
                                    this
                                )),
                                (this.mat = new Matrix()),
                                (this._prevMat = new Matrix()),
                                (this._isFirstFrame = !0),
                                (this.finalTransform = { mProp: this });
                        }
                        extendPrototype(
                            [BaseElement, FrameElement, HierarchyElement],
                            HCameraElement
                        ),
                            (HCameraElement.prototype.setup = function () {
                                var e,
                                    t = this.comp.threeDElements.length,
                                    r,
                                    i,
                                    s;
                                for (e = 0; e < t; e += 1)
                                    if (
                                        ((r = this.comp.threeDElements[e]),
                                        r.type === '3d')
                                    ) {
                                        (i = r.perspectiveElem.style),
                                            (s = r.container.style);
                                        var a = this.pe.v + 'px',
                                            n = '0px 0px 0px',
                                            l =
                                                'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';
                                        (i.perspective = a),
                                            (i.webkitPerspective = a),
                                            (s.transformOrigin = n),
                                            (s.mozTransformOrigin = n),
                                            (s.webkitTransformOrigin = n),
                                            (i.transform = l),
                                            (i.webkitTransform = l);
                                    }
                            }),
                            (HCameraElement.prototype.createElements =
                                function () {}),
                            (HCameraElement.prototype.hide = function () {}),
                            (HCameraElement.prototype.renderFrame =
                                function () {
                                    var e = this._isFirstFrame,
                                        t,
                                        r;
                                    if (this.hierarchy)
                                        for (
                                            r = this.hierarchy.length, t = 0;
                                            t < r;
                                            t += 1
                                        )
                                            e =
                                                this.hierarchy[t].finalTransform
                                                    .mProp._mdf || e;
                                    if (
                                        e ||
                                        this.pe._mdf ||
                                        (this.p && this.p._mdf) ||
                                        (this.px &&
                                            (this.px._mdf ||
                                                this.py._mdf ||
                                                this.pz._mdf)) ||
                                        this.rx._mdf ||
                                        this.ry._mdf ||
                                        this.rz._mdf ||
                                        this.or._mdf ||
                                        (this.a && this.a._mdf)
                                    ) {
                                        if ((this.mat.reset(), this.hierarchy))
                                            for (
                                                r = this.hierarchy.length - 1,
                                                    t = r;
                                                t >= 0;
                                                t -= 1
                                            ) {
                                                var i =
                                                    this.hierarchy[t]
                                                        .finalTransform.mProp;
                                                this.mat.translate(
                                                    -i.p.v[0],
                                                    -i.p.v[1],
                                                    i.p.v[2]
                                                ),
                                                    this.mat
                                                        .rotateX(-i.or.v[0])
                                                        .rotateY(-i.or.v[1])
                                                        .rotateZ(i.or.v[2]),
                                                    this.mat
                                                        .rotateX(-i.rx.v)
                                                        .rotateY(-i.ry.v)
                                                        .rotateZ(i.rz.v),
                                                    this.mat.scale(
                                                        1 / i.s.v[0],
                                                        1 / i.s.v[1],
                                                        1 / i.s.v[2]
                                                    ),
                                                    this.mat.translate(
                                                        i.a.v[0],
                                                        i.a.v[1],
                                                        i.a.v[2]
                                                    );
                                            }
                                        if (
                                            (this.p
                                                ? this.mat.translate(
                                                      -this.p.v[0],
                                                      -this.p.v[1],
                                                      this.p.v[2]
                                                  )
                                                : this.mat.translate(
                                                      -this.px.v,
                                                      -this.py.v,
                                                      this.pz.v
                                                  ),
                                            this.a)
                                        ) {
                                            var s;
                                            this.p
                                                ? (s = [
                                                      this.p.v[0] - this.a.v[0],
                                                      this.p.v[1] - this.a.v[1],
                                                      this.p.v[2] - this.a.v[2],
                                                  ])
                                                : (s = [
                                                      this.px.v - this.a.v[0],
                                                      this.py.v - this.a.v[1],
                                                      this.pz.v - this.a.v[2],
                                                  ]);
                                            var a = Math.sqrt(
                                                    Math.pow(s[0], 2) +
                                                        Math.pow(s[1], 2) +
                                                        Math.pow(s[2], 2)
                                                ),
                                                n = [
                                                    s[0] / a,
                                                    s[1] / a,
                                                    s[2] / a,
                                                ],
                                                l = Math.sqrt(
                                                    n[2] * n[2] + n[0] * n[0]
                                                ),
                                                o = Math.atan2(n[1], l),
                                                f = Math.atan2(n[0], -n[2]);
                                            this.mat.rotateY(f).rotateX(-o);
                                        }
                                        this.mat
                                            .rotateX(-this.rx.v)
                                            .rotateY(-this.ry.v)
                                            .rotateZ(this.rz.v),
                                            this.mat
                                                .rotateX(-this.or.v[0])
                                                .rotateY(-this.or.v[1])
                                                .rotateZ(this.or.v[2]),
                                            this.mat.translate(
                                                this.globalData.compSize.w / 2,
                                                this.globalData.compSize.h / 2,
                                                0
                                            ),
                                            this.mat.translate(0, 0, this.pe.v);
                                        var y = !this._prevMat.equals(this.mat);
                                        if (
                                            (y || this.pe._mdf) &&
                                            this.comp.threeDElements
                                        ) {
                                            r = this.comp.threeDElements.length;
                                            var E, u, b;
                                            for (t = 0; t < r; t += 1)
                                                if (
                                                    ((E =
                                                        this.comp
                                                            .threeDElements[t]),
                                                    E.type === '3d')
                                                ) {
                                                    if (y) {
                                                        var _ =
                                                            this.mat.toCSS();
                                                        (b = E.container.style),
                                                            (b.transform = _),
                                                            (b.webkitTransform =
                                                                _);
                                                    }
                                                    this.pe._mdf &&
                                                        ((u =
                                                            E.perspectiveElem
                                                                .style),
                                                        (u.perspective =
                                                            this.pe.v + 'px'),
                                                        (u.webkitPerspective =
                                                            this.pe.v + 'px'));
                                                }
                                            this.mat.clone(this._prevMat);
                                        }
                                    }
                                    this._isFirstFrame = !1;
                                }),
                            (HCameraElement.prototype.prepareFrame = function (
                                e
                            ) {
                                this.prepareProperties(e, !0);
                            }),
                            (HCameraElement.prototype.destroy = function () {}),
                            (HCameraElement.prototype.getBaseElement =
                                function () {
                                    return null;
                                });
                        function HImageElement(e, t, r) {
                            (this.assetData = t.getAssetData(e.refId)),
                                this.initElement(e, t, r);
                        }
                        extendPrototype(
                            [
                                BaseElement,
                                TransformElement,
                                HBaseElement,
                                HSolidElement,
                                HierarchyElement,
                                FrameElement,
                                RenderableElement,
                            ],
                            HImageElement
                        ),
                            (HImageElement.prototype.createContent =
                                function () {
                                    var e = this.globalData.getAssetsPath(
                                            this.assetData
                                        ),
                                        t = new Image();
                                    this.data.hasMask
                                        ? ((this.imageElem = createNS('image')),
                                          this.imageElem.setAttribute(
                                              'width',
                                              this.assetData.w + 'px'
                                          ),
                                          this.imageElem.setAttribute(
                                              'height',
                                              this.assetData.h + 'px'
                                          ),
                                          this.imageElem.setAttributeNS(
                                              'http://www.w3.org/1999/xlink',
                                              'href',
                                              e
                                          ),
                                          this.layerElement.appendChild(
                                              this.imageElem
                                          ),
                                          this.baseElement.setAttribute(
                                              'width',
                                              this.assetData.w
                                          ),
                                          this.baseElement.setAttribute(
                                              'height',
                                              this.assetData.h
                                          ))
                                        : this.layerElement.appendChild(t),
                                        (t.crossOrigin = 'anonymous'),
                                        (t.src = e),
                                        this.data.ln &&
                                            this.baseElement.setAttribute(
                                                'id',
                                                this.data.ln
                                            );
                                });
                        function HybridRendererBase(e, t) {
                            (this.animationItem = e),
                                (this.layers = null),
                                (this.renderedFrame = -1),
                                (this.renderConfig = {
                                    className: (t && t.className) || '',
                                    imagePreserveAspectRatio:
                                        (t && t.imagePreserveAspectRatio) ||
                                        'xMidYMid slice',
                                    hideOnTransparent: !(
                                        t && t.hideOnTransparent === !1
                                    ),
                                    filterSize: {
                                        width:
                                            (t &&
                                                t.filterSize &&
                                                t.filterSize.width) ||
                                            '400%',
                                        height:
                                            (t &&
                                                t.filterSize &&
                                                t.filterSize.height) ||
                                            '400%',
                                        x:
                                            (t &&
                                                t.filterSize &&
                                                t.filterSize.x) ||
                                            '-100%',
                                        y:
                                            (t &&
                                                t.filterSize &&
                                                t.filterSize.y) ||
                                            '-100%',
                                    },
                                }),
                                (this.globalData = {
                                    _mdf: !1,
                                    frameNum: -1,
                                    renderConfig: this.renderConfig,
                                }),
                                (this.pendingElements = []),
                                (this.elements = []),
                                (this.threeDElements = []),
                                (this.destroyed = !1),
                                (this.camera = null),
                                (this.supports3d = !0),
                                (this.rendererType = 'html');
                        }
                        extendPrototype([BaseRenderer], HybridRendererBase),
                            (HybridRendererBase.prototype.buildItem =
                                SVGRenderer.prototype.buildItem),
                            (HybridRendererBase.prototype.checkPendingElements =
                                function () {
                                    for (; this.pendingElements.length; ) {
                                        var e = this.pendingElements.pop();
                                        e.checkParenting();
                                    }
                                }),
                            (HybridRendererBase.prototype.appendElementInPos =
                                function (e, t) {
                                    var r = e.getBaseElement();
                                    if (r) {
                                        var i = this.layers[t];
                                        if (!i.ddd || !this.supports3d)
                                            if (this.threeDElements)
                                                this.addTo3dContainer(r, t);
                                            else {
                                                for (
                                                    var s = 0, a, n, l;
                                                    s < t;

                                                )
                                                    this.elements[s] &&
                                                        this.elements[s] !==
                                                            !0 &&
                                                        this.elements[s]
                                                            .getBaseElement &&
                                                        ((n = this.elements[s]),
                                                        (l = this.layers[s].ddd
                                                            ? this.getThreeDContainerByPos(
                                                                  s
                                                              )
                                                            : n.getBaseElement()),
                                                        (a = l || a)),
                                                        (s += 1);
                                                a
                                                    ? (!i.ddd ||
                                                          !this.supports3d) &&
                                                      this.layerElement.insertBefore(
                                                          r,
                                                          a
                                                      )
                                                    : (!i.ddd ||
                                                          !this.supports3d) &&
                                                      this.layerElement.appendChild(
                                                          r
                                                      );
                                            }
                                        else this.addTo3dContainer(r, t);
                                    }
                                }),
                            (HybridRendererBase.prototype.createShape =
                                function (e) {
                                    return this.supports3d
                                        ? new HShapeElement(
                                              e,
                                              this.globalData,
                                              this
                                          )
                                        : new SVGShapeElement(
                                              e,
                                              this.globalData,
                                              this
                                          );
                                }),
                            (HybridRendererBase.prototype.createText =
                                function (e) {
                                    return this.supports3d
                                        ? new HTextElement(
                                              e,
                                              this.globalData,
                                              this
                                          )
                                        : new SVGTextLottieElement(
                                              e,
                                              this.globalData,
                                              this
                                          );
                                }),
                            (HybridRendererBase.prototype.createCamera =
                                function (e) {
                                    return (
                                        (this.camera = new HCameraElement(
                                            e,
                                            this.globalData,
                                            this
                                        )),
                                        this.camera
                                    );
                                }),
                            (HybridRendererBase.prototype.createImage =
                                function (e) {
                                    return this.supports3d
                                        ? new HImageElement(
                                              e,
                                              this.globalData,
                                              this
                                          )
                                        : new IImageElement(
                                              e,
                                              this.globalData,
                                              this
                                          );
                                }),
                            (HybridRendererBase.prototype.createSolid =
                                function (e) {
                                    return this.supports3d
                                        ? new HSolidElement(
                                              e,
                                              this.globalData,
                                              this
                                          )
                                        : new ISolidElement(
                                              e,
                                              this.globalData,
                                              this
                                          );
                                }),
                            (HybridRendererBase.prototype.createNull =
                                SVGRenderer.prototype.createNull),
                            (HybridRendererBase.prototype.getThreeDContainerByPos =
                                function (e) {
                                    for (
                                        var t = 0,
                                            r = this.threeDElements.length;
                                        t < r;

                                    ) {
                                        if (
                                            this.threeDElements[t].startPos <=
                                                e &&
                                            this.threeDElements[t].endPos >= e
                                        )
                                            return this.threeDElements[t]
                                                .perspectiveElem;
                                        t += 1;
                                    }
                                    return null;
                                }),
                            (HybridRendererBase.prototype.createThreeDContainer =
                                function (e, t) {
                                    var r = createTag('div'),
                                        i,
                                        s;
                                    styleDiv(r);
                                    var a = createTag('div');
                                    if ((styleDiv(a), t === '3d')) {
                                        (i = r.style),
                                            (i.width =
                                                this.globalData.compSize.w +
                                                'px'),
                                            (i.height =
                                                this.globalData.compSize.h +
                                                'px');
                                        var n = '50% 50%';
                                        (i.webkitTransformOrigin = n),
                                            (i.mozTransformOrigin = n),
                                            (i.transformOrigin = n),
                                            (s = a.style);
                                        var l =
                                            'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';
                                        (s.transform = l),
                                            (s.webkitTransform = l);
                                    }
                                    r.appendChild(a);
                                    var o = {
                                        container: a,
                                        perspectiveElem: r,
                                        startPos: e,
                                        endPos: e,
                                        type: t,
                                    };
                                    return this.threeDElements.push(o), o;
                                }),
                            (HybridRendererBase.prototype.build3dContainers =
                                function () {
                                    var e,
                                        t = this.layers.length,
                                        r,
                                        i = '';
                                    for (e = 0; e < t; e += 1)
                                        this.layers[e].ddd &&
                                        this.layers[e].ty !== 3
                                            ? (i !== '3d' &&
                                                  ((i = '3d'),
                                                  (r =
                                                      this.createThreeDContainer(
                                                          e,
                                                          '3d'
                                                      ))),
                                              (r.endPos = Math.max(
                                                  r.endPos,
                                                  e
                                              )))
                                            : (i !== '2d' &&
                                                  ((i = '2d'),
                                                  (r =
                                                      this.createThreeDContainer(
                                                          e,
                                                          '2d'
                                                      ))),
                                              (r.endPos = Math.max(
                                                  r.endPos,
                                                  e
                                              )));
                                    for (
                                        t = this.threeDElements.length,
                                            e = t - 1;
                                        e >= 0;
                                        e -= 1
                                    )
                                        this.resizerElem.appendChild(
                                            this.threeDElements[e]
                                                .perspectiveElem
                                        );
                                }),
                            (HybridRendererBase.prototype.addTo3dContainer =
                                function (e, t) {
                                    for (
                                        var r = 0,
                                            i = this.threeDElements.length;
                                        r < i;

                                    ) {
                                        if (
                                            t <= this.threeDElements[r].endPos
                                        ) {
                                            for (
                                                var s =
                                                        this.threeDElements[r]
                                                            .startPos,
                                                    a;
                                                s < t;

                                            )
                                                this.elements[s] &&
                                                    this.elements[s]
                                                        .getBaseElement &&
                                                    (a =
                                                        this.elements[
                                                            s
                                                        ].getBaseElement()),
                                                    (s += 1);
                                            a
                                                ? this.threeDElements[
                                                      r
                                                  ].container.insertBefore(e, a)
                                                : this.threeDElements[
                                                      r
                                                  ].container.appendChild(e);
                                            break;
                                        }
                                        r += 1;
                                    }
                                }),
                            (HybridRendererBase.prototype.configAnimation =
                                function (e) {
                                    var t = createTag('div'),
                                        r = this.animationItem.wrapper,
                                        i = t.style;
                                    (i.width = e.w + 'px'),
                                        (i.height = e.h + 'px'),
                                        (this.resizerElem = t),
                                        styleDiv(t),
                                        (i.transformStyle = 'flat'),
                                        (i.mozTransformStyle = 'flat'),
                                        (i.webkitTransformStyle = 'flat'),
                                        this.renderConfig.className &&
                                            t.setAttribute(
                                                'class',
                                                this.renderConfig.className
                                            ),
                                        r.appendChild(t),
                                        (i.overflow = 'hidden');
                                    var s = createNS('svg');
                                    s.setAttribute('width', '1'),
                                        s.setAttribute('height', '1'),
                                        styleDiv(s),
                                        this.resizerElem.appendChild(s);
                                    var a = createNS('defs');
                                    s.appendChild(a),
                                        (this.data = e),
                                        this.setupGlobalData(e, s),
                                        (this.globalData.defs = a),
                                        (this.layers = e.layers),
                                        (this.layerElement = this.resizerElem),
                                        this.build3dContainers(),
                                        this.updateContainerSize();
                                }),
                            (HybridRendererBase.prototype.destroy =
                                function () {
                                    this.animationItem.wrapper &&
                                        (this.animationItem.wrapper.innerText =
                                            ''),
                                        (this.animationItem.container = null),
                                        (this.globalData.defs = null);
                                    var e,
                                        t = this.layers
                                            ? this.layers.length
                                            : 0;
                                    for (e = 0; e < t; e += 1)
                                        this.elements[e] &&
                                            this.elements[e].destroy &&
                                            this.elements[e].destroy();
                                    (this.elements.length = 0),
                                        (this.destroyed = !0),
                                        (this.animationItem = null);
                                }),
                            (HybridRendererBase.prototype.updateContainerSize =
                                function () {
                                    var e =
                                            this.animationItem.wrapper
                                                .offsetWidth,
                                        t =
                                            this.animationItem.wrapper
                                                .offsetHeight,
                                        r = e / t,
                                        i =
                                            this.globalData.compSize.w /
                                            this.globalData.compSize.h,
                                        s,
                                        a,
                                        n,
                                        l;
                                    i > r
                                        ? ((s = e / this.globalData.compSize.w),
                                          (a = e / this.globalData.compSize.w),
                                          (n = 0),
                                          (l =
                                              (t -
                                                  this.globalData.compSize.h *
                                                      (e /
                                                          this.globalData
                                                              .compSize.w)) /
                                              2))
                                        : ((s = t / this.globalData.compSize.h),
                                          (a = t / this.globalData.compSize.h),
                                          (n =
                                              (e -
                                                  this.globalData.compSize.w *
                                                      (t /
                                                          this.globalData
                                                              .compSize.h)) /
                                              2),
                                          (l = 0));
                                    var o = this.resizerElem.style;
                                    (o.webkitTransform =
                                        'matrix3d(' +
                                        s +
                                        ',0,0,0,0,' +
                                        a +
                                        ',0,0,0,0,1,0,' +
                                        n +
                                        ',' +
                                        l +
                                        ',0,1)'),
                                        (o.transform = o.webkitTransform);
                                }),
                            (HybridRendererBase.prototype.renderFrame =
                                SVGRenderer.prototype.renderFrame),
                            (HybridRendererBase.prototype.hide = function () {
                                this.resizerElem.style.display = 'none';
                            }),
                            (HybridRendererBase.prototype.show = function () {
                                this.resizerElem.style.display = 'block';
                            }),
                            (HybridRendererBase.prototype.initItems =
                                function () {
                                    if ((this.buildAllItems(), this.camera))
                                        this.camera.setup();
                                    else {
                                        var e = this.globalData.compSize.w,
                                            t = this.globalData.compSize.h,
                                            r,
                                            i = this.threeDElements.length;
                                        for (r = 0; r < i; r += 1) {
                                            var s =
                                                this.threeDElements[r]
                                                    .perspectiveElem.style;
                                            (s.webkitPerspective =
                                                Math.sqrt(
                                                    Math.pow(e, 2) +
                                                        Math.pow(t, 2)
                                                ) + 'px'),
                                                (s.perspective =
                                                    s.webkitPerspective);
                                        }
                                    }
                                }),
                            (HybridRendererBase.prototype.searchExtraCompositions =
                                function (e) {
                                    var t,
                                        r = e.length,
                                        i = createTag('div');
                                    for (t = 0; t < r; t += 1)
                                        if (e[t].xt) {
                                            var s = this.createComp(
                                                e[t],
                                                i,
                                                this.globalData.comp,
                                                null
                                            );
                                            s.initExpressions(),
                                                this.globalData.projectInterface.registerComposition(
                                                    s
                                                );
                                        }
                                });
                        function HCompElement(e, t, r) {
                            (this.layers = e.layers),
                                (this.supports3d = !e.hasMask),
                                (this.completeLayers = !1),
                                (this.pendingElements = []),
                                (this.elements = this.layers
                                    ? createSizedArray(this.layers.length)
                                    : []),
                                this.initElement(e, t, r),
                                (this.tm = e.tm
                                    ? PropertyFactory.getProp(
                                          this,
                                          e.tm,
                                          0,
                                          t.frameRate,
                                          this
                                      )
                                    : { _placeholder: !0 });
                        }
                        extendPrototype(
                            [HybridRendererBase, ICompElement, HBaseElement],
                            HCompElement
                        ),
                            (HCompElement.prototype._createBaseContainerElements =
                                HCompElement.prototype.createContainerElements),
                            (HCompElement.prototype.createContainerElements =
                                function () {
                                    this._createBaseContainerElements(),
                                        this.data.hasMask
                                            ? (this.svgElement.setAttribute(
                                                  'width',
                                                  this.data.w
                                              ),
                                              this.svgElement.setAttribute(
                                                  'height',
                                                  this.data.h
                                              ),
                                              (this.transformedElement =
                                                  this.baseElement))
                                            : (this.transformedElement =
                                                  this.layerElement);
                                }),
                            (HCompElement.prototype.addTo3dContainer =
                                function (e, t) {
                                    for (var r = 0, i; r < t; )
                                        this.elements[r] &&
                                            this.elements[r].getBaseElement &&
                                            (i =
                                                this.elements[
                                                    r
                                                ].getBaseElement()),
                                            (r += 1);
                                    i
                                        ? this.layerElement.insertBefore(e, i)
                                        : this.layerElement.appendChild(e);
                                }),
                            (HCompElement.prototype.createComp = function (e) {
                                return this.supports3d
                                    ? new HCompElement(e, this.globalData, this)
                                    : new SVGCompElement(
                                          e,
                                          this.globalData,
                                          this
                                      );
                            });
                        function HybridRenderer(e, t) {
                            (this.animationItem = e),
                                (this.layers = null),
                                (this.renderedFrame = -1),
                                (this.renderConfig = {
                                    className: (t && t.className) || '',
                                    imagePreserveAspectRatio:
                                        (t && t.imagePreserveAspectRatio) ||
                                        'xMidYMid slice',
                                    hideOnTransparent: !(
                                        t && t.hideOnTransparent === !1
                                    ),
                                    filterSize: {
                                        width:
                                            (t &&
                                                t.filterSize &&
                                                t.filterSize.width) ||
                                            '400%',
                                        height:
                                            (t &&
                                                t.filterSize &&
                                                t.filterSize.height) ||
                                            '400%',
                                        x:
                                            (t &&
                                                t.filterSize &&
                                                t.filterSize.x) ||
                                            '-100%',
                                        y:
                                            (t &&
                                                t.filterSize &&
                                                t.filterSize.y) ||
                                            '-100%',
                                    },
                                    runExpressions:
                                        !t ||
                                        t.runExpressions === void 0 ||
                                        t.runExpressions,
                                }),
                                (this.globalData = {
                                    _mdf: !1,
                                    frameNum: -1,
                                    renderConfig: this.renderConfig,
                                }),
                                (this.pendingElements = []),
                                (this.elements = []),
                                (this.threeDElements = []),
                                (this.destroyed = !1),
                                (this.camera = null),
                                (this.supports3d = !0),
                                (this.rendererType = 'html');
                        }
                        extendPrototype([HybridRendererBase], HybridRenderer),
                            (HybridRenderer.prototype.createComp = function (
                                e
                            ) {
                                return this.supports3d
                                    ? new HCompElement(e, this.globalData, this)
                                    : new SVGCompElement(
                                          e,
                                          this.globalData,
                                          this
                                      );
                            });
                        var CompExpressionInterface = (function () {
                            return function (e) {
                                function t(r) {
                                    for (
                                        var i = 0, s = e.layers.length;
                                        i < s;

                                    ) {
                                        if (
                                            e.layers[i].nm === r ||
                                            e.layers[i].ind === r
                                        )
                                            return e.elements[i].layerInterface;
                                        i += 1;
                                    }
                                    return null;
                                }
                                return (
                                    Object.defineProperty(t, '_name', {
                                        value: e.data.nm,
                                    }),
                                    (t.layer = t),
                                    (t.pixelAspect = 1),
                                    (t.height =
                                        e.data.h || e.globalData.compSize.h),
                                    (t.width =
                                        e.data.w || e.globalData.compSize.w),
                                    (t.pixelAspect = 1),
                                    (t.frameDuration =
                                        1 / e.globalData.frameRate),
                                    (t.displayStartTime = 0),
                                    (t.numLayers = e.layers.length),
                                    t
                                );
                            };
                        })();
                        function _typeof$2(e) {
                            '@babel/helpers - typeof';
                            return (
                                typeof Symbol == 'function' &&
                                typeof Symbol.iterator == 'symbol'
                                    ? (_typeof$2 = function (r) {
                                          return typeof r;
                                      })
                                    : (_typeof$2 = function (r) {
                                          return r &&
                                              typeof Symbol == 'function' &&
                                              r.constructor === Symbol &&
                                              r !== Symbol.prototype
                                              ? 'symbol'
                                              : typeof r;
                                      }),
                                _typeof$2(e)
                            );
                        }
                        function seedRandom(e, t) {
                            var r = this,
                                i = 256,
                                s = 6,
                                a = 52,
                                n = 'random',
                                l = t.pow(i, s),
                                o = t.pow(2, a),
                                f = o * 2,
                                y = i - 1,
                                E;
                            function u(p, g, P) {
                                var A = [];
                                g = g === !0 ? { entropy: !0 } : g || {};
                                var F = C(
                                        d(
                                            g.entropy
                                                ? [p, m(e)]
                                                : p === null
                                                  ? c()
                                                  : p,
                                            3
                                        ),
                                        A
                                    ),
                                    T = new b(A),
                                    D = function () {
                                        for (
                                            var q = T.g(s), V = l, j = 0;
                                            q < o;

                                        )
                                            (q = (q + j) * i),
                                                (V *= i),
                                                (j = T.g(1));
                                        for (; q >= f; )
                                            (q /= 2), (V /= 2), (j >>>= 1);
                                        return (q + j) / V;
                                    };
                                return (
                                    (D.int32 = function () {
                                        return T.g(4) | 0;
                                    }),
                                    (D.quick = function () {
                                        return T.g(4) / 4294967296;
                                    }),
                                    (D.double = D),
                                    C(m(T.S), e),
                                    (
                                        g.pass ||
                                        P ||
                                        function (L, q, V, j) {
                                            return (
                                                j &&
                                                    (j.S && _(j, T),
                                                    (L.state = function () {
                                                        return _(T, {});
                                                    })),
                                                V ? ((t[n] = L), q) : L
                                            );
                                        }
                                    )(
                                        D,
                                        F,
                                        'global' in g ? g.global : this == t,
                                        g.state
                                    )
                                );
                            }
                            t['seed' + n] = u;
                            function b(p) {
                                var g,
                                    P = p.length,
                                    A = this,
                                    F = 0,
                                    T = (A.i = A.j = 0),
                                    D = (A.S = []);
                                for (P || (p = [P++]); F < i; ) D[F] = F++;
                                for (F = 0; F < i; F++)
                                    (D[F] =
                                        D[
                                            (T =
                                                y & (T + p[F % P] + (g = D[F])))
                                        ]),
                                        (D[T] = g);
                                A.g = function (L) {
                                    for (
                                        var q, V = 0, j = A.i, G = A.j, B = A.S;
                                        L--;

                                    )
                                        (q = B[(j = y & (j + 1))]),
                                            (V =
                                                V * i +
                                                B[
                                                    y &
                                                        ((B[j] =
                                                            B[
                                                                (G =
                                                                    y & (G + q))
                                                            ]) +
                                                            (B[G] = q))
                                                ]);
                                    return (A.i = j), (A.j = G), V;
                                };
                            }
                            function _(p, g) {
                                return (
                                    (g.i = p.i),
                                    (g.j = p.j),
                                    (g.S = p.S.slice()),
                                    g
                                );
                            }
                            function d(p, g) {
                                var P = [],
                                    A = _typeof$2(p),
                                    F;
                                if (g && A == 'object')
                                    for (F in p)
                                        try {
                                            P.push(d(p[F], g - 1));
                                        } catch {}
                                return P.length
                                    ? P
                                    : A == 'string'
                                      ? p
                                      : p + '\0';
                            }
                            function C(p, g) {
                                for (var P = p + '', A, F = 0; F < P.length; )
                                    g[y & F] =
                                        y &
                                        ((A ^= g[y & F] * 19) +
                                            P.charCodeAt(F++));
                                return m(g);
                            }
                            function c() {
                                try {
                                    var p = new Uint8Array(i);
                                    return (
                                        (
                                            r.crypto || r.msCrypto
                                        ).getRandomValues(p),
                                        m(p)
                                    );
                                } catch {
                                    var g = r.navigator,
                                        P = g && g.plugins;
                                    return [+new Date(), r, P, r.screen, m(e)];
                                }
                            }
                            function m(p) {
                                return String.fromCharCode.apply(0, p);
                            }
                            C(t.random(), e);
                        }
                        function initialize$2(e) {
                            seedRandom([], e);
                        }
                        var propTypes = { SHAPE: 'shape' };
                        function _typeof$1(e) {
                            '@babel/helpers - typeof';
                            return (
                                typeof Symbol == 'function' &&
                                typeof Symbol.iterator == 'symbol'
                                    ? (_typeof$1 = function (r) {
                                          return typeof r;
                                      })
                                    : (_typeof$1 = function (r) {
                                          return r &&
                                              typeof Symbol == 'function' &&
                                              r.constructor === Symbol &&
                                              r !== Symbol.prototype
                                              ? 'symbol'
                                              : typeof r;
                                      }),
                                _typeof$1(e)
                            );
                        }
                        var ExpressionManager = (function () {
                                var ob = {},
                                    Math = BMMath,
                                    window = null,
                                    document = null,
                                    XMLHttpRequest = null,
                                    fetch = null,
                                    frames = null,
                                    _lottieGlobal = {};
                                initialize$2(BMMath);
                                function resetFrame() {
                                    _lottieGlobal = {};
                                }
                                function $bm_isInstanceOfArray(e) {
                                    return (
                                        e.constructor === Array ||
                                        e.constructor === Float32Array
                                    );
                                }
                                function isNumerable(e, t) {
                                    return (
                                        e === 'number' ||
                                        t instanceof Number ||
                                        e === 'boolean' ||
                                        e === 'string'
                                    );
                                }
                                function $bm_neg(e) {
                                    var t = _typeof$1(e);
                                    if (
                                        t === 'number' ||
                                        e instanceof Number ||
                                        t === 'boolean'
                                    )
                                        return -e;
                                    if ($bm_isInstanceOfArray(e)) {
                                        var r,
                                            i = e.length,
                                            s = [];
                                        for (r = 0; r < i; r += 1) s[r] = -e[r];
                                        return s;
                                    }
                                    return e.propType ? e.v : -e;
                                }
                                var easeInBez = BezierFactory.getBezierEasing(
                                        0.333,
                                        0,
                                        0.833,
                                        0.833,
                                        'easeIn'
                                    ).get,
                                    easeOutBez = BezierFactory.getBezierEasing(
                                        0.167,
                                        0.167,
                                        0.667,
                                        1,
                                        'easeOut'
                                    ).get,
                                    easeInOutBez =
                                        BezierFactory.getBezierEasing(
                                            0.33,
                                            0,
                                            0.667,
                                            1,
                                            'easeInOut'
                                        ).get;
                                function sum(e, t) {
                                    var r = _typeof$1(e),
                                        i = _typeof$1(t);
                                    if (
                                        (isNumerable(r, e) &&
                                            isNumerable(i, t)) ||
                                        r === 'string' ||
                                        i === 'string'
                                    )
                                        return e + t;
                                    if (
                                        $bm_isInstanceOfArray(e) &&
                                        isNumerable(i, t)
                                    )
                                        return (e = e.slice(0)), (e[0] += t), e;
                                    if (
                                        isNumerable(r, e) &&
                                        $bm_isInstanceOfArray(t)
                                    )
                                        return (
                                            (t = t.slice(0)),
                                            (t[0] = e + t[0]),
                                            t
                                        );
                                    if (
                                        $bm_isInstanceOfArray(e) &&
                                        $bm_isInstanceOfArray(t)
                                    ) {
                                        for (
                                            var s = 0,
                                                a = e.length,
                                                n = t.length,
                                                l = [];
                                            s < a || s < n;

                                        )
                                            (typeof e[s] == 'number' ||
                                                e[s] instanceof Number) &&
                                            (typeof t[s] == 'number' ||
                                                t[s] instanceof Number)
                                                ? (l[s] = e[s] + t[s])
                                                : (l[s] =
                                                      t[s] === void 0
                                                          ? e[s]
                                                          : e[s] || t[s]),
                                                (s += 1);
                                        return l;
                                    }
                                    return 0;
                                }
                                var add = sum;
                                function sub(e, t) {
                                    var r = _typeof$1(e),
                                        i = _typeof$1(t);
                                    if (isNumerable(r, e) && isNumerable(i, t))
                                        return (
                                            r === 'string' &&
                                                (e = parseInt(e, 10)),
                                            i === 'string' &&
                                                (t = parseInt(t, 10)),
                                            e - t
                                        );
                                    if (
                                        $bm_isInstanceOfArray(e) &&
                                        isNumerable(i, t)
                                    )
                                        return (e = e.slice(0)), (e[0] -= t), e;
                                    if (
                                        isNumerable(r, e) &&
                                        $bm_isInstanceOfArray(t)
                                    )
                                        return (
                                            (t = t.slice(0)),
                                            (t[0] = e - t[0]),
                                            t
                                        );
                                    if (
                                        $bm_isInstanceOfArray(e) &&
                                        $bm_isInstanceOfArray(t)
                                    ) {
                                        for (
                                            var s = 0,
                                                a = e.length,
                                                n = t.length,
                                                l = [];
                                            s < a || s < n;

                                        )
                                            (typeof e[s] == 'number' ||
                                                e[s] instanceof Number) &&
                                            (typeof t[s] == 'number' ||
                                                t[s] instanceof Number)
                                                ? (l[s] = e[s] - t[s])
                                                : (l[s] =
                                                      t[s] === void 0
                                                          ? e[s]
                                                          : e[s] || t[s]),
                                                (s += 1);
                                        return l;
                                    }
                                    return 0;
                                }
                                function mul(e, t) {
                                    var r = _typeof$1(e),
                                        i = _typeof$1(t),
                                        s;
                                    if (isNumerable(r, e) && isNumerable(i, t))
                                        return e * t;
                                    var a, n;
                                    if (
                                        $bm_isInstanceOfArray(e) &&
                                        isNumerable(i, t)
                                    ) {
                                        for (
                                            n = e.length,
                                                s = createTypedArray(
                                                    'float32',
                                                    n
                                                ),
                                                a = 0;
                                            a < n;
                                            a += 1
                                        )
                                            s[a] = e[a] * t;
                                        return s;
                                    }
                                    if (
                                        isNumerable(r, e) &&
                                        $bm_isInstanceOfArray(t)
                                    ) {
                                        for (
                                            n = t.length,
                                                s = createTypedArray(
                                                    'float32',
                                                    n
                                                ),
                                                a = 0;
                                            a < n;
                                            a += 1
                                        )
                                            s[a] = e * t[a];
                                        return s;
                                    }
                                    return 0;
                                }
                                function div(e, t) {
                                    var r = _typeof$1(e),
                                        i = _typeof$1(t),
                                        s;
                                    if (isNumerable(r, e) && isNumerable(i, t))
                                        return e / t;
                                    var a, n;
                                    if (
                                        $bm_isInstanceOfArray(e) &&
                                        isNumerable(i, t)
                                    ) {
                                        for (
                                            n = e.length,
                                                s = createTypedArray(
                                                    'float32',
                                                    n
                                                ),
                                                a = 0;
                                            a < n;
                                            a += 1
                                        )
                                            s[a] = e[a] / t;
                                        return s;
                                    }
                                    if (
                                        isNumerable(r, e) &&
                                        $bm_isInstanceOfArray(t)
                                    ) {
                                        for (
                                            n = t.length,
                                                s = createTypedArray(
                                                    'float32',
                                                    n
                                                ),
                                                a = 0;
                                            a < n;
                                            a += 1
                                        )
                                            s[a] = e / t[a];
                                        return s;
                                    }
                                    return 0;
                                }
                                function mod(e, t) {
                                    return (
                                        typeof e == 'string' &&
                                            (e = parseInt(e, 10)),
                                        typeof t == 'string' &&
                                            (t = parseInt(t, 10)),
                                        e % t
                                    );
                                }
                                var $bm_sum = sum,
                                    $bm_sub = sub,
                                    $bm_mul = mul,
                                    $bm_div = div,
                                    $bm_mod = mod;
                                function clamp(e, t, r) {
                                    if (t > r) {
                                        var i = r;
                                        (r = t), (t = i);
                                    }
                                    return Math.min(Math.max(e, t), r);
                                }
                                function radiansToDegrees(e) {
                                    return e / degToRads;
                                }
                                var radians_to_degrees = radiansToDegrees;
                                function degreesToRadians(e) {
                                    return e * degToRads;
                                }
                                var degrees_to_radians = radiansToDegrees,
                                    helperLengthArray = [0, 0, 0, 0, 0, 0];
                                function length(e, t) {
                                    if (
                                        typeof e == 'number' ||
                                        e instanceof Number
                                    )
                                        return (t = t || 0), Math.abs(e - t);
                                    t || (t = helperLengthArray);
                                    var r,
                                        i = Math.min(e.length, t.length),
                                        s = 0;
                                    for (r = 0; r < i; r += 1)
                                        s += Math.pow(t[r] - e[r], 2);
                                    return Math.sqrt(s);
                                }
                                function normalize(e) {
                                    return div(e, length(e));
                                }
                                function rgbToHsl(e) {
                                    var t = e[0],
                                        r = e[1],
                                        i = e[2],
                                        s = Math.max(t, r, i),
                                        a = Math.min(t, r, i),
                                        n,
                                        l,
                                        o = (s + a) / 2;
                                    if (s === a) (n = 0), (l = 0);
                                    else {
                                        var f = s - a;
                                        switch (
                                            ((l =
                                                o > 0.5
                                                    ? f / (2 - s - a)
                                                    : f / (s + a)),
                                            s)
                                        ) {
                                            case t:
                                                n =
                                                    (r - i) / f +
                                                    (r < i ? 6 : 0);
                                                break;
                                            case r:
                                                n = (i - t) / f + 2;
                                                break;
                                            case i:
                                                n = (t - r) / f + 4;
                                                break;
                                        }
                                        n /= 6;
                                    }
                                    return [n, l, o, e[3]];
                                }
                                function hue2rgb(e, t, r) {
                                    return (
                                        r < 0 && (r += 1),
                                        r > 1 && (r -= 1),
                                        r < 1 / 6
                                            ? e + (t - e) * 6 * r
                                            : r < 1 / 2
                                              ? t
                                              : r < 2 / 3
                                                ? e + (t - e) * (2 / 3 - r) * 6
                                                : e
                                    );
                                }
                                function hslToRgb(e) {
                                    var t = e[0],
                                        r = e[1],
                                        i = e[2],
                                        s,
                                        a,
                                        n;
                                    if (r === 0) (s = i), (n = i), (a = i);
                                    else {
                                        var l =
                                                i < 0.5
                                                    ? i * (1 + r)
                                                    : i + r - i * r,
                                            o = 2 * i - l;
                                        (s = hue2rgb(o, l, t + 1 / 3)),
                                            (a = hue2rgb(o, l, t)),
                                            (n = hue2rgb(o, l, t - 1 / 3));
                                    }
                                    return [s, a, n, e[3]];
                                }
                                function linear(e, t, r, i, s) {
                                    if (
                                        ((i === void 0 || s === void 0) &&
                                            ((i = t),
                                            (s = r),
                                            (t = 0),
                                            (r = 1)),
                                        r < t)
                                    ) {
                                        var a = r;
                                        (r = t), (t = a);
                                    }
                                    if (e <= t) return i;
                                    if (e >= r) return s;
                                    var n = r === t ? 0 : (e - t) / (r - t);
                                    if (!i.length) return i + (s - i) * n;
                                    var l,
                                        o = i.length,
                                        f = createTypedArray('float32', o);
                                    for (l = 0; l < o; l += 1)
                                        f[l] = i[l] + (s[l] - i[l]) * n;
                                    return f;
                                }
                                function random(e, t) {
                                    if (
                                        (t === void 0 &&
                                            (e === void 0
                                                ? ((e = 0), (t = 1))
                                                : ((t = e), (e = void 0))),
                                        t.length)
                                    ) {
                                        var r,
                                            i = t.length;
                                        e ||
                                            (e = createTypedArray(
                                                'float32',
                                                i
                                            ));
                                        var s = createTypedArray('float32', i),
                                            a = BMMath.random();
                                        for (r = 0; r < i; r += 1)
                                            s[r] = e[r] + a * (t[r] - e[r]);
                                        return s;
                                    }
                                    e === void 0 && (e = 0);
                                    var n = BMMath.random();
                                    return e + n * (t - e);
                                }
                                function createPath(e, t, r, i) {
                                    var s,
                                        a = e.length,
                                        n = shapePool.newElement();
                                    n.setPathData(!!i, a);
                                    var l = [0, 0],
                                        o,
                                        f;
                                    for (s = 0; s < a; s += 1)
                                        (o = t && t[s] ? t[s] : l),
                                            (f = r && r[s] ? r[s] : l),
                                            n.setTripleAt(
                                                e[s][0],
                                                e[s][1],
                                                f[0] + e[s][0],
                                                f[1] + e[s][1],
                                                o[0] + e[s][0],
                                                o[1] + e[s][1],
                                                s,
                                                !0
                                            );
                                    return n;
                                }
                                function initiateExpression(
                                    elem,
                                    data,
                                    property
                                ) {
                                    function noOp(e) {
                                        return e;
                                    }
                                    if (
                                        !elem.globalData.renderConfig
                                            .runExpressions
                                    )
                                        return noOp;
                                    var val = data.x,
                                        needsVelocity =
                                            /velocity(?![\w\d])/.test(val),
                                        _needsRandom =
                                            val.indexOf('random') !== -1,
                                        elemType = elem.data.ty,
                                        transform,
                                        $bm_transform,
                                        content,
                                        effect,
                                        thisProperty = property;
                                    (thisProperty.valueAtTime =
                                        thisProperty.getValueAtTime),
                                        Object.defineProperty(
                                            thisProperty,
                                            'value',
                                            {
                                                get: function () {
                                                    return thisProperty.v;
                                                },
                                            }
                                        ),
                                        (elem.comp.frameDuration =
                                            1 / elem.comp.globalData.frameRate),
                                        (elem.comp.displayStartTime = 0);
                                    var inPoint =
                                            elem.data.ip /
                                            elem.comp.globalData.frameRate,
                                        outPoint =
                                            elem.data.op /
                                            elem.comp.globalData.frameRate,
                                        width = elem.data.sw ? elem.data.sw : 0,
                                        height = elem.data.sh
                                            ? elem.data.sh
                                            : 0,
                                        name = elem.data.nm,
                                        loopIn,
                                        loop_in,
                                        loopOut,
                                        loop_out,
                                        smooth,
                                        toWorld,
                                        fromWorld,
                                        fromComp,
                                        toComp,
                                        fromCompToSurface,
                                        position,
                                        rotation,
                                        anchorPoint,
                                        scale,
                                        thisLayer,
                                        thisComp,
                                        mask,
                                        valueAtTime,
                                        velocityAtTime,
                                        scoped_bm_rt,
                                        expression_function = eval(
                                            '[function _expression_function(){' +
                                                val +
                                                ';scoped_bm_rt=$bm_rt}]'
                                        )[0],
                                        numKeys = property.kf
                                            ? data.k.length
                                            : 0,
                                        active =
                                            !this.data || this.data.hd !== !0,
                                        wiggle = function e(t, r) {
                                            var i,
                                                s,
                                                a = this.pv.length
                                                    ? this.pv.length
                                                    : 1,
                                                n = createTypedArray(
                                                    'float32',
                                                    a
                                                );
                                            t = 5;
                                            var l = Math.floor(time * t);
                                            for (i = 0, s = 0; i < l; ) {
                                                for (s = 0; s < a; s += 1)
                                                    n[s] +=
                                                        -r +
                                                        r * 2 * BMMath.random();
                                                i += 1;
                                            }
                                            var o = time * t,
                                                f = o - Math.floor(o),
                                                y = createTypedArray(
                                                    'float32',
                                                    a
                                                );
                                            if (a > 1) {
                                                for (s = 0; s < a; s += 1)
                                                    y[s] =
                                                        this.pv[s] +
                                                        n[s] +
                                                        (-r +
                                                            r *
                                                                2 *
                                                                BMMath.random()) *
                                                            f;
                                                return y;
                                            }
                                            return (
                                                this.pv +
                                                n[0] +
                                                (-r + r * 2 * BMMath.random()) *
                                                    f
                                            );
                                        }.bind(this);
                                    thisProperty.loopIn &&
                                        ((loopIn =
                                            thisProperty.loopIn.bind(
                                                thisProperty
                                            )),
                                        (loop_in = loopIn)),
                                        thisProperty.loopOut &&
                                            ((loopOut =
                                                thisProperty.loopOut.bind(
                                                    thisProperty
                                                )),
                                            (loop_out = loopOut)),
                                        thisProperty.smooth &&
                                            (smooth =
                                                thisProperty.smooth.bind(
                                                    thisProperty
                                                ));
                                    function loopInDuration(e, t) {
                                        return loopIn(e, t, !0);
                                    }
                                    function loopOutDuration(e, t) {
                                        return loopOut(e, t, !0);
                                    }
                                    this.getValueAtTime &&
                                        (valueAtTime =
                                            this.getValueAtTime.bind(this)),
                                        this.getVelocityAtTime &&
                                            (velocityAtTime =
                                                this.getVelocityAtTime.bind(
                                                    this
                                                ));
                                    var comp =
                                        elem.comp.globalData.projectInterface.bind(
                                            elem.comp.globalData
                                                .projectInterface
                                        );
                                    function lookAt(e, t) {
                                        var r = [
                                                t[0] - e[0],
                                                t[1] - e[1],
                                                t[2] - e[2],
                                            ],
                                            i =
                                                Math.atan2(
                                                    r[0],
                                                    Math.sqrt(
                                                        r[1] * r[1] +
                                                            r[2] * r[2]
                                                    )
                                                ) / degToRads,
                                            s =
                                                -Math.atan2(r[1], r[2]) /
                                                degToRads;
                                        return [s, i, 0];
                                    }
                                    function easeOut(e, t, r, i, s) {
                                        return applyEase(
                                            easeOutBez,
                                            e,
                                            t,
                                            r,
                                            i,
                                            s
                                        );
                                    }
                                    function easeIn(e, t, r, i, s) {
                                        return applyEase(
                                            easeInBez,
                                            e,
                                            t,
                                            r,
                                            i,
                                            s
                                        );
                                    }
                                    function ease(e, t, r, i, s) {
                                        return applyEase(
                                            easeInOutBez,
                                            e,
                                            t,
                                            r,
                                            i,
                                            s
                                        );
                                    }
                                    function applyEase(e, t, r, i, s, a) {
                                        s === void 0
                                            ? ((s = r), (a = i))
                                            : (t = (t - r) / (i - r)),
                                            t > 1 ? (t = 1) : t < 0 && (t = 0);
                                        var n = e(t);
                                        if ($bm_isInstanceOfArray(s)) {
                                            var l,
                                                o = s.length,
                                                f = createTypedArray(
                                                    'float32',
                                                    o
                                                );
                                            for (l = 0; l < o; l += 1)
                                                f[l] = (a[l] - s[l]) * n + s[l];
                                            return f;
                                        }
                                        return (a - s) * n + s;
                                    }
                                    function nearestKey(e) {
                                        var t,
                                            r = data.k.length,
                                            i,
                                            s;
                                        if (
                                            !data.k.length ||
                                            typeof data.k[0] == 'number'
                                        )
                                            (i = 0), (s = 0);
                                        else if (
                                            ((i = -1),
                                            (e *=
                                                elem.comp.globalData.frameRate),
                                            e < data.k[0].t)
                                        )
                                            (i = 1), (s = data.k[0].t);
                                        else {
                                            for (t = 0; t < r - 1; t += 1)
                                                if (e === data.k[t].t) {
                                                    (i = t + 1),
                                                        (s = data.k[t].t);
                                                    break;
                                                } else if (
                                                    e > data.k[t].t &&
                                                    e < data.k[t + 1].t
                                                ) {
                                                    e - data.k[t].t >
                                                    data.k[t + 1].t - e
                                                        ? ((i = t + 2),
                                                          (s = data.k[t + 1].t))
                                                        : ((i = t + 1),
                                                          (s = data.k[t].t));
                                                    break;
                                                }
                                            i === -1 &&
                                                ((i = t + 1),
                                                (s = data.k[t].t));
                                        }
                                        var a = {};
                                        return (
                                            (a.index = i),
                                            (a.time =
                                                s /
                                                elem.comp.globalData.frameRate),
                                            a
                                        );
                                    }
                                    function key(e) {
                                        var t, r, i;
                                        if (
                                            !data.k.length ||
                                            typeof data.k[0] == 'number'
                                        )
                                            throw new Error(
                                                'The property has no keyframe at index ' +
                                                    e
                                            );
                                        (e -= 1),
                                            (t = {
                                                time:
                                                    data.k[e].t /
                                                    elem.comp.globalData
                                                        .frameRate,
                                                value: [],
                                            });
                                        var s =
                                            Object.prototype.hasOwnProperty.call(
                                                data.k[e],
                                                's'
                                            )
                                                ? data.k[e].s
                                                : data.k[e - 1].e;
                                        for (i = s.length, r = 0; r < i; r += 1)
                                            (t[r] = s[r]), (t.value[r] = s[r]);
                                        return t;
                                    }
                                    function framesToTime(e, t) {
                                        return (
                                            t ||
                                                (t =
                                                    elem.comp.globalData
                                                        .frameRate),
                                            e / t
                                        );
                                    }
                                    function timeToFrames(e, t) {
                                        return (
                                            !e && e !== 0 && (e = time),
                                            t ||
                                                (t =
                                                    elem.comp.globalData
                                                        .frameRate),
                                            e * t
                                        );
                                    }
                                    function seedRandom(e) {
                                        BMMath.seedrandom(randSeed + e);
                                    }
                                    function sourceRectAtTime() {
                                        return elem.sourceRectAtTime();
                                    }
                                    function substring(e, t) {
                                        return typeof value == 'string'
                                            ? t === void 0
                                                ? value.substring(e)
                                                : value.substring(e, t)
                                            : '';
                                    }
                                    function substr(e, t) {
                                        return typeof value == 'string'
                                            ? t === void 0
                                                ? value.substr(e)
                                                : value.substr(e, t)
                                            : '';
                                    }
                                    function posterizeTime(e) {
                                        (time =
                                            e === 0
                                                ? 0
                                                : Math.floor(time * e) / e),
                                            (value = valueAtTime(time));
                                    }
                                    var time,
                                        velocity,
                                        value,
                                        text,
                                        textIndex,
                                        textTotal,
                                        selectorValue,
                                        index = elem.data.ind,
                                        hasParent = !!(
                                            elem.hierarchy &&
                                            elem.hierarchy.length
                                        ),
                                        parent,
                                        randSeed = Math.floor(
                                            Math.random() * 1e6
                                        ),
                                        globalData = elem.globalData;
                                    function executeExpression(e) {
                                        return (
                                            (value = e),
                                            this.frameExpressionId ===
                                                elem.globalData.frameId &&
                                            this.propType !== 'textSelector'
                                                ? value
                                                : (this.propType ===
                                                      'textSelector' &&
                                                      ((textIndex =
                                                          this.textIndex),
                                                      (textTotal =
                                                          this.textTotal),
                                                      (selectorValue =
                                                          this.selectorValue)),
                                                  thisLayer ||
                                                      ((text =
                                                          elem.layerInterface
                                                              .text),
                                                      (thisLayer =
                                                          elem.layerInterface),
                                                      (thisComp =
                                                          elem.comp
                                                              .compInterface),
                                                      (toWorld =
                                                          thisLayer.toWorld.bind(
                                                              thisLayer
                                                          )),
                                                      (fromWorld =
                                                          thisLayer.fromWorld.bind(
                                                              thisLayer
                                                          )),
                                                      (fromComp =
                                                          thisLayer.fromComp.bind(
                                                              thisLayer
                                                          )),
                                                      (toComp =
                                                          thisLayer.toComp.bind(
                                                              thisLayer
                                                          )),
                                                      (mask = thisLayer.mask
                                                          ? thisLayer.mask.bind(
                                                                thisLayer
                                                            )
                                                          : null),
                                                      (fromCompToSurface =
                                                          fromComp)),
                                                  transform ||
                                                      ((transform =
                                                          elem.layerInterface(
                                                              'ADBE Transform Group'
                                                          )),
                                                      ($bm_transform =
                                                          transform),
                                                      transform &&
                                                          (anchorPoint =
                                                              transform.anchorPoint)),
                                                  elemType === 4 &&
                                                      !content &&
                                                      (content = thisLayer(
                                                          'ADBE Root Vectors Group'
                                                      )),
                                                  effect ||
                                                      (effect = thisLayer(4)),
                                                  (hasParent = !!(
                                                      elem.hierarchy &&
                                                      elem.hierarchy.length
                                                  )),
                                                  hasParent &&
                                                      !parent &&
                                                      (parent =
                                                          elem.hierarchy[0]
                                                              .layerInterface),
                                                  (time =
                                                      this.comp.renderedFrame /
                                                      this.comp.globalData
                                                          .frameRate),
                                                  _needsRandom &&
                                                      seedRandom(
                                                          randSeed + time
                                                      ),
                                                  needsVelocity &&
                                                      (velocity =
                                                          velocityAtTime(time)),
                                                  expression_function(),
                                                  (this.frameExpressionId =
                                                      elem.globalData.frameId),
                                                  (scoped_bm_rt =
                                                      scoped_bm_rt.propType ===
                                                      propTypes.SHAPE
                                                          ? scoped_bm_rt.v
                                                          : scoped_bm_rt),
                                                  scoped_bm_rt)
                                        );
                                    }
                                    return (
                                        (executeExpression.__preventDeadCodeRemoval =
                                            [
                                                $bm_transform,
                                                anchorPoint,
                                                time,
                                                velocity,
                                                inPoint,
                                                outPoint,
                                                width,
                                                height,
                                                name,
                                                loop_in,
                                                loop_out,
                                                smooth,
                                                toComp,
                                                fromCompToSurface,
                                                toWorld,
                                                fromWorld,
                                                mask,
                                                position,
                                                rotation,
                                                scale,
                                                thisComp,
                                                numKeys,
                                                active,
                                                wiggle,
                                                loopInDuration,
                                                loopOutDuration,
                                                comp,
                                                lookAt,
                                                easeOut,
                                                easeIn,
                                                ease,
                                                nearestKey,
                                                key,
                                                text,
                                                textIndex,
                                                textTotal,
                                                selectorValue,
                                                framesToTime,
                                                timeToFrames,
                                                sourceRectAtTime,
                                                substring,
                                                substr,
                                                posterizeTime,
                                                index,
                                                globalData,
                                            ]),
                                        executeExpression
                                    );
                                }
                                return (
                                    (ob.initiateExpression =
                                        initiateExpression),
                                    (ob.__preventDeadCodeRemoval = [
                                        window,
                                        document,
                                        XMLHttpRequest,
                                        fetch,
                                        frames,
                                        $bm_neg,
                                        add,
                                        $bm_sum,
                                        $bm_sub,
                                        $bm_mul,
                                        $bm_div,
                                        $bm_mod,
                                        clamp,
                                        radians_to_degrees,
                                        degreesToRadians,
                                        degrees_to_radians,
                                        normalize,
                                        rgbToHsl,
                                        hslToRgb,
                                        linear,
                                        random,
                                        createPath,
                                        _lottieGlobal,
                                    ]),
                                    (ob.resetFrame = resetFrame),
                                    ob
                                );
                            })(),
                            Expressions = (function () {
                                var e = {};
                                (e.initExpressions = t),
                                    (e.resetFrame =
                                        ExpressionManager.resetFrame);
                                function t(r) {
                                    var i = 0,
                                        s = [];
                                    function a() {
                                        i += 1;
                                    }
                                    function n() {
                                        (i -= 1), i === 0 && o();
                                    }
                                    function l(f) {
                                        s.indexOf(f) === -1 && s.push(f);
                                    }
                                    function o() {
                                        var f,
                                            y = s.length;
                                        for (f = 0; f < y; f += 1)
                                            s[f].release();
                                        s.length = 0;
                                    }
                                    (r.renderer.compInterface =
                                        CompExpressionInterface(r.renderer)),
                                        r.renderer.globalData.projectInterface.registerComposition(
                                            r.renderer
                                        ),
                                        (r.renderer.globalData.pushExpression =
                                            a),
                                        (r.renderer.globalData.popExpression =
                                            n),
                                        (r.renderer.globalData.registerExpressionProperty =
                                            l);
                                }
                                return e;
                            })(),
                            MaskManagerInterface = (function () {
                                function e(r, i) {
                                    (this._mask = r), (this._data = i);
                                }
                                Object.defineProperty(e.prototype, 'maskPath', {
                                    get: function () {
                                        return (
                                            this._mask.prop.k &&
                                                this._mask.prop.getValue(),
                                            this._mask.prop
                                        );
                                    },
                                }),
                                    Object.defineProperty(
                                        e.prototype,
                                        'maskOpacity',
                                        {
                                            get: function () {
                                                return (
                                                    this._mask.op.k &&
                                                        this._mask.op.getValue(),
                                                    this._mask.op.v * 100
                                                );
                                            },
                                        }
                                    );
                                var t = function (i) {
                                    var s = createSizedArray(i.viewData.length),
                                        a,
                                        n = i.viewData.length;
                                    for (a = 0; a < n; a += 1)
                                        s[a] = new e(
                                            i.viewData[a],
                                            i.masksProperties[a]
                                        );
                                    var l = function (f) {
                                        for (a = 0; a < n; ) {
                                            if (i.masksProperties[a].nm === f)
                                                return s[a];
                                            a += 1;
                                        }
                                        return null;
                                    };
                                    return l;
                                };
                                return t;
                            })(),
                            ExpressionPropertyInterface = (function () {
                                var e = { pv: 0, v: 0, mult: 1 },
                                    t = {
                                        pv: [0, 0, 0],
                                        v: [0, 0, 0],
                                        mult: 1,
                                    };
                                function r(n, l, o) {
                                    Object.defineProperty(n, 'velocity', {
                                        get: function () {
                                            return l.getVelocityAtTime(
                                                l.comp.currentFrame
                                            );
                                        },
                                    }),
                                        (n.numKeys = l.keyframes
                                            ? l.keyframes.length
                                            : 0),
                                        (n.key = function (f) {
                                            if (!n.numKeys) return 0;
                                            var y = '';
                                            's' in l.keyframes[f - 1]
                                                ? (y = l.keyframes[f - 1].s)
                                                : 'e' in l.keyframes[f - 2]
                                                  ? (y = l.keyframes[f - 2].e)
                                                  : (y = l.keyframes[f - 2].s);
                                            var E =
                                                o === 'unidimensional'
                                                    ? new Number(y)
                                                    : Object.assign({}, y);
                                            return (
                                                (E.time =
                                                    l.keyframes[f - 1].t /
                                                    l.elem.comp.globalData
                                                        .frameRate),
                                                (E.value =
                                                    o === 'unidimensional'
                                                        ? y[0]
                                                        : y),
                                                E
                                            );
                                        }),
                                        (n.valueAtTime = l.getValueAtTime),
                                        (n.speedAtTime = l.getSpeedAtTime),
                                        (n.velocityAtTime =
                                            l.getVelocityAtTime),
                                        (n.propertyGroup = l.propertyGroup);
                                }
                                function i(n) {
                                    (!n || !('pv' in n)) && (n = e);
                                    var l = 1 / n.mult,
                                        o = n.pv * l,
                                        f = new Number(o);
                                    return (
                                        (f.value = o),
                                        r(f, n, 'unidimensional'),
                                        function () {
                                            return (
                                                n.k && n.getValue(),
                                                (o = n.v * l),
                                                f.value !== o &&
                                                    ((f = new Number(o)),
                                                    (f.value = o),
                                                    r(f, n, 'unidimensional')),
                                                f
                                            );
                                        }
                                    );
                                }
                                function s(n) {
                                    (!n || !('pv' in n)) && (n = t);
                                    var l = 1 / n.mult,
                                        o = (n.data && n.data.l) || n.pv.length,
                                        f = createTypedArray('float32', o),
                                        y = createTypedArray('float32', o);
                                    return (
                                        (f.value = y),
                                        r(f, n, 'multidimensional'),
                                        function () {
                                            n.k && n.getValue();
                                            for (var E = 0; E < o; E += 1)
                                                (y[E] = n.v[E] * l),
                                                    (f[E] = y[E]);
                                            return f;
                                        }
                                    );
                                }
                                function a() {
                                    return e;
                                }
                                return function (n) {
                                    return n
                                        ? n.propType === 'unidimensional'
                                            ? i(n)
                                            : s(n)
                                        : a;
                                };
                            })(),
                            TransformExpressionInterface = (function () {
                                return function (e) {
                                    function t(n) {
                                        switch (n) {
                                            case 'scale':
                                            case 'Scale':
                                            case 'ADBE Scale':
                                            case 6:
                                                return t.scale;
                                            case 'rotation':
                                            case 'Rotation':
                                            case 'ADBE Rotation':
                                            case 'ADBE Rotate Z':
                                            case 10:
                                                return t.rotation;
                                            case 'ADBE Rotate X':
                                                return t.xRotation;
                                            case 'ADBE Rotate Y':
                                                return t.yRotation;
                                            case 'position':
                                            case 'Position':
                                            case 'ADBE Position':
                                            case 2:
                                                return t.position;
                                            case 'ADBE Position_0':
                                                return t.xPosition;
                                            case 'ADBE Position_1':
                                                return t.yPosition;
                                            case 'ADBE Position_2':
                                                return t.zPosition;
                                            case 'anchorPoint':
                                            case 'AnchorPoint':
                                            case 'Anchor Point':
                                            case 'ADBE AnchorPoint':
                                            case 1:
                                                return t.anchorPoint;
                                            case 'opacity':
                                            case 'Opacity':
                                            case 11:
                                                return t.opacity;
                                            default:
                                                return null;
                                        }
                                    }
                                    Object.defineProperty(t, 'rotation', {
                                        get: ExpressionPropertyInterface(
                                            e.r || e.rz
                                        ),
                                    }),
                                        Object.defineProperty(t, 'zRotation', {
                                            get: ExpressionPropertyInterface(
                                                e.rz || e.r
                                            ),
                                        }),
                                        Object.defineProperty(t, 'xRotation', {
                                            get: ExpressionPropertyInterface(
                                                e.rx
                                            ),
                                        }),
                                        Object.defineProperty(t, 'yRotation', {
                                            get: ExpressionPropertyInterface(
                                                e.ry
                                            ),
                                        }),
                                        Object.defineProperty(t, 'scale', {
                                            get: ExpressionPropertyInterface(
                                                e.s
                                            ),
                                        });
                                    var r, i, s, a;
                                    return (
                                        e.p
                                            ? (a = ExpressionPropertyInterface(
                                                  e.p
                                              ))
                                            : ((r = ExpressionPropertyInterface(
                                                  e.px
                                              )),
                                              (i = ExpressionPropertyInterface(
                                                  e.py
                                              )),
                                              e.pz &&
                                                  (s =
                                                      ExpressionPropertyInterface(
                                                          e.pz
                                                      ))),
                                        Object.defineProperty(t, 'position', {
                                            get: function () {
                                                return e.p
                                                    ? a()
                                                    : [r(), i(), s ? s() : 0];
                                            },
                                        }),
                                        Object.defineProperty(t, 'xPosition', {
                                            get: ExpressionPropertyInterface(
                                                e.px
                                            ),
                                        }),
                                        Object.defineProperty(t, 'yPosition', {
                                            get: ExpressionPropertyInterface(
                                                e.py
                                            ),
                                        }),
                                        Object.defineProperty(t, 'zPosition', {
                                            get: ExpressionPropertyInterface(
                                                e.pz
                                            ),
                                        }),
                                        Object.defineProperty(
                                            t,
                                            'anchorPoint',
                                            {
                                                get: ExpressionPropertyInterface(
                                                    e.a
                                                ),
                                            }
                                        ),
                                        Object.defineProperty(t, 'opacity', {
                                            get: ExpressionPropertyInterface(
                                                e.o
                                            ),
                                        }),
                                        Object.defineProperty(t, 'skew', {
                                            get: ExpressionPropertyInterface(
                                                e.sk
                                            ),
                                        }),
                                        Object.defineProperty(t, 'skewAxis', {
                                            get: ExpressionPropertyInterface(
                                                e.sa
                                            ),
                                        }),
                                        Object.defineProperty(
                                            t,
                                            'orientation',
                                            {
                                                get: ExpressionPropertyInterface(
                                                    e.or
                                                ),
                                            }
                                        ),
                                        t
                                    );
                                };
                            })(),
                            LayerExpressionInterface = (function () {
                                function e(f) {
                                    var y = new Matrix();
                                    if (f !== void 0) {
                                        var E =
                                            this._elem.finalTransform.mProp.getValueAtTime(
                                                f
                                            );
                                        E.clone(y);
                                    } else {
                                        var u = this._elem.finalTransform.mProp;
                                        u.applyToMatrix(y);
                                    }
                                    return y;
                                }
                                function t(f, y) {
                                    var E = this.getMatrix(y);
                                    return (
                                        (E.props[12] = 0),
                                        (E.props[13] = 0),
                                        (E.props[14] = 0),
                                        this.applyPoint(E, f)
                                    );
                                }
                                function r(f, y) {
                                    var E = this.getMatrix(y);
                                    return this.applyPoint(E, f);
                                }
                                function i(f, y) {
                                    var E = this.getMatrix(y);
                                    return (
                                        (E.props[12] = 0),
                                        (E.props[13] = 0),
                                        (E.props[14] = 0),
                                        this.invertPoint(E, f)
                                    );
                                }
                                function s(f, y) {
                                    var E = this.getMatrix(y);
                                    return this.invertPoint(E, f);
                                }
                                function a(f, y) {
                                    if (
                                        this._elem.hierarchy &&
                                        this._elem.hierarchy.length
                                    ) {
                                        var E,
                                            u = this._elem.hierarchy.length;
                                        for (E = 0; E < u; E += 1)
                                            this._elem.hierarchy[
                                                E
                                            ].finalTransform.mProp.applyToMatrix(
                                                f
                                            );
                                    }
                                    return f.applyToPointArray(
                                        y[0],
                                        y[1],
                                        y[2] || 0
                                    );
                                }
                                function n(f, y) {
                                    if (
                                        this._elem.hierarchy &&
                                        this._elem.hierarchy.length
                                    ) {
                                        var E,
                                            u = this._elem.hierarchy.length;
                                        for (E = 0; E < u; E += 1)
                                            this._elem.hierarchy[
                                                E
                                            ].finalTransform.mProp.applyToMatrix(
                                                f
                                            );
                                    }
                                    return f.inversePoint(y);
                                }
                                function l(f) {
                                    var y = new Matrix();
                                    if (
                                        (y.reset(),
                                        this._elem.finalTransform.mProp.applyToMatrix(
                                            y
                                        ),
                                        this._elem.hierarchy &&
                                            this._elem.hierarchy.length)
                                    ) {
                                        var E,
                                            u = this._elem.hierarchy.length;
                                        for (E = 0; E < u; E += 1)
                                            this._elem.hierarchy[
                                                E
                                            ].finalTransform.mProp.applyToMatrix(
                                                y
                                            );
                                        return y.inversePoint(f);
                                    }
                                    return y.inversePoint(f);
                                }
                                function o() {
                                    return [1, 1, 1, 1];
                                }
                                return function (f) {
                                    var y;
                                    function E(d) {
                                        b.mask = new MaskManagerInterface(d, f);
                                    }
                                    function u(d) {
                                        b.effect = d;
                                    }
                                    function b(d) {
                                        switch (d) {
                                            case 'ADBE Root Vectors Group':
                                            case 'Contents':
                                            case 2:
                                                return b.shapeInterface;
                                            case 1:
                                            case 6:
                                            case 'Transform':
                                            case 'transform':
                                            case 'ADBE Transform Group':
                                                return y;
                                            case 4:
                                            case 'ADBE Effect Parade':
                                            case 'effects':
                                            case 'Effects':
                                                return b.effect;
                                            case 'ADBE Text Properties':
                                                return b.textInterface;
                                            default:
                                                return null;
                                        }
                                    }
                                    (b.getMatrix = e),
                                        (b.invertPoint = n),
                                        (b.applyPoint = a),
                                        (b.toWorld = r),
                                        (b.toWorldVec = t),
                                        (b.fromWorld = s),
                                        (b.fromWorldVec = i),
                                        (b.toComp = r),
                                        (b.fromComp = l),
                                        (b.sampleImage = o),
                                        (b.sourceRectAtTime =
                                            f.sourceRectAtTime.bind(f)),
                                        (b._elem = f),
                                        (y = TransformExpressionInterface(
                                            f.finalTransform.mProp
                                        ));
                                    var _ = getDescriptor(y, 'anchorPoint');
                                    return (
                                        Object.defineProperties(b, {
                                            hasParent: {
                                                get: function () {
                                                    return f.hierarchy.length;
                                                },
                                            },
                                            parent: {
                                                get: function () {
                                                    return f.hierarchy[0]
                                                        .layerInterface;
                                                },
                                            },
                                            rotation: getDescriptor(
                                                y,
                                                'rotation'
                                            ),
                                            scale: getDescriptor(y, 'scale'),
                                            position: getDescriptor(
                                                y,
                                                'position'
                                            ),
                                            opacity: getDescriptor(
                                                y,
                                                'opacity'
                                            ),
                                            anchorPoint: _,
                                            anchor_point: _,
                                            transform: {
                                                get: function () {
                                                    return y;
                                                },
                                            },
                                            active: {
                                                get: function () {
                                                    return f.isInRange;
                                                },
                                            },
                                        }),
                                        (b.startTime = f.data.st),
                                        (b.index = f.data.ind),
                                        (b.source = f.data.refId),
                                        (b.height =
                                            f.data.ty === 0 ? f.data.h : 100),
                                        (b.width =
                                            f.data.ty === 0 ? f.data.w : 100),
                                        (b.inPoint =
                                            f.data.ip /
                                            f.comp.globalData.frameRate),
                                        (b.outPoint =
                                            f.data.op /
                                            f.comp.globalData.frameRate),
                                        (b._name = f.data.nm),
                                        (b.registerMaskInterface = E),
                                        (b.registerEffectsInterface = u),
                                        b
                                    );
                                };
                            })(),
                            propertyGroupFactory = (function () {
                                return function (e, t) {
                                    return function (r) {
                                        return (
                                            (r = r === void 0 ? 1 : r),
                                            r <= 0 ? e : t(r - 1)
                                        );
                                    };
                                };
                            })(),
                            PropertyInterface = (function () {
                                return function (e, t) {
                                    var r = { _name: e };
                                    function i(s) {
                                        return (
                                            (s = s === void 0 ? 1 : s),
                                            s <= 0 ? r : t(s - 1)
                                        );
                                    }
                                    return i;
                                };
                            })(),
                            EffectsExpressionInterface = (function () {
                                var e = { createEffectsInterface: t };
                                function t(s, a) {
                                    if (s.effectsManager) {
                                        var n = [],
                                            l = s.data.ef,
                                            o,
                                            f =
                                                s.effectsManager.effectElements
                                                    .length;
                                        for (o = 0; o < f; o += 1)
                                            n.push(
                                                r(
                                                    l[o],
                                                    s.effectsManager
                                                        .effectElements[o],
                                                    a,
                                                    s
                                                )
                                            );
                                        var y = s.data.ef || [],
                                            E = function (b) {
                                                for (
                                                    o = 0, f = y.length;
                                                    o < f;

                                                ) {
                                                    if (
                                                        b === y[o].nm ||
                                                        b === y[o].mn ||
                                                        b === y[o].ix
                                                    )
                                                        return n[o];
                                                    o += 1;
                                                }
                                                return null;
                                            };
                                        return (
                                            Object.defineProperty(
                                                E,
                                                'numProperties',
                                                {
                                                    get: function () {
                                                        return y.length;
                                                    },
                                                }
                                            ),
                                            E
                                        );
                                    }
                                    return null;
                                }
                                function r(s, a, n, l) {
                                    function o(b) {
                                        for (
                                            var _ = s.ef, d = 0, C = _.length;
                                            d < C;

                                        ) {
                                            if (
                                                b === _[d].nm ||
                                                b === _[d].mn ||
                                                b === _[d].ix
                                            )
                                                return _[d].ty === 5
                                                    ? y[d]
                                                    : y[d]();
                                            d += 1;
                                        }
                                        throw new Error();
                                    }
                                    var f = propertyGroupFactory(o, n),
                                        y = [],
                                        E,
                                        u = s.ef.length;
                                    for (E = 0; E < u; E += 1)
                                        s.ef[E].ty === 5
                                            ? y.push(
                                                  r(
                                                      s.ef[E],
                                                      a.effectElements[E],
                                                      a.effectElements[E]
                                                          .propertyGroup,
                                                      l
                                                  )
                                              )
                                            : y.push(
                                                  i(
                                                      a.effectElements[E],
                                                      s.ef[E].ty,
                                                      l,
                                                      f
                                                  )
                                              );
                                    return (
                                        s.mn === 'ADBE Color Control' &&
                                            Object.defineProperty(o, 'color', {
                                                get: function () {
                                                    return y[0]();
                                                },
                                            }),
                                        Object.defineProperties(o, {
                                            numProperties: {
                                                get: function () {
                                                    return s.np;
                                                },
                                            },
                                            _name: { value: s.nm },
                                            propertyGroup: { value: f },
                                        }),
                                        (o.enabled = s.en !== 0),
                                        (o.active = o.enabled),
                                        o
                                    );
                                }
                                function i(s, a, n, l) {
                                    var o = ExpressionPropertyInterface(s.p);
                                    function f() {
                                        return a === 10
                                            ? n.comp.compInterface(s.p.v)
                                            : o();
                                    }
                                    return (
                                        s.p.setGroupProperty &&
                                            s.p.setGroupProperty(
                                                PropertyInterface('', l)
                                            ),
                                        f
                                    );
                                }
                                return e;
                            })(),
                            ShapePathInterface = (function () {
                                return function (t, r, i) {
                                    var s = r.sh;
                                    function a(l) {
                                        return l === 'Shape' ||
                                            l === 'shape' ||
                                            l === 'Path' ||
                                            l === 'path' ||
                                            l === 'ADBE Vector Shape' ||
                                            l === 2
                                            ? a.path
                                            : null;
                                    }
                                    var n = propertyGroupFactory(a, i);
                                    return (
                                        s.setGroupProperty(
                                            PropertyInterface('Path', n)
                                        ),
                                        Object.defineProperties(a, {
                                            path: {
                                                get: function () {
                                                    return (
                                                        s.k && s.getValue(), s
                                                    );
                                                },
                                            },
                                            shape: {
                                                get: function () {
                                                    return (
                                                        s.k && s.getValue(), s
                                                    );
                                                },
                                            },
                                            _name: { value: t.nm },
                                            ix: { value: t.ix },
                                            propertyIndex: { value: t.ix },
                                            mn: { value: t.mn },
                                            propertyGroup: { value: i },
                                        }),
                                        a
                                    );
                                };
                            })(),
                            ShapeExpressionInterface = (function () {
                                function e(_, d, C) {
                                    var c = [],
                                        m,
                                        p = _ ? _.length : 0;
                                    for (m = 0; m < p; m += 1)
                                        _[m].ty === 'gr'
                                            ? c.push(r(_[m], d[m], C))
                                            : _[m].ty === 'fl'
                                              ? c.push(i(_[m], d[m], C))
                                              : _[m].ty === 'st'
                                                ? c.push(n(_[m], d[m], C))
                                                : _[m].ty === 'tm'
                                                  ? c.push(l(_[m], d[m], C))
                                                  : _[m].ty === 'tr' ||
                                                    (_[m].ty === 'el'
                                                        ? c.push(
                                                              f(_[m], d[m], C)
                                                          )
                                                        : _[m].ty === 'sr'
                                                          ? c.push(
                                                                y(_[m], d[m], C)
                                                            )
                                                          : _[m].ty === 'sh'
                                                            ? c.push(
                                                                  ShapePathInterface(
                                                                      _[m],
                                                                      d[m],
                                                                      C
                                                                  )
                                                              )
                                                            : _[m].ty === 'rc'
                                                              ? c.push(
                                                                    E(
                                                                        _[m],
                                                                        d[m],
                                                                        C
                                                                    )
                                                                )
                                                              : _[m].ty === 'rd'
                                                                ? c.push(
                                                                      u(
                                                                          _[m],
                                                                          d[m],
                                                                          C
                                                                      )
                                                                  )
                                                                : _[m].ty ===
                                                                    'rp'
                                                                  ? c.push(
                                                                        b(
                                                                            _[
                                                                                m
                                                                            ],
                                                                            d[
                                                                                m
                                                                            ],
                                                                            C
                                                                        )
                                                                    )
                                                                  : _[m].ty ===
                                                                      'gf'
                                                                    ? c.push(
                                                                          s(
                                                                              _[
                                                                                  m
                                                                              ],
                                                                              d[
                                                                                  m
                                                                              ],
                                                                              C
                                                                          )
                                                                      )
                                                                    : c.push(
                                                                          a(
                                                                              _[
                                                                                  m
                                                                              ],
                                                                              d[
                                                                                  m
                                                                              ]
                                                                          )
                                                                      ));
                                    return c;
                                }
                                function t(_, d, C) {
                                    var c,
                                        m = function (P) {
                                            for (
                                                var A = 0, F = c.length;
                                                A < F;

                                            ) {
                                                if (
                                                    c[A]._name === P ||
                                                    c[A].mn === P ||
                                                    c[A].propertyIndex === P ||
                                                    c[A].ix === P ||
                                                    c[A].ind === P
                                                )
                                                    return c[A];
                                                A += 1;
                                            }
                                            return typeof P == 'number'
                                                ? c[P - 1]
                                                : null;
                                        };
                                    (m.propertyGroup = propertyGroupFactory(
                                        m,
                                        C
                                    )),
                                        (c = e(_.it, d.it, m.propertyGroup)),
                                        (m.numProperties = c.length);
                                    var p = o(
                                        _.it[_.it.length - 1],
                                        d.it[d.it.length - 1],
                                        m.propertyGroup
                                    );
                                    return (
                                        (m.transform = p),
                                        (m.propertyIndex = _.cix),
                                        (m._name = _.nm),
                                        m
                                    );
                                }
                                function r(_, d, C) {
                                    var c = function (P) {
                                        switch (P) {
                                            case 'ADBE Vectors Group':
                                            case 'Contents':
                                            case 2:
                                                return c.content;
                                            default:
                                                return c.transform;
                                        }
                                    };
                                    c.propertyGroup = propertyGroupFactory(
                                        c,
                                        C
                                    );
                                    var m = t(_, d, c.propertyGroup),
                                        p = o(
                                            _.it[_.it.length - 1],
                                            d.it[d.it.length - 1],
                                            c.propertyGroup
                                        );
                                    return (
                                        (c.content = m),
                                        (c.transform = p),
                                        Object.defineProperty(c, '_name', {
                                            get: function () {
                                                return _.nm;
                                            },
                                        }),
                                        (c.numProperties = _.np),
                                        (c.propertyIndex = _.ix),
                                        (c.nm = _.nm),
                                        (c.mn = _.mn),
                                        c
                                    );
                                }
                                function i(_, d, C) {
                                    function c(m) {
                                        return m === 'Color' || m === 'color'
                                            ? c.color
                                            : m === 'Opacity' || m === 'opacity'
                                              ? c.opacity
                                              : null;
                                    }
                                    return (
                                        Object.defineProperties(c, {
                                            color: {
                                                get: ExpressionPropertyInterface(
                                                    d.c
                                                ),
                                            },
                                            opacity: {
                                                get: ExpressionPropertyInterface(
                                                    d.o
                                                ),
                                            },
                                            _name: { value: _.nm },
                                            mn: { value: _.mn },
                                        }),
                                        d.c.setGroupProperty(
                                            PropertyInterface('Color', C)
                                        ),
                                        d.o.setGroupProperty(
                                            PropertyInterface('Opacity', C)
                                        ),
                                        c
                                    );
                                }
                                function s(_, d, C) {
                                    function c(m) {
                                        return m === 'Start Point' ||
                                            m === 'start point'
                                            ? c.startPoint
                                            : m === 'End Point' ||
                                                m === 'end point'
                                              ? c.endPoint
                                              : m === 'Opacity' ||
                                                  m === 'opacity'
                                                ? c.opacity
                                                : null;
                                    }
                                    return (
                                        Object.defineProperties(c, {
                                            startPoint: {
                                                get: ExpressionPropertyInterface(
                                                    d.s
                                                ),
                                            },
                                            endPoint: {
                                                get: ExpressionPropertyInterface(
                                                    d.e
                                                ),
                                            },
                                            opacity: {
                                                get: ExpressionPropertyInterface(
                                                    d.o
                                                ),
                                            },
                                            type: {
                                                get: function () {
                                                    return 'a';
                                                },
                                            },
                                            _name: { value: _.nm },
                                            mn: { value: _.mn },
                                        }),
                                        d.s.setGroupProperty(
                                            PropertyInterface('Start Point', C)
                                        ),
                                        d.e.setGroupProperty(
                                            PropertyInterface('End Point', C)
                                        ),
                                        d.o.setGroupProperty(
                                            PropertyInterface('Opacity', C)
                                        ),
                                        c
                                    );
                                }
                                function a() {
                                    function _() {
                                        return null;
                                    }
                                    return _;
                                }
                                function n(_, d, C) {
                                    var c = propertyGroupFactory(F, C),
                                        m = propertyGroupFactory(A, c);
                                    function p(T) {
                                        Object.defineProperty(A, _.d[T].nm, {
                                            get: ExpressionPropertyInterface(
                                                d.d.dataProps[T].p
                                            ),
                                        });
                                    }
                                    var g,
                                        P = _.d ? _.d.length : 0,
                                        A = {};
                                    for (g = 0; g < P; g += 1)
                                        p(g),
                                            d.d.dataProps[g].p.setGroupProperty(
                                                m
                                            );
                                    function F(T) {
                                        return T === 'Color' || T === 'color'
                                            ? F.color
                                            : T === 'Opacity' || T === 'opacity'
                                              ? F.opacity
                                              : T === 'Stroke Width' ||
                                                  T === 'stroke width'
                                                ? F.strokeWidth
                                                : null;
                                    }
                                    return (
                                        Object.defineProperties(F, {
                                            color: {
                                                get: ExpressionPropertyInterface(
                                                    d.c
                                                ),
                                            },
                                            opacity: {
                                                get: ExpressionPropertyInterface(
                                                    d.o
                                                ),
                                            },
                                            strokeWidth: {
                                                get: ExpressionPropertyInterface(
                                                    d.w
                                                ),
                                            },
                                            dash: {
                                                get: function () {
                                                    return A;
                                                },
                                            },
                                            _name: { value: _.nm },
                                            mn: { value: _.mn },
                                        }),
                                        d.c.setGroupProperty(
                                            PropertyInterface('Color', c)
                                        ),
                                        d.o.setGroupProperty(
                                            PropertyInterface('Opacity', c)
                                        ),
                                        d.w.setGroupProperty(
                                            PropertyInterface('Stroke Width', c)
                                        ),
                                        F
                                    );
                                }
                                function l(_, d, C) {
                                    function c(p) {
                                        return p === _.e.ix ||
                                            p === 'End' ||
                                            p === 'end'
                                            ? c.end
                                            : p === _.s.ix
                                              ? c.start
                                              : p === _.o.ix
                                                ? c.offset
                                                : null;
                                    }
                                    var m = propertyGroupFactory(c, C);
                                    return (
                                        (c.propertyIndex = _.ix),
                                        d.s.setGroupProperty(
                                            PropertyInterface('Start', m)
                                        ),
                                        d.e.setGroupProperty(
                                            PropertyInterface('End', m)
                                        ),
                                        d.o.setGroupProperty(
                                            PropertyInterface('Offset', m)
                                        ),
                                        (c.propertyIndex = _.ix),
                                        (c.propertyGroup = C),
                                        Object.defineProperties(c, {
                                            start: {
                                                get: ExpressionPropertyInterface(
                                                    d.s
                                                ),
                                            },
                                            end: {
                                                get: ExpressionPropertyInterface(
                                                    d.e
                                                ),
                                            },
                                            offset: {
                                                get: ExpressionPropertyInterface(
                                                    d.o
                                                ),
                                            },
                                            _name: { value: _.nm },
                                        }),
                                        (c.mn = _.mn),
                                        c
                                    );
                                }
                                function o(_, d, C) {
                                    function c(p) {
                                        return _.a.ix === p ||
                                            p === 'Anchor Point'
                                            ? c.anchorPoint
                                            : _.o.ix === p || p === 'Opacity'
                                              ? c.opacity
                                              : _.p.ix === p || p === 'Position'
                                                ? c.position
                                                : _.r.ix === p ||
                                                    p === 'Rotation' ||
                                                    p === 'ADBE Vector Rotation'
                                                  ? c.rotation
                                                  : _.s.ix === p ||
                                                      p === 'Scale'
                                                    ? c.scale
                                                    : (_.sk && _.sk.ix === p) ||
                                                        p === 'Skew'
                                                      ? c.skew
                                                      : (_.sa &&
                                                              _.sa.ix === p) ||
                                                          p === 'Skew Axis'
                                                        ? c.skewAxis
                                                        : null;
                                    }
                                    var m = propertyGroupFactory(c, C);
                                    return (
                                        d.transform.mProps.o.setGroupProperty(
                                            PropertyInterface('Opacity', m)
                                        ),
                                        d.transform.mProps.p.setGroupProperty(
                                            PropertyInterface('Position', m)
                                        ),
                                        d.transform.mProps.a.setGroupProperty(
                                            PropertyInterface('Anchor Point', m)
                                        ),
                                        d.transform.mProps.s.setGroupProperty(
                                            PropertyInterface('Scale', m)
                                        ),
                                        d.transform.mProps.r.setGroupProperty(
                                            PropertyInterface('Rotation', m)
                                        ),
                                        d.transform.mProps.sk &&
                                            (d.transform.mProps.sk.setGroupProperty(
                                                PropertyInterface('Skew', m)
                                            ),
                                            d.transform.mProps.sa.setGroupProperty(
                                                PropertyInterface(
                                                    'Skew Angle',
                                                    m
                                                )
                                            )),
                                        d.transform.op.setGroupProperty(
                                            PropertyInterface('Opacity', m)
                                        ),
                                        Object.defineProperties(c, {
                                            opacity: {
                                                get: ExpressionPropertyInterface(
                                                    d.transform.mProps.o
                                                ),
                                            },
                                            position: {
                                                get: ExpressionPropertyInterface(
                                                    d.transform.mProps.p
                                                ),
                                            },
                                            anchorPoint: {
                                                get: ExpressionPropertyInterface(
                                                    d.transform.mProps.a
                                                ),
                                            },
                                            scale: {
                                                get: ExpressionPropertyInterface(
                                                    d.transform.mProps.s
                                                ),
                                            },
                                            rotation: {
                                                get: ExpressionPropertyInterface(
                                                    d.transform.mProps.r
                                                ),
                                            },
                                            skew: {
                                                get: ExpressionPropertyInterface(
                                                    d.transform.mProps.sk
                                                ),
                                            },
                                            skewAxis: {
                                                get: ExpressionPropertyInterface(
                                                    d.transform.mProps.sa
                                                ),
                                            },
                                            _name: { value: _.nm },
                                        }),
                                        (c.ty = 'tr'),
                                        (c.mn = _.mn),
                                        (c.propertyGroup = C),
                                        c
                                    );
                                }
                                function f(_, d, C) {
                                    function c(g) {
                                        return _.p.ix === g
                                            ? c.position
                                            : _.s.ix === g
                                              ? c.size
                                              : null;
                                    }
                                    var m = propertyGroupFactory(c, C);
                                    c.propertyIndex = _.ix;
                                    var p = d.sh.ty === 'tm' ? d.sh.prop : d.sh;
                                    return (
                                        p.s.setGroupProperty(
                                            PropertyInterface('Size', m)
                                        ),
                                        p.p.setGroupProperty(
                                            PropertyInterface('Position', m)
                                        ),
                                        Object.defineProperties(c, {
                                            size: {
                                                get: ExpressionPropertyInterface(
                                                    p.s
                                                ),
                                            },
                                            position: {
                                                get: ExpressionPropertyInterface(
                                                    p.p
                                                ),
                                            },
                                            _name: { value: _.nm },
                                        }),
                                        (c.mn = _.mn),
                                        c
                                    );
                                }
                                function y(_, d, C) {
                                    function c(g) {
                                        return _.p.ix === g
                                            ? c.position
                                            : _.r.ix === g
                                              ? c.rotation
                                              : _.pt.ix === g
                                                ? c.points
                                                : _.or.ix === g ||
                                                    g ===
                                                        'ADBE Vector Star Outer Radius'
                                                  ? c.outerRadius
                                                  : _.os.ix === g
                                                    ? c.outerRoundness
                                                    : _.ir &&
                                                        (_.ir.ix === g ||
                                                            g ===
                                                                'ADBE Vector Star Inner Radius')
                                                      ? c.innerRadius
                                                      : _.is && _.is.ix === g
                                                        ? c.innerRoundness
                                                        : null;
                                    }
                                    var m = propertyGroupFactory(c, C),
                                        p = d.sh.ty === 'tm' ? d.sh.prop : d.sh;
                                    return (
                                        (c.propertyIndex = _.ix),
                                        p.or.setGroupProperty(
                                            PropertyInterface('Outer Radius', m)
                                        ),
                                        p.os.setGroupProperty(
                                            PropertyInterface(
                                                'Outer Roundness',
                                                m
                                            )
                                        ),
                                        p.pt.setGroupProperty(
                                            PropertyInterface('Points', m)
                                        ),
                                        p.p.setGroupProperty(
                                            PropertyInterface('Position', m)
                                        ),
                                        p.r.setGroupProperty(
                                            PropertyInterface('Rotation', m)
                                        ),
                                        _.ir &&
                                            (p.ir.setGroupProperty(
                                                PropertyInterface(
                                                    'Inner Radius',
                                                    m
                                                )
                                            ),
                                            p.is.setGroupProperty(
                                                PropertyInterface(
                                                    'Inner Roundness',
                                                    m
                                                )
                                            )),
                                        Object.defineProperties(c, {
                                            position: {
                                                get: ExpressionPropertyInterface(
                                                    p.p
                                                ),
                                            },
                                            rotation: {
                                                get: ExpressionPropertyInterface(
                                                    p.r
                                                ),
                                            },
                                            points: {
                                                get: ExpressionPropertyInterface(
                                                    p.pt
                                                ),
                                            },
                                            outerRadius: {
                                                get: ExpressionPropertyInterface(
                                                    p.or
                                                ),
                                            },
                                            outerRoundness: {
                                                get: ExpressionPropertyInterface(
                                                    p.os
                                                ),
                                            },
                                            innerRadius: {
                                                get: ExpressionPropertyInterface(
                                                    p.ir
                                                ),
                                            },
                                            innerRoundness: {
                                                get: ExpressionPropertyInterface(
                                                    p.is
                                                ),
                                            },
                                            _name: { value: _.nm },
                                        }),
                                        (c.mn = _.mn),
                                        c
                                    );
                                }
                                function E(_, d, C) {
                                    function c(g) {
                                        return _.p.ix === g
                                            ? c.position
                                            : _.r.ix === g
                                              ? c.roundness
                                              : _.s.ix === g ||
                                                  g === 'Size' ||
                                                  g === 'ADBE Vector Rect Size'
                                                ? c.size
                                                : null;
                                    }
                                    var m = propertyGroupFactory(c, C),
                                        p = d.sh.ty === 'tm' ? d.sh.prop : d.sh;
                                    return (
                                        (c.propertyIndex = _.ix),
                                        p.p.setGroupProperty(
                                            PropertyInterface('Position', m)
                                        ),
                                        p.s.setGroupProperty(
                                            PropertyInterface('Size', m)
                                        ),
                                        p.r.setGroupProperty(
                                            PropertyInterface('Rotation', m)
                                        ),
                                        Object.defineProperties(c, {
                                            position: {
                                                get: ExpressionPropertyInterface(
                                                    p.p
                                                ),
                                            },
                                            roundness: {
                                                get: ExpressionPropertyInterface(
                                                    p.r
                                                ),
                                            },
                                            size: {
                                                get: ExpressionPropertyInterface(
                                                    p.s
                                                ),
                                            },
                                            _name: { value: _.nm },
                                        }),
                                        (c.mn = _.mn),
                                        c
                                    );
                                }
                                function u(_, d, C) {
                                    function c(g) {
                                        return _.r.ix === g ||
                                            g === 'Round Corners 1'
                                            ? c.radius
                                            : null;
                                    }
                                    var m = propertyGroupFactory(c, C),
                                        p = d;
                                    return (
                                        (c.propertyIndex = _.ix),
                                        p.rd.setGroupProperty(
                                            PropertyInterface('Radius', m)
                                        ),
                                        Object.defineProperties(c, {
                                            radius: {
                                                get: ExpressionPropertyInterface(
                                                    p.rd
                                                ),
                                            },
                                            _name: { value: _.nm },
                                        }),
                                        (c.mn = _.mn),
                                        c
                                    );
                                }
                                function b(_, d, C) {
                                    function c(g) {
                                        return _.c.ix === g || g === 'Copies'
                                            ? c.copies
                                            : _.o.ix === g || g === 'Offset'
                                              ? c.offset
                                              : null;
                                    }
                                    var m = propertyGroupFactory(c, C),
                                        p = d;
                                    return (
                                        (c.propertyIndex = _.ix),
                                        p.c.setGroupProperty(
                                            PropertyInterface('Copies', m)
                                        ),
                                        p.o.setGroupProperty(
                                            PropertyInterface('Offset', m)
                                        ),
                                        Object.defineProperties(c, {
                                            copies: {
                                                get: ExpressionPropertyInterface(
                                                    p.c
                                                ),
                                            },
                                            offset: {
                                                get: ExpressionPropertyInterface(
                                                    p.o
                                                ),
                                            },
                                            _name: { value: _.nm },
                                        }),
                                        (c.mn = _.mn),
                                        c
                                    );
                                }
                                return function (_, d, C) {
                                    var c;
                                    function m(g) {
                                        if (typeof g == 'number')
                                            return (
                                                (g = g === void 0 ? 1 : g),
                                                g === 0 ? C : c[g - 1]
                                            );
                                        for (var P = 0, A = c.length; P < A; ) {
                                            if (c[P]._name === g) return c[P];
                                            P += 1;
                                        }
                                        return null;
                                    }
                                    function p() {
                                        return C;
                                    }
                                    return (
                                        (m.propertyGroup = propertyGroupFactory(
                                            m,
                                            p
                                        )),
                                        (c = e(_, d, m.propertyGroup)),
                                        (m.numProperties = c.length),
                                        (m._name = 'Contents'),
                                        m
                                    );
                                };
                            })(),
                            TextExpressionInterface = (function () {
                                return function (e) {
                                    var t;
                                    function r(i) {
                                        switch (i) {
                                            case 'ADBE Text Document':
                                                return r.sourceText;
                                            default:
                                                return null;
                                        }
                                    }
                                    return (
                                        Object.defineProperty(r, 'sourceText', {
                                            get: function () {
                                                e.textProperty.getValue();
                                                var s =
                                                    e.textProperty.currentData
                                                        .t;
                                                return (
                                                    (!t || s !== t.value) &&
                                                        ((t = new String(s)),
                                                        (t.value =
                                                            s || new String(s)),
                                                        Object.defineProperty(
                                                            t,
                                                            'style',
                                                            {
                                                                get: function () {
                                                                    return {
                                                                        fillColor:
                                                                            e
                                                                                .textProperty
                                                                                .currentData
                                                                                .fc,
                                                                    };
                                                                },
                                                            }
                                                        )),
                                                    t
                                                );
                                            },
                                        }),
                                        r
                                    );
                                };
                            })();
                        function _typeof(e) {
                            '@babel/helpers - typeof';
                            return (
                                typeof Symbol == 'function' &&
                                typeof Symbol.iterator == 'symbol'
                                    ? (_typeof = function (r) {
                                          return typeof r;
                                      })
                                    : (_typeof = function (r) {
                                          return r &&
                                              typeof Symbol == 'function' &&
                                              r.constructor === Symbol &&
                                              r !== Symbol.prototype
                                              ? 'symbol'
                                              : typeof r;
                                      }),
                                _typeof(e)
                            );
                        }
                        var FootageInterface = (function () {
                                var e = function (i) {
                                        var s = '',
                                            a = i.getFootageData();
                                        function n() {
                                            return (
                                                (s = ''),
                                                (a = i.getFootageData()),
                                                l
                                            );
                                        }
                                        function l(o) {
                                            if (a[o])
                                                return (
                                                    (s = o),
                                                    (a = a[o]),
                                                    _typeof(a) === 'object'
                                                        ? l
                                                        : a
                                                );
                                            var f = o.indexOf(s);
                                            if (f !== -1) {
                                                var y = parseInt(
                                                    o.substr(f + s.length),
                                                    10
                                                );
                                                return (
                                                    (a = a[y]),
                                                    _typeof(a) === 'object'
                                                        ? l
                                                        : a
                                                );
                                            }
                                            return '';
                                        }
                                        return n;
                                    },
                                    t = function (i) {
                                        function s(a) {
                                            return a === 'Outline'
                                                ? s.outlineInterface()
                                                : null;
                                        }
                                        return (
                                            (s._name = 'Outline'),
                                            (s.outlineInterface = e(i)),
                                            s
                                        );
                                    };
                                return function (r) {
                                    function i(s) {
                                        return s === 'Data'
                                            ? i.dataInterface
                                            : null;
                                    }
                                    return (
                                        (i._name = 'Data'),
                                        (i.dataInterface = t(r)),
                                        i
                                    );
                                };
                            })(),
                            interfaces = {
                                layer: LayerExpressionInterface,
                                effects: EffectsExpressionInterface,
                                comp: CompExpressionInterface,
                                shape: ShapeExpressionInterface,
                                text: TextExpressionInterface,
                                footage: FootageInterface,
                            };
                        function getInterface(e) {
                            return interfaces[e] || null;
                        }
                        var expressionHelpers = (function () {
                            function e(n, l, o) {
                                l.x &&
                                    ((o.k = !0),
                                    (o.x = !0),
                                    (o.initiateExpression =
                                        ExpressionManager.initiateExpression),
                                    o.effectsSequence.push(
                                        o.initiateExpression(n, l, o).bind(o)
                                    ));
                            }
                            function t(n) {
                                return (
                                    (n *= this.elem.globalData.frameRate),
                                    (n -= this.offsetTime),
                                    n !== this._cachingAtTime.lastFrame &&
                                        ((this._cachingAtTime.lastIndex =
                                            this._cachingAtTime.lastFrame < n
                                                ? this._cachingAtTime.lastIndex
                                                : 0),
                                        (this._cachingAtTime.value =
                                            this.interpolateValue(
                                                n,
                                                this._cachingAtTime
                                            )),
                                        (this._cachingAtTime.lastFrame = n)),
                                    this._cachingAtTime.value
                                );
                            }
                            function r(n) {
                                var l = -0.01,
                                    o = this.getValueAtTime(n),
                                    f = this.getValueAtTime(n + l),
                                    y = 0;
                                if (o.length) {
                                    var E;
                                    for (E = 0; E < o.length; E += 1)
                                        y += Math.pow(f[E] - o[E], 2);
                                    y = Math.sqrt(y) * 100;
                                } else y = 0;
                                return y;
                            }
                            function i(n) {
                                if (this.vel !== void 0) return this.vel;
                                var l = -0.001,
                                    o = this.getValueAtTime(n),
                                    f = this.getValueAtTime(n + l),
                                    y;
                                if (o.length) {
                                    y = createTypedArray('float32', o.length);
                                    var E;
                                    for (E = 0; E < o.length; E += 1)
                                        y[E] = (f[E] - o[E]) / l;
                                } else y = (f - o) / l;
                                return y;
                            }
                            function s() {
                                return this.pv;
                            }
                            function a(n) {
                                this.propertyGroup = n;
                            }
                            return {
                                searchExpressions: e,
                                getSpeedAtTime: r,
                                getVelocityAtTime: i,
                                getValueAtTime: t,
                                getStaticValueAtTime: s,
                                setGroupProperty: a,
                            };
                        })();
                        function addPropertyDecorator() {
                            function e(u, b, _) {
                                if (!this.k || !this.keyframes) return this.pv;
                                u = u ? u.toLowerCase() : '';
                                var d = this.comp.renderedFrame,
                                    C = this.keyframes,
                                    c = C[C.length - 1].t;
                                if (d <= c) return this.pv;
                                var m, p;
                                _
                                    ? (b
                                          ? (m = Math.abs(
                                                c -
                                                    this.elem.comp.globalData
                                                        .frameRate *
                                                        b
                                            ))
                                          : (m = Math.max(
                                                0,
                                                c - this.elem.data.ip
                                            )),
                                      (p = c - m))
                                    : ((!b || b > C.length - 1) &&
                                          (b = C.length - 1),
                                      (p = C[C.length - 1 - b].t),
                                      (m = c - p));
                                var g, P, A;
                                if (u === 'pingpong') {
                                    var F = Math.floor((d - p) / m);
                                    if (F % 2 !== 0)
                                        return this.getValueAtTime(
                                            (m - ((d - p) % m) + p) /
                                                this.comp.globalData.frameRate,
                                            0
                                        );
                                } else if (u === 'offset') {
                                    var T = this.getValueAtTime(
                                            p / this.comp.globalData.frameRate,
                                            0
                                        ),
                                        D = this.getValueAtTime(
                                            c / this.comp.globalData.frameRate,
                                            0
                                        ),
                                        L = this.getValueAtTime(
                                            (((d - p) % m) + p) /
                                                this.comp.globalData.frameRate,
                                            0
                                        ),
                                        q = Math.floor((d - p) / m);
                                    if (this.pv.length) {
                                        for (
                                            A = new Array(T.length),
                                                P = A.length,
                                                g = 0;
                                            g < P;
                                            g += 1
                                        )
                                            A[g] = (D[g] - T[g]) * q + L[g];
                                        return A;
                                    }
                                    return (D - T) * q + L;
                                } else if (u === 'continue') {
                                    var V = this.getValueAtTime(
                                            c / this.comp.globalData.frameRate,
                                            0
                                        ),
                                        j = this.getValueAtTime(
                                            (c - 0.001) /
                                                this.comp.globalData.frameRate,
                                            0
                                        );
                                    if (this.pv.length) {
                                        for (
                                            A = new Array(V.length),
                                                P = A.length,
                                                g = 0;
                                            g < P;
                                            g += 1
                                        )
                                            A[g] =
                                                V[g] +
                                                ((V[g] - j[g]) *
                                                    ((d - c) /
                                                        this.comp.globalData
                                                            .frameRate)) /
                                                    5e-4;
                                        return A;
                                    }
                                    return V + (V - j) * ((d - c) / 0.001);
                                }
                                return this.getValueAtTime(
                                    (((d - p) % m) + p) /
                                        this.comp.globalData.frameRate,
                                    0
                                );
                            }
                            function t(u, b, _) {
                                if (!this.k) return this.pv;
                                u = u ? u.toLowerCase() : '';
                                var d = this.comp.renderedFrame,
                                    C = this.keyframes,
                                    c = C[0].t;
                                if (d >= c) return this.pv;
                                var m, p;
                                _
                                    ? (b
                                          ? (m = Math.abs(
                                                this.elem.comp.globalData
                                                    .frameRate * b
                                            ))
                                          : (m = Math.max(
                                                0,
                                                this.elem.data.op - c
                                            )),
                                      (p = c + m))
                                    : ((!b || b > C.length - 1) &&
                                          (b = C.length - 1),
                                      (p = C[b].t),
                                      (m = p - c));
                                var g, P, A;
                                if (u === 'pingpong') {
                                    var F = Math.floor((c - d) / m);
                                    if (F % 2 === 0)
                                        return this.getValueAtTime(
                                            (((c - d) % m) + c) /
                                                this.comp.globalData.frameRate,
                                            0
                                        );
                                } else if (u === 'offset') {
                                    var T = this.getValueAtTime(
                                            c / this.comp.globalData.frameRate,
                                            0
                                        ),
                                        D = this.getValueAtTime(
                                            p / this.comp.globalData.frameRate,
                                            0
                                        ),
                                        L = this.getValueAtTime(
                                            (m - ((c - d) % m) + c) /
                                                this.comp.globalData.frameRate,
                                            0
                                        ),
                                        q = Math.floor((c - d) / m) + 1;
                                    if (this.pv.length) {
                                        for (
                                            A = new Array(T.length),
                                                P = A.length,
                                                g = 0;
                                            g < P;
                                            g += 1
                                        )
                                            A[g] = L[g] - (D[g] - T[g]) * q;
                                        return A;
                                    }
                                    return L - (D - T) * q;
                                } else if (u === 'continue') {
                                    var V = this.getValueAtTime(
                                            c / this.comp.globalData.frameRate,
                                            0
                                        ),
                                        j = this.getValueAtTime(
                                            (c + 0.001) /
                                                this.comp.globalData.frameRate,
                                            0
                                        );
                                    if (this.pv.length) {
                                        for (
                                            A = new Array(V.length),
                                                P = A.length,
                                                g = 0;
                                            g < P;
                                            g += 1
                                        )
                                            A[g] =
                                                V[g] +
                                                ((V[g] - j[g]) * (c - d)) /
                                                    0.001;
                                        return A;
                                    }
                                    return V + ((V - j) * (c - d)) / 0.001;
                                }
                                return this.getValueAtTime(
                                    (m - (((c - d) % m) + c)) /
                                        this.comp.globalData.frameRate,
                                    0
                                );
                            }
                            function r(u, b) {
                                if (!this.k) return this.pv;
                                if (
                                    ((u = (u || 0.4) * 0.5),
                                    (b = Math.floor(b || 5)),
                                    b <= 1)
                                )
                                    return this.pv;
                                var _ =
                                        this.comp.renderedFrame /
                                        this.comp.globalData.frameRate,
                                    d = _ - u,
                                    C = _ + u,
                                    c = b > 1 ? (C - d) / (b - 1) : 1,
                                    m = 0,
                                    p = 0,
                                    g;
                                this.pv.length
                                    ? (g = createTypedArray(
                                          'float32',
                                          this.pv.length
                                      ))
                                    : (g = 0);
                                for (var P; m < b; ) {
                                    if (
                                        ((P = this.getValueAtTime(d + m * c)),
                                        this.pv.length)
                                    )
                                        for (p = 0; p < this.pv.length; p += 1)
                                            g[p] += P[p];
                                    else g += P;
                                    m += 1;
                                }
                                if (this.pv.length)
                                    for (p = 0; p < this.pv.length; p += 1)
                                        g[p] /= b;
                                else g /= b;
                                return g;
                            }
                            function i(u) {
                                this._transformCachingAtTime ||
                                    (this._transformCachingAtTime = {
                                        v: new Matrix(),
                                    });
                                var b = this._transformCachingAtTime.v;
                                if (
                                    (b.cloneFromProps(this.pre.props),
                                    this.appliedTransformations < 1)
                                ) {
                                    var _ = this.a.getValueAtTime(u);
                                    b.translate(
                                        -_[0] * this.a.mult,
                                        -_[1] * this.a.mult,
                                        _[2] * this.a.mult
                                    );
                                }
                                if (this.appliedTransformations < 2) {
                                    var d = this.s.getValueAtTime(u);
                                    b.scale(
                                        d[0] * this.s.mult,
                                        d[1] * this.s.mult,
                                        d[2] * this.s.mult
                                    );
                                }
                                if (
                                    this.sk &&
                                    this.appliedTransformations < 3
                                ) {
                                    var C = this.sk.getValueAtTime(u),
                                        c = this.sa.getValueAtTime(u);
                                    b.skewFromAxis(
                                        -C * this.sk.mult,
                                        c * this.sa.mult
                                    );
                                }
                                if (this.r && this.appliedTransformations < 4) {
                                    var m = this.r.getValueAtTime(u);
                                    b.rotate(-m * this.r.mult);
                                } else if (
                                    !this.r &&
                                    this.appliedTransformations < 4
                                ) {
                                    var p = this.rz.getValueAtTime(u),
                                        g = this.ry.getValueAtTime(u),
                                        P = this.rx.getValueAtTime(u),
                                        A = this.or.getValueAtTime(u);
                                    b.rotateZ(-p * this.rz.mult)
                                        .rotateY(g * this.ry.mult)
                                        .rotateX(P * this.rx.mult)
                                        .rotateZ(-A[2] * this.or.mult)
                                        .rotateY(A[1] * this.or.mult)
                                        .rotateX(A[0] * this.or.mult);
                                }
                                if (this.data.p && this.data.p.s) {
                                    var F = this.px.getValueAtTime(u),
                                        T = this.py.getValueAtTime(u);
                                    if (this.data.p.z) {
                                        var D = this.pz.getValueAtTime(u);
                                        b.translate(
                                            F * this.px.mult,
                                            T * this.py.mult,
                                            -D * this.pz.mult
                                        );
                                    } else
                                        b.translate(
                                            F * this.px.mult,
                                            T * this.py.mult,
                                            0
                                        );
                                } else {
                                    var L = this.p.getValueAtTime(u);
                                    b.translate(
                                        L[0] * this.p.mult,
                                        L[1] * this.p.mult,
                                        -L[2] * this.p.mult
                                    );
                                }
                                return b;
                            }
                            function s() {
                                return this.v.clone(new Matrix());
                            }
                            var a =
                                TransformPropertyFactory.getTransformProperty;
                            TransformPropertyFactory.getTransformProperty =
                                function (u, b, _) {
                                    var d = a(u, b, _);
                                    return (
                                        d.dynamicProperties.length
                                            ? (d.getValueAtTime = i.bind(d))
                                            : (d.getValueAtTime = s.bind(d)),
                                        (d.setGroupProperty =
                                            expressionHelpers.setGroupProperty),
                                        d
                                    );
                                };
                            var n = PropertyFactory.getProp;
                            PropertyFactory.getProp = function (u, b, _, d, C) {
                                var c = n(u, b, _, d, C);
                                c.kf
                                    ? (c.getValueAtTime =
                                          expressionHelpers.getValueAtTime.bind(
                                              c
                                          ))
                                    : (c.getValueAtTime =
                                          expressionHelpers.getStaticValueAtTime.bind(
                                              c
                                          )),
                                    (c.setGroupProperty =
                                        expressionHelpers.setGroupProperty),
                                    (c.loopOut = e),
                                    (c.loopIn = t),
                                    (c.smooth = r),
                                    (c.getVelocityAtTime =
                                        expressionHelpers.getVelocityAtTime.bind(
                                            c
                                        )),
                                    (c.getSpeedAtTime =
                                        expressionHelpers.getSpeedAtTime.bind(
                                            c
                                        )),
                                    (c.numKeys = b.a === 1 ? b.k.length : 0),
                                    (c.propertyIndex = b.ix);
                                var m = 0;
                                return (
                                    _ !== 0 &&
                                        (m = createTypedArray(
                                            'float32',
                                            b.a === 1
                                                ? b.k[0].s.length
                                                : b.k.length
                                        )),
                                    (c._cachingAtTime = {
                                        lastFrame: initialDefaultFrame,
                                        lastIndex: 0,
                                        value: m,
                                    }),
                                    expressionHelpers.searchExpressions(
                                        u,
                                        b,
                                        c
                                    ),
                                    c.k && C.addDynamicProperty(c),
                                    c
                                );
                            };
                            function l(u) {
                                return (
                                    this._cachingAtTime ||
                                        (this._cachingAtTime = {
                                            shapeValue: shapePool.clone(
                                                this.pv
                                            ),
                                            lastIndex: 0,
                                            lastTime: initialDefaultFrame,
                                        }),
                                    (u *= this.elem.globalData.frameRate),
                                    (u -= this.offsetTime),
                                    u !== this._cachingAtTime.lastTime &&
                                        ((this._cachingAtTime.lastIndex =
                                            this._cachingAtTime.lastTime < u
                                                ? this._caching.lastIndex
                                                : 0),
                                        (this._cachingAtTime.lastTime = u),
                                        this.interpolateShape(
                                            u,
                                            this._cachingAtTime.shapeValue,
                                            this._cachingAtTime
                                        )),
                                    this._cachingAtTime.shapeValue
                                );
                            }
                            var o =
                                    ShapePropertyFactory.getConstructorFunction(),
                                f =
                                    ShapePropertyFactory.getKeyframedConstructorFunction();
                            function y() {}
                            (y.prototype = {
                                vertices: function (b, _) {
                                    this.k && this.getValue();
                                    var d = this.v;
                                    _ !== void 0 &&
                                        (d = this.getValueAtTime(_, 0));
                                    var C,
                                        c = d._length,
                                        m = d[b],
                                        p = d.v,
                                        g = createSizedArray(c);
                                    for (C = 0; C < c; C += 1)
                                        b === 'i' || b === 'o'
                                            ? (g[C] = [
                                                  m[C][0] - p[C][0],
                                                  m[C][1] - p[C][1],
                                              ])
                                            : (g[C] = [m[C][0], m[C][1]]);
                                    return g;
                                },
                                points: function (b) {
                                    return this.vertices('v', b);
                                },
                                inTangents: function (b) {
                                    return this.vertices('i', b);
                                },
                                outTangents: function (b) {
                                    return this.vertices('o', b);
                                },
                                isClosed: function () {
                                    return this.v.c;
                                },
                                pointOnPath: function (b, _) {
                                    var d = this.v;
                                    _ !== void 0 &&
                                        (d = this.getValueAtTime(_, 0)),
                                        this._segmentsLength ||
                                            (this._segmentsLength =
                                                bez.getSegmentsLength(d));
                                    for (
                                        var C = this._segmentsLength,
                                            c = C.lengths,
                                            m = C.totalLength * b,
                                            p = 0,
                                            g = c.length,
                                            P = 0,
                                            A;
                                        p < g;

                                    ) {
                                        if (P + c[p].addedLength > m) {
                                            var F = p,
                                                T =
                                                    d.c && p === g - 1
                                                        ? 0
                                                        : p + 1,
                                                D = (m - P) / c[p].addedLength;
                                            A = bez.getPointInSegment(
                                                d.v[F],
                                                d.v[T],
                                                d.o[F],
                                                d.i[T],
                                                D,
                                                c[p]
                                            );
                                            break;
                                        } else P += c[p].addedLength;
                                        p += 1;
                                    }
                                    return (
                                        A ||
                                            (A = d.c
                                                ? [d.v[0][0], d.v[0][1]]
                                                : [
                                                      d.v[d._length - 1][0],
                                                      d.v[d._length - 1][1],
                                                  ]),
                                        A
                                    );
                                },
                                vectorOnPath: function (b, _, d) {
                                    b == 1
                                        ? (b = this.v.c)
                                        : b == 0 && (b = 0.999);
                                    var C = this.pointOnPath(b, _),
                                        c = this.pointOnPath(b + 0.001, _),
                                        m = c[0] - C[0],
                                        p = c[1] - C[1],
                                        g = Math.sqrt(
                                            Math.pow(m, 2) + Math.pow(p, 2)
                                        );
                                    if (g === 0) return [0, 0];
                                    var P =
                                        d === 'tangent'
                                            ? [m / g, p / g]
                                            : [-p / g, m / g];
                                    return P;
                                },
                                tangentOnPath: function (b, _) {
                                    return this.vectorOnPath(b, _, 'tangent');
                                },
                                normalOnPath: function (b, _) {
                                    return this.vectorOnPath(b, _, 'normal');
                                },
                                setGroupProperty:
                                    expressionHelpers.setGroupProperty,
                                getValueAtTime:
                                    expressionHelpers.getStaticValueAtTime,
                            }),
                                extendPrototype([y], o),
                                extendPrototype([y], f),
                                (f.prototype.getValueAtTime = l),
                                (f.prototype.initiateExpression =
                                    ExpressionManager.initiateExpression);
                            var E = ShapePropertyFactory.getShapeProp;
                            ShapePropertyFactory.getShapeProp = function (
                                u,
                                b,
                                _,
                                d,
                                C
                            ) {
                                var c = E(u, b, _, d, C);
                                return (
                                    (c.propertyIndex = b.ix),
                                    (c.lock = !1),
                                    _ === 3
                                        ? expressionHelpers.searchExpressions(
                                              u,
                                              b.pt,
                                              c
                                          )
                                        : _ === 4 &&
                                          expressionHelpers.searchExpressions(
                                              u,
                                              b.ks,
                                              c
                                          ),
                                    c.k && u.addDynamicProperty(c),
                                    c
                                );
                            };
                        }
                        function initialize$1() {
                            addPropertyDecorator();
                        }
                        function addDecorator() {
                            function e() {
                                return this.data.d.x
                                    ? ((this.calculateExpression =
                                          ExpressionManager.initiateExpression.bind(
                                              this
                                          )(this.elem, this.data.d, this)),
                                      this.addEffect(
                                          this.getExpressionValue.bind(this)
                                      ),
                                      !0)
                                    : null;
                            }
                            (TextProperty.prototype.getExpressionValue =
                                function (t, r) {
                                    var i = this.calculateExpression(r);
                                    if (t.t !== i) {
                                        var s = {};
                                        return (
                                            this.copyData(s, t),
                                            (s.t = i.toString()),
                                            (s.__complete = !1),
                                            s
                                        );
                                    }
                                    return t;
                                }),
                                (TextProperty.prototype.searchProperty =
                                    function () {
                                        var t = this.searchKeyframes(),
                                            r = this.searchExpressions();
                                        return (this.kf = t || r), this.kf;
                                    }),
                                (TextProperty.prototype.searchExpressions = e);
                        }
                        function initialize() {
                            addDecorator();
                        }
                        function SVGComposableEffect() {}
                        SVGComposableEffect.prototype = {
                            createMergeNode: function e(t, r) {
                                var i = createNS('feMerge');
                                i.setAttribute('result', t);
                                var s, a;
                                for (a = 0; a < r.length; a += 1)
                                    (s = createNS('feMergeNode')),
                                        s.setAttribute('in', r[a]),
                                        i.appendChild(s),
                                        i.appendChild(s);
                                return i;
                            },
                        };
                        var linearFilterValue =
                            '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0';
                        function SVGTintFilter(e, t, r, i, s) {
                            this.filterManager = t;
                            var a = createNS('feColorMatrix');
                            a.setAttribute('type', 'matrix'),
                                a.setAttribute(
                                    'color-interpolation-filters',
                                    'linearRGB'
                                ),
                                a.setAttribute(
                                    'values',
                                    linearFilterValue + ' 1 0'
                                ),
                                (this.linearFilter = a),
                                a.setAttribute('result', i + '_tint_1'),
                                e.appendChild(a),
                                (a = createNS('feColorMatrix')),
                                a.setAttribute('type', 'matrix'),
                                a.setAttribute(
                                    'color-interpolation-filters',
                                    'sRGB'
                                ),
                                a.setAttribute(
                                    'values',
                                    '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0'
                                ),
                                a.setAttribute('result', i + '_tint_2'),
                                e.appendChild(a),
                                (this.matrixFilter = a);
                            var n = this.createMergeNode(i, [
                                s,
                                i + '_tint_1',
                                i + '_tint_2',
                            ]);
                            e.appendChild(n);
                        }
                        extendPrototype([SVGComposableEffect], SVGTintFilter),
                            (SVGTintFilter.prototype.renderFrame = function (
                                e
                            ) {
                                if (e || this.filterManager._mdf) {
                                    var t =
                                            this.filterManager.effectElements[0]
                                                .p.v,
                                        r =
                                            this.filterManager.effectElements[1]
                                                .p.v,
                                        i =
                                            this.filterManager.effectElements[2]
                                                .p.v / 100;
                                    this.linearFilter.setAttribute(
                                        'values',
                                        linearFilterValue + ' ' + i + ' 0'
                                    ),
                                        this.matrixFilter.setAttribute(
                                            'values',
                                            r[0] -
                                                t[0] +
                                                ' 0 0 0 ' +
                                                t[0] +
                                                ' ' +
                                                (r[1] - t[1]) +
                                                ' 0 0 0 ' +
                                                t[1] +
                                                ' ' +
                                                (r[2] - t[2]) +
                                                ' 0 0 0 ' +
                                                t[2] +
                                                ' 0 0 0 1 0'
                                        );
                                }
                            });
                        function SVGFillFilter(e, t, r, i) {
                            this.filterManager = t;
                            var s = createNS('feColorMatrix');
                            s.setAttribute('type', 'matrix'),
                                s.setAttribute(
                                    'color-interpolation-filters',
                                    'sRGB'
                                ),
                                s.setAttribute(
                                    'values',
                                    '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0'
                                ),
                                s.setAttribute('result', i),
                                e.appendChild(s),
                                (this.matrixFilter = s);
                        }
                        SVGFillFilter.prototype.renderFrame = function (e) {
                            if (e || this.filterManager._mdf) {
                                var t =
                                        this.filterManager.effectElements[2].p
                                            .v,
                                    r =
                                        this.filterManager.effectElements[6].p
                                            .v;
                                this.matrixFilter.setAttribute(
                                    'values',
                                    '0 0 0 0 ' +
                                        t[0] +
                                        ' 0 0 0 0 ' +
                                        t[1] +
                                        ' 0 0 0 0 ' +
                                        t[2] +
                                        ' 0 0 0 ' +
                                        r +
                                        ' 0'
                                );
                            }
                        };
                        function SVGStrokeEffect(e, t, r) {
                            (this.initialized = !1),
                                (this.filterManager = t),
                                (this.elem = r),
                                (this.paths = []);
                        }
                        (SVGStrokeEffect.prototype.initialize = function () {
                            var e =
                                    this.elem.layerElement.children ||
                                    this.elem.layerElement.childNodes,
                                t,
                                r,
                                i,
                                s;
                            for (
                                this.filterManager.effectElements[1].p.v === 1
                                    ? ((s =
                                          this.elem.maskManager.masksProperties
                                              .length),
                                      (i = 0))
                                    : ((i =
                                          this.filterManager.effectElements[0].p
                                              .v - 1),
                                      (s = i + 1)),
                                    r = createNS('g'),
                                    r.setAttribute('fill', 'none'),
                                    r.setAttribute('stroke-linecap', 'round'),
                                    r.setAttribute('stroke-dashoffset', 1),
                                    i;
                                i < s;
                                i += 1
                            )
                                (t = createNS('path')),
                                    r.appendChild(t),
                                    this.paths.push({ p: t, m: i });
                            if (
                                this.filterManager.effectElements[10].p.v === 3
                            ) {
                                var a = createNS('mask'),
                                    n = createElementID();
                                a.setAttribute('id', n),
                                    a.setAttribute('mask-type', 'alpha'),
                                    a.appendChild(r),
                                    this.elem.globalData.defs.appendChild(a);
                                var l = createNS('g');
                                for (
                                    l.setAttribute(
                                        'mask',
                                        'url(' +
                                            getLocationHref() +
                                            '#' +
                                            n +
                                            ')'
                                    );
                                    e[0];

                                )
                                    l.appendChild(e[0]);
                                this.elem.layerElement.appendChild(l),
                                    (this.masker = a),
                                    r.setAttribute('stroke', '#fff');
                            } else if (
                                this.filterManager.effectElements[10].p.v ===
                                    1 ||
                                this.filterManager.effectElements[10].p.v === 2
                            ) {
                                if (
                                    this.filterManager.effectElements[10].p
                                        .v === 2
                                )
                                    for (
                                        e =
                                            this.elem.layerElement.children ||
                                            this.elem.layerElement.childNodes;
                                        e.length;

                                    )
                                        this.elem.layerElement.removeChild(
                                            e[0]
                                        );
                                this.elem.layerElement.appendChild(r),
                                    this.elem.layerElement.removeAttribute(
                                        'mask'
                                    ),
                                    r.setAttribute('stroke', '#fff');
                            }
                            (this.initialized = !0), (this.pathMasker = r);
                        }),
                            (SVGStrokeEffect.prototype.renderFrame = function (
                                e
                            ) {
                                this.initialized || this.initialize();
                                var t,
                                    r = this.paths.length,
                                    i,
                                    s;
                                for (t = 0; t < r; t += 1)
                                    if (
                                        this.paths[t].m !== -1 &&
                                        ((i =
                                            this.elem.maskManager.viewData[
                                                this.paths[t].m
                                            ]),
                                        (s = this.paths[t].p),
                                        (e ||
                                            this.filterManager._mdf ||
                                            i.prop._mdf) &&
                                            s.setAttribute('d', i.lastPath),
                                        e ||
                                            this.filterManager.effectElements[9]
                                                .p._mdf ||
                                            this.filterManager.effectElements[4]
                                                .p._mdf ||
                                            this.filterManager.effectElements[7]
                                                .p._mdf ||
                                            this.filterManager.effectElements[8]
                                                .p._mdf ||
                                            i.prop._mdf)
                                    ) {
                                        var a;
                                        if (
                                            this.filterManager.effectElements[7]
                                                .p.v !== 0 ||
                                            this.filterManager.effectElements[8]
                                                .p.v !== 100
                                        ) {
                                            var n =
                                                    Math.min(
                                                        this.filterManager
                                                            .effectElements[7].p
                                                            .v,
                                                        this.filterManager
                                                            .effectElements[8].p
                                                            .v
                                                    ) * 0.01,
                                                l =
                                                    Math.max(
                                                        this.filterManager
                                                            .effectElements[7].p
                                                            .v,
                                                        this.filterManager
                                                            .effectElements[8].p
                                                            .v
                                                    ) * 0.01,
                                                o = s.getTotalLength();
                                            a = '0 0 0 ' + o * n + ' ';
                                            var f = o * (l - n),
                                                y =
                                                    1 +
                                                    this.filterManager
                                                        .effectElements[4].p.v *
                                                        2 *
                                                        this.filterManager
                                                            .effectElements[9].p
                                                            .v *
                                                        0.01,
                                                E = Math.floor(f / y),
                                                u;
                                            for (u = 0; u < E; u += 1)
                                                a +=
                                                    '1 ' +
                                                    this.filterManager
                                                        .effectElements[4].p.v *
                                                        2 *
                                                        this.filterManager
                                                            .effectElements[9].p
                                                            .v *
                                                        0.01 +
                                                    ' ';
                                            a += '0 ' + o * 10 + ' 0 0';
                                        } else
                                            a =
                                                '1 ' +
                                                this.filterManager
                                                    .effectElements[4].p.v *
                                                    2 *
                                                    this.filterManager
                                                        .effectElements[9].p.v *
                                                    0.01;
                                        s.setAttribute('stroke-dasharray', a);
                                    }
                                if (
                                    ((e ||
                                        this.filterManager.effectElements[4].p
                                            ._mdf) &&
                                        this.pathMasker.setAttribute(
                                            'stroke-width',
                                            this.filterManager.effectElements[4]
                                                .p.v * 2
                                        ),
                                    (e ||
                                        this.filterManager.effectElements[6].p
                                            ._mdf) &&
                                        this.pathMasker.setAttribute(
                                            'opacity',
                                            this.filterManager.effectElements[6]
                                                .p.v
                                        ),
                                    (this.filterManager.effectElements[10].p
                                        .v === 1 ||
                                        this.filterManager.effectElements[10].p
                                            .v === 2) &&
                                        (e ||
                                            this.filterManager.effectElements[3]
                                                .p._mdf))
                                ) {
                                    var b =
                                        this.filterManager.effectElements[3].p
                                            .v;
                                    this.pathMasker.setAttribute(
                                        'stroke',
                                        'rgb(' +
                                            bmFloor(b[0] * 255) +
                                            ',' +
                                            bmFloor(b[1] * 255) +
                                            ',' +
                                            bmFloor(b[2] * 255) +
                                            ')'
                                    );
                                }
                            });
                        function SVGTritoneFilter(e, t, r, i) {
                            this.filterManager = t;
                            var s = createNS('feColorMatrix');
                            s.setAttribute('type', 'matrix'),
                                s.setAttribute(
                                    'color-interpolation-filters',
                                    'linearRGB'
                                ),
                                s.setAttribute(
                                    'values',
                                    '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0'
                                ),
                                e.appendChild(s);
                            var a = createNS('feComponentTransfer');
                            a.setAttribute(
                                'color-interpolation-filters',
                                'sRGB'
                            ),
                                a.setAttribute('result', i),
                                (this.matrixFilter = a);
                            var n = createNS('feFuncR');
                            n.setAttribute('type', 'table'),
                                a.appendChild(n),
                                (this.feFuncR = n);
                            var l = createNS('feFuncG');
                            l.setAttribute('type', 'table'),
                                a.appendChild(l),
                                (this.feFuncG = l);
                            var o = createNS('feFuncB');
                            o.setAttribute('type', 'table'),
                                a.appendChild(o),
                                (this.feFuncB = o),
                                e.appendChild(a);
                        }
                        SVGTritoneFilter.prototype.renderFrame = function (e) {
                            if (e || this.filterManager._mdf) {
                                var t =
                                        this.filterManager.effectElements[0].p
                                            .v,
                                    r =
                                        this.filterManager.effectElements[1].p
                                            .v,
                                    i =
                                        this.filterManager.effectElements[2].p
                                            .v,
                                    s = i[0] + ' ' + r[0] + ' ' + t[0],
                                    a = i[1] + ' ' + r[1] + ' ' + t[1],
                                    n = i[2] + ' ' + r[2] + ' ' + t[2];
                                this.feFuncR.setAttribute('tableValues', s),
                                    this.feFuncG.setAttribute('tableValues', a),
                                    this.feFuncB.setAttribute('tableValues', n);
                            }
                        };
                        function SVGProLevelsFilter(e, t, r, i) {
                            this.filterManager = t;
                            var s = this.filterManager.effectElements,
                                a = createNS('feComponentTransfer');
                            (s[10].p.k ||
                                s[10].p.v !== 0 ||
                                s[11].p.k ||
                                s[11].p.v !== 1 ||
                                s[12].p.k ||
                                s[12].p.v !== 1 ||
                                s[13].p.k ||
                                s[13].p.v !== 0 ||
                                s[14].p.k ||
                                s[14].p.v !== 1) &&
                                (this.feFuncR = this.createFeFunc(
                                    'feFuncR',
                                    a
                                )),
                                (s[17].p.k ||
                                    s[17].p.v !== 0 ||
                                    s[18].p.k ||
                                    s[18].p.v !== 1 ||
                                    s[19].p.k ||
                                    s[19].p.v !== 1 ||
                                    s[20].p.k ||
                                    s[20].p.v !== 0 ||
                                    s[21].p.k ||
                                    s[21].p.v !== 1) &&
                                    (this.feFuncG = this.createFeFunc(
                                        'feFuncG',
                                        a
                                    )),
                                (s[24].p.k ||
                                    s[24].p.v !== 0 ||
                                    s[25].p.k ||
                                    s[25].p.v !== 1 ||
                                    s[26].p.k ||
                                    s[26].p.v !== 1 ||
                                    s[27].p.k ||
                                    s[27].p.v !== 0 ||
                                    s[28].p.k ||
                                    s[28].p.v !== 1) &&
                                    (this.feFuncB = this.createFeFunc(
                                        'feFuncB',
                                        a
                                    )),
                                (s[31].p.k ||
                                    s[31].p.v !== 0 ||
                                    s[32].p.k ||
                                    s[32].p.v !== 1 ||
                                    s[33].p.k ||
                                    s[33].p.v !== 1 ||
                                    s[34].p.k ||
                                    s[34].p.v !== 0 ||
                                    s[35].p.k ||
                                    s[35].p.v !== 1) &&
                                    (this.feFuncA = this.createFeFunc(
                                        'feFuncA',
                                        a
                                    )),
                                (this.feFuncR ||
                                    this.feFuncG ||
                                    this.feFuncB ||
                                    this.feFuncA) &&
                                    (a.setAttribute(
                                        'color-interpolation-filters',
                                        'sRGB'
                                    ),
                                    e.appendChild(a)),
                                (s[3].p.k ||
                                    s[3].p.v !== 0 ||
                                    s[4].p.k ||
                                    s[4].p.v !== 1 ||
                                    s[5].p.k ||
                                    s[5].p.v !== 1 ||
                                    s[6].p.k ||
                                    s[6].p.v !== 0 ||
                                    s[7].p.k ||
                                    s[7].p.v !== 1) &&
                                    ((a = createNS('feComponentTransfer')),
                                    a.setAttribute(
                                        'color-interpolation-filters',
                                        'sRGB'
                                    ),
                                    a.setAttribute('result', i),
                                    e.appendChild(a),
                                    (this.feFuncRComposed = this.createFeFunc(
                                        'feFuncR',
                                        a
                                    )),
                                    (this.feFuncGComposed = this.createFeFunc(
                                        'feFuncG',
                                        a
                                    )),
                                    (this.feFuncBComposed = this.createFeFunc(
                                        'feFuncB',
                                        a
                                    )));
                        }
                        (SVGProLevelsFilter.prototype.createFeFunc = function (
                            e,
                            t
                        ) {
                            var r = createNS(e);
                            return (
                                r.setAttribute('type', 'table'),
                                t.appendChild(r),
                                r
                            );
                        }),
                            (SVGProLevelsFilter.prototype.getTableValue =
                                function (e, t, r, i, s) {
                                    for (
                                        var a = 0,
                                            n = 256,
                                            l,
                                            o = Math.min(e, t),
                                            f = Math.max(e, t),
                                            y = Array.call(null, { length: n }),
                                            E,
                                            u = 0,
                                            b = s - i,
                                            _ = t - e;
                                        a <= 256;

                                    )
                                        (l = a / 256),
                                            l <= o
                                                ? (E = _ < 0 ? s : i)
                                                : l >= f
                                                  ? (E = _ < 0 ? i : s)
                                                  : (E =
                                                        i +
                                                        b *
                                                            Math.pow(
                                                                (l - e) / _,
                                                                1 / r
                                                            )),
                                            (y[u] = E),
                                            (u += 1),
                                            (a += 256 / (n - 1));
                                    return y.join(' ');
                                }),
                            (SVGProLevelsFilter.prototype.renderFrame =
                                function (e) {
                                    if (e || this.filterManager._mdf) {
                                        var t,
                                            r =
                                                this.filterManager
                                                    .effectElements;
                                        this.feFuncRComposed &&
                                            (e ||
                                                r[3].p._mdf ||
                                                r[4].p._mdf ||
                                                r[5].p._mdf ||
                                                r[6].p._mdf ||
                                                r[7].p._mdf) &&
                                            ((t = this.getTableValue(
                                                r[3].p.v,
                                                r[4].p.v,
                                                r[5].p.v,
                                                r[6].p.v,
                                                r[7].p.v
                                            )),
                                            this.feFuncRComposed.setAttribute(
                                                'tableValues',
                                                t
                                            ),
                                            this.feFuncGComposed.setAttribute(
                                                'tableValues',
                                                t
                                            ),
                                            this.feFuncBComposed.setAttribute(
                                                'tableValues',
                                                t
                                            )),
                                            this.feFuncR &&
                                                (e ||
                                                    r[10].p._mdf ||
                                                    r[11].p._mdf ||
                                                    r[12].p._mdf ||
                                                    r[13].p._mdf ||
                                                    r[14].p._mdf) &&
                                                ((t = this.getTableValue(
                                                    r[10].p.v,
                                                    r[11].p.v,
                                                    r[12].p.v,
                                                    r[13].p.v,
                                                    r[14].p.v
                                                )),
                                                this.feFuncR.setAttribute(
                                                    'tableValues',
                                                    t
                                                )),
                                            this.feFuncG &&
                                                (e ||
                                                    r[17].p._mdf ||
                                                    r[18].p._mdf ||
                                                    r[19].p._mdf ||
                                                    r[20].p._mdf ||
                                                    r[21].p._mdf) &&
                                                ((t = this.getTableValue(
                                                    r[17].p.v,
                                                    r[18].p.v,
                                                    r[19].p.v,
                                                    r[20].p.v,
                                                    r[21].p.v
                                                )),
                                                this.feFuncG.setAttribute(
                                                    'tableValues',
                                                    t
                                                )),
                                            this.feFuncB &&
                                                (e ||
                                                    r[24].p._mdf ||
                                                    r[25].p._mdf ||
                                                    r[26].p._mdf ||
                                                    r[27].p._mdf ||
                                                    r[28].p._mdf) &&
                                                ((t = this.getTableValue(
                                                    r[24].p.v,
                                                    r[25].p.v,
                                                    r[26].p.v,
                                                    r[27].p.v,
                                                    r[28].p.v
                                                )),
                                                this.feFuncB.setAttribute(
                                                    'tableValues',
                                                    t
                                                )),
                                            this.feFuncA &&
                                                (e ||
                                                    r[31].p._mdf ||
                                                    r[32].p._mdf ||
                                                    r[33].p._mdf ||
                                                    r[34].p._mdf ||
                                                    r[35].p._mdf) &&
                                                ((t = this.getTableValue(
                                                    r[31].p.v,
                                                    r[32].p.v,
                                                    r[33].p.v,
                                                    r[34].p.v,
                                                    r[35].p.v
                                                )),
                                                this.feFuncA.setAttribute(
                                                    'tableValues',
                                                    t
                                                ));
                                    }
                                });
                        function SVGDropShadowEffect(e, t, r, i, s) {
                            var a =
                                    t.container.globalData.renderConfig
                                        .filterSize,
                                n = t.data.fs || a;
                            e.setAttribute('x', n.x || a.x),
                                e.setAttribute('y', n.y || a.y),
                                e.setAttribute('width', n.width || a.width),
                                e.setAttribute('height', n.height || a.height),
                                (this.filterManager = t);
                            var l = createNS('feGaussianBlur');
                            l.setAttribute('in', 'SourceAlpha'),
                                l.setAttribute('result', i + '_drop_shadow_1'),
                                l.setAttribute('stdDeviation', '0'),
                                (this.feGaussianBlur = l),
                                e.appendChild(l);
                            var o = createNS('feOffset');
                            o.setAttribute('dx', '25'),
                                o.setAttribute('dy', '0'),
                                o.setAttribute('in', i + '_drop_shadow_1'),
                                o.setAttribute('result', i + '_drop_shadow_2'),
                                (this.feOffset = o),
                                e.appendChild(o);
                            var f = createNS('feFlood');
                            f.setAttribute('flood-color', '#00ff00'),
                                f.setAttribute('flood-opacity', '1'),
                                f.setAttribute('result', i + '_drop_shadow_3'),
                                (this.feFlood = f),
                                e.appendChild(f);
                            var y = createNS('feComposite');
                            y.setAttribute('in', i + '_drop_shadow_3'),
                                y.setAttribute('in2', i + '_drop_shadow_2'),
                                y.setAttribute('operator', 'in'),
                                y.setAttribute('result', i + '_drop_shadow_4'),
                                e.appendChild(y);
                            var E = this.createMergeNode(i, [
                                i + '_drop_shadow_4',
                                s,
                            ]);
                            e.appendChild(E);
                        }
                        extendPrototype(
                            [SVGComposableEffect],
                            SVGDropShadowEffect
                        ),
                            (SVGDropShadowEffect.prototype.renderFrame =
                                function (e) {
                                    if (e || this.filterManager._mdf) {
                                        if (
                                            ((e ||
                                                this.filterManager
                                                    .effectElements[4].p
                                                    ._mdf) &&
                                                this.feGaussianBlur.setAttribute(
                                                    'stdDeviation',
                                                    this.filterManager
                                                        .effectElements[4].p.v /
                                                        4
                                                ),
                                            e ||
                                                this.filterManager
                                                    .effectElements[0].p._mdf)
                                        ) {
                                            var t =
                                                this.filterManager
                                                    .effectElements[0].p.v;
                                            this.feFlood.setAttribute(
                                                'flood-color',
                                                rgbToHex(
                                                    Math.round(t[0] * 255),
                                                    Math.round(t[1] * 255),
                                                    Math.round(t[2] * 255)
                                                )
                                            );
                                        }
                                        if (
                                            ((e ||
                                                this.filterManager
                                                    .effectElements[1].p
                                                    ._mdf) &&
                                                this.feFlood.setAttribute(
                                                    'flood-opacity',
                                                    this.filterManager
                                                        .effectElements[1].p.v /
                                                        255
                                                ),
                                            e ||
                                                this.filterManager
                                                    .effectElements[2].p._mdf ||
                                                this.filterManager
                                                    .effectElements[3].p._mdf)
                                        ) {
                                            var r =
                                                    this.filterManager
                                                        .effectElements[3].p.v,
                                                i =
                                                    (this.filterManager
                                                        .effectElements[2].p.v -
                                                        90) *
                                                    degToRads,
                                                s = r * Math.cos(i),
                                                a = r * Math.sin(i);
                                            this.feOffset.setAttribute('dx', s),
                                                this.feOffset.setAttribute(
                                                    'dy',
                                                    a
                                                );
                                        }
                                    }
                                });
                        var _svgMatteSymbols = [];
                        function SVGMatte3Effect(e, t, r) {
                            (this.initialized = !1),
                                (this.filterManager = t),
                                (this.filterElem = e),
                                (this.elem = r),
                                (r.matteElement = createNS('g')),
                                r.matteElement.appendChild(r.layerElement),
                                r.matteElement.appendChild(
                                    r.transformedElement
                                ),
                                (r.baseElement = r.matteElement);
                        }
                        (SVGMatte3Effect.prototype.findSymbol = function (e) {
                            for (
                                var t = 0, r = _svgMatteSymbols.length;
                                t < r;

                            ) {
                                if (_svgMatteSymbols[t] === e)
                                    return _svgMatteSymbols[t];
                                t += 1;
                            }
                            return null;
                        }),
                            (SVGMatte3Effect.prototype.replaceInParent =
                                function (e, t) {
                                    var r = e.layerElement.parentNode;
                                    if (r) {
                                        for (
                                            var i = r.children,
                                                s = 0,
                                                a = i.length;
                                            s < a && i[s] !== e.layerElement;

                                        )
                                            s += 1;
                                        var n;
                                        s <= a - 2 && (n = i[s + 1]);
                                        var l = createNS('use');
                                        l.setAttribute('href', '#' + t),
                                            n
                                                ? r.insertBefore(l, n)
                                                : r.appendChild(l);
                                    }
                                }),
                            (SVGMatte3Effect.prototype.setElementAsMask =
                                function (e, t) {
                                    if (!this.findSymbol(t)) {
                                        var r = createElementID(),
                                            i = createNS('mask');
                                        i.setAttribute('id', t.layerId),
                                            i.setAttribute(
                                                'mask-type',
                                                'alpha'
                                            ),
                                            _svgMatteSymbols.push(t);
                                        var s = e.globalData.defs;
                                        s.appendChild(i);
                                        var a = createNS('symbol');
                                        a.setAttribute('id', r),
                                            this.replaceInParent(t, r),
                                            a.appendChild(t.layerElement),
                                            s.appendChild(a);
                                        var n = createNS('use');
                                        n.setAttribute('href', '#' + r),
                                            i.appendChild(n),
                                            (t.data.hd = !1),
                                            t.show();
                                    }
                                    e.setMatte(t.layerId);
                                }),
                            (SVGMatte3Effect.prototype.initialize =
                                function () {
                                    for (
                                        var e =
                                                this.filterManager
                                                    .effectElements[0].p.v,
                                            t = this.elem.comp.elements,
                                            r = 0,
                                            i = t.length;
                                        r < i;

                                    )
                                        t[r] &&
                                            t[r].data.ind === e &&
                                            this.setElementAsMask(
                                                this.elem,
                                                t[r]
                                            ),
                                            (r += 1);
                                    this.initialized = !0;
                                }),
                            (SVGMatte3Effect.prototype.renderFrame =
                                function () {
                                    this.initialized || this.initialize();
                                });
                        function SVGGaussianBlurEffect(e, t, r, i) {
                            e.setAttribute('x', '-100%'),
                                e.setAttribute('y', '-100%'),
                                e.setAttribute('width', '300%'),
                                e.setAttribute('height', '300%'),
                                (this.filterManager = t);
                            var s = createNS('feGaussianBlur');
                            s.setAttribute('result', i),
                                e.appendChild(s),
                                (this.feGaussianBlur = s);
                        }
                        SVGGaussianBlurEffect.prototype.renderFrame = function (
                            e
                        ) {
                            if (e || this.filterManager._mdf) {
                                var t = 0.3,
                                    r =
                                        this.filterManager.effectElements[0].p
                                            .v * t,
                                    i =
                                        this.filterManager.effectElements[1].p
                                            .v,
                                    s = i == 3 ? 0 : r,
                                    a = i == 2 ? 0 : r;
                                this.feGaussianBlur.setAttribute(
                                    'stdDeviation',
                                    s + ' ' + a
                                );
                                var n =
                                    this.filterManager.effectElements[2].p.v ==
                                    1
                                        ? 'wrap'
                                        : 'duplicate';
                                this.feGaussianBlur.setAttribute('edgeMode', n);
                            }
                        };
                        function TransformEffect() {}
                        (TransformEffect.prototype.init = function (e) {
                            (this.effectsManager = e),
                                (this.type = effectTypes.TRANSFORM_EFFECT),
                                (this.matrix = new Matrix()),
                                (this.opacity = -1),
                                (this._mdf = !1),
                                (this._opMdf = !1);
                        }),
                            (TransformEffect.prototype.renderFrame = function (
                                e
                            ) {
                                if (
                                    ((this._opMdf = !1),
                                    (this._mdf = !1),
                                    e || this.effectsManager._mdf)
                                ) {
                                    var t = this.effectsManager.effectElements,
                                        r = t[0].p.v,
                                        i = t[1].p.v,
                                        s = t[2].p.v === 1,
                                        a = t[3].p.v,
                                        n = s ? a : t[4].p.v,
                                        l = t[5].p.v,
                                        o = t[6].p.v,
                                        f = t[7].p.v;
                                    this.matrix.reset(),
                                        this.matrix.translate(
                                            -r[0],
                                            -r[1],
                                            r[2]
                                        ),
                                        this.matrix.scale(
                                            n * 0.01,
                                            a * 0.01,
                                            1
                                        ),
                                        this.matrix.rotate(-f * degToRads),
                                        this.matrix.skewFromAxis(
                                            -l * degToRads,
                                            (o + 90) * degToRads
                                        ),
                                        this.matrix.translate(i[0], i[1], 0),
                                        (this._mdf = !0),
                                        this.opacity !== t[8].p.v &&
                                            ((this.opacity = t[8].p.v),
                                            (this._opMdf = !0));
                                }
                            });
                        function SVGTransformEffect(e, t) {
                            this.init(t);
                        }
                        extendPrototype([TransformEffect], SVGTransformEffect);
                        function CVTransformEffect(e) {
                            this.init(e);
                        }
                        return (
                            extendPrototype(
                                [TransformEffect],
                                CVTransformEffect
                            ),
                            registerRenderer('canvas', CanvasRenderer),
                            registerRenderer('html', HybridRenderer),
                            registerRenderer('svg', SVGRenderer),
                            ShapeModifiers.registerModifier('tm', TrimModifier),
                            ShapeModifiers.registerModifier(
                                'pb',
                                PuckerAndBloatModifier
                            ),
                            ShapeModifiers.registerModifier(
                                'rp',
                                RepeaterModifier
                            ),
                            ShapeModifiers.registerModifier(
                                'rd',
                                RoundCornersModifier
                            ),
                            ShapeModifiers.registerModifier(
                                'zz',
                                ZigZagModifier
                            ),
                            ShapeModifiers.registerModifier(
                                'op',
                                OffsetPathModifier
                            ),
                            setExpressionsPlugin(Expressions),
                            setExpressionInterfaces(getInterface),
                            initialize$1(),
                            initialize(),
                            registerEffect$1(20, SVGTintFilter, !0),
                            registerEffect$1(21, SVGFillFilter, !0),
                            registerEffect$1(22, SVGStrokeEffect, !1),
                            registerEffect$1(23, SVGTritoneFilter, !0),
                            registerEffect$1(24, SVGProLevelsFilter, !0),
                            registerEffect$1(25, SVGDropShadowEffect, !0),
                            registerEffect$1(28, SVGMatte3Effect, !1),
                            registerEffect$1(29, SVGGaussianBlurEffect, !0),
                            registerEffect$1(35, SVGTransformEffect, !1),
                            registerEffect(35, CVTransformEffect),
                            lottie
                        );
                    });
            })(lottie$1, lottie$1.exports)),
        lottie$1.exports
    );
}
var hasRequiredDist;
function requireDist() {
    if (hasRequiredDist) return dist;
    (hasRequiredDist = 1),
        Object.defineProperty(dist, '__esModule', { value: !0 });
    var e = require_extends(),
        t = m(e),
        r = requireGetPrototypeOf(),
        i = m(r),
        s = requireClassCallCheck(),
        a = m(s),
        n = requireCreateClass(),
        l = m(n),
        o = requirePossibleConstructorReturn(),
        f = m(o),
        y = requireInherits(),
        E = m(y),
        u = requireReact(),
        b = m(u),
        _ = requirePropTypes(),
        d = m(_),
        C = requireLottie(),
        c = m(C);
    function m(g) {
        return g && g.__esModule ? g : { default: g };
    }
    var p = (function (g) {
        (0, E.default)(P, g);
        function P() {
            var A, F, T, D;
            (0, a.default)(this, P);
            for (var L = arguments.length, q = Array(L), V = 0; V < L; V++)
                q[V] = arguments[V];
            return (
                (D =
                    ((F =
                        ((T = (0, f.default)(
                            this,
                            (A = P.__proto__ || (0, i.default)(P)).call.apply(
                                A,
                                [this].concat(q)
                            )
                        )),
                        T)),
                    (T.handleClickToPause = function () {
                        T.anim.isPaused ? T.anim.play() : T.anim.pause();
                    }),
                    F)),
                (0, f.default)(T, D)
            );
        }
        return (
            (0, l.default)(P, [
                {
                    key: 'componentDidMount',
                    value: function () {
                        var F = this.props,
                            T = F.options,
                            D = F.eventListeners,
                            L = T.loop,
                            q = T.autoplay,
                            V = T.animationData,
                            j = T.rendererSettings,
                            G = T.segments;
                        (this.options = {
                            container: this.el,
                            renderer: 'svg',
                            loop: L !== !1,
                            autoplay: q !== !1,
                            segments: G !== !1,
                            animationData: V,
                            rendererSettings: j,
                        }),
                            (this.options = (0, t.default)(
                                {},
                                this.options,
                                T
                            )),
                            (this.anim = c.default.loadAnimation(this.options)),
                            this.registerEvents(D),
                            this.setSpeed();
                    },
                },
                {
                    key: 'componentWillUpdate',
                    value: function (F) {
                        this.options.animationData !==
                            F.options.animationData &&
                            (this.deRegisterEvents(this.props.eventListeners),
                            this.destroy(),
                            (this.options = (0, t.default)(
                                {},
                                this.options,
                                F.options
                            )),
                            (this.anim = c.default.loadAnimation(this.options)),
                            this.registerEvents(F.eventListeners));
                    },
                },
                {
                    key: 'componentDidUpdate',
                    value: function () {
                        this.props.isStopped
                            ? this.stop()
                            : this.props.segments
                              ? this.playSegments()
                              : this.play(),
                            this.pause(),
                            this.setSpeed(),
                            this.setDirection();
                    },
                },
                {
                    key: 'componentWillUnmount',
                    value: function () {
                        this.deRegisterEvents(this.props.eventListeners),
                            this.destroy(),
                            (this.options.animationData = null),
                            (this.anim = null);
                    },
                },
                {
                    key: 'setSpeed',
                    value: function () {
                        this.anim.setSpeed(this.props.speed);
                    },
                },
                {
                    key: 'setDirection',
                    value: function () {
                        this.anim.setDirection(this.props.direction);
                    },
                },
                {
                    key: 'play',
                    value: function () {
                        this.anim.play();
                    },
                },
                {
                    key: 'playSegments',
                    value: function () {
                        this.anim.playSegments(this.props.segments);
                    },
                },
                {
                    key: 'stop',
                    value: function () {
                        this.anim.stop();
                    },
                },
                {
                    key: 'pause',
                    value: function () {
                        this.props.isPaused && !this.anim.isPaused
                            ? this.anim.pause()
                            : !this.props.isPaused &&
                              this.anim.isPaused &&
                              this.anim.pause();
                    },
                },
                {
                    key: 'destroy',
                    value: function () {
                        this.anim.destroy();
                    },
                },
                {
                    key: 'registerEvents',
                    value: function (F) {
                        var T = this;
                        F.forEach(function (D) {
                            T.anim.addEventListener(D.eventName, D.callback);
                        });
                    },
                },
                {
                    key: 'deRegisterEvents',
                    value: function (F) {
                        var T = this;
                        F.forEach(function (D) {
                            T.anim.removeEventListener(D.eventName, D.callback);
                        });
                    },
                },
                {
                    key: 'render',
                    value: function () {
                        var F = this,
                            T = this.props,
                            D = T.width,
                            L = T.height,
                            q = T.ariaRole,
                            V = T.ariaLabel,
                            j = T.isClickToPauseDisabled,
                            G = T.title,
                            B = function (k) {
                                var R = void 0;
                                return (
                                    typeof k == 'number'
                                        ? (R = k + 'px')
                                        : (R = k || '100%'),
                                    R
                                );
                            },
                            S = (0, t.default)(
                                {
                                    width: B(D),
                                    height: B(L),
                                    overflow: 'hidden',
                                    margin: '0 auto',
                                    outline: 'none',
                                },
                                this.props.style
                            ),
                            M = j
                                ? function () {
                                      return null;
                                  }
                                : this.handleClickToPause;
                        return b.default.createElement('div', {
                            ref: function (k) {
                                F.el = k;
                            },
                            style: S,
                            onClick: M,
                            title: G,
                            role: q,
                            'aria-label': V,
                            tabIndex: '0',
                        });
                    },
                },
            ]),
            P
        );
    })(b.default.Component);
    return (
        (dist.default = p),
        (p.propTypes = {
            eventListeners: d.default.arrayOf(d.default.object),
            options: d.default.object.isRequired,
            height: d.default.oneOfType([d.default.string, d.default.number]),
            width: d.default.oneOfType([d.default.string, d.default.number]),
            isStopped: d.default.bool,
            isPaused: d.default.bool,
            speed: d.default.number,
            segments: d.default.arrayOf(d.default.number),
            direction: d.default.number,
            ariaRole: d.default.string,
            ariaLabel: d.default.string,
            isClickToPauseDisabled: d.default.bool,
            title: d.default.string,
            style: d.default.object,
        }),
        (p.defaultProps = {
            eventListeners: [],
            isStopped: !1,
            isPaused: !1,
            speed: 1,
            ariaRole: 'button',
            ariaLabel: 'animation',
            isClickToPauseDisabled: !1,
            title: '',
        }),
        dist
    );
}
var distExports = requireDist();
const Lottie = getDefaultExportFromCjs(distExports),
    v = '5.5.7',
    meta = { g: 'LottieFiles AE 0.1.20', a: '', k: '', d: '', tc: '' },
    fr = 29.9700012207031,
    ip = 0,
    op = 122.000004969162,
    w = 625,
    h = 481,
    nm = 'size/list',
    ddd = 0,
    assets = [],
    layers = JSON.parse(
        '[{"ddd":0,"ind":2,"ty":4,"nm":"magni_frame","td":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":0,"s":[380.5,284.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":30,"s":[424.5,272.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":60,"s":[380.5,284.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":90,"s":[424.5,272.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":120.0000048877,"s":[380.5,284.5,0]}],"ix":2},"a":{"a":0,"k":[91.5,91.5,0],"ix":1},"s":{"a":0,"k":[83.947,83.947,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[19.978,19.977],[-19.979,19.977],[-19.978,-19.977],[19.976,-19.978]],"o":[[-19.977,-19.978],[19.977,-19.977],[19.976,19.977],[-19.978,19.978]],"v":[[-51.185,21.159],[-51.184,-51.185],[21.159,-51.186],[21.159,21.159]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[4.686,4.685],[0,0],[24.183,24.183],[27.007,-27.006],[-27.006,-27.007],[-26.961,18.76],[0,0],[-4.685,4.685]],"o":[[0,0],[19.125,-26.996],[-27.007,-27.007],[-27.006,27.007],[24.041,24.04],[0,0],[4.685,4.685],[4.686,-4.685]],"v":[[86.233,69.269],[41.455,24.894],[33.886,-63.913],[-63.913,-63.913],[-63.913,33.887],[24.415,41.788],[69.267,86.234],[86.233,86.234]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.23137254901960785,0.6431372549019608,0.9725490196078431,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[91.169,91.17],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":6,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":122.000004969162,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"shape","tt":1,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[377.795,206.976,0],"ix":2},"a":{"a":0,"k":[86.5,86.5,0],"ix":1},"s":{"a":0,"k":[132.403,53.543,100],"ix":6}},"ao":0,"ef":[{"ty":29,"nm":"Gaussian Blur","np":5,"mn":"ADBE Gaussian Blur 2","ix":1,"en":1,"ef":[{"ty":0,"nm":"Blurriness","mn":"ADBE Gaussian Blur 2-0001","ix":1,"v":{"a":0,"k":50,"ix":1}},{"ty":7,"nm":"Blur Dimensions","mn":"ADBE Gaussian Blur 2-0002","ix":2,"v":{"a":0,"k":1,"ix":2}},{"ty":7,"nm":"Repeat Edge Pixels","mn":"ADBE Gaussian Blur 2-0003","ix":3,"v":{"a":0,"k":0,"ix":3}}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-47.497],[47.497,0],[0,47.497],[-47.497,0]],"o":[[0,47.497],[-47.497,0],[0,-47.497],[47.497,0]],"v":[[86,0],[0,86],[-86,0],[0,-86]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.477388808307,0.718542779661,0.991850490196,1],"ix":4},"o":{"a":0,"k":75,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[87.192,86.962],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100.791,100.791],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":122.000004969162,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"magni","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":0,"s":[380.5,284.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":30,"s":[424.5,272.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":60,"s":[380.5,284.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":90,"s":[424.5,272.5,0],"to":[0,0,0],"ti":[0,0,0]},{"t":120.0000048877,"s":[380.5,284.5,0]}],"ix":2},"a":{"a":0,"k":[91.5,91.5,0],"ix":1},"s":{"a":0,"k":[83.947,83.947,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[19.978,19.977],[-19.979,19.977],[-19.978,-19.977],[19.976,-19.978]],"o":[[-19.977,-19.978],[19.977,-19.977],[19.976,19.977],[-19.978,19.978]],"v":[[-51.185,21.159],[-51.184,-51.185],[21.159,-51.186],[21.159,21.159]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[4.686,4.685],[0,0],[24.183,24.183],[27.007,-27.006],[-27.006,-27.007],[-26.961,18.76],[0,0],[-4.685,4.685]],"o":[[0,0],[19.125,-26.996],[-27.007,-27.007],[-27.006,27.007],[24.041,24.04],[0,0],[4.685,4.685],[4.686,-4.685]],"v":[[86.233,69.269],[41.455,24.894],[33.886,-63.913],[-63.913,-63.913],[-63.913,33.887],[24.415,41.788],[69.267,86.234],[86.233,86.234]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.23137254901960785,0.6431372549019608,0.9725490196078431,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[91.169,91.17],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":6,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.258,0],[0.309,0.659],[-2.083,9.708],[-0.982,-0.209],[0.211,-0.981],[-3.865,-8.242],[0.908,-0.426]],"o":[[-0.683,0],[-4.199,-8.955],[0.21,-0.981],[0.981,0.211],[-1.918,8.937],[0.425,0.907],[-0.249,0.116]],"v":[[2.471,15.796],[0.825,14.75],[-2.456,-14.192],[-0.3,-15.587],[1.095,-13.43],[4.114,13.209],[3.241,15.624]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[34.08,80.75],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":4,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.653,0],[0.27,0.142],[-0.467,0.888],[-0.616,1.662],[-0.941,-0.348],[0.349,-0.94],[0.897,-1.705]],"o":[[-0.284,0],[-0.887,-0.466],[0.824,-1.568],[0.35,-0.94],[0.941,0.349],[-0.671,1.807],[-0.325,0.618]],"v":[[-1.124,4.474],[-1.967,4.265],[-2.729,1.812],[-0.559,-3.055],[1.776,-4.126],[2.847,-1.79],[0.485,3.503]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[116.007,93.836],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":4,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.375,0],[0.357,0.481],[1.475,1.474],[9.566,1.049],[-0.11,0.997],[-1.003,-0.112],[-7.303,-7.303],[-1.339,-1.807],[0.807,-0.597]],"o":[[-0.556,0],[-1.232,-1.663],[-6.819,-6.819],[-0.997,-0.109],[0.11,-0.997],[10.247,1.123],[1.601,1.601],[0.597,0.806],[-0.325,0.241]],"v":[[15.124,10.607],[13.663,9.872],[9.584,5.143],[-15.462,-6.883],[-17.068,-8.887],[-15.064,-10.495],[12.152,2.574],[16.581,7.71],[16.202,10.25]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[96.212,41.374],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":4,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.69,0],[0.243,0.111],[-0.414,0.913],[-0.988,1.606],[-0.855,-0.525],[0.525,-0.854],[0.718,-1.582]],"o":[[-0.251,0],[-0.914,-0.414],[0.78,-1.72],[0.525,-0.854],[0.854,0.525],[-0.908,1.476],[-0.303,0.67]],"v":[[-1.281,4.349],[-2.03,4.186],[-2.934,1.783],[-0.271,-3.229],[2.227,-3.824],[2.823,-1.326],[0.373,3.283]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[37.597,55.556],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":4,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[19.978,-19.977],[-19.977,-19.977],[-19.978,19.978],[19.976,19.977]],"o":[[-19.978,19.977],[19.978,19.977],[19.976,-19.977],[-19.978,-19.978]],"v":[[-36.172,-36.172],[-36.172,36.171],[36.172,36.171],[36.172,-36.172]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.501999974251,0.651000022888,1,1],"ix":4},"o":{"a":0,"k":25,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[76.156,76.156],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":4,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":122.000004969162,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"magni_sh","parent":4,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[89.052,104.5,0],"ix":2},"a":{"a":0,"k":[91.5,91.5,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":29,"nm":"Gaussian Blur","np":5,"mn":"ADBE Gaussian Blur 2","ix":1,"en":1,"ef":[{"ty":0,"nm":"Blurriness","mn":"ADBE Gaussian Blur 2-0001","ix":1,"v":{"a":0,"k":16,"ix":1}},{"ty":7,"nm":"Blur Dimensions","mn":"ADBE Gaussian Blur 2-0002","ix":2,"v":{"a":0,"k":1,"ix":2}},{"ty":7,"nm":"Repeat Edge Pixels","mn":"ADBE Gaussian Blur 2-0003","ix":3,"v":{"a":0,"k":0,"ix":3}}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[19.978,19.977],[-19.979,19.977],[-19.978,-19.977],[19.976,-19.978]],"o":[[-19.977,-19.978],[19.977,-19.977],[19.976,19.977],[-19.978,19.978]],"v":[[-51.185,21.159],[-51.184,-51.185],[21.159,-51.186],[21.159,21.159]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ind":1,"ty":"sh","ix":2,"ks":{"a":0,"k":{"i":[[4.686,4.685],[0,0],[24.183,24.183],[27.007,-27.006],[-27.006,-27.007],[-26.961,18.76],[0,0],[-4.685,4.685]],"o":[[0,0],[19.125,-26.996],[-27.007,-27.007],[-27.006,27.007],[24.041,24.04],[0,0],[4.685,4.685],[4.686,-4.685]],"v":[[86.233,69.269],[41.455,24.894],[33.886,-63.913],[-63.913,-63.913],[-63.913,33.887],[24.415,41.788],[69.267,86.234],[86.233,86.234]],"c":true},"ix":2},"nm":"Path 2","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"mm","mm":1,"nm":"Merge Paths 1","mn":"ADBE Vector Filter - Merge","hd":false},{"ty":"fl","c":{"a":0,"k":[0.43137255311,0.501960813999,0.615686297417,1],"ix":4},"o":{"a":0,"k":10,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[91.169,91.17],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":6,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":122.000004969162,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"list4","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":110,"s":[0]},{"t":120.0000048877,"s":[100]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":110,"s":[312.5,160,0],"to":[0,10,0],"ti":[0,-10,0]},{"t":120.0000048877,"s":[312.5,220,0]}],"ix":2},"a":{"a":0,"k":[218.5,63,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0.851],[0.852,0],[0,-0.851],[-0.851,0]],"o":[[0,-0.851],[-0.851,0],[0,0.851],[0.852,0]],"v":[[1.541,0],[0,-1.541],[-1.541,0],[0,1.541]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.819999964097,0.827000038297,0.870999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[83.352,46.752],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0.851],[0.851,0],[0,-0.851],[-0.851,0]],"o":[[0,-0.851],[-0.851,0],[0,0.851],[0.851,0]],"v":[[1.541,0],[0,-1.541],[-1.541,0],[0,1.541]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.819999964097,0.827000038297,0.870999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[76.996,40.01],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":4,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0.851],[0.852,0],[0,-0.851],[-0.85,0]],"o":[[0,-0.851],[-0.85,0],[0,0.851],[0.852,0]],"v":[[1.542,0],[-0.001,-1.541],[-1.542,0],[-0.001,1.541]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.819999964097,0.827000038297,0.870999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[59.852,41.359],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":4,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0.851],[0.851,0],[0,-0.851],[-0.851,0]],"o":[[0,-0.851],[-0.851,0],[0,0.851],[0.851,0]],"v":[[1.542,-0.001],[0.001,-1.542],[-1.542,-0.001],[0.001,1.542]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.819999964097,0.827000038297,0.870999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[62.741,49.257],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":4,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0.851],[0.852,0],[0,-0.851],[-0.851,0]],"o":[[0,-0.851],[-0.851,0],[0,0.851],[0.852,0]],"v":[[1.541,0],[-0.001,-1.541],[-1.541,0],[-0.001,1.541]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.819999964097,0.827000038297,0.870999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[51.568,45.211],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":4,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-13.869,-7.055],[3.66,7.055],[13.869,-7.055]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[77.718,66.761],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":4,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-3.423],[3.425,0],[0,0],[0,3.424],[-3.424,0],[0,0]],"o":[[0,3.424],[0,0],[-3.424,0],[0,-3.423],[0,0],[3.425,0]],"v":[[32.762,0],[26.561,6.199],[-26.562,6.199],[-32.762,0],[-26.562,-6.199],[26.561,-6.199]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.725,0.736999990426,0.773000021542,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[68.071,65.93],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":4,"cix":2,"bm":0,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-12.66],[12.975,0],[0,12.659],[-16.402,0]],"o":[[0,12.659],[-12.975,0],[0,-12.66],[16.401,0]],"v":[[29.698,3.975],[0.001,13.635],[-29.698,3.975],[0.001,-16.635]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.877999997606,0.889999988032,0.925,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[68.071,49.845],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 8","np":4,"cix":2,"bm":0,"ix":8,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[4.149,0],[1.28,-1.008],[1.755,0],[1.279,-1.008],[1.754,0],[0,-4.149],[-4.149,0],[-1.277,1.007],[-1.754,0],[-1.278,1.007],[-1.754,0],[0,4.149]],"o":[[-1.754,0],[-1.278,-1.008],[-1.754,0],[-1.277,-1.008],[-4.149,0],[0,4.149],[1.754,0],[1.279,1.007],[1.755,0],[1.28,1.007],[4.149,0],[0,-4.149]],"v":[[9.288,-7.512],[4.644,-5.898],[0,-7.512],[-4.644,-5.898],[-9.287,-7.512],[-16.8,0],[-9.287,7.512],[-4.644,5.898],[0,7.512],[4.644,5.898],[9.288,7.512],[16.8,0]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.885999971278,0.898000021542,0.929000016755,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[80.979,71.119],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 9","np":4,"cix":2,"bm":0,"ix":9,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[4.149,0],[1.279,-1.008],[1.754,0],[1.279,-1.008],[1.756,0],[0,-4.149],[-4.149,0],[-1.279,1.007],[-1.755,0],[-1.278,1.007],[-1.755,0],[0,4.149]],"o":[[-1.755,0],[-1.278,-1.008],[-1.755,0],[-1.279,-1.008],[-4.149,0],[0,4.149],[1.756,0],[1.279,1.007],[1.754,0],[1.279,1.007],[4.149,0],[0,-4.149]],"v":[[9.289,-7.512],[4.644,-5.898],[0.001,-7.512],[-4.644,-5.898],[-9.289,-7.512],[-16.801,0],[-9.289,7.512],[-4.644,5.898],[0.001,7.512],[4.644,5.898],[9.289,7.512],[16.801,0]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.885999971278,0.898000021542,0.929000016755,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[55.164,71.119],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 10","np":4,"cix":2,"bm":0,"ix":10,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[28.872,4.521],[28.872,-4.521],[-28.872,-4.521],[-28.872,4.521]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.725,0.736999990426,0.773000021542,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[68.072,77.814],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 11","np":4,"cix":2,"bm":0,"ix":11,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-5.603,0],[0,0],[0,5.604],[0,0]],"o":[[0,0],[0,5.604],[0,0],[5.602,0],[0,0],[0,0]],"v":[[-28.872,-9.594],[-28.872,-0.551],[-18.726,9.594],[18.727,9.594],[28.872,-0.551],[28.872,-9.594]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.877999997606,0.889999988032,0.925,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[68.072,82.887],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 12","np":4,"cix":2,"bm":0,"ix":12,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.626,0],[0,0],[0,2.626],[0,0],[-2.626,0],[0,0],[0,-2.626],[0,0]],"o":[[0,0],[-2.626,0],[0,0],[0,-2.626],[0,0],[2.626,0],[0,0],[0,2.626]],"v":[[90.539,8.938],[-90.539,8.938],[-95.294,4.183],[-95.294,-4.183],[-90.539,-8.938],[90.539,-8.938],[95.294,-4.183],[95.294,4.183]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.877999997606,0.889999988032,0.925,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[225.654,45.822],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 13","np":4,"cix":2,"bm":0,"ix":13,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.626,0],[0,0],[0,2.626],[0,0],[-2.626,0],[0,0],[0,-2.626],[0,0]],"o":[[0,0],[-2.626,0],[0,0],[0,-2.626],[0,0],[2.626,0],[0,0],[0,2.626]],"v":[[133.539,8.938],[-133.539,8.938],[-138.294,4.183],[-138.294,-4.183],[-133.539,-8.938],[133.539,-8.938],[138.294,-4.183],[138.294,4.183]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.877999997606,0.889999988032,0.925,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[268.654,79.869],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 14","np":4,"cix":2,"bm":0,"ix":14,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[6.583,0],[0,0],[0,6.582],[0,0],[-6.583,0],[0,0],[0,-6.583],[0,0]],"o":[[0,0],[-6.583,0],[0,0],[0,-6.583],[0,0],[6.583,0],[0,0],[0,6.582]],"v":[[206.081,62.595],[-206.081,62.595],[-218,50.677],[-218,-50.677],[-206.081,-62.595],[206.081,-62.595],[218,-50.677],[218,50.677]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.972999961703,0.976000019148,0.995999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[218.25,62.846],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 15","np":4,"cix":2,"bm":0,"ix":15,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":122.000004969162,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"list4_sh","parent":6,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":110,"s":[0]},{"t":120.0000048877,"s":[100]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[218.5,67,0],"ix":2},"a":{"a":0,"k":[218.5,63,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":29,"nm":"Gaussian Blur","np":5,"mn":"ADBE Gaussian Blur 2","ix":1,"en":1,"ef":[{"ty":0,"nm":"Blurriness","mn":"ADBE Gaussian Blur 2-0001","ix":1,"v":{"a":0,"k":10,"ix":1}},{"ty":7,"nm":"Blur Dimensions","mn":"ADBE Gaussian Blur 2-0002","ix":2,"v":{"a":0,"k":1,"ix":2}},{"ty":7,"nm":"Repeat Edge Pixels","mn":"ADBE Gaussian Blur 2-0003","ix":3,"v":{"a":0,"k":0,"ix":3}}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[6.583,0],[0,0],[0,6.582],[0,0],[-6.583,0],[0,0],[0,-6.583],[0,0]],"o":[[0,0],[-6.583,0],[0,0],[0,-6.583],[0,0],[6.583,0],[0,0],[0,6.582]],"v":[[206.081,62.595],[-206.081,62.595],[-218,50.677],[-218,-50.677],[-206.081,-62.595],[206.081,-62.595],[218,-50.677],[218,50.677]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.850980401039,0.874509811401,0.92549020052,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[218.25,62.846],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":122.000004969162,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"list3","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":70,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":80,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":103,"s":[100]},{"t":120.0000048877,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":70,"s":[312.5,160,0],"to":[0,10,0],"ti":[0,-10,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.333,"y":0.333},"t":80,"s":[312.5,220,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":103,"s":[312.5,220,0],"to":[0,26.667,0],"ti":[0,-26.667,0]},{"t":120.0000048877,"s":[312.5,380,0]}],"ix":2},"a":{"a":0,"k":[218.5,63,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[9.68,4.331],[-9.68,4.331],[-9.68,-4.331],[9.68,-4.331]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[72.091,47.936],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[5.782,-29.568],[-5.782,-29.568],[-5.782,29.568],[5.782,29.568]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.705999995213,0.717999985639,0.757000014361,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[49.072,60.917],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":4,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.034,0],[0,0],[0,0],[0,0],[0,3.035],[0,0]],"o":[[0,0],[0,0],[0,0],[3.034,0],[0,0],[0,-3.033]],"v":[[17.756,-29.568],[-23.249,-29.568],[-23.249,29.568],[17.756,29.568],[23.249,24.075],[23.249,-24.075]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.811999990426,0.823999980852,0.866999966491,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[66.54,60.917],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":4,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.034,0],[0,0],[0,0],[0,0],[0,3.033],[0,0]],"o":[[0,0],[0,0],[0,0],[3.034,0],[0,0],[0,-3.034]],"v":[[18.025,-29.568],[-23.518,-29.568],[-23.518,29.568],[18.025,29.568],[23.518,24.075],[23.518,-24.075]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[68.663,64.431],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":4,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[5.782,-29.568],[-5.782,-29.568],[-5.782,29.568],[5.782,29.568]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.705999995213,0.717999985639,0.757000014361,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[49.072,66.773],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":4,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[3.034,0],[0,0],[0,0],[0,0],[0,3.032],[0,0]],"o":[[0,0],[0,0],[0,0],[3.034,0],[0,0],[0,-3.034]],"v":[[19.879,-29.568],[-25.372,-29.568],[-25.372,29.568],[19.879,29.568],[25.372,24.076],[25.372,-24.076]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.764999988032,0.776000019148,0.830999995213,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[68.662,66.773],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":4,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.626,0],[0,0],[0,2.626],[0,0],[-2.626,0],[0,0],[0,-2.626],[0,0]],"o":[[0,0],[-2.626,0],[0,0],[0,-2.626],[0,0],[2.626,0],[0,0],[0,2.626]],"v":[[90.539,8.938],[-90.539,8.938],[-95.294,4.183],[-95.294,-4.183],[-90.539,-8.938],[90.539,-8.938],[95.294,-4.183],[95.294,4.183]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.877999997606,0.889999988032,0.925,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[225.654,45.822],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":4,"cix":2,"bm":0,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.626,0],[0,0],[0,2.626],[0,0],[-2.626,0],[0,0],[0,-2.626],[0,0]],"o":[[0,0],[-2.626,0],[0,0],[0,-2.626],[0,0],[2.626,0],[0,0],[0,2.626]],"v":[[133.539,8.938],[-133.539,8.938],[-138.294,4.183],[-138.294,-4.183],[-133.539,-8.938],[133.539,-8.938],[138.294,-4.183],[138.294,4.183]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.877999997606,0.889999988032,0.925,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[268.654,79.868],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 8","np":4,"cix":2,"bm":0,"ix":8,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[6.583,0],[0,0],[0,6.583],[0,0],[-6.583,0],[0,0],[0,-6.583],[0,0]],"o":[[0,0],[-6.583,0],[0,0],[0,-6.583],[0,0],[6.583,0],[0,0],[0,6.583]],"v":[[206.081,62.596],[-206.081,62.596],[-218,50.676],[-218,-50.677],[-206.081,-62.596],[206.081,-62.596],[218,-50.677],[218,50.676]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.972999961703,0.976000019148,0.995999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[218.25,62.846],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 9","np":4,"cix":2,"bm":0,"ix":9,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":122.000004969162,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"list3_sh","parent":8,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":70,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":80,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":103,"s":[100]},{"t":110.000004480392,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[218,67,0],"ix":2},"a":{"a":0,"k":[218.5,63,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":29,"nm":"Gaussian Blur","np":5,"mn":"ADBE Gaussian Blur 2","ix":1,"en":1,"ef":[{"ty":0,"nm":"Blurriness","mn":"ADBE Gaussian Blur 2-0001","ix":1,"v":{"a":0,"k":10,"ix":1}},{"ty":7,"nm":"Blur Dimensions","mn":"ADBE Gaussian Blur 2-0002","ix":2,"v":{"a":0,"k":1,"ix":2}},{"ty":7,"nm":"Repeat Edge Pixels","mn":"ADBE Gaussian Blur 2-0003","ix":3,"v":{"a":0,"k":0,"ix":3}}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[6.583,0],[0,0],[0,6.583],[0,0],[-6.583,0],[0,0],[0,-6.583],[0,0]],"o":[[0,0],[-6.583,0],[0,0],[0,-6.583],[0,0],[6.583,0],[0,0],[0,6.583]],"v":[[206.081,62.596],[-206.081,62.596],[-218,50.676],[-218,-50.677],[-206.081,-62.596],[206.081,-62.596],[218,-50.677],[218,50.676]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.850980401039,0.874509811401,0.92549020052,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[218.25,62.846],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"list2","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":30,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":40,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":63,"s":[100]},{"t":80.0000032584668,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":30,"s":[312.5,160,0],"to":[0,10,0],"ti":[0,-10,0]},{"i":{"x":0.667,"y":0.667},"o":{"x":0.333,"y":0.333},"t":40,"s":[312.5,220,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":63,"s":[312.5,220,0],"to":[0,26.667,0],"ti":[0,-26.667,0]},{"t":80.0000032584668,"s":[312.5,380,0]}],"ix":2},"a":{"a":0,"k":[218.5,63,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,7.17],[0,0]],"o":[[0,0],[0,0],[7.17,0],[0,0],[0,0]],"v":[[-9.341,-23.988],[-9.341,23.988],[-3.642,23.988],[9.34,11.005],[9.34,-23.988]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0,0,1],"ix":4},"o":{"a":0,"k":10,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[81.023,67.621],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.833,0],[0,-0.833],[0.68,-1.104],[0.315,-0.826],[0,-1.427],[-0.346,-0.276],[-0.356,0],[0,0.832],[-0.68,1.104],[0,2.767]],"o":[[-0.833,0],[0,1.912],[-0.378,0.614],[-0.335,0.878],[0,0.477],[0.258,0.206],[0.833,0],[0,-1.912],[0.782,-1.268],[0,-0.833]],"v":[[1.443,-6.187],[-0.065,-4.679],[-1.283,-0.791],[-2.378,1.306],[-2.95,4.68],[-2.378,5.853],[-1.442,6.187],[0.066,4.68],[1.283,0.792],[2.95,-4.679]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.877999997606,0.889999988032,0.929000016755,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[73.021,34.057],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":4,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.346,0.276],[0.356,0],[0,-0.833],[0.682,-1.104],[0.315,-0.826],[0,-1.426],[-0.346,-0.276],[-0.356,0],[0,0.832],[-0.681,1.104],[-0.315,0.826],[0,1.426]],"o":[[-0.258,-0.206],[-0.833,0],[0,1.912],[-0.378,0.615],[-0.335,0.878],[0,0.477],[0.257,0.206],[0.833,0],[0,-1.912],[0.378,-0.615],[0.335,-0.878],[0,-0.477]],"v":[[2.378,-5.853],[1.442,-6.187],[-0.065,-4.679],[-1.284,-0.791],[-2.378,1.307],[-2.95,4.68],[-2.378,5.853],[-1.442,6.187],[0.065,4.68],[1.284,0.792],[2.378,-1.306],[2.95,-4.679]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.877999997606,0.889999988032,0.929000016755,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[65.662,34.057],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":4,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.346,0.276],[0.355,0],[0,-0.832],[0.68,-1.104],[0,-2.767],[-0.833,0],[0,0.833],[-0.681,1.104],[-0.315,0.826],[0,1.426]],"o":[[-0.258,-0.206],[-0.833,0],[0,1.912],[-0.782,1.267],[0,0.833],[0.832,0],[0,-1.912],[0.379,-0.614],[0.334,-0.878],[0,-0.477]],"v":[[2.379,-5.853],[1.443,-6.187],[-0.066,-4.68],[-1.283,-0.791],[-2.95,4.679],[-1.442,6.187],[0.065,4.679],[1.284,0.791],[2.379,-1.307],[2.95,-4.68]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.877999997606,0.889999988032,0.929000016755,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[58.303,34.057],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":4,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-7.17,0],[0,0],[0,7.17],[0,0]],"o":[[0,0],[0,7.17],[0,0],[7.17,0],[0,0],[0,0]],"v":[[-24.673,-16.126],[-24.673,3.144],[-11.691,16.126],[11.69,16.126],[24.673,3.144],[24.673,-16.126]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.705999995213,0.722000002394,0.776000019148,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[65.663,75.482],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":4,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-7.17,0],[0,0],[0,7.17],[0,0]],"o":[[0,0],[0,7.17],[0,0],[7.17,0],[0,0],[0,0]],"v":[[-24.673,-23.988],[-24.673,11.005],[-11.691,23.988],[11.691,23.988],[24.673,11.005],[24.673,-23.988]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[65.69,67.621],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":4,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-0.833,0],[-2.091,2.226],[0.027,0.589],[0,0],[0.833,0],[0,0],[0,-0.833],[-0.832,0],[0,0],[0,0],[-0.002,-0.031],[2.419,-2.573],[2.933,0],[0,-0.833]],"o":[[3.798,0],[3.156,-3.355],[0,0],[0,-0.833],[0,0],[-0.832,0],[0,0.833],[0,0],[0,0],[0,0.031],[0.002,0.038],[-1.499,1.594],[-0.833,0],[0,0.832]],"v":[[-5.262,13.906],[3.614,10.553],[6.644,1.962],[6.644,-12.398],[5.136,-13.906],[-4.463,-13.906],[-5.97,-12.398],[-4.463,-10.89],[3.629,-10.89],[3.629,2],[3.632,2.093],[1.418,8.489],[-5.262,10.891],[-6.77,12.399]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.877999997606,0.889999988032,0.929000016755,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[95.562,62.453],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":4,"cix":2,"bm":0,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.626,0],[0,0],[0,2.626],[0,0],[-2.626,0],[0,0],[0,-2.626],[0,0]],"o":[[0,0],[-2.626,0],[0,0],[0,-2.626],[0,0],[2.626,0],[0,0],[0,2.626]],"v":[[90.539,8.938],[-90.539,8.938],[-95.294,4.183],[-95.294,-4.183],[-90.539,-8.938],[90.539,-8.938],[95.294,-4.183],[95.294,4.183]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.877999997606,0.889999988032,0.925,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[225.654,45.822],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 8","np":4,"cix":2,"bm":0,"ix":8,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.626,0],[0,0],[0,2.626],[0,0],[-2.626,0],[0,0],[0,-2.626],[0,0]],"o":[[0,0],[-2.626,0],[0,0],[0,-2.626],[0,0],[2.626,0],[0,0],[0,2.626]],"v":[[133.539,8.938],[-133.539,8.938],[-138.294,4.183],[-138.294,-4.183],[-133.539,-8.938],[133.539,-8.938],[138.294,-4.183],[138.294,4.183]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.877999997606,0.889999988032,0.925,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[268.654,79.869],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 9","np":4,"cix":2,"bm":0,"ix":9,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[6.583,0],[0,0],[0,6.582],[0,0],[-6.583,0],[0,0],[0,-6.583],[0,0]],"o":[[0,0],[-6.583,0],[0,0],[0,-6.583],[0,0],[6.583,0],[0,0],[0,6.582]],"v":[[206.081,62.596],[-206.081,62.596],[-218,50.677],[-218,-50.677],[-206.081,-62.596],[206.081,-62.596],[218,-50.677],[218,50.677]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.972999961703,0.976000019148,0.995999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[218.25,62.846],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 10","np":4,"cix":2,"bm":0,"ix":10,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":122.000004969162,"st":0,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"list2_sh","parent":10,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":30,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":40,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":63,"s":[100]},{"t":70.0000028511585,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[218.5,67,0],"ix":2},"a":{"a":0,"k":[218.5,63,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":29,"nm":"Gaussian Blur","np":5,"mn":"ADBE Gaussian Blur 2","ix":1,"en":1,"ef":[{"ty":0,"nm":"Blurriness","mn":"ADBE Gaussian Blur 2-0001","ix":1,"v":{"a":0,"k":10,"ix":1}},{"ty":7,"nm":"Blur Dimensions","mn":"ADBE Gaussian Blur 2-0002","ix":2,"v":{"a":0,"k":1,"ix":2}},{"ty":7,"nm":"Repeat Edge Pixels","mn":"ADBE Gaussian Blur 2-0003","ix":3,"v":{"a":0,"k":0,"ix":3}}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[6.583,0],[0,0],[0,6.582],[0,0],[-6.583,0],[0,0],[0,-6.583],[0,0]],"o":[[0,0],[-6.583,0],[0,0],[0,-6.583],[0,0],[6.583,0],[0,0],[0,6.582]],"v":[[206.081,62.596],[-206.081,62.596],[-218,50.677],[-218,-50.677],[-206.081,-62.596],[206.081,-62.596],[218,-50.677],[218,50.677]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.850980401039,0.874509811401,0.92549020052,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[218.25,62.846],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":122.000004969162,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"list1","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":23,"s":[100]},{"t":40.0000016292334,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.667,"y":0.667},"o":{"x":0.333,"y":0.333},"t":0,"s":[312.5,220,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.333,"y":0},"t":23,"s":[312.5,220,0],"to":[0,26.667,0],"ti":[0,-26.667,0]},{"t":40.0000016292334,"s":[312.5,380,0]}],"ix":2},"a":{"a":0,"k":[218.5,63,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0.851],[0.852,0],[0,-0.851],[-0.851,0]],"o":[[0,-0.851],[-0.851,0],[0,0.851],[0.852,0]],"v":[[1.541,0],[0,-1.541],[-1.541,0],[0,1.541]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.819999964097,0.827000038297,0.870999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[83.352,46.752],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0.851],[0.851,0],[0,-0.851],[-0.851,0]],"o":[[0,-0.851],[-0.851,0],[0,0.851],[0.851,0]],"v":[[1.541,0],[0,-1.541],[-1.541,0],[0,1.541]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.819999964097,0.827000038297,0.870999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[76.996,40.01],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":4,"cix":2,"bm":0,"ix":2,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0.851],[0.852,0],[0,-0.851],[-0.85,0]],"o":[[0,-0.851],[-0.85,0],[0,0.851],[0.852,0]],"v":[[1.542,0],[-0.001,-1.541],[-1.542,0],[-0.001,1.541]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.819999964097,0.827000038297,0.870999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[59.852,41.359],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":4,"cix":2,"bm":0,"ix":3,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0.851],[0.851,0],[0,-0.851],[-0.851,0]],"o":[[0,-0.851],[-0.851,0],[0,0.851],[0.851,0]],"v":[[1.542,-0.001],[0.001,-1.542],[-1.542,-0.001],[0.001,1.542]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.819999964097,0.827000038297,0.870999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[62.741,49.257],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":4,"cix":2,"bm":0,"ix":4,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0.851],[0.852,0],[0,-0.851],[-0.851,0]],"o":[[0,-0.851],[-0.851,0],[0,0.851],[0.852,0]],"v":[[1.541,0],[-0.001,-1.541],[-1.541,0],[-0.001,1.541]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.819999964097,0.827000038297,0.870999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[51.568,45.211],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":4,"cix":2,"bm":0,"ix":5,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0]],"v":[[-13.869,-7.055],[3.66,7.055],[13.869,-7.055]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,1,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[77.718,66.761],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":4,"cix":2,"bm":0,"ix":6,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-3.423],[3.425,0],[0,0],[0,3.424],[-3.424,0],[0,0]],"o":[[0,3.424],[0,0],[-3.424,0],[0,-3.423],[0,0],[3.425,0]],"v":[[32.762,0],[26.561,6.199],[-26.562,6.199],[-32.762,0],[-26.562,-6.199],[26.561,-6.199]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.725,0.736999990426,0.773000021542,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[68.071,65.93],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":4,"cix":2,"bm":0,"ix":7,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-12.66],[12.975,0],[0,12.659],[-16.402,0]],"o":[[0,12.659],[-12.975,0],[0,-12.66],[16.401,0]],"v":[[29.698,3.975],[0.001,13.635],[-29.698,3.975],[0.001,-16.635]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.877999997606,0.889999988032,0.925,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[68.071,49.845],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 8","np":4,"cix":2,"bm":0,"ix":8,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[4.149,0],[1.28,-1.008],[1.755,0],[1.279,-1.008],[1.754,0],[0,-4.149],[-4.149,0],[-1.277,1.007],[-1.754,0],[-1.278,1.007],[-1.754,0],[0,4.149]],"o":[[-1.754,0],[-1.278,-1.008],[-1.754,0],[-1.277,-1.008],[-4.149,0],[0,4.149],[1.754,0],[1.279,1.007],[1.755,0],[1.28,1.007],[4.149,0],[0,-4.149]],"v":[[9.288,-7.512],[4.644,-5.898],[0,-7.512],[-4.644,-5.898],[-9.287,-7.512],[-16.8,0],[-9.287,7.512],[-4.644,5.898],[0,7.512],[4.644,5.898],[9.288,7.512],[16.8,0]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.885999971278,0.898000021542,0.929000016755,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[80.979,71.119],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 9","np":4,"cix":2,"bm":0,"ix":9,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[4.149,0],[1.279,-1.008],[1.754,0],[1.279,-1.008],[1.756,0],[0,-4.149],[-4.149,0],[-1.279,1.007],[-1.755,0],[-1.278,1.007],[-1.755,0],[0,4.149]],"o":[[-1.755,0],[-1.278,-1.008],[-1.755,0],[-1.279,-1.008],[-4.149,0],[0,4.149],[1.756,0],[1.279,1.007],[1.754,0],[1.279,1.007],[4.149,0],[0,-4.149]],"v":[[9.289,-7.512],[4.644,-5.898],[0.001,-7.512],[-4.644,-5.898],[-9.289,-7.512],[-16.801,0],[-9.289,7.512],[-4.644,5.898],[0.001,7.512],[4.644,5.898],[9.289,7.512],[16.801,0]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.885999971278,0.898000021542,0.929000016755,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[55.164,71.119],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 10","np":4,"cix":2,"bm":0,"ix":10,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[0,0]],"o":[[0,0],[0,0],[0,0],[0,0]],"v":[[28.872,4.521],[28.872,-4.521],[-28.872,-4.521],[-28.872,4.521]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.725,0.736999990426,0.773000021542,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[68.072,77.814],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 11","np":4,"cix":2,"bm":0,"ix":11,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-5.603,0],[0,0],[0,5.604],[0,0]],"o":[[0,0],[0,5.604],[0,0],[5.602,0],[0,0],[0,0]],"v":[[-28.872,-9.594],[-28.872,-0.551],[-18.726,9.594],[18.727,9.594],[28.872,-0.551],[28.872,-9.594]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.877999997606,0.889999988032,0.925,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[68.072,82.887],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 12","np":4,"cix":2,"bm":0,"ix":12,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.626,0],[0,0],[0,2.626],[0,0],[-2.626,0],[0,0],[0,-2.626],[0,0]],"o":[[0,0],[-2.626,0],[0,0],[0,-2.626],[0,0],[2.626,0],[0,0],[0,2.626]],"v":[[90.539,8.938],[-90.539,8.938],[-95.294,4.183],[-95.294,-4.183],[-90.539,-8.938],[90.539,-8.938],[95.294,-4.183],[95.294,4.183]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.877999997606,0.889999988032,0.925,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[225.654,45.822],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 13","np":4,"cix":2,"bm":0,"ix":13,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[2.626,0],[0,0],[0,2.626],[0,0],[-2.626,0],[0,0],[0,-2.626],[0,0]],"o":[[0,0],[-2.626,0],[0,0],[0,-2.626],[0,0],[2.626,0],[0,0],[0,2.626]],"v":[[133.539,8.938],[-133.539,8.938],[-138.294,4.183],[-138.294,-4.183],[-133.539,-8.938],[133.539,-8.938],[138.294,-4.183],[138.294,4.183]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.877999997606,0.889999988032,0.925,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[268.654,79.869],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 14","np":4,"cix":2,"bm":0,"ix":14,"mn":"ADBE Vector Group","hd":false},{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[6.583,0],[0,0],[0,6.582],[0,0],[-6.583,0],[0,0],[0,-6.583],[0,0]],"o":[[0,0],[-6.583,0],[0,0],[0,-6.583],[0,0],[6.583,0],[0,0],[0,6.582]],"v":[[206.081,62.595],[-206.081,62.595],[-218,50.677],[-218,-50.677],[-206.081,-62.595],[206.081,-62.595],[218,-50.677],[218,50.677]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.972999961703,0.976000019148,0.995999983245,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[218.25,62.846],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 15","np":4,"cix":2,"bm":0,"ix":15,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":122.000004969162,"st":0,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"list1_sh","parent":12,"sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":23,"s":[100]},{"t":30.0000012219251,"s":[0]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[218.5,67,0],"ix":2},"a":{"a":0,"k":[218.5,63,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"ef":[{"ty":29,"nm":"Gaussian Blur","np":5,"mn":"ADBE Gaussian Blur 2","ix":1,"en":1,"ef":[{"ty":0,"nm":"Blurriness","mn":"ADBE Gaussian Blur 2-0001","ix":1,"v":{"a":0,"k":10,"ix":1}},{"ty":7,"nm":"Blur Dimensions","mn":"ADBE Gaussian Blur 2-0002","ix":2,"v":{"a":0,"k":1,"ix":2}},{"ty":7,"nm":"Repeat Edge Pixels","mn":"ADBE Gaussian Blur 2-0003","ix":3,"v":{"a":0,"k":0,"ix":3}}]}],"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[6.583,0],[0,0],[0,6.582],[0,0],[-6.583,0],[0,0],[0,-6.583],[0,0]],"o":[[0,0],[-6.583,0],[0,0],[0,-6.583],[0,0],[6.583,0],[0,0],[0,6.582]],"v":[[206.081,62.595],[-206.081,62.595],[-218,50.677],[-218,-50.677],[-206.081,-62.595],[206.081,-62.595],[218,-50.677],[218,50.677]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.850980401039,0.874509811401,0.92549020052,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[218.25,62.846],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":122.000004969162,"st":0,"bm":0}]'
    ),
    markers = [],
    NotFoundImage = {
        v,
        meta,
        fr,
        ip,
        op,
        w,
        h,
        nm,
        ddd,
        assets,
        layers,
        markers,
    },
    Quetsion = '/assets/question-found-Qgvn9qZf.png',
    notFound = () => {
        const e = {
            loop: !0,
            autoplay: !0,
            animationData: NotFoundImage,
            rendererSettings: { preserveAspectRatio: 'xMidYMid slice' },
        };
        return jsxRuntimeExports.jsxs('div', {
            className:
                'fade pointBackground font-Poppins bg-custom-light-gray bannerBackground h-screen w-screen dark:bg-slate-950',
            children: [
                jsxRuntimeExports.jsxs('div', {
                    className:
                        'gradientBack flex h-screen flex-col items-center justify-center bg-cover',
                    children: [
                        jsxRuntimeExports.jsx('div', {
                            className:
                                'flex-start fade-in relative -top-12 hidden h-[140px] md:flex',
                            children: jsxRuntimeExports.jsx(Lottie, {
                                height: 200,
                                width: 200,
                                options: e,
                            }),
                        }),
                        jsxRuntimeExports.jsx('img', {
                            src: Star2,
                            width: '200px',
                            alt: 'Cube',
                            className:
                                'float md: absolute top-30 left-70 z-20 hidden md:hidden xl:flex',
                        }),
                        jsxRuntimeExports.jsx('img', {
                            src: Quetsion,
                            width: '220px',
                            alt: 'Cube',
                            className:
                                'float absolute right-70 bottom-52 z-20 hidden md:hidden xl:flex',
                        }),
                        jsxRuntimeExports.jsxs('div', {
                            className:
                                'animate-zoom flex flex-col items-center justify-center',
                            children: [
                                jsxRuntimeExports.jsx('h1', {
                                    className:
                                        'from-custom-green via-custom-dark-gray to-custom-bright-blue font-syne mb-2 bg-gradient-to-br from-sky-600 to-pink-400 bg-clip-text py-1 text-center text-[50px] font-semibold text-transparent md:text-[90px] xl:-mt-5 xl:text-[200px]',
                                    children: 'Erreur 404',
                                }),
                                jsxRuntimeExports.jsx('h3', {
                                    className:
                                        '-mt-8 mb-6 font-bold text-slate-500 xl:text-xl',
                                    children: '- Page Non Trouvée -',
                                }),
                                jsxRuntimeExports.jsx('p', {
                                    className:
                                        'mb-8 px-10 text-center font-normal text-gray-600 md:w-[40%] md:text-[12px] xl:text-[14px]',
                                    children:
                                        "Désolé, la page que vous recherchez semble indisponible. Peut-être avez-vous suivi un lien incorrect ou la page a été déplacée. Retournez à la page d'accueil pour continuer votre navigation.",
                                }),
                                jsxRuntimeExports.jsx(Link, {
                                    to: '/',
                                    children: jsxRuntimeExports.jsx(Button, {
                                        className:
                                            'bg-primary-400 rounded-3xl p-3 px-6 text-white',
                                        children: "Retour à l'accueil",
                                    }),
                                }),
                            ],
                        }),
                    ],
                }),
                jsxRuntimeExports.jsx(FooterRedirect, {}),
            ],
        });
    };
export { notFound as default };

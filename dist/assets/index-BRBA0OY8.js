const __vite__mapDeps = (
    i,
    m = __vite__mapDeps,
    d = m.f ||
        (m.f = [
            'assets/index-BC3zyj99.js',
            'assets/index-BjnEytZW.js',
            'assets/lottie-4koyQiv_.js',
            'assets/index-hZT88v7D.js',
            'assets/Cube-found-ChOUz20m.js',
            'assets/index-D8lQuXat.js',
        ])
) => i.map((i) => d[i]);
(function () {
    const e = document.createElement('link').relList;
    if (e && e.supports && e.supports('modulepreload')) return;
    for (const i of document.querySelectorAll('link[rel="modulepreload"]'))
        n(i);
    new MutationObserver((i) => {
        for (const s of i)
            if (s.type === 'childList')
                for (const o of s.addedNodes)
                    o.tagName === 'LINK' && o.rel === 'modulepreload' && n(o);
    }).observe(document, { childList: !0, subtree: !0 });
    function t(i) {
        const s = {};
        return (
            i.integrity && (s.integrity = i.integrity),
            i.referrerPolicy && (s.referrerPolicy = i.referrerPolicy),
            i.crossOrigin === 'use-credentials'
                ? (s.credentials = 'include')
                : i.crossOrigin === 'anonymous'
                  ? (s.credentials = 'omit')
                  : (s.credentials = 'same-origin'),
            s
        );
    }
    function n(i) {
        if (i.ep) return;
        i.ep = !0;
        const s = t(i);
        fetch(i.href, s);
    }
})();
var CQ =
    typeof globalThis < 'u'
        ? globalThis
        : typeof window < 'u'
          ? window
          : typeof global < 'u'
            ? global
            : typeof self < 'u'
              ? self
              : {};
function rE(r) {
    return r &&
        r.__esModule &&
        Object.prototype.hasOwnProperty.call(r, 'default')
        ? r.default
        : r;
}
var Y1 = { exports: {} },
    zm = {},
    q1 = { exports: {} },
    Mn = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var qA;
function VN() {
    if (qA) return Mn;
    qA = 1;
    var r = Symbol.for('react.element'),
        e = Symbol.for('react.portal'),
        t = Symbol.for('react.fragment'),
        n = Symbol.for('react.strict_mode'),
        i = Symbol.for('react.profiler'),
        s = Symbol.for('react.provider'),
        o = Symbol.for('react.context'),
        a = Symbol.for('react.forward_ref'),
        l = Symbol.for('react.suspense'),
        u = Symbol.for('react.memo'),
        f = Symbol.for('react.lazy'),
        d = Symbol.iterator;
    function m(F) {
        return F === null || typeof F != 'object'
            ? null
            : ((F = (d && F[d]) || F['@@iterator']),
              typeof F == 'function' ? F : null);
    }
    var v = {
            isMounted: function () {
                return !1;
            },
            enqueueForceUpdate: function () {},
            enqueueReplaceState: function () {},
            enqueueSetState: function () {},
        },
        _ = Object.assign,
        S = {};
    function w(F, $, fe) {
        (this.props = F),
            (this.context = $),
            (this.refs = S),
            (this.updater = fe || v);
    }
    (w.prototype.isReactComponent = {}),
        (w.prototype.setState = function (F, $) {
            if (typeof F != 'object' && typeof F != 'function' && F != null)
                throw Error(
                    'setState(...): takes an object of state variables to update or a function which returns an object of state variables.'
                );
            this.updater.enqueueSetState(this, F, $, 'setState');
        }),
        (w.prototype.forceUpdate = function (F) {
            this.updater.enqueueForceUpdate(this, F, 'forceUpdate');
        });
    function x() {}
    x.prototype = w.prototype;
    function A(F, $, fe) {
        (this.props = F),
            (this.context = $),
            (this.refs = S),
            (this.updater = fe || v);
    }
    var T = (A.prototype = new x());
    (T.constructor = A), _(T, w.prototype), (T.isPureReactComponent = !0);
    var b = Array.isArray,
        P = Object.prototype.hasOwnProperty,
        L = { current: null },
        D = { key: !0, ref: !0, __self: !0, __source: !0 };
    function O(F, $, fe) {
        var ne,
            ae = {},
            me = null,
            ge = null;
        if ($ != null)
            for (ne in ($.ref !== void 0 && (ge = $.ref),
            $.key !== void 0 && (me = '' + $.key),
            $))
                P.call($, ne) && !D.hasOwnProperty(ne) && (ae[ne] = $[ne]);
        var Ae = arguments.length - 2;
        if (Ae === 1) ae.children = fe;
        else if (1 < Ae) {
            for (var je = Array(Ae), Qe = 0; Qe < Ae; Qe++)
                je[Qe] = arguments[Qe + 2];
            ae.children = je;
        }
        if (F && F.defaultProps)
            for (ne in ((Ae = F.defaultProps), Ae))
                ae[ne] === void 0 && (ae[ne] = Ae[ne]);
        return {
            $$typeof: r,
            type: F,
            key: me,
            ref: ge,
            props: ae,
            _owner: L.current,
        };
    }
    function I(F, $) {
        return {
            $$typeof: r,
            type: F.type,
            key: $,
            ref: F.ref,
            props: F.props,
            _owner: F._owner,
        };
    }
    function U(F) {
        return typeof F == 'object' && F !== null && F.$$typeof === r;
    }
    function H(F) {
        var $ = { '=': '=0', ':': '=2' };
        return (
            '$' +
            F.replace(/[=:]/g, function (fe) {
                return $[fe];
            })
        );
    }
    var W = /\/+/g;
    function q(F, $) {
        return typeof F == 'object' && F !== null && F.key != null
            ? H('' + F.key)
            : $.toString(36);
    }
    function K(F, $, fe, ne, ae) {
        var me = typeof F;
        (me === 'undefined' || me === 'boolean') && (F = null);
        var ge = !1;
        if (F === null) ge = !0;
        else
            switch (me) {
                case 'string':
                case 'number':
                    ge = !0;
                    break;
                case 'object':
                    switch (F.$$typeof) {
                        case r:
                        case e:
                            ge = !0;
                    }
            }
        if (ge)
            return (
                (ge = F),
                (ae = ae(ge)),
                (F = ne === '' ? '.' + q(ge, 0) : ne),
                b(ae)
                    ? ((fe = ''),
                      F != null && (fe = F.replace(W, '$&/') + '/'),
                      K(ae, $, fe, '', function (Qe) {
                          return Qe;
                      }))
                    : ae != null &&
                      (U(ae) &&
                          (ae = I(
                              ae,
                              fe +
                                  (!ae.key || (ge && ge.key === ae.key)
                                      ? ''
                                      : ('' + ae.key).replace(W, '$&/') + '/') +
                                  F
                          )),
                      $.push(ae)),
                1
            );
        if (((ge = 0), (ne = ne === '' ? '.' : ne + ':'), b(F)))
            for (var Ae = 0; Ae < F.length; Ae++) {
                me = F[Ae];
                var je = ne + q(me, Ae);
                ge += K(me, $, fe, je, ae);
            }
        else if (((je = m(F)), typeof je == 'function'))
            for (F = je.call(F), Ae = 0; !(me = F.next()).done; )
                (me = me.value),
                    (je = ne + q(me, Ae++)),
                    (ge += K(me, $, fe, je, ae));
        else if (me === 'object')
            throw (
                (($ = String(F)),
                Error(
                    'Objects are not valid as a React child (found: ' +
                        ($ === '[object Object]'
                            ? 'object with keys {' +
                              Object.keys(F).join(', ') +
                              '}'
                            : $) +
                        '). If you meant to render a collection of children, use an array instead.'
                ))
            );
        return ge;
    }
    function le(F, $, fe) {
        if (F == null) return F;
        var ne = [],
            ae = 0;
        return (
            K(F, ne, '', '', function (me) {
                return $.call(fe, me, ae++);
            }),
            ne
        );
    }
    function ee(F) {
        if (F._status === -1) {
            var $ = F._result;
            ($ = $()),
                $.then(
                    function (fe) {
                        (F._status === 0 || F._status === -1) &&
                            ((F._status = 1), (F._result = fe));
                    },
                    function (fe) {
                        (F._status === 0 || F._status === -1) &&
                            ((F._status = 2), (F._result = fe));
                    }
                ),
                F._status === -1 && ((F._status = 0), (F._result = $));
        }
        if (F._status === 1) return F._result.default;
        throw F._result;
    }
    var de = { current: null },
        Z = { transition: null },
        se = {
            ReactCurrentDispatcher: de,
            ReactCurrentBatchConfig: Z,
            ReactCurrentOwner: L,
        };
    function J() {
        throw Error('act(...) is not supported in production builds of React.');
    }
    return (
        (Mn.Children = {
            map: le,
            forEach: function (F, $, fe) {
                le(
                    F,
                    function () {
                        $.apply(this, arguments);
                    },
                    fe
                );
            },
            count: function (F) {
                var $ = 0;
                return (
                    le(F, function () {
                        $++;
                    }),
                    $
                );
            },
            toArray: function (F) {
                return (
                    le(F, function ($) {
                        return $;
                    }) || []
                );
            },
            only: function (F) {
                if (!U(F))
                    throw Error(
                        'React.Children.only expected to receive a single React element child.'
                    );
                return F;
            },
        }),
        (Mn.Component = w),
        (Mn.Fragment = t),
        (Mn.Profiler = i),
        (Mn.PureComponent = A),
        (Mn.StrictMode = n),
        (Mn.Suspense = l),
        (Mn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = se),
        (Mn.act = J),
        (Mn.cloneElement = function (F, $, fe) {
            if (F == null)
                throw Error(
                    'React.cloneElement(...): The argument must be a React element, but you passed ' +
                        F +
                        '.'
                );
            var ne = _({}, F.props),
                ae = F.key,
                me = F.ref,
                ge = F._owner;
            if ($ != null) {
                if (
                    ($.ref !== void 0 && ((me = $.ref), (ge = L.current)),
                    $.key !== void 0 && (ae = '' + $.key),
                    F.type && F.type.defaultProps)
                )
                    var Ae = F.type.defaultProps;
                for (je in $)
                    P.call($, je) &&
                        !D.hasOwnProperty(je) &&
                        (ne[je] =
                            $[je] === void 0 && Ae !== void 0 ? Ae[je] : $[je]);
            }
            var je = arguments.length - 2;
            if (je === 1) ne.children = fe;
            else if (1 < je) {
                Ae = Array(je);
                for (var Qe = 0; Qe < je; Qe++) Ae[Qe] = arguments[Qe + 2];
                ne.children = Ae;
            }
            return {
                $$typeof: r,
                type: F.type,
                key: ae,
                ref: me,
                props: ne,
                _owner: ge,
            };
        }),
        (Mn.createContext = function (F) {
            return (
                (F = {
                    $$typeof: o,
                    _currentValue: F,
                    _currentValue2: F,
                    _threadCount: 0,
                    Provider: null,
                    Consumer: null,
                    _defaultValue: null,
                    _globalName: null,
                }),
                (F.Provider = { $$typeof: s, _context: F }),
                (F.Consumer = F)
            );
        }),
        (Mn.createElement = O),
        (Mn.createFactory = function (F) {
            var $ = O.bind(null, F);
            return ($.type = F), $;
        }),
        (Mn.createRef = function () {
            return { current: null };
        }),
        (Mn.forwardRef = function (F) {
            return { $$typeof: a, render: F };
        }),
        (Mn.isValidElement = U),
        (Mn.lazy = function (F) {
            return {
                $$typeof: f,
                _payload: { _status: -1, _result: F },
                _init: ee,
            };
        }),
        (Mn.memo = function (F, $) {
            return { $$typeof: u, type: F, compare: $ === void 0 ? null : $ };
        }),
        (Mn.startTransition = function (F) {
            var $ = Z.transition;
            Z.transition = {};
            try {
                F();
            } finally {
                Z.transition = $;
            }
        }),
        (Mn.unstable_act = J),
        (Mn.useCallback = function (F, $) {
            return de.current.useCallback(F, $);
        }),
        (Mn.useContext = function (F) {
            return de.current.useContext(F);
        }),
        (Mn.useDebugValue = function () {}),
        (Mn.useDeferredValue = function (F) {
            return de.current.useDeferredValue(F);
        }),
        (Mn.useEffect = function (F, $) {
            return de.current.useEffect(F, $);
        }),
        (Mn.useId = function () {
            return de.current.useId();
        }),
        (Mn.useImperativeHandle = function (F, $, fe) {
            return de.current.useImperativeHandle(F, $, fe);
        }),
        (Mn.useInsertionEffect = function (F, $) {
            return de.current.useInsertionEffect(F, $);
        }),
        (Mn.useLayoutEffect = function (F, $) {
            return de.current.useLayoutEffect(F, $);
        }),
        (Mn.useMemo = function (F, $) {
            return de.current.useMemo(F, $);
        }),
        (Mn.useReducer = function (F, $, fe) {
            return de.current.useReducer(F, $, fe);
        }),
        (Mn.useRef = function (F) {
            return de.current.useRef(F);
        }),
        (Mn.useState = function (F) {
            return de.current.useState(F);
        }),
        (Mn.useSyncExternalStore = function (F, $, fe) {
            return de.current.useSyncExternalStore(F, $, fe);
        }),
        (Mn.useTransition = function () {
            return de.current.useTransition();
        }),
        (Mn.version = '18.3.1'),
        Mn
    );
}
var KA;
function wx() {
    return KA || ((KA = 1), (q1.exports = VN())), q1.exports;
}
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var ZA;
function HN() {
    if (ZA) return zm;
    ZA = 1;
    var r = wx(),
        e = Symbol.for('react.element'),
        t = Symbol.for('react.fragment'),
        n = Object.prototype.hasOwnProperty,
        i =
            r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
                .ReactCurrentOwner,
        s = { key: !0, ref: !0, __self: !0, __source: !0 };
    function o(a, l, u) {
        var f,
            d = {},
            m = null,
            v = null;
        u !== void 0 && (m = '' + u),
            l.key !== void 0 && (m = '' + l.key),
            l.ref !== void 0 && (v = l.ref);
        for (f in l) n.call(l, f) && !s.hasOwnProperty(f) && (d[f] = l[f]);
        if (a && a.defaultProps)
            for (f in ((l = a.defaultProps), l))
                d[f] === void 0 && (d[f] = l[f]);
        return {
            $$typeof: e,
            type: a,
            key: m,
            ref: v,
            props: d,
            _owner: i.current,
        };
    }
    return (zm.Fragment = t), (zm.jsx = o), (zm.jsxs = o), zm;
}
var $A;
function GN() {
    return $A || (($A = 1), (Y1.exports = HN())), Y1.exports;
}
var we = GN(),
    Y = wx();
const EL = rE(Y);
var $v = {},
    K1 = { exports: {} },
    Zs = {},
    Z1 = { exports: {} },
    $1 = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var JA;
function WN() {
    return (
        JA ||
            ((JA = 1),
            (function (r) {
                function e(Z, se) {
                    var J = Z.length;
                    Z.push(se);
                    e: for (; 0 < J; ) {
                        var F = (J - 1) >>> 1,
                            $ = Z[F];
                        if (0 < i($, se)) (Z[F] = se), (Z[J] = $), (J = F);
                        else break e;
                    }
                }
                function t(Z) {
                    return Z.length === 0 ? null : Z[0];
                }
                function n(Z) {
                    if (Z.length === 0) return null;
                    var se = Z[0],
                        J = Z.pop();
                    if (J !== se) {
                        Z[0] = J;
                        e: for (
                            var F = 0, $ = Z.length, fe = $ >>> 1;
                            F < fe;

                        ) {
                            var ne = 2 * (F + 1) - 1,
                                ae = Z[ne],
                                me = ne + 1,
                                ge = Z[me];
                            if (0 > i(ae, J))
                                me < $ && 0 > i(ge, ae)
                                    ? ((Z[F] = ge), (Z[me] = J), (F = me))
                                    : ((Z[F] = ae), (Z[ne] = J), (F = ne));
                            else if (me < $ && 0 > i(ge, J))
                                (Z[F] = ge), (Z[me] = J), (F = me);
                            else break e;
                        }
                    }
                    return se;
                }
                function i(Z, se) {
                    var J = Z.sortIndex - se.sortIndex;
                    return J !== 0 ? J : Z.id - se.id;
                }
                if (
                    typeof performance == 'object' &&
                    typeof performance.now == 'function'
                ) {
                    var s = performance;
                    r.unstable_now = function () {
                        return s.now();
                    };
                } else {
                    var o = Date,
                        a = o.now();
                    r.unstable_now = function () {
                        return o.now() - a;
                    };
                }
                var l = [],
                    u = [],
                    f = 1,
                    d = null,
                    m = 3,
                    v = !1,
                    _ = !1,
                    S = !1,
                    w = typeof setTimeout == 'function' ? setTimeout : null,
                    x = typeof clearTimeout == 'function' ? clearTimeout : null,
                    A = typeof setImmediate < 'u' ? setImmediate : null;
                typeof navigator < 'u' &&
                    navigator.scheduling !== void 0 &&
                    navigator.scheduling.isInputPending !== void 0 &&
                    navigator.scheduling.isInputPending.bind(
                        navigator.scheduling
                    );
                function T(Z) {
                    for (var se = t(u); se !== null; ) {
                        if (se.callback === null) n(u);
                        else if (se.startTime <= Z)
                            n(u), (se.sortIndex = se.expirationTime), e(l, se);
                        else break;
                        se = t(u);
                    }
                }
                function b(Z) {
                    if (((S = !1), T(Z), !_))
                        if (t(l) !== null) (_ = !0), ee(P);
                        else {
                            var se = t(u);
                            se !== null && de(b, se.startTime - Z);
                        }
                }
                function P(Z, se) {
                    (_ = !1), S && ((S = !1), x(O), (O = -1)), (v = !0);
                    var J = m;
                    try {
                        for (
                            T(se), d = t(l);
                            d !== null &&
                            (!(d.expirationTime > se) || (Z && !H()));

                        ) {
                            var F = d.callback;
                            if (typeof F == 'function') {
                                (d.callback = null), (m = d.priorityLevel);
                                var $ = F(d.expirationTime <= se);
                                (se = r.unstable_now()),
                                    typeof $ == 'function'
                                        ? (d.callback = $)
                                        : d === t(l) && n(l),
                                    T(se);
                            } else n(l);
                            d = t(l);
                        }
                        if (d !== null) var fe = !0;
                        else {
                            var ne = t(u);
                            ne !== null && de(b, ne.startTime - se), (fe = !1);
                        }
                        return fe;
                    } finally {
                        (d = null), (m = J), (v = !1);
                    }
                }
                var L = !1,
                    D = null,
                    O = -1,
                    I = 5,
                    U = -1;
                function H() {
                    return !(r.unstable_now() - U < I);
                }
                function W() {
                    if (D !== null) {
                        var Z = r.unstable_now();
                        U = Z;
                        var se = !0;
                        try {
                            se = D(!0, Z);
                        } finally {
                            se ? q() : ((L = !1), (D = null));
                        }
                    } else L = !1;
                }
                var q;
                if (typeof A == 'function')
                    q = function () {
                        A(W);
                    };
                else if (typeof MessageChannel < 'u') {
                    var K = new MessageChannel(),
                        le = K.port2;
                    (K.port1.onmessage = W),
                        (q = function () {
                            le.postMessage(null);
                        });
                } else
                    q = function () {
                        w(W, 0);
                    };
                function ee(Z) {
                    (D = Z), L || ((L = !0), q());
                }
                function de(Z, se) {
                    O = w(function () {
                        Z(r.unstable_now());
                    }, se);
                }
                (r.unstable_IdlePriority = 5),
                    (r.unstable_ImmediatePriority = 1),
                    (r.unstable_LowPriority = 4),
                    (r.unstable_NormalPriority = 3),
                    (r.unstable_Profiling = null),
                    (r.unstable_UserBlockingPriority = 2),
                    (r.unstable_cancelCallback = function (Z) {
                        Z.callback = null;
                    }),
                    (r.unstable_continueExecution = function () {
                        _ || v || ((_ = !0), ee(P));
                    }),
                    (r.unstable_forceFrameRate = function (Z) {
                        0 > Z || 125 < Z
                            ? console.error(
                                  'forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported'
                              )
                            : (I = 0 < Z ? Math.floor(1e3 / Z) : 5);
                    }),
                    (r.unstable_getCurrentPriorityLevel = function () {
                        return m;
                    }),
                    (r.unstable_getFirstCallbackNode = function () {
                        return t(l);
                    }),
                    (r.unstable_next = function (Z) {
                        switch (m) {
                            case 1:
                            case 2:
                            case 3:
                                var se = 3;
                                break;
                            default:
                                se = m;
                        }
                        var J = m;
                        m = se;
                        try {
                            return Z();
                        } finally {
                            m = J;
                        }
                    }),
                    (r.unstable_pauseExecution = function () {}),
                    (r.unstable_requestPaint = function () {}),
                    (r.unstable_runWithPriority = function (Z, se) {
                        switch (Z) {
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                                break;
                            default:
                                Z = 3;
                        }
                        var J = m;
                        m = Z;
                        try {
                            return se();
                        } finally {
                            m = J;
                        }
                    }),
                    (r.unstable_scheduleCallback = function (Z, se, J) {
                        var F = r.unstable_now();
                        switch (
                            (typeof J == 'object' && J !== null
                                ? ((J = J.delay),
                                  (J =
                                      typeof J == 'number' && 0 < J
                                          ? F + J
                                          : F))
                                : (J = F),
                            Z)
                        ) {
                            case 1:
                                var $ = -1;
                                break;
                            case 2:
                                $ = 250;
                                break;
                            case 5:
                                $ = 1073741823;
                                break;
                            case 4:
                                $ = 1e4;
                                break;
                            default:
                                $ = 5e3;
                        }
                        return (
                            ($ = J + $),
                            (Z = {
                                id: f++,
                                callback: se,
                                priorityLevel: Z,
                                startTime: J,
                                expirationTime: $,
                                sortIndex: -1,
                            }),
                            J > F
                                ? ((Z.sortIndex = J),
                                  e(u, Z),
                                  t(l) === null &&
                                      Z === t(u) &&
                                      (S ? (x(O), (O = -1)) : (S = !0),
                                      de(b, J - F)))
                                : ((Z.sortIndex = $),
                                  e(l, Z),
                                  _ || v || ((_ = !0), ee(P))),
                            Z
                        );
                    }),
                    (r.unstable_shouldYield = H),
                    (r.unstable_wrapCallback = function (Z) {
                        var se = m;
                        return function () {
                            var J = m;
                            m = se;
                            try {
                                return Z.apply(this, arguments);
                            } finally {
                                m = J;
                            }
                        };
                    });
            })($1)),
        $1
    );
}
var QA;
function jN() {
    return QA || ((QA = 1), (Z1.exports = WN())), Z1.exports;
}
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var eb;
function XN() {
    if (eb) return Zs;
    eb = 1;
    var r = wx(),
        e = jN();
    function t(c) {
        for (
            var h =
                    'https://reactjs.org/docs/error-decoder.html?invariant=' +
                    c,
                y = 1;
            y < arguments.length;
            y++
        )
            h += '&args[]=' + encodeURIComponent(arguments[y]);
        return (
            'Minified React error #' +
            c +
            '; visit ' +
            h +
            ' for the full message or use the non-minified dev environment for full errors and additional helpful warnings.'
        );
    }
    var n = new Set(),
        i = {};
    function s(c, h) {
        o(c, h), o(c + 'Capture', h);
    }
    function o(c, h) {
        for (i[c] = h, c = 0; c < h.length; c++) n.add(h[c]);
    }
    var a = !(
            typeof window > 'u' ||
            typeof window.document > 'u' ||
            typeof window.document.createElement > 'u'
        ),
        l = Object.prototype.hasOwnProperty,
        u =
            /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
        f = {},
        d = {};
    function m(c) {
        return l.call(d, c)
            ? !0
            : l.call(f, c)
              ? !1
              : u.test(c)
                ? (d[c] = !0)
                : ((f[c] = !0), !1);
    }
    function v(c, h, y, E) {
        if (y !== null && y.type === 0) return !1;
        switch (typeof h) {
            case 'function':
            case 'symbol':
                return !0;
            case 'boolean':
                return E
                    ? !1
                    : y !== null
                      ? !y.acceptsBooleans
                      : ((c = c.toLowerCase().slice(0, 5)),
                        c !== 'data-' && c !== 'aria-');
            default:
                return !1;
        }
    }
    function _(c, h, y, E) {
        if (h === null || typeof h > 'u' || v(c, h, y, E)) return !0;
        if (E) return !1;
        if (y !== null)
            switch (y.type) {
                case 3:
                    return !h;
                case 4:
                    return h === !1;
                case 5:
                    return isNaN(h);
                case 6:
                    return isNaN(h) || 1 > h;
            }
        return !1;
    }
    function S(c, h, y, E, R, N, j) {
        (this.acceptsBooleans = h === 2 || h === 3 || h === 4),
            (this.attributeName = E),
            (this.attributeNamespace = R),
            (this.mustUseProperty = y),
            (this.propertyName = c),
            (this.type = h),
            (this.sanitizeURL = N),
            (this.removeEmptyString = j);
    }
    var w = {};
    'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style'
        .split(' ')
        .forEach(function (c) {
            w[c] = new S(c, 0, !1, c, null, !1, !1);
        }),
        [
            ['acceptCharset', 'accept-charset'],
            ['className', 'class'],
            ['htmlFor', 'for'],
            ['httpEquiv', 'http-equiv'],
        ].forEach(function (c) {
            var h = c[0];
            w[h] = new S(h, 1, !1, c[1], null, !1, !1);
        }),
        ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(
            function (c) {
                w[c] = new S(c, 2, !1, c.toLowerCase(), null, !1, !1);
            }
        ),
        [
            'autoReverse',
            'externalResourcesRequired',
            'focusable',
            'preserveAlpha',
        ].forEach(function (c) {
            w[c] = new S(c, 2, !1, c, null, !1, !1);
        }),
        'allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope'
            .split(' ')
            .forEach(function (c) {
                w[c] = new S(c, 3, !1, c.toLowerCase(), null, !1, !1);
            }),
        ['checked', 'multiple', 'muted', 'selected'].forEach(function (c) {
            w[c] = new S(c, 3, !0, c, null, !1, !1);
        }),
        ['capture', 'download'].forEach(function (c) {
            w[c] = new S(c, 4, !1, c, null, !1, !1);
        }),
        ['cols', 'rows', 'size', 'span'].forEach(function (c) {
            w[c] = new S(c, 6, !1, c, null, !1, !1);
        }),
        ['rowSpan', 'start'].forEach(function (c) {
            w[c] = new S(c, 5, !1, c.toLowerCase(), null, !1, !1);
        });
    var x = /[\-:]([a-z])/g;
    function A(c) {
        return c[1].toUpperCase();
    }
    'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height'
        .split(' ')
        .forEach(function (c) {
            var h = c.replace(x, A);
            w[h] = new S(h, 1, !1, c, null, !1, !1);
        }),
        'xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type'
            .split(' ')
            .forEach(function (c) {
                var h = c.replace(x, A);
                w[h] = new S(
                    h,
                    1,
                    !1,
                    c,
                    'http://www.w3.org/1999/xlink',
                    !1,
                    !1
                );
            }),
        ['xml:base', 'xml:lang', 'xml:space'].forEach(function (c) {
            var h = c.replace(x, A);
            w[h] = new S(
                h,
                1,
                !1,
                c,
                'http://www.w3.org/XML/1998/namespace',
                !1,
                !1
            );
        }),
        ['tabIndex', 'crossOrigin'].forEach(function (c) {
            w[c] = new S(c, 1, !1, c.toLowerCase(), null, !1, !1);
        }),
        (w.xlinkHref = new S(
            'xlinkHref',
            1,
            !1,
            'xlink:href',
            'http://www.w3.org/1999/xlink',
            !0,
            !1
        )),
        ['src', 'href', 'action', 'formAction'].forEach(function (c) {
            w[c] = new S(c, 1, !1, c.toLowerCase(), null, !0, !0);
        });
    function T(c, h, y, E) {
        var R = w.hasOwnProperty(h) ? w[h] : null;
        (R !== null
            ? R.type !== 0
            : E ||
              !(2 < h.length) ||
              (h[0] !== 'o' && h[0] !== 'O') ||
              (h[1] !== 'n' && h[1] !== 'N')) &&
            (_(h, y, R, E) && (y = null),
            E || R === null
                ? m(h) &&
                  (y === null
                      ? c.removeAttribute(h)
                      : c.setAttribute(h, '' + y))
                : R.mustUseProperty
                  ? (c[R.propertyName] =
                        y === null ? (R.type === 3 ? !1 : '') : y)
                  : ((h = R.attributeName),
                    (E = R.attributeNamespace),
                    y === null
                        ? c.removeAttribute(h)
                        : ((R = R.type),
                          (y = R === 3 || (R === 4 && y === !0) ? '' : '' + y),
                          E
                              ? c.setAttributeNS(E, h, y)
                              : c.setAttribute(h, y))));
    }
    var b = r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
        P = Symbol.for('react.element'),
        L = Symbol.for('react.portal'),
        D = Symbol.for('react.fragment'),
        O = Symbol.for('react.strict_mode'),
        I = Symbol.for('react.profiler'),
        U = Symbol.for('react.provider'),
        H = Symbol.for('react.context'),
        W = Symbol.for('react.forward_ref'),
        q = Symbol.for('react.suspense'),
        K = Symbol.for('react.suspense_list'),
        le = Symbol.for('react.memo'),
        ee = Symbol.for('react.lazy'),
        de = Symbol.for('react.offscreen'),
        Z = Symbol.iterator;
    function se(c) {
        return c === null || typeof c != 'object'
            ? null
            : ((c = (Z && c[Z]) || c['@@iterator']),
              typeof c == 'function' ? c : null);
    }
    var J = Object.assign,
        F;
    function $(c) {
        if (F === void 0)
            try {
                throw Error();
            } catch (y) {
                var h = y.stack.trim().match(/\n( *(at )?)/);
                F = (h && h[1]) || '';
            }
        return (
            `
` +
            F +
            c
        );
    }
    var fe = !1;
    function ne(c, h) {
        if (!c || fe) return '';
        fe = !0;
        var y = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        try {
            if (h)
                if (
                    ((h = function () {
                        throw Error();
                    }),
                    Object.defineProperty(h.prototype, 'props', {
                        set: function () {
                            throw Error();
                        },
                    }),
                    typeof Reflect == 'object' && Reflect.construct)
                ) {
                    try {
                        Reflect.construct(h, []);
                    } catch (Ge) {
                        var E = Ge;
                    }
                    Reflect.construct(c, [], h);
                } else {
                    try {
                        h.call();
                    } catch (Ge) {
                        E = Ge;
                    }
                    c.call(h.prototype);
                }
            else {
                try {
                    throw Error();
                } catch (Ge) {
                    E = Ge;
                }
                c();
            }
        } catch (Ge) {
            if (Ge && E && typeof Ge.stack == 'string') {
                for (
                    var R = Ge.stack.split(`
`),
                        N = E.stack.split(`
`),
                        j = R.length - 1,
                        he = N.length - 1;
                    1 <= j && 0 <= he && R[j] !== N[he];

                )
                    he--;
                for (; 1 <= j && 0 <= he; j--, he--)
                    if (R[j] !== N[he]) {
                        if (j !== 1 || he !== 1)
                            do
                                if ((j--, he--, 0 > he || R[j] !== N[he])) {
                                    var Se =
                                        `
` + R[j].replace(' at new ', ' at ');
                                    return (
                                        c.displayName &&
                                            Se.includes('<anonymous>') &&
                                            (Se = Se.replace(
                                                '<anonymous>',
                                                c.displayName
                                            )),
                                        Se
                                    );
                                }
                            while (1 <= j && 0 <= he);
                        break;
                    }
            }
        } finally {
            (fe = !1), (Error.prepareStackTrace = y);
        }
        return (c = c ? c.displayName || c.name : '') ? $(c) : '';
    }
    function ae(c) {
        switch (c.tag) {
            case 5:
                return $(c.type);
            case 16:
                return $('Lazy');
            case 13:
                return $('Suspense');
            case 19:
                return $('SuspenseList');
            case 0:
            case 2:
            case 15:
                return (c = ne(c.type, !1)), c;
            case 11:
                return (c = ne(c.type.render, !1)), c;
            case 1:
                return (c = ne(c.type, !0)), c;
            default:
                return '';
        }
    }
    function me(c) {
        if (c == null) return null;
        if (typeof c == 'function') return c.displayName || c.name || null;
        if (typeof c == 'string') return c;
        switch (c) {
            case D:
                return 'Fragment';
            case L:
                return 'Portal';
            case I:
                return 'Profiler';
            case O:
                return 'StrictMode';
            case q:
                return 'Suspense';
            case K:
                return 'SuspenseList';
        }
        if (typeof c == 'object')
            switch (c.$$typeof) {
                case H:
                    return (c.displayName || 'Context') + '.Consumer';
                case U:
                    return (c._context.displayName || 'Context') + '.Provider';
                case W:
                    var h = c.render;
                    return (
                        (c = c.displayName),
                        c ||
                            ((c = h.displayName || h.name || ''),
                            (c =
                                c !== ''
                                    ? 'ForwardRef(' + c + ')'
                                    : 'ForwardRef')),
                        c
                    );
                case le:
                    return (
                        (h = c.displayName || null),
                        h !== null ? h : me(c.type) || 'Memo'
                    );
                case ee:
                    (h = c._payload), (c = c._init);
                    try {
                        return me(c(h));
                    } catch {}
            }
        return null;
    }
    function ge(c) {
        var h = c.type;
        switch (c.tag) {
            case 24:
                return 'Cache';
            case 9:
                return (h.displayName || 'Context') + '.Consumer';
            case 10:
                return (h._context.displayName || 'Context') + '.Provider';
            case 18:
                return 'DehydratedFragment';
            case 11:
                return (
                    (c = h.render),
                    (c = c.displayName || c.name || ''),
                    h.displayName ||
                        (c !== '' ? 'ForwardRef(' + c + ')' : 'ForwardRef')
                );
            case 7:
                return 'Fragment';
            case 5:
                return h;
            case 4:
                return 'Portal';
            case 3:
                return 'Root';
            case 6:
                return 'Text';
            case 16:
                return me(h);
            case 8:
                return h === O ? 'StrictMode' : 'Mode';
            case 22:
                return 'Offscreen';
            case 12:
                return 'Profiler';
            case 21:
                return 'Scope';
            case 13:
                return 'Suspense';
            case 19:
                return 'SuspenseList';
            case 25:
                return 'TracingMarker';
            case 1:
            case 0:
            case 17:
            case 2:
            case 14:
            case 15:
                if (typeof h == 'function')
                    return h.displayName || h.name || null;
                if (typeof h == 'string') return h;
        }
        return null;
    }
    function Ae(c) {
        switch (typeof c) {
            case 'boolean':
            case 'number':
            case 'string':
            case 'undefined':
                return c;
            case 'object':
                return c;
            default:
                return '';
        }
    }
    function je(c) {
        var h = c.type;
        return (
            (c = c.nodeName) &&
            c.toLowerCase() === 'input' &&
            (h === 'checkbox' || h === 'radio')
        );
    }
    function Qe(c) {
        var h = je(c) ? 'checked' : 'value',
            y = Object.getOwnPropertyDescriptor(c.constructor.prototype, h),
            E = '' + c[h];
        if (
            !c.hasOwnProperty(h) &&
            typeof y < 'u' &&
            typeof y.get == 'function' &&
            typeof y.set == 'function'
        ) {
            var R = y.get,
                N = y.set;
            return (
                Object.defineProperty(c, h, {
                    configurable: !0,
                    get: function () {
                        return R.call(this);
                    },
                    set: function (j) {
                        (E = '' + j), N.call(this, j);
                    },
                }),
                Object.defineProperty(c, h, { enumerable: y.enumerable }),
                {
                    getValue: function () {
                        return E;
                    },
                    setValue: function (j) {
                        E = '' + j;
                    },
                    stopTracking: function () {
                        (c._valueTracker = null), delete c[h];
                    },
                }
            );
        }
    }
    function Ke(c) {
        c._valueTracker || (c._valueTracker = Qe(c));
    }
    function X(c) {
        if (!c) return !1;
        var h = c._valueTracker;
        if (!h) return !0;
        var y = h.getValue(),
            E = '';
        return (
            c && (E = je(c) ? (c.checked ? 'true' : 'false') : c.value),
            (c = E),
            c !== y ? (h.setValue(c), !0) : !1
        );
    }
    function He(c) {
        if (
            ((c = c || (typeof document < 'u' ? document : void 0)),
            typeof c > 'u')
        )
            return null;
        try {
            return c.activeElement || c.body;
        } catch {
            return c.body;
        }
    }
    function Fe(c, h) {
        var y = h.checked;
        return J({}, h, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: y ?? c._wrapperState.initialChecked,
        });
    }
    function We(c, h) {
        var y = h.defaultValue == null ? '' : h.defaultValue,
            E = h.checked != null ? h.checked : h.defaultChecked;
        (y = Ae(h.value != null ? h.value : y)),
            (c._wrapperState = {
                initialChecked: E,
                initialValue: y,
                controlled:
                    h.type === 'checkbox' || h.type === 'radio'
                        ? h.checked != null
                        : h.value != null,
            });
    }
    function Re(c, h) {
        (h = h.checked), h != null && T(c, 'checked', h, !1);
    }
    function st(c, h) {
        Re(c, h);
        var y = Ae(h.value),
            E = h.type;
        if (y != null)
            E === 'number'
                ? ((y === 0 && c.value === '') || c.value != y) &&
                  (c.value = '' + y)
                : c.value !== '' + y && (c.value = '' + y);
        else if (E === 'submit' || E === 'reset') {
            c.removeAttribute('value');
            return;
        }
        h.hasOwnProperty('value')
            ? Je(c, h.type, y)
            : h.hasOwnProperty('defaultValue') &&
              Je(c, h.type, Ae(h.defaultValue)),
            h.checked == null &&
                h.defaultChecked != null &&
                (c.defaultChecked = !!h.defaultChecked);
    }
    function De(c, h, y) {
        if (h.hasOwnProperty('value') || h.hasOwnProperty('defaultValue')) {
            var E = h.type;
            if (
                !(
                    (E !== 'submit' && E !== 'reset') ||
                    (h.value !== void 0 && h.value !== null)
                )
            )
                return;
            (h = '' + c._wrapperState.initialValue),
                y || h === c.value || (c.value = h),
                (c.defaultValue = h);
        }
        (y = c.name),
            y !== '' && (c.name = ''),
            (c.defaultChecked = !!c._wrapperState.initialChecked),
            y !== '' && (c.name = y);
    }
    function Je(c, h, y) {
        (h !== 'number' || He(c.ownerDocument) !== c) &&
            (y == null
                ? (c.defaultValue = '' + c._wrapperState.initialValue)
                : c.defaultValue !== '' + y && (c.defaultValue = '' + y));
    }
    var te = Array.isArray;
    function V(c, h, y, E) {
        if (((c = c.options), h)) {
            h = {};
            for (var R = 0; R < y.length; R++) h['$' + y[R]] = !0;
            for (y = 0; y < c.length; y++)
                (R = h.hasOwnProperty('$' + c[y].value)),
                    c[y].selected !== R && (c[y].selected = R),
                    R && E && (c[y].defaultSelected = !0);
        } else {
            for (y = '' + Ae(y), h = null, R = 0; R < c.length; R++) {
                if (c[R].value === y) {
                    (c[R].selected = !0), E && (c[R].defaultSelected = !0);
                    return;
                }
                h !== null || c[R].disabled || (h = c[R]);
            }
            h !== null && (h.selected = !0);
        }
    }
    function Me(c, h) {
        if (h.dangerouslySetInnerHTML != null) throw Error(t(91));
        return J({}, h, {
            value: void 0,
            defaultValue: void 0,
            children: '' + c._wrapperState.initialValue,
        });
    }
    function Le(c, h) {
        var y = h.value;
        if (y == null) {
            if (((y = h.children), (h = h.defaultValue), y != null)) {
                if (h != null) throw Error(t(92));
                if (te(y)) {
                    if (1 < y.length) throw Error(t(93));
                    y = y[0];
                }
                h = y;
            }
            h == null && (h = ''), (y = h);
        }
        c._wrapperState = { initialValue: Ae(y) };
    }
    function Ie(c, h) {
        var y = Ae(h.value),
            E = Ae(h.defaultValue);
        y != null &&
            ((y = '' + y),
            y !== c.value && (c.value = y),
            h.defaultValue == null &&
                c.defaultValue !== y &&
                (c.defaultValue = y)),
            E != null && (c.defaultValue = '' + E);
    }
    function Ce(c) {
        var h = c.textContent;
        h === c._wrapperState.initialValue &&
            h !== '' &&
            h !== null &&
            (c.value = h);
    }
    function gt(c) {
        switch (c) {
            case 'svg':
                return 'http://www.w3.org/2000/svg';
            case 'math':
                return 'http://www.w3.org/1998/Math/MathML';
            default:
                return 'http://www.w3.org/1999/xhtml';
        }
    }
    function Xe(c, h) {
        return c == null || c === 'http://www.w3.org/1999/xhtml'
            ? gt(h)
            : c === 'http://www.w3.org/2000/svg' && h === 'foreignObject'
              ? 'http://www.w3.org/1999/xhtml'
              : c;
    }
    var Ze,
        at = (function (c) {
            return typeof MSApp < 'u' && MSApp.execUnsafeLocalFunction
                ? function (h, y, E, R) {
                      MSApp.execUnsafeLocalFunction(function () {
                          return c(h, y, E, R);
                      });
                  }
                : c;
        })(function (c, h) {
            if (
                c.namespaceURI !== 'http://www.w3.org/2000/svg' ||
                'innerHTML' in c
            )
                c.innerHTML = h;
            else {
                for (
                    Ze = Ze || document.createElement('div'),
                        Ze.innerHTML =
                            '<svg>' + h.valueOf().toString() + '</svg>',
                        h = Ze.firstChild;
                    c.firstChild;

                )
                    c.removeChild(c.firstChild);
                for (; h.firstChild; ) c.appendChild(h.firstChild);
            }
        });
    function Ye(c, h) {
        if (h) {
            var y = c.firstChild;
            if (y && y === c.lastChild && y.nodeType === 3) {
                y.nodeValue = h;
                return;
            }
        }
        c.textContent = h;
    }
    var ot = {
            animationIterationCount: !0,
            aspectRatio: !0,
            borderImageOutset: !0,
            borderImageSlice: !0,
            borderImageWidth: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            columns: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            gridArea: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowSpan: !0,
            gridRowStart: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnSpan: !0,
            gridColumnStart: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeDasharray: !0,
            strokeDashoffset: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0,
            strokeWidth: !0,
        },
        kt = ['Webkit', 'ms', 'Moz', 'O'];
    Object.keys(ot).forEach(function (c) {
        kt.forEach(function (h) {
            (h = h + c.charAt(0).toUpperCase() + c.substring(1)),
                (ot[h] = ot[c]);
        });
    });
    function pt(c, h, y) {
        return h == null || typeof h == 'boolean' || h === ''
            ? ''
            : y ||
                typeof h != 'number' ||
                h === 0 ||
                (ot.hasOwnProperty(c) && ot[c])
              ? ('' + h).trim()
              : h + 'px';
    }
    function et(c, h) {
        c = c.style;
        for (var y in h)
            if (h.hasOwnProperty(y)) {
                var E = y.indexOf('--') === 0,
                    R = pt(y, h[y], E);
                y === 'float' && (y = 'cssFloat'),
                    E ? c.setProperty(y, R) : (c[y] = R);
            }
    }
    var lt = J(
        { menuitem: !0 },
        {
            area: !0,
            base: !0,
            br: !0,
            col: !0,
            embed: !0,
            hr: !0,
            img: !0,
            input: !0,
            keygen: !0,
            link: !0,
            meta: !0,
            param: !0,
            source: !0,
            track: !0,
            wbr: !0,
        }
    );
    function Ct(c, h) {
        if (h) {
            if (
                lt[c] &&
                (h.children != null || h.dangerouslySetInnerHTML != null)
            )
                throw Error(t(137, c));
            if (h.dangerouslySetInnerHTML != null) {
                if (h.children != null) throw Error(t(60));
                if (
                    typeof h.dangerouslySetInnerHTML != 'object' ||
                    !('__html' in h.dangerouslySetInnerHTML)
                )
                    throw Error(t(61));
            }
            if (h.style != null && typeof h.style != 'object')
                throw Error(t(62));
        }
    }
    function Dt(c, h) {
        if (c.indexOf('-') === -1) return typeof h.is == 'string';
        switch (c) {
            case 'annotation-xml':
            case 'color-profile':
            case 'font-face':
            case 'font-face-src':
            case 'font-face-uri':
            case 'font-face-format':
            case 'font-face-name':
            case 'missing-glyph':
                return !1;
            default:
                return !0;
        }
    }
    var _e = null;
    function nt(c) {
        return (
            (c = c.target || c.srcElement || window),
            c.correspondingUseElement && (c = c.correspondingUseElement),
            c.nodeType === 3 ? c.parentNode : c
        );
    }
    var ve = null,
        Be = null,
        ht = null;
    function wt(c) {
        if ((c = ga(c))) {
            if (typeof ve != 'function') throw Error(t(280));
            var h = c.stateNode;
            h && ((h = Zh(h)), ve(c.stateNode, c.type, h));
        }
    }
    function Et(c) {
        Be ? (ht ? ht.push(c) : (ht = [c])) : (Be = c);
    }
    function Qt() {
        if (Be) {
            var c = Be,
                h = ht;
            if (((ht = Be = null), wt(c), h))
                for (c = 0; c < h.length; c++) wt(h[c]);
        }
    }
    function en(c, h) {
        return c(h);
    }
    function Mt() {}
    var hn = !1;
    function Pn(c, h, y) {
        if (hn) return c(h, y);
        hn = !0;
        try {
            return en(c, h, y);
        } finally {
            (hn = !1), (Be !== null || ht !== null) && (Mt(), Qt());
        }
    }
    function jn(c, h) {
        var y = c.stateNode;
        if (y === null) return null;
        var E = Zh(y);
        if (E === null) return null;
        y = E[h];
        e: switch (h) {
            case 'onClick':
            case 'onClickCapture':
            case 'onDoubleClick':
            case 'onDoubleClickCapture':
            case 'onMouseDown':
            case 'onMouseDownCapture':
            case 'onMouseMove':
            case 'onMouseMoveCapture':
            case 'onMouseUp':
            case 'onMouseUpCapture':
            case 'onMouseEnter':
                (E = !E.disabled) ||
                    ((c = c.type),
                    (E = !(
                        c === 'button' ||
                        c === 'input' ||
                        c === 'select' ||
                        c === 'textarea'
                    ))),
                    (c = !E);
                break e;
            default:
                c = !1;
        }
        if (c) return null;
        if (y && typeof y != 'function') throw Error(t(231, h, typeof y));
        return y;
    }
    var An = !1;
    if (a)
        try {
            var di = {};
            Object.defineProperty(di, 'passive', {
                get: function () {
                    An = !0;
                },
            }),
                window.addEventListener('test', di, di),
                window.removeEventListener('test', di, di);
        } catch {
            An = !1;
        }
    function Gi(c, h, y, E, R, N, j, he, Se) {
        var Ge = Array.prototype.slice.call(arguments, 3);
        try {
            h.apply(y, Ge);
        } catch (ft) {
            this.onError(ft);
        }
    }
    var _i = !1,
        si = null,
        Qn = !1,
        Xt = null,
        pi = {
            onError: function (c) {
                (_i = !0), (si = c);
            },
        };
    function $r(c, h, y, E, R, N, j, he, Se) {
        (_i = !1), (si = null), Gi.apply(pi, arguments);
    }
    function G(c, h, y, E, R, N, j, he, Se) {
        if (($r.apply(this, arguments), _i)) {
            if (_i) {
                var Ge = si;
                (_i = !1), (si = null);
            } else throw Error(t(198));
            Qn || ((Qn = !0), (Xt = Ge));
        }
    }
    function Q(c) {
        var h = c,
            y = c;
        if (c.alternate) for (; h.return; ) h = h.return;
        else {
            c = h;
            do
                (h = c),
                    (h.flags & 4098) !== 0 && (y = h.return),
                    (c = h.return);
            while (c);
        }
        return h.tag === 3 ? y : null;
    }
    function xe(c) {
        if (c.tag === 13) {
            var h = c.memoizedState;
            if (
                (h === null &&
                    ((c = c.alternate), c !== null && (h = c.memoizedState)),
                h !== null)
            )
                return h.dehydrated;
        }
        return null;
    }
    function z(c) {
        if (Q(c) !== c) throw Error(t(188));
    }
    function ie(c) {
        var h = c.alternate;
        if (!h) {
            if (((h = Q(c)), h === null)) throw Error(t(188));
            return h !== c ? null : c;
        }
        for (var y = c, E = h; ; ) {
            var R = y.return;
            if (R === null) break;
            var N = R.alternate;
            if (N === null) {
                if (((E = R.return), E !== null)) {
                    y = E;
                    continue;
                }
                break;
            }
            if (R.child === N.child) {
                for (N = R.child; N; ) {
                    if (N === y) return z(R), c;
                    if (N === E) return z(R), h;
                    N = N.sibling;
                }
                throw Error(t(188));
            }
            if (y.return !== E.return) (y = R), (E = N);
            else {
                for (var j = !1, he = R.child; he; ) {
                    if (he === y) {
                        (j = !0), (y = R), (E = N);
                        break;
                    }
                    if (he === E) {
                        (j = !0), (E = R), (y = N);
                        break;
                    }
                    he = he.sibling;
                }
                if (!j) {
                    for (he = N.child; he; ) {
                        if (he === y) {
                            (j = !0), (y = N), (E = R);
                            break;
                        }
                        if (he === E) {
                            (j = !0), (E = N), (y = R);
                            break;
                        }
                        he = he.sibling;
                    }
                    if (!j) throw Error(t(189));
                }
            }
            if (y.alternate !== E) throw Error(t(190));
        }
        if (y.tag !== 3) throw Error(t(188));
        return y.stateNode.current === y ? c : h;
    }
    function oe(c) {
        return (c = ie(c)), c !== null ? pe(c) : null;
    }
    function pe(c) {
        if (c.tag === 5 || c.tag === 6) return c;
        for (c = c.child; c !== null; ) {
            var h = pe(c);
            if (h !== null) return h;
            c = c.sibling;
        }
        return null;
    }
    var ue = e.unstable_scheduleCallback,
        Pe = e.unstable_cancelCallback,
        Ue = e.unstable_shouldYield,
        Ve = e.unstable_requestPaint,
        ye = e.unstable_now,
        _t = e.unstable_getCurrentPriorityLevel,
        rt = e.unstable_ImmediatePriority,
        it = e.unstable_UserBlockingPriority,
        xt = e.unstable_NormalPriority,
        Pt = e.unstable_LowPriority,
        Nt = e.unstable_IdlePriority,
        Wt = null,
        mt = null;
    function ut(c) {
        if (mt && typeof mt.onCommitFiberRoot == 'function')
            try {
                mt.onCommitFiberRoot(
                    Wt,
                    c,
                    void 0,
                    (c.current.flags & 128) === 128
                );
            } catch {}
    }
    var Lt = Math.clz32 ? Math.clz32 : wn,
        Bt = Math.log,
        jt = Math.LN2;
    function wn(c) {
        return (c >>>= 0), c === 0 ? 32 : (31 - ((Bt(c) / jt) | 0)) | 0;
    }
    var yn = 64,
        Dn = 4194304;
    function $t(c) {
        switch (c & -c) {
            case 1:
                return 1;
            case 2:
                return 2;
            case 4:
                return 4;
            case 8:
                return 8;
            case 16:
                return 16;
            case 32:
                return 32;
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
                return c & 4194240;
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
            case 67108864:
                return c & 130023424;
            case 134217728:
                return 134217728;
            case 268435456:
                return 268435456;
            case 536870912:
                return 536870912;
            case 1073741824:
                return 1073741824;
            default:
                return c;
        }
    }
    function tn(c, h) {
        var y = c.pendingLanes;
        if (y === 0) return 0;
        var E = 0,
            R = c.suspendedLanes,
            N = c.pingedLanes,
            j = y & 268435455;
        if (j !== 0) {
            var he = j & ~R;
            he !== 0 ? (E = $t(he)) : ((N &= j), N !== 0 && (E = $t(N)));
        } else (j = y & ~R), j !== 0 ? (E = $t(j)) : N !== 0 && (E = $t(N));
        if (E === 0) return 0;
        if (
            h !== 0 &&
            h !== E &&
            (h & R) === 0 &&
            ((R = E & -E),
            (N = h & -h),
            R >= N || (R === 16 && (N & 4194240) !== 0))
        )
            return h;
        if (((E & 4) !== 0 && (E |= y & 16), (h = c.entangledLanes), h !== 0))
            for (c = c.entanglements, h &= E; 0 < h; )
                (y = 31 - Lt(h)), (R = 1 << y), (E |= c[y]), (h &= ~R);
        return E;
    }
    function Xn(c, h) {
        switch (c) {
            case 1:
            case 2:
            case 4:
                return h + 250;
            case 8:
            case 16:
            case 32:
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
                return h + 5e3;
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
            case 67108864:
                return -1;
            case 134217728:
            case 268435456:
            case 536870912:
            case 1073741824:
                return -1;
            default:
                return -1;
        }
    }
    function nn(c, h) {
        for (
            var y = c.suspendedLanes,
                E = c.pingedLanes,
                R = c.expirationTimes,
                N = c.pendingLanes;
            0 < N;

        ) {
            var j = 31 - Lt(N),
                he = 1 << j,
                Se = R[j];
            Se === -1
                ? ((he & y) === 0 || (he & E) !== 0) && (R[j] = Xn(he, h))
                : Se <= h && (c.expiredLanes |= he),
                (N &= ~he);
        }
    }
    function Jt(c) {
        return (
            (c = c.pendingLanes & -1073741825),
            c !== 0 ? c : c & 1073741824 ? 1073741824 : 0
        );
    }
    function Bn() {
        var c = yn;
        return (yn <<= 1), (yn & 4194240) === 0 && (yn = 64), c;
    }
    function Wi(c) {
        for (var h = [], y = 0; 31 > y; y++) h.push(c);
        return h;
    }
    function ei(c, h, y) {
        (c.pendingLanes |= h),
            h !== 536870912 && ((c.suspendedLanes = 0), (c.pingedLanes = 0)),
            (c = c.eventTimes),
            (h = 31 - Lt(h)),
            (c[h] = y);
    }
    function ys(c, h) {
        var y = c.pendingLanes & ~h;
        (c.pendingLanes = h),
            (c.suspendedLanes = 0),
            (c.pingedLanes = 0),
            (c.expiredLanes &= h),
            (c.mutableReadLanes &= h),
            (c.entangledLanes &= h),
            (h = c.entanglements);
        var E = c.eventTimes;
        for (c = c.expirationTimes; 0 < y; ) {
            var R = 31 - Lt(y),
                N = 1 << R;
            (h[R] = 0), (E[R] = -1), (c[R] = -1), (y &= ~N);
        }
    }
    function ao(c, h) {
        var y = (c.entangledLanes |= h);
        for (c = c.entanglements; y; ) {
            var E = 31 - Lt(y),
                R = 1 << E;
            (R & h) | (c[E] & h) && (c[E] |= h), (y &= ~R);
        }
    }
    var Sn = 0;
    function Oo(c) {
        return (
            (c &= -c),
            1 < c ? (4 < c ? ((c & 268435455) !== 0 ? 16 : 536870912) : 4) : 1
        );
    }
    var Za,
        Cu,
        Ru,
        Uo,
        Ol,
        Fs = !1,
        lo = [],
        gr = null,
        sn = null,
        Bs = null,
        _s = new Map(),
        ko = new Map(),
        zs = [],
        Th =
            'mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit'.split(
                ' '
            );
    function oi(c, h) {
        switch (c) {
            case 'focusin':
            case 'focusout':
                gr = null;
                break;
            case 'dragenter':
            case 'dragleave':
                sn = null;
                break;
            case 'mouseover':
            case 'mouseout':
                Bs = null;
                break;
            case 'pointerover':
            case 'pointerout':
                _s.delete(h.pointerId);
                break;
            case 'gotpointercapture':
            case 'lostpointercapture':
                ko.delete(h.pointerId);
        }
    }
    function uo(c, h, y, E, R, N) {
        return c === null || c.nativeEvent !== N
            ? ((c = {
                  blockedOn: h,
                  domEventName: y,
                  eventSystemFlags: E,
                  nativeEvent: N,
                  targetContainers: [R],
              }),
              h !== null && ((h = ga(h)), h !== null && Cu(h)),
              c)
            : ((c.eventSystemFlags |= E),
              (h = c.targetContainers),
              R !== null && h.indexOf(R) === -1 && h.push(R),
              c);
    }
    function Ah(c, h, y, E, R) {
        switch (h) {
            case 'focusin':
                return (gr = uo(gr, c, h, y, E, R)), !0;
            case 'dragenter':
                return (sn = uo(sn, c, h, y, E, R)), !0;
            case 'mouseover':
                return (Bs = uo(Bs, c, h, y, E, R)), !0;
            case 'pointerover':
                var N = R.pointerId;
                return _s.set(N, uo(_s.get(N) || null, c, h, y, E, R)), !0;
            case 'gotpointercapture':
                return (
                    (N = R.pointerId),
                    ko.set(N, uo(ko.get(N) || null, c, h, y, E, R)),
                    !0
                );
        }
        return !1;
    }
    function Rr(c) {
        var h = ll(c.target);
        if (h !== null) {
            var y = Q(h);
            if (y !== null) {
                if (((h = y.tag), h === 13)) {
                    if (((h = xe(y)), h !== null)) {
                        (c.blockedOn = h),
                            Ol(c.priority, function () {
                                Ru(y);
                            });
                        return;
                    }
                } else if (
                    h === 3 &&
                    y.stateNode.current.memoizedState.isDehydrated
                ) {
                    c.blockedOn =
                        y.tag === 3 ? y.stateNode.containerInfo : null;
                    return;
                }
            }
        }
        c.blockedOn = null;
    }
    function $a(c) {
        if (c.blockedOn !== null) return !1;
        for (var h = c.targetContainers; 0 < h.length; ) {
            var y = Pr(c.domEventName, c.eventSystemFlags, h[0], c.nativeEvent);
            if (y === null) {
                y = c.nativeEvent;
                var E = new y.constructor(y.type, y);
                (_e = E), y.target.dispatchEvent(E), (_e = null);
            } else
                return (h = ga(y)), h !== null && Cu(h), (c.blockedOn = y), !1;
            h.shift();
        }
        return !0;
    }
    function Ja(c, h, y) {
        $a(c) && y.delete(h);
    }
    function xs() {
        (Fs = !1),
            gr !== null && $a(gr) && (gr = null),
            sn !== null && $a(sn) && (sn = null),
            Bs !== null && $a(Bs) && (Bs = null),
            _s.forEach(Ja),
            ko.forEach(Ja);
    }
    function sa(c, h) {
        c.blockedOn === h &&
            ((c.blockedOn = null),
            Fs ||
                ((Fs = !0),
                e.unstable_scheduleCallback(e.unstable_NormalPriority, xs)));
    }
    function Qa(c) {
        function h(R) {
            return sa(R, c);
        }
        if (0 < lo.length) {
            sa(lo[0], c);
            for (var y = 1; y < lo.length; y++) {
                var E = lo[y];
                E.blockedOn === c && (E.blockedOn = null);
            }
        }
        for (
            gr !== null && sa(gr, c),
                sn !== null && sa(sn, c),
                Bs !== null && sa(Bs, c),
                _s.forEach(h),
                ko.forEach(h),
                y = 0;
            y < zs.length;
            y++
        )
            (E = zs[y]), E.blockedOn === c && (E.blockedOn = null);
        for (; 0 < zs.length && ((y = zs[0]), y.blockedOn === null); )
            Rr(y), y.blockedOn === null && zs.shift();
    }
    var tr = b.ReactCurrentBatchConfig,
        nr = !0;
    function No(c, h, y, E) {
        var R = Sn,
            N = tr.transition;
        tr.transition = null;
        try {
            (Sn = 1), Ul(c, h, y, E);
        } finally {
            (Sn = R), (tr.transition = N);
        }
    }
    function Vs(c, h, y, E) {
        var R = Sn,
            N = tr.transition;
        tr.transition = null;
        try {
            (Sn = 4), Ul(c, h, y, E);
        } finally {
            (Sn = R), (tr.transition = N);
        }
    }
    function Ul(c, h, y, E) {
        if (nr) {
            var R = Pr(c, h, y, E);
            if (R === null) Wh(c, h, E, el, y), oi(c, E);
            else if (Ah(R, c, h, y, E)) E.stopPropagation();
            else if ((oi(c, E), h & 4 && -1 < Th.indexOf(c))) {
                for (; R !== null; ) {
                    var N = ga(R);
                    if (
                        (N !== null && Za(N),
                        (N = Pr(c, h, y, E)),
                        N === null && Wh(c, h, E, el, y),
                        N === R)
                    )
                        break;
                    R = N;
                }
                R !== null && E.stopPropagation();
            } else Wh(c, h, E, null, y);
        }
    }
    var el = null;
    function Pr(c, h, y, E) {
        if (((el = null), (c = nt(E)), (c = ll(c)), c !== null))
            if (((h = Q(c)), h === null)) c = null;
            else if (((y = h.tag), y === 13)) {
                if (((c = xe(h)), c !== null)) return c;
                c = null;
            } else if (y === 3) {
                if (h.stateNode.current.memoizedState.isDehydrated)
                    return h.tag === 3 ? h.stateNode.containerInfo : null;
                c = null;
            } else h !== c && (c = null);
        return (el = c), null;
    }
    function tl(c) {
        switch (c) {
            case 'cancel':
            case 'click':
            case 'close':
            case 'contextmenu':
            case 'copy':
            case 'cut':
            case 'auxclick':
            case 'dblclick':
            case 'dragend':
            case 'dragstart':
            case 'drop':
            case 'focusin':
            case 'focusout':
            case 'input':
            case 'invalid':
            case 'keydown':
            case 'keypress':
            case 'keyup':
            case 'mousedown':
            case 'mouseup':
            case 'paste':
            case 'pause':
            case 'play':
            case 'pointercancel':
            case 'pointerdown':
            case 'pointerup':
            case 'ratechange':
            case 'reset':
            case 'resize':
            case 'seeked':
            case 'submit':
            case 'touchcancel':
            case 'touchend':
            case 'touchstart':
            case 'volumechange':
            case 'change':
            case 'selectionchange':
            case 'textInput':
            case 'compositionstart':
            case 'compositionend':
            case 'compositionupdate':
            case 'beforeblur':
            case 'afterblur':
            case 'beforeinput':
            case 'blur':
            case 'fullscreenchange':
            case 'focus':
            case 'hashchange':
            case 'popstate':
            case 'select':
            case 'selectstart':
                return 1;
            case 'drag':
            case 'dragenter':
            case 'dragexit':
            case 'dragleave':
            case 'dragover':
            case 'mousemove':
            case 'mouseout':
            case 'mouseover':
            case 'pointermove':
            case 'pointerout':
            case 'pointerover':
            case 'scroll':
            case 'toggle':
            case 'touchmove':
            case 'wheel':
            case 'mouseenter':
            case 'mouseleave':
            case 'pointerenter':
            case 'pointerleave':
                return 4;
            case 'message':
                switch (_t()) {
                    case rt:
                        return 1;
                    case it:
                        return 4;
                    case xt:
                    case Pt:
                        return 16;
                    case Nt:
                        return 536870912;
                    default:
                        return 16;
                }
            default:
                return 16;
        }
    }
    var Jr = null,
        oa = null,
        ir = null;
    function ji() {
        if (ir) return ir;
        var c,
            h = oa,
            y = h.length,
            E,
            R = 'value' in Jr ? Jr.value : Jr.textContent,
            N = R.length;
        for (c = 0; c < y && h[c] === R[c]; c++);
        var j = y - c;
        for (E = 1; E <= j && h[y - E] === R[N - E]; E++);
        return (ir = R.slice(c, 1 < E ? 1 - E : void 0));
    }
    function aa(c) {
        var h = c.keyCode;
        return (
            'charCode' in c
                ? ((c = c.charCode), c === 0 && h === 13 && (c = 13))
                : (c = h),
            c === 10 && (c = 13),
            32 <= c || c === 13 ? c : 0
        );
    }
    function Qr() {
        return !0;
    }
    function la() {
        return !1;
    }
    function rr(c) {
        function h(y, E, R, N, j) {
            (this._reactName = y),
                (this._targetInst = R),
                (this.type = E),
                (this.nativeEvent = N),
                (this.target = j),
                (this.currentTarget = null);
            for (var he in c)
                c.hasOwnProperty(he) &&
                    ((y = c[he]), (this[he] = y ? y(N) : N[he]));
            return (
                (this.isDefaultPrevented = (
                    N.defaultPrevented != null
                        ? N.defaultPrevented
                        : N.returnValue === !1
                )
                    ? Qr
                    : la),
                (this.isPropagationStopped = la),
                this
            );
        }
        return (
            J(h.prototype, {
                preventDefault: function () {
                    this.defaultPrevented = !0;
                    var y = this.nativeEvent;
                    y &&
                        (y.preventDefault
                            ? y.preventDefault()
                            : typeof y.returnValue != 'unknown' &&
                              (y.returnValue = !1),
                        (this.isDefaultPrevented = Qr));
                },
                stopPropagation: function () {
                    var y = this.nativeEvent;
                    y &&
                        (y.stopPropagation
                            ? y.stopPropagation()
                            : typeof y.cancelBubble != 'unknown' &&
                              (y.cancelBubble = !0),
                        (this.isPropagationStopped = Qr));
                },
                persist: function () {},
                isPersistent: Qr,
            }),
            h
        );
    }
    var ua = {
            eventPhase: 0,
            bubbles: 0,
            cancelable: 0,
            timeStamp: function (c) {
                return c.timeStamp || Date.now();
            },
            defaultPrevented: 0,
            isTrusted: 0,
        },
        Oi = rr(ua),
        Xi = J({}, ua, { view: 0, detail: 0 }),
        Ti = rr(Xi),
        mi,
        zr,
        Hs,
        Pu = J({}, Xi, {
            screenX: 0,
            screenY: 0,
            clientX: 0,
            clientY: 0,
            pageX: 0,
            pageY: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            getModifierState: il,
            button: 0,
            buttons: 0,
            relatedTarget: function (c) {
                return c.relatedTarget === void 0
                    ? c.fromElement === c.srcElement
                        ? c.toElement
                        : c.fromElement
                    : c.relatedTarget;
            },
            movementX: function (c) {
                return 'movementX' in c
                    ? c.movementX
                    : (c !== Hs &&
                          (Hs && c.type === 'mousemove'
                              ? ((mi = c.screenX - Hs.screenX),
                                (zr = c.screenY - Hs.screenY))
                              : (zr = mi = 0),
                          (Hs = c)),
                      mi);
            },
            movementY: function (c) {
                return 'movementY' in c ? c.movementY : zr;
            },
        }),
        Kp = rr(Pu),
        ca = J({}, Pu, { dataTransfer: 0 }),
        nl = rr(ca),
        bh = J({}, Xi, { relatedTarget: 0 }),
        Ch = rr(bh),
        Rh = J({}, ua, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
        av = rr(Rh),
        lv = J({}, ua, {
            clipboardData: function (c) {
                return 'clipboardData' in c
                    ? c.clipboardData
                    : window.clipboardData;
            },
        }),
        Zp = rr(lv),
        Ph = J({}, ua, { data: 0 }),
        $p = rr(Ph),
        uv = {
            Esc: 'Escape',
            Spacebar: ' ',
            Left: 'ArrowLeft',
            Up: 'ArrowUp',
            Right: 'ArrowRight',
            Down: 'ArrowDown',
            Del: 'Delete',
            Win: 'OS',
            Menu: 'ContextMenu',
            Apps: 'ContextMenu',
            Scroll: 'ScrollLock',
            MozPrintableKey: 'Unidentified',
        },
        cv = {
            8: 'Backspace',
            9: 'Tab',
            12: 'Clear',
            13: 'Enter',
            16: 'Shift',
            17: 'Control',
            18: 'Alt',
            19: 'Pause',
            20: 'CapsLock',
            27: 'Escape',
            32: ' ',
            33: 'PageUp',
            34: 'PageDown',
            35: 'End',
            36: 'Home',
            37: 'ArrowLeft',
            38: 'ArrowUp',
            39: 'ArrowRight',
            40: 'ArrowDown',
            45: 'Insert',
            46: 'Delete',
            112: 'F1',
            113: 'F2',
            114: 'F3',
            115: 'F4',
            116: 'F5',
            117: 'F6',
            118: 'F7',
            119: 'F8',
            120: 'F9',
            121: 'F10',
            122: 'F11',
            123: 'F12',
            144: 'NumLock',
            145: 'ScrollLock',
            224: 'Meta',
        },
        Jp = {
            Alt: 'altKey',
            Control: 'ctrlKey',
            Meta: 'metaKey',
            Shift: 'shiftKey',
        };
    function Lu(c) {
        var h = this.nativeEvent;
        return h.getModifierState
            ? h.getModifierState(c)
            : (c = Jp[c])
              ? !!h[c]
              : !1;
    }
    function il() {
        return Lu;
    }
    var Lh = J({}, Xi, {
            key: function (c) {
                if (c.key) {
                    var h = uv[c.key] || c.key;
                    if (h !== 'Unidentified') return h;
                }
                return c.type === 'keypress'
                    ? ((c = aa(c)), c === 13 ? 'Enter' : String.fromCharCode(c))
                    : c.type === 'keydown' || c.type === 'keyup'
                      ? cv[c.keyCode] || 'Unidentified'
                      : '';
            },
            code: 0,
            location: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            repeat: 0,
            locale: 0,
            getModifierState: il,
            charCode: function (c) {
                return c.type === 'keypress' ? aa(c) : 0;
            },
            keyCode: function (c) {
                return c.type === 'keydown' || c.type === 'keyup'
                    ? c.keyCode
                    : 0;
            },
            which: function (c) {
                return c.type === 'keypress'
                    ? aa(c)
                    : c.type === 'keydown' || c.type === 'keyup'
                      ? c.keyCode
                      : 0;
            },
        }),
        Ih = rr(Lh),
        Gs = J({}, Pu, {
            pointerId: 0,
            width: 0,
            height: 0,
            pressure: 0,
            tangentialPressure: 0,
            tiltX: 0,
            tiltY: 0,
            twist: 0,
            pointerType: 0,
            isPrimary: 0,
        }),
        Ss = rr(Gs),
        kl = J({}, Xi, {
            touches: 0,
            targetTouches: 0,
            changedTouches: 0,
            altKey: 0,
            metaKey: 0,
            ctrlKey: 0,
            shiftKey: 0,
            getModifierState: il,
        }),
        fa = rr(kl),
        ha = J({}, ua, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
        Nl = rr(ha),
        fv = J({}, Pu, {
            deltaX: function (c) {
                return 'deltaX' in c
                    ? c.deltaX
                    : 'wheelDeltaX' in c
                      ? -c.wheelDeltaX
                      : 0;
            },
            deltaY: function (c) {
                return 'deltaY' in c
                    ? c.deltaY
                    : 'wheelDeltaY' in c
                      ? -c.wheelDeltaY
                      : 'wheelDelta' in c
                        ? -c.wheelDelta
                        : 0;
            },
            deltaZ: 0,
            deltaMode: 0,
        }),
        Qp = rr(fv),
        em = [9, 13, 27, 32],
        Vr = a && 'CompositionEvent' in window,
        vr = null;
    a && 'documentMode' in document && (vr = document.documentMode);
    var ai = a && 'TextEvent' in window && !vr,
        Iu = a && (!Vr || (vr && 8 < vr && 11 >= vr)),
        Ws = ' ',
        tm = !1;
    function nm(c, h) {
        switch (c) {
            case 'keyup':
                return em.indexOf(h.keyCode) !== -1;
            case 'keydown':
                return h.keyCode !== 229;
            case 'keypress':
            case 'mousedown':
            case 'focusout':
                return !0;
            default:
                return !1;
        }
    }
    function Dh(c) {
        return (
            (c = c.detail), typeof c == 'object' && 'data' in c ? c.data : null
        );
    }
    var rl = !1;
    function hv(c, h) {
        switch (c) {
            case 'compositionend':
                return Dh(h);
            case 'keypress':
                return h.which !== 32 ? null : ((tm = !0), Ws);
            case 'textInput':
                return (c = h.data), c === Ws && tm ? null : c;
            default:
                return null;
        }
    }
    function Gc(c, h) {
        if (rl)
            return c === 'compositionend' || (!Vr && nm(c, h))
                ? ((c = ji()), (ir = oa = Jr = null), (rl = !1), c)
                : null;
        switch (c) {
            case 'paste':
                return null;
            case 'keypress':
                if (
                    !(h.ctrlKey || h.altKey || h.metaKey) ||
                    (h.ctrlKey && h.altKey)
                ) {
                    if (h.char && 1 < h.char.length) return h.char;
                    if (h.which) return String.fromCharCode(h.which);
                }
                return null;
            case 'compositionend':
                return Iu && h.locale !== 'ko' ? null : h.data;
            default:
                return null;
        }
    }
    var Du = {
        color: !0,
        date: !0,
        datetime: !0,
        'datetime-local': !0,
        email: !0,
        month: !0,
        number: !0,
        password: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0,
    };
    function Oh(c) {
        var h = c && c.nodeName && c.nodeName.toLowerCase();
        return h === 'input' ? !!Du[c.type] : h === 'textarea';
    }
    function Ou(c, h, y, E) {
        Et(E),
            (h = jh(h, 'onChange')),
            0 < h.length &&
                ((y = new Oi('onChange', 'change', null, y, E)),
                c.push({ event: y, listeners: h }));
    }
    var sl = null,
        Uu = null;
    function dv(c) {
        Bu(c, 0);
    }
    function da(c) {
        var h = Ai(c);
        if (X(h)) return c;
    }
    function pv(c, h) {
        if (c === 'change') return h;
    }
    var ku = !1;
    if (a) {
        var es;
        if (a) {
            var Fl = 'oninput' in document;
            if (!Fl) {
                var Bl = document.createElement('div');
                Bl.setAttribute('oninput', 'return;'),
                    (Fl = typeof Bl.oninput == 'function');
            }
            es = Fl;
        } else es = !1;
        ku = es && (!document.documentMode || 9 < document.documentMode);
    }
    function co() {
        sl && (sl.detachEvent('onpropertychange', Uh), (Uu = sl = null));
    }
    function Uh(c) {
        if (c.propertyName === 'value' && da(Uu)) {
            var h = [];
            Ou(h, Uu, c, nt(c)), Pn(dv, h);
        }
    }
    function Nu(c, h, y) {
        c === 'focusin'
            ? (co(), (sl = h), (Uu = y), sl.attachEvent('onpropertychange', Uh))
            : c === 'focusout' && co();
    }
    function mv(c) {
        if (c === 'selectionchange' || c === 'keyup' || c === 'keydown')
            return da(Uu);
    }
    function im(c, h) {
        if (c === 'click') return da(h);
    }
    function gi(c, h) {
        if (c === 'input' || c === 'change') return da(h);
    }
    function kh(c, h) {
        return (
            (c === h && (c !== 0 || 1 / c === 1 / h)) || (c !== c && h !== h)
        );
    }
    var ws = typeof Object.is == 'function' ? Object.is : kh;
    function zl(c, h) {
        if (ws(c, h)) return !0;
        if (
            typeof c != 'object' ||
            c === null ||
            typeof h != 'object' ||
            h === null
        )
            return !1;
        var y = Object.keys(c),
            E = Object.keys(h);
        if (y.length !== E.length) return !1;
        for (E = 0; E < y.length; E++) {
            var R = y[E];
            if (!l.call(h, R) || !ws(c[R], h[R])) return !1;
        }
        return !0;
    }
    function Wc(c) {
        for (; c && c.firstChild; ) c = c.firstChild;
        return c;
    }
    function Ms(c, h) {
        var y = Wc(c);
        c = 0;
        for (var E; y; ) {
            if (y.nodeType === 3) {
                if (((E = c + y.textContent.length), c <= h && E >= h))
                    return { node: y, offset: h - c };
                c = E;
            }
            e: {
                for (; y; ) {
                    if (y.nextSibling) {
                        y = y.nextSibling;
                        break e;
                    }
                    y = y.parentNode;
                }
                y = void 0;
            }
            y = Wc(y);
        }
    }
    function Vl(c, h) {
        return c && h
            ? c === h
                ? !0
                : c && c.nodeType === 3
                  ? !1
                  : h && h.nodeType === 3
                    ? Vl(c, h.parentNode)
                    : 'contains' in c
                      ? c.contains(h)
                      : c.compareDocumentPosition
                        ? !!(c.compareDocumentPosition(h) & 16)
                        : !1
            : !1;
    }
    function vi() {
        for (var c = window, h = He(); h instanceof c.HTMLIFrameElement; ) {
            try {
                var y = typeof h.contentWindow.location.href == 'string';
            } catch {
                y = !1;
            }
            if (y) c = h.contentWindow;
            else break;
            h = He(c.document);
        }
        return h;
    }
    function sr(c) {
        var h = c && c.nodeName && c.nodeName.toLowerCase();
        return (
            h &&
            ((h === 'input' &&
                (c.type === 'text' ||
                    c.type === 'search' ||
                    c.type === 'tel' ||
                    c.type === 'url' ||
                    c.type === 'password')) ||
                h === 'textarea' ||
                c.contentEditable === 'true')
        );
    }
    function or(c) {
        var h = vi(),
            y = c.focusedElem,
            E = c.selectionRange;
        if (
            h !== y &&
            y &&
            y.ownerDocument &&
            Vl(y.ownerDocument.documentElement, y)
        ) {
            if (E !== null && sr(y)) {
                if (
                    ((h = E.start),
                    (c = E.end),
                    c === void 0 && (c = h),
                    'selectionStart' in y)
                )
                    (y.selectionStart = h),
                        (y.selectionEnd = Math.min(c, y.value.length));
                else if (
                    ((c =
                        ((h = y.ownerDocument || document) && h.defaultView) ||
                        window),
                    c.getSelection)
                ) {
                    c = c.getSelection();
                    var R = y.textContent.length,
                        N = Math.min(E.start, R);
                    (E = E.end === void 0 ? N : Math.min(E.end, R)),
                        !c.extend && N > E && ((R = E), (E = N), (N = R)),
                        (R = Ms(y, N));
                    var j = Ms(y, E);
                    R &&
                        j &&
                        (c.rangeCount !== 1 ||
                            c.anchorNode !== R.node ||
                            c.anchorOffset !== R.offset ||
                            c.focusNode !== j.node ||
                            c.focusOffset !== j.offset) &&
                        ((h = h.createRange()),
                        h.setStart(R.node, R.offset),
                        c.removeAllRanges(),
                        N > E
                            ? (c.addRange(h), c.extend(j.node, j.offset))
                            : (h.setEnd(j.node, j.offset), c.addRange(h)));
                }
            }
            for (h = [], c = y; (c = c.parentNode); )
                c.nodeType === 1 &&
                    h.push({
                        element: c,
                        left: c.scrollLeft,
                        top: c.scrollTop,
                    });
            for (
                typeof y.focus == 'function' && y.focus(), y = 0;
                y < h.length;
                y++
            )
                (c = h[y]),
                    (c.element.scrollLeft = c.left),
                    (c.element.scrollTop = c.top);
        }
    }
    var Nh = a && 'documentMode' in document && 11 >= document.documentMode,
        Fo = null,
        Hl = null,
        jc = null,
        ar = !1;
    function Fh(c, h, y) {
        var E =
            y.window === y
                ? y.document
                : y.nodeType === 9
                  ? y
                  : y.ownerDocument;
        ar ||
            Fo == null ||
            Fo !== He(E) ||
            ((E = Fo),
            'selectionStart' in E && sr(E)
                ? (E = { start: E.selectionStart, end: E.selectionEnd })
                : ((E = (
                      (E.ownerDocument && E.ownerDocument.defaultView) ||
                      window
                  ).getSelection()),
                  (E = {
                      anchorNode: E.anchorNode,
                      anchorOffset: E.anchorOffset,
                      focusNode: E.focusNode,
                      focusOffset: E.focusOffset,
                  })),
            (jc && zl(jc, E)) ||
                ((jc = E),
                (E = jh(Hl, 'onSelect')),
                0 < E.length &&
                    ((h = new Oi('onSelect', 'select', null, h, y)),
                    c.push({ event: h, listeners: E }),
                    (h.target = Fo))));
    }
    function Fu(c, h) {
        var y = {};
        return (
            (y[c.toLowerCase()] = h.toLowerCase()),
            (y['Webkit' + c] = 'webkit' + h),
            (y['Moz' + c] = 'moz' + h),
            y
        );
    }
    var ol = {
            animationend: Fu('Animation', 'AnimationEnd'),
            animationiteration: Fu('Animation', 'AnimationIteration'),
            animationstart: Fu('Animation', 'AnimationStart'),
            transitionend: Fu('Transition', 'TransitionEnd'),
        },
        fo = {},
        ho = {};
    a &&
        ((ho = document.createElement('div').style),
        'AnimationEvent' in window ||
            (delete ol.animationend.animation,
            delete ol.animationiteration.animation,
            delete ol.animationstart.animation),
        'TransitionEvent' in window || delete ol.transitionend.transition);
    function Bo(c) {
        if (fo[c]) return fo[c];
        if (!ol[c]) return c;
        var h = ol[c],
            y;
        for (y in h) if (h.hasOwnProperty(y) && y in ho) return (fo[c] = h[y]);
        return c;
    }
    var Xc = Bo('animationend'),
        Yc = Bo('animationiteration'),
        rm = Bo('animationstart'),
        sm = Bo('transitionend'),
        om = new Map(),
        am =
            'abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel'.split(
                ' '
            );
    function pa(c, h) {
        om.set(c, h), s(h, [c]);
    }
    for (var Bh = 0; Bh < am.length; Bh++) {
        var qc = am[Bh],
            Kc = qc.toLowerCase(),
            gv = qc[0].toUpperCase() + qc.slice(1);
        pa(Kc, 'on' + gv);
    }
    pa(Xc, 'onAnimationEnd'),
        pa(Yc, 'onAnimationIteration'),
        pa(rm, 'onAnimationStart'),
        pa('dblclick', 'onDoubleClick'),
        pa('focusin', 'onFocus'),
        pa('focusout', 'onBlur'),
        pa(sm, 'onTransitionEnd'),
        o('onMouseEnter', ['mouseout', 'mouseover']),
        o('onMouseLeave', ['mouseout', 'mouseover']),
        o('onPointerEnter', ['pointerout', 'pointerover']),
        o('onPointerLeave', ['pointerout', 'pointerover']),
        s(
            'onChange',
            'change click focusin focusout input keydown keyup selectionchange'.split(
                ' '
            )
        ),
        s(
            'onSelect',
            'focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange'.split(
                ' '
            )
        ),
        s('onBeforeInput', [
            'compositionend',
            'keypress',
            'textInput',
            'paste',
        ]),
        s(
            'onCompositionEnd',
            'compositionend focusout keydown keypress keyup mousedown'.split(
                ' '
            )
        ),
        s(
            'onCompositionStart',
            'compositionstart focusout keydown keypress keyup mousedown'.split(
                ' '
            )
        ),
        s(
            'onCompositionUpdate',
            'compositionupdate focusout keydown keypress keyup mousedown'.split(
                ' '
            )
        );
    var al =
            'abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting'.split(
                ' '
            ),
        zh = new Set(
            'cancel close invalid load scroll toggle'.split(' ').concat(al)
        );
    function Vh(c, h, y) {
        var E = c.type || 'unknown-event';
        (c.currentTarget = y), G(E, h, void 0, c), (c.currentTarget = null);
    }
    function Bu(c, h) {
        h = (h & 4) !== 0;
        for (var y = 0; y < c.length; y++) {
            var E = c[y],
                R = E.event;
            E = E.listeners;
            e: {
                var N = void 0;
                if (h)
                    for (var j = E.length - 1; 0 <= j; j--) {
                        var he = E[j],
                            Se = he.instance,
                            Ge = he.currentTarget;
                        if (
                            ((he = he.listener),
                            Se !== N && R.isPropagationStopped())
                        )
                            break e;
                        Vh(R, he, Ge), (N = Se);
                    }
                else
                    for (j = 0; j < E.length; j++) {
                        if (
                            ((he = E[j]),
                            (Se = he.instance),
                            (Ge = he.currentTarget),
                            (he = he.listener),
                            Se !== N && R.isPropagationStopped())
                        )
                            break e;
                        Vh(R, he, Ge), (N = Se);
                    }
            }
        }
        if (Qn) throw ((c = Xt), (Qn = !1), (Xt = null), c);
    }
    function Kn(c, h) {
        var y = h[jl];
        y === void 0 && (y = h[jl] = new Set());
        var E = c + '__bubble';
        y.has(E) || (Gh(h, c, 2, !1), y.add(E));
    }
    function Hh(c, h, y) {
        var E = 0;
        h && (E |= 4), Gh(y, c, E, h);
    }
    var Zc = '_reactListening' + Math.random().toString(36).slice(2);
    function zu(c) {
        if (!c[Zc]) {
            (c[Zc] = !0),
                n.forEach(function (y) {
                    y !== 'selectionchange' &&
                        (zh.has(y) || Hh(y, !1, c), Hh(y, !0, c));
                });
            var h = c.nodeType === 9 ? c : c.ownerDocument;
            h === null || h[Zc] || ((h[Zc] = !0), Hh('selectionchange', !1, h));
        }
    }
    function Gh(c, h, y, E) {
        switch (tl(h)) {
            case 1:
                var R = No;
                break;
            case 4:
                R = Vs;
                break;
            default:
                R = Ul;
        }
        (y = R.bind(null, h, y, c)),
            (R = void 0),
            !An ||
                (h !== 'touchstart' && h !== 'touchmove' && h !== 'wheel') ||
                (R = !0),
            E
                ? R !== void 0
                    ? c.addEventListener(h, y, { capture: !0, passive: R })
                    : c.addEventListener(h, y, !0)
                : R !== void 0
                  ? c.addEventListener(h, y, { passive: R })
                  : c.addEventListener(h, y, !1);
    }
    function Wh(c, h, y, E, R) {
        var N = E;
        if ((h & 1) === 0 && (h & 2) === 0 && E !== null)
            e: for (;;) {
                if (E === null) return;
                var j = E.tag;
                if (j === 3 || j === 4) {
                    var he = E.stateNode.containerInfo;
                    if (he === R || (he.nodeType === 8 && he.parentNode === R))
                        break;
                    if (j === 4)
                        for (j = E.return; j !== null; ) {
                            var Se = j.tag;
                            if (
                                (Se === 3 || Se === 4) &&
                                ((Se = j.stateNode.containerInfo),
                                Se === R ||
                                    (Se.nodeType === 8 && Se.parentNode === R))
                            )
                                return;
                            j = j.return;
                        }
                    for (; he !== null; ) {
                        if (((j = ll(he)), j === null)) return;
                        if (((Se = j.tag), Se === 5 || Se === 6)) {
                            E = N = j;
                            continue e;
                        }
                        he = he.parentNode;
                    }
                }
                E = E.return;
            }
        Pn(function () {
            var Ge = N,
                ft = nt(y),
                dt = [];
            e: {
                var ct = om.get(c);
                if (ct !== void 0) {
                    var It = Oi,
                        Ft = c;
                    switch (c) {
                        case 'keypress':
                            if (aa(y) === 0) break e;
                        case 'keydown':
                        case 'keyup':
                            It = Ih;
                            break;
                        case 'focusin':
                            (Ft = 'focus'), (It = Ch);
                            break;
                        case 'focusout':
                            (Ft = 'blur'), (It = Ch);
                            break;
                        case 'beforeblur':
                        case 'afterblur':
                            It = Ch;
                            break;
                        case 'click':
                            if (y.button === 2) break e;
                        case 'auxclick':
                        case 'dblclick':
                        case 'mousedown':
                        case 'mousemove':
                        case 'mouseup':
                        case 'mouseout':
                        case 'mouseover':
                        case 'contextmenu':
                            It = Kp;
                            break;
                        case 'drag':
                        case 'dragend':
                        case 'dragenter':
                        case 'dragexit':
                        case 'dragleave':
                        case 'dragover':
                        case 'dragstart':
                        case 'drop':
                            It = nl;
                            break;
                        case 'touchcancel':
                        case 'touchend':
                        case 'touchmove':
                        case 'touchstart':
                            It = fa;
                            break;
                        case Xc:
                        case Yc:
                        case rm:
                            It = av;
                            break;
                        case sm:
                            It = Nl;
                            break;
                        case 'scroll':
                            It = Ti;
                            break;
                        case 'wheel':
                            It = Qp;
                            break;
                        case 'copy':
                        case 'cut':
                        case 'paste':
                            It = Zp;
                            break;
                        case 'gotpointercapture':
                        case 'lostpointercapture':
                        case 'pointercancel':
                        case 'pointerdown':
                        case 'pointermove':
                        case 'pointerout':
                        case 'pointerover':
                        case 'pointerup':
                            It = Ss;
                    }
                    var zt = (h & 4) !== 0,
                        qi = !zt && c === 'scroll',
                        Oe = zt ? (ct !== null ? ct + 'Capture' : null) : ct;
                    zt = [];
                    for (var Ee = Ge, ke; Ee !== null; ) {
                        ke = Ee;
                        var yt = ke.stateNode;
                        if (
                            (ke.tag === 5 &&
                                yt !== null &&
                                ((ke = yt),
                                Oe !== null &&
                                    ((yt = jn(Ee, Oe)),
                                    yt != null && zt.push(Vu(Ee, yt, ke)))),
                            qi)
                        )
                            break;
                        Ee = Ee.return;
                    }
                    0 < zt.length &&
                        ((ct = new It(ct, Ft, null, y, ft)),
                        dt.push({ event: ct, listeners: zt }));
                }
            }
            if ((h & 7) === 0) {
                e: {
                    if (
                        ((ct = c === 'mouseover' || c === 'pointerover'),
                        (It = c === 'mouseout' || c === 'pointerout'),
                        ct &&
                            y !== _e &&
                            (Ft = y.relatedTarget || y.fromElement) &&
                            (ll(Ft) || Ft[Es]))
                    )
                        break e;
                    if (
                        (It || ct) &&
                        ((ct =
                            ft.window === ft
                                ? ft
                                : (ct = ft.ownerDocument)
                                  ? ct.defaultView || ct.parentWindow
                                  : window),
                        It
                            ? ((Ft = y.relatedTarget || y.toElement),
                              (It = Ge),
                              (Ft = Ft ? ll(Ft) : null),
                              Ft !== null &&
                                  ((qi = Q(Ft)),
                                  Ft !== qi ||
                                      (Ft.tag !== 5 && Ft.tag !== 6)) &&
                                  (Ft = null))
                            : ((It = null), (Ft = Ge)),
                        It !== Ft)
                    ) {
                        if (
                            ((zt = Kp),
                            (yt = 'onMouseLeave'),
                            (Oe = 'onMouseEnter'),
                            (Ee = 'mouse'),
                            (c === 'pointerout' || c === 'pointerover') &&
                                ((zt = Ss),
                                (yt = 'onPointerLeave'),
                                (Oe = 'onPointerEnter'),
                                (Ee = 'pointer')),
                            (qi = It == null ? ct : Ai(It)),
                            (ke = Ft == null ? ct : Ai(Ft)),
                            (ct = new zt(yt, Ee + 'leave', It, y, ft)),
                            (ct.target = qi),
                            (ct.relatedTarget = ke),
                            (yt = null),
                            ll(ft) === Ge &&
                                ((zt = new zt(Oe, Ee + 'enter', Ft, y, ft)),
                                (zt.target = ke),
                                (zt.relatedTarget = qi),
                                (yt = zt)),
                            (qi = yt),
                            It && Ft)
                        )
                            t: {
                                for (
                                    zt = It, Oe = Ft, Ee = 0, ke = zt;
                                    ke;
                                    ke = Gl(ke)
                                )
                                    Ee++;
                                for (ke = 0, yt = Oe; yt; yt = Gl(yt)) ke++;
                                for (; 0 < Ee - ke; ) (zt = Gl(zt)), Ee--;
                                for (; 0 < ke - Ee; ) (Oe = Gl(Oe)), ke--;
                                for (; Ee--; ) {
                                    if (
                                        zt === Oe ||
                                        (Oe !== null && zt === Oe.alternate)
                                    )
                                        break t;
                                    (zt = Gl(zt)), (Oe = Gl(Oe));
                                }
                                zt = null;
                            }
                        else zt = null;
                        It !== null && vv(dt, ct, It, zt, !1),
                            Ft !== null &&
                                qi !== null &&
                                vv(dt, qi, Ft, zt, !0);
                    }
                }
                e: {
                    if (
                        ((ct = Ge ? Ai(Ge) : window),
                        (It = ct.nodeName && ct.nodeName.toLowerCase()),
                        It === 'select' ||
                            (It === 'input' && ct.type === 'file'))
                    )
                        var Gt = pv;
                    else if (Oh(ct))
                        if (ku) Gt = gi;
                        else {
                            Gt = mv;
                            var Kt = Nu;
                        }
                    else
                        (It = ct.nodeName) &&
                            It.toLowerCase() === 'input' &&
                            (ct.type === 'checkbox' || ct.type === 'radio') &&
                            (Gt = im);
                    if (Gt && (Gt = Gt(c, Ge))) {
                        Ou(dt, Gt, y, ft);
                        break e;
                    }
                    Kt && Kt(c, ct, Ge),
                        c === 'focusout' &&
                            (Kt = ct._wrapperState) &&
                            Kt.controlled &&
                            ct.type === 'number' &&
                            Je(ct, 'number', ct.value);
                }
                switch (((Kt = Ge ? Ai(Ge) : window), c)) {
                    case 'focusin':
                        (Oh(Kt) || Kt.contentEditable === 'true') &&
                            ((Fo = Kt), (Hl = Ge), (jc = null));
                        break;
                    case 'focusout':
                        jc = Hl = Fo = null;
                        break;
                    case 'mousedown':
                        ar = !0;
                        break;
                    case 'contextmenu':
                    case 'mouseup':
                    case 'dragend':
                        (ar = !1), Fh(dt, y, ft);
                        break;
                    case 'selectionchange':
                        if (Nh) break;
                    case 'keydown':
                    case 'keyup':
                        Fh(dt, y, ft);
                }
                var Zt;
                if (Vr)
                    e: {
                        switch (c) {
                            case 'compositionstart':
                                var on = 'onCompositionStart';
                                break e;
                            case 'compositionend':
                                on = 'onCompositionEnd';
                                break e;
                            case 'compositionupdate':
                                on = 'onCompositionUpdate';
                                break e;
                        }
                        on = void 0;
                    }
                else
                    rl
                        ? nm(c, y) && (on = 'onCompositionEnd')
                        : c === 'keydown' &&
                          y.keyCode === 229 &&
                          (on = 'onCompositionStart');
                on &&
                    (Iu &&
                        y.locale !== 'ko' &&
                        (rl || on !== 'onCompositionStart'
                            ? on === 'onCompositionEnd' && rl && (Zt = ji())
                            : ((Jr = ft),
                              (oa = 'value' in Jr ? Jr.value : Jr.textContent),
                              (rl = !0))),
                    (Kt = jh(Ge, on)),
                    0 < Kt.length &&
                        ((on = new $p(on, c, null, y, ft)),
                        dt.push({ event: on, listeners: Kt }),
                        Zt
                            ? (on.data = Zt)
                            : ((Zt = Dh(y)), Zt !== null && (on.data = Zt)))),
                    (Zt = ai ? hv(c, y) : Gc(c, y)) &&
                        ((Ge = jh(Ge, 'onBeforeInput')),
                        0 < Ge.length &&
                            ((ft = new $p(
                                'onBeforeInput',
                                'beforeinput',
                                null,
                                y,
                                ft
                            )),
                            dt.push({ event: ft, listeners: Ge }),
                            (ft.data = Zt)));
            }
            Bu(dt, h);
        });
    }
    function Vu(c, h, y) {
        return { instance: c, listener: h, currentTarget: y };
    }
    function jh(c, h) {
        for (var y = h + 'Capture', E = []; c !== null; ) {
            var R = c,
                N = R.stateNode;
            R.tag === 5 &&
                N !== null &&
                ((R = N),
                (N = jn(c, y)),
                N != null && E.unshift(Vu(c, N, R)),
                (N = jn(c, h)),
                N != null && E.push(Vu(c, N, R))),
                (c = c.return);
        }
        return E;
    }
    function Gl(c) {
        if (c === null) return null;
        do c = c.return;
        while (c && c.tag !== 5);
        return c || null;
    }
    function vv(c, h, y, E, R) {
        for (var N = h._reactName, j = []; y !== null && y !== E; ) {
            var he = y,
                Se = he.alternate,
                Ge = he.stateNode;
            if (Se !== null && Se === E) break;
            he.tag === 5 &&
                Ge !== null &&
                ((he = Ge),
                R
                    ? ((Se = jn(y, N)), Se != null && j.unshift(Vu(y, Se, he)))
                    : R ||
                      ((Se = jn(y, N)), Se != null && j.push(Vu(y, Se, he)))),
                (y = y.return);
        }
        j.length !== 0 && c.push({ event: h, listeners: j });
    }
    var x1 = /\r\n?/g,
        yv = /\u0000|\uFFFD/g;
    function lm(c) {
        return (typeof c == 'string' ? c : '' + c)
            .replace(
                x1,
                `
`
            )
            .replace(yv, '');
    }
    function $c(c, h, y) {
        if (((h = lm(h)), lm(c) !== h && y)) throw Error(t(425));
    }
    function Jc() {}
    var Hu = null,
        um = null;
    function cm(c, h) {
        return (
            c === 'textarea' ||
            c === 'noscript' ||
            typeof h.children == 'string' ||
            typeof h.children == 'number' ||
            (typeof h.dangerouslySetInnerHTML == 'object' &&
                h.dangerouslySetInnerHTML !== null &&
                h.dangerouslySetInnerHTML.__html != null)
        );
    }
    var fm = typeof setTimeout == 'function' ? setTimeout : void 0,
        hm = typeof clearTimeout == 'function' ? clearTimeout : void 0,
        Xh = typeof Promise == 'function' ? Promise : void 0,
        S1 =
            typeof queueMicrotask == 'function'
                ? queueMicrotask
                : typeof Xh < 'u'
                  ? function (c) {
                        return Xh.resolve(null).then(c).catch(_v);
                    }
                  : fm;
    function _v(c) {
        setTimeout(function () {
            throw c;
        });
    }
    function Yh(c, h) {
        var y = h,
            E = 0;
        do {
            var R = y.nextSibling;
            if ((c.removeChild(y), R && R.nodeType === 8))
                if (((y = R.data), y === '/$')) {
                    if (E === 0) {
                        c.removeChild(R), Qa(h);
                        return;
                    }
                    E--;
                } else (y !== '$' && y !== '$?' && y !== '$!') || E++;
            y = R;
        } while (y);
        Qa(h);
    }
    function ma(c) {
        for (; c != null; c = c.nextSibling) {
            var h = c.nodeType;
            if (h === 1 || h === 3) break;
            if (h === 8) {
                if (((h = c.data), h === '$' || h === '$!' || h === '$?'))
                    break;
                if (h === '/$') return null;
            }
        }
        return c;
    }
    function dm(c) {
        c = c.previousSibling;
        for (var h = 0; c; ) {
            if (c.nodeType === 8) {
                var y = c.data;
                if (y === '$' || y === '$!' || y === '$?') {
                    if (h === 0) return c;
                    h--;
                } else y === '/$' && h++;
            }
            c = c.previousSibling;
        }
        return null;
    }
    var Wl = Math.random().toString(36).slice(2),
        Yi = '__reactFiber$' + Wl,
        Gu = '__reactProps$' + Wl,
        Es = '__reactContainer$' + Wl,
        jl = '__reactEvents$' + Wl,
        qh = '__reactListeners$' + Wl,
        Kh = '__reactHandles$' + Wl;
    function ll(c) {
        var h = c[Yi];
        if (h) return h;
        for (var y = c.parentNode; y; ) {
            if ((h = y[Es] || y[Yi])) {
                if (
                    ((y = h.alternate),
                    h.child !== null || (y !== null && y.child !== null))
                )
                    for (c = dm(c); c !== null; ) {
                        if ((y = c[Yi])) return y;
                        c = dm(c);
                    }
                return h;
            }
            (c = y), (y = c.parentNode);
        }
        return null;
    }
    function ga(c) {
        return (
            (c = c[Yi] || c[Es]),
            !c || (c.tag !== 5 && c.tag !== 6 && c.tag !== 13 && c.tag !== 3)
                ? null
                : c
        );
    }
    function Ai(c) {
        if (c.tag === 5 || c.tag === 6) return c.stateNode;
        throw Error(t(33));
    }
    function Zh(c) {
        return c[Gu] || null;
    }
    var pm = [],
        lr = -1;
    function xi(c) {
        return { current: c };
    }
    function Zn(c) {
        0 > lr || ((c.current = pm[lr]), (pm[lr] = null), lr--);
    }
    function Yn(c, h) {
        lr++, (pm[lr] = c.current), (c.current = h);
    }
    var va = {},
        yr = xi(va),
        Hr = xi(!1),
        ya = va;
    function Xl(c, h) {
        var y = c.type.contextTypes;
        if (!y) return va;
        var E = c.stateNode;
        if (E && E.__reactInternalMemoizedUnmaskedChildContext === h)
            return E.__reactInternalMemoizedMaskedChildContext;
        var R = {},
            N;
        for (N in y) R[N] = h[N];
        return (
            E &&
                ((c = c.stateNode),
                (c.__reactInternalMemoizedUnmaskedChildContext = h),
                (c.__reactInternalMemoizedMaskedChildContext = R)),
            R
        );
    }
    function Lr(c) {
        return (c = c.childContextTypes), c != null;
    }
    function Qc() {
        Zn(Hr), Zn(yr);
    }
    function mm(c, h, y) {
        if (yr.current !== va) throw Error(t(168));
        Yn(yr, h), Yn(Hr, y);
    }
    function ef(c, h, y) {
        var E = c.stateNode;
        if (((h = h.childContextTypes), typeof E.getChildContext != 'function'))
            return y;
        E = E.getChildContext();
        for (var R in E)
            if (!(R in h)) throw Error(t(108, ge(c) || 'Unknown', R));
        return J({}, y, E);
    }
    function Yl(c) {
        return (
            (c =
                ((c = c.stateNode) &&
                    c.__reactInternalMemoizedMergedChildContext) ||
                va),
            (ya = yr.current),
            Yn(yr, c),
            Yn(Hr, Hr.current),
            !0
        );
    }
    function gm(c, h, y) {
        var E = c.stateNode;
        if (!E) throw Error(t(169));
        y
            ? ((c = ef(c, h, ya)),
              (E.__reactInternalMemoizedMergedChildContext = c),
              Zn(Hr),
              Zn(yr),
              Yn(yr, c))
            : Zn(Hr),
            Yn(Hr, y);
    }
    var po = null,
        tf = !1,
        $h = !1;
    function nf(c) {
        po === null ? (po = [c]) : po.push(c);
    }
    function xv(c) {
        (tf = !0), nf(c);
    }
    function zo() {
        if (!$h && po !== null) {
            $h = !0;
            var c = 0,
                h = Sn;
            try {
                var y = po;
                for (Sn = 1; c < y.length; c++) {
                    var E = y[c];
                    do E = E(!0);
                    while (E !== null);
                }
                (po = null), (tf = !1);
            } catch (R) {
                throw (po !== null && (po = po.slice(c + 1)), ue(rt, zo), R);
            } finally {
                (Sn = h), ($h = !1);
            }
        }
        return null;
    }
    var ql = [],
        ts = 0,
        Jh = null,
        Qh = 0,
        Gr = [],
        ur = 0,
        Kl = null,
        St = 1,
        js = '';
    function _a(c, h) {
        (ql[ts++] = Qh), (ql[ts++] = Jh), (Jh = c), (Qh = h);
    }
    function vm(c, h, y) {
        (Gr[ur++] = St), (Gr[ur++] = js), (Gr[ur++] = Kl), (Kl = c);
        var E = St;
        c = js;
        var R = 32 - Lt(E) - 1;
        (E &= ~(1 << R)), (y += 1);
        var N = 32 - Lt(h) + R;
        if (30 < N) {
            var j = R - (R % 5);
            (N = (E & ((1 << j) - 1)).toString(32)),
                (E >>= j),
                (R -= j),
                (St = (1 << (32 - Lt(h) + R)) | (y << R) | E),
                (js = N + c);
        } else (St = (1 << N) | (y << R) | E), (js = c);
    }
    function ym(c) {
        c.return !== null && (_a(c, 1), vm(c, 1, 0));
    }
    function xa(c) {
        for (; c === Jh; )
            (Jh = ql[--ts]), (ql[ts] = null), (Qh = ql[--ts]), (ql[ts] = null);
        for (; c === Kl; )
            (Kl = Gr[--ur]),
                (Gr[ur] = null),
                (js = Gr[--ur]),
                (Gr[ur] = null),
                (St = Gr[--ur]),
                (Gr[ur] = null);
    }
    var _r = null,
        Wr = null,
        ti = !1,
        Xs = null;
    function _m(c, h) {
        var y = jo(5, null, null, 0);
        (y.elementType = 'DELETED'),
            (y.stateNode = h),
            (y.return = c),
            (h = c.deletions),
            h === null ? ((c.deletions = [y]), (c.flags |= 16)) : h.push(y);
    }
    function xm(c, h) {
        switch (c.tag) {
            case 5:
                var y = c.type;
                return (
                    (h =
                        h.nodeType !== 1 ||
                        y.toLowerCase() !== h.nodeName.toLowerCase()
                            ? null
                            : h),
                    h !== null
                        ? ((c.stateNode = h),
                          (_r = c),
                          (Wr = ma(h.firstChild)),
                          !0)
                        : !1
                );
            case 6:
                return (
                    (h = c.pendingProps === '' || h.nodeType !== 3 ? null : h),
                    h !== null
                        ? ((c.stateNode = h), (_r = c), (Wr = null), !0)
                        : !1
                );
            case 13:
                return (
                    (h = h.nodeType !== 8 ? null : h),
                    h !== null
                        ? ((y = Kl !== null ? { id: St, overflow: js } : null),
                          (c.memoizedState = {
                              dehydrated: h,
                              treeContext: y,
                              retryLane: 1073741824,
                          }),
                          (y = jo(18, null, null, 0)),
                          (y.stateNode = h),
                          (y.return = c),
                          (c.child = y),
                          (_r = c),
                          (Wr = null),
                          !0)
                        : !1
                );
            default:
                return !1;
        }
    }
    function ed(c) {
        return (c.mode & 1) !== 0 && (c.flags & 128) === 0;
    }
    function td(c) {
        if (ti) {
            var h = Wr;
            if (h) {
                var y = h;
                if (!xm(c, h)) {
                    if (ed(c)) throw Error(t(418));
                    h = ma(y.nextSibling);
                    var E = _r;
                    h && xm(c, h)
                        ? _m(E, y)
                        : ((c.flags = (c.flags & -4097) | 2),
                          (ti = !1),
                          (_r = c));
                }
            } else {
                if (ed(c)) throw Error(t(418));
                (c.flags = (c.flags & -4097) | 2), (ti = !1), (_r = c);
            }
        }
    }
    function nd(c) {
        for (
            c = c.return;
            c !== null && c.tag !== 5 && c.tag !== 3 && c.tag !== 13;

        )
            c = c.return;
        _r = c;
    }
    function Wu(c) {
        if (c !== _r) return !1;
        if (!ti) return nd(c), (ti = !0), !1;
        var h;
        if (
            ((h = c.tag !== 3) &&
                !(h = c.tag !== 5) &&
                ((h = c.type),
                (h =
                    h !== 'head' &&
                    h !== 'body' &&
                    !cm(c.type, c.memoizedProps))),
            h && (h = Wr))
        ) {
            if (ed(c)) throw (Sm(), Error(t(418)));
            for (; h; ) _m(c, h), (h = ma(h.nextSibling));
        }
        if ((nd(c), c.tag === 13)) {
            if (
                ((c = c.memoizedState),
                (c = c !== null ? c.dehydrated : null),
                !c)
            )
                throw Error(t(317));
            e: {
                for (c = c.nextSibling, h = 0; c; ) {
                    if (c.nodeType === 8) {
                        var y = c.data;
                        if (y === '/$') {
                            if (h === 0) {
                                Wr = ma(c.nextSibling);
                                break e;
                            }
                            h--;
                        } else (y !== '$' && y !== '$!' && y !== '$?') || h++;
                    }
                    c = c.nextSibling;
                }
                Wr = null;
            }
        } else Wr = _r ? ma(c.stateNode.nextSibling) : null;
        return !0;
    }
    function Sm() {
        for (var c = Wr; c; ) c = ma(c.nextSibling);
    }
    function ul() {
        (Wr = _r = null), (ti = !1);
    }
    function ju(c) {
        Xs === null ? (Xs = [c]) : Xs.push(c);
    }
    var w1 = b.ReactCurrentBatchConfig;
    function rf(c, h, y) {
        if (
            ((c = y.ref),
            c !== null && typeof c != 'function' && typeof c != 'object')
        ) {
            if (y._owner) {
                if (((y = y._owner), y)) {
                    if (y.tag !== 1) throw Error(t(309));
                    var E = y.stateNode;
                }
                if (!E) throw Error(t(147, c));
                var R = E,
                    N = '' + c;
                return h !== null &&
                    h.ref !== null &&
                    typeof h.ref == 'function' &&
                    h.ref._stringRef === N
                    ? h.ref
                    : ((h = function (j) {
                          var he = R.refs;
                          j === null ? delete he[N] : (he[N] = j);
                      }),
                      (h._stringRef = N),
                      h);
            }
            if (typeof c != 'string') throw Error(t(284));
            if (!y._owner) throw Error(t(290, c));
        }
        return c;
    }
    function sf(c, h) {
        throw (
            ((c = Object.prototype.toString.call(h)),
            Error(
                t(
                    31,
                    c === '[object Object]'
                        ? 'object with keys {' + Object.keys(h).join(', ') + '}'
                        : c
                )
            ))
        );
    }
    function wm(c) {
        var h = c._init;
        return h(c._payload);
    }
    function Mm(c) {
        function h(Oe, Ee) {
            if (c) {
                var ke = Oe.deletions;
                ke === null
                    ? ((Oe.deletions = [Ee]), (Oe.flags |= 16))
                    : ke.push(Ee);
            }
        }
        function y(Oe, Ee) {
            if (!c) return null;
            for (; Ee !== null; ) h(Oe, Ee), (Ee = Ee.sibling);
            return null;
        }
        function E(Oe, Ee) {
            for (Oe = new Map(); Ee !== null; )
                Ee.key !== null ? Oe.set(Ee.key, Ee) : Oe.set(Ee.index, Ee),
                    (Ee = Ee.sibling);
            return Oe;
        }
        function R(Oe, Ee) {
            return (Oe = nc(Oe, Ee)), (Oe.index = 0), (Oe.sibling = null), Oe;
        }
        function N(Oe, Ee, ke) {
            return (
                (Oe.index = ke),
                c
                    ? ((ke = Oe.alternate),
                      ke !== null
                          ? ((ke = ke.index),
                            ke < Ee ? ((Oe.flags |= 2), Ee) : ke)
                          : ((Oe.flags |= 2), Ee))
                    : ((Oe.flags |= 1048576), Ee)
            );
        }
        function j(Oe) {
            return c && Oe.alternate === null && (Oe.flags |= 2), Oe;
        }
        function he(Oe, Ee, ke, yt) {
            return Ee === null || Ee.tag !== 6
                ? ((Ee = V1(ke, Oe.mode, yt)), (Ee.return = Oe), Ee)
                : ((Ee = R(Ee, ke)), (Ee.return = Oe), Ee);
        }
        function Se(Oe, Ee, ke, yt) {
            var Gt = ke.type;
            return Gt === D
                ? ft(Oe, Ee, ke.props.children, yt, ke.key)
                : Ee !== null &&
                    (Ee.elementType === Gt ||
                        (typeof Gt == 'object' &&
                            Gt !== null &&
                            Gt.$$typeof === ee &&
                            wm(Gt) === Ee.type))
                  ? ((yt = R(Ee, ke.props)),
                    (yt.ref = rf(Oe, Ee, ke)),
                    (yt.return = Oe),
                    yt)
                  : ((yt = Gv(ke.type, ke.key, ke.props, null, Oe.mode, yt)),
                    (yt.ref = rf(Oe, Ee, ke)),
                    (yt.return = Oe),
                    yt);
        }
        function Ge(Oe, Ee, ke, yt) {
            return Ee === null ||
                Ee.tag !== 4 ||
                Ee.stateNode.containerInfo !== ke.containerInfo ||
                Ee.stateNode.implementation !== ke.implementation
                ? ((Ee = H1(ke, Oe.mode, yt)), (Ee.return = Oe), Ee)
                : ((Ee = R(Ee, ke.children || [])), (Ee.return = Oe), Ee);
        }
        function ft(Oe, Ee, ke, yt, Gt) {
            return Ee === null || Ee.tag !== 7
                ? ((Ee = wf(ke, Oe.mode, yt, Gt)), (Ee.return = Oe), Ee)
                : ((Ee = R(Ee, ke)), (Ee.return = Oe), Ee);
        }
        function dt(Oe, Ee, ke) {
            if ((typeof Ee == 'string' && Ee !== '') || typeof Ee == 'number')
                return (Ee = V1('' + Ee, Oe.mode, ke)), (Ee.return = Oe), Ee;
            if (typeof Ee == 'object' && Ee !== null) {
                switch (Ee.$$typeof) {
                    case P:
                        return (
                            (ke = Gv(
                                Ee.type,
                                Ee.key,
                                Ee.props,
                                null,
                                Oe.mode,
                                ke
                            )),
                            (ke.ref = rf(Oe, null, Ee)),
                            (ke.return = Oe),
                            ke
                        );
                    case L:
                        return (Ee = H1(Ee, Oe.mode, ke)), (Ee.return = Oe), Ee;
                    case ee:
                        var yt = Ee._init;
                        return dt(Oe, yt(Ee._payload), ke);
                }
                if (te(Ee) || se(Ee))
                    return (
                        (Ee = wf(Ee, Oe.mode, ke, null)), (Ee.return = Oe), Ee
                    );
                sf(Oe, Ee);
            }
            return null;
        }
        function ct(Oe, Ee, ke, yt) {
            var Gt = Ee !== null ? Ee.key : null;
            if ((typeof ke == 'string' && ke !== '') || typeof ke == 'number')
                return Gt !== null ? null : he(Oe, Ee, '' + ke, yt);
            if (typeof ke == 'object' && ke !== null) {
                switch (ke.$$typeof) {
                    case P:
                        return ke.key === Gt ? Se(Oe, Ee, ke, yt) : null;
                    case L:
                        return ke.key === Gt ? Ge(Oe, Ee, ke, yt) : null;
                    case ee:
                        return (Gt = ke._init), ct(Oe, Ee, Gt(ke._payload), yt);
                }
                if (te(ke) || se(ke))
                    return Gt !== null ? null : ft(Oe, Ee, ke, yt, null);
                sf(Oe, ke);
            }
            return null;
        }
        function It(Oe, Ee, ke, yt, Gt) {
            if ((typeof yt == 'string' && yt !== '') || typeof yt == 'number')
                return (Oe = Oe.get(ke) || null), he(Ee, Oe, '' + yt, Gt);
            if (typeof yt == 'object' && yt !== null) {
                switch (yt.$$typeof) {
                    case P:
                        return (
                            (Oe =
                                Oe.get(yt.key === null ? ke : yt.key) || null),
                            Se(Ee, Oe, yt, Gt)
                        );
                    case L:
                        return (
                            (Oe =
                                Oe.get(yt.key === null ? ke : yt.key) || null),
                            Ge(Ee, Oe, yt, Gt)
                        );
                    case ee:
                        var Kt = yt._init;
                        return It(Oe, Ee, ke, Kt(yt._payload), Gt);
                }
                if (te(yt) || se(yt))
                    return (Oe = Oe.get(ke) || null), ft(Ee, Oe, yt, Gt, null);
                sf(Ee, yt);
            }
            return null;
        }
        function Ft(Oe, Ee, ke, yt) {
            for (
                var Gt = null, Kt = null, Zt = Ee, on = (Ee = 0), Ur = null;
                Zt !== null && on < ke.length;
                on++
            ) {
                Zt.index > on ? ((Ur = Zt), (Zt = null)) : (Ur = Zt.sibling);
                var kn = ct(Oe, Zt, ke[on], yt);
                if (kn === null) {
                    Zt === null && (Zt = Ur);
                    break;
                }
                c && Zt && kn.alternate === null && h(Oe, Zt),
                    (Ee = N(kn, Ee, on)),
                    Kt === null ? (Gt = kn) : (Kt.sibling = kn),
                    (Kt = kn),
                    (Zt = Ur);
            }
            if (on === ke.length) return y(Oe, Zt), ti && _a(Oe, on), Gt;
            if (Zt === null) {
                for (; on < ke.length; on++)
                    (Zt = dt(Oe, ke[on], yt)),
                        Zt !== null &&
                            ((Ee = N(Zt, Ee, on)),
                            Kt === null ? (Gt = Zt) : (Kt.sibling = Zt),
                            (Kt = Zt));
                return ti && _a(Oe, on), Gt;
            }
            for (Zt = E(Oe, Zt); on < ke.length; on++)
                (Ur = It(Zt, Oe, on, ke[on], yt)),
                    Ur !== null &&
                        (c &&
                            Ur.alternate !== null &&
                            Zt.delete(Ur.key === null ? on : Ur.key),
                        (Ee = N(Ur, Ee, on)),
                        Kt === null ? (Gt = Ur) : (Kt.sibling = Ur),
                        (Kt = Ur));
            return (
                c &&
                    Zt.forEach(function (ic) {
                        return h(Oe, ic);
                    }),
                ti && _a(Oe, on),
                Gt
            );
        }
        function zt(Oe, Ee, ke, yt) {
            var Gt = se(ke);
            if (typeof Gt != 'function') throw Error(t(150));
            if (((ke = Gt.call(ke)), ke == null)) throw Error(t(151));
            for (
                var Kt = (Gt = null),
                    Zt = Ee,
                    on = (Ee = 0),
                    Ur = null,
                    kn = ke.next();
                Zt !== null && !kn.done;
                on++, kn = ke.next()
            ) {
                Zt.index > on ? ((Ur = Zt), (Zt = null)) : (Ur = Zt.sibling);
                var ic = ct(Oe, Zt, kn.value, yt);
                if (ic === null) {
                    Zt === null && (Zt = Ur);
                    break;
                }
                c && Zt && ic.alternate === null && h(Oe, Zt),
                    (Ee = N(ic, Ee, on)),
                    Kt === null ? (Gt = ic) : (Kt.sibling = ic),
                    (Kt = ic),
                    (Zt = Ur);
            }
            if (kn.done) return y(Oe, Zt), ti && _a(Oe, on), Gt;
            if (Zt === null) {
                for (; !kn.done; on++, kn = ke.next())
                    (kn = dt(Oe, kn.value, yt)),
                        kn !== null &&
                            ((Ee = N(kn, Ee, on)),
                            Kt === null ? (Gt = kn) : (Kt.sibling = kn),
                            (Kt = kn));
                return ti && _a(Oe, on), Gt;
            }
            for (Zt = E(Oe, Zt); !kn.done; on++, kn = ke.next())
                (kn = It(Zt, Oe, on, kn.value, yt)),
                    kn !== null &&
                        (c &&
                            kn.alternate !== null &&
                            Zt.delete(kn.key === null ? on : kn.key),
                        (Ee = N(kn, Ee, on)),
                        Kt === null ? (Gt = kn) : (Kt.sibling = kn),
                        (Kt = kn));
            return (
                c &&
                    Zt.forEach(function (zN) {
                        return h(Oe, zN);
                    }),
                ti && _a(Oe, on),
                Gt
            );
        }
        function qi(Oe, Ee, ke, yt) {
            if (
                (typeof ke == 'object' &&
                    ke !== null &&
                    ke.type === D &&
                    ke.key === null &&
                    (ke = ke.props.children),
                typeof ke == 'object' && ke !== null)
            ) {
                switch (ke.$$typeof) {
                    case P:
                        e: {
                            for (var Gt = ke.key, Kt = Ee; Kt !== null; ) {
                                if (Kt.key === Gt) {
                                    if (((Gt = ke.type), Gt === D)) {
                                        if (Kt.tag === 7) {
                                            y(Oe, Kt.sibling),
                                                (Ee = R(Kt, ke.props.children)),
                                                (Ee.return = Oe),
                                                (Oe = Ee);
                                            break e;
                                        }
                                    } else if (
                                        Kt.elementType === Gt ||
                                        (typeof Gt == 'object' &&
                                            Gt !== null &&
                                            Gt.$$typeof === ee &&
                                            wm(Gt) === Kt.type)
                                    ) {
                                        y(Oe, Kt.sibling),
                                            (Ee = R(Kt, ke.props)),
                                            (Ee.ref = rf(Oe, Kt, ke)),
                                            (Ee.return = Oe),
                                            (Oe = Ee);
                                        break e;
                                    }
                                    y(Oe, Kt);
                                    break;
                                } else h(Oe, Kt);
                                Kt = Kt.sibling;
                            }
                            ke.type === D
                                ? ((Ee = wf(
                                      ke.props.children,
                                      Oe.mode,
                                      yt,
                                      ke.key
                                  )),
                                  (Ee.return = Oe),
                                  (Oe = Ee))
                                : ((yt = Gv(
                                      ke.type,
                                      ke.key,
                                      ke.props,
                                      null,
                                      Oe.mode,
                                      yt
                                  )),
                                  (yt.ref = rf(Oe, Ee, ke)),
                                  (yt.return = Oe),
                                  (Oe = yt));
                        }
                        return j(Oe);
                    case L:
                        e: {
                            for (Kt = ke.key; Ee !== null; ) {
                                if (Ee.key === Kt)
                                    if (
                                        Ee.tag === 4 &&
                                        Ee.stateNode.containerInfo ===
                                            ke.containerInfo &&
                                        Ee.stateNode.implementation ===
                                            ke.implementation
                                    ) {
                                        y(Oe, Ee.sibling),
                                            (Ee = R(Ee, ke.children || [])),
                                            (Ee.return = Oe),
                                            (Oe = Ee);
                                        break e;
                                    } else {
                                        y(Oe, Ee);
                                        break;
                                    }
                                else h(Oe, Ee);
                                Ee = Ee.sibling;
                            }
                            (Ee = H1(ke, Oe.mode, yt)),
                                (Ee.return = Oe),
                                (Oe = Ee);
                        }
                        return j(Oe);
                    case ee:
                        return (Kt = ke._init), qi(Oe, Ee, Kt(ke._payload), yt);
                }
                if (te(ke)) return Ft(Oe, Ee, ke, yt);
                if (se(ke)) return zt(Oe, Ee, ke, yt);
                sf(Oe, ke);
            }
            return (typeof ke == 'string' && ke !== '') || typeof ke == 'number'
                ? ((ke = '' + ke),
                  Ee !== null && Ee.tag === 6
                      ? (y(Oe, Ee.sibling),
                        (Ee = R(Ee, ke)),
                        (Ee.return = Oe),
                        (Oe = Ee))
                      : (y(Oe, Ee),
                        (Ee = V1(ke, Oe.mode, yt)),
                        (Ee.return = Oe),
                        (Oe = Ee)),
                  j(Oe))
                : y(Oe, Ee);
        }
        return qi;
    }
    var Zl = Mm(!0),
        of = Mm(!1),
        $l = xi(null),
        Jl = null,
        Sa = null,
        Xu = null;
    function Ql() {
        Xu = Sa = Jl = null;
    }
    function af(c) {
        var h = $l.current;
        Zn($l), (c._currentValue = h);
    }
    function lf(c, h, y) {
        for (; c !== null; ) {
            var E = c.alternate;
            if (
                ((c.childLanes & h) !== h
                    ? ((c.childLanes |= h), E !== null && (E.childLanes |= h))
                    : E !== null &&
                      (E.childLanes & h) !== h &&
                      (E.childLanes |= h),
                c === y)
            )
                break;
            c = c.return;
        }
    }
    function cl(c, h) {
        (Jl = c),
            (Xu = Sa = null),
            (c = c.dependencies),
            c !== null &&
                c.firstContext !== null &&
                ((c.lanes & h) !== 0 && (mn = !0), (c.firstContext = null));
    }
    function Ts(c) {
        var h = c._currentValue;
        if (Xu !== c)
            if (
                ((c = { context: c, memoizedValue: h, next: null }),
                Sa === null)
            ) {
                if (Jl === null) throw Error(t(308));
                (Sa = c), (Jl.dependencies = { lanes: 0, firstContext: c });
            } else Sa = Sa.next = c;
        return h;
    }
    var wa = null;
    function Em(c) {
        wa === null ? (wa = [c]) : wa.push(c);
    }
    function uf(c, h, y, E) {
        var R = h.interleaved;
        return (
            R === null
                ? ((y.next = y), Em(h))
                : ((y.next = R.next), (R.next = y)),
            (h.interleaved = y),
            mo(c, E)
        );
    }
    function mo(c, h) {
        c.lanes |= h;
        var y = c.alternate;
        for (y !== null && (y.lanes |= h), y = c, c = c.return; c !== null; )
            (c.childLanes |= h),
                (y = c.alternate),
                y !== null && (y.childLanes |= h),
                (y = c),
                (c = c.return);
        return y.tag === 3 ? y.stateNode : null;
    }
    var Hn = !1;
    function dn(c) {
        c.updateQueue = {
            baseState: c.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: { pending: null, interleaved: null, lanes: 0 },
            effects: null,
        };
    }
    function bi(c, h) {
        (c = c.updateQueue),
            h.updateQueue === c &&
                (h.updateQueue = {
                    baseState: c.baseState,
                    firstBaseUpdate: c.firstBaseUpdate,
                    lastBaseUpdate: c.lastBaseUpdate,
                    shared: c.shared,
                    effects: c.effects,
                });
    }
    function Gn(c, h) {
        return {
            eventTime: c,
            lane: h,
            tag: 0,
            payload: null,
            callback: null,
            next: null,
        };
    }
    function li(c, h, y) {
        var E = c.updateQueue;
        if (E === null) return null;
        if (((E = E.shared), (On & 2) !== 0)) {
            var R = E.pending;
            return (
                R === null ? (h.next = h) : ((h.next = R.next), (R.next = h)),
                (E.pending = h),
                mo(c, y)
            );
        }
        return (
            (R = E.interleaved),
            R === null
                ? ((h.next = h), Em(E))
                : ((h.next = R.next), (R.next = h)),
            (E.interleaved = h),
            mo(c, y)
        );
    }
    function Ir(c, h, y) {
        if (
            ((h = h.updateQueue),
            h !== null && ((h = h.shared), (y & 4194240) !== 0))
        ) {
            var E = h.lanes;
            (E &= c.pendingLanes), (y |= E), (h.lanes = y), ao(c, y);
        }
    }
    function eu(c, h) {
        var y = c.updateQueue,
            E = c.alternate;
        if (E !== null && ((E = E.updateQueue), y === E)) {
            var R = null,
                N = null;
            if (((y = y.firstBaseUpdate), y !== null)) {
                do {
                    var j = {
                        eventTime: y.eventTime,
                        lane: y.lane,
                        tag: y.tag,
                        payload: y.payload,
                        callback: y.callback,
                        next: null,
                    };
                    N === null ? (R = N = j) : (N = N.next = j), (y = y.next);
                } while (y !== null);
                N === null ? (R = N = h) : (N = N.next = h);
            } else R = N = h;
            (y = {
                baseState: E.baseState,
                firstBaseUpdate: R,
                lastBaseUpdate: N,
                shared: E.shared,
                effects: E.effects,
            }),
                (c.updateQueue = y);
            return;
        }
        (c = y.lastBaseUpdate),
            c === null ? (y.firstBaseUpdate = h) : (c.next = h),
            (y.lastBaseUpdate = h);
    }
    function Si(c, h, y, E) {
        var R = c.updateQueue;
        Hn = !1;
        var N = R.firstBaseUpdate,
            j = R.lastBaseUpdate,
            he = R.shared.pending;
        if (he !== null) {
            R.shared.pending = null;
            var Se = he,
                Ge = Se.next;
            (Se.next = null), j === null ? (N = Ge) : (j.next = Ge), (j = Se);
            var ft = c.alternate;
            ft !== null &&
                ((ft = ft.updateQueue),
                (he = ft.lastBaseUpdate),
                he !== j &&
                    (he === null ? (ft.firstBaseUpdate = Ge) : (he.next = Ge),
                    (ft.lastBaseUpdate = Se)));
        }
        if (N !== null) {
            var dt = R.baseState;
            (j = 0), (ft = Ge = Se = null), (he = N);
            do {
                var ct = he.lane,
                    It = he.eventTime;
                if ((E & ct) === ct) {
                    ft !== null &&
                        (ft = ft.next =
                            {
                                eventTime: It,
                                lane: 0,
                                tag: he.tag,
                                payload: he.payload,
                                callback: he.callback,
                                next: null,
                            });
                    e: {
                        var Ft = c,
                            zt = he;
                        switch (((ct = h), (It = y), zt.tag)) {
                            case 1:
                                if (
                                    ((Ft = zt.payload), typeof Ft == 'function')
                                ) {
                                    dt = Ft.call(It, dt, ct);
                                    break e;
                                }
                                dt = Ft;
                                break e;
                            case 3:
                                Ft.flags = (Ft.flags & -65537) | 128;
                            case 0:
                                if (
                                    ((Ft = zt.payload),
                                    (ct =
                                        typeof Ft == 'function'
                                            ? Ft.call(It, dt, ct)
                                            : Ft),
                                    ct == null)
                                )
                                    break e;
                                dt = J({}, dt, ct);
                                break e;
                            case 2:
                                Hn = !0;
                        }
                    }
                    he.callback !== null &&
                        he.lane !== 0 &&
                        ((c.flags |= 64),
                        (ct = R.effects),
                        ct === null ? (R.effects = [he]) : ct.push(he));
                } else
                    (It = {
                        eventTime: It,
                        lane: ct,
                        tag: he.tag,
                        payload: he.payload,
                        callback: he.callback,
                        next: null,
                    }),
                        ft === null
                            ? ((Ge = ft = It), (Se = dt))
                            : (ft = ft.next = It),
                        (j |= ct);
                if (((he = he.next), he === null)) {
                    if (((he = R.shared.pending), he === null)) break;
                    (ct = he),
                        (he = ct.next),
                        (ct.next = null),
                        (R.lastBaseUpdate = ct),
                        (R.shared.pending = null);
                }
            } while (!0);
            if (
                (ft === null && (Se = dt),
                (R.baseState = Se),
                (R.firstBaseUpdate = Ge),
                (R.lastBaseUpdate = ft),
                (h = R.shared.interleaved),
                h !== null)
            ) {
                R = h;
                do (j |= R.lane), (R = R.next);
                while (R !== h);
            } else N === null && (R.shared.lanes = 0);
            (yf |= j), (c.lanes = j), (c.memoizedState = dt);
        }
    }
    function Yu(c, h, y) {
        if (((c = h.effects), (h.effects = null), c !== null))
            for (h = 0; h < c.length; h++) {
                var E = c[h],
                    R = E.callback;
                if (R !== null) {
                    if (((E.callback = null), (E = y), typeof R != 'function'))
                        throw Error(t(191, R));
                    R.call(E);
                }
            }
    }
    var Vo = {},
        As = xi(Vo),
        tu = xi(Vo),
        Ma = xi(Vo);
    function Ui(c) {
        if (c === Vo) throw Error(t(174));
        return c;
    }
    function cf(c, h) {
        switch ((Yn(Ma, h), Yn(tu, c), Yn(As, Vo), (c = h.nodeType), c)) {
            case 9:
            case 11:
                h = (h = h.documentElement) ? h.namespaceURI : Xe(null, '');
                break;
            default:
                (c = c === 8 ? h.parentNode : h),
                    (h = c.namespaceURI || null),
                    (c = c.tagName),
                    (h = Xe(h, c));
        }
        Zn(As), Yn(As, h);
    }
    function fl() {
        Zn(As), Zn(tu), Zn(Ma);
    }
    function nu(c) {
        Ui(Ma.current);
        var h = Ui(As.current),
            y = Xe(h, c.type);
        h !== y && (Yn(tu, c), Yn(As, y));
    }
    function qu(c) {
        tu.current === c && (Zn(As), Zn(tu));
    }
    var ni = xi(0);
    function go(c) {
        for (var h = c; h !== null; ) {
            if (h.tag === 13) {
                var y = h.memoizedState;
                if (
                    y !== null &&
                    ((y = y.dehydrated),
                    y === null || y.data === '$?' || y.data === '$!')
                )
                    return h;
            } else if (h.tag === 19 && h.memoizedProps.revealOrder !== void 0) {
                if ((h.flags & 128) !== 0) return h;
            } else if (h.child !== null) {
                (h.child.return = h), (h = h.child);
                continue;
            }
            if (h === c) break;
            for (; h.sibling === null; ) {
                if (h.return === null || h.return === c) return null;
                h = h.return;
            }
            (h.sibling.return = h.return), (h = h.sibling);
        }
        return null;
    }
    var Ku = [];
    function Ho() {
        for (var c = 0; c < Ku.length; c++)
            Ku[c]._workInProgressVersionPrimary = null;
        Ku.length = 0;
    }
    var iu = b.ReactCurrentDispatcher,
        ru = b.ReactCurrentBatchConfig,
        Ea = 0,
        $n = null,
        wi = null,
        Ln = null,
        vo = !1,
        Dr = !1,
        hl = 0,
        ns = 0;
    function xr() {
        throw Error(t(321));
    }
    function ff(c, h) {
        if (h === null) return !1;
        for (var y = 0; y < h.length && y < c.length; y++)
            if (!ws(c[y], h[y])) return !1;
        return !0;
    }
    function hf(c, h, y, E, R, N) {
        if (
            ((Ea = N),
            ($n = h),
            (h.memoizedState = null),
            (h.updateQueue = null),
            (h.lanes = 0),
            (iu.current = c === null || c.memoizedState === null ? bv : Cv),
            (c = y(E, R)),
            Dr)
        ) {
            N = 0;
            do {
                if (((Dr = !1), (hl = 0), 25 <= N)) throw Error(t(301));
                (N += 1),
                    (Ln = wi = null),
                    (h.updateQueue = null),
                    (iu.current = Rv),
                    (c = y(E, R));
            } while (Dr);
        }
        if (
            ((iu.current = ud),
            (h = wi !== null && wi.next !== null),
            (Ea = 0),
            (Ln = wi = $n = null),
            (vo = !1),
            h)
        )
            throw Error(t(300));
        return c;
    }
    function Tm() {
        var c = hl !== 0;
        return (hl = 0), c;
    }
    function Sr() {
        var c = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null,
        };
        return (
            Ln === null ? ($n.memoizedState = Ln = c) : (Ln = Ln.next = c), Ln
        );
    }
    function bs() {
        if (wi === null) {
            var c = $n.alternate;
            c = c !== null ? c.memoizedState : null;
        } else c = wi.next;
        var h = Ln === null ? $n.memoizedState : Ln.next;
        if (h !== null) (Ln = h), (wi = c);
        else {
            if (c === null) throw Error(t(310));
            (wi = c),
                (c = {
                    memoizedState: wi.memoizedState,
                    baseState: wi.baseState,
                    baseQueue: wi.baseQueue,
                    queue: wi.queue,
                    next: null,
                }),
                Ln === null ? ($n.memoizedState = Ln = c) : (Ln = Ln.next = c);
        }
        return Ln;
    }
    function Zu(c, h) {
        return typeof h == 'function' ? h(c) : h;
    }
    function df(c) {
        var h = bs(),
            y = h.queue;
        if (y === null) throw Error(t(311));
        y.lastRenderedReducer = c;
        var E = wi,
            R = E.baseQueue,
            N = y.pending;
        if (N !== null) {
            if (R !== null) {
                var j = R.next;
                (R.next = N.next), (N.next = j);
            }
            (E.baseQueue = R = N), (y.pending = null);
        }
        if (R !== null) {
            (N = R.next), (E = E.baseState);
            var he = (j = null),
                Se = null,
                Ge = N;
            do {
                var ft = Ge.lane;
                if ((Ea & ft) === ft)
                    Se !== null &&
                        (Se = Se.next =
                            {
                                lane: 0,
                                action: Ge.action,
                                hasEagerState: Ge.hasEagerState,
                                eagerState: Ge.eagerState,
                                next: null,
                            }),
                        (E = Ge.hasEagerState
                            ? Ge.eagerState
                            : c(E, Ge.action));
                else {
                    var dt = {
                        lane: ft,
                        action: Ge.action,
                        hasEagerState: Ge.hasEagerState,
                        eagerState: Ge.eagerState,
                        next: null,
                    };
                    Se === null
                        ? ((he = Se = dt), (j = E))
                        : (Se = Se.next = dt),
                        ($n.lanes |= ft),
                        (yf |= ft);
                }
                Ge = Ge.next;
            } while (Ge !== null && Ge !== N);
            Se === null ? (j = E) : (Se.next = he),
                ws(E, h.memoizedState) || (mn = !0),
                (h.memoizedState = E),
                (h.baseState = j),
                (h.baseQueue = Se),
                (y.lastRenderedState = E);
        }
        if (((c = y.interleaved), c !== null)) {
            R = c;
            do (N = R.lane), ($n.lanes |= N), (yf |= N), (R = R.next);
            while (R !== c);
        } else R === null && (y.lanes = 0);
        return [h.memoizedState, y.dispatch];
    }
    function Ta(c) {
        var h = bs(),
            y = h.queue;
        if (y === null) throw Error(t(311));
        y.lastRenderedReducer = c;
        var E = y.dispatch,
            R = y.pending,
            N = h.memoizedState;
        if (R !== null) {
            y.pending = null;
            var j = (R = R.next);
            do (N = c(N, j.action)), (j = j.next);
            while (j !== R);
            ws(N, h.memoizedState) || (mn = !0),
                (h.memoizedState = N),
                h.baseQueue === null && (h.baseState = N),
                (y.lastRenderedState = N);
        }
        return [N, E];
    }
    function Am() {}
    function bm(c, h) {
        var y = $n,
            E = bs(),
            R = h(),
            N = !ws(E.memoizedState, R);
        if (
            (N && ((E.memoizedState = R), (mn = !0)),
            (E = E.queue),
            Pm(Sv.bind(null, y, E, c), [c]),
            E.getSnapshot !== h ||
                N ||
                (Ln !== null && Ln.memoizedState.tag & 1))
        ) {
            if (
                ((y.flags |= 2048),
                yo(9, pf.bind(null, y, E, R, h), void 0, null),
                Or === null)
            )
                throw Error(t(349));
            (Ea & 30) !== 0 || id(y, h, R);
        }
        return R;
    }
    function id(c, h, y) {
        (c.flags |= 16384),
            (c = { getSnapshot: h, value: y }),
            (h = $n.updateQueue),
            h === null
                ? ((h = { lastEffect: null, stores: null }),
                  ($n.updateQueue = h),
                  (h.stores = [c]))
                : ((y = h.stores), y === null ? (h.stores = [c]) : y.push(c));
    }
    function pf(c, h, y, E) {
        (h.value = y), (h.getSnapshot = E), wv(h) && Cm(c);
    }
    function Sv(c, h, y) {
        return y(function () {
            wv(h) && Cm(c);
        });
    }
    function wv(c) {
        var h = c.getSnapshot;
        c = c.value;
        try {
            var y = h();
            return !ws(c, y);
        } catch {
            return !0;
        }
    }
    function Cm(c) {
        var h = mo(c, 1);
        h !== null && Pa(h, c, 1, -1);
    }
    function Rm(c) {
        var h = Sr();
        return (
            typeof c == 'function' && (c = c()),
            (h.memoizedState = h.baseState = c),
            (c = {
                pending: null,
                interleaved: null,
                lanes: 0,
                dispatch: null,
                lastRenderedReducer: Zu,
                lastRenderedState: c,
            }),
            (h.queue = c),
            (c = c.dispatch = su.bind(null, $n, c)),
            [h.memoizedState, c]
        );
    }
    function yo(c, h, y, E) {
        return (
            (c = { tag: c, create: h, destroy: y, deps: E, next: null }),
            (h = $n.updateQueue),
            h === null
                ? ((h = { lastEffect: null, stores: null }),
                  ($n.updateQueue = h),
                  (h.lastEffect = c.next = c))
                : ((y = h.lastEffect),
                  y === null
                      ? (h.lastEffect = c.next = c)
                      : ((E = y.next),
                        (y.next = c),
                        (c.next = E),
                        (h.lastEffect = c))),
            c
        );
    }
    function Mv() {
        return bs().memoizedState;
    }
    function Go(c, h, y, E) {
        var R = Sr();
        ($n.flags |= c),
            (R.memoizedState = yo(1 | h, y, void 0, E === void 0 ? null : E));
    }
    function mf(c, h, y, E) {
        var R = bs();
        E = E === void 0 ? null : E;
        var N = void 0;
        if (wi !== null) {
            var j = wi.memoizedState;
            if (((N = j.destroy), E !== null && ff(E, j.deps))) {
                R.memoizedState = yo(h, y, N, E);
                return;
            }
        }
        ($n.flags |= c), (R.memoizedState = yo(1 | h, y, N, E));
    }
    function jr(c, h) {
        return Go(8390656, 8, c, h);
    }
    function Pm(c, h) {
        return mf(2048, 8, c, h);
    }
    function Lm(c, h) {
        return mf(4, 2, c, h);
    }
    function Ev(c, h) {
        return mf(4, 4, c, h);
    }
    function Tv(c, h) {
        if (typeof h == 'function')
            return (
                (c = c()),
                h(c),
                function () {
                    h(null);
                }
            );
        if (h != null)
            return (
                (c = c()),
                (h.current = c),
                function () {
                    h.current = null;
                }
            );
    }
    function Im(c, h, y) {
        return (
            (y = y != null ? y.concat([c]) : null),
            mf(4, 4, Tv.bind(null, h, c), y)
        );
    }
    function rd() {}
    function Av(c, h) {
        var y = bs();
        h = h === void 0 ? null : h;
        var E = y.memoizedState;
        return E !== null && h !== null && ff(h, E[1])
            ? E[0]
            : ((y.memoizedState = [c, h]), c);
    }
    function Cs(c, h) {
        var y = bs();
        h = h === void 0 ? null : h;
        var E = y.memoizedState;
        return E !== null && h !== null && ff(h, E[1])
            ? E[0]
            : ((c = c()), (y.memoizedState = [c, h]), c);
    }
    function sd(c, h, y) {
        return (Ea & 21) === 0
            ? (c.baseState && ((c.baseState = !1), (mn = !0)),
              (c.memoizedState = y))
            : (ws(y, h) ||
                  ((y = Bn()), ($n.lanes |= y), (yf |= y), (c.baseState = !0)),
              h);
    }
    function M1(c, h) {
        var y = Sn;
        (Sn = y !== 0 && 4 > y ? y : 4), c(!0);
        var E = ru.transition;
        ru.transition = {};
        try {
            c(!1), h();
        } finally {
            (Sn = y), (ru.transition = E);
        }
    }
    function Aa() {
        return bs().memoizedState;
    }
    function od(c, h, y) {
        var E = ec(c);
        if (
            ((y = {
                lane: E,
                action: y,
                hasEagerState: !1,
                eagerState: null,
                next: null,
            }),
            gf(c))
        )
            ad(h, y);
        else if (((y = uf(c, h, y, E)), y !== null)) {
            var R = Ps();
            Pa(y, c, E, R), ld(y, h, E);
        }
    }
    function su(c, h, y) {
        var E = ec(c),
            R = {
                lane: E,
                action: y,
                hasEagerState: !1,
                eagerState: null,
                next: null,
            };
        if (gf(c)) ad(h, R);
        else {
            var N = c.alternate;
            if (
                c.lanes === 0 &&
                (N === null || N.lanes === 0) &&
                ((N = h.lastRenderedReducer), N !== null)
            )
                try {
                    var j = h.lastRenderedState,
                        he = N(j, y);
                    if (
                        ((R.hasEagerState = !0), (R.eagerState = he), ws(he, j))
                    ) {
                        var Se = h.interleaved;
                        Se === null
                            ? ((R.next = R), Em(h))
                            : ((R.next = Se.next), (Se.next = R)),
                            (h.interleaved = R);
                        return;
                    }
                } catch {
                } finally {
                }
            (y = uf(c, h, R, E)),
                y !== null && ((R = Ps()), Pa(y, c, E, R), ld(y, h, E));
        }
    }
    function gf(c) {
        var h = c.alternate;
        return c === $n || (h !== null && h === $n);
    }
    function ad(c, h) {
        Dr = vo = !0;
        var y = c.pending;
        y === null ? (h.next = h) : ((h.next = y.next), (y.next = h)),
            (c.pending = h);
    }
    function ld(c, h, y) {
        if ((y & 4194240) !== 0) {
            var E = h.lanes;
            (E &= c.pendingLanes), (y |= E), (h.lanes = y), ao(c, y);
        }
    }
    var ud = {
            readContext: Ts,
            useCallback: xr,
            useContext: xr,
            useEffect: xr,
            useImperativeHandle: xr,
            useInsertionEffect: xr,
            useLayoutEffect: xr,
            useMemo: xr,
            useReducer: xr,
            useRef: xr,
            useState: xr,
            useDebugValue: xr,
            useDeferredValue: xr,
            useTransition: xr,
            useMutableSource: xr,
            useSyncExternalStore: xr,
            useId: xr,
            unstable_isNewReconciler: !1,
        },
        bv = {
            readContext: Ts,
            useCallback: function (c, h) {
                return (Sr().memoizedState = [c, h === void 0 ? null : h]), c;
            },
            useContext: Ts,
            useEffect: jr,
            useImperativeHandle: function (c, h, y) {
                return (
                    (y = y != null ? y.concat([c]) : null),
                    Go(4194308, 4, Tv.bind(null, h, c), y)
                );
            },
            useLayoutEffect: function (c, h) {
                return Go(4194308, 4, c, h);
            },
            useInsertionEffect: function (c, h) {
                return Go(4, 2, c, h);
            },
            useMemo: function (c, h) {
                var y = Sr();
                return (
                    (h = h === void 0 ? null : h),
                    (c = c()),
                    (y.memoizedState = [c, h]),
                    c
                );
            },
            useReducer: function (c, h, y) {
                var E = Sr();
                return (
                    (h = y !== void 0 ? y(h) : h),
                    (E.memoizedState = E.baseState = h),
                    (c = {
                        pending: null,
                        interleaved: null,
                        lanes: 0,
                        dispatch: null,
                        lastRenderedReducer: c,
                        lastRenderedState: h,
                    }),
                    (E.queue = c),
                    (c = c.dispatch = od.bind(null, $n, c)),
                    [E.memoizedState, c]
                );
            },
            useRef: function (c) {
                var h = Sr();
                return (c = { current: c }), (h.memoizedState = c);
            },
            useState: Rm,
            useDebugValue: rd,
            useDeferredValue: function (c) {
                return (Sr().memoizedState = c);
            },
            useTransition: function () {
                var c = Rm(!1),
                    h = c[0];
                return (
                    (c = M1.bind(null, c[1])), (Sr().memoizedState = c), [h, c]
                );
            },
            useMutableSource: function () {},
            useSyncExternalStore: function (c, h, y) {
                var E = $n,
                    R = Sr();
                if (ti) {
                    if (y === void 0) throw Error(t(407));
                    y = y();
                } else {
                    if (((y = h()), Or === null)) throw Error(t(349));
                    (Ea & 30) !== 0 || id(E, h, y);
                }
                R.memoizedState = y;
                var N = { value: y, getSnapshot: h };
                return (
                    (R.queue = N),
                    jr(Sv.bind(null, E, N, c), [c]),
                    (E.flags |= 2048),
                    yo(9, pf.bind(null, E, N, y, h), void 0, null),
                    y
                );
            },
            useId: function () {
                var c = Sr(),
                    h = Or.identifierPrefix;
                if (ti) {
                    var y = js,
                        E = St;
                    (y = (E & ~(1 << (32 - Lt(E) - 1))).toString(32) + y),
                        (h = ':' + h + 'R' + y),
                        (y = hl++),
                        0 < y && (h += 'H' + y.toString(32)),
                        (h += ':');
                } else (y = ns++), (h = ':' + h + 'r' + y.toString(32) + ':');
                return (c.memoizedState = h);
            },
            unstable_isNewReconciler: !1,
        },
        Cv = {
            readContext: Ts,
            useCallback: Av,
            useContext: Ts,
            useEffect: Pm,
            useImperativeHandle: Im,
            useInsertionEffect: Lm,
            useLayoutEffect: Ev,
            useMemo: Cs,
            useReducer: df,
            useRef: Mv,
            useState: function () {
                return df(Zu);
            },
            useDebugValue: rd,
            useDeferredValue: function (c) {
                var h = bs();
                return sd(h, wi.memoizedState, c);
            },
            useTransition: function () {
                var c = df(Zu)[0],
                    h = bs().memoizedState;
                return [c, h];
            },
            useMutableSource: Am,
            useSyncExternalStore: bm,
            useId: Aa,
            unstable_isNewReconciler: !1,
        },
        Rv = {
            readContext: Ts,
            useCallback: Av,
            useContext: Ts,
            useEffect: Pm,
            useImperativeHandle: Im,
            useInsertionEffect: Lm,
            useLayoutEffect: Ev,
            useMemo: Cs,
            useReducer: Ta,
            useRef: Mv,
            useState: function () {
                return Ta(Zu);
            },
            useDebugValue: rd,
            useDeferredValue: function (c) {
                var h = bs();
                return wi === null
                    ? (h.memoizedState = c)
                    : sd(h, wi.memoizedState, c);
            },
            useTransition: function () {
                var c = Ta(Zu)[0],
                    h = bs().memoizedState;
                return [c, h];
            },
            useMutableSource: Am,
            useSyncExternalStore: bm,
            useId: Aa,
            unstable_isNewReconciler: !1,
        };
    function Ys(c, h) {
        if (c && c.defaultProps) {
            (h = J({}, h)), (c = c.defaultProps);
            for (var y in c) h[y] === void 0 && (h[y] = c[y]);
            return h;
        }
        return h;
    }
    function vf(c, h, y, E) {
        (h = c.memoizedState),
            (y = y(E, h)),
            (y = y == null ? h : J({}, h, y)),
            (c.memoizedState = y),
            c.lanes === 0 && (c.updateQueue.baseState = y);
    }
    var cd = {
        isMounted: function (c) {
            return (c = c._reactInternals) ? Q(c) === c : !1;
        },
        enqueueSetState: function (c, h, y) {
            c = c._reactInternals;
            var E = Ps(),
                R = ec(c),
                N = Gn(E, R);
            (N.payload = h),
                y != null && (N.callback = y),
                (h = li(c, N, R)),
                h !== null && (Pa(h, c, R, E), Ir(h, c, R));
        },
        enqueueReplaceState: function (c, h, y) {
            c = c._reactInternals;
            var E = Ps(),
                R = ec(c),
                N = Gn(E, R);
            (N.tag = 1),
                (N.payload = h),
                y != null && (N.callback = y),
                (h = li(c, N, R)),
                h !== null && (Pa(h, c, R, E), Ir(h, c, R));
        },
        enqueueForceUpdate: function (c, h) {
            c = c._reactInternals;
            var y = Ps(),
                E = ec(c),
                R = Gn(y, E);
            (R.tag = 2),
                h != null && (R.callback = h),
                (h = li(c, R, E)),
                h !== null && (Pa(h, c, E, y), Ir(h, c, E));
        },
    };
    function Pv(c, h, y, E, R, N, j) {
        return (
            (c = c.stateNode),
            typeof c.shouldComponentUpdate == 'function'
                ? c.shouldComponentUpdate(E, N, j)
                : h.prototype && h.prototype.isPureReactComponent
                  ? !zl(y, E) || !zl(R, N)
                  : !0
        );
    }
    function p(c, h, y) {
        var E = !1,
            R = va,
            N = h.contextType;
        return (
            typeof N == 'object' && N !== null
                ? (N = Ts(N))
                : ((R = Lr(h) ? ya : yr.current),
                  (E = h.contextTypes),
                  (N = (E = E != null) ? Xl(c, R) : va)),
            (h = new h(y, N)),
            (c.memoizedState =
                h.state !== null && h.state !== void 0 ? h.state : null),
            (h.updater = cd),
            (c.stateNode = h),
            (h._reactInternals = c),
            E &&
                ((c = c.stateNode),
                (c.__reactInternalMemoizedUnmaskedChildContext = R),
                (c.__reactInternalMemoizedMaskedChildContext = N)),
            h
        );
    }
    function g(c, h, y, E) {
        (c = h.state),
            typeof h.componentWillReceiveProps == 'function' &&
                h.componentWillReceiveProps(y, E),
            typeof h.UNSAFE_componentWillReceiveProps == 'function' &&
                h.UNSAFE_componentWillReceiveProps(y, E),
            h.state !== c && cd.enqueueReplaceState(h, h.state, null);
    }
    function M(c, h, y, E) {
        var R = c.stateNode;
        (R.props = y), (R.state = c.memoizedState), (R.refs = {}), dn(c);
        var N = h.contextType;
        typeof N == 'object' && N !== null
            ? (R.context = Ts(N))
            : ((N = Lr(h) ? ya : yr.current), (R.context = Xl(c, N))),
            (R.state = c.memoizedState),
            (N = h.getDerivedStateFromProps),
            typeof N == 'function' &&
                (vf(c, h, N, y), (R.state = c.memoizedState)),
            typeof h.getDerivedStateFromProps == 'function' ||
                typeof R.getSnapshotBeforeUpdate == 'function' ||
                (typeof R.UNSAFE_componentWillMount != 'function' &&
                    typeof R.componentWillMount != 'function') ||
                ((h = R.state),
                typeof R.componentWillMount == 'function' &&
                    R.componentWillMount(),
                typeof R.UNSAFE_componentWillMount == 'function' &&
                    R.UNSAFE_componentWillMount(),
                h !== R.state && cd.enqueueReplaceState(R, R.state, null),
                Si(c, y, R, E),
                (R.state = c.memoizedState)),
            typeof R.componentDidMount == 'function' && (c.flags |= 4194308);
    }
    function C(c, h) {
        try {
            var y = '',
                E = h;
            do (y += ae(E)), (E = E.return);
            while (E);
            var R = y;
        } catch (N) {
            R =
                `
Error generating stack: ` +
                N.message +
                `
` +
                N.stack;
        }
        return { value: c, source: h, stack: R, digest: null };
    }
    function k(c, h, y) {
        return { value: c, source: null, stack: y ?? null, digest: h ?? null };
    }
    function B(c, h) {
        try {
            console.error(h.value);
        } catch (y) {
            setTimeout(function () {
                throw y;
            });
        }
    }
    var ce = typeof WeakMap == 'function' ? WeakMap : Map;
    function Te(c, h, y) {
        (y = Gn(-1, y)), (y.tag = 3), (y.payload = { element: null });
        var E = h.value;
        return (
            (y.callback = function () {
                Nv || ((Nv = !0), (D1 = E)), B(c, h);
            }),
            y
        );
    }
    function $e(c, h, y) {
        (y = Gn(-1, y)), (y.tag = 3);
        var E = c.type.getDerivedStateFromError;
        if (typeof E == 'function') {
            var R = h.value;
            (y.payload = function () {
                return E(R);
            }),
                (y.callback = function () {
                    B(c, h);
                });
        }
        var N = c.stateNode;
        return (
            N !== null &&
                typeof N.componentDidCatch == 'function' &&
                (y.callback = function () {
                    B(c, h),
                        typeof E != 'function' &&
                            (Ju === null
                                ? (Ju = new Set([this]))
                                : Ju.add(this));
                    var j = h.stack;
                    this.componentDidCatch(h.value, {
                        componentStack: j !== null ? j : '',
                    });
                }),
            y
        );
    }
    function vt(c, h, y) {
        var E = c.pingCache;
        if (E === null) {
            E = c.pingCache = new ce();
            var R = new Set();
            E.set(h, R);
        } else (R = E.get(h)), R === void 0 && ((R = new Set()), E.set(h, R));
        R.has(y) || (R.add(y), (c = RN.bind(null, c, h, y)), h.then(c, c));
    }
    function Ot(c) {
        do {
            var h;
            if (
                ((h = c.tag === 13) &&
                    ((h = c.memoizedState),
                    (h = h !== null ? h.dehydrated !== null : !0)),
                h)
            )
                return c;
            c = c.return;
        } while (c !== null);
        return null;
    }
    function ln(c, h, y, E, R) {
        return (c.mode & 1) === 0
            ? (c === h
                  ? (c.flags |= 65536)
                  : ((c.flags |= 128),
                    (y.flags |= 131072),
                    (y.flags &= -52805),
                    y.tag === 1 &&
                        (y.alternate === null
                            ? (y.tag = 17)
                            : ((h = Gn(-1, 1)), (h.tag = 2), li(y, h, 1))),
                    (y.lanes |= 1)),
              c)
            : ((c.flags |= 65536), (c.lanes = R), c);
    }
    var Yt = b.ReactCurrentOwner,
        mn = !1;
    function Rt(c, h, y, E) {
        h.child = c === null ? of(h, null, y, E) : Zl(h, c.child, y, E);
    }
    function wr(c, h, y, E, R) {
        y = y.render;
        var N = h.ref;
        return (
            cl(h, R),
            (E = hf(c, h, y, E, N, R)),
            (y = Tm()),
            c !== null && !mn
                ? ((h.updateQueue = c.updateQueue),
                  (h.flags &= -2053),
                  (c.lanes &= ~R),
                  ou(c, h, R))
                : (ti && y && ym(h), (h.flags |= 1), Rt(c, h, E, R), h.child)
        );
    }
    function Rs(c, h, y, E, R) {
        if (c === null) {
            var N = y.type;
            return typeof N == 'function' &&
                !z1(N) &&
                N.defaultProps === void 0 &&
                y.compare === null &&
                y.defaultProps === void 0
                ? ((h.tag = 15), (h.type = N), Ne(c, h, N, E, R))
                : ((c = Gv(y.type, null, E, h, h.mode, R)),
                  (c.ref = h.ref),
                  (c.return = h),
                  (h.child = c));
        }
        if (((N = c.child), (c.lanes & R) === 0)) {
            var j = N.memoizedProps;
            if (
                ((y = y.compare),
                (y = y !== null ? y : zl),
                y(j, E) && c.ref === h.ref)
            )
                return ou(c, h, R);
        }
        return (
            (h.flags |= 1),
            (c = nc(N, E)),
            (c.ref = h.ref),
            (c.return = h),
            (h.child = c)
        );
    }
    function Ne(c, h, y, E, R) {
        if (c !== null) {
            var N = c.memoizedProps;
            if (zl(N, E) && c.ref === h.ref)
                if (((mn = !1), (h.pendingProps = E = N), (c.lanes & R) !== 0))
                    (c.flags & 131072) !== 0 && (mn = !0);
                else return (h.lanes = c.lanes), ou(c, h, R);
        }
        return At(c, h, y, E, R);
    }
    function be(c, h, y) {
        var E = h.pendingProps,
            R = E.children,
            N = c !== null ? c.memoizedState : null;
        if (E.mode === 'hidden')
            if ((h.mode & 1) === 0)
                (h.memoizedState = {
                    baseLanes: 0,
                    cachePool: null,
                    transitions: null,
                }),
                    Yn(hd, _o),
                    (_o |= y);
            else {
                if ((y & 1073741824) === 0)
                    return (
                        (c = N !== null ? N.baseLanes | y : y),
                        (h.lanes = h.childLanes = 1073741824),
                        (h.memoizedState = {
                            baseLanes: c,
                            cachePool: null,
                            transitions: null,
                        }),
                        (h.updateQueue = null),
                        Yn(hd, _o),
                        (_o |= c),
                        null
                    );
                (h.memoizedState = {
                    baseLanes: 0,
                    cachePool: null,
                    transitions: null,
                }),
                    (E = N !== null ? N.baseLanes : y),
                    Yn(hd, _o),
                    (_o |= E);
            }
        else
            N !== null
                ? ((E = N.baseLanes | y), (h.memoizedState = null))
                : (E = y),
                Yn(hd, _o),
                (_o |= E);
        return Rt(c, h, R, y), h.child;
    }
    function qe(c, h) {
        var y = h.ref;
        ((c === null && y !== null) || (c !== null && c.ref !== y)) &&
            ((h.flags |= 512), (h.flags |= 2097152));
    }
    function At(c, h, y, E, R) {
        var N = Lr(y) ? ya : yr.current;
        return (
            (N = Xl(h, N)),
            cl(h, R),
            (y = hf(c, h, y, E, N, R)),
            (E = Tm()),
            c !== null && !mn
                ? ((h.updateQueue = c.updateQueue),
                  (h.flags &= -2053),
                  (c.lanes &= ~R),
                  ou(c, h, R))
                : (ti && E && ym(h), (h.flags |= 1), Rt(c, h, y, R), h.child)
        );
    }
    function Vt(c, h, y, E, R) {
        if (Lr(y)) {
            var N = !0;
            Yl(h);
        } else N = !1;
        if ((cl(h, R), h.stateNode === null))
            Iv(c, h), p(h, y, E), M(h, y, E, R), (E = !0);
        else if (c === null) {
            var j = h.stateNode,
                he = h.memoizedProps;
            j.props = he;
            var Se = j.context,
                Ge = y.contextType;
            typeof Ge == 'object' && Ge !== null
                ? (Ge = Ts(Ge))
                : ((Ge = Lr(y) ? ya : yr.current), (Ge = Xl(h, Ge)));
            var ft = y.getDerivedStateFromProps,
                dt =
                    typeof ft == 'function' ||
                    typeof j.getSnapshotBeforeUpdate == 'function';
            dt ||
                (typeof j.UNSAFE_componentWillReceiveProps != 'function' &&
                    typeof j.componentWillReceiveProps != 'function') ||
                ((he !== E || Se !== Ge) && g(h, j, E, Ge)),
                (Hn = !1);
            var ct = h.memoizedState;
            (j.state = ct),
                Si(h, E, j, R),
                (Se = h.memoizedState),
                he !== E || ct !== Se || Hr.current || Hn
                    ? (typeof ft == 'function' &&
                          (vf(h, y, ft, E), (Se = h.memoizedState)),
                      (he = Hn || Pv(h, y, he, E, ct, Se, Ge))
                          ? (dt ||
                                (typeof j.UNSAFE_componentWillMount !=
                                    'function' &&
                                    typeof j.componentWillMount !=
                                        'function') ||
                                (typeof j.componentWillMount == 'function' &&
                                    j.componentWillMount(),
                                typeof j.UNSAFE_componentWillMount ==
                                    'function' &&
                                    j.UNSAFE_componentWillMount()),
                            typeof j.componentDidMount == 'function' &&
                                (h.flags |= 4194308))
                          : (typeof j.componentDidMount == 'function' &&
                                (h.flags |= 4194308),
                            (h.memoizedProps = E),
                            (h.memoizedState = Se)),
                      (j.props = E),
                      (j.state = Se),
                      (j.context = Ge),
                      (E = he))
                    : (typeof j.componentDidMount == 'function' &&
                          (h.flags |= 4194308),
                      (E = !1));
        } else {
            (j = h.stateNode),
                bi(c, h),
                (he = h.memoizedProps),
                (Ge = h.type === h.elementType ? he : Ys(h.type, he)),
                (j.props = Ge),
                (dt = h.pendingProps),
                (ct = j.context),
                (Se = y.contextType),
                typeof Se == 'object' && Se !== null
                    ? (Se = Ts(Se))
                    : ((Se = Lr(y) ? ya : yr.current), (Se = Xl(h, Se)));
            var It = y.getDerivedStateFromProps;
            (ft =
                typeof It == 'function' ||
                typeof j.getSnapshotBeforeUpdate == 'function') ||
                (typeof j.UNSAFE_componentWillReceiveProps != 'function' &&
                    typeof j.componentWillReceiveProps != 'function') ||
                ((he !== dt || ct !== Se) && g(h, j, E, Se)),
                (Hn = !1),
                (ct = h.memoizedState),
                (j.state = ct),
                Si(h, E, j, R);
            var Ft = h.memoizedState;
            he !== dt || ct !== Ft || Hr.current || Hn
                ? (typeof It == 'function' &&
                      (vf(h, y, It, E), (Ft = h.memoizedState)),
                  (Ge = Hn || Pv(h, y, Ge, E, ct, Ft, Se) || !1)
                      ? (ft ||
                            (typeof j.UNSAFE_componentWillUpdate !=
                                'function' &&
                                typeof j.componentWillUpdate != 'function') ||
                            (typeof j.componentWillUpdate == 'function' &&
                                j.componentWillUpdate(E, Ft, Se),
                            typeof j.UNSAFE_componentWillUpdate == 'function' &&
                                j.UNSAFE_componentWillUpdate(E, Ft, Se)),
                        typeof j.componentDidUpdate == 'function' &&
                            (h.flags |= 4),
                        typeof j.getSnapshotBeforeUpdate == 'function' &&
                            (h.flags |= 1024))
                      : (typeof j.componentDidUpdate != 'function' ||
                            (he === c.memoizedProps &&
                                ct === c.memoizedState) ||
                            (h.flags |= 4),
                        typeof j.getSnapshotBeforeUpdate != 'function' ||
                            (he === c.memoizedProps &&
                                ct === c.memoizedState) ||
                            (h.flags |= 1024),
                        (h.memoizedProps = E),
                        (h.memoizedState = Ft)),
                  (j.props = E),
                  (j.state = Ft),
                  (j.context = Se),
                  (E = Ge))
                : (typeof j.componentDidUpdate != 'function' ||
                      (he === c.memoizedProps && ct === c.memoizedState) ||
                      (h.flags |= 4),
                  typeof j.getSnapshotBeforeUpdate != 'function' ||
                      (he === c.memoizedProps && ct === c.memoizedState) ||
                      (h.flags |= 1024),
                  (E = !1));
        }
        return fn(c, h, y, E, N, R);
    }
    function fn(c, h, y, E, R, N) {
        qe(c, h);
        var j = (h.flags & 128) !== 0;
        if (!E && !j) return R && gm(h, y, !1), ou(c, h, N);
        (E = h.stateNode), (Yt.current = h);
        var he =
            j && typeof y.getDerivedStateFromError != 'function'
                ? null
                : E.render();
        return (
            (h.flags |= 1),
            c !== null && j
                ? ((h.child = Zl(h, c.child, null, N)),
                  (h.child = Zl(h, null, he, N)))
                : Rt(c, h, he, N),
            (h.memoizedState = E.state),
            R && gm(h, y, !0),
            h.child
        );
    }
    function un(c) {
        var h = c.stateNode;
        h.pendingContext
            ? mm(c, h.pendingContext, h.pendingContext !== h.context)
            : h.context && mm(c, h.context, !1),
            cf(c, h.containerInfo);
    }
    function bn(c, h, y, E, R) {
        return ul(), ju(R), (h.flags |= 256), Rt(c, h, y, E), h.child;
    }
    var ki = { dehydrated: null, treeContext: null, retryLane: 0 };
    function Tn(c) {
        return { baseLanes: c, cachePool: null, transitions: null };
    }
    function ba(c, h, y) {
        var E = h.pendingProps,
            R = ni.current,
            N = !1,
            j = (h.flags & 128) !== 0,
            he;
        if (
            ((he = j) ||
                (he =
                    c !== null && c.memoizedState === null
                        ? !1
                        : (R & 2) !== 0),
            he
                ? ((N = !0), (h.flags &= -129))
                : (c === null || c.memoizedState !== null) && (R |= 1),
            Yn(ni, R & 1),
            c === null)
        )
            return (
                td(h),
                (c = h.memoizedState),
                c !== null && ((c = c.dehydrated), c !== null)
                    ? ((h.mode & 1) === 0
                          ? (h.lanes = 1)
                          : c.data === '$!'
                            ? (h.lanes = 8)
                            : (h.lanes = 1073741824),
                      null)
                    : ((j = E.children),
                      (c = E.fallback),
                      N
                          ? ((E = h.mode),
                            (N = h.child),
                            (j = { mode: 'hidden', children: j }),
                            (E & 1) === 0 && N !== null
                                ? ((N.childLanes = 0), (N.pendingProps = j))
                                : (N = Wv(j, E, 0, null)),
                            (c = wf(c, E, y, null)),
                            (N.return = h),
                            (c.return = h),
                            (N.sibling = c),
                            (h.child = N),
                            (h.child.memoizedState = Tn(y)),
                            (h.memoizedState = ki),
                            c)
                          : Dm(h, j))
            );
        if (
            ((R = c.memoizedState),
            R !== null && ((he = R.dehydrated), he !== null))
        )
            return vN(c, h, j, E, he, R, y);
        if (N) {
            (N = E.fallback), (j = h.mode), (R = c.child), (he = R.sibling);
            var Se = { mode: 'hidden', children: E.children };
            return (
                (j & 1) === 0 && h.child !== R
                    ? ((E = h.child),
                      (E.childLanes = 0),
                      (E.pendingProps = Se),
                      (h.deletions = null))
                    : ((E = nc(R, Se)),
                      (E.subtreeFlags = R.subtreeFlags & 14680064)),
                he !== null
                    ? (N = nc(he, N))
                    : ((N = wf(N, j, y, null)), (N.flags |= 2)),
                (N.return = h),
                (E.return = h),
                (E.sibling = N),
                (h.child = E),
                (E = N),
                (N = h.child),
                (j = c.child.memoizedState),
                (j =
                    j === null
                        ? Tn(y)
                        : {
                              baseLanes: j.baseLanes | y,
                              cachePool: null,
                              transitions: j.transitions,
                          }),
                (N.memoizedState = j),
                (N.childLanes = c.childLanes & ~y),
                (h.memoizedState = ki),
                E
            );
        }
        return (
            (N = c.child),
            (c = N.sibling),
            (E = nc(N, { mode: 'visible', children: E.children })),
            (h.mode & 1) === 0 && (E.lanes = y),
            (E.return = h),
            (E.sibling = null),
            c !== null &&
                ((y = h.deletions),
                y === null
                    ? ((h.deletions = [c]), (h.flags |= 16))
                    : y.push(c)),
            (h.child = E),
            (h.memoizedState = null),
            E
        );
    }
    function Dm(c, h) {
        return (
            (h = Wv({ mode: 'visible', children: h }, c.mode, 0, null)),
            (h.return = c),
            (c.child = h)
        );
    }
    function Lv(c, h, y, E) {
        return (
            E !== null && ju(E),
            Zl(h, c.child, null, y),
            (c = Dm(h, h.pendingProps.children)),
            (c.flags |= 2),
            (h.memoizedState = null),
            c
        );
    }
    function vN(c, h, y, E, R, N, j) {
        if (y)
            return h.flags & 256
                ? ((h.flags &= -257), (E = k(Error(t(422)))), Lv(c, h, j, E))
                : h.memoizedState !== null
                  ? ((h.child = c.child), (h.flags |= 128), null)
                  : ((N = E.fallback),
                    (R = h.mode),
                    (E = Wv(
                        { mode: 'visible', children: E.children },
                        R,
                        0,
                        null
                    )),
                    (N = wf(N, R, j, null)),
                    (N.flags |= 2),
                    (E.return = h),
                    (N.return = h),
                    (E.sibling = N),
                    (h.child = E),
                    (h.mode & 1) !== 0 && Zl(h, c.child, null, j),
                    (h.child.memoizedState = Tn(j)),
                    (h.memoizedState = ki),
                    N);
        if ((h.mode & 1) === 0) return Lv(c, h, j, null);
        if (R.data === '$!') {
            if (((E = R.nextSibling && R.nextSibling.dataset), E))
                var he = E.dgst;
            return (
                (E = he),
                (N = Error(t(419))),
                (E = k(N, E, void 0)),
                Lv(c, h, j, E)
            );
        }
        if (((he = (j & c.childLanes) !== 0), mn || he)) {
            if (((E = Or), E !== null)) {
                switch (j & -j) {
                    case 4:
                        R = 2;
                        break;
                    case 16:
                        R = 8;
                        break;
                    case 64:
                    case 128:
                    case 256:
                    case 512:
                    case 1024:
                    case 2048:
                    case 4096:
                    case 8192:
                    case 16384:
                    case 32768:
                    case 65536:
                    case 131072:
                    case 262144:
                    case 524288:
                    case 1048576:
                    case 2097152:
                    case 4194304:
                    case 8388608:
                    case 16777216:
                    case 33554432:
                    case 67108864:
                        R = 32;
                        break;
                    case 536870912:
                        R = 268435456;
                        break;
                    default:
                        R = 0;
                }
                (R = (R & (E.suspendedLanes | j)) !== 0 ? 0 : R),
                    R !== 0 &&
                        R !== N.retryLane &&
                        ((N.retryLane = R), mo(c, R), Pa(E, c, R, -1));
            }
            return B1(), (E = k(Error(t(421)))), Lv(c, h, j, E);
        }
        return R.data === '$?'
            ? ((h.flags |= 128),
              (h.child = c.child),
              (h = PN.bind(null, c)),
              (R._reactRetry = h),
              null)
            : ((c = N.treeContext),
              (Wr = ma(R.nextSibling)),
              (_r = h),
              (ti = !0),
              (Xs = null),
              c !== null &&
                  ((Gr[ur++] = St),
                  (Gr[ur++] = js),
                  (Gr[ur++] = Kl),
                  (St = c.id),
                  (js = c.overflow),
                  (Kl = h)),
              (h = Dm(h, E.children)),
              (h.flags |= 4096),
              h);
    }
    function vA(c, h, y) {
        c.lanes |= h;
        var E = c.alternate;
        E !== null && (E.lanes |= h), lf(c.return, h, y);
    }
    function E1(c, h, y, E, R) {
        var N = c.memoizedState;
        N === null
            ? (c.memoizedState = {
                  isBackwards: h,
                  rendering: null,
                  renderingStartTime: 0,
                  last: E,
                  tail: y,
                  tailMode: R,
              })
            : ((N.isBackwards = h),
              (N.rendering = null),
              (N.renderingStartTime = 0),
              (N.last = E),
              (N.tail = y),
              (N.tailMode = R));
    }
    function yA(c, h, y) {
        var E = h.pendingProps,
            R = E.revealOrder,
            N = E.tail;
        if ((Rt(c, h, E.children, y), (E = ni.current), (E & 2) !== 0))
            (E = (E & 1) | 2), (h.flags |= 128);
        else {
            if (c !== null && (c.flags & 128) !== 0)
                e: for (c = h.child; c !== null; ) {
                    if (c.tag === 13) c.memoizedState !== null && vA(c, y, h);
                    else if (c.tag === 19) vA(c, y, h);
                    else if (c.child !== null) {
                        (c.child.return = c), (c = c.child);
                        continue;
                    }
                    if (c === h) break e;
                    for (; c.sibling === null; ) {
                        if (c.return === null || c.return === h) break e;
                        c = c.return;
                    }
                    (c.sibling.return = c.return), (c = c.sibling);
                }
            E &= 1;
        }
        if ((Yn(ni, E), (h.mode & 1) === 0)) h.memoizedState = null;
        else
            switch (R) {
                case 'forwards':
                    for (y = h.child, R = null; y !== null; )
                        (c = y.alternate),
                            c !== null && go(c) === null && (R = y),
                            (y = y.sibling);
                    (y = R),
                        y === null
                            ? ((R = h.child), (h.child = null))
                            : ((R = y.sibling), (y.sibling = null)),
                        E1(h, !1, R, y, N);
                    break;
                case 'backwards':
                    for (y = null, R = h.child, h.child = null; R !== null; ) {
                        if (((c = R.alternate), c !== null && go(c) === null)) {
                            h.child = R;
                            break;
                        }
                        (c = R.sibling), (R.sibling = y), (y = R), (R = c);
                    }
                    E1(h, !0, y, null, N);
                    break;
                case 'together':
                    E1(h, !1, null, null, void 0);
                    break;
                default:
                    h.memoizedState = null;
            }
        return h.child;
    }
    function Iv(c, h) {
        (h.mode & 1) === 0 &&
            c !== null &&
            ((c.alternate = null), (h.alternate = null), (h.flags |= 2));
    }
    function ou(c, h, y) {
        if (
            (c !== null && (h.dependencies = c.dependencies),
            (yf |= h.lanes),
            (y & h.childLanes) === 0)
        )
            return null;
        if (c !== null && h.child !== c.child) throw Error(t(153));
        if (h.child !== null) {
            for (
                c = h.child,
                    y = nc(c, c.pendingProps),
                    h.child = y,
                    y.return = h;
                c.sibling !== null;

            )
                (c = c.sibling),
                    (y = y.sibling = nc(c, c.pendingProps)),
                    (y.return = h);
            y.sibling = null;
        }
        return h.child;
    }
    function yN(c, h, y) {
        switch (h.tag) {
            case 3:
                un(h), ul();
                break;
            case 5:
                nu(h);
                break;
            case 1:
                Lr(h.type) && Yl(h);
                break;
            case 4:
                cf(h, h.stateNode.containerInfo);
                break;
            case 10:
                var E = h.type._context,
                    R = h.memoizedProps.value;
                Yn($l, E._currentValue), (E._currentValue = R);
                break;
            case 13:
                if (((E = h.memoizedState), E !== null))
                    return E.dehydrated !== null
                        ? (Yn(ni, ni.current & 1), (h.flags |= 128), null)
                        : (y & h.child.childLanes) !== 0
                          ? ba(c, h, y)
                          : (Yn(ni, ni.current & 1),
                            (c = ou(c, h, y)),
                            c !== null ? c.sibling : null);
                Yn(ni, ni.current & 1);
                break;
            case 19:
                if (((E = (y & h.childLanes) !== 0), (c.flags & 128) !== 0)) {
                    if (E) return yA(c, h, y);
                    h.flags |= 128;
                }
                if (
                    ((R = h.memoizedState),
                    R !== null &&
                        ((R.rendering = null),
                        (R.tail = null),
                        (R.lastEffect = null)),
                    Yn(ni, ni.current),
                    E)
                )
                    break;
                return null;
            case 22:
            case 23:
                return (h.lanes = 0), be(c, h, y);
        }
        return ou(c, h, y);
    }
    var _A, T1, xA, SA;
    (_A = function (c, h) {
        for (var y = h.child; y !== null; ) {
            if (y.tag === 5 || y.tag === 6) c.appendChild(y.stateNode);
            else if (y.tag !== 4 && y.child !== null) {
                (y.child.return = y), (y = y.child);
                continue;
            }
            if (y === h) break;
            for (; y.sibling === null; ) {
                if (y.return === null || y.return === h) return;
                y = y.return;
            }
            (y.sibling.return = y.return), (y = y.sibling);
        }
    }),
        (T1 = function () {}),
        (xA = function (c, h, y, E) {
            var R = c.memoizedProps;
            if (R !== E) {
                (c = h.stateNode), Ui(As.current);
                var N = null;
                switch (y) {
                    case 'input':
                        (R = Fe(c, R)), (E = Fe(c, E)), (N = []);
                        break;
                    case 'select':
                        (R = J({}, R, { value: void 0 })),
                            (E = J({}, E, { value: void 0 })),
                            (N = []);
                        break;
                    case 'textarea':
                        (R = Me(c, R)), (E = Me(c, E)), (N = []);
                        break;
                    default:
                        typeof R.onClick != 'function' &&
                            typeof E.onClick == 'function' &&
                            (c.onclick = Jc);
                }
                Ct(y, E);
                var j;
                y = null;
                for (Ge in R)
                    if (
                        !E.hasOwnProperty(Ge) &&
                        R.hasOwnProperty(Ge) &&
                        R[Ge] != null
                    )
                        if (Ge === 'style') {
                            var he = R[Ge];
                            for (j in he)
                                he.hasOwnProperty(j) &&
                                    (y || (y = {}), (y[j] = ''));
                        } else
                            Ge !== 'dangerouslySetInnerHTML' &&
                                Ge !== 'children' &&
                                Ge !== 'suppressContentEditableWarning' &&
                                Ge !== 'suppressHydrationWarning' &&
                                Ge !== 'autoFocus' &&
                                (i.hasOwnProperty(Ge)
                                    ? N || (N = [])
                                    : (N = N || []).push(Ge, null));
                for (Ge in E) {
                    var Se = E[Ge];
                    if (
                        ((he = R != null ? R[Ge] : void 0),
                        E.hasOwnProperty(Ge) &&
                            Se !== he &&
                            (Se != null || he != null))
                    )
                        if (Ge === 'style')
                            if (he) {
                                for (j in he)
                                    !he.hasOwnProperty(j) ||
                                        (Se && Se.hasOwnProperty(j)) ||
                                        (y || (y = {}), (y[j] = ''));
                                for (j in Se)
                                    Se.hasOwnProperty(j) &&
                                        he[j] !== Se[j] &&
                                        (y || (y = {}), (y[j] = Se[j]));
                            } else
                                y || (N || (N = []), N.push(Ge, y)), (y = Se);
                        else
                            Ge === 'dangerouslySetInnerHTML'
                                ? ((Se = Se ? Se.__html : void 0),
                                  (he = he ? he.__html : void 0),
                                  Se != null &&
                                      he !== Se &&
                                      (N = N || []).push(Ge, Se))
                                : Ge === 'children'
                                  ? (typeof Se != 'string' &&
                                        typeof Se != 'number') ||
                                    (N = N || []).push(Ge, '' + Se)
                                  : Ge !== 'suppressContentEditableWarning' &&
                                    Ge !== 'suppressHydrationWarning' &&
                                    (i.hasOwnProperty(Ge)
                                        ? (Se != null &&
                                              Ge === 'onScroll' &&
                                              Kn('scroll', c),
                                          N || he === Se || (N = []))
                                        : (N = N || []).push(Ge, Se));
                }
                y && (N = N || []).push('style', y);
                var Ge = N;
                (h.updateQueue = Ge) && (h.flags |= 4);
            }
        }),
        (SA = function (c, h, y, E) {
            y !== E && (h.flags |= 4);
        });
    function Om(c, h) {
        if (!ti)
            switch (c.tailMode) {
                case 'hidden':
                    h = c.tail;
                    for (var y = null; h !== null; )
                        h.alternate !== null && (y = h), (h = h.sibling);
                    y === null ? (c.tail = null) : (y.sibling = null);
                    break;
                case 'collapsed':
                    y = c.tail;
                    for (var E = null; y !== null; )
                        y.alternate !== null && (E = y), (y = y.sibling);
                    E === null
                        ? h || c.tail === null
                            ? (c.tail = null)
                            : (c.tail.sibling = null)
                        : (E.sibling = null);
            }
    }
    function is(c) {
        var h = c.alternate !== null && c.alternate.child === c.child,
            y = 0,
            E = 0;
        if (h)
            for (var R = c.child; R !== null; )
                (y |= R.lanes | R.childLanes),
                    (E |= R.subtreeFlags & 14680064),
                    (E |= R.flags & 14680064),
                    (R.return = c),
                    (R = R.sibling);
        else
            for (R = c.child; R !== null; )
                (y |= R.lanes | R.childLanes),
                    (E |= R.subtreeFlags),
                    (E |= R.flags),
                    (R.return = c),
                    (R = R.sibling);
        return (c.subtreeFlags |= E), (c.childLanes = y), h;
    }
    function _N(c, h, y) {
        var E = h.pendingProps;
        switch ((xa(h), h.tag)) {
            case 2:
            case 16:
            case 15:
            case 0:
            case 11:
            case 7:
            case 8:
            case 12:
            case 9:
            case 14:
                return is(h), null;
            case 1:
                return Lr(h.type) && Qc(), is(h), null;
            case 3:
                return (
                    (E = h.stateNode),
                    fl(),
                    Zn(Hr),
                    Zn(yr),
                    Ho(),
                    E.pendingContext &&
                        ((E.context = E.pendingContext),
                        (E.pendingContext = null)),
                    (c === null || c.child === null) &&
                        (Wu(h)
                            ? (h.flags |= 4)
                            : c === null ||
                              (c.memoizedState.isDehydrated &&
                                  (h.flags & 256) === 0) ||
                              ((h.flags |= 1024),
                              Xs !== null && (k1(Xs), (Xs = null)))),
                    T1(c, h),
                    is(h),
                    null
                );
            case 5:
                qu(h);
                var R = Ui(Ma.current);
                if (((y = h.type), c !== null && h.stateNode != null))
                    xA(c, h, y, E, R),
                        c.ref !== h.ref &&
                            ((h.flags |= 512), (h.flags |= 2097152));
                else {
                    if (!E) {
                        if (h.stateNode === null) throw Error(t(166));
                        return is(h), null;
                    }
                    if (((c = Ui(As.current)), Wu(h))) {
                        (E = h.stateNode), (y = h.type);
                        var N = h.memoizedProps;
                        switch (
                            ((E[Yi] = h),
                            (E[Gu] = N),
                            (c = (h.mode & 1) !== 0),
                            y)
                        ) {
                            case 'dialog':
                                Kn('cancel', E), Kn('close', E);
                                break;
                            case 'iframe':
                            case 'object':
                            case 'embed':
                                Kn('load', E);
                                break;
                            case 'video':
                            case 'audio':
                                for (R = 0; R < al.length; R++) Kn(al[R], E);
                                break;
                            case 'source':
                                Kn('error', E);
                                break;
                            case 'img':
                            case 'image':
                            case 'link':
                                Kn('error', E), Kn('load', E);
                                break;
                            case 'details':
                                Kn('toggle', E);
                                break;
                            case 'input':
                                We(E, N), Kn('invalid', E);
                                break;
                            case 'select':
                                (E._wrapperState = {
                                    wasMultiple: !!N.multiple,
                                }),
                                    Kn('invalid', E);
                                break;
                            case 'textarea':
                                Le(E, N), Kn('invalid', E);
                        }
                        Ct(y, N), (R = null);
                        for (var j in N)
                            if (N.hasOwnProperty(j)) {
                                var he = N[j];
                                j === 'children'
                                    ? typeof he == 'string'
                                        ? E.textContent !== he &&
                                          (N.suppressHydrationWarning !== !0 &&
                                              $c(E.textContent, he, c),
                                          (R = ['children', he]))
                                        : typeof he == 'number' &&
                                          E.textContent !== '' + he &&
                                          (N.suppressHydrationWarning !== !0 &&
                                              $c(E.textContent, he, c),
                                          (R = ['children', '' + he]))
                                    : i.hasOwnProperty(j) &&
                                      he != null &&
                                      j === 'onScroll' &&
                                      Kn('scroll', E);
                            }
                        switch (y) {
                            case 'input':
                                Ke(E), De(E, N, !0);
                                break;
                            case 'textarea':
                                Ke(E), Ce(E);
                                break;
                            case 'select':
                            case 'option':
                                break;
                            default:
                                typeof N.onClick == 'function' &&
                                    (E.onclick = Jc);
                        }
                        (E = R),
                            (h.updateQueue = E),
                            E !== null && (h.flags |= 4);
                    } else {
                        (j = R.nodeType === 9 ? R : R.ownerDocument),
                            c === 'http://www.w3.org/1999/xhtml' && (c = gt(y)),
                            c === 'http://www.w3.org/1999/xhtml'
                                ? y === 'script'
                                    ? ((c = j.createElement('div')),
                                      (c.innerHTML = '<script><\/script>'),
                                      (c = c.removeChild(c.firstChild)))
                                    : typeof E.is == 'string'
                                      ? (c = j.createElement(y, { is: E.is }))
                                      : ((c = j.createElement(y)),
                                        y === 'select' &&
                                            ((j = c),
                                            E.multiple
                                                ? (j.multiple = !0)
                                                : E.size && (j.size = E.size)))
                                : (c = j.createElementNS(c, y)),
                            (c[Yi] = h),
                            (c[Gu] = E),
                            _A(c, h, !1, !1),
                            (h.stateNode = c);
                        e: {
                            switch (((j = Dt(y, E)), y)) {
                                case 'dialog':
                                    Kn('cancel', c), Kn('close', c), (R = E);
                                    break;
                                case 'iframe':
                                case 'object':
                                case 'embed':
                                    Kn('load', c), (R = E);
                                    break;
                                case 'video':
                                case 'audio':
                                    for (R = 0; R < al.length; R++)
                                        Kn(al[R], c);
                                    R = E;
                                    break;
                                case 'source':
                                    Kn('error', c), (R = E);
                                    break;
                                case 'img':
                                case 'image':
                                case 'link':
                                    Kn('error', c), Kn('load', c), (R = E);
                                    break;
                                case 'details':
                                    Kn('toggle', c), (R = E);
                                    break;
                                case 'input':
                                    We(c, E), (R = Fe(c, E)), Kn('invalid', c);
                                    break;
                                case 'option':
                                    R = E;
                                    break;
                                case 'select':
                                    (c._wrapperState = {
                                        wasMultiple: !!E.multiple,
                                    }),
                                        (R = J({}, E, { value: void 0 })),
                                        Kn('invalid', c);
                                    break;
                                case 'textarea':
                                    Le(c, E), (R = Me(c, E)), Kn('invalid', c);
                                    break;
                                default:
                                    R = E;
                            }
                            Ct(y, R), (he = R);
                            for (N in he)
                                if (he.hasOwnProperty(N)) {
                                    var Se = he[N];
                                    N === 'style'
                                        ? et(c, Se)
                                        : N === 'dangerouslySetInnerHTML'
                                          ? ((Se = Se ? Se.__html : void 0),
                                            Se != null && at(c, Se))
                                          : N === 'children'
                                            ? typeof Se == 'string'
                                                ? (y !== 'textarea' ||
                                                      Se !== '') &&
                                                  Ye(c, Se)
                                                : typeof Se == 'number' &&
                                                  Ye(c, '' + Se)
                                            : N !==
                                                  'suppressContentEditableWarning' &&
                                              N !==
                                                  'suppressHydrationWarning' &&
                                              N !== 'autoFocus' &&
                                              (i.hasOwnProperty(N)
                                                  ? Se != null &&
                                                    N === 'onScroll' &&
                                                    Kn('scroll', c)
                                                  : Se != null &&
                                                    T(c, N, Se, j));
                                }
                            switch (y) {
                                case 'input':
                                    Ke(c), De(c, E, !1);
                                    break;
                                case 'textarea':
                                    Ke(c), Ce(c);
                                    break;
                                case 'option':
                                    E.value != null &&
                                        c.setAttribute(
                                            'value',
                                            '' + Ae(E.value)
                                        );
                                    break;
                                case 'select':
                                    (c.multiple = !!E.multiple),
                                        (N = E.value),
                                        N != null
                                            ? V(c, !!E.multiple, N, !1)
                                            : E.defaultValue != null &&
                                              V(
                                                  c,
                                                  !!E.multiple,
                                                  E.defaultValue,
                                                  !0
                                              );
                                    break;
                                default:
                                    typeof R.onClick == 'function' &&
                                        (c.onclick = Jc);
                            }
                            switch (y) {
                                case 'button':
                                case 'input':
                                case 'select':
                                case 'textarea':
                                    E = !!E.autoFocus;
                                    break e;
                                case 'img':
                                    E = !0;
                                    break e;
                                default:
                                    E = !1;
                            }
                        }
                        E && (h.flags |= 4);
                    }
                    h.ref !== null && ((h.flags |= 512), (h.flags |= 2097152));
                }
                return is(h), null;
            case 6:
                if (c && h.stateNode != null) SA(c, h, c.memoizedProps, E);
                else {
                    if (typeof E != 'string' && h.stateNode === null)
                        throw Error(t(166));
                    if (((y = Ui(Ma.current)), Ui(As.current), Wu(h))) {
                        if (
                            ((E = h.stateNode),
                            (y = h.memoizedProps),
                            (E[Yi] = h),
                            (N = E.nodeValue !== y) && ((c = _r), c !== null))
                        )
                            switch (c.tag) {
                                case 3:
                                    $c(E.nodeValue, y, (c.mode & 1) !== 0);
                                    break;
                                case 5:
                                    c.memoizedProps.suppressHydrationWarning !==
                                        !0 &&
                                        $c(E.nodeValue, y, (c.mode & 1) !== 0);
                            }
                        N && (h.flags |= 4);
                    } else
                        (E = (
                            y.nodeType === 9 ? y : y.ownerDocument
                        ).createTextNode(E)),
                            (E[Yi] = h),
                            (h.stateNode = E);
                }
                return is(h), null;
            case 13:
                if (
                    (Zn(ni),
                    (E = h.memoizedState),
                    c === null ||
                        (c.memoizedState !== null &&
                            c.memoizedState.dehydrated !== null))
                ) {
                    if (
                        ti &&
                        Wr !== null &&
                        (h.mode & 1) !== 0 &&
                        (h.flags & 128) === 0
                    )
                        Sm(), ul(), (h.flags |= 98560), (N = !1);
                    else if (
                        ((N = Wu(h)), E !== null && E.dehydrated !== null)
                    ) {
                        if (c === null) {
                            if (!N) throw Error(t(318));
                            if (
                                ((N = h.memoizedState),
                                (N = N !== null ? N.dehydrated : null),
                                !N)
                            )
                                throw Error(t(317));
                            N[Yi] = h;
                        } else
                            ul(),
                                (h.flags & 128) === 0 &&
                                    (h.memoizedState = null),
                                (h.flags |= 4);
                        is(h), (N = !1);
                    } else Xs !== null && (k1(Xs), (Xs = null)), (N = !0);
                    if (!N) return h.flags & 65536 ? h : null;
                }
                return (h.flags & 128) !== 0
                    ? ((h.lanes = y), h)
                    : ((E = E !== null),
                      E !== (c !== null && c.memoizedState !== null) &&
                          E &&
                          ((h.child.flags |= 8192),
                          (h.mode & 1) !== 0 &&
                              (c === null || (ni.current & 1) !== 0
                                  ? Mr === 0 && (Mr = 3)
                                  : B1())),
                      h.updateQueue !== null && (h.flags |= 4),
                      is(h),
                      null);
            case 4:
                return (
                    fl(),
                    T1(c, h),
                    c === null && zu(h.stateNode.containerInfo),
                    is(h),
                    null
                );
            case 10:
                return af(h.type._context), is(h), null;
            case 17:
                return Lr(h.type) && Qc(), is(h), null;
            case 19:
                if ((Zn(ni), (N = h.memoizedState), N === null))
                    return is(h), null;
                if (
                    ((E = (h.flags & 128) !== 0), (j = N.rendering), j === null)
                )
                    if (E) Om(N, !1);
                    else {
                        if (Mr !== 0 || (c !== null && (c.flags & 128) !== 0))
                            for (c = h.child; c !== null; ) {
                                if (((j = go(c)), j !== null)) {
                                    for (
                                        h.flags |= 128,
                                            Om(N, !1),
                                            E = j.updateQueue,
                                            E !== null &&
                                                ((h.updateQueue = E),
                                                (h.flags |= 4)),
                                            h.subtreeFlags = 0,
                                            E = y,
                                            y = h.child;
                                        y !== null;

                                    )
                                        (N = y),
                                            (c = E),
                                            (N.flags &= 14680066),
                                            (j = N.alternate),
                                            j === null
                                                ? ((N.childLanes = 0),
                                                  (N.lanes = c),
                                                  (N.child = null),
                                                  (N.subtreeFlags = 0),
                                                  (N.memoizedProps = null),
                                                  (N.memoizedState = null),
                                                  (N.updateQueue = null),
                                                  (N.dependencies = null),
                                                  (N.stateNode = null))
                                                : ((N.childLanes =
                                                      j.childLanes),
                                                  (N.lanes = j.lanes),
                                                  (N.child = j.child),
                                                  (N.subtreeFlags = 0),
                                                  (N.deletions = null),
                                                  (N.memoizedProps =
                                                      j.memoizedProps),
                                                  (N.memoizedState =
                                                      j.memoizedState),
                                                  (N.updateQueue =
                                                      j.updateQueue),
                                                  (N.type = j.type),
                                                  (c = j.dependencies),
                                                  (N.dependencies =
                                                      c === null
                                                          ? null
                                                          : {
                                                                lanes: c.lanes,
                                                                firstContext:
                                                                    c.firstContext,
                                                            })),
                                            (y = y.sibling);
                                    return (
                                        Yn(ni, (ni.current & 1) | 2), h.child
                                    );
                                }
                                c = c.sibling;
                            }
                        N.tail !== null &&
                            ye() > dd &&
                            ((h.flags |= 128),
                            (E = !0),
                            Om(N, !1),
                            (h.lanes = 4194304));
                    }
                else {
                    if (!E)
                        if (((c = go(j)), c !== null)) {
                            if (
                                ((h.flags |= 128),
                                (E = !0),
                                (y = c.updateQueue),
                                y !== null &&
                                    ((h.updateQueue = y), (h.flags |= 4)),
                                Om(N, !0),
                                N.tail === null &&
                                    N.tailMode === 'hidden' &&
                                    !j.alternate &&
                                    !ti)
                            )
                                return is(h), null;
                        } else
                            2 * ye() - N.renderingStartTime > dd &&
                                y !== 1073741824 &&
                                ((h.flags |= 128),
                                (E = !0),
                                Om(N, !1),
                                (h.lanes = 4194304));
                    N.isBackwards
                        ? ((j.sibling = h.child), (h.child = j))
                        : ((y = N.last),
                          y !== null ? (y.sibling = j) : (h.child = j),
                          (N.last = j));
                }
                return N.tail !== null
                    ? ((h = N.tail),
                      (N.rendering = h),
                      (N.tail = h.sibling),
                      (N.renderingStartTime = ye()),
                      (h.sibling = null),
                      (y = ni.current),
                      Yn(ni, E ? (y & 1) | 2 : y & 1),
                      h)
                    : (is(h), null);
            case 22:
            case 23:
                return (
                    F1(),
                    (E = h.memoizedState !== null),
                    c !== null &&
                        (c.memoizedState !== null) !== E &&
                        (h.flags |= 8192),
                    E && (h.mode & 1) !== 0
                        ? (_o & 1073741824) !== 0 &&
                          (is(h), h.subtreeFlags & 6 && (h.flags |= 8192))
                        : is(h),
                    null
                );
            case 24:
                return null;
            case 25:
                return null;
        }
        throw Error(t(156, h.tag));
    }
    function xN(c, h) {
        switch ((xa(h), h.tag)) {
            case 1:
                return (
                    Lr(h.type) && Qc(),
                    (c = h.flags),
                    c & 65536 ? ((h.flags = (c & -65537) | 128), h) : null
                );
            case 3:
                return (
                    fl(),
                    Zn(Hr),
                    Zn(yr),
                    Ho(),
                    (c = h.flags),
                    (c & 65536) !== 0 && (c & 128) === 0
                        ? ((h.flags = (c & -65537) | 128), h)
                        : null
                );
            case 5:
                return qu(h), null;
            case 13:
                if (
                    (Zn(ni),
                    (c = h.memoizedState),
                    c !== null && c.dehydrated !== null)
                ) {
                    if (h.alternate === null) throw Error(t(340));
                    ul();
                }
                return (
                    (c = h.flags),
                    c & 65536 ? ((h.flags = (c & -65537) | 128), h) : null
                );
            case 19:
                return Zn(ni), null;
            case 4:
                return fl(), null;
            case 10:
                return af(h.type._context), null;
            case 22:
            case 23:
                return F1(), null;
            case 24:
                return null;
            default:
                return null;
        }
    }
    var Dv = !1,
        rs = !1,
        SN = typeof WeakSet == 'function' ? WeakSet : Set,
        Ut = null;
    function fd(c, h) {
        var y = c.ref;
        if (y !== null)
            if (typeof y == 'function')
                try {
                    y(null);
                } catch (E) {
                    Ni(c, h, E);
                }
            else y.current = null;
    }
    function A1(c, h, y) {
        try {
            y();
        } catch (E) {
            Ni(c, h, E);
        }
    }
    var wA = !1;
    function wN(c, h) {
        if (((Hu = nr), (c = vi()), sr(c))) {
            if ('selectionStart' in c)
                var y = { start: c.selectionStart, end: c.selectionEnd };
            else
                e: {
                    y = ((y = c.ownerDocument) && y.defaultView) || window;
                    var E = y.getSelection && y.getSelection();
                    if (E && E.rangeCount !== 0) {
                        y = E.anchorNode;
                        var R = E.anchorOffset,
                            N = E.focusNode;
                        E = E.focusOffset;
                        try {
                            y.nodeType, N.nodeType;
                        } catch {
                            y = null;
                            break e;
                        }
                        var j = 0,
                            he = -1,
                            Se = -1,
                            Ge = 0,
                            ft = 0,
                            dt = c,
                            ct = null;
                        t: for (;;) {
                            for (
                                var It;
                                dt !== y ||
                                    (R !== 0 && dt.nodeType !== 3) ||
                                    (he = j + R),
                                    dt !== N ||
                                        (E !== 0 && dt.nodeType !== 3) ||
                                        (Se = j + E),
                                    dt.nodeType === 3 &&
                                        (j += dt.nodeValue.length),
                                    (It = dt.firstChild) !== null;

                            )
                                (ct = dt), (dt = It);
                            for (;;) {
                                if (dt === c) break t;
                                if (
                                    (ct === y && ++Ge === R && (he = j),
                                    ct === N && ++ft === E && (Se = j),
                                    (It = dt.nextSibling) !== null)
                                )
                                    break;
                                (dt = ct), (ct = dt.parentNode);
                            }
                            dt = It;
                        }
                        y =
                            he === -1 || Se === -1
                                ? null
                                : { start: he, end: Se };
                    } else y = null;
                }
            y = y || { start: 0, end: 0 };
        } else y = null;
        for (
            um = { focusedElem: c, selectionRange: y }, nr = !1, Ut = h;
            Ut !== null;

        )
            if (
                ((h = Ut),
                (c = h.child),
                (h.subtreeFlags & 1028) !== 0 && c !== null)
            )
                (c.return = h), (Ut = c);
            else
                for (; Ut !== null; ) {
                    h = Ut;
                    try {
                        var Ft = h.alternate;
                        if ((h.flags & 1024) !== 0)
                            switch (h.tag) {
                                case 0:
                                case 11:
                                case 15:
                                    break;
                                case 1:
                                    if (Ft !== null) {
                                        var zt = Ft.memoizedProps,
                                            qi = Ft.memoizedState,
                                            Oe = h.stateNode,
                                            Ee = Oe.getSnapshotBeforeUpdate(
                                                h.elementType === h.type
                                                    ? zt
                                                    : Ys(h.type, zt),
                                                qi
                                            );
                                        Oe.__reactInternalSnapshotBeforeUpdate =
                                            Ee;
                                    }
                                    break;
                                case 3:
                                    var ke = h.stateNode.containerInfo;
                                    ke.nodeType === 1
                                        ? (ke.textContent = '')
                                        : ke.nodeType === 9 &&
                                          ke.documentElement &&
                                          ke.removeChild(ke.documentElement);
                                    break;
                                case 5:
                                case 6:
                                case 4:
                                case 17:
                                    break;
                                default:
                                    throw Error(t(163));
                            }
                    } catch (yt) {
                        Ni(h, h.return, yt);
                    }
                    if (((c = h.sibling), c !== null)) {
                        (c.return = h.return), (Ut = c);
                        break;
                    }
                    Ut = h.return;
                }
        return (Ft = wA), (wA = !1), Ft;
    }
    function Um(c, h, y) {
        var E = h.updateQueue;
        if (((E = E !== null ? E.lastEffect : null), E !== null)) {
            var R = (E = E.next);
            do {
                if ((R.tag & c) === c) {
                    var N = R.destroy;
                    (R.destroy = void 0), N !== void 0 && A1(h, y, N);
                }
                R = R.next;
            } while (R !== E);
        }
    }
    function Ov(c, h) {
        if (
            ((h = h.updateQueue),
            (h = h !== null ? h.lastEffect : null),
            h !== null)
        ) {
            var y = (h = h.next);
            do {
                if ((y.tag & c) === c) {
                    var E = y.create;
                    y.destroy = E();
                }
                y = y.next;
            } while (y !== h);
        }
    }
    function b1(c) {
        var h = c.ref;
        if (h !== null) {
            var y = c.stateNode;
            switch (c.tag) {
                case 5:
                    c = y;
                    break;
                default:
                    c = y;
            }
            typeof h == 'function' ? h(c) : (h.current = c);
        }
    }
    function MA(c) {
        var h = c.alternate;
        h !== null && ((c.alternate = null), MA(h)),
            (c.child = null),
            (c.deletions = null),
            (c.sibling = null),
            c.tag === 5 &&
                ((h = c.stateNode),
                h !== null &&
                    (delete h[Yi],
                    delete h[Gu],
                    delete h[jl],
                    delete h[qh],
                    delete h[Kh])),
            (c.stateNode = null),
            (c.return = null),
            (c.dependencies = null),
            (c.memoizedProps = null),
            (c.memoizedState = null),
            (c.pendingProps = null),
            (c.stateNode = null),
            (c.updateQueue = null);
    }
    function EA(c) {
        return c.tag === 5 || c.tag === 3 || c.tag === 4;
    }
    function TA(c) {
        e: for (;;) {
            for (; c.sibling === null; ) {
                if (c.return === null || EA(c.return)) return null;
                c = c.return;
            }
            for (
                c.sibling.return = c.return, c = c.sibling;
                c.tag !== 5 && c.tag !== 6 && c.tag !== 18;

            ) {
                if (c.flags & 2 || c.child === null || c.tag === 4) continue e;
                (c.child.return = c), (c = c.child);
            }
            if (!(c.flags & 2)) return c.stateNode;
        }
    }
    function C1(c, h, y) {
        var E = c.tag;
        if (E === 5 || E === 6)
            (c = c.stateNode),
                h
                    ? y.nodeType === 8
                        ? y.parentNode.insertBefore(c, h)
                        : y.insertBefore(c, h)
                    : (y.nodeType === 8
                          ? ((h = y.parentNode), h.insertBefore(c, y))
                          : ((h = y), h.appendChild(c)),
                      (y = y._reactRootContainer),
                      y != null || h.onclick !== null || (h.onclick = Jc));
        else if (E !== 4 && ((c = c.child), c !== null))
            for (C1(c, h, y), c = c.sibling; c !== null; )
                C1(c, h, y), (c = c.sibling);
    }
    function R1(c, h, y) {
        var E = c.tag;
        if (E === 5 || E === 6)
            (c = c.stateNode), h ? y.insertBefore(c, h) : y.appendChild(c);
        else if (E !== 4 && ((c = c.child), c !== null))
            for (R1(c, h, y), c = c.sibling; c !== null; )
                R1(c, h, y), (c = c.sibling);
    }
    var Xr = null,
        Ca = !1;
    function $u(c, h, y) {
        for (y = y.child; y !== null; ) AA(c, h, y), (y = y.sibling);
    }
    function AA(c, h, y) {
        if (mt && typeof mt.onCommitFiberUnmount == 'function')
            try {
                mt.onCommitFiberUnmount(Wt, y);
            } catch {}
        switch (y.tag) {
            case 5:
                rs || fd(y, h);
            case 6:
                var E = Xr,
                    R = Ca;
                (Xr = null),
                    $u(c, h, y),
                    (Xr = E),
                    (Ca = R),
                    Xr !== null &&
                        (Ca
                            ? ((c = Xr),
                              (y = y.stateNode),
                              c.nodeType === 8
                                  ? c.parentNode.removeChild(y)
                                  : c.removeChild(y))
                            : Xr.removeChild(y.stateNode));
                break;
            case 18:
                Xr !== null &&
                    (Ca
                        ? ((c = Xr),
                          (y = y.stateNode),
                          c.nodeType === 8
                              ? Yh(c.parentNode, y)
                              : c.nodeType === 1 && Yh(c, y),
                          Qa(c))
                        : Yh(Xr, y.stateNode));
                break;
            case 4:
                (E = Xr),
                    (R = Ca),
                    (Xr = y.stateNode.containerInfo),
                    (Ca = !0),
                    $u(c, h, y),
                    (Xr = E),
                    (Ca = R);
                break;
            case 0:
            case 11:
            case 14:
            case 15:
                if (
                    !rs &&
                    ((E = y.updateQueue),
                    E !== null && ((E = E.lastEffect), E !== null))
                ) {
                    R = E = E.next;
                    do {
                        var N = R,
                            j = N.destroy;
                        (N = N.tag),
                            j !== void 0 &&
                                ((N & 2) !== 0 || (N & 4) !== 0) &&
                                A1(y, h, j),
                            (R = R.next);
                    } while (R !== E);
                }
                $u(c, h, y);
                break;
            case 1:
                if (
                    !rs &&
                    (fd(y, h),
                    (E = y.stateNode),
                    typeof E.componentWillUnmount == 'function')
                )
                    try {
                        (E.props = y.memoizedProps),
                            (E.state = y.memoizedState),
                            E.componentWillUnmount();
                    } catch (he) {
                        Ni(y, h, he);
                    }
                $u(c, h, y);
                break;
            case 21:
                $u(c, h, y);
                break;
            case 22:
                y.mode & 1
                    ? ((rs = (E = rs) || y.memoizedState !== null),
                      $u(c, h, y),
                      (rs = E))
                    : $u(c, h, y);
                break;
            default:
                $u(c, h, y);
        }
    }
    function bA(c) {
        var h = c.updateQueue;
        if (h !== null) {
            c.updateQueue = null;
            var y = c.stateNode;
            y === null && (y = c.stateNode = new SN()),
                h.forEach(function (E) {
                    var R = LN.bind(null, c, E);
                    y.has(E) || (y.add(E), E.then(R, R));
                });
        }
    }
    function Ra(c, h) {
        var y = h.deletions;
        if (y !== null)
            for (var E = 0; E < y.length; E++) {
                var R = y[E];
                try {
                    var N = c,
                        j = h,
                        he = j;
                    e: for (; he !== null; ) {
                        switch (he.tag) {
                            case 5:
                                (Xr = he.stateNode), (Ca = !1);
                                break e;
                            case 3:
                                (Xr = he.stateNode.containerInfo), (Ca = !0);
                                break e;
                            case 4:
                                (Xr = he.stateNode.containerInfo), (Ca = !0);
                                break e;
                        }
                        he = he.return;
                    }
                    if (Xr === null) throw Error(t(160));
                    AA(N, j, R), (Xr = null), (Ca = !1);
                    var Se = R.alternate;
                    Se !== null && (Se.return = null), (R.return = null);
                } catch (Ge) {
                    Ni(R, h, Ge);
                }
            }
        if (h.subtreeFlags & 12854)
            for (h = h.child; h !== null; ) CA(h, c), (h = h.sibling);
    }
    function CA(c, h) {
        var y = c.alternate,
            E = c.flags;
        switch (c.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
                if ((Ra(h, c), dl(c), E & 4)) {
                    try {
                        Um(3, c, c.return), Ov(3, c);
                    } catch (zt) {
                        Ni(c, c.return, zt);
                    }
                    try {
                        Um(5, c, c.return);
                    } catch (zt) {
                        Ni(c, c.return, zt);
                    }
                }
                break;
            case 1:
                Ra(h, c), dl(c), E & 512 && y !== null && fd(y, y.return);
                break;
            case 5:
                if (
                    (Ra(h, c),
                    dl(c),
                    E & 512 && y !== null && fd(y, y.return),
                    c.flags & 32)
                ) {
                    var R = c.stateNode;
                    try {
                        Ye(R, '');
                    } catch (zt) {
                        Ni(c, c.return, zt);
                    }
                }
                if (E & 4 && ((R = c.stateNode), R != null)) {
                    var N = c.memoizedProps,
                        j = y !== null ? y.memoizedProps : N,
                        he = c.type,
                        Se = c.updateQueue;
                    if (((c.updateQueue = null), Se !== null))
                        try {
                            he === 'input' &&
                                N.type === 'radio' &&
                                N.name != null &&
                                Re(R, N),
                                Dt(he, j);
                            var Ge = Dt(he, N);
                            for (j = 0; j < Se.length; j += 2) {
                                var ft = Se[j],
                                    dt = Se[j + 1];
                                ft === 'style'
                                    ? et(R, dt)
                                    : ft === 'dangerouslySetInnerHTML'
                                      ? at(R, dt)
                                      : ft === 'children'
                                        ? Ye(R, dt)
                                        : T(R, ft, dt, Ge);
                            }
                            switch (he) {
                                case 'input':
                                    st(R, N);
                                    break;
                                case 'textarea':
                                    Ie(R, N);
                                    break;
                                case 'select':
                                    var ct = R._wrapperState.wasMultiple;
                                    R._wrapperState.wasMultiple = !!N.multiple;
                                    var It = N.value;
                                    It != null
                                        ? V(R, !!N.multiple, It, !1)
                                        : ct !== !!N.multiple &&
                                          (N.defaultValue != null
                                              ? V(
                                                    R,
                                                    !!N.multiple,
                                                    N.defaultValue,
                                                    !0
                                                )
                                              : V(
                                                    R,
                                                    !!N.multiple,
                                                    N.multiple ? [] : '',
                                                    !1
                                                ));
                            }
                            R[Gu] = N;
                        } catch (zt) {
                            Ni(c, c.return, zt);
                        }
                }
                break;
            case 6:
                if ((Ra(h, c), dl(c), E & 4)) {
                    if (c.stateNode === null) throw Error(t(162));
                    (R = c.stateNode), (N = c.memoizedProps);
                    try {
                        R.nodeValue = N;
                    } catch (zt) {
                        Ni(c, c.return, zt);
                    }
                }
                break;
            case 3:
                if (
                    (Ra(h, c),
                    dl(c),
                    E & 4 && y !== null && y.memoizedState.isDehydrated)
                )
                    try {
                        Qa(h.containerInfo);
                    } catch (zt) {
                        Ni(c, c.return, zt);
                    }
                break;
            case 4:
                Ra(h, c), dl(c);
                break;
            case 13:
                Ra(h, c),
                    dl(c),
                    (R = c.child),
                    R.flags & 8192 &&
                        ((N = R.memoizedState !== null),
                        (R.stateNode.isHidden = N),
                        !N ||
                            (R.alternate !== null &&
                                R.alternate.memoizedState !== null) ||
                            (I1 = ye())),
                    E & 4 && bA(c);
                break;
            case 22:
                if (
                    ((ft = y !== null && y.memoizedState !== null),
                    c.mode & 1
                        ? ((rs = (Ge = rs) || ft), Ra(h, c), (rs = Ge))
                        : Ra(h, c),
                    dl(c),
                    E & 8192)
                ) {
                    if (
                        ((Ge = c.memoizedState !== null),
                        (c.stateNode.isHidden = Ge) &&
                            !ft &&
                            (c.mode & 1) !== 0)
                    )
                        for (Ut = c, ft = c.child; ft !== null; ) {
                            for (dt = Ut = ft; Ut !== null; ) {
                                switch (((ct = Ut), (It = ct.child), ct.tag)) {
                                    case 0:
                                    case 11:
                                    case 14:
                                    case 15:
                                        Um(4, ct, ct.return);
                                        break;
                                    case 1:
                                        fd(ct, ct.return);
                                        var Ft = ct.stateNode;
                                        if (
                                            typeof Ft.componentWillUnmount ==
                                            'function'
                                        ) {
                                            (E = ct), (y = ct.return);
                                            try {
                                                (h = E),
                                                    (Ft.props =
                                                        h.memoizedProps),
                                                    (Ft.state =
                                                        h.memoizedState),
                                                    Ft.componentWillUnmount();
                                            } catch (zt) {
                                                Ni(E, y, zt);
                                            }
                                        }
                                        break;
                                    case 5:
                                        fd(ct, ct.return);
                                        break;
                                    case 22:
                                        if (ct.memoizedState !== null) {
                                            LA(dt);
                                            continue;
                                        }
                                }
                                It !== null
                                    ? ((It.return = ct), (Ut = It))
                                    : LA(dt);
                            }
                            ft = ft.sibling;
                        }
                    e: for (ft = null, dt = c; ; ) {
                        if (dt.tag === 5) {
                            if (ft === null) {
                                ft = dt;
                                try {
                                    (R = dt.stateNode),
                                        Ge
                                            ? ((N = R.style),
                                              typeof N.setProperty == 'function'
                                                  ? N.setProperty(
                                                        'display',
                                                        'none',
                                                        'important'
                                                    )
                                                  : (N.display = 'none'))
                                            : ((he = dt.stateNode),
                                              (Se = dt.memoizedProps.style),
                                              (j =
                                                  Se != null &&
                                                  Se.hasOwnProperty('display')
                                                      ? Se.display
                                                      : null),
                                              (he.style.display = pt(
                                                  'display',
                                                  j
                                              )));
                                } catch (zt) {
                                    Ni(c, c.return, zt);
                                }
                            }
                        } else if (dt.tag === 6) {
                            if (ft === null)
                                try {
                                    dt.stateNode.nodeValue = Ge
                                        ? ''
                                        : dt.memoizedProps;
                                } catch (zt) {
                                    Ni(c, c.return, zt);
                                }
                        } else if (
                            ((dt.tag !== 22 && dt.tag !== 23) ||
                                dt.memoizedState === null ||
                                dt === c) &&
                            dt.child !== null
                        ) {
                            (dt.child.return = dt), (dt = dt.child);
                            continue;
                        }
                        if (dt === c) break e;
                        for (; dt.sibling === null; ) {
                            if (dt.return === null || dt.return === c) break e;
                            ft === dt && (ft = null), (dt = dt.return);
                        }
                        ft === dt && (ft = null),
                            (dt.sibling.return = dt.return),
                            (dt = dt.sibling);
                    }
                }
                break;
            case 19:
                Ra(h, c), dl(c), E & 4 && bA(c);
                break;
            case 21:
                break;
            default:
                Ra(h, c), dl(c);
        }
    }
    function dl(c) {
        var h = c.flags;
        if (h & 2) {
            try {
                e: {
                    for (var y = c.return; y !== null; ) {
                        if (EA(y)) {
                            var E = y;
                            break e;
                        }
                        y = y.return;
                    }
                    throw Error(t(160));
                }
                switch (E.tag) {
                    case 5:
                        var R = E.stateNode;
                        E.flags & 32 && (Ye(R, ''), (E.flags &= -33));
                        var N = TA(c);
                        R1(c, N, R);
                        break;
                    case 3:
                    case 4:
                        var j = E.stateNode.containerInfo,
                            he = TA(c);
                        C1(c, he, j);
                        break;
                    default:
                        throw Error(t(161));
                }
            } catch (Se) {
                Ni(c, c.return, Se);
            }
            c.flags &= -3;
        }
        h & 4096 && (c.flags &= -4097);
    }
    function MN(c, h, y) {
        (Ut = c), RA(c);
    }
    function RA(c, h, y) {
        for (var E = (c.mode & 1) !== 0; Ut !== null; ) {
            var R = Ut,
                N = R.child;
            if (R.tag === 22 && E) {
                var j = R.memoizedState !== null || Dv;
                if (!j) {
                    var he = R.alternate,
                        Se = (he !== null && he.memoizedState !== null) || rs;
                    he = Dv;
                    var Ge = rs;
                    if (((Dv = j), (rs = Se) && !Ge))
                        for (Ut = R; Ut !== null; )
                            (j = Ut),
                                (Se = j.child),
                                j.tag === 22 && j.memoizedState !== null
                                    ? IA(R)
                                    : Se !== null
                                      ? ((Se.return = j), (Ut = Se))
                                      : IA(R);
                    for (; N !== null; ) (Ut = N), RA(N), (N = N.sibling);
                    (Ut = R), (Dv = he), (rs = Ge);
                }
                PA(c);
            } else
                (R.subtreeFlags & 8772) !== 0 && N !== null
                    ? ((N.return = R), (Ut = N))
                    : PA(c);
        }
    }
    function PA(c) {
        for (; Ut !== null; ) {
            var h = Ut;
            if ((h.flags & 8772) !== 0) {
                var y = h.alternate;
                try {
                    if ((h.flags & 8772) !== 0)
                        switch (h.tag) {
                            case 0:
                            case 11:
                            case 15:
                                rs || Ov(5, h);
                                break;
                            case 1:
                                var E = h.stateNode;
                                if (h.flags & 4 && !rs)
                                    if (y === null) E.componentDidMount();
                                    else {
                                        var R =
                                            h.elementType === h.type
                                                ? y.memoizedProps
                                                : Ys(h.type, y.memoizedProps);
                                        E.componentDidUpdate(
                                            R,
                                            y.memoizedState,
                                            E.__reactInternalSnapshotBeforeUpdate
                                        );
                                    }
                                var N = h.updateQueue;
                                N !== null && Yu(h, N, E);
                                break;
                            case 3:
                                var j = h.updateQueue;
                                if (j !== null) {
                                    if (((y = null), h.child !== null))
                                        switch (h.child.tag) {
                                            case 5:
                                                y = h.child.stateNode;
                                                break;
                                            case 1:
                                                y = h.child.stateNode;
                                        }
                                    Yu(h, j, y);
                                }
                                break;
                            case 5:
                                var he = h.stateNode;
                                if (y === null && h.flags & 4) {
                                    y = he;
                                    var Se = h.memoizedProps;
                                    switch (h.type) {
                                        case 'button':
                                        case 'input':
                                        case 'select':
                                        case 'textarea':
                                            Se.autoFocus && y.focus();
                                            break;
                                        case 'img':
                                            Se.src && (y.src = Se.src);
                                    }
                                }
                                break;
                            case 6:
                                break;
                            case 4:
                                break;
                            case 12:
                                break;
                            case 13:
                                if (h.memoizedState === null) {
                                    var Ge = h.alternate;
                                    if (Ge !== null) {
                                        var ft = Ge.memoizedState;
                                        if (ft !== null) {
                                            var dt = ft.dehydrated;
                                            dt !== null && Qa(dt);
                                        }
                                    }
                                }
                                break;
                            case 19:
                            case 17:
                            case 21:
                            case 22:
                            case 23:
                            case 25:
                                break;
                            default:
                                throw Error(t(163));
                        }
                    rs || (h.flags & 512 && b1(h));
                } catch (ct) {
                    Ni(h, h.return, ct);
                }
            }
            if (h === c) {
                Ut = null;
                break;
            }
            if (((y = h.sibling), y !== null)) {
                (y.return = h.return), (Ut = y);
                break;
            }
            Ut = h.return;
        }
    }
    function LA(c) {
        for (; Ut !== null; ) {
            var h = Ut;
            if (h === c) {
                Ut = null;
                break;
            }
            var y = h.sibling;
            if (y !== null) {
                (y.return = h.return), (Ut = y);
                break;
            }
            Ut = h.return;
        }
    }
    function IA(c) {
        for (; Ut !== null; ) {
            var h = Ut;
            try {
                switch (h.tag) {
                    case 0:
                    case 11:
                    case 15:
                        var y = h.return;
                        try {
                            Ov(4, h);
                        } catch (Se) {
                            Ni(h, y, Se);
                        }
                        break;
                    case 1:
                        var E = h.stateNode;
                        if (typeof E.componentDidMount == 'function') {
                            var R = h.return;
                            try {
                                E.componentDidMount();
                            } catch (Se) {
                                Ni(h, R, Se);
                            }
                        }
                        var N = h.return;
                        try {
                            b1(h);
                        } catch (Se) {
                            Ni(h, N, Se);
                        }
                        break;
                    case 5:
                        var j = h.return;
                        try {
                            b1(h);
                        } catch (Se) {
                            Ni(h, j, Se);
                        }
                }
            } catch (Se) {
                Ni(h, h.return, Se);
            }
            if (h === c) {
                Ut = null;
                break;
            }
            var he = h.sibling;
            if (he !== null) {
                (he.return = h.return), (Ut = he);
                break;
            }
            Ut = h.return;
        }
    }
    var EN = Math.ceil,
        Uv = b.ReactCurrentDispatcher,
        P1 = b.ReactCurrentOwner,
        Wo = b.ReactCurrentBatchConfig,
        On = 0,
        Or = null,
        cr = null,
        Yr = 0,
        _o = 0,
        hd = xi(0),
        Mr = 0,
        km = null,
        yf = 0,
        kv = 0,
        L1 = 0,
        Nm = null,
        qs = null,
        I1 = 0,
        dd = 1 / 0,
        au = null,
        Nv = !1,
        D1 = null,
        Ju = null,
        Fv = !1,
        Qu = null,
        Bv = 0,
        Fm = 0,
        O1 = null,
        zv = -1,
        Vv = 0;
    function Ps() {
        return (On & 6) !== 0 ? ye() : zv !== -1 ? zv : (zv = ye());
    }
    function ec(c) {
        return (c.mode & 1) === 0
            ? 1
            : (On & 2) !== 0 && Yr !== 0
              ? Yr & -Yr
              : w1.transition !== null
                ? (Vv === 0 && (Vv = Bn()), Vv)
                : ((c = Sn),
                  c !== 0 ||
                      ((c = window.event),
                      (c = c === void 0 ? 16 : tl(c.type))),
                  c);
    }
    function Pa(c, h, y, E) {
        if (50 < Fm) throw ((Fm = 0), (O1 = null), Error(t(185)));
        ei(c, y, E),
            ((On & 2) === 0 || c !== Or) &&
                (c === Or &&
                    ((On & 2) === 0 && (kv |= y), Mr === 4 && tc(c, Yr)),
                Ks(c, E),
                y === 1 &&
                    On === 0 &&
                    (h.mode & 1) === 0 &&
                    ((dd = ye() + 500), tf && zo()));
    }
    function Ks(c, h) {
        var y = c.callbackNode;
        nn(c, h);
        var E = tn(c, c === Or ? Yr : 0);
        if (E === 0)
            y !== null && Pe(y),
                (c.callbackNode = null),
                (c.callbackPriority = 0);
        else if (((h = E & -E), c.callbackPriority !== h)) {
            if ((y != null && Pe(y), h === 1))
                c.tag === 0 ? xv(OA.bind(null, c)) : nf(OA.bind(null, c)),
                    S1(function () {
                        (On & 6) === 0 && zo();
                    }),
                    (y = null);
            else {
                switch (Oo(E)) {
                    case 1:
                        y = rt;
                        break;
                    case 4:
                        y = it;
                        break;
                    case 16:
                        y = xt;
                        break;
                    case 536870912:
                        y = Nt;
                        break;
                    default:
                        y = xt;
                }
                y = HA(y, DA.bind(null, c));
            }
            (c.callbackPriority = h), (c.callbackNode = y);
        }
    }
    function DA(c, h) {
        if (((zv = -1), (Vv = 0), (On & 6) !== 0)) throw Error(t(327));
        var y = c.callbackNode;
        if (pd() && c.callbackNode !== y) return null;
        var E = tn(c, c === Or ? Yr : 0);
        if (E === 0) return null;
        if ((E & 30) !== 0 || (E & c.expiredLanes) !== 0 || h) h = Hv(c, E);
        else {
            h = E;
            var R = On;
            On |= 2;
            var N = kA();
            (Or !== c || Yr !== h) &&
                ((au = null), (dd = ye() + 500), xf(c, h));
            do
                try {
                    bN();
                    break;
                } catch (he) {
                    UA(c, he);
                }
            while (!0);
            Ql(),
                (Uv.current = N),
                (On = R),
                cr !== null ? (h = 0) : ((Or = null), (Yr = 0), (h = Mr));
        }
        if (h !== 0) {
            if (
                (h === 2 && ((R = Jt(c)), R !== 0 && ((E = R), (h = U1(c, R)))),
                h === 1)
            )
                throw ((y = km), xf(c, 0), tc(c, E), Ks(c, ye()), y);
            if (h === 6) tc(c, E);
            else {
                if (
                    ((R = c.current.alternate),
                    (E & 30) === 0 &&
                        !TN(R) &&
                        ((h = Hv(c, E)),
                        h === 2 &&
                            ((N = Jt(c)), N !== 0 && ((E = N), (h = U1(c, N)))),
                        h === 1))
                )
                    throw ((y = km), xf(c, 0), tc(c, E), Ks(c, ye()), y);
                switch (((c.finishedWork = R), (c.finishedLanes = E), h)) {
                    case 0:
                    case 1:
                        throw Error(t(345));
                    case 2:
                        Sf(c, qs, au);
                        break;
                    case 3:
                        if (
                            (tc(c, E),
                            (E & 130023424) === E &&
                                ((h = I1 + 500 - ye()), 10 < h))
                        ) {
                            if (tn(c, 0) !== 0) break;
                            if (((R = c.suspendedLanes), (R & E) !== E)) {
                                Ps(), (c.pingedLanes |= c.suspendedLanes & R);
                                break;
                            }
                            c.timeoutHandle = fm(Sf.bind(null, c, qs, au), h);
                            break;
                        }
                        Sf(c, qs, au);
                        break;
                    case 4:
                        if ((tc(c, E), (E & 4194240) === E)) break;
                        for (h = c.eventTimes, R = -1; 0 < E; ) {
                            var j = 31 - Lt(E);
                            (N = 1 << j),
                                (j = h[j]),
                                j > R && (R = j),
                                (E &= ~N);
                        }
                        if (
                            ((E = R),
                            (E = ye() - E),
                            (E =
                                (120 > E
                                    ? 120
                                    : 480 > E
                                      ? 480
                                      : 1080 > E
                                        ? 1080
                                        : 1920 > E
                                          ? 1920
                                          : 3e3 > E
                                            ? 3e3
                                            : 4320 > E
                                              ? 4320
                                              : 1960 * EN(E / 1960)) - E),
                            10 < E)
                        ) {
                            c.timeoutHandle = fm(Sf.bind(null, c, qs, au), E);
                            break;
                        }
                        Sf(c, qs, au);
                        break;
                    case 5:
                        Sf(c, qs, au);
                        break;
                    default:
                        throw Error(t(329));
                }
            }
        }
        return Ks(c, ye()), c.callbackNode === y ? DA.bind(null, c) : null;
    }
    function U1(c, h) {
        var y = Nm;
        return (
            c.current.memoizedState.isDehydrated && (xf(c, h).flags |= 256),
            (c = Hv(c, h)),
            c !== 2 && ((h = qs), (qs = y), h !== null && k1(h)),
            c
        );
    }
    function k1(c) {
        qs === null ? (qs = c) : qs.push.apply(qs, c);
    }
    function TN(c) {
        for (var h = c; ; ) {
            if (h.flags & 16384) {
                var y = h.updateQueue;
                if (y !== null && ((y = y.stores), y !== null))
                    for (var E = 0; E < y.length; E++) {
                        var R = y[E],
                            N = R.getSnapshot;
                        R = R.value;
                        try {
                            if (!ws(N(), R)) return !1;
                        } catch {
                            return !1;
                        }
                    }
            }
            if (((y = h.child), h.subtreeFlags & 16384 && y !== null))
                (y.return = h), (h = y);
            else {
                if (h === c) break;
                for (; h.sibling === null; ) {
                    if (h.return === null || h.return === c) return !0;
                    h = h.return;
                }
                (h.sibling.return = h.return), (h = h.sibling);
            }
        }
        return !0;
    }
    function tc(c, h) {
        for (
            h &= ~L1,
                h &= ~kv,
                c.suspendedLanes |= h,
                c.pingedLanes &= ~h,
                c = c.expirationTimes;
            0 < h;

        ) {
            var y = 31 - Lt(h),
                E = 1 << y;
            (c[y] = -1), (h &= ~E);
        }
    }
    function OA(c) {
        if ((On & 6) !== 0) throw Error(t(327));
        pd();
        var h = tn(c, 0);
        if ((h & 1) === 0) return Ks(c, ye()), null;
        var y = Hv(c, h);
        if (c.tag !== 0 && y === 2) {
            var E = Jt(c);
            E !== 0 && ((h = E), (y = U1(c, E)));
        }
        if (y === 1) throw ((y = km), xf(c, 0), tc(c, h), Ks(c, ye()), y);
        if (y === 6) throw Error(t(345));
        return (
            (c.finishedWork = c.current.alternate),
            (c.finishedLanes = h),
            Sf(c, qs, au),
            Ks(c, ye()),
            null
        );
    }
    function N1(c, h) {
        var y = On;
        On |= 1;
        try {
            return c(h);
        } finally {
            (On = y), On === 0 && ((dd = ye() + 500), tf && zo());
        }
    }
    function _f(c) {
        Qu !== null && Qu.tag === 0 && (On & 6) === 0 && pd();
        var h = On;
        On |= 1;
        var y = Wo.transition,
            E = Sn;
        try {
            if (((Wo.transition = null), (Sn = 1), c)) return c();
        } finally {
            (Sn = E), (Wo.transition = y), (On = h), (On & 6) === 0 && zo();
        }
    }
    function F1() {
        (_o = hd.current), Zn(hd);
    }
    function xf(c, h) {
        (c.finishedWork = null), (c.finishedLanes = 0);
        var y = c.timeoutHandle;
        if ((y !== -1 && ((c.timeoutHandle = -1), hm(y)), cr !== null))
            for (y = cr.return; y !== null; ) {
                var E = y;
                switch ((xa(E), E.tag)) {
                    case 1:
                        (E = E.type.childContextTypes), E != null && Qc();
                        break;
                    case 3:
                        fl(), Zn(Hr), Zn(yr), Ho();
                        break;
                    case 5:
                        qu(E);
                        break;
                    case 4:
                        fl();
                        break;
                    case 13:
                        Zn(ni);
                        break;
                    case 19:
                        Zn(ni);
                        break;
                    case 10:
                        af(E.type._context);
                        break;
                    case 22:
                    case 23:
                        F1();
                }
                y = y.return;
            }
        if (
            ((Or = c),
            (cr = c = nc(c.current, null)),
            (Yr = _o = h),
            (Mr = 0),
            (km = null),
            (L1 = kv = yf = 0),
            (qs = Nm = null),
            wa !== null)
        ) {
            for (h = 0; h < wa.length; h++)
                if (((y = wa[h]), (E = y.interleaved), E !== null)) {
                    y.interleaved = null;
                    var R = E.next,
                        N = y.pending;
                    if (N !== null) {
                        var j = N.next;
                        (N.next = R), (E.next = j);
                    }
                    y.pending = E;
                }
            wa = null;
        }
        return c;
    }
    function UA(c, h) {
        do {
            var y = cr;
            try {
                if ((Ql(), (iu.current = ud), vo)) {
                    for (var E = $n.memoizedState; E !== null; ) {
                        var R = E.queue;
                        R !== null && (R.pending = null), (E = E.next);
                    }
                    vo = !1;
                }
                if (
                    ((Ea = 0),
                    (Ln = wi = $n = null),
                    (Dr = !1),
                    (hl = 0),
                    (P1.current = null),
                    y === null || y.return === null)
                ) {
                    (Mr = 1), (km = h), (cr = null);
                    break;
                }
                e: {
                    var N = c,
                        j = y.return,
                        he = y,
                        Se = h;
                    if (
                        ((h = Yr),
                        (he.flags |= 32768),
                        Se !== null &&
                            typeof Se == 'object' &&
                            typeof Se.then == 'function')
                    ) {
                        var Ge = Se,
                            ft = he,
                            dt = ft.tag;
                        if (
                            (ft.mode & 1) === 0 &&
                            (dt === 0 || dt === 11 || dt === 15)
                        ) {
                            var ct = ft.alternate;
                            ct
                                ? ((ft.updateQueue = ct.updateQueue),
                                  (ft.memoizedState = ct.memoizedState),
                                  (ft.lanes = ct.lanes))
                                : ((ft.updateQueue = null),
                                  (ft.memoizedState = null));
                        }
                        var It = Ot(j);
                        if (It !== null) {
                            (It.flags &= -257),
                                ln(It, j, he, N, h),
                                It.mode & 1 && vt(N, Ge, h),
                                (h = It),
                                (Se = Ge);
                            var Ft = h.updateQueue;
                            if (Ft === null) {
                                var zt = new Set();
                                zt.add(Se), (h.updateQueue = zt);
                            } else Ft.add(Se);
                            break e;
                        } else {
                            if ((h & 1) === 0) {
                                vt(N, Ge, h), B1();
                                break e;
                            }
                            Se = Error(t(426));
                        }
                    } else if (ti && he.mode & 1) {
                        var qi = Ot(j);
                        if (qi !== null) {
                            (qi.flags & 65536) === 0 && (qi.flags |= 256),
                                ln(qi, j, he, N, h),
                                ju(C(Se, he));
                            break e;
                        }
                    }
                    (N = Se = C(Se, he)),
                        Mr !== 4 && (Mr = 2),
                        Nm === null ? (Nm = [N]) : Nm.push(N),
                        (N = j);
                    do {
                        switch (N.tag) {
                            case 3:
                                (N.flags |= 65536), (h &= -h), (N.lanes |= h);
                                var Oe = Te(N, Se, h);
                                eu(N, Oe);
                                break e;
                            case 1:
                                he = Se;
                                var Ee = N.type,
                                    ke = N.stateNode;
                                if (
                                    (N.flags & 128) === 0 &&
                                    (typeof Ee.getDerivedStateFromError ==
                                        'function' ||
                                        (ke !== null &&
                                            typeof ke.componentDidCatch ==
                                                'function' &&
                                            (Ju === null || !Ju.has(ke))))
                                ) {
                                    (N.flags |= 65536),
                                        (h &= -h),
                                        (N.lanes |= h);
                                    var yt = $e(N, he, h);
                                    eu(N, yt);
                                    break e;
                                }
                        }
                        N = N.return;
                    } while (N !== null);
                }
                FA(y);
            } catch (Gt) {
                (h = Gt), cr === y && y !== null && (cr = y = y.return);
                continue;
            }
            break;
        } while (!0);
    }
    function kA() {
        var c = Uv.current;
        return (Uv.current = ud), c === null ? ud : c;
    }
    function B1() {
        (Mr === 0 || Mr === 3 || Mr === 2) && (Mr = 4),
            Or === null ||
                ((yf & 268435455) === 0 && (kv & 268435455) === 0) ||
                tc(Or, Yr);
    }
    function Hv(c, h) {
        var y = On;
        On |= 2;
        var E = kA();
        (Or !== c || Yr !== h) && ((au = null), xf(c, h));
        do
            try {
                AN();
                break;
            } catch (R) {
                UA(c, R);
            }
        while (!0);
        if ((Ql(), (On = y), (Uv.current = E), cr !== null))
            throw Error(t(261));
        return (Or = null), (Yr = 0), Mr;
    }
    function AN() {
        for (; cr !== null; ) NA(cr);
    }
    function bN() {
        for (; cr !== null && !Ue(); ) NA(cr);
    }
    function NA(c) {
        var h = VA(c.alternate, c, _o);
        (c.memoizedProps = c.pendingProps),
            h === null ? FA(c) : (cr = h),
            (P1.current = null);
    }
    function FA(c) {
        var h = c;
        do {
            var y = h.alternate;
            if (((c = h.return), (h.flags & 32768) === 0)) {
                if (((y = _N(y, h, _o)), y !== null)) {
                    cr = y;
                    return;
                }
            } else {
                if (((y = xN(y, h)), y !== null)) {
                    (y.flags &= 32767), (cr = y);
                    return;
                }
                if (c !== null)
                    (c.flags |= 32768),
                        (c.subtreeFlags = 0),
                        (c.deletions = null);
                else {
                    (Mr = 6), (cr = null);
                    return;
                }
            }
            if (((h = h.sibling), h !== null)) {
                cr = h;
                return;
            }
            cr = h = c;
        } while (h !== null);
        Mr === 0 && (Mr = 5);
    }
    function Sf(c, h, y) {
        var E = Sn,
            R = Wo.transition;
        try {
            (Wo.transition = null), (Sn = 1), CN(c, h, y, E);
        } finally {
            (Wo.transition = R), (Sn = E);
        }
        return null;
    }
    function CN(c, h, y, E) {
        do pd();
        while (Qu !== null);
        if ((On & 6) !== 0) throw Error(t(327));
        y = c.finishedWork;
        var R = c.finishedLanes;
        if (y === null) return null;
        if (((c.finishedWork = null), (c.finishedLanes = 0), y === c.current))
            throw Error(t(177));
        (c.callbackNode = null), (c.callbackPriority = 0);
        var N = y.lanes | y.childLanes;
        if (
            (ys(c, N),
            c === Or && ((cr = Or = null), (Yr = 0)),
            ((y.subtreeFlags & 2064) === 0 && (y.flags & 2064) === 0) ||
                Fv ||
                ((Fv = !0),
                HA(xt, function () {
                    return pd(), null;
                })),
            (N = (y.flags & 15990) !== 0),
            (y.subtreeFlags & 15990) !== 0 || N)
        ) {
            (N = Wo.transition), (Wo.transition = null);
            var j = Sn;
            Sn = 1;
            var he = On;
            (On |= 4),
                (P1.current = null),
                wN(c, y),
                CA(y, c),
                or(um),
                (nr = !!Hu),
                (um = Hu = null),
                (c.current = y),
                MN(y),
                Ve(),
                (On = he),
                (Sn = j),
                (Wo.transition = N);
        } else c.current = y;
        if (
            (Fv && ((Fv = !1), (Qu = c), (Bv = R)),
            (N = c.pendingLanes),
            N === 0 && (Ju = null),
            ut(y.stateNode),
            Ks(c, ye()),
            h !== null)
        )
            for (E = c.onRecoverableError, y = 0; y < h.length; y++)
                (R = h[y]),
                    E(R.value, { componentStack: R.stack, digest: R.digest });
        if (Nv) throw ((Nv = !1), (c = D1), (D1 = null), c);
        return (
            (Bv & 1) !== 0 && c.tag !== 0 && pd(),
            (N = c.pendingLanes),
            (N & 1) !== 0 ? (c === O1 ? Fm++ : ((Fm = 0), (O1 = c))) : (Fm = 0),
            zo(),
            null
        );
    }
    function pd() {
        if (Qu !== null) {
            var c = Oo(Bv),
                h = Wo.transition,
                y = Sn;
            try {
                if (
                    ((Wo.transition = null),
                    (Sn = 16 > c ? 16 : c),
                    Qu === null)
                )
                    var E = !1;
                else {
                    if (((c = Qu), (Qu = null), (Bv = 0), (On & 6) !== 0))
                        throw Error(t(331));
                    var R = On;
                    for (On |= 4, Ut = c.current; Ut !== null; ) {
                        var N = Ut,
                            j = N.child;
                        if ((Ut.flags & 16) !== 0) {
                            var he = N.deletions;
                            if (he !== null) {
                                for (var Se = 0; Se < he.length; Se++) {
                                    var Ge = he[Se];
                                    for (Ut = Ge; Ut !== null; ) {
                                        var ft = Ut;
                                        switch (ft.tag) {
                                            case 0:
                                            case 11:
                                            case 15:
                                                Um(8, ft, N);
                                        }
                                        var dt = ft.child;
                                        if (dt !== null)
                                            (dt.return = ft), (Ut = dt);
                                        else
                                            for (; Ut !== null; ) {
                                                ft = Ut;
                                                var ct = ft.sibling,
                                                    It = ft.return;
                                                if ((MA(ft), ft === Ge)) {
                                                    Ut = null;
                                                    break;
                                                }
                                                if (ct !== null) {
                                                    (ct.return = It), (Ut = ct);
                                                    break;
                                                }
                                                Ut = It;
                                            }
                                    }
                                }
                                var Ft = N.alternate;
                                if (Ft !== null) {
                                    var zt = Ft.child;
                                    if (zt !== null) {
                                        Ft.child = null;
                                        do {
                                            var qi = zt.sibling;
                                            (zt.sibling = null), (zt = qi);
                                        } while (zt !== null);
                                    }
                                }
                                Ut = N;
                            }
                        }
                        if ((N.subtreeFlags & 2064) !== 0 && j !== null)
                            (j.return = N), (Ut = j);
                        else
                            e: for (; Ut !== null; ) {
                                if (((N = Ut), (N.flags & 2048) !== 0))
                                    switch (N.tag) {
                                        case 0:
                                        case 11:
                                        case 15:
                                            Um(9, N, N.return);
                                    }
                                var Oe = N.sibling;
                                if (Oe !== null) {
                                    (Oe.return = N.return), (Ut = Oe);
                                    break e;
                                }
                                Ut = N.return;
                            }
                    }
                    var Ee = c.current;
                    for (Ut = Ee; Ut !== null; ) {
                        j = Ut;
                        var ke = j.child;
                        if ((j.subtreeFlags & 2064) !== 0 && ke !== null)
                            (ke.return = j), (Ut = ke);
                        else
                            e: for (j = Ee; Ut !== null; ) {
                                if (((he = Ut), (he.flags & 2048) !== 0))
                                    try {
                                        switch (he.tag) {
                                            case 0:
                                            case 11:
                                            case 15:
                                                Ov(9, he);
                                        }
                                    } catch (Gt) {
                                        Ni(he, he.return, Gt);
                                    }
                                if (he === j) {
                                    Ut = null;
                                    break e;
                                }
                                var yt = he.sibling;
                                if (yt !== null) {
                                    (yt.return = he.return), (Ut = yt);
                                    break e;
                                }
                                Ut = he.return;
                            }
                    }
                    if (
                        ((On = R),
                        zo(),
                        mt && typeof mt.onPostCommitFiberRoot == 'function')
                    )
                        try {
                            mt.onPostCommitFiberRoot(Wt, c);
                        } catch {}
                    E = !0;
                }
                return E;
            } finally {
                (Sn = y), (Wo.transition = h);
            }
        }
        return !1;
    }
    function BA(c, h, y) {
        (h = C(y, h)),
            (h = Te(c, h, 1)),
            (c = li(c, h, 1)),
            (h = Ps()),
            c !== null && (ei(c, 1, h), Ks(c, h));
    }
    function Ni(c, h, y) {
        if (c.tag === 3) BA(c, c, y);
        else
            for (; h !== null; ) {
                if (h.tag === 3) {
                    BA(h, c, y);
                    break;
                } else if (h.tag === 1) {
                    var E = h.stateNode;
                    if (
                        typeof h.type.getDerivedStateFromError == 'function' ||
                        (typeof E.componentDidCatch == 'function' &&
                            (Ju === null || !Ju.has(E)))
                    ) {
                        (c = C(y, c)),
                            (c = $e(h, c, 1)),
                            (h = li(h, c, 1)),
                            (c = Ps()),
                            h !== null && (ei(h, 1, c), Ks(h, c));
                        break;
                    }
                }
                h = h.return;
            }
    }
    function RN(c, h, y) {
        var E = c.pingCache;
        E !== null && E.delete(h),
            (h = Ps()),
            (c.pingedLanes |= c.suspendedLanes & y),
            Or === c &&
                (Yr & y) === y &&
                (Mr === 4 ||
                (Mr === 3 && (Yr & 130023424) === Yr && 500 > ye() - I1)
                    ? xf(c, 0)
                    : (L1 |= y)),
            Ks(c, h);
    }
    function zA(c, h) {
        h === 0 &&
            ((c.mode & 1) === 0
                ? (h = 1)
                : ((h = Dn),
                  (Dn <<= 1),
                  (Dn & 130023424) === 0 && (Dn = 4194304)));
        var y = Ps();
        (c = mo(c, h)), c !== null && (ei(c, h, y), Ks(c, y));
    }
    function PN(c) {
        var h = c.memoizedState,
            y = 0;
        h !== null && (y = h.retryLane), zA(c, y);
    }
    function LN(c, h) {
        var y = 0;
        switch (c.tag) {
            case 13:
                var E = c.stateNode,
                    R = c.memoizedState;
                R !== null && (y = R.retryLane);
                break;
            case 19:
                E = c.stateNode;
                break;
            default:
                throw Error(t(314));
        }
        E !== null && E.delete(h), zA(c, y);
    }
    var VA;
    VA = function (c, h, y) {
        if (c !== null)
            if (c.memoizedProps !== h.pendingProps || Hr.current) mn = !0;
            else {
                if ((c.lanes & y) === 0 && (h.flags & 128) === 0)
                    return (mn = !1), yN(c, h, y);
                mn = (c.flags & 131072) !== 0;
            }
        else (mn = !1), ti && (h.flags & 1048576) !== 0 && vm(h, Qh, h.index);
        switch (((h.lanes = 0), h.tag)) {
            case 2:
                var E = h.type;
                Iv(c, h), (c = h.pendingProps);
                var R = Xl(h, yr.current);
                cl(h, y), (R = hf(null, h, E, c, R, y));
                var N = Tm();
                return (
                    (h.flags |= 1),
                    typeof R == 'object' &&
                    R !== null &&
                    typeof R.render == 'function' &&
                    R.$$typeof === void 0
                        ? ((h.tag = 1),
                          (h.memoizedState = null),
                          (h.updateQueue = null),
                          Lr(E) ? ((N = !0), Yl(h)) : (N = !1),
                          (h.memoizedState =
                              R.state !== null && R.state !== void 0
                                  ? R.state
                                  : null),
                          dn(h),
                          (R.updater = cd),
                          (h.stateNode = R),
                          (R._reactInternals = h),
                          M(h, E, c, y),
                          (h = fn(null, h, E, !0, N, y)))
                        : ((h.tag = 0),
                          ti && N && ym(h),
                          Rt(null, h, R, y),
                          (h = h.child)),
                    h
                );
            case 16:
                E = h.elementType;
                e: {
                    switch (
                        (Iv(c, h),
                        (c = h.pendingProps),
                        (R = E._init),
                        (E = R(E._payload)),
                        (h.type = E),
                        (R = h.tag = DN(E)),
                        (c = Ys(E, c)),
                        R)
                    ) {
                        case 0:
                            h = At(null, h, E, c, y);
                            break e;
                        case 1:
                            h = Vt(null, h, E, c, y);
                            break e;
                        case 11:
                            h = wr(null, h, E, c, y);
                            break e;
                        case 14:
                            h = Rs(null, h, E, Ys(E.type, c), y);
                            break e;
                    }
                    throw Error(t(306, E, ''));
                }
                return h;
            case 0:
                return (
                    (E = h.type),
                    (R = h.pendingProps),
                    (R = h.elementType === E ? R : Ys(E, R)),
                    At(c, h, E, R, y)
                );
            case 1:
                return (
                    (E = h.type),
                    (R = h.pendingProps),
                    (R = h.elementType === E ? R : Ys(E, R)),
                    Vt(c, h, E, R, y)
                );
            case 3:
                e: {
                    if ((un(h), c === null)) throw Error(t(387));
                    (E = h.pendingProps),
                        (N = h.memoizedState),
                        (R = N.element),
                        bi(c, h),
                        Si(h, E, null, y);
                    var j = h.memoizedState;
                    if (((E = j.element), N.isDehydrated))
                        if (
                            ((N = {
                                element: E,
                                isDehydrated: !1,
                                cache: j.cache,
                                pendingSuspenseBoundaries:
                                    j.pendingSuspenseBoundaries,
                                transitions: j.transitions,
                            }),
                            (h.updateQueue.baseState = N),
                            (h.memoizedState = N),
                            h.flags & 256)
                        ) {
                            (R = C(Error(t(423)), h)), (h = bn(c, h, E, y, R));
                            break e;
                        } else if (E !== R) {
                            (R = C(Error(t(424)), h)), (h = bn(c, h, E, y, R));
                            break e;
                        } else
                            for (
                                Wr = ma(h.stateNode.containerInfo.firstChild),
                                    _r = h,
                                    ti = !0,
                                    Xs = null,
                                    y = of(h, null, E, y),
                                    h.child = y;
                                y;

                            )
                                (y.flags = (y.flags & -3) | 4096),
                                    (y = y.sibling);
                    else {
                        if ((ul(), E === R)) {
                            h = ou(c, h, y);
                            break e;
                        }
                        Rt(c, h, E, y);
                    }
                    h = h.child;
                }
                return h;
            case 5:
                return (
                    nu(h),
                    c === null && td(h),
                    (E = h.type),
                    (R = h.pendingProps),
                    (N = c !== null ? c.memoizedProps : null),
                    (j = R.children),
                    cm(E, R)
                        ? (j = null)
                        : N !== null && cm(E, N) && (h.flags |= 32),
                    qe(c, h),
                    Rt(c, h, j, y),
                    h.child
                );
            case 6:
                return c === null && td(h), null;
            case 13:
                return ba(c, h, y);
            case 4:
                return (
                    cf(h, h.stateNode.containerInfo),
                    (E = h.pendingProps),
                    c === null ? (h.child = Zl(h, null, E, y)) : Rt(c, h, E, y),
                    h.child
                );
            case 11:
                return (
                    (E = h.type),
                    (R = h.pendingProps),
                    (R = h.elementType === E ? R : Ys(E, R)),
                    wr(c, h, E, R, y)
                );
            case 7:
                return Rt(c, h, h.pendingProps, y), h.child;
            case 8:
                return Rt(c, h, h.pendingProps.children, y), h.child;
            case 12:
                return Rt(c, h, h.pendingProps.children, y), h.child;
            case 10:
                e: {
                    if (
                        ((E = h.type._context),
                        (R = h.pendingProps),
                        (N = h.memoizedProps),
                        (j = R.value),
                        Yn($l, E._currentValue),
                        (E._currentValue = j),
                        N !== null)
                    )
                        if (ws(N.value, j)) {
                            if (N.children === R.children && !Hr.current) {
                                h = ou(c, h, y);
                                break e;
                            }
                        } else
                            for (
                                N = h.child, N !== null && (N.return = h);
                                N !== null;

                            ) {
                                var he = N.dependencies;
                                if (he !== null) {
                                    j = N.child;
                                    for (
                                        var Se = he.firstContext;
                                        Se !== null;

                                    ) {
                                        if (Se.context === E) {
                                            if (N.tag === 1) {
                                                (Se = Gn(-1, y & -y)),
                                                    (Se.tag = 2);
                                                var Ge = N.updateQueue;
                                                if (Ge !== null) {
                                                    Ge = Ge.shared;
                                                    var ft = Ge.pending;
                                                    ft === null
                                                        ? (Se.next = Se)
                                                        : ((Se.next = ft.next),
                                                          (ft.next = Se)),
                                                        (Ge.pending = Se);
                                                }
                                            }
                                            (N.lanes |= y),
                                                (Se = N.alternate),
                                                Se !== null && (Se.lanes |= y),
                                                lf(N.return, y, h),
                                                (he.lanes |= y);
                                            break;
                                        }
                                        Se = Se.next;
                                    }
                                } else if (N.tag === 10)
                                    j = N.type === h.type ? null : N.child;
                                else if (N.tag === 18) {
                                    if (((j = N.return), j === null))
                                        throw Error(t(341));
                                    (j.lanes |= y),
                                        (he = j.alternate),
                                        he !== null && (he.lanes |= y),
                                        lf(j, y, h),
                                        (j = N.sibling);
                                } else j = N.child;
                                if (j !== null) j.return = N;
                                else
                                    for (j = N; j !== null; ) {
                                        if (j === h) {
                                            j = null;
                                            break;
                                        }
                                        if (((N = j.sibling), N !== null)) {
                                            (N.return = j.return), (j = N);
                                            break;
                                        }
                                        j = j.return;
                                    }
                                N = j;
                            }
                    Rt(c, h, R.children, y), (h = h.child);
                }
                return h;
            case 9:
                return (
                    (R = h.type),
                    (E = h.pendingProps.children),
                    cl(h, y),
                    (R = Ts(R)),
                    (E = E(R)),
                    (h.flags |= 1),
                    Rt(c, h, E, y),
                    h.child
                );
            case 14:
                return (
                    (E = h.type),
                    (R = Ys(E, h.pendingProps)),
                    (R = Ys(E.type, R)),
                    Rs(c, h, E, R, y)
                );
            case 15:
                return Ne(c, h, h.type, h.pendingProps, y);
            case 17:
                return (
                    (E = h.type),
                    (R = h.pendingProps),
                    (R = h.elementType === E ? R : Ys(E, R)),
                    Iv(c, h),
                    (h.tag = 1),
                    Lr(E) ? ((c = !0), Yl(h)) : (c = !1),
                    cl(h, y),
                    p(h, E, R),
                    M(h, E, R, y),
                    fn(null, h, E, !0, c, y)
                );
            case 19:
                return yA(c, h, y);
            case 22:
                return be(c, h, y);
        }
        throw Error(t(156, h.tag));
    };
    function HA(c, h) {
        return ue(c, h);
    }
    function IN(c, h, y, E) {
        (this.tag = c),
            (this.key = y),
            (this.sibling =
                this.child =
                this.return =
                this.stateNode =
                this.type =
                this.elementType =
                    null),
            (this.index = 0),
            (this.ref = null),
            (this.pendingProps = h),
            (this.dependencies =
                this.memoizedState =
                this.updateQueue =
                this.memoizedProps =
                    null),
            (this.mode = E),
            (this.subtreeFlags = this.flags = 0),
            (this.deletions = null),
            (this.childLanes = this.lanes = 0),
            (this.alternate = null);
    }
    function jo(c, h, y, E) {
        return new IN(c, h, y, E);
    }
    function z1(c) {
        return (c = c.prototype), !(!c || !c.isReactComponent);
    }
    function DN(c) {
        if (typeof c == 'function') return z1(c) ? 1 : 0;
        if (c != null) {
            if (((c = c.$$typeof), c === W)) return 11;
            if (c === le) return 14;
        }
        return 2;
    }
    function nc(c, h) {
        var y = c.alternate;
        return (
            y === null
                ? ((y = jo(c.tag, h, c.key, c.mode)),
                  (y.elementType = c.elementType),
                  (y.type = c.type),
                  (y.stateNode = c.stateNode),
                  (y.alternate = c),
                  (c.alternate = y))
                : ((y.pendingProps = h),
                  (y.type = c.type),
                  (y.flags = 0),
                  (y.subtreeFlags = 0),
                  (y.deletions = null)),
            (y.flags = c.flags & 14680064),
            (y.childLanes = c.childLanes),
            (y.lanes = c.lanes),
            (y.child = c.child),
            (y.memoizedProps = c.memoizedProps),
            (y.memoizedState = c.memoizedState),
            (y.updateQueue = c.updateQueue),
            (h = c.dependencies),
            (y.dependencies =
                h === null
                    ? null
                    : { lanes: h.lanes, firstContext: h.firstContext }),
            (y.sibling = c.sibling),
            (y.index = c.index),
            (y.ref = c.ref),
            y
        );
    }
    function Gv(c, h, y, E, R, N) {
        var j = 2;
        if (((E = c), typeof c == 'function')) z1(c) && (j = 1);
        else if (typeof c == 'string') j = 5;
        else
            e: switch (c) {
                case D:
                    return wf(y.children, R, N, h);
                case O:
                    (j = 8), (R |= 8);
                    break;
                case I:
                    return (
                        (c = jo(12, y, h, R | 2)),
                        (c.elementType = I),
                        (c.lanes = N),
                        c
                    );
                case q:
                    return (
                        (c = jo(13, y, h, R)),
                        (c.elementType = q),
                        (c.lanes = N),
                        c
                    );
                case K:
                    return (
                        (c = jo(19, y, h, R)),
                        (c.elementType = K),
                        (c.lanes = N),
                        c
                    );
                case de:
                    return Wv(y, R, N, h);
                default:
                    if (typeof c == 'object' && c !== null)
                        switch (c.$$typeof) {
                            case U:
                                j = 10;
                                break e;
                            case H:
                                j = 9;
                                break e;
                            case W:
                                j = 11;
                                break e;
                            case le:
                                j = 14;
                                break e;
                            case ee:
                                (j = 16), (E = null);
                                break e;
                        }
                    throw Error(t(130, c == null ? c : typeof c, ''));
            }
        return (
            (h = jo(j, y, h, R)),
            (h.elementType = c),
            (h.type = E),
            (h.lanes = N),
            h
        );
    }
    function wf(c, h, y, E) {
        return (c = jo(7, c, E, h)), (c.lanes = y), c;
    }
    function Wv(c, h, y, E) {
        return (
            (c = jo(22, c, E, h)),
            (c.elementType = de),
            (c.lanes = y),
            (c.stateNode = { isHidden: !1 }),
            c
        );
    }
    function V1(c, h, y) {
        return (c = jo(6, c, null, h)), (c.lanes = y), c;
    }
    function H1(c, h, y) {
        return (
            (h = jo(4, c.children !== null ? c.children : [], c.key, h)),
            (h.lanes = y),
            (h.stateNode = {
                containerInfo: c.containerInfo,
                pendingChildren: null,
                implementation: c.implementation,
            }),
            h
        );
    }
    function ON(c, h, y, E, R) {
        (this.tag = h),
            (this.containerInfo = c),
            (this.finishedWork =
                this.pingCache =
                this.current =
                this.pendingChildren =
                    null),
            (this.timeoutHandle = -1),
            (this.callbackNode = this.pendingContext = this.context = null),
            (this.callbackPriority = 0),
            (this.eventTimes = Wi(0)),
            (this.expirationTimes = Wi(-1)),
            (this.entangledLanes =
                this.finishedLanes =
                this.mutableReadLanes =
                this.expiredLanes =
                this.pingedLanes =
                this.suspendedLanes =
                this.pendingLanes =
                    0),
            (this.entanglements = Wi(0)),
            (this.identifierPrefix = E),
            (this.onRecoverableError = R),
            (this.mutableSourceEagerHydrationData = null);
    }
    function G1(c, h, y, E, R, N, j, he, Se) {
        return (
            (c = new ON(c, h, y, he, Se)),
            h === 1 ? ((h = 1), N === !0 && (h |= 8)) : (h = 0),
            (N = jo(3, null, null, h)),
            (c.current = N),
            (N.stateNode = c),
            (N.memoizedState = {
                element: E,
                isDehydrated: y,
                cache: null,
                transitions: null,
                pendingSuspenseBoundaries: null,
            }),
            dn(N),
            c
        );
    }
    function UN(c, h, y) {
        var E =
            3 < arguments.length && arguments[3] !== void 0
                ? arguments[3]
                : null;
        return {
            $$typeof: L,
            key: E == null ? null : '' + E,
            children: c,
            containerInfo: h,
            implementation: y,
        };
    }
    function GA(c) {
        if (!c) return va;
        c = c._reactInternals;
        e: {
            if (Q(c) !== c || c.tag !== 1) throw Error(t(170));
            var h = c;
            do {
                switch (h.tag) {
                    case 3:
                        h = h.stateNode.context;
                        break e;
                    case 1:
                        if (Lr(h.type)) {
                            h =
                                h.stateNode
                                    .__reactInternalMemoizedMergedChildContext;
                            break e;
                        }
                }
                h = h.return;
            } while (h !== null);
            throw Error(t(171));
        }
        if (c.tag === 1) {
            var y = c.type;
            if (Lr(y)) return ef(c, y, h);
        }
        return h;
    }
    function WA(c, h, y, E, R, N, j, he, Se) {
        return (
            (c = G1(y, E, !0, c, R, N, j, he, Se)),
            (c.context = GA(null)),
            (y = c.current),
            (E = Ps()),
            (R = ec(y)),
            (N = Gn(E, R)),
            (N.callback = h ?? null),
            li(y, N, R),
            (c.current.lanes = R),
            ei(c, R, E),
            Ks(c, E),
            c
        );
    }
    function jv(c, h, y, E) {
        var R = h.current,
            N = Ps(),
            j = ec(R);
        return (
            (y = GA(y)),
            h.context === null ? (h.context = y) : (h.pendingContext = y),
            (h = Gn(N, j)),
            (h.payload = { element: c }),
            (E = E === void 0 ? null : E),
            E !== null && (h.callback = E),
            (c = li(R, h, j)),
            c !== null && (Pa(c, R, j, N), Ir(c, R, j)),
            j
        );
    }
    function Xv(c) {
        if (((c = c.current), !c.child)) return null;
        switch (c.child.tag) {
            case 5:
                return c.child.stateNode;
            default:
                return c.child.stateNode;
        }
    }
    function jA(c, h) {
        if (((c = c.memoizedState), c !== null && c.dehydrated !== null)) {
            var y = c.retryLane;
            c.retryLane = y !== 0 && y < h ? y : h;
        }
    }
    function W1(c, h) {
        jA(c, h), (c = c.alternate) && jA(c, h);
    }
    function kN() {
        return null;
    }
    var XA =
        typeof reportError == 'function'
            ? reportError
            : function (c) {
                  console.error(c);
              };
    function j1(c) {
        this._internalRoot = c;
    }
    (Yv.prototype.render = j1.prototype.render =
        function (c) {
            var h = this._internalRoot;
            if (h === null) throw Error(t(409));
            jv(c, h, null, null);
        }),
        (Yv.prototype.unmount = j1.prototype.unmount =
            function () {
                var c = this._internalRoot;
                if (c !== null) {
                    this._internalRoot = null;
                    var h = c.containerInfo;
                    _f(function () {
                        jv(null, c, null, null);
                    }),
                        (h[Es] = null);
                }
            });
    function Yv(c) {
        this._internalRoot = c;
    }
    Yv.prototype.unstable_scheduleHydration = function (c) {
        if (c) {
            var h = Uo();
            c = { blockedOn: null, target: c, priority: h };
            for (
                var y = 0;
                y < zs.length && h !== 0 && h < zs[y].priority;
                y++
            );
            zs.splice(y, 0, c), y === 0 && Rr(c);
        }
    };
    function X1(c) {
        return !(
            !c ||
            (c.nodeType !== 1 && c.nodeType !== 9 && c.nodeType !== 11)
        );
    }
    function qv(c) {
        return !(
            !c ||
            (c.nodeType !== 1 &&
                c.nodeType !== 9 &&
                c.nodeType !== 11 &&
                (c.nodeType !== 8 ||
                    c.nodeValue !== ' react-mount-point-unstable '))
        );
    }
    function YA() {}
    function NN(c, h, y, E, R) {
        if (R) {
            if (typeof E == 'function') {
                var N = E;
                E = function () {
                    var Ge = Xv(j);
                    N.call(Ge);
                };
            }
            var j = WA(h, E, c, 0, null, !1, !1, '', YA);
            return (
                (c._reactRootContainer = j),
                (c[Es] = j.current),
                zu(c.nodeType === 8 ? c.parentNode : c),
                _f(),
                j
            );
        }
        for (; (R = c.lastChild); ) c.removeChild(R);
        if (typeof E == 'function') {
            var he = E;
            E = function () {
                var Ge = Xv(Se);
                he.call(Ge);
            };
        }
        var Se = G1(c, 0, !1, null, null, !1, !1, '', YA);
        return (
            (c._reactRootContainer = Se),
            (c[Es] = Se.current),
            zu(c.nodeType === 8 ? c.parentNode : c),
            _f(function () {
                jv(h, Se, y, E);
            }),
            Se
        );
    }
    function Kv(c, h, y, E, R) {
        var N = y._reactRootContainer;
        if (N) {
            var j = N;
            if (typeof R == 'function') {
                var he = R;
                R = function () {
                    var Se = Xv(j);
                    he.call(Se);
                };
            }
            jv(h, j, c, R);
        } else j = NN(y, h, c, R, E);
        return Xv(j);
    }
    (Za = function (c) {
        switch (c.tag) {
            case 3:
                var h = c.stateNode;
                if (h.current.memoizedState.isDehydrated) {
                    var y = $t(h.pendingLanes);
                    y !== 0 &&
                        (ao(h, y | 1),
                        Ks(h, ye()),
                        (On & 6) === 0 && ((dd = ye() + 500), zo()));
                }
                break;
            case 13:
                _f(function () {
                    var E = mo(c, 1);
                    if (E !== null) {
                        var R = Ps();
                        Pa(E, c, 1, R);
                    }
                }),
                    W1(c, 1);
        }
    }),
        (Cu = function (c) {
            if (c.tag === 13) {
                var h = mo(c, 134217728);
                if (h !== null) {
                    var y = Ps();
                    Pa(h, c, 134217728, y);
                }
                W1(c, 134217728);
            }
        }),
        (Ru = function (c) {
            if (c.tag === 13) {
                var h = ec(c),
                    y = mo(c, h);
                if (y !== null) {
                    var E = Ps();
                    Pa(y, c, h, E);
                }
                W1(c, h);
            }
        }),
        (Uo = function () {
            return Sn;
        }),
        (Ol = function (c, h) {
            var y = Sn;
            try {
                return (Sn = c), h();
            } finally {
                Sn = y;
            }
        }),
        (ve = function (c, h, y) {
            switch (h) {
                case 'input':
                    if (
                        (st(c, y),
                        (h = y.name),
                        y.type === 'radio' && h != null)
                    ) {
                        for (y = c; y.parentNode; ) y = y.parentNode;
                        for (
                            y = y.querySelectorAll(
                                'input[name=' +
                                    JSON.stringify('' + h) +
                                    '][type="radio"]'
                            ),
                                h = 0;
                            h < y.length;
                            h++
                        ) {
                            var E = y[h];
                            if (E !== c && E.form === c.form) {
                                var R = Zh(E);
                                if (!R) throw Error(t(90));
                                X(E), st(E, R);
                            }
                        }
                    }
                    break;
                case 'textarea':
                    Ie(c, y);
                    break;
                case 'select':
                    (h = y.value), h != null && V(c, !!y.multiple, h, !1);
            }
        }),
        (en = N1),
        (Mt = _f);
    var FN = { usingClientEntryPoint: !1, Events: [ga, Ai, Zh, Et, Qt, N1] },
        Bm = {
            findFiberByHostInstance: ll,
            bundleType: 0,
            version: '18.3.1',
            rendererPackageName: 'react-dom',
        },
        BN = {
            bundleType: Bm.bundleType,
            version: Bm.version,
            rendererPackageName: Bm.rendererPackageName,
            rendererConfig: Bm.rendererConfig,
            overrideHookState: null,
            overrideHookStateDeletePath: null,
            overrideHookStateRenamePath: null,
            overrideProps: null,
            overridePropsDeletePath: null,
            overridePropsRenamePath: null,
            setErrorHandler: null,
            setSuspenseHandler: null,
            scheduleUpdate: null,
            currentDispatcherRef: b.ReactCurrentDispatcher,
            findHostInstanceByFiber: function (c) {
                return (c = oe(c)), c === null ? null : c.stateNode;
            },
            findFiberByHostInstance: Bm.findFiberByHostInstance || kN,
            findHostInstancesForRefresh: null,
            scheduleRefresh: null,
            scheduleRoot: null,
            setRefreshHandler: null,
            getCurrentFiber: null,
            reconcilerVersion: '18.3.1-next-f1338f8080-20240426',
        };
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < 'u') {
        var Zv = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (!Zv.isDisabled && Zv.supportsFiber)
            try {
                (Wt = Zv.inject(BN)), (mt = Zv);
            } catch {}
    }
    return (
        (Zs.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = FN),
        (Zs.createPortal = function (c, h) {
            var y =
                2 < arguments.length && arguments[2] !== void 0
                    ? arguments[2]
                    : null;
            if (!X1(h)) throw Error(t(200));
            return UN(c, h, null, y);
        }),
        (Zs.createRoot = function (c, h) {
            if (!X1(c)) throw Error(t(299));
            var y = !1,
                E = '',
                R = XA;
            return (
                h != null &&
                    (h.unstable_strictMode === !0 && (y = !0),
                    h.identifierPrefix !== void 0 && (E = h.identifierPrefix),
                    h.onRecoverableError !== void 0 &&
                        (R = h.onRecoverableError)),
                (h = G1(c, 1, !1, null, null, y, !1, E, R)),
                (c[Es] = h.current),
                zu(c.nodeType === 8 ? c.parentNode : c),
                new j1(h)
            );
        }),
        (Zs.findDOMNode = function (c) {
            if (c == null) return null;
            if (c.nodeType === 1) return c;
            var h = c._reactInternals;
            if (h === void 0)
                throw typeof c.render == 'function'
                    ? Error(t(188))
                    : ((c = Object.keys(c).join(',')), Error(t(268, c)));
            return (c = oe(h)), (c = c === null ? null : c.stateNode), c;
        }),
        (Zs.flushSync = function (c) {
            return _f(c);
        }),
        (Zs.hydrate = function (c, h, y) {
            if (!qv(h)) throw Error(t(200));
            return Kv(null, c, h, !0, y);
        }),
        (Zs.hydrateRoot = function (c, h, y) {
            if (!X1(c)) throw Error(t(405));
            var E = (y != null && y.hydratedSources) || null,
                R = !1,
                N = '',
                j = XA;
            if (
                (y != null &&
                    (y.unstable_strictMode === !0 && (R = !0),
                    y.identifierPrefix !== void 0 && (N = y.identifierPrefix),
                    y.onRecoverableError !== void 0 &&
                        (j = y.onRecoverableError)),
                (h = WA(h, null, c, 1, y ?? null, R, !1, N, j)),
                (c[Es] = h.current),
                zu(c),
                E)
            )
                for (c = 0; c < E.length; c++)
                    (y = E[c]),
                        (R = y._getVersion),
                        (R = R(y._source)),
                        h.mutableSourceEagerHydrationData == null
                            ? (h.mutableSourceEagerHydrationData = [y, R])
                            : h.mutableSourceEagerHydrationData.push(y, R);
            return new Yv(h);
        }),
        (Zs.render = function (c, h, y) {
            if (!qv(h)) throw Error(t(200));
            return Kv(null, c, h, !1, y);
        }),
        (Zs.unmountComponentAtNode = function (c) {
            if (!qv(c)) throw Error(t(40));
            return c._reactRootContainer
                ? (_f(function () {
                      Kv(null, null, c, !1, function () {
                          (c._reactRootContainer = null), (c[Es] = null);
                      });
                  }),
                  !0)
                : !1;
        }),
        (Zs.unstable_batchedUpdates = N1),
        (Zs.unstable_renderSubtreeIntoContainer = function (c, h, y, E) {
            if (!qv(y)) throw Error(t(200));
            if (c == null || c._reactInternals === void 0) throw Error(t(38));
            return Kv(c, h, y, !1, E);
        }),
        (Zs.version = '18.3.1-next-f1338f8080-20240426'),
        Zs
    );
}
var tb;
function YN() {
    if (tb) return K1.exports;
    tb = 1;
    function r() {
        if (
            !(
                typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > 'u' ||
                typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != 'function'
            )
        )
            try {
                __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(r);
            } catch (e) {
                console.error(e);
            }
    }
    return r(), (K1.exports = XN()), K1.exports;
}
var nb;
function qN() {
    if (nb) return $v;
    nb = 1;
    var r = YN();
    return ($v.createRoot = r.createRoot), ($v.hydrateRoot = r.hydrateRoot), $v;
}
var KN = qN();
const ZN = rE(KN),
    $N = 'modulepreload',
    JN = function (r) {
        return '/' + r;
    },
    ib = {},
    Do = function (e, t, n) {
        let i = Promise.resolve();
        if (t && t.length > 0) {
            let o = function (u) {
                return Promise.all(
                    u.map((f) =>
                        Promise.resolve(f).then(
                            (d) => ({ status: 'fulfilled', value: d }),
                            (d) => ({ status: 'rejected', reason: d })
                        )
                    )
                );
            };
            document.getElementsByTagName('link');
            const a = document.querySelector('meta[property=csp-nonce]'),
                l =
                    (a == null ? void 0 : a.nonce) ||
                    (a == null ? void 0 : a.getAttribute('nonce'));
            i = o(
                t.map((u) => {
                    if (((u = JN(u)), u in ib)) return;
                    ib[u] = !0;
                    const f = u.endsWith('.css'),
                        d = f ? '[rel="stylesheet"]' : '';
                    if (document.querySelector(`link[href="${u}"]${d}`)) return;
                    const m = document.createElement('link');
                    if (
                        ((m.rel = f ? 'stylesheet' : $N),
                        f || (m.as = 'script'),
                        (m.crossOrigin = ''),
                        (m.href = u),
                        l && m.setAttribute('nonce', l),
                        document.head.appendChild(m),
                        f)
                    )
                        return new Promise((v, _) => {
                            m.addEventListener('load', v),
                                m.addEventListener('error', () =>
                                    _(
                                        new Error(
                                            `Unable to preload CSS for ${u}`
                                        )
                                    )
                                );
                        });
                })
            );
        }
        function s(o) {
            const a = new Event('vite:preloadError', { cancelable: !0 });
            if (((a.payload = o), window.dispatchEvent(a), !a.defaultPrevented))
                throw o;
        }
        return i.then((o) => {
            for (const a of o || []) a.status === 'rejected' && s(a.reason);
            return e().catch(s);
        });
    },
    QN = () => {
        const r = localStorage.getItem('abm-mytick-theme') === 'dark';
        return (
            r
                ? document.documentElement.classList.add('dark')
                : document.documentElement.classList.remove('dark'),
            r
        );
    },
    sE = Y.createContext({});
function oE(r) {
    const e = Y.useRef(null);
    return e.current === null && (e.current = r()), e.current;
}
const aE = typeof window < 'u',
    TL = aE ? Y.useLayoutEffect : Y.useEffect,
    Mx = Y.createContext(null);
function lE(r, e) {
    r.indexOf(e) === -1 && r.push(e);
}
function uE(r, e) {
    const t = r.indexOf(e);
    t > -1 && r.splice(t, 1);
}
const Su = (r, e, t) => (t > e ? e : t < r ? r : t);
let cE = () => {};
const wu = {},
    AL = (r) => /^-?(?:\d+(?:\.\d+)?|\.\d+)$/u.test(r);
function bL(r) {
    return typeof r == 'object' && r !== null;
}
const CL = (r) => /^0[^.\s]+$/u.test(r);
function fE(r) {
    let e;
    return () => (e === void 0 && (e = r()), e);
}
const ta = (r) => r,
    eF = (r, e) => (t) => e(r(t)),
    k0 = (...r) => r.reduce(eF),
    $g = (r, e, t) => {
        const n = e - r;
        return n === 0 ? 1 : (t - r) / n;
    };
class hE {
    constructor() {
        this.subscriptions = [];
    }
    add(e) {
        return lE(this.subscriptions, e), () => uE(this.subscriptions, e);
    }
    notify(e, t, n) {
        const i = this.subscriptions.length;
        if (i)
            if (i === 1) this.subscriptions[0](e, t, n);
            else
                for (let s = 0; s < i; s++) {
                    const o = this.subscriptions[s];
                    o && o(e, t, n);
                }
    }
    getSize() {
        return this.subscriptions.length;
    }
    clear() {
        this.subscriptions.length = 0;
    }
}
const wl = (r) => r * 1e3,
    Ml = (r) => r / 1e3;
function RL(r, e) {
    return e ? r * (1e3 / e) : 0;
}
const PL = (r, e, t) =>
        (((1 - 3 * t + 3 * e) * r + (3 * t - 6 * e)) * r + 3 * e) * r,
    tF = 1e-7,
    nF = 12;
function iF(r, e, t, n, i) {
    let s,
        o,
        a = 0;
    do (o = e + (t - e) / 2), (s = PL(o, n, i) - r), s > 0 ? (t = o) : (e = o);
    while (Math.abs(s) > tF && ++a < nF);
    return o;
}
function N0(r, e, t, n) {
    if (r === e && t === n) return ta;
    const i = (s) => iF(s, 0, 1, r, t);
    return (s) => (s === 0 || s === 1 ? s : PL(i(s), e, n));
}
const LL = (r) => (e) => (e <= 0.5 ? r(2 * e) / 2 : (2 - r(2 * (1 - e))) / 2),
    IL = (r) => (e) => 1 - r(1 - e),
    DL = N0(0.33, 1.53, 0.69, 0.99),
    dE = IL(DL),
    OL = LL(dE),
    UL = (r) =>
        (r *= 2) < 1 ? 0.5 * dE(r) : 0.5 * (2 - Math.pow(2, -10 * (r - 1))),
    pE = (r) => 1 - Math.sin(Math.acos(r)),
    kL = IL(pE),
    NL = LL(pE),
    rF = N0(0.42, 0, 1, 1),
    sF = N0(0, 0, 0.58, 1),
    FL = N0(0.42, 0, 0.58, 1),
    oF = (r) => Array.isArray(r) && typeof r[0] != 'number',
    BL = (r) => Array.isArray(r) && typeof r[0] == 'number',
    aF = {
        linear: ta,
        easeIn: rF,
        easeInOut: FL,
        easeOut: sF,
        circIn: pE,
        circInOut: NL,
        circOut: kL,
        backIn: dE,
        backInOut: OL,
        backOut: DL,
        anticipate: UL,
    },
    lF = (r) => typeof r == 'string',
    rb = (r) => {
        if (BL(r)) {
            cE(r.length === 4);
            const [e, t, n, i] = r;
            return N0(e, t, n, i);
        } else if (lF(r)) return aF[r];
        return r;
    },
    Jv = [
        'setup',
        'read',
        'resolveKeyframes',
        'preUpdate',
        'update',
        'preRender',
        'render',
        'postRender',
    ];
function uF(r, e) {
    let t = new Set(),
        n = new Set(),
        i = !1,
        s = !1;
    const o = new WeakSet();
    let a = { delta: 0, timestamp: 0, isProcessing: !1 };
    function l(f) {
        o.has(f) && (u.schedule(f), r()), f(a);
    }
    const u = {
        schedule: (f, d = !1, m = !1) => {
            const _ = m && i ? t : n;
            return d && o.add(f), _.has(f) || _.add(f), f;
        },
        cancel: (f) => {
            n.delete(f), o.delete(f);
        },
        process: (f) => {
            if (((a = f), i)) {
                s = !0;
                return;
            }
            (i = !0),
                ([t, n] = [n, t]),
                t.forEach(l),
                t.clear(),
                (i = !1),
                s && ((s = !1), u.process(f));
        },
    };
    return u;
}
const cF = 40;
function zL(r, e) {
    let t = !1,
        n = !0;
    const i = { delta: 0, timestamp: 0, isProcessing: !1 },
        s = () => (t = !0),
        o = Jv.reduce((T, b) => ((T[b] = uF(s)), T), {}),
        {
            setup: a,
            read: l,
            resolveKeyframes: u,
            preUpdate: f,
            update: d,
            preRender: m,
            render: v,
            postRender: _,
        } = o,
        S = () => {
            const T = wu.useManualTiming ? i.timestamp : performance.now();
            (t = !1),
                wu.useManualTiming ||
                    (i.delta = n
                        ? 1e3 / 60
                        : Math.max(Math.min(T - i.timestamp, cF), 1)),
                (i.timestamp = T),
                (i.isProcessing = !0),
                a.process(i),
                l.process(i),
                u.process(i),
                f.process(i),
                d.process(i),
                m.process(i),
                v.process(i),
                _.process(i),
                (i.isProcessing = !1),
                t && e && ((n = !1), r(S));
        },
        w = () => {
            (t = !0), (n = !0), i.isProcessing || r(S);
        };
    return {
        schedule: Jv.reduce((T, b) => {
            const P = o[b];
            return (
                (T[b] = (L, D = !1, O = !1) => (t || w(), P.schedule(L, D, O))),
                T
            );
        }, {}),
        cancel: (T) => {
            for (let b = 0; b < Jv.length; b++) o[Jv[b]].cancel(T);
        },
        state: i,
        steps: o,
    };
}
const {
    schedule: Di,
    cancel: bc,
    state: Kr,
    steps: J1,
} = zL(typeof requestAnimationFrame < 'u' ? requestAnimationFrame : ta, !0);
let u_;
function fF() {
    u_ = void 0;
}
const Qs = {
        now: () => (
            u_ === void 0 &&
                Qs.set(
                    Kr.isProcessing || wu.useManualTiming
                        ? Kr.timestamp
                        : performance.now()
                ),
            u_
        ),
        set: (r) => {
            (u_ = r), queueMicrotask(fF);
        },
    },
    VL = (r) => (e) => typeof e == 'string' && e.startsWith(r),
    mE = VL('--'),
    hF = VL('var(--'),
    gE = (r) => (hF(r) ? dF.test(r.split('/*')[0].trim()) : !1),
    dF =
        /var\(--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)$/iu,
    Up = {
        test: (r) => typeof r == 'number',
        parse: parseFloat,
        transform: (r) => r,
    },
    Jg = { ...Up, transform: (r) => Su(0, 1, r) },
    Qv = { ...Up, default: 1 },
    bg = (r) => Math.round(r * 1e5) / 1e5,
    vE = /-?(?:\d+(?:\.\d+)?|\.\d+)/gu;
function pF(r) {
    return r == null;
}
const mF =
        /^(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))$/iu,
    yE = (r, e) => (t) =>
        !!(
            (typeof t == 'string' && mF.test(t) && t.startsWith(r)) ||
            (e && !pF(t) && Object.prototype.hasOwnProperty.call(t, e))
        ),
    HL = (r, e, t) => (n) => {
        if (typeof n != 'string') return n;
        const [i, s, o, a] = n.match(vE);
        return {
            [r]: parseFloat(i),
            [e]: parseFloat(s),
            [t]: parseFloat(o),
            alpha: a !== void 0 ? parseFloat(a) : 1,
        };
    },
    gF = (r) => Su(0, 255, r),
    Q1 = { ...Up, transform: (r) => Math.round(gF(r)) },
    Yf = {
        test: yE('rgb', 'red'),
        parse: HL('red', 'green', 'blue'),
        transform: ({ red: r, green: e, blue: t, alpha: n = 1 }) =>
            'rgba(' +
            Q1.transform(r) +
            ', ' +
            Q1.transform(e) +
            ', ' +
            Q1.transform(t) +
            ', ' +
            bg(Jg.transform(n)) +
            ')',
    };
function vF(r) {
    let e = '',
        t = '',
        n = '',
        i = '';
    return (
        r.length > 5
            ? ((e = r.substring(1, 3)),
              (t = r.substring(3, 5)),
              (n = r.substring(5, 7)),
              (i = r.substring(7, 9)))
            : ((e = r.substring(1, 2)),
              (t = r.substring(2, 3)),
              (n = r.substring(3, 4)),
              (i = r.substring(4, 5)),
              (e += e),
              (t += t),
              (n += n),
              (i += i)),
        {
            red: parseInt(e, 16),
            green: parseInt(t, 16),
            blue: parseInt(n, 16),
            alpha: i ? parseInt(i, 16) / 255 : 1,
        }
    );
}
const Bw = { test: yE('#'), parse: vF, transform: Yf.transform },
    F0 = (r) => ({
        test: (e) =>
            typeof e == 'string' && e.endsWith(r) && e.split(' ').length === 1,
        parse: parseFloat,
        transform: (e) => `${e}${r}`,
    }),
    pc = F0('deg'),
    El = F0('%'),
    rn = F0('px'),
    yF = F0('vh'),
    _F = F0('vw'),
    sb = {
        ...El,
        parse: (r) => El.parse(r) / 100,
        transform: (r) => El.transform(r * 100),
    },
    Qd = {
        test: yE('hsl', 'hue'),
        parse: HL('hue', 'saturation', 'lightness'),
        transform: ({ hue: r, saturation: e, lightness: t, alpha: n = 1 }) =>
            'hsla(' +
            Math.round(r) +
            ', ' +
            El.transform(bg(e)) +
            ', ' +
            El.transform(bg(t)) +
            ', ' +
            bg(Jg.transform(n)) +
            ')',
    },
    us = {
        test: (r) => Yf.test(r) || Bw.test(r) || Qd.test(r),
        parse: (r) =>
            Yf.test(r) ? Yf.parse(r) : Qd.test(r) ? Qd.parse(r) : Bw.parse(r),
        transform: (r) =>
            typeof r == 'string'
                ? r
                : r.hasOwnProperty('red')
                  ? Yf.transform(r)
                  : Qd.transform(r),
    },
    xF =
        /(?:#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\))/giu;
function SF(r) {
    var e, t;
    return (
        isNaN(r) &&
        typeof r == 'string' &&
        (((e = r.match(vE)) == null ? void 0 : e.length) || 0) +
            (((t = r.match(xF)) == null ? void 0 : t.length) || 0) >
            0
    );
}
const GL = 'number',
    WL = 'color',
    wF = 'var',
    MF = 'var(',
    ob = '${}',
    EF =
        /var\s*\(\s*--(?:[\w-]+\s*|[\w-]+\s*,(?:\s*[^)(\s]|\s*\((?:[^)(]|\([^)(]*\))*\))+\s*)\)|#[\da-f]{3,8}|(?:rgb|hsl)a?\((?:-?[\d.]+%?[,\s]+){2}-?[\d.]+%?\s*(?:[,/]\s*)?(?:\b\d+(?:\.\d+)?|\.\d+)?%?\)|-?(?:\d+(?:\.\d+)?|\.\d+)/giu;
function Qg(r) {
    const e = r.toString(),
        t = [],
        n = { color: [], number: [], var: [] },
        i = [];
    let s = 0;
    const a = e
        .replace(
            EF,
            (l) => (
                us.test(l)
                    ? (n.color.push(s), i.push(WL), t.push(us.parse(l)))
                    : l.startsWith(MF)
                      ? (n.var.push(s), i.push(wF), t.push(l))
                      : (n.number.push(s), i.push(GL), t.push(parseFloat(l))),
                ++s,
                ob
            )
        )
        .split(ob);
    return { values: t, split: a, indexes: n, types: i };
}
function jL(r) {
    return Qg(r).values;
}
function XL(r) {
    const { split: e, types: t } = Qg(r),
        n = e.length;
    return (i) => {
        let s = '';
        for (let o = 0; o < n; o++)
            if (((s += e[o]), i[o] !== void 0)) {
                const a = t[o];
                a === GL
                    ? (s += bg(i[o]))
                    : a === WL
                      ? (s += us.transform(i[o]))
                      : (s += i[o]);
            }
        return s;
    };
}
const TF = (r) => (typeof r == 'number' ? 0 : r);
function AF(r) {
    const e = jL(r);
    return XL(r)(e.map(TF));
}
const Cc = {
    test: SF,
    parse: jL,
    createTransformer: XL,
    getAnimatableNone: AF,
};
function eS(r, e, t) {
    return (
        t < 0 && (t += 1),
        t > 1 && (t -= 1),
        t < 1 / 6
            ? r + (e - r) * 6 * t
            : t < 1 / 2
              ? e
              : t < 2 / 3
                ? r + (e - r) * (2 / 3 - t) * 6
                : r
    );
}
function bF({ hue: r, saturation: e, lightness: t, alpha: n }) {
    (r /= 360), (e /= 100), (t /= 100);
    let i = 0,
        s = 0,
        o = 0;
    if (!e) i = s = o = t;
    else {
        const a = t < 0.5 ? t * (1 + e) : t + e - t * e,
            l = 2 * t - a;
        (i = eS(l, a, r + 1 / 3)), (s = eS(l, a, r)), (o = eS(l, a, r - 1 / 3));
    }
    return {
        red: Math.round(i * 255),
        green: Math.round(s * 255),
        blue: Math.round(o * 255),
        alpha: n,
    };
}
function M_(r, e) {
    return (t) => (t > 0 ? e : r);
}
const Pi = (r, e, t) => r + (e - r) * t,
    tS = (r, e, t) => {
        const n = r * r,
            i = t * (e * e - n) + n;
        return i < 0 ? 0 : Math.sqrt(i);
    },
    CF = [Bw, Yf, Qd],
    RF = (r) => CF.find((e) => e.test(r));
function ab(r) {
    const e = RF(r);
    if (!e) return !1;
    let t = e.parse(r);
    return e === Qd && (t = bF(t)), t;
}
const lb = (r, e) => {
        const t = ab(r),
            n = ab(e);
        if (!t || !n) return M_(r, e);
        const i = { ...t };
        return (s) => (
            (i.red = tS(t.red, n.red, s)),
            (i.green = tS(t.green, n.green, s)),
            (i.blue = tS(t.blue, n.blue, s)),
            (i.alpha = Pi(t.alpha, n.alpha, s)),
            Yf.transform(i)
        );
    },
    zw = new Set(['none', 'hidden']);
function PF(r, e) {
    return zw.has(r) ? (t) => (t <= 0 ? r : e) : (t) => (t >= 1 ? e : r);
}
function LF(r, e) {
    return (t) => Pi(r, e, t);
}
function _E(r) {
    return typeof r == 'number'
        ? LF
        : typeof r == 'string'
          ? gE(r)
              ? M_
              : us.test(r)
                ? lb
                : OF
          : Array.isArray(r)
            ? YL
            : typeof r == 'object'
              ? us.test(r)
                  ? lb
                  : IF
              : M_;
}
function YL(r, e) {
    const t = [...r],
        n = t.length,
        i = r.map((s, o) => _E(s)(s, e[o]));
    return (s) => {
        for (let o = 0; o < n; o++) t[o] = i[o](s);
        return t;
    };
}
function IF(r, e) {
    const t = { ...r, ...e },
        n = {};
    for (const i in t)
        r[i] !== void 0 && e[i] !== void 0 && (n[i] = _E(r[i])(r[i], e[i]));
    return (i) => {
        for (const s in n) t[s] = n[s](i);
        return t;
    };
}
function DF(r, e) {
    const t = [],
        n = { color: 0, var: 0, number: 0 };
    for (let i = 0; i < e.values.length; i++) {
        const s = e.types[i],
            o = r.indexes[s][n[s]],
            a = r.values[o] ?? 0;
        (t[i] = a), n[s]++;
    }
    return t;
}
const OF = (r, e) => {
    const t = Cc.createTransformer(e),
        n = Qg(r),
        i = Qg(e);
    return n.indexes.var.length === i.indexes.var.length &&
        n.indexes.color.length === i.indexes.color.length &&
        n.indexes.number.length >= i.indexes.number.length
        ? (zw.has(r) && !i.values.length) || (zw.has(e) && !n.values.length)
            ? PF(r, e)
            : k0(YL(DF(n, i), i.values), t)
        : M_(r, e);
};
function qL(r, e, t) {
    return typeof r == 'number' && typeof e == 'number' && typeof t == 'number'
        ? Pi(r, e, t)
        : _E(r)(r, e);
}
const UF = (r) => {
        const e = ({ timestamp: t }) => r(t);
        return {
            start: (t = !0) => Di.update(e, t),
            stop: () => bc(e),
            now: () => (Kr.isProcessing ? Kr.timestamp : Qs.now()),
        };
    },
    KL = (r, e, t = 10) => {
        let n = '';
        const i = Math.max(Math.round(e / t), 2);
        for (let s = 0; s < i; s++) n += r(s / (i - 1)) + ', ';
        return `linear(${n.substring(0, n.length - 2)})`;
    },
    E_ = 2e4;
function xE(r) {
    let e = 0;
    const t = 50;
    let n = r.next(e);
    for (; !n.done && e < E_; ) (e += t), (n = r.next(e));
    return e >= E_ ? 1 / 0 : e;
}
function kF(r, e = 100, t) {
    const n = t({ ...r, keyframes: [0, e] }),
        i = Math.min(xE(n), E_);
    return {
        type: 'keyframes',
        ease: (s) => n.next(i * s).value / e,
        duration: Ml(i),
    };
}
const NF = 5;
function ZL(r, e, t) {
    const n = Math.max(e - NF, 0);
    return RL(t - r(n), e - n);
}
const Bi = {
        stiffness: 100,
        damping: 10,
        mass: 1,
        velocity: 0,
        duration: 800,
        bounce: 0.3,
        visualDuration: 0.3,
        restSpeed: { granular: 0.01, default: 2 },
        restDelta: { granular: 0.005, default: 0.5 },
        minDuration: 0.01,
        maxDuration: 10,
        minDamping: 0.05,
        maxDamping: 1,
    },
    ub = 0.001;
function FF({
    duration: r = Bi.duration,
    bounce: e = Bi.bounce,
    velocity: t = Bi.velocity,
    mass: n = Bi.mass,
}) {
    let i,
        s,
        o = 1 - e;
    (o = Su(Bi.minDamping, Bi.maxDamping, o)),
        (r = Su(Bi.minDuration, Bi.maxDuration, Ml(r))),
        o < 1
            ? ((i = (u) => {
                  const f = u * o,
                      d = f * r,
                      m = f - t,
                      v = Vw(u, o),
                      _ = Math.exp(-d);
                  return ub - (m / v) * _;
              }),
              (s = (u) => {
                  const d = u * o * r,
                      m = d * t + t,
                      v = Math.pow(o, 2) * Math.pow(u, 2) * r,
                      _ = Math.exp(-d),
                      S = Vw(Math.pow(u, 2), o);
                  return ((-i(u) + ub > 0 ? -1 : 1) * ((m - v) * _)) / S;
              }))
            : ((i = (u) => {
                  const f = Math.exp(-u * r),
                      d = (u - t) * r + 1;
                  return -0.001 + f * d;
              }),
              (s = (u) => {
                  const f = Math.exp(-u * r),
                      d = (t - u) * (r * r);
                  return f * d;
              }));
    const a = 5 / r,
        l = zF(i, s, a);
    if (((r = wl(r)), isNaN(l)))
        return { stiffness: Bi.stiffness, damping: Bi.damping, duration: r };
    {
        const u = Math.pow(l, 2) * n;
        return { stiffness: u, damping: o * 2 * Math.sqrt(n * u), duration: r };
    }
}
const BF = 12;
function zF(r, e, t) {
    let n = t;
    for (let i = 1; i < BF; i++) n = n - r(n) / e(n);
    return n;
}
function Vw(r, e) {
    return r * Math.sqrt(1 - e * e);
}
const VF = ['duration', 'bounce'],
    HF = ['stiffness', 'damping', 'mass'];
function cb(r, e) {
    return e.some((t) => r[t] !== void 0);
}
function GF(r) {
    let e = {
        velocity: Bi.velocity,
        stiffness: Bi.stiffness,
        damping: Bi.damping,
        mass: Bi.mass,
        isResolvedFromDuration: !1,
        ...r,
    };
    if (!cb(r, HF) && cb(r, VF))
        if (r.visualDuration) {
            const t = r.visualDuration,
                n = (2 * Math.PI) / (t * 1.2),
                i = n * n,
                s = 2 * Su(0.05, 1, 1 - (r.bounce || 0)) * Math.sqrt(i);
            e = { ...e, mass: Bi.mass, stiffness: i, damping: s };
        } else {
            const t = FF(r);
            (e = { ...e, ...t, mass: Bi.mass }),
                (e.isResolvedFromDuration = !0);
        }
    return e;
}
function T_(r = Bi.visualDuration, e = Bi.bounce) {
    const t =
        typeof r != 'object'
            ? { visualDuration: r, keyframes: [0, 1], bounce: e }
            : r;
    let { restSpeed: n, restDelta: i } = t;
    const s = t.keyframes[0],
        o = t.keyframes[t.keyframes.length - 1],
        a = { done: !1, value: s },
        {
            stiffness: l,
            damping: u,
            mass: f,
            duration: d,
            velocity: m,
            isResolvedFromDuration: v,
        } = GF({ ...t, velocity: -Ml(t.velocity || 0) }),
        _ = m || 0,
        S = u / (2 * Math.sqrt(l * f)),
        w = o - s,
        x = Ml(Math.sqrt(l / f)),
        A = Math.abs(w) < 5;
    n || (n = A ? Bi.restSpeed.granular : Bi.restSpeed.default),
        i || (i = A ? Bi.restDelta.granular : Bi.restDelta.default);
    let T;
    if (S < 1) {
        const P = Vw(x, S);
        T = (L) => {
            const D = Math.exp(-S * x * L);
            return (
                o -
                D *
                    (((_ + S * x * w) / P) * Math.sin(P * L) +
                        w * Math.cos(P * L))
            );
        };
    } else if (S === 1) T = (P) => o - Math.exp(-x * P) * (w + (_ + x * w) * P);
    else {
        const P = x * Math.sqrt(S * S - 1);
        T = (L) => {
            const D = Math.exp(-S * x * L),
                O = Math.min(P * L, 300);
            return (
                o -
                (D * ((_ + S * x * w) * Math.sinh(O) + P * w * Math.cosh(O))) /
                    P
            );
        };
    }
    const b = {
        calculatedDuration: (v && d) || null,
        next: (P) => {
            const L = T(P);
            if (v) a.done = P >= d;
            else {
                let D = P === 0 ? _ : 0;
                S < 1 && (D = P === 0 ? wl(_) : ZL(T, P, L));
                const O = Math.abs(D) <= n,
                    I = Math.abs(o - L) <= i;
                a.done = O && I;
            }
            return (a.value = a.done ? o : L), a;
        },
        toString: () => {
            const P = Math.min(xE(b), E_),
                L = KL((D) => b.next(P * D).value, P, 30);
            return P + 'ms ' + L;
        },
        toTransition: () => {},
    };
    return b;
}
T_.applyToOptions = (r) => {
    const e = kF(r, 100, T_);
    return (
        (r.ease = e.ease),
        (r.duration = wl(e.duration)),
        (r.type = 'keyframes'),
        r
    );
};
function Hw({
    keyframes: r,
    velocity: e = 0,
    power: t = 0.8,
    timeConstant: n = 325,
    bounceDamping: i = 10,
    bounceStiffness: s = 500,
    modifyTarget: o,
    min: a,
    max: l,
    restDelta: u = 0.5,
    restSpeed: f,
}) {
    const d = r[0],
        m = { done: !1, value: d },
        v = (O) => (a !== void 0 && O < a) || (l !== void 0 && O > l),
        _ = (O) =>
            a === void 0
                ? l
                : l === void 0 || Math.abs(a - O) < Math.abs(l - O)
                  ? a
                  : l;
    let S = t * e;
    const w = d + S,
        x = o === void 0 ? w : o(w);
    x !== w && (S = x - d);
    const A = (O) => -S * Math.exp(-O / n),
        T = (O) => x + A(O),
        b = (O) => {
            const I = A(O),
                U = T(O);
            (m.done = Math.abs(I) <= u), (m.value = m.done ? x : U);
        };
    let P, L;
    const D = (O) => {
        v(m.value) &&
            ((P = O),
            (L = T_({
                keyframes: [m.value, _(m.value)],
                velocity: ZL(T, O, m.value),
                damping: i,
                stiffness: s,
                restDelta: u,
                restSpeed: f,
            })));
    };
    return (
        D(0),
        {
            calculatedDuration: null,
            next: (O) => {
                let I = !1;
                return (
                    !L && P === void 0 && ((I = !0), b(O), D(O)),
                    P !== void 0 && O >= P ? L.next(O - P) : (!I && b(O), m)
                );
            },
        }
    );
}
function WF(r, e, t) {
    const n = [],
        i = t || wu.mix || qL,
        s = r.length - 1;
    for (let o = 0; o < s; o++) {
        let a = i(r[o], r[o + 1]);
        if (e) {
            const l = Array.isArray(e) ? e[o] || ta : e;
            a = k0(l, a);
        }
        n.push(a);
    }
    return n;
}
function jF(r, e, { clamp: t = !0, ease: n, mixer: i } = {}) {
    const s = r.length;
    if ((cE(s === e.length), s === 1)) return () => e[0];
    if (s === 2 && e[0] === e[1]) return () => e[1];
    const o = r[0] === r[1];
    r[0] > r[s - 1] && ((r = [...r].reverse()), (e = [...e].reverse()));
    const a = WF(e, n, i),
        l = a.length,
        u = (f) => {
            if (o && f < r[0]) return e[0];
            let d = 0;
            if (l > 1) for (; d < r.length - 2 && !(f < r[d + 1]); d++);
            const m = $g(r[d], r[d + 1], f);
            return a[d](m);
        };
    return t ? (f) => u(Su(r[0], r[s - 1], f)) : u;
}
function XF(r, e) {
    const t = r[r.length - 1];
    for (let n = 1; n <= e; n++) {
        const i = $g(0, e, n);
        r.push(Pi(t, 1, i));
    }
}
function YF(r) {
    const e = [0];
    return XF(e, r.length - 1), e;
}
function qF(r, e) {
    return r.map((t) => t * e);
}
function KF(r, e) {
    return r.map(() => e || FL).splice(0, r.length - 1);
}
function Cg({
    duration: r = 300,
    keyframes: e,
    times: t,
    ease: n = 'easeInOut',
}) {
    const i = oF(n) ? n.map(rb) : rb(n),
        s = { done: !1, value: e[0] },
        o = qF(t && t.length === e.length ? t : YF(e), r),
        a = jF(o, e, { ease: Array.isArray(i) ? i : KF(e, i) });
    return {
        calculatedDuration: r,
        next: (l) => ((s.value = a(l)), (s.done = l >= r), s),
    };
}
const ZF = (r) => r !== null;
function SE(r, { repeat: e, repeatType: t = 'loop' }, n, i = 1) {
    const s = r.filter(ZF),
        a = i < 0 || (e && t !== 'loop' && e % 2 === 1) ? 0 : s.length - 1;
    return !a || n === void 0 ? s[a] : n;
}
const $F = { decay: Hw, inertia: Hw, tween: Cg, keyframes: Cg, spring: T_ };
function $L(r) {
    typeof r.type == 'string' && (r.type = $F[r.type]);
}
class wE {
    constructor() {
        this.updateFinished();
    }
    get finished() {
        return this._finished;
    }
    updateFinished() {
        this._finished = new Promise((e) => {
            this.resolve = e;
        });
    }
    notifyFinished() {
        this.resolve();
    }
    then(e, t) {
        return this.finished.then(e, t);
    }
}
const JF = (r) => r / 100;
class ME extends wE {
    constructor(e) {
        super(),
            (this.state = 'idle'),
            (this.startTime = null),
            (this.isStopped = !1),
            (this.currentTime = 0),
            (this.holdTime = null),
            (this.playbackSpeed = 1),
            (this.stop = (t = !0) => {
                var n, i;
                if (t) {
                    const { motionValue: s } = this.options;
                    s && s.updatedAt !== Qs.now() && this.tick(Qs.now());
                }
                (this.isStopped = !0),
                    this.state !== 'idle' &&
                        (this.teardown(),
                        (i = (n = this.options).onStop) == null || i.call(n));
            }),
            (this.options = e),
            this.initAnimation(),
            this.play(),
            e.autoplay === !1 && this.pause();
    }
    initAnimation() {
        const { options: e } = this;
        $L(e);
        const {
            type: t = Cg,
            repeat: n = 0,
            repeatDelay: i = 0,
            repeatType: s,
            velocity: o = 0,
        } = e;
        let { keyframes: a } = e;
        const l = t || Cg;
        l !== Cg &&
            typeof a[0] != 'number' &&
            ((this.mixKeyframes = k0(JF, qL(a[0], a[1]))), (a = [0, 100]));
        const u = l({ ...e, keyframes: a });
        s === 'mirror' &&
            (this.mirroredGenerator = l({
                ...e,
                keyframes: [...a].reverse(),
                velocity: -o,
            })),
            u.calculatedDuration === null && (u.calculatedDuration = xE(u));
        const { calculatedDuration: f } = u;
        (this.calculatedDuration = f),
            (this.resolvedDuration = f + i),
            (this.totalDuration = this.resolvedDuration * (n + 1) - i),
            (this.generator = u);
    }
    updateTime(e) {
        const t = Math.round(e - this.startTime) * this.playbackSpeed;
        this.holdTime !== null
            ? (this.currentTime = this.holdTime)
            : (this.currentTime = t);
    }
    tick(e, t = !1) {
        const {
            generator: n,
            totalDuration: i,
            mixKeyframes: s,
            mirroredGenerator: o,
            resolvedDuration: a,
            calculatedDuration: l,
        } = this;
        if (this.startTime === null) return n.next(0);
        const {
            delay: u = 0,
            keyframes: f,
            repeat: d,
            repeatType: m,
            repeatDelay: v,
            type: _,
            onUpdate: S,
            finalKeyframe: w,
        } = this.options;
        this.speed > 0
            ? (this.startTime = Math.min(this.startTime, e))
            : this.speed < 0 &&
              (this.startTime = Math.min(e - i / this.speed, this.startTime)),
            t ? (this.currentTime = e) : this.updateTime(e);
        const x = this.currentTime - u * (this.playbackSpeed >= 0 ? 1 : -1),
            A = this.playbackSpeed >= 0 ? x < 0 : x > i;
        (this.currentTime = Math.max(x, 0)),
            this.state === 'finished' &&
                this.holdTime === null &&
                (this.currentTime = i);
        let T = this.currentTime,
            b = n;
        if (d) {
            const O = Math.min(this.currentTime, i) / a;
            let I = Math.floor(O),
                U = O % 1;
            !U && O >= 1 && (U = 1),
                U === 1 && I--,
                (I = Math.min(I, d + 1)),
                !!(I % 2) &&
                    (m === 'reverse'
                        ? ((U = 1 - U), v && (U -= v / a))
                        : m === 'mirror' && (b = o)),
                (T = Su(0, 1, U) * a);
        }
        const P = A ? { done: !1, value: f[0] } : b.next(T);
        s && (P.value = s(P.value));
        let { done: L } = P;
        !A &&
            l !== null &&
            (L =
                this.playbackSpeed >= 0
                    ? this.currentTime >= i
                    : this.currentTime <= 0);
        const D =
            this.holdTime === null &&
            (this.state === 'finished' || (this.state === 'running' && L));
        return (
            D && _ !== Hw && (P.value = SE(f, this.options, w, this.speed)),
            S && S(P.value),
            D && this.finish(),
            P
        );
    }
    then(e, t) {
        return this.finished.then(e, t);
    }
    get duration() {
        return Ml(this.calculatedDuration);
    }
    get time() {
        return Ml(this.currentTime);
    }
    set time(e) {
        var t;
        (e = wl(e)),
            (this.currentTime = e),
            this.startTime === null ||
            this.holdTime !== null ||
            this.playbackSpeed === 0
                ? (this.holdTime = e)
                : this.driver &&
                  (this.startTime = this.driver.now() - e / this.playbackSpeed),
            (t = this.driver) == null || t.start(!1);
    }
    get speed() {
        return this.playbackSpeed;
    }
    set speed(e) {
        this.updateTime(Qs.now());
        const t = this.playbackSpeed !== e;
        (this.playbackSpeed = e), t && (this.time = Ml(this.currentTime));
    }
    play() {
        var i, s;
        if (this.isStopped) return;
        const { driver: e = UF, startTime: t } = this.options;
        this.driver || (this.driver = e((o) => this.tick(o))),
            (s = (i = this.options).onPlay) == null || s.call(i);
        const n = this.driver.now();
        this.state === 'finished'
            ? (this.updateFinished(), (this.startTime = n))
            : this.holdTime !== null
              ? (this.startTime = n - this.holdTime)
              : this.startTime || (this.startTime = t ?? n),
            this.state === 'finished' &&
                this.speed < 0 &&
                (this.startTime += this.calculatedDuration),
            (this.holdTime = null),
            (this.state = 'running'),
            this.driver.start();
    }
    pause() {
        (this.state = 'paused'),
            this.updateTime(Qs.now()),
            (this.holdTime = this.currentTime);
    }
    complete() {
        this.state !== 'running' && this.play(),
            (this.state = 'finished'),
            (this.holdTime = null);
    }
    finish() {
        var e, t;
        this.notifyFinished(),
            this.teardown(),
            (this.state = 'finished'),
            (t = (e = this.options).onComplete) == null || t.call(e);
    }
    cancel() {
        var e, t;
        (this.holdTime = null),
            (this.startTime = 0),
            this.tick(0),
            this.teardown(),
            (t = (e = this.options).onCancel) == null || t.call(e);
    }
    teardown() {
        (this.state = 'idle'),
            this.stopDriver(),
            (this.startTime = this.holdTime = null);
    }
    stopDriver() {
        this.driver && (this.driver.stop(), (this.driver = void 0));
    }
    sample(e) {
        return (this.startTime = 0), this.tick(e, !0);
    }
    attachTimeline(e) {
        var t;
        return (
            this.options.allowFlatten &&
                ((this.options.type = 'keyframes'),
                (this.options.ease = 'linear'),
                this.initAnimation()),
            (t = this.driver) == null || t.stop(),
            e.observe(this)
        );
    }
}
function QF(r) {
    for (let e = 1; e < r.length; e++) r[e] ?? (r[e] = r[e - 1]);
}
const qf = (r) => (r * 180) / Math.PI,
    Gw = (r) => {
        const e = qf(Math.atan2(r[1], r[0]));
        return Ww(e);
    },
    e4 = {
        x: 4,
        y: 5,
        translateX: 4,
        translateY: 5,
        scaleX: 0,
        scaleY: 3,
        scale: (r) => (Math.abs(r[0]) + Math.abs(r[3])) / 2,
        rotate: Gw,
        rotateZ: Gw,
        skewX: (r) => qf(Math.atan(r[1])),
        skewY: (r) => qf(Math.atan(r[2])),
        skew: (r) => (Math.abs(r[1]) + Math.abs(r[2])) / 2,
    },
    Ww = (r) => ((r = r % 360), r < 0 && (r += 360), r),
    fb = Gw,
    hb = (r) => Math.sqrt(r[0] * r[0] + r[1] * r[1]),
    db = (r) => Math.sqrt(r[4] * r[4] + r[5] * r[5]),
    t4 = {
        x: 12,
        y: 13,
        z: 14,
        translateX: 12,
        translateY: 13,
        translateZ: 14,
        scaleX: hb,
        scaleY: db,
        scale: (r) => (hb(r) + db(r)) / 2,
        rotateX: (r) => Ww(qf(Math.atan2(r[6], r[5]))),
        rotateY: (r) => Ww(qf(Math.atan2(-r[2], r[0]))),
        rotateZ: fb,
        rotate: fb,
        skewX: (r) => qf(Math.atan(r[4])),
        skewY: (r) => qf(Math.atan(r[1])),
        skew: (r) => (Math.abs(r[1]) + Math.abs(r[4])) / 2,
    };
function jw(r) {
    return r.includes('scale') ? 1 : 0;
}
function Xw(r, e) {
    if (!r || r === 'none') return jw(e);
    const t = r.match(/^matrix3d\(([-\d.e\s,]+)\)$/u);
    let n, i;
    if (t) (n = t4), (i = t);
    else {
        const a = r.match(/^matrix\(([-\d.e\s,]+)\)$/u);
        (n = e4), (i = a);
    }
    if (!i) return jw(e);
    const s = n[e],
        o = i[1].split(',').map(i4);
    return typeof s == 'function' ? s(o) : o[s];
}
const n4 = (r, e) => {
    const { transform: t = 'none' } = getComputedStyle(r);
    return Xw(t, e);
};
function i4(r) {
    return parseFloat(r.trim());
}
const kp = [
        'transformPerspective',
        'x',
        'y',
        'z',
        'translateX',
        'translateY',
        'translateZ',
        'scale',
        'scaleX',
        'scaleY',
        'rotate',
        'rotateX',
        'rotateY',
        'rotateZ',
        'skew',
        'skewX',
        'skewY',
    ],
    Np = new Set(kp),
    pb = (r) => r === Up || r === rn,
    r4 = new Set(['x', 'y', 'z']),
    s4 = kp.filter((r) => !r4.has(r));
function o4(r) {
    const e = [];
    return (
        s4.forEach((t) => {
            const n = r.getValue(t);
            n !== void 0 &&
                (e.push([t, n.get()]), n.set(t.startsWith('scale') ? 1 : 0));
        }),
        e
    );
}
const nh = {
    width: ({ x: r }, { paddingLeft: e = '0', paddingRight: t = '0' }) =>
        r.max - r.min - parseFloat(e) - parseFloat(t),
    height: ({ y: r }, { paddingTop: e = '0', paddingBottom: t = '0' }) =>
        r.max - r.min - parseFloat(e) - parseFloat(t),
    top: (r, { top: e }) => parseFloat(e),
    left: (r, { left: e }) => parseFloat(e),
    bottom: ({ y: r }, { top: e }) => parseFloat(e) + (r.max - r.min),
    right: ({ x: r }, { left: e }) => parseFloat(e) + (r.max - r.min),
    x: (r, { transform: e }) => Xw(e, 'x'),
    y: (r, { transform: e }) => Xw(e, 'y'),
};
nh.translateX = nh.x;
nh.translateY = nh.y;
const ih = new Set();
let Yw = !1,
    qw = !1,
    Kw = !1;
function JL() {
    if (qw) {
        const r = Array.from(ih).filter((n) => n.needsMeasurement),
            e = new Set(r.map((n) => n.element)),
            t = new Map();
        e.forEach((n) => {
            const i = o4(n);
            i.length && (t.set(n, i), n.render());
        }),
            r.forEach((n) => n.measureInitialState()),
            e.forEach((n) => {
                n.render();
                const i = t.get(n);
                i &&
                    i.forEach(([s, o]) => {
                        var a;
                        (a = n.getValue(s)) == null || a.set(o);
                    });
            }),
            r.forEach((n) => n.measureEndState()),
            r.forEach((n) => {
                n.suspendedScrollY !== void 0 &&
                    window.scrollTo(0, n.suspendedScrollY);
            });
    }
    (qw = !1), (Yw = !1), ih.forEach((r) => r.complete(Kw)), ih.clear();
}
function QL() {
    ih.forEach((r) => {
        r.readKeyframes(), r.needsMeasurement && (qw = !0);
    });
}
function a4() {
    (Kw = !0), QL(), JL(), (Kw = !1);
}
class EE {
    constructor(e, t, n, i, s, o = !1) {
        (this.state = 'pending'),
            (this.isAsync = !1),
            (this.needsMeasurement = !1),
            (this.unresolvedKeyframes = [...e]),
            (this.onComplete = t),
            (this.name = n),
            (this.motionValue = i),
            (this.element = s),
            (this.isAsync = o);
    }
    scheduleResolve() {
        (this.state = 'scheduled'),
            this.isAsync
                ? (ih.add(this),
                  Yw || ((Yw = !0), Di.read(QL), Di.resolveKeyframes(JL)))
                : (this.readKeyframes(), this.complete());
    }
    readKeyframes() {
        const {
            unresolvedKeyframes: e,
            name: t,
            element: n,
            motionValue: i,
        } = this;
        if (e[0] === null) {
            const s = i == null ? void 0 : i.get(),
                o = e[e.length - 1];
            if (s !== void 0) e[0] = s;
            else if (n && t) {
                const a = n.readValue(t, o);
                a != null && (e[0] = a);
            }
            e[0] === void 0 && (e[0] = o), i && s === void 0 && i.set(e[0]);
        }
        QF(e);
    }
    setFinalKeyframe() {}
    measureInitialState() {}
    renderEndStyles() {}
    measureEndState() {}
    complete(e = !1) {
        (this.state = 'complete'),
            this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, e),
            ih.delete(this);
    }
    cancel() {
        this.state === 'scheduled' &&
            (ih.delete(this), (this.state = 'pending'));
    }
    resume() {
        this.state === 'pending' && this.scheduleResolve();
    }
}
const l4 = (r) => r.startsWith('--');
function u4(r, e, t) {
    l4(e) ? r.style.setProperty(e, t) : (r.style[e] = t);
}
const c4 = fE(() => window.ScrollTimeline !== void 0),
    f4 = {};
function h4(r, e) {
    const t = fE(r);
    return () => f4[e] ?? t();
}
const e3 = h4(() => {
        try {
            document
                .createElement('div')
                .animate({ opacity: 0 }, { easing: 'linear(0, 1)' });
        } catch {
            return !1;
        }
        return !0;
    }, 'linearEasing'),
    xg = ([r, e, t, n]) => `cubic-bezier(${r}, ${e}, ${t}, ${n})`,
    mb = {
        linear: 'linear',
        ease: 'ease',
        easeIn: 'ease-in',
        easeOut: 'ease-out',
        easeInOut: 'ease-in-out',
        circIn: xg([0, 0.65, 0.55, 1]),
        circOut: xg([0.55, 0, 1, 0.45]),
        backIn: xg([0.31, 0.01, 0.66, -0.59]),
        backOut: xg([0.33, 1.53, 0.69, 0.99]),
    };
function t3(r, e) {
    if (r)
        return typeof r == 'function'
            ? e3()
                ? KL(r, e)
                : 'ease-out'
            : BL(r)
              ? xg(r)
              : Array.isArray(r)
                ? r.map((t) => t3(t, e) || mb.easeOut)
                : mb[r];
}
function d4(
    r,
    e,
    t,
    {
        delay: n = 0,
        duration: i = 300,
        repeat: s = 0,
        repeatType: o = 'loop',
        ease: a = 'easeOut',
        times: l,
    } = {},
    u = void 0
) {
    const f = { [e]: t };
    l && (f.offset = l);
    const d = t3(a, i);
    Array.isArray(d) && (f.easing = d);
    const m = {
        delay: n,
        duration: i,
        easing: Array.isArray(d) ? 'linear' : d,
        fill: 'both',
        iterations: s + 1,
        direction: o === 'reverse' ? 'alternate' : 'normal',
    };
    return u && (m.pseudoElement = u), r.animate(f, m);
}
function n3(r) {
    return typeof r == 'function' && 'applyToOptions' in r;
}
function p4({ type: r, ...e }) {
    return n3(r) && e3()
        ? r.applyToOptions(e)
        : (e.duration ?? (e.duration = 300), e.ease ?? (e.ease = 'easeOut'), e);
}
class m4 extends wE {
    constructor(e) {
        if ((super(), (this.finishedTime = null), (this.isStopped = !1), !e))
            return;
        const {
            element: t,
            name: n,
            keyframes: i,
            pseudoElement: s,
            allowFlatten: o = !1,
            finalKeyframe: a,
            onComplete: l,
        } = e;
        (this.isPseudoElement = !!s),
            (this.allowFlatten = o),
            (this.options = e),
            cE(typeof e.type != 'string');
        const u = p4(e);
        (this.animation = d4(t, n, i, u, s)),
            u.autoplay === !1 && this.animation.pause(),
            (this.animation.onfinish = () => {
                if (((this.finishedTime = this.time), !s)) {
                    const f = SE(i, this.options, a, this.speed);
                    this.updateMotionValue
                        ? this.updateMotionValue(f)
                        : u4(t, n, f),
                        this.animation.cancel();
                }
                l == null || l(), this.notifyFinished();
            });
    }
    play() {
        this.isStopped ||
            (this.animation.play(),
            this.state === 'finished' && this.updateFinished());
    }
    pause() {
        this.animation.pause();
    }
    complete() {
        var e, t;
        (t = (e = this.animation).finish) == null || t.call(e);
    }
    cancel() {
        try {
            this.animation.cancel();
        } catch {}
    }
    stop() {
        if (this.isStopped) return;
        this.isStopped = !0;
        const { state: e } = this;
        e === 'idle' ||
            e === 'finished' ||
            (this.updateMotionValue
                ? this.updateMotionValue()
                : this.commitStyles(),
            this.isPseudoElement || this.cancel());
    }
    commitStyles() {
        var e, t;
        this.isPseudoElement ||
            (t = (e = this.animation).commitStyles) == null ||
            t.call(e);
    }
    get duration() {
        var t, n;
        const e =
            ((n =
                (t = this.animation.effect) == null
                    ? void 0
                    : t.getComputedTiming) == null
                ? void 0
                : n.call(t).duration) || 0;
        return Ml(Number(e));
    }
    get time() {
        return Ml(Number(this.animation.currentTime) || 0);
    }
    set time(e) {
        (this.finishedTime = null), (this.animation.currentTime = wl(e));
    }
    get speed() {
        return this.animation.playbackRate;
    }
    set speed(e) {
        e < 0 && (this.finishedTime = null), (this.animation.playbackRate = e);
    }
    get state() {
        return this.finishedTime !== null
            ? 'finished'
            : this.animation.playState;
    }
    get startTime() {
        return Number(this.animation.startTime);
    }
    set startTime(e) {
        this.animation.startTime = e;
    }
    attachTimeline({ timeline: e, observe: t }) {
        var n;
        return (
            this.allowFlatten &&
                ((n = this.animation.effect) == null ||
                    n.updateTiming({ easing: 'linear' })),
            (this.animation.onfinish = null),
            e && c4() ? ((this.animation.timeline = e), ta) : t(this)
        );
    }
}
const i3 = { anticipate: UL, backInOut: OL, circInOut: NL };
function g4(r) {
    return r in i3;
}
function v4(r) {
    typeof r.ease == 'string' && g4(r.ease) && (r.ease = i3[r.ease]);
}
const gb = 10;
class y4 extends m4 {
    constructor(e) {
        v4(e),
            $L(e),
            super(e),
            e.startTime && (this.startTime = e.startTime),
            (this.options = e);
    }
    updateMotionValue(e) {
        const {
            motionValue: t,
            onUpdate: n,
            onComplete: i,
            element: s,
            ...o
        } = this.options;
        if (!t) return;
        if (e !== void 0) {
            t.set(e);
            return;
        }
        const a = new ME({ ...o, autoplay: !1 }),
            l = wl(this.finishedTime ?? this.time);
        t.setWithVelocity(a.sample(l - gb).value, a.sample(l).value, gb),
            a.stop();
    }
}
const vb = (r, e) =>
    e === 'zIndex'
        ? !1
        : !!(
              typeof r == 'number' ||
              Array.isArray(r) ||
              (typeof r == 'string' &&
                  (Cc.test(r) || r === '0') &&
                  !r.startsWith('url('))
          );
function _4(r) {
    const e = r[0];
    if (r.length === 1) return !0;
    for (let t = 0; t < r.length; t++) if (r[t] !== e) return !0;
}
function x4(r, e, t, n) {
    const i = r[0];
    if (i === null) return !1;
    if (e === 'display' || e === 'visibility') return !0;
    const s = r[r.length - 1],
        o = vb(i, e),
        a = vb(s, e);
    return !o || !a ? !1 : _4(r) || ((t === 'spring' || n3(t)) && n);
}
function TE(r) {
    return bL(r) && 'offsetHeight' in r;
}
const S4 = new Set(['opacity', 'clipPath', 'filter', 'transform']),
    w4 = fE(() => Object.hasOwnProperty.call(Element.prototype, 'animate'));
function M4(r) {
    var u;
    const {
        motionValue: e,
        name: t,
        repeatDelay: n,
        repeatType: i,
        damping: s,
        type: o,
    } = r;
    if (!TE((u = e == null ? void 0 : e.owner) == null ? void 0 : u.current))
        return !1;
    const { onUpdate: a, transformTemplate: l } = e.owner.getProps();
    return (
        w4() &&
        t &&
        S4.has(t) &&
        (t !== 'transform' || !l) &&
        !a &&
        !n &&
        i !== 'mirror' &&
        s !== 0 &&
        o !== 'inertia'
    );
}
const E4 = 40;
class T4 extends wE {
    constructor({
        autoplay: e = !0,
        delay: t = 0,
        type: n = 'keyframes',
        repeat: i = 0,
        repeatDelay: s = 0,
        repeatType: o = 'loop',
        keyframes: a,
        name: l,
        motionValue: u,
        element: f,
        ...d
    }) {
        var _;
        super(),
            (this.stop = () => {
                var S, w;
                this._animation &&
                    (this._animation.stop(),
                    (S = this.stopTimeline) == null || S.call(this)),
                    (w = this.keyframeResolver) == null || w.cancel();
            }),
            (this.createdAt = Qs.now());
        const m = {
                autoplay: e,
                delay: t,
                type: n,
                repeat: i,
                repeatDelay: s,
                repeatType: o,
                name: l,
                motionValue: u,
                element: f,
                ...d,
            },
            v = (f == null ? void 0 : f.KeyframeResolver) || EE;
        (this.keyframeResolver = new v(
            a,
            (S, w, x) => this.onKeyframesResolved(S, w, m, !x),
            l,
            u,
            f
        )),
            (_ = this.keyframeResolver) == null || _.scheduleResolve();
    }
    onKeyframesResolved(e, t, n, i) {
        this.keyframeResolver = void 0;
        const {
            name: s,
            type: o,
            velocity: a,
            delay: l,
            isHandoff: u,
            onUpdate: f,
        } = n;
        (this.resolvedAt = Qs.now()),
            x4(e, s, o, a) ||
                ((wu.instantAnimations || !l) && (f == null || f(SE(e, n, t))),
                (e[0] = e[e.length - 1]),
                (n.duration = 0),
                (n.repeat = 0));
        const m = {
                startTime: i
                    ? this.resolvedAt
                        ? this.resolvedAt - this.createdAt > E4
                            ? this.resolvedAt
                            : this.createdAt
                        : this.createdAt
                    : void 0,
                finalKeyframe: t,
                ...n,
                keyframes: e,
            },
            v =
                !u && M4(m)
                    ? new y4({ ...m, element: m.motionValue.owner.current })
                    : new ME(m);
        v.finished.then(() => this.notifyFinished()).catch(ta),
            this.pendingTimeline &&
                ((this.stopTimeline = v.attachTimeline(this.pendingTimeline)),
                (this.pendingTimeline = void 0)),
            (this._animation = v);
    }
    get finished() {
        return this._animation ? this.animation.finished : this._finished;
    }
    then(e, t) {
        return this.finished.finally(e).then(() => {});
    }
    get animation() {
        var e;
        return (
            this._animation ||
                ((e = this.keyframeResolver) == null || e.resume(), a4()),
            this._animation
        );
    }
    get duration() {
        return this.animation.duration;
    }
    get time() {
        return this.animation.time;
    }
    set time(e) {
        this.animation.time = e;
    }
    get speed() {
        return this.animation.speed;
    }
    get state() {
        return this.animation.state;
    }
    set speed(e) {
        this.animation.speed = e;
    }
    get startTime() {
        return this.animation.startTime;
    }
    attachTimeline(e) {
        return (
            this._animation
                ? (this.stopTimeline = this.animation.attachTimeline(e))
                : (this.pendingTimeline = e),
            () => this.stop()
        );
    }
    play() {
        this.animation.play();
    }
    pause() {
        this.animation.pause();
    }
    complete() {
        this.animation.complete();
    }
    cancel() {
        var e;
        this._animation && this.animation.cancel(),
            (e = this.keyframeResolver) == null || e.cancel();
    }
}
const A4 = /^var\(--(?:([\w-]+)|([\w-]+), ?([a-zA-Z\d ()%#.,-]+))\)/u;
function b4(r) {
    const e = A4.exec(r);
    if (!e) return [,];
    const [, t, n, i] = e;
    return [`--${t ?? n}`, i];
}
function r3(r, e, t = 1) {
    const [n, i] = b4(r);
    if (!n) return;
    const s = window.getComputedStyle(e).getPropertyValue(n);
    if (s) {
        const o = s.trim();
        return AL(o) ? parseFloat(o) : o;
    }
    return gE(i) ? r3(i, e, t + 1) : i;
}
function AE(r, e) {
    return (r == null ? void 0 : r[e]) ?? (r == null ? void 0 : r.default) ?? r;
}
const s3 = new Set([
        'width',
        'height',
        'top',
        'left',
        'right',
        'bottom',
        ...kp,
    ]),
    C4 = { test: (r) => r === 'auto', parse: (r) => r },
    o3 = (r) => (e) => e.test(r),
    a3 = [Up, rn, El, pc, _F, yF, C4],
    yb = (r) => a3.find(o3(r));
function R4(r) {
    return typeof r == 'number'
        ? r === 0
        : r !== null
          ? r === 'none' || r === '0' || CL(r)
          : !0;
}
const P4 = new Set(['brightness', 'contrast', 'saturate', 'opacity']);
function L4(r) {
    const [e, t] = r.slice(0, -1).split('(');
    if (e === 'drop-shadow') return r;
    const [n] = t.match(vE) || [];
    if (!n) return r;
    const i = t.replace(n, '');
    let s = P4.has(e) ? 1 : 0;
    return n !== t && (s *= 100), e + '(' + s + i + ')';
}
const I4 = /\b([a-z-]*)\(.*?\)/gu,
    Zw = {
        ...Cc,
        getAnimatableNone: (r) => {
            const e = r.match(I4);
            return e ? e.map(L4).join(' ') : r;
        },
    },
    _b = { ...Up, transform: Math.round },
    D4 = {
        rotate: pc,
        rotateX: pc,
        rotateY: pc,
        rotateZ: pc,
        scale: Qv,
        scaleX: Qv,
        scaleY: Qv,
        scaleZ: Qv,
        skew: pc,
        skewX: pc,
        skewY: pc,
        distance: rn,
        translateX: rn,
        translateY: rn,
        translateZ: rn,
        x: rn,
        y: rn,
        z: rn,
        perspective: rn,
        transformPerspective: rn,
        opacity: Jg,
        originX: sb,
        originY: sb,
        originZ: rn,
    },
    bE = {
        borderWidth: rn,
        borderTopWidth: rn,
        borderRightWidth: rn,
        borderBottomWidth: rn,
        borderLeftWidth: rn,
        borderRadius: rn,
        radius: rn,
        borderTopLeftRadius: rn,
        borderTopRightRadius: rn,
        borderBottomRightRadius: rn,
        borderBottomLeftRadius: rn,
        width: rn,
        maxWidth: rn,
        height: rn,
        maxHeight: rn,
        top: rn,
        right: rn,
        bottom: rn,
        left: rn,
        padding: rn,
        paddingTop: rn,
        paddingRight: rn,
        paddingBottom: rn,
        paddingLeft: rn,
        margin: rn,
        marginTop: rn,
        marginRight: rn,
        marginBottom: rn,
        marginLeft: rn,
        backgroundPositionX: rn,
        backgroundPositionY: rn,
        ...D4,
        zIndex: _b,
        fillOpacity: Jg,
        strokeOpacity: Jg,
        numOctaves: _b,
    },
    O4 = {
        ...bE,
        color: us,
        backgroundColor: us,
        outlineColor: us,
        fill: us,
        stroke: us,
        borderColor: us,
        borderTopColor: us,
        borderRightColor: us,
        borderBottomColor: us,
        borderLeftColor: us,
        filter: Zw,
        WebkitFilter: Zw,
    },
    l3 = (r) => O4[r];
function u3(r, e) {
    let t = l3(r);
    return (
        t !== Zw && (t = Cc),
        t.getAnimatableNone ? t.getAnimatableNone(e) : void 0
    );
}
const U4 = new Set(['auto', 'none', '0']);
function k4(r, e, t) {
    let n = 0,
        i;
    for (; n < r.length && !i; ) {
        const s = r[n];
        typeof s == 'string' && !U4.has(s) && Qg(s).values.length && (i = r[n]),
            n++;
    }
    if (i && t) for (const s of e) r[s] = u3(t, i);
}
class N4 extends EE {
    constructor(e, t, n, i, s) {
        super(e, t, n, i, s, !0);
    }
    readKeyframes() {
        const { unresolvedKeyframes: e, element: t, name: n } = this;
        if (!t || !t.current) return;
        super.readKeyframes();
        for (let l = 0; l < e.length; l++) {
            let u = e[l];
            if (typeof u == 'string' && ((u = u.trim()), gE(u))) {
                const f = r3(u, t.current);
                f !== void 0 && (e[l] = f),
                    l === e.length - 1 && (this.finalKeyframe = u);
            }
        }
        if ((this.resolveNoneKeyframes(), !s3.has(n) || e.length !== 2)) return;
        const [i, s] = e,
            o = yb(i),
            a = yb(s);
        if (o !== a)
            if (pb(o) && pb(a))
                for (let l = 0; l < e.length; l++) {
                    const u = e[l];
                    typeof u == 'string' && (e[l] = parseFloat(u));
                }
            else nh[n] && (this.needsMeasurement = !0);
    }
    resolveNoneKeyframes() {
        const { unresolvedKeyframes: e, name: t } = this,
            n = [];
        for (let i = 0; i < e.length; i++)
            (e[i] === null || R4(e[i])) && n.push(i);
        n.length && k4(e, n, t);
    }
    measureInitialState() {
        const { element: e, unresolvedKeyframes: t, name: n } = this;
        if (!e || !e.current) return;
        n === 'height' && (this.suspendedScrollY = window.pageYOffset),
            (this.measuredOrigin = nh[n](
                e.measureViewportBox(),
                window.getComputedStyle(e.current)
            )),
            (t[0] = this.measuredOrigin);
        const i = t[t.length - 1];
        i !== void 0 && e.getValue(n, i).jump(i, !1);
    }
    measureEndState() {
        var a;
        const { element: e, name: t, unresolvedKeyframes: n } = this;
        if (!e || !e.current) return;
        const i = e.getValue(t);
        i && i.jump(this.measuredOrigin, !1);
        const s = n.length - 1,
            o = n[s];
        (n[s] = nh[t](
            e.measureViewportBox(),
            window.getComputedStyle(e.current)
        )),
            o !== null &&
                this.finalKeyframe === void 0 &&
                (this.finalKeyframe = o),
            (a = this.removedTransforms) != null &&
                a.length &&
                this.removedTransforms.forEach(([l, u]) => {
                    e.getValue(l).set(u);
                }),
            this.resolveNoneKeyframes();
    }
}
function F4(r, e, t) {
    if (r instanceof EventTarget) return [r];
    if (typeof r == 'string') {
        let n = document;
        const i = (t == null ? void 0 : t[r]) ?? n.querySelectorAll(r);
        return i ? Array.from(i) : [];
    }
    return Array.from(r);
}
const xb = 30,
    B4 = (r) => !isNaN(parseFloat(r)),
    Sb = { current: void 0 };
class z4 {
    constructor(e, t = {}) {
        (this.canTrackVelocity = null),
            (this.events = {}),
            (this.updateAndNotify = (n, i = !0) => {
                var o, a;
                const s = Qs.now();
                if (
                    (this.updatedAt !== s && this.setPrevFrameValue(),
                    (this.prev = this.current),
                    this.setCurrent(n),
                    this.current !== this.prev &&
                        ((o = this.events.change) == null ||
                            o.notify(this.current),
                        this.dependents))
                )
                    for (const l of this.dependents) l.dirty();
                i &&
                    ((a = this.events.renderRequest) == null ||
                        a.notify(this.current));
            }),
            (this.hasAnimated = !1),
            this.setCurrent(e),
            (this.owner = t.owner);
    }
    setCurrent(e) {
        (this.current = e),
            (this.updatedAt = Qs.now()),
            this.canTrackVelocity === null &&
                e !== void 0 &&
                (this.canTrackVelocity = B4(this.current));
    }
    setPrevFrameValue(e = this.current) {
        (this.prevFrameValue = e), (this.prevUpdatedAt = this.updatedAt);
    }
    onChange(e) {
        return this.on('change', e);
    }
    on(e, t) {
        this.events[e] || (this.events[e] = new hE());
        const n = this.events[e].add(t);
        return e === 'change'
            ? () => {
                  n(),
                      Di.read(() => {
                          this.events.change.getSize() || this.stop();
                      });
              }
            : n;
    }
    clearListeners() {
        for (const e in this.events) this.events[e].clear();
    }
    attach(e, t) {
        (this.passiveEffect = e), (this.stopPassiveEffect = t);
    }
    set(e, t = !0) {
        !t || !this.passiveEffect
            ? this.updateAndNotify(e, t)
            : this.passiveEffect(e, this.updateAndNotify);
    }
    setWithVelocity(e, t, n) {
        this.set(t),
            (this.prev = void 0),
            (this.prevFrameValue = e),
            (this.prevUpdatedAt = this.updatedAt - n);
    }
    jump(e, t = !0) {
        this.updateAndNotify(e),
            (this.prev = e),
            (this.prevUpdatedAt = this.prevFrameValue = void 0),
            t && this.stop(),
            this.stopPassiveEffect && this.stopPassiveEffect();
    }
    dirty() {
        var e;
        (e = this.events.change) == null || e.notify(this.current);
    }
    addDependent(e) {
        this.dependents || (this.dependents = new Set()),
            this.dependents.add(e);
    }
    removeDependent(e) {
        this.dependents && this.dependents.delete(e);
    }
    get() {
        return Sb.current && Sb.current.push(this), this.current;
    }
    getPrevious() {
        return this.prev;
    }
    getVelocity() {
        const e = Qs.now();
        if (
            !this.canTrackVelocity ||
            this.prevFrameValue === void 0 ||
            e - this.updatedAt > xb
        )
            return 0;
        const t = Math.min(this.updatedAt - this.prevUpdatedAt, xb);
        return RL(
            parseFloat(this.current) - parseFloat(this.prevFrameValue),
            t
        );
    }
    start(e) {
        return (
            this.stop(),
            new Promise((t) => {
                (this.hasAnimated = !0),
                    (this.animation = e(t)),
                    this.events.animationStart &&
                        this.events.animationStart.notify();
            }).then(() => {
                this.events.animationComplete &&
                    this.events.animationComplete.notify(),
                    this.clearAnimation();
            })
        );
    }
    stop() {
        this.animation &&
            (this.animation.stop(),
            this.events.animationCancel &&
                this.events.animationCancel.notify()),
            this.clearAnimation();
    }
    isAnimating() {
        return !!this.animation;
    }
    clearAnimation() {
        delete this.animation;
    }
    destroy() {
        var e, t;
        (e = this.dependents) == null || e.clear(),
            (t = this.events.destroy) == null || t.notify(),
            this.clearListeners(),
            this.stop(),
            this.stopPassiveEffect && this.stopPassiveEffect();
    }
}
function Sp(r, e) {
    return new z4(r, e);
}
const c3 = (r, e) => (e && typeof r == 'number' ? e.transform(r) : r),
    { schedule: CE } = zL(queueMicrotask, !1),
    Na = { x: !1, y: !1 };
function f3() {
    return Na.x || Na.y;
}
function V4(r) {
    return r === 'x' || r === 'y'
        ? Na[r]
            ? null
            : ((Na[r] = !0),
              () => {
                  Na[r] = !1;
              })
        : Na.x || Na.y
          ? null
          : ((Na.x = Na.y = !0),
            () => {
                Na.x = Na.y = !1;
            });
}
function h3(r, e) {
    const t = F4(r),
        n = new AbortController(),
        i = { passive: !0, ...e, signal: n.signal };
    return [t, i, () => n.abort()];
}
function wb(r) {
    return !(r.pointerType === 'touch' || f3());
}
function H4(r, e, t = {}) {
    const [n, i, s] = h3(r, t),
        o = (a) => {
            if (!wb(a)) return;
            const { target: l } = a,
                u = e(l, a);
            if (typeof u != 'function' || !l) return;
            const f = (d) => {
                wb(d) && (u(d), l.removeEventListener('pointerleave', f));
            };
            l.addEventListener('pointerleave', f, i);
        };
    return (
        n.forEach((a) => {
            a.addEventListener('pointerenter', o, i);
        }),
        s
    );
}
const d3 = (r, e) => (e ? (r === e ? !0 : d3(r, e.parentElement)) : !1),
    RE = (r) =>
        r.pointerType === 'mouse'
            ? typeof r.button != 'number' || r.button <= 0
            : r.isPrimary !== !1,
    G4 = new Set(['BUTTON', 'INPUT', 'SELECT', 'TEXTAREA', 'A']);
function W4(r) {
    return G4.has(r.tagName) || r.tabIndex !== -1;
}
const c_ = new WeakSet();
function Mb(r) {
    return (e) => {
        e.key === 'Enter' && r(e);
    };
}
function nS(r, e) {
    r.dispatchEvent(
        new PointerEvent('pointer' + e, { isPrimary: !0, bubbles: !0 })
    );
}
const j4 = (r, e) => {
    const t = r.currentTarget;
    if (!t) return;
    const n = Mb(() => {
        if (c_.has(t)) return;
        nS(t, 'down');
        const i = Mb(() => {
                nS(t, 'up');
            }),
            s = () => nS(t, 'cancel');
        t.addEventListener('keyup', i, e), t.addEventListener('blur', s, e);
    });
    t.addEventListener('keydown', n, e),
        t.addEventListener(
            'blur',
            () => t.removeEventListener('keydown', n),
            e
        );
};
function Eb(r) {
    return RE(r) && !f3();
}
function X4(r, e, t = {}) {
    const [n, i, s] = h3(r, t),
        o = (a) => {
            const l = a.currentTarget;
            if (!Eb(a)) return;
            c_.add(l);
            const u = e(l, a),
                f = (v, _) => {
                    window.removeEventListener('pointerup', d),
                        window.removeEventListener('pointercancel', m),
                        c_.has(l) && c_.delete(l),
                        Eb(v) && typeof u == 'function' && u(v, { success: _ });
                },
                d = (v) => {
                    f(
                        v,
                        l === window ||
                            l === document ||
                            t.useGlobalTarget ||
                            d3(l, v.target)
                    );
                },
                m = (v) => {
                    f(v, !1);
                };
            window.addEventListener('pointerup', d, i),
                window.addEventListener('pointercancel', m, i);
        };
    return (
        n.forEach((a) => {
            (t.useGlobalTarget ? window : a).addEventListener(
                'pointerdown',
                o,
                i
            ),
                TE(a) &&
                    (a.addEventListener('focus', (u) => j4(u, i)),
                    !W4(a) && !a.hasAttribute('tabindex') && (a.tabIndex = 0));
        }),
        s
    );
}
function p3(r) {
    return bL(r) && 'ownerSVGElement' in r;
}
function Y4(r) {
    return p3(r) && r.tagName === 'svg';
}
const fs = (r) => !!(r && r.getVelocity),
    q4 = [...a3, us, Cc],
    K4 = (r) => q4.find(o3(r)),
    PE = Y.createContext({
        transformPagePoint: (r) => r,
        isStatic: !1,
        reducedMotion: 'never',
    });
class Z4 extends Y.Component {
    getSnapshotBeforeUpdate(e) {
        const t = this.props.childRef.current;
        if (t && e.isPresent && !this.props.isPresent) {
            const n = t.offsetParent,
                i = (TE(n) && n.offsetWidth) || 0,
                s = this.props.sizeRef.current;
            (s.height = t.offsetHeight || 0),
                (s.width = t.offsetWidth || 0),
                (s.top = t.offsetTop),
                (s.left = t.offsetLeft),
                (s.right = i - s.width - s.left);
        }
        return null;
    }
    componentDidUpdate() {}
    render() {
        return this.props.children;
    }
}
function $4({ children: r, isPresent: e, anchorX: t }) {
    const n = Y.useId(),
        i = Y.useRef(null),
        s = Y.useRef({ width: 0, height: 0, top: 0, left: 0, right: 0 }),
        { nonce: o } = Y.useContext(PE);
    return (
        Y.useInsertionEffect(() => {
            const {
                width: a,
                height: l,
                top: u,
                left: f,
                right: d,
            } = s.current;
            if (e || !i.current || !a || !l) return;
            const m = t === 'left' ? `left: ${f}` : `right: ${d}`;
            i.current.dataset.motionPopId = n;
            const v = document.createElement('style');
            return (
                o && (v.nonce = o),
                document.head.appendChild(v),
                v.sheet &&
                    v.sheet.insertRule(`
          [data-motion-pop-id="${n}"] {
            position: absolute !important;
            width: ${a}px !important;
            height: ${l}px !important;
            ${m}px !important;
            top: ${u}px !important;
          }
        `),
                () => {
                    document.head.contains(v) && document.head.removeChild(v);
                }
            );
        }, [e]),
        we.jsx(Z4, {
            isPresent: e,
            childRef: i,
            sizeRef: s,
            children: Y.cloneElement(r, { ref: i }),
        })
    );
}
const J4 = ({
    children: r,
    initial: e,
    isPresent: t,
    onExitComplete: n,
    custom: i,
    presenceAffectsLayout: s,
    mode: o,
    anchorX: a,
}) => {
    const l = oE(Q4),
        u = Y.useId();
    let f = !0,
        d = Y.useMemo(
            () => (
                (f = !1),
                {
                    id: u,
                    initial: e,
                    isPresent: t,
                    custom: i,
                    onExitComplete: (m) => {
                        l.set(m, !0);
                        for (const v of l.values()) if (!v) return;
                        n && n();
                    },
                    register: (m) => (l.set(m, !1), () => l.delete(m)),
                }
            ),
            [t, l, n]
        );
    return (
        s && f && (d = { ...d }),
        Y.useMemo(() => {
            l.forEach((m, v) => l.set(v, !1));
        }, [t]),
        Y.useEffect(() => {
            !t && !l.size && n && n();
        }, [t]),
        o === 'popLayout' &&
            (r = we.jsx($4, { isPresent: t, anchorX: a, children: r })),
        we.jsx(Mx.Provider, { value: d, children: r })
    );
};
function Q4() {
    return new Map();
}
function m3(r = !0) {
    const e = Y.useContext(Mx);
    if (e === null) return [!0, null];
    const { isPresent: t, onExitComplete: n, register: i } = e,
        s = Y.useId();
    Y.useEffect(() => {
        if (r) return i(s);
    }, [r]);
    const o = Y.useCallback(() => r && n && n(s), [s, n, r]);
    return !t && n ? [!1, o] : [!0];
}
const ey = (r) => r.key || '';
function Tb(r) {
    const e = [];
    return (
        Y.Children.forEach(r, (t) => {
            Y.isValidElement(t) && e.push(t);
        }),
        e
    );
}
const LE = ({
        children: r,
        custom: e,
        initial: t = !0,
        onExitComplete: n,
        presenceAffectsLayout: i = !0,
        mode: s = 'sync',
        propagate: o = !1,
        anchorX: a = 'left',
    }) => {
        const [l, u] = m3(o),
            f = Y.useMemo(() => Tb(r), [r]),
            d = o && !l ? [] : f.map(ey),
            m = Y.useRef(!0),
            v = Y.useRef(f),
            _ = oE(() => new Map()),
            [S, w] = Y.useState(f),
            [x, A] = Y.useState(f);
        TL(() => {
            (m.current = !1), (v.current = f);
            for (let P = 0; P < x.length; P++) {
                const L = ey(x[P]);
                d.includes(L) ? _.delete(L) : _.get(L) !== !0 && _.set(L, !1);
            }
        }, [x, d.length, d.join('-')]);
        const T = [];
        if (f !== S) {
            let P = [...f];
            for (let L = 0; L < x.length; L++) {
                const D = x[L],
                    O = ey(D);
                d.includes(O) || (P.splice(L, 0, D), T.push(D));
            }
            return s === 'wait' && T.length && (P = T), A(Tb(P)), w(f), null;
        }
        const { forceRender: b } = Y.useContext(sE);
        return we.jsx(we.Fragment, {
            children: x.map((P) => {
                const L = ey(P),
                    D = o && !l ? !1 : f === x || d.includes(L),
                    O = () => {
                        if (_.has(L)) _.set(L, !0);
                        else return;
                        let I = !0;
                        _.forEach((U) => {
                            U || (I = !1);
                        }),
                            I &&
                                (b == null || b(),
                                A(v.current),
                                o && (u == null || u()),
                                n && n());
                    };
                return we.jsx(
                    J4,
                    {
                        isPresent: D,
                        initial: !m.current || t ? void 0 : !1,
                        custom: e,
                        presenceAffectsLayout: i,
                        mode: s,
                        onExitComplete: D ? void 0 : O,
                        anchorX: a,
                        children: P,
                    },
                    L
                );
            }),
        });
    },
    g3 = Y.createContext({ strict: !1 }),
    Ab = {
        animation: [
            'animate',
            'variants',
            'whileHover',
            'whileTap',
            'exit',
            'whileInView',
            'whileFocus',
            'whileDrag',
        ],
        exit: ['exit'],
        drag: ['drag', 'dragControls'],
        focus: ['whileFocus'],
        hover: ['whileHover', 'onHoverStart', 'onHoverEnd'],
        tap: ['whileTap', 'onTap', 'onTapStart', 'onTapCancel'],
        pan: ['onPan', 'onPanStart', 'onPanSessionStart', 'onPanEnd'],
        inView: ['whileInView', 'onViewportEnter', 'onViewportLeave'],
        layout: ['layout', 'layoutId'],
    },
    wp = {};
for (const r in Ab) wp[r] = { isEnabled: (e) => Ab[r].some((t) => !!e[t]) };
function eB(r) {
    for (const e in r) wp[e] = { ...wp[e], ...r[e] };
}
const tB = new Set([
    'animate',
    'exit',
    'variants',
    'initial',
    'style',
    'values',
    'variants',
    'transition',
    'transformTemplate',
    'custom',
    'inherit',
    'onBeforeLayoutMeasure',
    'onAnimationStart',
    'onAnimationComplete',
    'onUpdate',
    'onDragStart',
    'onDrag',
    'onDragEnd',
    'onMeasureDragConstraints',
    'onDirectionLock',
    'onDragTransitionEnd',
    '_dragX',
    '_dragY',
    'onHoverStart',
    'onHoverEnd',
    'onViewportEnter',
    'onViewportLeave',
    'globalTapTarget',
    'ignoreStrict',
    'viewport',
]);
function A_(r) {
    return (
        r.startsWith('while') ||
        (r.startsWith('drag') && r !== 'draggable') ||
        r.startsWith('layout') ||
        r.startsWith('onTap') ||
        r.startsWith('onPan') ||
        r.startsWith('onLayout') ||
        tB.has(r)
    );
}
let v3 = (r) => !A_(r);
function nB(r) {
    r && (v3 = (e) => (e.startsWith('on') ? !A_(e) : r(e)));
}
try {
    nB(require('@emotion/is-prop-valid').default);
} catch {}
function iB(r, e, t) {
    const n = {};
    for (const i in r)
        (i === 'values' && typeof r.values == 'object') ||
            ((v3(i) ||
                (t === !0 && A_(i)) ||
                (!e && !A_(i)) ||
                (r.draggable && i.startsWith('onDrag'))) &&
                (n[i] = r[i]));
    return n;
}
function rB(r) {
    if (typeof Proxy > 'u') return r;
    const e = new Map(),
        t = (...n) => r(...n);
    return new Proxy(t, {
        get: (n, i) =>
            i === 'create' ? r : (e.has(i) || e.set(i, r(i)), e.get(i)),
    });
}
const Ex = Y.createContext({});
function Tx(r) {
    return r !== null && typeof r == 'object' && typeof r.start == 'function';
}
function e0(r) {
    return typeof r == 'string' || Array.isArray(r);
}
const IE = [
        'animate',
        'whileInView',
        'whileFocus',
        'whileHover',
        'whileTap',
        'whileDrag',
        'exit',
    ],
    DE = ['initial', ...IE];
function Ax(r) {
    return Tx(r.animate) || DE.some((e) => e0(r[e]));
}
function y3(r) {
    return !!(Ax(r) || r.variants);
}
function sB(r, e) {
    if (Ax(r)) {
        const { initial: t, animate: n } = r;
        return {
            initial: t === !1 || e0(t) ? t : void 0,
            animate: e0(n) ? n : void 0,
        };
    }
    return r.inherit !== !1 ? e : {};
}
function oB(r) {
    const { initial: e, animate: t } = sB(r, Y.useContext(Ex));
    return Y.useMemo(() => ({ initial: e, animate: t }), [bb(e), bb(t)]);
}
function bb(r) {
    return Array.isArray(r) ? r.join(' ') : r;
}
const aB = Symbol.for('motionComponentSymbol');
function ep(r) {
    return (
        r &&
        typeof r == 'object' &&
        Object.prototype.hasOwnProperty.call(r, 'current')
    );
}
function lB(r, e, t) {
    return Y.useCallback(
        (n) => {
            n && r.onMount && r.onMount(n),
                e && (n ? e.mount(n) : e.unmount()),
                t && (typeof t == 'function' ? t(n) : ep(t) && (t.current = n));
        },
        [e]
    );
}
const OE = (r) => r.replace(/([a-z])([A-Z])/gu, '$1-$2').toLowerCase(),
    uB = 'framerAppearId',
    _3 = 'data-' + OE(uB),
    x3 = Y.createContext({});
function cB(r, e, t, n, i) {
    var S, w;
    const { visualElement: s } = Y.useContext(Ex),
        o = Y.useContext(g3),
        a = Y.useContext(Mx),
        l = Y.useContext(PE).reducedMotion,
        u = Y.useRef(null);
    (n = n || o.renderer),
        !u.current &&
            n &&
            (u.current = n(r, {
                visualState: e,
                parent: s,
                props: t,
                presenceContext: a,
                blockInitialAnimation: a ? a.initial === !1 : !1,
                reducedMotionConfig: l,
            }));
    const f = u.current,
        d = Y.useContext(x3);
    f &&
        !f.projection &&
        i &&
        (f.type === 'html' || f.type === 'svg') &&
        fB(u.current, t, i, d);
    const m = Y.useRef(!1);
    Y.useInsertionEffect(() => {
        f && m.current && f.update(t, a);
    });
    const v = t[_3],
        _ = Y.useRef(
            !!v &&
                !(
                    (S = window.MotionHandoffIsComplete) != null &&
                    S.call(window, v)
                ) &&
                ((w = window.MotionHasOptimisedAnimation) == null
                    ? void 0
                    : w.call(window, v))
        );
    return (
        TL(() => {
            f &&
                ((m.current = !0),
                (window.MotionIsMounted = !0),
                f.updateFeatures(),
                CE.render(f.render),
                _.current &&
                    f.animationState &&
                    f.animationState.animateChanges());
        }),
        Y.useEffect(() => {
            f &&
                (!_.current &&
                    f.animationState &&
                    f.animationState.animateChanges(),
                _.current &&
                    (queueMicrotask(() => {
                        var x;
                        (x = window.MotionHandoffMarkAsComplete) == null ||
                            x.call(window, v);
                    }),
                    (_.current = !1)));
        }),
        f
    );
}
function fB(r, e, t, n) {
    const {
        layoutId: i,
        layout: s,
        drag: o,
        dragConstraints: a,
        layoutScroll: l,
        layoutRoot: u,
        layoutCrossfade: f,
    } = e;
    (r.projection = new t(
        r.latestValues,
        e['data-framer-portal-id'] ? void 0 : S3(r.parent)
    )),
        r.projection.setOptions({
            layoutId: i,
            layout: s,
            alwaysMeasureLayout: !!o || (a && ep(a)),
            visualElement: r,
            animationType: typeof s == 'string' ? s : 'both',
            initialPromotionConfig: n,
            crossfade: f,
            layoutScroll: l,
            layoutRoot: u,
        });
}
function S3(r) {
    if (r)
        return r.options.allowProjection !== !1 ? r.projection : S3(r.parent);
}
function hB({
    preloadedFeatures: r,
    createVisualElement: e,
    useRender: t,
    useVisualState: n,
    Component: i,
}) {
    r && eB(r);
    function s(a, l) {
        let u;
        const f = { ...Y.useContext(PE), ...a, layoutId: dB(a) },
            { isStatic: d } = f,
            m = oB(a),
            v = n(a, d);
        if (!d && aE) {
            pB();
            const _ = mB(f);
            (u = _.MeasureLayout),
                (m.visualElement = cB(i, v, f, e, _.ProjectionNode));
        }
        return we.jsxs(Ex.Provider, {
            value: m,
            children: [
                u && m.visualElement
                    ? we.jsx(u, { visualElement: m.visualElement, ...f })
                    : null,
                t(i, a, lB(v, m.visualElement, l), v, d, m.visualElement),
            ],
        });
    }
    s.displayName = `motion.${typeof i == 'string' ? i : `create(${i.displayName ?? i.name ?? ''})`}`;
    const o = Y.forwardRef(s);
    return (o[aB] = i), o;
}
function dB({ layoutId: r }) {
    const e = Y.useContext(sE).id;
    return e && r !== void 0 ? e + '-' + r : r;
}
function pB(r, e) {
    Y.useContext(g3).strict;
}
function mB(r) {
    const { drag: e, layout: t } = wp;
    if (!e && !t) return {};
    const n = { ...e, ...t };
    return {
        MeasureLayout:
            (e != null && e.isEnabled(r)) || (t != null && t.isEnabled(r))
                ? n.MeasureLayout
                : void 0,
        ProjectionNode: n.ProjectionNode,
    };
}
const t0 = {};
function gB(r) {
    for (const e in r) (t0[e] = r[e]), mE(e) && (t0[e].isCSSVariable = !0);
}
function w3(r, { layout: e, layoutId: t }) {
    return (
        Np.has(r) ||
        r.startsWith('origin') ||
        ((e || t !== void 0) && (!!t0[r] || r === 'opacity'))
    );
}
const vB = {
        x: 'translateX',
        y: 'translateY',
        z: 'translateZ',
        transformPerspective: 'perspective',
    },
    yB = kp.length;
function _B(r, e, t) {
    let n = '',
        i = !0;
    for (let s = 0; s < yB; s++) {
        const o = kp[s],
            a = r[o];
        if (a === void 0) continue;
        let l = !0;
        if (
            (typeof a == 'number'
                ? (l = a === (o.startsWith('scale') ? 1 : 0))
                : (l = parseFloat(a) === 0),
            !l || t)
        ) {
            const u = c3(a, bE[o]);
            if (!l) {
                i = !1;
                const f = vB[o] || o;
                n += `${f}(${u}) `;
            }
            t && (e[o] = u);
        }
    }
    return (n = n.trim()), t ? (n = t(e, i ? '' : n)) : i && (n = 'none'), n;
}
function UE(r, e, t) {
    const { style: n, vars: i, transformOrigin: s } = r;
    let o = !1,
        a = !1;
    for (const l in e) {
        const u = e[l];
        if (Np.has(l)) {
            o = !0;
            continue;
        } else if (mE(l)) {
            i[l] = u;
            continue;
        } else {
            const f = c3(u, bE[l]);
            l.startsWith('origin') ? ((a = !0), (s[l] = f)) : (n[l] = f);
        }
    }
    if (
        (e.transform ||
            (o || t
                ? (n.transform = _B(e, r.transform, t))
                : n.transform && (n.transform = 'none')),
        a)
    ) {
        const { originX: l = '50%', originY: u = '50%', originZ: f = 0 } = s;
        n.transformOrigin = `${l} ${u} ${f}`;
    }
}
const kE = () => ({ style: {}, transform: {}, transformOrigin: {}, vars: {} });
function M3(r, e, t) {
    for (const n in e) !fs(e[n]) && !w3(n, t) && (r[n] = e[n]);
}
function xB({ transformTemplate: r }, e) {
    return Y.useMemo(() => {
        const t = kE();
        return UE(t, e, r), Object.assign({}, t.vars, t.style);
    }, [e]);
}
function SB(r, e) {
    const t = r.style || {},
        n = {};
    return M3(n, t, r), Object.assign(n, xB(r, e)), n;
}
function wB(r, e) {
    const t = {},
        n = SB(r, e);
    return (
        r.drag &&
            r.dragListener !== !1 &&
            ((t.draggable = !1),
            (n.userSelect = n.WebkitUserSelect = n.WebkitTouchCallout = 'none'),
            (n.touchAction =
                r.drag === !0 ? 'none' : `pan-${r.drag === 'x' ? 'y' : 'x'}`)),
        r.tabIndex === void 0 &&
            (r.onTap || r.onTapStart || r.whileTap) &&
            (t.tabIndex = 0),
        (t.style = n),
        t
    );
}
const MB = { offset: 'stroke-dashoffset', array: 'stroke-dasharray' },
    EB = { offset: 'strokeDashoffset', array: 'strokeDasharray' };
function TB(r, e, t = 1, n = 0, i = !0) {
    r.pathLength = 1;
    const s = i ? MB : EB;
    r[s.offset] = rn.transform(-n);
    const o = rn.transform(e),
        a = rn.transform(t);
    r[s.array] = `${o} ${a}`;
}
function E3(
    r,
    {
        attrX: e,
        attrY: t,
        attrScale: n,
        pathLength: i,
        pathSpacing: s = 1,
        pathOffset: o = 0,
        ...a
    },
    l,
    u,
    f
) {
    if ((UE(r, a, u), l)) {
        r.style.viewBox && (r.attrs.viewBox = r.style.viewBox);
        return;
    }
    (r.attrs = r.style), (r.style = {});
    const { attrs: d, style: m } = r;
    d.transform && ((m.transform = d.transform), delete d.transform),
        (m.transform || d.transformOrigin) &&
            ((m.transformOrigin = d.transformOrigin ?? '50% 50%'),
            delete d.transformOrigin),
        m.transform &&
            ((m.transformBox =
                (f == null ? void 0 : f.transformBox) ?? 'fill-box'),
            delete d.transformBox),
        e !== void 0 && (d.x = e),
        t !== void 0 && (d.y = t),
        n !== void 0 && (d.scale = n),
        i !== void 0 && TB(d, i, s, o, !1);
}
const T3 = () => ({ ...kE(), attrs: {} }),
    A3 = (r) => typeof r == 'string' && r.toLowerCase() === 'svg';
function AB(r, e, t, n) {
    const i = Y.useMemo(() => {
        const s = T3();
        return (
            E3(s, e, A3(n), r.transformTemplate, r.style),
            { ...s.attrs, style: { ...s.style } }
        );
    }, [e]);
    if (r.style) {
        const s = {};
        M3(s, r.style, r), (i.style = { ...s, ...i.style });
    }
    return i;
}
const bB = [
    'animate',
    'circle',
    'defs',
    'desc',
    'ellipse',
    'g',
    'image',
    'line',
    'filter',
    'marker',
    'mask',
    'metadata',
    'path',
    'pattern',
    'polygon',
    'polyline',
    'rect',
    'stop',
    'switch',
    'symbol',
    'svg',
    'text',
    'tspan',
    'use',
    'view',
];
function NE(r) {
    return typeof r != 'string' || r.includes('-')
        ? !1
        : !!(bB.indexOf(r) > -1 || /[A-Z]/u.test(r));
}
function CB(r = !1) {
    return (t, n, i, { latestValues: s }, o) => {
        const l = (NE(t) ? AB : wB)(n, s, o, t),
            u = iB(n, typeof t == 'string', r),
            f = t !== Y.Fragment ? { ...u, ...l, ref: i } : {},
            { children: d } = n,
            m = Y.useMemo(() => (fs(d) ? d.get() : d), [d]);
        return Y.createElement(t, { ...f, children: m });
    };
}
function Cb(r) {
    const e = [{}, {}];
    return (
        r == null ||
            r.values.forEach((t, n) => {
                (e[0][n] = t.get()), (e[1][n] = t.getVelocity());
            }),
        e
    );
}
function FE(r, e, t, n) {
    if (typeof e == 'function') {
        const [i, s] = Cb(n);
        e = e(t !== void 0 ? t : r.custom, i, s);
    }
    if (
        (typeof e == 'string' && (e = r.variants && r.variants[e]),
        typeof e == 'function')
    ) {
        const [i, s] = Cb(n);
        e = e(t !== void 0 ? t : r.custom, i, s);
    }
    return e;
}
function f_(r) {
    return fs(r) ? r.get() : r;
}
function RB({ scrapeMotionValuesFromProps: r, createRenderState: e }, t, n, i) {
    return { latestValues: PB(t, n, i, r), renderState: e() };
}
const b3 = (r) => (e, t) => {
    const n = Y.useContext(Ex),
        i = Y.useContext(Mx),
        s = () => RB(r, e, n, i);
    return t ? s() : oE(s);
};
function PB(r, e, t, n) {
    const i = {},
        s = n(r, {});
    for (const m in s) i[m] = f_(s[m]);
    let { initial: o, animate: a } = r;
    const l = Ax(r),
        u = y3(r);
    e &&
        u &&
        !l &&
        r.inherit !== !1 &&
        (o === void 0 && (o = e.initial), a === void 0 && (a = e.animate));
    let f = t ? t.initial === !1 : !1;
    f = f || o === !1;
    const d = f ? a : o;
    if (d && typeof d != 'boolean' && !Tx(d)) {
        const m = Array.isArray(d) ? d : [d];
        for (let v = 0; v < m.length; v++) {
            const _ = FE(r, m[v]);
            if (_) {
                const { transitionEnd: S, transition: w, ...x } = _;
                for (const A in x) {
                    let T = x[A];
                    if (Array.isArray(T)) {
                        const b = f ? T.length - 1 : 0;
                        T = T[b];
                    }
                    T !== null && (i[A] = T);
                }
                for (const A in S) i[A] = S[A];
            }
        }
    }
    return i;
}
function BE(r, e, t) {
    var s;
    const { style: n } = r,
        i = {};
    for (const o in n)
        (fs(n[o]) ||
            (e.style && fs(e.style[o])) ||
            w3(o, r) ||
            ((s = t == null ? void 0 : t.getValue(o)) == null
                ? void 0
                : s.liveStyle) !== void 0) &&
            (i[o] = n[o]);
    return i;
}
const LB = {
    useVisualState: b3({
        scrapeMotionValuesFromProps: BE,
        createRenderState: kE,
    }),
};
function C3(r, e, t) {
    const n = BE(r, e, t);
    for (const i in r)
        if (fs(r[i]) || fs(e[i])) {
            const s =
                kp.indexOf(i) !== -1
                    ? 'attr' + i.charAt(0).toUpperCase() + i.substring(1)
                    : i;
            n[s] = r[i];
        }
    return n;
}
const IB = {
    useVisualState: b3({
        scrapeMotionValuesFromProps: C3,
        createRenderState: T3,
    }),
};
function DB(r, e) {
    return function (
        n,
        { forwardMotionProps: i } = { forwardMotionProps: !1 }
    ) {
        const o = {
            ...(NE(n) ? IB : LB),
            preloadedFeatures: r,
            useRender: CB(i),
            createVisualElement: e,
            Component: n,
        };
        return hB(o);
    };
}
function n0(r, e, t) {
    const n = r.getProps();
    return FE(n, e, t !== void 0 ? t : n.custom, r);
}
const $w = (r) => Array.isArray(r);
function OB(r, e, t) {
    r.hasValue(e) ? r.getValue(e).set(t) : r.addValue(e, Sp(t));
}
function UB(r) {
    return $w(r) ? r[r.length - 1] || 0 : r;
}
function kB(r, e) {
    const t = n0(r, e);
    let { transitionEnd: n = {}, transition: i = {}, ...s } = t || {};
    s = { ...s, ...n };
    for (const o in s) {
        const a = UB(s[o]);
        OB(r, o, a);
    }
}
function NB(r) {
    return !!(fs(r) && r.add);
}
function Jw(r, e) {
    const t = r.getValue('willChange');
    if (NB(t)) return t.add(e);
    if (!t && wu.WillChange) {
        const n = new wu.WillChange('auto');
        r.addValue('willChange', n), n.add(e);
    }
}
function R3(r) {
    return r.props[_3];
}
const FB = (r) => r !== null;
function BB(r, { repeat: e, repeatType: t = 'loop' }, n) {
    const i = r.filter(FB),
        s = e && t !== 'loop' && e % 2 === 1 ? 0 : i.length - 1;
    return i[s];
}
const zB = { type: 'spring', stiffness: 500, damping: 25, restSpeed: 10 },
    VB = (r) => ({
        type: 'spring',
        stiffness: 550,
        damping: r === 0 ? 2 * Math.sqrt(550) : 30,
        restSpeed: 10,
    }),
    HB = { type: 'keyframes', duration: 0.8 },
    GB = { type: 'keyframes', ease: [0.25, 0.1, 0.35, 1], duration: 0.3 },
    WB = (r, { keyframes: e }) =>
        e.length > 2
            ? HB
            : Np.has(r)
              ? r.startsWith('scale')
                  ? VB(e[1])
                  : zB
              : GB;
function jB({
    when: r,
    delay: e,
    delayChildren: t,
    staggerChildren: n,
    staggerDirection: i,
    repeat: s,
    repeatType: o,
    repeatDelay: a,
    from: l,
    elapsed: u,
    ...f
}) {
    return !!Object.keys(f).length;
}
const zE =
    (r, e, t, n = {}, i, s) =>
    (o) => {
        const a = AE(n, r) || {},
            l = a.delay || n.delay || 0;
        let { elapsed: u = 0 } = n;
        u = u - wl(l);
        const f = {
            keyframes: Array.isArray(t) ? t : [null, t],
            ease: 'easeOut',
            velocity: e.getVelocity(),
            ...a,
            delay: -u,
            onUpdate: (m) => {
                e.set(m), a.onUpdate && a.onUpdate(m);
            },
            onComplete: () => {
                o(), a.onComplete && a.onComplete();
            },
            name: r,
            motionValue: e,
            element: s ? void 0 : i,
        };
        jB(a) || Object.assign(f, WB(r, f)),
            f.duration && (f.duration = wl(f.duration)),
            f.repeatDelay && (f.repeatDelay = wl(f.repeatDelay)),
            f.from !== void 0 && (f.keyframes[0] = f.from);
        let d = !1;
        if (
            ((f.type === !1 || (f.duration === 0 && !f.repeatDelay)) &&
                ((f.duration = 0), f.delay === 0 && (d = !0)),
            (wu.instantAnimations || wu.skipAnimations) &&
                ((d = !0), (f.duration = 0), (f.delay = 0)),
            (f.allowFlatten = !a.type && !a.ease),
            d && !s && e.get() !== void 0)
        ) {
            const m = BB(f.keyframes, a);
            if (m !== void 0) {
                Di.update(() => {
                    f.onUpdate(m), f.onComplete();
                });
                return;
            }
        }
        return a.isSync ? new ME(f) : new T4(f);
    };
function XB({ protectedKeys: r, needsAnimating: e }, t) {
    const n = r.hasOwnProperty(t) && e[t] !== !0;
    return (e[t] = !1), n;
}
function P3(r, e, { delay: t = 0, transitionOverride: n, type: i } = {}) {
    let {
        transition: s = r.getDefaultTransition(),
        transitionEnd: o,
        ...a
    } = e;
    n && (s = n);
    const l = [],
        u = i && r.animationState && r.animationState.getState()[i];
    for (const f in a) {
        const d = r.getValue(f, r.latestValues[f] ?? null),
            m = a[f];
        if (m === void 0 || (u && XB(u, f))) continue;
        const v = { delay: t, ...AE(s || {}, f) },
            _ = d.get();
        if (
            _ !== void 0 &&
            !d.isAnimating &&
            !Array.isArray(m) &&
            m === _ &&
            !v.velocity
        )
            continue;
        let S = !1;
        if (window.MotionHandoffAnimation) {
            const x = R3(r);
            if (x) {
                const A = window.MotionHandoffAnimation(x, f, Di);
                A !== null && ((v.startTime = A), (S = !0));
            }
        }
        Jw(r, f),
            d.start(
                zE(
                    f,
                    d,
                    m,
                    r.shouldReduceMotion && s3.has(f) ? { type: !1 } : v,
                    r,
                    S
                )
            );
        const w = d.animation;
        w && l.push(w);
    }
    return (
        o &&
            Promise.all(l).then(() => {
                Di.update(() => {
                    o && kB(r, o);
                });
            }),
        l
    );
}
function Qw(r, e, t = {}) {
    var l;
    const n = n0(
        r,
        e,
        t.type === 'exit'
            ? (l = r.presenceContext) == null
                ? void 0
                : l.custom
            : void 0
    );
    let { transition: i = r.getDefaultTransition() || {} } = n || {};
    t.transitionOverride && (i = t.transitionOverride);
    const s = n ? () => Promise.all(P3(r, n, t)) : () => Promise.resolve(),
        o =
            r.variantChildren && r.variantChildren.size
                ? (u = 0) => {
                      const {
                          delayChildren: f = 0,
                          staggerChildren: d,
                          staggerDirection: m,
                      } = i;
                      return YB(r, e, f + u, d, m, t);
                  }
                : () => Promise.resolve(),
        { when: a } = i;
    if (a) {
        const [u, f] = a === 'beforeChildren' ? [s, o] : [o, s];
        return u().then(() => f());
    } else return Promise.all([s(), o(t.delay)]);
}
function YB(r, e, t = 0, n = 0, i = 1, s) {
    const o = [],
        a = (r.variantChildren.size - 1) * n,
        l = i === 1 ? (u = 0) => u * n : (u = 0) => a - u * n;
    return (
        Array.from(r.variantChildren)
            .sort(qB)
            .forEach((u, f) => {
                u.notify('AnimationStart', e),
                    o.push(
                        Qw(u, e, { ...s, delay: t + l(f) }).then(() =>
                            u.notify('AnimationComplete', e)
                        )
                    );
            }),
        Promise.all(o)
    );
}
function qB(r, e) {
    return r.sortNodePosition(e);
}
function KB(r, e, t = {}) {
    r.notify('AnimationStart', e);
    let n;
    if (Array.isArray(e)) {
        const i = e.map((s) => Qw(r, s, t));
        n = Promise.all(i);
    } else if (typeof e == 'string') n = Qw(r, e, t);
    else {
        const i = typeof e == 'function' ? n0(r, e, t.custom) : e;
        n = Promise.all(P3(r, i, t));
    }
    return n.then(() => {
        r.notify('AnimationComplete', e);
    });
}
function L3(r, e) {
    if (!Array.isArray(e)) return !1;
    const t = e.length;
    if (t !== r.length) return !1;
    for (let n = 0; n < t; n++) if (e[n] !== r[n]) return !1;
    return !0;
}
const ZB = DE.length;
function I3(r) {
    if (!r) return;
    if (!r.isControllingVariants) {
        const t = r.parent ? I3(r.parent) || {} : {};
        return r.props.initial !== void 0 && (t.initial = r.props.initial), t;
    }
    const e = {};
    for (let t = 0; t < ZB; t++) {
        const n = DE[t],
            i = r.props[n];
        (e0(i) || i === !1) && (e[n] = i);
    }
    return e;
}
const $B = [...IE].reverse(),
    JB = IE.length;
function QB(r) {
    return (e) =>
        Promise.all(e.map(({ animation: t, options: n }) => KB(r, t, n)));
}
function ez(r) {
    let e = QB(r),
        t = Rb(),
        n = !0;
    const i = (l) => (u, f) => {
        var m;
        const d = n0(
            r,
            f,
            l === 'exit'
                ? (m = r.presenceContext) == null
                    ? void 0
                    : m.custom
                : void 0
        );
        if (d) {
            const { transition: v, transitionEnd: _, ...S } = d;
            u = { ...u, ...S, ..._ };
        }
        return u;
    };
    function s(l) {
        e = l(r);
    }
    function o(l) {
        const { props: u } = r,
            f = I3(r.parent) || {},
            d = [],
            m = new Set();
        let v = {},
            _ = 1 / 0;
        for (let w = 0; w < JB; w++) {
            const x = $B[w],
                A = t[x],
                T = u[x] !== void 0 ? u[x] : f[x],
                b = e0(T),
                P = x === l ? A.isActive : null;
            P === !1 && (_ = w);
            let L = T === f[x] && T !== u[x] && b;
            if (
                (L && n && r.manuallyAnimateOnMount && (L = !1),
                (A.protectedKeys = { ...v }),
                (!A.isActive && P === null) ||
                    (!T && !A.prevProp) ||
                    Tx(T) ||
                    typeof T == 'boolean')
            )
                continue;
            const D = tz(A.prevProp, T);
            let O = D || (x === l && A.isActive && !L && b) || (w > _ && b),
                I = !1;
            const U = Array.isArray(T) ? T : [T];
            let H = U.reduce(i(x), {});
            P === !1 && (H = {});
            const { prevResolvedValues: W = {} } = A,
                q = { ...W, ...H },
                K = (de) => {
                    (O = !0),
                        m.has(de) && ((I = !0), m.delete(de)),
                        (A.needsAnimating[de] = !0);
                    const Z = r.getValue(de);
                    Z && (Z.liveStyle = !1);
                };
            for (const de in q) {
                const Z = H[de],
                    se = W[de];
                if (v.hasOwnProperty(de)) continue;
                let J = !1;
                $w(Z) && $w(se) ? (J = !L3(Z, se)) : (J = Z !== se),
                    J
                        ? Z != null
                            ? K(de)
                            : m.add(de)
                        : Z !== void 0 && m.has(de)
                          ? K(de)
                          : (A.protectedKeys[de] = !0);
            }
            (A.prevProp = T),
                (A.prevResolvedValues = H),
                A.isActive && (v = { ...v, ...H }),
                n && r.blockInitialAnimation && (O = !1),
                O &&
                    (!(L && D) || I) &&
                    d.push(
                        ...U.map((de) => ({
                            animation: de,
                            options: { type: x },
                        }))
                    );
        }
        if (m.size) {
            const w = {};
            if (typeof u.initial != 'boolean') {
                const x = n0(
                    r,
                    Array.isArray(u.initial) ? u.initial[0] : u.initial
                );
                x && x.transition && (w.transition = x.transition);
            }
            m.forEach((x) => {
                const A = r.getBaseTarget(x),
                    T = r.getValue(x);
                T && (T.liveStyle = !0), (w[x] = A ?? null);
            }),
                d.push({ animation: w });
        }
        let S = !!d.length;
        return (
            n &&
                (u.initial === !1 || u.initial === u.animate) &&
                !r.manuallyAnimateOnMount &&
                (S = !1),
            (n = !1),
            S ? e(d) : Promise.resolve()
        );
    }
    function a(l, u) {
        var d;
        if (t[l].isActive === u) return Promise.resolve();
        (d = r.variantChildren) == null ||
            d.forEach((m) => {
                var v;
                return (v = m.animationState) == null
                    ? void 0
                    : v.setActive(l, u);
            }),
            (t[l].isActive = u);
        const f = o(l);
        for (const m in t) t[m].protectedKeys = {};
        return f;
    }
    return {
        animateChanges: o,
        setActive: a,
        setAnimateFunction: s,
        getState: () => t,
        reset: () => {
            (t = Rb()), (n = !0);
        },
    };
}
function tz(r, e) {
    return typeof e == 'string' ? e !== r : Array.isArray(e) ? !L3(e, r) : !1;
}
function Mf(r = !1) {
    return {
        isActive: r,
        protectedKeys: {},
        needsAnimating: {},
        prevResolvedValues: {},
    };
}
function Rb() {
    return {
        animate: Mf(!0),
        whileInView: Mf(),
        whileHover: Mf(),
        whileTap: Mf(),
        whileDrag: Mf(),
        whileFocus: Mf(),
        exit: Mf(),
    };
}
class kc {
    constructor(e) {
        (this.isMounted = !1), (this.node = e);
    }
    update() {}
}
class nz extends kc {
    constructor(e) {
        super(e), e.animationState || (e.animationState = ez(e));
    }
    updateAnimationControlsSubscription() {
        const { animate: e } = this.node.getProps();
        Tx(e) && (this.unmountControls = e.subscribe(this.node));
    }
    mount() {
        this.updateAnimationControlsSubscription();
    }
    update() {
        const { animate: e } = this.node.getProps(),
            { animate: t } = this.node.prevProps || {};
        e !== t && this.updateAnimationControlsSubscription();
    }
    unmount() {
        var e;
        this.node.animationState.reset(),
            (e = this.unmountControls) == null || e.call(this);
    }
}
let iz = 0;
class rz extends kc {
    constructor() {
        super(...arguments), (this.id = iz++);
    }
    update() {
        if (!this.node.presenceContext) return;
        const { isPresent: e, onExitComplete: t } = this.node.presenceContext,
            { isPresent: n } = this.node.prevPresenceContext || {};
        if (!this.node.animationState || e === n) return;
        const i = this.node.animationState.setActive('exit', !e);
        t &&
            !e &&
            i.then(() => {
                t(this.id);
            });
    }
    mount() {
        const { register: e, onExitComplete: t } =
            this.node.presenceContext || {};
        t && t(this.id), e && (this.unmount = e(this.id));
    }
    unmount() {}
}
const sz = { animation: { Feature: nz }, exit: { Feature: rz } };
function i0(r, e, t, n = { passive: !0 }) {
    return r.addEventListener(e, t, n), () => r.removeEventListener(e, t);
}
function B0(r) {
    return { point: { x: r.pageX, y: r.pageY } };
}
const oz = (r) => (e) => RE(e) && r(e, B0(e));
function Rg(r, e, t, n) {
    return i0(r, e, oz(t), n);
}
function D3({ top: r, left: e, right: t, bottom: n }) {
    return { x: { min: e, max: t }, y: { min: r, max: n } };
}
function az({ x: r, y: e }) {
    return { top: e.min, right: r.max, bottom: e.max, left: r.min };
}
function lz(r, e) {
    if (!e) return r;
    const t = e({ x: r.left, y: r.top }),
        n = e({ x: r.right, y: r.bottom });
    return { top: t.y, left: t.x, bottom: n.y, right: n.x };
}
const O3 = 1e-4,
    uz = 1 - O3,
    cz = 1 + O3,
    U3 = 0.01,
    fz = 0 - U3,
    hz = 0 + U3;
function Us(r) {
    return r.max - r.min;
}
function dz(r, e, t) {
    return Math.abs(r - e) <= t;
}
function Pb(r, e, t, n = 0.5) {
    (r.origin = n),
        (r.originPoint = Pi(e.min, e.max, r.origin)),
        (r.scale = Us(t) / Us(e)),
        (r.translate = Pi(t.min, t.max, r.origin) - r.originPoint),
        ((r.scale >= uz && r.scale <= cz) || isNaN(r.scale)) && (r.scale = 1),
        ((r.translate >= fz && r.translate <= hz) || isNaN(r.translate)) &&
            (r.translate = 0);
}
function Pg(r, e, t, n) {
    Pb(r.x, e.x, t.x, n ? n.originX : void 0),
        Pb(r.y, e.y, t.y, n ? n.originY : void 0);
}
function Lb(r, e, t) {
    (r.min = t.min + e.min), (r.max = r.min + Us(e));
}
function pz(r, e, t) {
    Lb(r.x, e.x, t.x), Lb(r.y, e.y, t.y);
}
function Ib(r, e, t) {
    (r.min = e.min - t.min), (r.max = r.min + Us(e));
}
function Lg(r, e, t) {
    Ib(r.x, e.x, t.x), Ib(r.y, e.y, t.y);
}
const Db = () => ({ translate: 0, scale: 1, origin: 0, originPoint: 0 }),
    tp = () => ({ x: Db(), y: Db() }),
    Ob = () => ({ min: 0, max: 0 }),
    Zi = () => ({ x: Ob(), y: Ob() });
function Zo(r) {
    return [r('x'), r('y')];
}
function iS(r) {
    return r === void 0 || r === 1;
}
function eM({ scale: r, scaleX: e, scaleY: t }) {
    return !iS(r) || !iS(e) || !iS(t);
}
function Hf(r) {
    return (
        eM(r) ||
        k3(r) ||
        r.z ||
        r.rotate ||
        r.rotateX ||
        r.rotateY ||
        r.skewX ||
        r.skewY
    );
}
function k3(r) {
    return Ub(r.x) || Ub(r.y);
}
function Ub(r) {
    return r && r !== '0%';
}
function b_(r, e, t) {
    const n = r - t,
        i = e * n;
    return t + i;
}
function kb(r, e, t, n, i) {
    return i !== void 0 && (r = b_(r, i, n)), b_(r, t, n) + e;
}
function tM(r, e = 0, t = 1, n, i) {
    (r.min = kb(r.min, e, t, n, i)), (r.max = kb(r.max, e, t, n, i));
}
function N3(r, { x: e, y: t }) {
    tM(r.x, e.translate, e.scale, e.originPoint),
        tM(r.y, t.translate, t.scale, t.originPoint);
}
const Nb = 0.999999999999,
    Fb = 1.0000000000001;
function mz(r, e, t, n = !1) {
    const i = t.length;
    if (!i) return;
    e.x = e.y = 1;
    let s, o;
    for (let a = 0; a < i; a++) {
        (s = t[a]), (o = s.projectionDelta);
        const { visualElement: l } = s.options;
        (l && l.props.style && l.props.style.display === 'contents') ||
            (n &&
                s.options.layoutScroll &&
                s.scroll &&
                s !== s.root &&
                ip(r, { x: -s.scroll.offset.x, y: -s.scroll.offset.y }),
            o && ((e.x *= o.x.scale), (e.y *= o.y.scale), N3(r, o)),
            n && Hf(s.latestValues) && ip(r, s.latestValues));
    }
    e.x < Fb && e.x > Nb && (e.x = 1), e.y < Fb && e.y > Nb && (e.y = 1);
}
function np(r, e) {
    (r.min = r.min + e), (r.max = r.max + e);
}
function Bb(r, e, t, n, i = 0.5) {
    const s = Pi(r.min, r.max, i);
    tM(r, e, t, s, n);
}
function ip(r, e) {
    Bb(r.x, e.x, e.scaleX, e.scale, e.originX),
        Bb(r.y, e.y, e.scaleY, e.scale, e.originY);
}
function F3(r, e) {
    return D3(lz(r.getBoundingClientRect(), e));
}
function gz(r, e, t) {
    const n = F3(r, t),
        { scroll: i } = e;
    return i && (np(n.x, i.offset.x), np(n.y, i.offset.y)), n;
}
const B3 = ({ current: r }) => (r ? r.ownerDocument.defaultView : null),
    zb = (r, e) => Math.abs(r - e);
function vz(r, e) {
    const t = zb(r.x, e.x),
        n = zb(r.y, e.y);
    return Math.sqrt(t ** 2 + n ** 2);
}
class z3 {
    constructor(
        e,
        t,
        {
            transformPagePoint: n,
            contextWindow: i,
            dragSnapToOrigin: s = !1,
        } = {}
    ) {
        if (
            ((this.startEvent = null),
            (this.lastMoveEvent = null),
            (this.lastMoveEventInfo = null),
            (this.handlers = {}),
            (this.contextWindow = window),
            (this.updatePoint = () => {
                if (!(this.lastMoveEvent && this.lastMoveEventInfo)) return;
                const d = sS(this.lastMoveEventInfo, this.history),
                    m = this.startEvent !== null,
                    v = vz(d.offset, { x: 0, y: 0 }) >= 3;
                if (!m && !v) return;
                const { point: _ } = d,
                    { timestamp: S } = Kr;
                this.history.push({ ..._, timestamp: S });
                const { onStart: w, onMove: x } = this.handlers;
                m ||
                    (w && w(this.lastMoveEvent, d),
                    (this.startEvent = this.lastMoveEvent)),
                    x && x(this.lastMoveEvent, d);
            }),
            (this.handlePointerMove = (d, m) => {
                (this.lastMoveEvent = d),
                    (this.lastMoveEventInfo = rS(m, this.transformPagePoint)),
                    Di.update(this.updatePoint, !0);
            }),
            (this.handlePointerUp = (d, m) => {
                this.end();
                const {
                    onEnd: v,
                    onSessionEnd: _,
                    resumeAnimation: S,
                } = this.handlers;
                if (
                    (this.dragSnapToOrigin && S && S(),
                    !(this.lastMoveEvent && this.lastMoveEventInfo))
                )
                    return;
                const w = sS(
                    d.type === 'pointercancel'
                        ? this.lastMoveEventInfo
                        : rS(m, this.transformPagePoint),
                    this.history
                );
                this.startEvent && v && v(d, w), _ && _(d, w);
            }),
            !RE(e))
        )
            return;
        (this.dragSnapToOrigin = s),
            (this.handlers = t),
            (this.transformPagePoint = n),
            (this.contextWindow = i || window);
        const o = B0(e),
            a = rS(o, this.transformPagePoint),
            { point: l } = a,
            { timestamp: u } = Kr;
        this.history = [{ ...l, timestamp: u }];
        const { onSessionStart: f } = t;
        f && f(e, sS(a, this.history)),
            (this.removeListeners = k0(
                Rg(this.contextWindow, 'pointermove', this.handlePointerMove),
                Rg(this.contextWindow, 'pointerup', this.handlePointerUp),
                Rg(this.contextWindow, 'pointercancel', this.handlePointerUp)
            ));
    }
    updateHandlers(e) {
        this.handlers = e;
    }
    end() {
        this.removeListeners && this.removeListeners(), bc(this.updatePoint);
    }
}
function rS(r, e) {
    return e ? { point: e(r.point) } : r;
}
function Vb(r, e) {
    return { x: r.x - e.x, y: r.y - e.y };
}
function sS({ point: r }, e) {
    return {
        point: r,
        delta: Vb(r, V3(e)),
        offset: Vb(r, yz(e)),
        velocity: _z(e, 0.1),
    };
}
function yz(r) {
    return r[0];
}
function V3(r) {
    return r[r.length - 1];
}
function _z(r, e) {
    if (r.length < 2) return { x: 0, y: 0 };
    let t = r.length - 1,
        n = null;
    const i = V3(r);
    for (; t >= 0 && ((n = r[t]), !(i.timestamp - n.timestamp > wl(e))); ) t--;
    if (!n) return { x: 0, y: 0 };
    const s = Ml(i.timestamp - n.timestamp);
    if (s === 0) return { x: 0, y: 0 };
    const o = { x: (i.x - n.x) / s, y: (i.y - n.y) / s };
    return o.x === 1 / 0 && (o.x = 0), o.y === 1 / 0 && (o.y = 0), o;
}
function xz(r, { min: e, max: t }, n) {
    return (
        e !== void 0 && r < e
            ? (r = n ? Pi(e, r, n.min) : Math.max(r, e))
            : t !== void 0 &&
              r > t &&
              (r = n ? Pi(t, r, n.max) : Math.min(r, t)),
        r
    );
}
function Hb(r, e, t) {
    return {
        min: e !== void 0 ? r.min + e : void 0,
        max: t !== void 0 ? r.max + t - (r.max - r.min) : void 0,
    };
}
function Sz(r, { top: e, left: t, bottom: n, right: i }) {
    return { x: Hb(r.x, t, i), y: Hb(r.y, e, n) };
}
function Gb(r, e) {
    let t = e.min - r.min,
        n = e.max - r.max;
    return (
        e.max - e.min < r.max - r.min && ([t, n] = [n, t]), { min: t, max: n }
    );
}
function wz(r, e) {
    return { x: Gb(r.x, e.x), y: Gb(r.y, e.y) };
}
function Mz(r, e) {
    let t = 0.5;
    const n = Us(r),
        i = Us(e);
    return (
        i > n
            ? (t = $g(e.min, e.max - n, r.min))
            : n > i && (t = $g(r.min, r.max - i, e.min)),
        Su(0, 1, t)
    );
}
function Ez(r, e) {
    const t = {};
    return (
        e.min !== void 0 && (t.min = e.min - r.min),
        e.max !== void 0 && (t.max = e.max - r.min),
        t
    );
}
const nM = 0.35;
function Tz(r = nM) {
    return (
        r === !1 ? (r = 0) : r === !0 && (r = nM),
        { x: Wb(r, 'left', 'right'), y: Wb(r, 'top', 'bottom') }
    );
}
function Wb(r, e, t) {
    return { min: jb(r, e), max: jb(r, t) };
}
function jb(r, e) {
    return typeof r == 'number' ? r : r[e] || 0;
}
const Az = new WeakMap();
class bz {
    constructor(e) {
        (this.openDragLock = null),
            (this.isDragging = !1),
            (this.currentDirection = null),
            (this.originPoint = { x: 0, y: 0 }),
            (this.constraints = !1),
            (this.hasMutatedConstraints = !1),
            (this.elastic = Zi()),
            (this.visualElement = e);
    }
    start(e, { snapToCursor: t = !1 } = {}) {
        const { presenceContext: n } = this.visualElement;
        if (n && n.isPresent === !1) return;
        const i = (f) => {
                const { dragSnapToOrigin: d } = this.getProps();
                d ? this.pauseAnimation() : this.stopAnimation(),
                    t && this.snapToCursor(B0(f).point);
            },
            s = (f, d) => {
                const {
                    drag: m,
                    dragPropagation: v,
                    onDragStart: _,
                } = this.getProps();
                if (
                    m &&
                    !v &&
                    (this.openDragLock && this.openDragLock(),
                    (this.openDragLock = V4(m)),
                    !this.openDragLock)
                )
                    return;
                (this.isDragging = !0),
                    (this.currentDirection = null),
                    this.resolveConstraints(),
                    this.visualElement.projection &&
                        ((this.visualElement.projection.isAnimationBlocked =
                            !0),
                        (this.visualElement.projection.target = void 0)),
                    Zo((w) => {
                        let x = this.getAxisMotionValue(w).get() || 0;
                        if (El.test(x)) {
                            const { projection: A } = this.visualElement;
                            if (A && A.layout) {
                                const T = A.layout.layoutBox[w];
                                T && (x = Us(T) * (parseFloat(x) / 100));
                            }
                        }
                        this.originPoint[w] = x;
                    }),
                    _ && Di.postRender(() => _(f, d)),
                    Jw(this.visualElement, 'transform');
                const { animationState: S } = this.visualElement;
                S && S.setActive('whileDrag', !0);
            },
            o = (f, d) => {
                const {
                    dragPropagation: m,
                    dragDirectionLock: v,
                    onDirectionLock: _,
                    onDrag: S,
                } = this.getProps();
                if (!m && !this.openDragLock) return;
                const { offset: w } = d;
                if (v && this.currentDirection === null) {
                    (this.currentDirection = Cz(w)),
                        this.currentDirection !== null &&
                            _ &&
                            _(this.currentDirection);
                    return;
                }
                this.updateAxis('x', d.point, w),
                    this.updateAxis('y', d.point, w),
                    this.visualElement.render(),
                    S && S(f, d);
            },
            a = (f, d) => this.stop(f, d),
            l = () =>
                Zo((f) => {
                    var d;
                    return (
                        this.getAnimationState(f) === 'paused' &&
                        ((d = this.getAxisMotionValue(f).animation) == null
                            ? void 0
                            : d.play())
                    );
                }),
            { dragSnapToOrigin: u } = this.getProps();
        this.panSession = new z3(
            e,
            {
                onSessionStart: i,
                onStart: s,
                onMove: o,
                onSessionEnd: a,
                resumeAnimation: l,
            },
            {
                transformPagePoint: this.visualElement.getTransformPagePoint(),
                dragSnapToOrigin: u,
                contextWindow: B3(this.visualElement),
            }
        );
    }
    stop(e, t) {
        const n = this.isDragging;
        if ((this.cancel(), !n)) return;
        const { velocity: i } = t;
        this.startAnimation(i);
        const { onDragEnd: s } = this.getProps();
        s && Di.postRender(() => s(e, t));
    }
    cancel() {
        this.isDragging = !1;
        const { projection: e, animationState: t } = this.visualElement;
        e && (e.isAnimationBlocked = !1),
            this.panSession && this.panSession.end(),
            (this.panSession = void 0);
        const { dragPropagation: n } = this.getProps();
        !n &&
            this.openDragLock &&
            (this.openDragLock(), (this.openDragLock = null)),
            t && t.setActive('whileDrag', !1);
    }
    updateAxis(e, t, n) {
        const { drag: i } = this.getProps();
        if (!n || !ty(e, i, this.currentDirection)) return;
        const s = this.getAxisMotionValue(e);
        let o = this.originPoint[e] + n[e];
        this.constraints &&
            this.constraints[e] &&
            (o = xz(o, this.constraints[e], this.elastic[e])),
            s.set(o);
    }
    resolveConstraints() {
        var s;
        const { dragConstraints: e, dragElastic: t } = this.getProps(),
            n =
                this.visualElement.projection &&
                !this.visualElement.projection.layout
                    ? this.visualElement.projection.measure(!1)
                    : (s = this.visualElement.projection) == null
                      ? void 0
                      : s.layout,
            i = this.constraints;
        e && ep(e)
            ? this.constraints ||
              (this.constraints = this.resolveRefConstraints())
            : e && n
              ? (this.constraints = Sz(n.layoutBox, e))
              : (this.constraints = !1),
            (this.elastic = Tz(t)),
            i !== this.constraints &&
                n &&
                this.constraints &&
                !this.hasMutatedConstraints &&
                Zo((o) => {
                    this.constraints !== !1 &&
                        this.getAxisMotionValue(o) &&
                        (this.constraints[o] = Ez(
                            n.layoutBox[o],
                            this.constraints[o]
                        ));
                });
    }
    resolveRefConstraints() {
        const { dragConstraints: e, onMeasureDragConstraints: t } =
            this.getProps();
        if (!e || !ep(e)) return !1;
        const n = e.current,
            { projection: i } = this.visualElement;
        if (!i || !i.layout) return !1;
        const s = gz(n, i.root, this.visualElement.getTransformPagePoint());
        let o = wz(i.layout.layoutBox, s);
        if (t) {
            const a = t(az(o));
            (this.hasMutatedConstraints = !!a), a && (o = D3(a));
        }
        return o;
    }
    startAnimation(e) {
        const {
                drag: t,
                dragMomentum: n,
                dragElastic: i,
                dragTransition: s,
                dragSnapToOrigin: o,
                onDragTransitionEnd: a,
            } = this.getProps(),
            l = this.constraints || {},
            u = Zo((f) => {
                if (!ty(f, t, this.currentDirection)) return;
                let d = (l && l[f]) || {};
                o && (d = { min: 0, max: 0 });
                const m = i ? 200 : 1e6,
                    v = i ? 40 : 1e7,
                    _ = {
                        type: 'inertia',
                        velocity: n ? e[f] : 0,
                        bounceStiffness: m,
                        bounceDamping: v,
                        timeConstant: 750,
                        restDelta: 1,
                        restSpeed: 10,
                        ...s,
                        ...d,
                    };
                return this.startAxisValueAnimation(f, _);
            });
        return Promise.all(u).then(a);
    }
    startAxisValueAnimation(e, t) {
        const n = this.getAxisMotionValue(e);
        return (
            Jw(this.visualElement, e),
            n.start(zE(e, n, 0, t, this.visualElement, !1))
        );
    }
    stopAnimation() {
        Zo((e) => this.getAxisMotionValue(e).stop());
    }
    pauseAnimation() {
        Zo((e) => {
            var t;
            return (t = this.getAxisMotionValue(e).animation) == null
                ? void 0
                : t.pause();
        });
    }
    getAnimationState(e) {
        var t;
        return (t = this.getAxisMotionValue(e).animation) == null
            ? void 0
            : t.state;
    }
    getAxisMotionValue(e) {
        const t = `_drag${e.toUpperCase()}`,
            n = this.visualElement.getProps(),
            i = n[t];
        return (
            i ||
            this.visualElement.getValue(
                e,
                (n.initial ? n.initial[e] : void 0) || 0
            )
        );
    }
    snapToCursor(e) {
        Zo((t) => {
            const { drag: n } = this.getProps();
            if (!ty(t, n, this.currentDirection)) return;
            const { projection: i } = this.visualElement,
                s = this.getAxisMotionValue(t);
            if (i && i.layout) {
                const { min: o, max: a } = i.layout.layoutBox[t];
                s.set(e[t] - Pi(o, a, 0.5));
            }
        });
    }
    scalePositionWithinConstraints() {
        if (!this.visualElement.current) return;
        const { drag: e, dragConstraints: t } = this.getProps(),
            { projection: n } = this.visualElement;
        if (!ep(t) || !n || !this.constraints) return;
        this.stopAnimation();
        const i = { x: 0, y: 0 };
        Zo((o) => {
            const a = this.getAxisMotionValue(o);
            if (a && this.constraints !== !1) {
                const l = a.get();
                i[o] = Mz({ min: l, max: l }, this.constraints[o]);
            }
        });
        const { transformTemplate: s } = this.visualElement.getProps();
        (this.visualElement.current.style.transform = s ? s({}, '') : 'none'),
            n.root && n.root.updateScroll(),
            n.updateLayout(),
            this.resolveConstraints(),
            Zo((o) => {
                if (!ty(o, e, null)) return;
                const a = this.getAxisMotionValue(o),
                    { min: l, max: u } = this.constraints[o];
                a.set(Pi(l, u, i[o]));
            });
    }
    addListeners() {
        if (!this.visualElement.current) return;
        Az.set(this.visualElement, this);
        const e = this.visualElement.current,
            t = Rg(e, 'pointerdown', (l) => {
                const { drag: u, dragListener: f = !0 } = this.getProps();
                u && f && this.start(l);
            }),
            n = () => {
                const { dragConstraints: l } = this.getProps();
                ep(l) &&
                    l.current &&
                    (this.constraints = this.resolveRefConstraints());
            },
            { projection: i } = this.visualElement,
            s = i.addEventListener('measure', n);
        i && !i.layout && (i.root && i.root.updateScroll(), i.updateLayout()),
            Di.read(n);
        const o = i0(window, 'resize', () =>
                this.scalePositionWithinConstraints()
            ),
            a = i.addEventListener(
                'didUpdate',
                ({ delta: l, hasLayoutChanged: u }) => {
                    this.isDragging &&
                        u &&
                        (Zo((f) => {
                            const d = this.getAxisMotionValue(f);
                            d &&
                                ((this.originPoint[f] += l[f].translate),
                                d.set(d.get() + l[f].translate));
                        }),
                        this.visualElement.render());
                }
            );
        return () => {
            o(), t(), s(), a && a();
        };
    }
    getProps() {
        const e = this.visualElement.getProps(),
            {
                drag: t = !1,
                dragDirectionLock: n = !1,
                dragPropagation: i = !1,
                dragConstraints: s = !1,
                dragElastic: o = nM,
                dragMomentum: a = !0,
            } = e;
        return {
            ...e,
            drag: t,
            dragDirectionLock: n,
            dragPropagation: i,
            dragConstraints: s,
            dragElastic: o,
            dragMomentum: a,
        };
    }
}
function ty(r, e, t) {
    return (e === !0 || e === r) && (t === null || t === r);
}
function Cz(r, e = 10) {
    let t = null;
    return Math.abs(r.y) > e ? (t = 'y') : Math.abs(r.x) > e && (t = 'x'), t;
}
class Rz extends kc {
    constructor(e) {
        super(e),
            (this.removeGroupControls = ta),
            (this.removeListeners = ta),
            (this.controls = new bz(e));
    }
    mount() {
        const { dragControls: e } = this.node.getProps();
        e && (this.removeGroupControls = e.subscribe(this.controls)),
            (this.removeListeners = this.controls.addListeners() || ta);
    }
    unmount() {
        this.removeGroupControls(), this.removeListeners();
    }
}
const Xb = (r) => (e, t) => {
    r && Di.postRender(() => r(e, t));
};
class Pz extends kc {
    constructor() {
        super(...arguments), (this.removePointerDownListener = ta);
    }
    onPointerDown(e) {
        this.session = new z3(e, this.createPanHandlers(), {
            transformPagePoint: this.node.getTransformPagePoint(),
            contextWindow: B3(this.node),
        });
    }
    createPanHandlers() {
        const {
            onPanSessionStart: e,
            onPanStart: t,
            onPan: n,
            onPanEnd: i,
        } = this.node.getProps();
        return {
            onSessionStart: Xb(e),
            onStart: Xb(t),
            onMove: n,
            onEnd: (s, o) => {
                delete this.session, i && Di.postRender(() => i(s, o));
            },
        };
    }
    mount() {
        this.removePointerDownListener = Rg(
            this.node.current,
            'pointerdown',
            (e) => this.onPointerDown(e)
        );
    }
    update() {
        this.session && this.session.updateHandlers(this.createPanHandlers());
    }
    unmount() {
        this.removePointerDownListener(), this.session && this.session.end();
    }
}
const h_ = { hasAnimatedSinceResize: !0, hasEverUpdated: !1 };
function Yb(r, e) {
    return e.max === e.min ? 0 : (r / (e.max - e.min)) * 100;
}
const Vm = {
        correct: (r, e) => {
            if (!e.target) return r;
            if (typeof r == 'string')
                if (rn.test(r)) r = parseFloat(r);
                else return r;
            const t = Yb(r, e.target.x),
                n = Yb(r, e.target.y);
            return `${t}% ${n}%`;
        },
    },
    Lz = {
        correct: (r, { treeScale: e, projectionDelta: t }) => {
            const n = r,
                i = Cc.parse(r);
            if (i.length > 5) return n;
            const s = Cc.createTransformer(r),
                o = typeof i[0] != 'number' ? 1 : 0,
                a = t.x.scale * e.x,
                l = t.y.scale * e.y;
            (i[0 + o] /= a), (i[1 + o] /= l);
            const u = Pi(a, l, 0.5);
            return (
                typeof i[2 + o] == 'number' && (i[2 + o] /= u),
                typeof i[3 + o] == 'number' && (i[3 + o] /= u),
                s(i)
            );
        },
    };
class Iz extends Y.Component {
    componentDidMount() {
        const {
                visualElement: e,
                layoutGroup: t,
                switchLayoutGroup: n,
                layoutId: i,
            } = this.props,
            { projection: s } = e;
        gB(Dz),
            s &&
                (t.group && t.group.add(s),
                n && n.register && i && n.register(s),
                s.root.didUpdate(),
                s.addEventListener('animationComplete', () => {
                    this.safeToRemove();
                }),
                s.setOptions({
                    ...s.options,
                    onExitComplete: () => this.safeToRemove(),
                })),
            (h_.hasEverUpdated = !0);
    }
    getSnapshotBeforeUpdate(e) {
        const {
                layoutDependency: t,
                visualElement: n,
                drag: i,
                isPresent: s,
            } = this.props,
            { projection: o } = n;
        return (
            o &&
                ((o.isPresent = s),
                i ||
                e.layoutDependency !== t ||
                t === void 0 ||
                e.isPresent !== s
                    ? o.willUpdate()
                    : this.safeToRemove(),
                e.isPresent !== s &&
                    (s
                        ? o.promote()
                        : o.relegate() ||
                          Di.postRender(() => {
                              const a = o.getStack();
                              (!a || !a.members.length) && this.safeToRemove();
                          }))),
            null
        );
    }
    componentDidUpdate() {
        const { projection: e } = this.props.visualElement;
        e &&
            (e.root.didUpdate(),
            CE.postRender(() => {
                !e.currentAnimation && e.isLead() && this.safeToRemove();
            }));
    }
    componentWillUnmount() {
        const {
                visualElement: e,
                layoutGroup: t,
                switchLayoutGroup: n,
            } = this.props,
            { projection: i } = e;
        i &&
            (i.scheduleCheckAfterUnmount(),
            t && t.group && t.group.remove(i),
            n && n.deregister && n.deregister(i));
    }
    safeToRemove() {
        const { safeToRemove: e } = this.props;
        e && e();
    }
    render() {
        return null;
    }
}
function H3(r) {
    const [e, t] = m3(),
        n = Y.useContext(sE);
    return we.jsx(Iz, {
        ...r,
        layoutGroup: n,
        switchLayoutGroup: Y.useContext(x3),
        isPresent: e,
        safeToRemove: t,
    });
}
const Dz = {
    borderRadius: {
        ...Vm,
        applyTo: [
            'borderTopLeftRadius',
            'borderTopRightRadius',
            'borderBottomLeftRadius',
            'borderBottomRightRadius',
        ],
    },
    borderTopLeftRadius: Vm,
    borderTopRightRadius: Vm,
    borderBottomLeftRadius: Vm,
    borderBottomRightRadius: Vm,
    boxShadow: Lz,
};
function Oz(r, e, t) {
    const n = fs(r) ? r : Sp(r);
    return n.start(zE('', n, e, t)), n.animation;
}
const Uz = (r, e) => r.depth - e.depth;
class kz {
    constructor() {
        (this.children = []), (this.isDirty = !1);
    }
    add(e) {
        lE(this.children, e), (this.isDirty = !0);
    }
    remove(e) {
        uE(this.children, e), (this.isDirty = !0);
    }
    forEach(e) {
        this.isDirty && this.children.sort(Uz),
            (this.isDirty = !1),
            this.children.forEach(e);
    }
}
function Nz(r, e) {
    const t = Qs.now(),
        n = ({ timestamp: i }) => {
            const s = i - t;
            s >= e && (bc(n), r(s - e));
        };
    return Di.setup(n, !0), () => bc(n);
}
const G3 = ['TopLeft', 'TopRight', 'BottomLeft', 'BottomRight'],
    Fz = G3.length,
    qb = (r) => (typeof r == 'string' ? parseFloat(r) : r),
    Kb = (r) => typeof r == 'number' || rn.test(r);
function Bz(r, e, t, n, i, s) {
    i
        ? ((r.opacity = Pi(0, t.opacity ?? 1, zz(n))),
          (r.opacityExit = Pi(e.opacity ?? 1, 0, Vz(n))))
        : s && (r.opacity = Pi(e.opacity ?? 1, t.opacity ?? 1, n));
    for (let o = 0; o < Fz; o++) {
        const a = `border${G3[o]}Radius`;
        let l = Zb(e, a),
            u = Zb(t, a);
        if (l === void 0 && u === void 0) continue;
        l || (l = 0),
            u || (u = 0),
            l === 0 || u === 0 || Kb(l) === Kb(u)
                ? ((r[a] = Math.max(Pi(qb(l), qb(u), n), 0)),
                  (El.test(u) || El.test(l)) && (r[a] += '%'))
                : (r[a] = u);
    }
    (e.rotate || t.rotate) && (r.rotate = Pi(e.rotate || 0, t.rotate || 0, n));
}
function Zb(r, e) {
    return r[e] !== void 0 ? r[e] : r.borderRadius;
}
const zz = W3(0, 0.5, kL),
    Vz = W3(0.5, 0.95, ta);
function W3(r, e, t) {
    return (n) => (n < r ? 0 : n > e ? 1 : t($g(r, e, n)));
}
function $b(r, e) {
    (r.min = e.min), (r.max = e.max);
}
function Xo(r, e) {
    $b(r.x, e.x), $b(r.y, e.y);
}
function Jb(r, e) {
    (r.translate = e.translate),
        (r.scale = e.scale),
        (r.originPoint = e.originPoint),
        (r.origin = e.origin);
}
function Qb(r, e, t, n, i) {
    return (
        (r -= e),
        (r = b_(r, 1 / t, n)),
        i !== void 0 && (r = b_(r, 1 / i, n)),
        r
    );
}
function Hz(r, e = 0, t = 1, n = 0.5, i, s = r, o = r) {
    if (
        (El.test(e) &&
            ((e = parseFloat(e)), (e = Pi(o.min, o.max, e / 100) - o.min)),
        typeof e != 'number')
    )
        return;
    let a = Pi(s.min, s.max, n);
    r === s && (a -= e),
        (r.min = Qb(r.min, e, t, a, i)),
        (r.max = Qb(r.max, e, t, a, i));
}
function eC(r, e, [t, n, i], s, o) {
    Hz(r, e[t], e[n], e[i], e.scale, s, o);
}
const Gz = ['x', 'scaleX', 'originX'],
    Wz = ['y', 'scaleY', 'originY'];
function tC(r, e, t, n) {
    eC(r.x, e, Gz, t ? t.x : void 0, n ? n.x : void 0),
        eC(r.y, e, Wz, t ? t.y : void 0, n ? n.y : void 0);
}
function nC(r) {
    return r.translate === 0 && r.scale === 1;
}
function j3(r) {
    return nC(r.x) && nC(r.y);
}
function iC(r, e) {
    return r.min === e.min && r.max === e.max;
}
function jz(r, e) {
    return iC(r.x, e.x) && iC(r.y, e.y);
}
function rC(r, e) {
    return (
        Math.round(r.min) === Math.round(e.min) &&
        Math.round(r.max) === Math.round(e.max)
    );
}
function X3(r, e) {
    return rC(r.x, e.x) && rC(r.y, e.y);
}
function sC(r) {
    return Us(r.x) / Us(r.y);
}
function oC(r, e) {
    return (
        r.translate === e.translate &&
        r.scale === e.scale &&
        r.originPoint === e.originPoint
    );
}
class Xz {
    constructor() {
        this.members = [];
    }
    add(e) {
        lE(this.members, e), e.scheduleRender();
    }
    remove(e) {
        if (
            (uE(this.members, e),
            e === this.prevLead && (this.prevLead = void 0),
            e === this.lead)
        ) {
            const t = this.members[this.members.length - 1];
            t && this.promote(t);
        }
    }
    relegate(e) {
        const t = this.members.findIndex((i) => e === i);
        if (t === 0) return !1;
        let n;
        for (let i = t; i >= 0; i--) {
            const s = this.members[i];
            if (s.isPresent !== !1) {
                n = s;
                break;
            }
        }
        return n ? (this.promote(n), !0) : !1;
    }
    promote(e, t) {
        const n = this.lead;
        if (e !== n && ((this.prevLead = n), (this.lead = e), e.show(), n)) {
            n.instance && n.scheduleRender(),
                e.scheduleRender(),
                (e.resumeFrom = n),
                t && (e.resumeFrom.preserveOpacity = !0),
                n.snapshot &&
                    ((e.snapshot = n.snapshot),
                    (e.snapshot.latestValues =
                        n.animationValues || n.latestValues)),
                e.root && e.root.isUpdating && (e.isLayoutDirty = !0);
            const { crossfade: i } = e.options;
            i === !1 && n.hide();
        }
    }
    exitAnimationComplete() {
        this.members.forEach((e) => {
            const { options: t, resumingFrom: n } = e;
            t.onExitComplete && t.onExitComplete(),
                n && n.options.onExitComplete && n.options.onExitComplete();
        });
    }
    scheduleRender() {
        this.members.forEach((e) => {
            e.instance && e.scheduleRender(!1);
        });
    }
    removeLeadSnapshot() {
        this.lead && this.lead.snapshot && (this.lead.snapshot = void 0);
    }
}
function Yz(r, e, t) {
    let n = '';
    const i = r.x.translate / e.x,
        s = r.y.translate / e.y,
        o = (t == null ? void 0 : t.z) || 0;
    if (
        ((i || s || o) && (n = `translate3d(${i}px, ${s}px, ${o}px) `),
        (e.x !== 1 || e.y !== 1) && (n += `scale(${1 / e.x}, ${1 / e.y}) `),
        t)
    ) {
        const {
            transformPerspective: u,
            rotate: f,
            rotateX: d,
            rotateY: m,
            skewX: v,
            skewY: _,
        } = t;
        u && (n = `perspective(${u}px) ${n}`),
            f && (n += `rotate(${f}deg) `),
            d && (n += `rotateX(${d}deg) `),
            m && (n += `rotateY(${m}deg) `),
            v && (n += `skewX(${v}deg) `),
            _ && (n += `skewY(${_}deg) `);
    }
    const a = r.x.scale * e.x,
        l = r.y.scale * e.y;
    return (a !== 1 || l !== 1) && (n += `scale(${a}, ${l})`), n || 'none';
}
const oS = ['', 'X', 'Y', 'Z'],
    qz = { visibility: 'hidden' },
    Kz = 1e3;
let Zz = 0;
function aS(r, e, t, n) {
    const { latestValues: i } = e;
    i[r] && ((t[r] = i[r]), e.setStaticValue(r, 0), n && (n[r] = 0));
}
function Y3(r) {
    if (((r.hasCheckedOptimisedAppear = !0), r.root === r)) return;
    const { visualElement: e } = r.options;
    if (!e) return;
    const t = R3(e);
    if (window.MotionHasOptimisedAnimation(t, 'transform')) {
        const { layout: i, layoutId: s } = r.options;
        window.MotionCancelOptimisedAnimation(t, 'transform', Di, !(i || s));
    }
    const { parent: n } = r;
    n && !n.hasCheckedOptimisedAppear && Y3(n);
}
function q3({
    attachResizeListener: r,
    defaultParent: e,
    measureScroll: t,
    checkIsScrollRoot: n,
    resetTransform: i,
}) {
    return class {
        constructor(o = {}, a = e == null ? void 0 : e()) {
            (this.id = Zz++),
                (this.animationId = 0),
                (this.children = new Set()),
                (this.options = {}),
                (this.isTreeAnimating = !1),
                (this.isAnimationBlocked = !1),
                (this.isLayoutDirty = !1),
                (this.isProjectionDirty = !1),
                (this.isSharedProjectionDirty = !1),
                (this.isTransformDirty = !1),
                (this.updateManuallyBlocked = !1),
                (this.updateBlockedByResize = !1),
                (this.isUpdating = !1),
                (this.isSVG = !1),
                (this.needsReset = !1),
                (this.shouldResetTransform = !1),
                (this.hasCheckedOptimisedAppear = !1),
                (this.treeScale = { x: 1, y: 1 }),
                (this.eventHandlers = new Map()),
                (this.hasTreeAnimated = !1),
                (this.updateScheduled = !1),
                (this.scheduleUpdate = () => this.update()),
                (this.projectionUpdateScheduled = !1),
                (this.checkUpdateFailed = () => {
                    this.isUpdating &&
                        ((this.isUpdating = !1), this.clearAllSnapshots());
                }),
                (this.updateProjection = () => {
                    (this.projectionUpdateScheduled = !1),
                        this.nodes.forEach(Qz),
                        this.nodes.forEach(r5),
                        this.nodes.forEach(s5),
                        this.nodes.forEach(e5);
                }),
                (this.resolvedRelativeTargetAt = 0),
                (this.hasProjected = !1),
                (this.isVisible = !0),
                (this.animationProgress = 0),
                (this.sharedNodes = new Map()),
                (this.latestValues = o),
                (this.root = a ? a.root || a : this),
                (this.path = a ? [...a.path, a] : []),
                (this.parent = a),
                (this.depth = a ? a.depth + 1 : 0);
            for (let l = 0; l < this.path.length; l++)
                this.path[l].shouldResetTransform = !0;
            this.root === this && (this.nodes = new kz());
        }
        addEventListener(o, a) {
            return (
                this.eventHandlers.has(o) ||
                    this.eventHandlers.set(o, new hE()),
                this.eventHandlers.get(o).add(a)
            );
        }
        notifyListeners(o, ...a) {
            const l = this.eventHandlers.get(o);
            l && l.notify(...a);
        }
        hasListeners(o) {
            return this.eventHandlers.has(o);
        }
        mount(o) {
            if (this.instance) return;
            (this.isSVG = p3(o) && !Y4(o)), (this.instance = o);
            const { layoutId: a, layout: l, visualElement: u } = this.options;
            if (
                (u && !u.current && u.mount(o),
                this.root.nodes.add(this),
                this.parent && this.parent.children.add(this),
                this.root.hasTreeAnimated &&
                    (l || a) &&
                    (this.isLayoutDirty = !0),
                r)
            ) {
                let f;
                const d = () => (this.root.updateBlockedByResize = !1);
                r(o, () => {
                    (this.root.updateBlockedByResize = !0),
                        f && f(),
                        (f = Nz(d, 250)),
                        h_.hasAnimatedSinceResize &&
                            ((h_.hasAnimatedSinceResize = !1),
                            this.nodes.forEach(lC));
                });
            }
            a && this.root.registerSharedNode(a, this),
                this.options.animate !== !1 &&
                    u &&
                    (a || l) &&
                    this.addEventListener(
                        'didUpdate',
                        ({
                            delta: f,
                            hasLayoutChanged: d,
                            hasRelativeLayoutChanged: m,
                            layout: v,
                        }) => {
                            if (this.isTreeAnimationBlocked()) {
                                (this.target = void 0),
                                    (this.relativeTarget = void 0);
                                return;
                            }
                            const _ =
                                    this.options.transition ||
                                    u.getDefaultTransition() ||
                                    c5,
                                {
                                    onLayoutAnimationStart: S,
                                    onLayoutAnimationComplete: w,
                                } = u.getProps(),
                                x =
                                    !this.targetLayout ||
                                    !X3(this.targetLayout, v),
                                A = !d && m;
                            if (
                                this.options.layoutRoot ||
                                this.resumeFrom ||
                                A ||
                                (d && (x || !this.currentAnimation))
                            ) {
                                this.resumeFrom &&
                                    ((this.resumingFrom = this.resumeFrom),
                                    (this.resumingFrom.resumingFrom = void 0)),
                                    this.setAnimationOrigin(f, A);
                                const T = {
                                    ...AE(_, 'layout'),
                                    onPlay: S,
                                    onComplete: w,
                                };
                                (u.shouldReduceMotion ||
                                    this.options.layoutRoot) &&
                                    ((T.delay = 0), (T.type = !1)),
                                    this.startAnimation(T);
                            } else
                                d || lC(this),
                                    this.isLead() &&
                                        this.options.onExitComplete &&
                                        this.options.onExitComplete();
                            this.targetLayout = v;
                        }
                    );
        }
        unmount() {
            this.options.layoutId && this.willUpdate(),
                this.root.nodes.remove(this);
            const o = this.getStack();
            o && o.remove(this),
                this.parent && this.parent.children.delete(this),
                (this.instance = void 0),
                this.eventHandlers.clear(),
                bc(this.updateProjection);
        }
        blockUpdate() {
            this.updateManuallyBlocked = !0;
        }
        unblockUpdate() {
            this.updateManuallyBlocked = !1;
        }
        isUpdateBlocked() {
            return this.updateManuallyBlocked || this.updateBlockedByResize;
        }
        isTreeAnimationBlocked() {
            return (
                this.isAnimationBlocked ||
                (this.parent && this.parent.isTreeAnimationBlocked()) ||
                !1
            );
        }
        startUpdate() {
            this.isUpdateBlocked() ||
                ((this.isUpdating = !0),
                this.nodes && this.nodes.forEach(o5),
                this.animationId++);
        }
        getTransformTemplate() {
            const { visualElement: o } = this.options;
            return o && o.getProps().transformTemplate;
        }
        willUpdate(o = !0) {
            if (
                ((this.root.hasTreeAnimated = !0), this.root.isUpdateBlocked())
            ) {
                this.options.onExitComplete && this.options.onExitComplete();
                return;
            }
            if (
                (window.MotionCancelOptimisedAnimation &&
                    !this.hasCheckedOptimisedAppear &&
                    Y3(this),
                !this.root.isUpdating && this.root.startUpdate(),
                this.isLayoutDirty)
            )
                return;
            this.isLayoutDirty = !0;
            for (let f = 0; f < this.path.length; f++) {
                const d = this.path[f];
                (d.shouldResetTransform = !0),
                    d.updateScroll('snapshot'),
                    d.options.layoutRoot && d.willUpdate(!1);
            }
            const { layoutId: a, layout: l } = this.options;
            if (a === void 0 && !l) return;
            const u = this.getTransformTemplate();
            (this.prevTransformTemplateValue = u
                ? u(this.latestValues, '')
                : void 0),
                this.updateSnapshot(),
                o && this.notifyListeners('willUpdate');
        }
        update() {
            if (((this.updateScheduled = !1), this.isUpdateBlocked())) {
                this.unblockUpdate(),
                    this.clearAllSnapshots(),
                    this.nodes.forEach(aC);
                return;
            }
            this.isUpdating || this.nodes.forEach(n5),
                (this.isUpdating = !1),
                this.nodes.forEach(i5),
                this.nodes.forEach($z),
                this.nodes.forEach(Jz),
                this.clearAllSnapshots();
            const a = Qs.now();
            (Kr.delta = Su(0, 1e3 / 60, a - Kr.timestamp)),
                (Kr.timestamp = a),
                (Kr.isProcessing = !0),
                J1.update.process(Kr),
                J1.preRender.process(Kr),
                J1.render.process(Kr),
                (Kr.isProcessing = !1);
        }
        didUpdate() {
            this.updateScheduled ||
                ((this.updateScheduled = !0), CE.read(this.scheduleUpdate));
        }
        clearAllSnapshots() {
            this.nodes.forEach(t5), this.sharedNodes.forEach(a5);
        }
        scheduleUpdateProjection() {
            this.projectionUpdateScheduled ||
                ((this.projectionUpdateScheduled = !0),
                Di.preRender(this.updateProjection, !1, !0));
        }
        scheduleCheckAfterUnmount() {
            Di.postRender(() => {
                this.isLayoutDirty
                    ? this.root.didUpdate()
                    : this.root.checkUpdateFailed();
            });
        }
        updateSnapshot() {
            this.snapshot ||
                !this.instance ||
                ((this.snapshot = this.measure()),
                this.snapshot &&
                    !Us(this.snapshot.measuredBox.x) &&
                    !Us(this.snapshot.measuredBox.y) &&
                    (this.snapshot = void 0));
        }
        updateLayout() {
            if (
                !this.instance ||
                (this.updateScroll(),
                !(this.options.alwaysMeasureLayout && this.isLead()) &&
                    !this.isLayoutDirty)
            )
                return;
            if (this.resumeFrom && !this.resumeFrom.instance)
                for (let l = 0; l < this.path.length; l++)
                    this.path[l].updateScroll();
            const o = this.layout;
            (this.layout = this.measure(!1)),
                (this.layoutCorrected = Zi()),
                (this.isLayoutDirty = !1),
                (this.projectionDelta = void 0),
                this.notifyListeners('measure', this.layout.layoutBox);
            const { visualElement: a } = this.options;
            a &&
                a.notify(
                    'LayoutMeasure',
                    this.layout.layoutBox,
                    o ? o.layoutBox : void 0
                );
        }
        updateScroll(o = 'measure') {
            let a = !!(this.options.layoutScroll && this.instance);
            if (
                (this.scroll &&
                    this.scroll.animationId === this.root.animationId &&
                    this.scroll.phase === o &&
                    (a = !1),
                a && this.instance)
            ) {
                const l = n(this.instance);
                this.scroll = {
                    animationId: this.root.animationId,
                    phase: o,
                    isRoot: l,
                    offset: t(this.instance),
                    wasRoot: this.scroll ? this.scroll.isRoot : l,
                };
            }
        }
        resetTransform() {
            if (!i) return;
            const o =
                    this.isLayoutDirty ||
                    this.shouldResetTransform ||
                    this.options.alwaysMeasureLayout,
                a = this.projectionDelta && !j3(this.projectionDelta),
                l = this.getTransformTemplate(),
                u = l ? l(this.latestValues, '') : void 0,
                f = u !== this.prevTransformTemplateValue;
            o &&
                this.instance &&
                (a || Hf(this.latestValues) || f) &&
                (i(this.instance, u),
                (this.shouldResetTransform = !1),
                this.scheduleRender());
        }
        measure(o = !0) {
            const a = this.measurePageBox();
            let l = this.removeElementScroll(a);
            return (
                o && (l = this.removeTransform(l)),
                f5(l),
                {
                    animationId: this.root.animationId,
                    measuredBox: a,
                    layoutBox: l,
                    latestValues: {},
                    source: this.id,
                }
            );
        }
        measurePageBox() {
            var u;
            const { visualElement: o } = this.options;
            if (!o) return Zi();
            const a = o.measureViewportBox();
            if (
                !(
                    ((u = this.scroll) == null ? void 0 : u.wasRoot) ||
                    this.path.some(h5)
                )
            ) {
                const { scroll: f } = this.root;
                f && (np(a.x, f.offset.x), np(a.y, f.offset.y));
            }
            return a;
        }
        removeElementScroll(o) {
            var l;
            const a = Zi();
            if ((Xo(a, o), (l = this.scroll) != null && l.wasRoot)) return a;
            for (let u = 0; u < this.path.length; u++) {
                const f = this.path[u],
                    { scroll: d, options: m } = f;
                f !== this.root &&
                    d &&
                    m.layoutScroll &&
                    (d.wasRoot && Xo(a, o),
                    np(a.x, d.offset.x),
                    np(a.y, d.offset.y));
            }
            return a;
        }
        applyTransform(o, a = !1) {
            const l = Zi();
            Xo(l, o);
            for (let u = 0; u < this.path.length; u++) {
                const f = this.path[u];
                !a &&
                    f.options.layoutScroll &&
                    f.scroll &&
                    f !== f.root &&
                    ip(l, { x: -f.scroll.offset.x, y: -f.scroll.offset.y }),
                    Hf(f.latestValues) && ip(l, f.latestValues);
            }
            return Hf(this.latestValues) && ip(l, this.latestValues), l;
        }
        removeTransform(o) {
            const a = Zi();
            Xo(a, o);
            for (let l = 0; l < this.path.length; l++) {
                const u = this.path[l];
                if (!u.instance || !Hf(u.latestValues)) continue;
                eM(u.latestValues) && u.updateSnapshot();
                const f = Zi(),
                    d = u.measurePageBox();
                Xo(f, d),
                    tC(
                        a,
                        u.latestValues,
                        u.snapshot ? u.snapshot.layoutBox : void 0,
                        f
                    );
            }
            return Hf(this.latestValues) && tC(a, this.latestValues), a;
        }
        setTargetDelta(o) {
            (this.targetDelta = o),
                this.root.scheduleUpdateProjection(),
                (this.isProjectionDirty = !0);
        }
        setOptions(o) {
            this.options = {
                ...this.options,
                ...o,
                crossfade: o.crossfade !== void 0 ? o.crossfade : !0,
            };
        }
        clearMeasurements() {
            (this.scroll = void 0),
                (this.layout = void 0),
                (this.snapshot = void 0),
                (this.prevTransformTemplateValue = void 0),
                (this.targetDelta = void 0),
                (this.target = void 0),
                (this.isLayoutDirty = !1);
        }
        forceRelativeParentToResolveTarget() {
            this.relativeParent &&
                this.relativeParent.resolvedRelativeTargetAt !== Kr.timestamp &&
                this.relativeParent.resolveTargetDelta(!0);
        }
        resolveTargetDelta(o = !1) {
            var m;
            const a = this.getLead();
            this.isProjectionDirty ||
                (this.isProjectionDirty = a.isProjectionDirty),
                this.isTransformDirty ||
                    (this.isTransformDirty = a.isTransformDirty),
                this.isSharedProjectionDirty ||
                    (this.isSharedProjectionDirty = a.isSharedProjectionDirty);
            const l = !!this.resumingFrom || this !== a;
            if (
                !(
                    o ||
                    (l && this.isSharedProjectionDirty) ||
                    this.isProjectionDirty ||
                    ((m = this.parent) != null && m.isProjectionDirty) ||
                    this.attemptToResolveRelativeTarget ||
                    this.root.updateBlockedByResize
                )
            )
                return;
            const { layout: f, layoutId: d } = this.options;
            if (!(!this.layout || !(f || d))) {
                if (
                    ((this.resolvedRelativeTargetAt = Kr.timestamp),
                    !this.targetDelta && !this.relativeTarget)
                ) {
                    const v = this.getClosestProjectingParent();
                    v && v.layout && this.animationProgress !== 1
                        ? ((this.relativeParent = v),
                          this.forceRelativeParentToResolveTarget(),
                          (this.relativeTarget = Zi()),
                          (this.relativeTargetOrigin = Zi()),
                          Lg(
                              this.relativeTargetOrigin,
                              this.layout.layoutBox,
                              v.layout.layoutBox
                          ),
                          Xo(this.relativeTarget, this.relativeTargetOrigin))
                        : (this.relativeParent = this.relativeTarget = void 0);
                }
                if (
                    !(!this.relativeTarget && !this.targetDelta) &&
                    (this.target ||
                        ((this.target = Zi()),
                        (this.targetWithTransforms = Zi())),
                    this.relativeTarget &&
                    this.relativeTargetOrigin &&
                    this.relativeParent &&
                    this.relativeParent.target
                        ? (this.forceRelativeParentToResolveTarget(),
                          pz(
                              this.target,
                              this.relativeTarget,
                              this.relativeParent.target
                          ))
                        : this.targetDelta
                          ? (this.resumingFrom
                                ? (this.target = this.applyTransform(
                                      this.layout.layoutBox
                                  ))
                                : Xo(this.target, this.layout.layoutBox),
                            N3(this.target, this.targetDelta))
                          : Xo(this.target, this.layout.layoutBox),
                    this.attemptToResolveRelativeTarget)
                ) {
                    this.attemptToResolveRelativeTarget = !1;
                    const v = this.getClosestProjectingParent();
                    v &&
                    !!v.resumingFrom == !!this.resumingFrom &&
                    !v.options.layoutScroll &&
                    v.target &&
                    this.animationProgress !== 1
                        ? ((this.relativeParent = v),
                          this.forceRelativeParentToResolveTarget(),
                          (this.relativeTarget = Zi()),
                          (this.relativeTargetOrigin = Zi()),
                          Lg(this.relativeTargetOrigin, this.target, v.target),
                          Xo(this.relativeTarget, this.relativeTargetOrigin))
                        : (this.relativeParent = this.relativeTarget = void 0);
                }
            }
        }
        getClosestProjectingParent() {
            if (
                !(
                    !this.parent ||
                    eM(this.parent.latestValues) ||
                    k3(this.parent.latestValues)
                )
            )
                return this.parent.isProjecting()
                    ? this.parent
                    : this.parent.getClosestProjectingParent();
        }
        isProjecting() {
            return !!(
                (this.relativeTarget ||
                    this.targetDelta ||
                    this.options.layoutRoot) &&
                this.layout
            );
        }
        calcProjection() {
            var _;
            const o = this.getLead(),
                a = !!this.resumingFrom || this !== o;
            let l = !0;
            if (
                ((this.isProjectionDirty ||
                    ((_ = this.parent) != null && _.isProjectionDirty)) &&
                    (l = !1),
                a &&
                    (this.isSharedProjectionDirty || this.isTransformDirty) &&
                    (l = !1),
                this.resolvedRelativeTargetAt === Kr.timestamp && (l = !1),
                l)
            )
                return;
            const { layout: u, layoutId: f } = this.options;
            if (
                ((this.isTreeAnimating = !!(
                    (this.parent && this.parent.isTreeAnimating) ||
                    this.currentAnimation ||
                    this.pendingAnimation
                )),
                this.isTreeAnimating ||
                    (this.targetDelta = this.relativeTarget = void 0),
                !this.layout || !(u || f))
            )
                return;
            Xo(this.layoutCorrected, this.layout.layoutBox);
            const d = this.treeScale.x,
                m = this.treeScale.y;
            mz(this.layoutCorrected, this.treeScale, this.path, a),
                o.layout &&
                    !o.target &&
                    (this.treeScale.x !== 1 || this.treeScale.y !== 1) &&
                    ((o.target = o.layout.layoutBox),
                    (o.targetWithTransforms = Zi()));
            const { target: v } = o;
            if (!v) {
                this.prevProjectionDelta &&
                    (this.createProjectionDeltas(), this.scheduleRender());
                return;
            }
            !this.projectionDelta || !this.prevProjectionDelta
                ? this.createProjectionDeltas()
                : (Jb(this.prevProjectionDelta.x, this.projectionDelta.x),
                  Jb(this.prevProjectionDelta.y, this.projectionDelta.y)),
                Pg(
                    this.projectionDelta,
                    this.layoutCorrected,
                    v,
                    this.latestValues
                ),
                (this.treeScale.x !== d ||
                    this.treeScale.y !== m ||
                    !oC(this.projectionDelta.x, this.prevProjectionDelta.x) ||
                    !oC(this.projectionDelta.y, this.prevProjectionDelta.y)) &&
                    ((this.hasProjected = !0),
                    this.scheduleRender(),
                    this.notifyListeners('projectionUpdate', v));
        }
        hide() {
            this.isVisible = !1;
        }
        show() {
            this.isVisible = !0;
        }
        scheduleRender(o = !0) {
            var a;
            if (
                ((a = this.options.visualElement) == null || a.scheduleRender(),
                o)
            ) {
                const l = this.getStack();
                l && l.scheduleRender();
            }
            this.resumingFrom &&
                !this.resumingFrom.instance &&
                (this.resumingFrom = void 0);
        }
        createProjectionDeltas() {
            (this.prevProjectionDelta = tp()),
                (this.projectionDelta = tp()),
                (this.projectionDeltaWithTransform = tp());
        }
        setAnimationOrigin(o, a = !1) {
            const l = this.snapshot,
                u = l ? l.latestValues : {},
                f = { ...this.latestValues },
                d = tp();
            (!this.relativeParent || !this.relativeParent.options.layoutRoot) &&
                (this.relativeTarget = this.relativeTargetOrigin = void 0),
                (this.attemptToResolveRelativeTarget = !a);
            const m = Zi(),
                v = l ? l.source : void 0,
                _ = this.layout ? this.layout.source : void 0,
                S = v !== _,
                w = this.getStack(),
                x = !w || w.members.length <= 1,
                A = !!(
                    S &&
                    !x &&
                    this.options.crossfade === !0 &&
                    !this.path.some(u5)
                );
            this.animationProgress = 0;
            let T;
            (this.mixTargetDelta = (b) => {
                const P = b / 1e3;
                uC(d.x, o.x, P),
                    uC(d.y, o.y, P),
                    this.setTargetDelta(d),
                    this.relativeTarget &&
                        this.relativeTargetOrigin &&
                        this.layout &&
                        this.relativeParent &&
                        this.relativeParent.layout &&
                        (Lg(
                            m,
                            this.layout.layoutBox,
                            this.relativeParent.layout.layoutBox
                        ),
                        l5(
                            this.relativeTarget,
                            this.relativeTargetOrigin,
                            m,
                            P
                        ),
                        T &&
                            jz(this.relativeTarget, T) &&
                            (this.isProjectionDirty = !1),
                        T || (T = Zi()),
                        Xo(T, this.relativeTarget)),
                    S &&
                        ((this.animationValues = f),
                        Bz(f, u, this.latestValues, P, A, x)),
                    this.root.scheduleUpdateProjection(),
                    this.scheduleRender(),
                    (this.animationProgress = P);
            }),
                this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0);
        }
        startAnimation(o) {
            var a, l, u;
            this.notifyListeners('animationStart'),
                (a = this.currentAnimation) == null || a.stop(!1),
                (u =
                    (l = this.resumingFrom) == null
                        ? void 0
                        : l.currentAnimation) == null || u.stop(!1),
                this.pendingAnimation &&
                    (bc(this.pendingAnimation),
                    (this.pendingAnimation = void 0)),
                (this.pendingAnimation = Di.update(() => {
                    (h_.hasAnimatedSinceResize = !0),
                        this.motionValue || (this.motionValue = Sp(0)),
                        (this.currentAnimation = Oz(
                            this.motionValue,
                            [0, 1e3],
                            {
                                ...o,
                                isSync: !0,
                                onUpdate: (f) => {
                                    this.mixTargetDelta(f),
                                        o.onUpdate && o.onUpdate(f);
                                },
                                onStop: () => {},
                                onComplete: () => {
                                    o.onComplete && o.onComplete(),
                                        this.completeAnimation();
                                },
                            }
                        )),
                        this.resumingFrom &&
                            (this.resumingFrom.currentAnimation =
                                this.currentAnimation),
                        (this.pendingAnimation = void 0);
                }));
        }
        completeAnimation() {
            this.resumingFrom &&
                ((this.resumingFrom.currentAnimation = void 0),
                (this.resumingFrom.preserveOpacity = void 0));
            const o = this.getStack();
            o && o.exitAnimationComplete(),
                (this.resumingFrom =
                    this.currentAnimation =
                    this.animationValues =
                        void 0),
                this.notifyListeners('animationComplete');
        }
        finishAnimation() {
            this.currentAnimation &&
                (this.mixTargetDelta && this.mixTargetDelta(Kz),
                this.currentAnimation.stop(!1)),
                this.completeAnimation();
        }
        applyTransformsToTarget() {
            const o = this.getLead();
            let {
                targetWithTransforms: a,
                target: l,
                layout: u,
                latestValues: f,
            } = o;
            if (!(!a || !l || !u)) {
                if (
                    this !== o &&
                    this.layout &&
                    u &&
                    K3(
                        this.options.animationType,
                        this.layout.layoutBox,
                        u.layoutBox
                    )
                ) {
                    l = this.target || Zi();
                    const d = Us(this.layout.layoutBox.x);
                    (l.x.min = o.target.x.min), (l.x.max = l.x.min + d);
                    const m = Us(this.layout.layoutBox.y);
                    (l.y.min = o.target.y.min), (l.y.max = l.y.min + m);
                }
                Xo(a, l),
                    ip(a, f),
                    Pg(
                        this.projectionDeltaWithTransform,
                        this.layoutCorrected,
                        a,
                        f
                    );
            }
        }
        registerSharedNode(o, a) {
            this.sharedNodes.has(o) || this.sharedNodes.set(o, new Xz()),
                this.sharedNodes.get(o).add(a);
            const u = a.options.initialPromotionConfig;
            a.promote({
                transition: u ? u.transition : void 0,
                preserveFollowOpacity:
                    u && u.shouldPreserveFollowOpacity
                        ? u.shouldPreserveFollowOpacity(a)
                        : void 0,
            });
        }
        isLead() {
            const o = this.getStack();
            return o ? o.lead === this : !0;
        }
        getLead() {
            var a;
            const { layoutId: o } = this.options;
            return o
                ? ((a = this.getStack()) == null ? void 0 : a.lead) || this
                : this;
        }
        getPrevLead() {
            var a;
            const { layoutId: o } = this.options;
            return o
                ? (a = this.getStack()) == null
                    ? void 0
                    : a.prevLead
                : void 0;
        }
        getStack() {
            const { layoutId: o } = this.options;
            if (o) return this.root.sharedNodes.get(o);
        }
        promote({
            needsReset: o,
            transition: a,
            preserveFollowOpacity: l,
        } = {}) {
            const u = this.getStack();
            u && u.promote(this, l),
                o && ((this.projectionDelta = void 0), (this.needsReset = !0)),
                a && this.setOptions({ transition: a });
        }
        relegate() {
            const o = this.getStack();
            return o ? o.relegate(this) : !1;
        }
        resetSkewAndRotation() {
            const { visualElement: o } = this.options;
            if (!o) return;
            let a = !1;
            const { latestValues: l } = o;
            if (
                ((l.z ||
                    l.rotate ||
                    l.rotateX ||
                    l.rotateY ||
                    l.rotateZ ||
                    l.skewX ||
                    l.skewY) &&
                    (a = !0),
                !a)
            )
                return;
            const u = {};
            l.z && aS('z', o, u, this.animationValues);
            for (let f = 0; f < oS.length; f++)
                aS(`rotate${oS[f]}`, o, u, this.animationValues),
                    aS(`skew${oS[f]}`, o, u, this.animationValues);
            o.render();
            for (const f in u)
                o.setStaticValue(f, u[f]),
                    this.animationValues && (this.animationValues[f] = u[f]);
            o.scheduleRender();
        }
        getProjectionStyles(o) {
            if (!this.instance || this.isSVG) return;
            if (!this.isVisible) return qz;
            const a = { visibility: '' },
                l = this.getTransformTemplate();
            if (this.needsReset)
                return (
                    (this.needsReset = !1),
                    (a.opacity = ''),
                    (a.pointerEvents =
                        f_(o == null ? void 0 : o.pointerEvents) || ''),
                    (a.transform = l ? l(this.latestValues, '') : 'none'),
                    a
                );
            const u = this.getLead();
            if (!this.projectionDelta || !this.layout || !u.target) {
                const v = {};
                return (
                    this.options.layoutId &&
                        ((v.opacity =
                            this.latestValues.opacity !== void 0
                                ? this.latestValues.opacity
                                : 1),
                        (v.pointerEvents =
                            f_(o == null ? void 0 : o.pointerEvents) || '')),
                    this.hasProjected &&
                        !Hf(this.latestValues) &&
                        ((v.transform = l ? l({}, '') : 'none'),
                        (this.hasProjected = !1)),
                    v
                );
            }
            const f = u.animationValues || u.latestValues;
            this.applyTransformsToTarget(),
                (a.transform = Yz(
                    this.projectionDeltaWithTransform,
                    this.treeScale,
                    f
                )),
                l && (a.transform = l(f, a.transform));
            const { x: d, y: m } = this.projectionDelta;
            (a.transformOrigin = `${d.origin * 100}% ${m.origin * 100}% 0`),
                u.animationValues
                    ? (a.opacity =
                          u === this
                              ? (f.opacity ?? this.latestValues.opacity ?? 1)
                              : this.preserveOpacity
                                ? this.latestValues.opacity
                                : f.opacityExit)
                    : (a.opacity =
                          u === this
                              ? f.opacity !== void 0
                                  ? f.opacity
                                  : ''
                              : f.opacityExit !== void 0
                                ? f.opacityExit
                                : 0);
            for (const v in t0) {
                if (f[v] === void 0) continue;
                const { correct: _, applyTo: S, isCSSVariable: w } = t0[v],
                    x = a.transform === 'none' ? f[v] : _(f[v], u);
                if (S) {
                    const A = S.length;
                    for (let T = 0; T < A; T++) a[S[T]] = x;
                } else
                    w
                        ? (this.options.visualElement.renderState.vars[v] = x)
                        : (a[v] = x);
            }
            return (
                this.options.layoutId &&
                    (a.pointerEvents =
                        u === this
                            ? f_(o == null ? void 0 : o.pointerEvents) || ''
                            : 'none'),
                a
            );
        }
        clearSnapshot() {
            this.resumeFrom = this.snapshot = void 0;
        }
        resetTree() {
            this.root.nodes.forEach((o) => {
                var a;
                return (a = o.currentAnimation) == null ? void 0 : a.stop(!1);
            }),
                this.root.nodes.forEach(aC),
                this.root.sharedNodes.clear();
        }
    };
}
function $z(r) {
    r.updateLayout();
}
function Jz(r) {
    var t;
    const e = ((t = r.resumeFrom) == null ? void 0 : t.snapshot) || r.snapshot;
    if (r.isLead() && r.layout && e && r.hasListeners('didUpdate')) {
        const { layoutBox: n, measuredBox: i } = r.layout,
            { animationType: s } = r.options,
            o = e.source !== r.layout.source;
        s === 'size'
            ? Zo((d) => {
                  const m = o ? e.measuredBox[d] : e.layoutBox[d],
                      v = Us(m);
                  (m.min = n[d].min), (m.max = m.min + v);
              })
            : K3(s, e.layoutBox, n) &&
              Zo((d) => {
                  const m = o ? e.measuredBox[d] : e.layoutBox[d],
                      v = Us(n[d]);
                  (m.max = m.min + v),
                      r.relativeTarget &&
                          !r.currentAnimation &&
                          ((r.isProjectionDirty = !0),
                          (r.relativeTarget[d].max =
                              r.relativeTarget[d].min + v));
              });
        const a = tp();
        Pg(a, n, e.layoutBox);
        const l = tp();
        o
            ? Pg(l, r.applyTransform(i, !0), e.measuredBox)
            : Pg(l, n, e.layoutBox);
        const u = !j3(a);
        let f = !1;
        if (!r.resumeFrom) {
            const d = r.getClosestProjectingParent();
            if (d && !d.resumeFrom) {
                const { snapshot: m, layout: v } = d;
                if (m && v) {
                    const _ = Zi();
                    Lg(_, e.layoutBox, m.layoutBox);
                    const S = Zi();
                    Lg(S, n, v.layoutBox),
                        X3(_, S) || (f = !0),
                        d.options.layoutRoot &&
                            ((r.relativeTarget = S),
                            (r.relativeTargetOrigin = _),
                            (r.relativeParent = d));
                }
            }
        }
        r.notifyListeners('didUpdate', {
            layout: n,
            snapshot: e,
            delta: l,
            layoutDelta: a,
            hasLayoutChanged: u,
            hasRelativeLayoutChanged: f,
        });
    } else if (r.isLead()) {
        const { onExitComplete: n } = r.options;
        n && n();
    }
    r.options.transition = void 0;
}
function Qz(r) {
    r.parent &&
        (r.isProjecting() || (r.isProjectionDirty = r.parent.isProjectionDirty),
        r.isSharedProjectionDirty ||
            (r.isSharedProjectionDirty = !!(
                r.isProjectionDirty ||
                r.parent.isProjectionDirty ||
                r.parent.isSharedProjectionDirty
            )),
        r.isTransformDirty || (r.isTransformDirty = r.parent.isTransformDirty));
}
function e5(r) {
    r.isProjectionDirty = r.isSharedProjectionDirty = r.isTransformDirty = !1;
}
function t5(r) {
    r.clearSnapshot();
}
function aC(r) {
    r.clearMeasurements();
}
function n5(r) {
    r.isLayoutDirty = !1;
}
function i5(r) {
    const { visualElement: e } = r.options;
    e && e.getProps().onBeforeLayoutMeasure && e.notify('BeforeLayoutMeasure'),
        r.resetTransform();
}
function lC(r) {
    r.finishAnimation(),
        (r.targetDelta = r.relativeTarget = r.target = void 0),
        (r.isProjectionDirty = !0);
}
function r5(r) {
    r.resolveTargetDelta();
}
function s5(r) {
    r.calcProjection();
}
function o5(r) {
    r.resetSkewAndRotation();
}
function a5(r) {
    r.removeLeadSnapshot();
}
function uC(r, e, t) {
    (r.translate = Pi(e.translate, 0, t)),
        (r.scale = Pi(e.scale, 1, t)),
        (r.origin = e.origin),
        (r.originPoint = e.originPoint);
}
function cC(r, e, t, n) {
    (r.min = Pi(e.min, t.min, n)), (r.max = Pi(e.max, t.max, n));
}
function l5(r, e, t, n) {
    cC(r.x, e.x, t.x, n), cC(r.y, e.y, t.y, n);
}
function u5(r) {
    return r.animationValues && r.animationValues.opacityExit !== void 0;
}
const c5 = { duration: 0.45, ease: [0.4, 0, 0.1, 1] },
    fC = (r) =>
        typeof navigator < 'u' &&
        navigator.userAgent &&
        navigator.userAgent.toLowerCase().includes(r),
    hC = fC('applewebkit/') && !fC('chrome/') ? Math.round : ta;
function dC(r) {
    (r.min = hC(r.min)), (r.max = hC(r.max));
}
function f5(r) {
    dC(r.x), dC(r.y);
}
function K3(r, e, t) {
    return (
        r === 'position' || (r === 'preserve-aspect' && !dz(sC(e), sC(t), 0.2))
    );
}
function h5(r) {
    var e;
    return r !== r.root && ((e = r.scroll) == null ? void 0 : e.wasRoot);
}
const d5 = q3({
        attachResizeListener: (r, e) => i0(r, 'resize', e),
        measureScroll: () => ({
            x: document.documentElement.scrollLeft || document.body.scrollLeft,
            y: document.documentElement.scrollTop || document.body.scrollTop,
        }),
        checkIsScrollRoot: () => !0,
    }),
    lS = { current: void 0 },
    Z3 = q3({
        measureScroll: (r) => ({ x: r.scrollLeft, y: r.scrollTop }),
        defaultParent: () => {
            if (!lS.current) {
                const r = new d5({});
                r.mount(window),
                    r.setOptions({ layoutScroll: !0 }),
                    (lS.current = r);
            }
            return lS.current;
        },
        resetTransform: (r, e) => {
            r.style.transform = e !== void 0 ? e : 'none';
        },
        checkIsScrollRoot: (r) =>
            window.getComputedStyle(r).position === 'fixed',
    }),
    p5 = {
        pan: { Feature: Pz },
        drag: { Feature: Rz, ProjectionNode: Z3, MeasureLayout: H3 },
    };
function pC(r, e, t) {
    const { props: n } = r;
    r.animationState &&
        n.whileHover &&
        r.animationState.setActive('whileHover', t === 'Start');
    const i = 'onHover' + t,
        s = n[i];
    s && Di.postRender(() => s(e, B0(e)));
}
class m5 extends kc {
    mount() {
        const { current: e } = this.node;
        e &&
            (this.unmount = H4(
                e,
                (t, n) => (
                    pC(this.node, n, 'Start'), (i) => pC(this.node, i, 'End')
                )
            ));
    }
    unmount() {}
}
class g5 extends kc {
    constructor() {
        super(...arguments), (this.isActive = !1);
    }
    onFocus() {
        let e = !1;
        try {
            e = this.node.current.matches(':focus-visible');
        } catch {
            e = !0;
        }
        !e ||
            !this.node.animationState ||
            (this.node.animationState.setActive('whileFocus', !0),
            (this.isActive = !0));
    }
    onBlur() {
        !this.isActive ||
            !this.node.animationState ||
            (this.node.animationState.setActive('whileFocus', !1),
            (this.isActive = !1));
    }
    mount() {
        this.unmount = k0(
            i0(this.node.current, 'focus', () => this.onFocus()),
            i0(this.node.current, 'blur', () => this.onBlur())
        );
    }
    unmount() {}
}
function mC(r, e, t) {
    const { props: n } = r;
    if (r.current instanceof HTMLButtonElement && r.current.disabled) return;
    r.animationState &&
        n.whileTap &&
        r.animationState.setActive('whileTap', t === 'Start');
    const i = 'onTap' + (t === 'End' ? '' : t),
        s = n[i];
    s && Di.postRender(() => s(e, B0(e)));
}
class v5 extends kc {
    mount() {
        const { current: e } = this.node;
        e &&
            (this.unmount = X4(
                e,
                (t, n) => (
                    mC(this.node, n, 'Start'),
                    (i, { success: s }) =>
                        mC(this.node, i, s ? 'End' : 'Cancel')
                ),
                { useGlobalTarget: this.node.props.globalTapTarget }
            ));
    }
    unmount() {}
}
const iM = new WeakMap(),
    uS = new WeakMap(),
    y5 = (r) => {
        const e = iM.get(r.target);
        e && e(r);
    },
    _5 = (r) => {
        r.forEach(y5);
    };
function x5({ root: r, ...e }) {
    const t = r || document;
    uS.has(t) || uS.set(t, {});
    const n = uS.get(t),
        i = JSON.stringify(e);
    return (
        n[i] || (n[i] = new IntersectionObserver(_5, { root: r, ...e })), n[i]
    );
}
function S5(r, e, t) {
    const n = x5(e);
    return (
        iM.set(r, t),
        n.observe(r),
        () => {
            iM.delete(r), n.unobserve(r);
        }
    );
}
const w5 = { some: 0, all: 1 };
class M5 extends kc {
    constructor() {
        super(...arguments), (this.hasEnteredView = !1), (this.isInView = !1);
    }
    startObserver() {
        this.unmount();
        const { viewport: e = {} } = this.node.getProps(),
            { root: t, margin: n, amount: i = 'some', once: s } = e,
            o = {
                root: t ? t.current : void 0,
                rootMargin: n,
                threshold: typeof i == 'number' ? i : w5[i],
            },
            a = (l) => {
                const { isIntersecting: u } = l;
                if (
                    this.isInView === u ||
                    ((this.isInView = u), s && !u && this.hasEnteredView)
                )
                    return;
                u && (this.hasEnteredView = !0),
                    this.node.animationState &&
                        this.node.animationState.setActive('whileInView', u);
                const { onViewportEnter: f, onViewportLeave: d } =
                        this.node.getProps(),
                    m = u ? f : d;
                m && m(l);
            };
        return S5(this.node.current, o, a);
    }
    mount() {
        this.startObserver();
    }
    update() {
        if (typeof IntersectionObserver > 'u') return;
        const { props: e, prevProps: t } = this.node;
        ['amount', 'margin', 'root'].some(E5(e, t)) && this.startObserver();
    }
    unmount() {}
}
function E5({ viewport: r = {} }, { viewport: e = {} } = {}) {
    return (t) => r[t] !== e[t];
}
const T5 = {
        inView: { Feature: M5 },
        tap: { Feature: v5 },
        focus: { Feature: g5 },
        hover: { Feature: m5 },
    },
    A5 = { layout: { ProjectionNode: Z3, MeasureLayout: H3 } },
    rM = { current: null },
    $3 = { current: !1 };
function b5() {
    if ((($3.current = !0), !!aE))
        if (window.matchMedia) {
            const r = window.matchMedia('(prefers-reduced-motion)'),
                e = () => (rM.current = r.matches);
            r.addListener(e), e();
        } else rM.current = !1;
}
const C5 = new WeakMap();
function R5(r, e, t) {
    for (const n in e) {
        const i = e[n],
            s = t[n];
        if (fs(i)) r.addValue(n, i);
        else if (fs(s)) r.addValue(n, Sp(i, { owner: r }));
        else if (s !== i)
            if (r.hasValue(n)) {
                const o = r.getValue(n);
                o.liveStyle === !0 ? o.jump(i) : o.hasAnimated || o.set(i);
            } else {
                const o = r.getStaticValue(n);
                r.addValue(n, Sp(o !== void 0 ? o : i, { owner: r }));
            }
    }
    for (const n in t) e[n] === void 0 && r.removeValue(n);
    return e;
}
const gC = [
    'AnimationStart',
    'AnimationComplete',
    'Update',
    'BeforeLayoutMeasure',
    'LayoutMeasure',
    'LayoutAnimationStart',
    'LayoutAnimationComplete',
];
class P5 {
    scrapeMotionValuesFromProps(e, t, n) {
        return {};
    }
    constructor(
        {
            parent: e,
            props: t,
            presenceContext: n,
            reducedMotionConfig: i,
            blockInitialAnimation: s,
            visualState: o,
        },
        a = {}
    ) {
        (this.current = null),
            (this.children = new Set()),
            (this.isVariantNode = !1),
            (this.isControllingVariants = !1),
            (this.shouldReduceMotion = null),
            (this.values = new Map()),
            (this.KeyframeResolver = EE),
            (this.features = {}),
            (this.valueSubscriptions = new Map()),
            (this.prevMotionValues = {}),
            (this.events = {}),
            (this.propEventSubscriptions = {}),
            (this.notifyUpdate = () =>
                this.notify('Update', this.latestValues)),
            (this.render = () => {
                this.current &&
                    (this.triggerBuild(),
                    this.renderInstance(
                        this.current,
                        this.renderState,
                        this.props.style,
                        this.projection
                    ));
            }),
            (this.renderScheduledAt = 0),
            (this.scheduleRender = () => {
                const m = Qs.now();
                this.renderScheduledAt < m &&
                    ((this.renderScheduledAt = m),
                    Di.render(this.render, !1, !0));
            });
        const { latestValues: l, renderState: u } = o;
        (this.latestValues = l),
            (this.baseTarget = { ...l }),
            (this.initialValues = t.initial ? { ...l } : {}),
            (this.renderState = u),
            (this.parent = e),
            (this.props = t),
            (this.presenceContext = n),
            (this.depth = e ? e.depth + 1 : 0),
            (this.reducedMotionConfig = i),
            (this.options = a),
            (this.blockInitialAnimation = !!s),
            (this.isControllingVariants = Ax(t)),
            (this.isVariantNode = y3(t)),
            this.isVariantNode && (this.variantChildren = new Set()),
            (this.manuallyAnimateOnMount = !!(e && e.current));
        const { willChange: f, ...d } = this.scrapeMotionValuesFromProps(
            t,
            {},
            this
        );
        for (const m in d) {
            const v = d[m];
            l[m] !== void 0 && fs(v) && v.set(l[m], !1);
        }
    }
    mount(e) {
        (this.current = e),
            C5.set(e, this),
            this.projection &&
                !this.projection.instance &&
                this.projection.mount(e),
            this.parent &&
                this.isVariantNode &&
                !this.isControllingVariants &&
                (this.removeFromVariantTree =
                    this.parent.addVariantChild(this)),
            this.values.forEach((t, n) => this.bindToMotionValue(n, t)),
            $3.current || b5(),
            (this.shouldReduceMotion =
                this.reducedMotionConfig === 'never'
                    ? !1
                    : this.reducedMotionConfig === 'always'
                      ? !0
                      : rM.current),
            this.parent && this.parent.children.add(this),
            this.update(this.props, this.presenceContext);
    }
    unmount() {
        this.projection && this.projection.unmount(),
            bc(this.notifyUpdate),
            bc(this.render),
            this.valueSubscriptions.forEach((e) => e()),
            this.valueSubscriptions.clear(),
            this.removeFromVariantTree && this.removeFromVariantTree(),
            this.parent && this.parent.children.delete(this);
        for (const e in this.events) this.events[e].clear();
        for (const e in this.features) {
            const t = this.features[e];
            t && (t.unmount(), (t.isMounted = !1));
        }
        this.current = null;
    }
    bindToMotionValue(e, t) {
        this.valueSubscriptions.has(e) && this.valueSubscriptions.get(e)();
        const n = Np.has(e);
        n && this.onBindTransform && this.onBindTransform();
        const i = t.on('change', (a) => {
                (this.latestValues[e] = a),
                    this.props.onUpdate && Di.preRender(this.notifyUpdate),
                    n &&
                        this.projection &&
                        (this.projection.isTransformDirty = !0);
            }),
            s = t.on('renderRequest', this.scheduleRender);
        let o;
        window.MotionCheckAppearSync &&
            (o = window.MotionCheckAppearSync(this, e, t)),
            this.valueSubscriptions.set(e, () => {
                i(), s(), o && o(), t.owner && t.stop();
            });
    }
    sortNodePosition(e) {
        return !this.current ||
            !this.sortInstanceNodePosition ||
            this.type !== e.type
            ? 0
            : this.sortInstanceNodePosition(this.current, e.current);
    }
    updateFeatures() {
        let e = 'animation';
        for (e in wp) {
            const t = wp[e];
            if (!t) continue;
            const { isEnabled: n, Feature: i } = t;
            if (
                (!this.features[e] &&
                    i &&
                    n(this.props) &&
                    (this.features[e] = new i(this)),
                this.features[e])
            ) {
                const s = this.features[e];
                s.isMounted ? s.update() : (s.mount(), (s.isMounted = !0));
            }
        }
    }
    triggerBuild() {
        this.build(this.renderState, this.latestValues, this.props);
    }
    measureViewportBox() {
        return this.current
            ? this.measureInstanceViewportBox(this.current, this.props)
            : Zi();
    }
    getStaticValue(e) {
        return this.latestValues[e];
    }
    setStaticValue(e, t) {
        this.latestValues[e] = t;
    }
    update(e, t) {
        (e.transformTemplate || this.props.transformTemplate) &&
            this.scheduleRender(),
            (this.prevProps = this.props),
            (this.props = e),
            (this.prevPresenceContext = this.presenceContext),
            (this.presenceContext = t);
        for (let n = 0; n < gC.length; n++) {
            const i = gC[n];
            this.propEventSubscriptions[i] &&
                (this.propEventSubscriptions[i](),
                delete this.propEventSubscriptions[i]);
            const s = 'on' + i,
                o = e[s];
            o && (this.propEventSubscriptions[i] = this.on(i, o));
        }
        (this.prevMotionValues = R5(
            this,
            this.scrapeMotionValuesFromProps(e, this.prevProps, this),
            this.prevMotionValues
        )),
            this.handleChildMotionValue && this.handleChildMotionValue();
    }
    getProps() {
        return this.props;
    }
    getVariant(e) {
        return this.props.variants ? this.props.variants[e] : void 0;
    }
    getDefaultTransition() {
        return this.props.transition;
    }
    getTransformPagePoint() {
        return this.props.transformPagePoint;
    }
    getClosestVariantNode() {
        return this.isVariantNode
            ? this
            : this.parent
              ? this.parent.getClosestVariantNode()
              : void 0;
    }
    addVariantChild(e) {
        const t = this.getClosestVariantNode();
        if (t)
            return (
                t.variantChildren && t.variantChildren.add(e),
                () => t.variantChildren.delete(e)
            );
    }
    addValue(e, t) {
        const n = this.values.get(e);
        t !== n &&
            (n && this.removeValue(e),
            this.bindToMotionValue(e, t),
            this.values.set(e, t),
            (this.latestValues[e] = t.get()));
    }
    removeValue(e) {
        this.values.delete(e);
        const t = this.valueSubscriptions.get(e);
        t && (t(), this.valueSubscriptions.delete(e)),
            delete this.latestValues[e],
            this.removeValueFromRenderState(e, this.renderState);
    }
    hasValue(e) {
        return this.values.has(e);
    }
    getValue(e, t) {
        if (this.props.values && this.props.values[e])
            return this.props.values[e];
        let n = this.values.get(e);
        return (
            n === void 0 &&
                t !== void 0 &&
                ((n = Sp(t === null ? void 0 : t, { owner: this })),
                this.addValue(e, n)),
            n
        );
    }
    readValue(e, t) {
        let n =
            this.latestValues[e] !== void 0 || !this.current
                ? this.latestValues[e]
                : (this.getBaseTargetFromProps(this.props, e) ??
                  this.readValueFromInstance(this.current, e, this.options));
        return (
            n != null &&
                (typeof n == 'string' && (AL(n) || CL(n))
                    ? (n = parseFloat(n))
                    : !K4(n) && Cc.test(t) && (n = u3(e, t)),
                this.setBaseTarget(e, fs(n) ? n.get() : n)),
            fs(n) ? n.get() : n
        );
    }
    setBaseTarget(e, t) {
        this.baseTarget[e] = t;
    }
    getBaseTarget(e) {
        var s;
        const { initial: t } = this.props;
        let n;
        if (typeof t == 'string' || typeof t == 'object') {
            const o = FE(
                this.props,
                t,
                (s = this.presenceContext) == null ? void 0 : s.custom
            );
            o && (n = o[e]);
        }
        if (t && n !== void 0) return n;
        const i = this.getBaseTargetFromProps(this.props, e);
        return i !== void 0 && !fs(i)
            ? i
            : this.initialValues[e] !== void 0 && n === void 0
              ? void 0
              : this.baseTarget[e];
    }
    on(e, t) {
        return (
            this.events[e] || (this.events[e] = new hE()), this.events[e].add(t)
        );
    }
    notify(e, ...t) {
        this.events[e] && this.events[e].notify(...t);
    }
}
class J3 extends P5 {
    constructor() {
        super(...arguments), (this.KeyframeResolver = N4);
    }
    sortInstanceNodePosition(e, t) {
        return e.compareDocumentPosition(t) & 2 ? 1 : -1;
    }
    getBaseTargetFromProps(e, t) {
        return e.style ? e.style[t] : void 0;
    }
    removeValueFromRenderState(e, { vars: t, style: n }) {
        delete t[e], delete n[e];
    }
    handleChildMotionValue() {
        this.childSubscription &&
            (this.childSubscription(), delete this.childSubscription);
        const { children: e } = this.props;
        fs(e) &&
            (this.childSubscription = e.on('change', (t) => {
                this.current && (this.current.textContent = `${t}`);
            }));
    }
}
function Q3(r, { style: e, vars: t }, n, i) {
    Object.assign(r.style, e, i && i.getProjectionStyles(n));
    for (const s in t) r.style.setProperty(s, t[s]);
}
function L5(r) {
    return window.getComputedStyle(r);
}
class I5 extends J3 {
    constructor() {
        super(...arguments), (this.type = 'html'), (this.renderInstance = Q3);
    }
    readValueFromInstance(e, t) {
        var n;
        if (Np.has(t))
            return (n = this.projection) != null && n.isProjecting
                ? jw(t)
                : n4(e, t);
        {
            const i = L5(e),
                s = (mE(t) ? i.getPropertyValue(t) : i[t]) || 0;
            return typeof s == 'string' ? s.trim() : s;
        }
    }
    measureInstanceViewportBox(e, { transformPagePoint: t }) {
        return F3(e, t);
    }
    build(e, t, n) {
        UE(e, t, n.transformTemplate);
    }
    scrapeMotionValuesFromProps(e, t, n) {
        return BE(e, t, n);
    }
}
const eI = new Set([
    'baseFrequency',
    'diffuseConstant',
    'kernelMatrix',
    'kernelUnitLength',
    'keySplines',
    'keyTimes',
    'limitingConeAngle',
    'markerHeight',
    'markerWidth',
    'numOctaves',
    'targetX',
    'targetY',
    'surfaceScale',
    'specularConstant',
    'specularExponent',
    'stdDeviation',
    'tableValues',
    'viewBox',
    'gradientTransform',
    'pathLength',
    'startOffset',
    'textLength',
    'lengthAdjust',
]);
function D5(r, e, t, n) {
    Q3(r, e, void 0, n);
    for (const i in e.attrs) r.setAttribute(eI.has(i) ? i : OE(i), e.attrs[i]);
}
class O5 extends J3 {
    constructor() {
        super(...arguments),
            (this.type = 'svg'),
            (this.isSVGTag = !1),
            (this.measureInstanceViewportBox = Zi);
    }
    getBaseTargetFromProps(e, t) {
        return e[t];
    }
    readValueFromInstance(e, t) {
        if (Np.has(t)) {
            const n = l3(t);
            return (n && n.default) || 0;
        }
        return (t = eI.has(t) ? t : OE(t)), e.getAttribute(t);
    }
    scrapeMotionValuesFromProps(e, t, n) {
        return C3(e, t, n);
    }
    build(e, t, n) {
        E3(e, t, this.isSVGTag, n.transformTemplate, n.style);
    }
    renderInstance(e, t, n, i) {
        D5(e, t, n, i);
    }
    mount(e) {
        (this.isSVGTag = A3(e.tagName)), super.mount(e);
    }
}
const U5 = (r, e) =>
        NE(r) ? new O5(e) : new I5(e, { allowProjection: r !== Y.Fragment }),
    k5 = DB({ ...sz, ...T5, ...p5, ...A5 }, U5),
    tI = rB(k5);
var Hm = {},
    vC;
function N5() {
    if (vC) return Hm;
    (vC = 1),
        Object.defineProperty(Hm, '__esModule', { value: !0 }),
        (Hm.parse = o),
        (Hm.serialize = u);
    const r = /^[\u0021-\u003A\u003C\u003E-\u007E]+$/,
        e = /^[\u0021-\u003A\u003C-\u007E]*$/,
        t =
            /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i,
        n = /^[\u0020-\u003A\u003D-\u007E]*$/,
        i = Object.prototype.toString,
        s = (() => {
            const m = function () {};
            return (m.prototype = Object.create(null)), m;
        })();
    function o(m, v) {
        const _ = new s(),
            S = m.length;
        if (S < 2) return _;
        const w = (v == null ? void 0 : v.decode) || f;
        let x = 0;
        do {
            const A = m.indexOf('=', x);
            if (A === -1) break;
            const T = m.indexOf(';', x),
                b = T === -1 ? S : T;
            if (A > b) {
                x = m.lastIndexOf(';', A - 1) + 1;
                continue;
            }
            const P = a(m, x, A),
                L = l(m, A, P),
                D = m.slice(P, L);
            if (_[D] === void 0) {
                let O = a(m, A + 1, b),
                    I = l(m, b, O);
                const U = w(m.slice(O, I));
                _[D] = U;
            }
            x = b + 1;
        } while (x < S);
        return _;
    }
    function a(m, v, _) {
        do {
            const S = m.charCodeAt(v);
            if (S !== 32 && S !== 9) return v;
        } while (++v < _);
        return _;
    }
    function l(m, v, _) {
        for (; v > _; ) {
            const S = m.charCodeAt(--v);
            if (S !== 32 && S !== 9) return v + 1;
        }
        return _;
    }
    function u(m, v, _) {
        const S = (_ == null ? void 0 : _.encode) || encodeURIComponent;
        if (!r.test(m)) throw new TypeError(`argument name is invalid: ${m}`);
        const w = S(v);
        if (!e.test(w)) throw new TypeError(`argument val is invalid: ${v}`);
        let x = m + '=' + w;
        if (!_) return x;
        if (_.maxAge !== void 0) {
            if (!Number.isInteger(_.maxAge))
                throw new TypeError(`option maxAge is invalid: ${_.maxAge}`);
            x += '; Max-Age=' + _.maxAge;
        }
        if (_.domain) {
            if (!t.test(_.domain))
                throw new TypeError(`option domain is invalid: ${_.domain}`);
            x += '; Domain=' + _.domain;
        }
        if (_.path) {
            if (!n.test(_.path))
                throw new TypeError(`option path is invalid: ${_.path}`);
            x += '; Path=' + _.path;
        }
        if (_.expires) {
            if (!d(_.expires) || !Number.isFinite(_.expires.valueOf()))
                throw new TypeError(`option expires is invalid: ${_.expires}`);
            x += '; Expires=' + _.expires.toUTCString();
        }
        if (
            (_.httpOnly && (x += '; HttpOnly'),
            _.secure && (x += '; Secure'),
            _.partitioned && (x += '; Partitioned'),
            _.priority)
        )
            switch (
                typeof _.priority == 'string'
                    ? _.priority.toLowerCase()
                    : void 0
            ) {
                case 'low':
                    x += '; Priority=Low';
                    break;
                case 'medium':
                    x += '; Priority=Medium';
                    break;
                case 'high':
                    x += '; Priority=High';
                    break;
                default:
                    throw new TypeError(
                        `option priority is invalid: ${_.priority}`
                    );
            }
        if (_.sameSite)
            switch (
                typeof _.sameSite == 'string'
                    ? _.sameSite.toLowerCase()
                    : _.sameSite
            ) {
                case !0:
                case 'strict':
                    x += '; SameSite=Strict';
                    break;
                case 'lax':
                    x += '; SameSite=Lax';
                    break;
                case 'none':
                    x += '; SameSite=None';
                    break;
                default:
                    throw new TypeError(
                        `option sameSite is invalid: ${_.sameSite}`
                    );
            }
        return x;
    }
    function f(m) {
        if (m.indexOf('%') === -1) return m;
        try {
            return decodeURIComponent(m);
        } catch {
            return m;
        }
    }
    function d(m) {
        return i.call(m) === '[object Date]';
    }
    return Hm;
}
N5();
var yC = 'popstate';
function F5(r = {}) {
    function e(n, i) {
        let { pathname: s, search: o, hash: a } = n.location;
        return sM(
            '',
            { pathname: s, search: o, hash: a },
            (i.state && i.state.usr) || null,
            (i.state && i.state.key) || 'default'
        );
    }
    function t(n, i) {
        return typeof i == 'string' ? i : r0(i);
    }
    return z5(e, t, null, r);
}
function Ei(r, e) {
    if (r === !1 || r === null || typeof r > 'u') throw new Error(e);
}
function Ga(r, e) {
    if (!r) {
        typeof console < 'u' && console.warn(e);
        try {
            throw new Error(e);
        } catch {}
    }
}
function B5() {
    return Math.random().toString(36).substring(2, 10);
}
function _C(r, e) {
    return { usr: r.state, key: r.key, idx: e };
}
function sM(r, e, t = null, n) {
    return {
        pathname: typeof r == 'string' ? r : r.pathname,
        search: '',
        hash: '',
        ...(typeof e == 'string' ? Fp(e) : e),
        state: t,
        key: (e && e.key) || n || B5(),
    };
}
function r0({ pathname: r = '/', search: e = '', hash: t = '' }) {
    return (
        e && e !== '?' && (r += e.charAt(0) === '?' ? e : '?' + e),
        t && t !== '#' && (r += t.charAt(0) === '#' ? t : '#' + t),
        r
    );
}
function Fp(r) {
    let e = {};
    if (r) {
        let t = r.indexOf('#');
        t >= 0 && ((e.hash = r.substring(t)), (r = r.substring(0, t)));
        let n = r.indexOf('?');
        n >= 0 && ((e.search = r.substring(n)), (r = r.substring(0, n))),
            r && (e.pathname = r);
    }
    return e;
}
function z5(r, e, t, n = {}) {
    let { window: i = document.defaultView, v5Compat: s = !1 } = n,
        o = i.history,
        a = 'POP',
        l = null,
        u = f();
    u == null && ((u = 0), o.replaceState({ ...o.state, idx: u }, ''));
    function f() {
        return (o.state || { idx: null }).idx;
    }
    function d() {
        a = 'POP';
        let w = f(),
            x = w == null ? null : w - u;
        (u = w), l && l({ action: a, location: S.location, delta: x });
    }
    function m(w, x) {
        a = 'PUSH';
        let A = sM(S.location, w, x);
        u = f() + 1;
        let T = _C(A, u),
            b = S.createHref(A);
        try {
            o.pushState(T, '', b);
        } catch (P) {
            if (P instanceof DOMException && P.name === 'DataCloneError')
                throw P;
            i.location.assign(b);
        }
        s && l && l({ action: a, location: S.location, delta: 1 });
    }
    function v(w, x) {
        a = 'REPLACE';
        let A = sM(S.location, w, x);
        u = f();
        let T = _C(A, u),
            b = S.createHref(A);
        o.replaceState(T, '', b),
            s && l && l({ action: a, location: S.location, delta: 0 });
    }
    function _(w) {
        return V5(w);
    }
    let S = {
        get action() {
            return a;
        },
        get location() {
            return r(i, o);
        },
        listen(w) {
            if (l)
                throw new Error('A history only accepts one active listener');
            return (
                i.addEventListener(yC, d),
                (l = w),
                () => {
                    i.removeEventListener(yC, d), (l = null);
                }
            );
        },
        createHref(w) {
            return e(i, w);
        },
        createURL: _,
        encodeLocation(w) {
            let x = _(w);
            return { pathname: x.pathname, search: x.search, hash: x.hash };
        },
        push: m,
        replace: v,
        go(w) {
            return o.go(w);
        },
    };
    return S;
}
function V5(r, e = !1) {
    let t = 'http://localhost';
    typeof window < 'u' &&
        (t =
            window.location.origin !== 'null'
                ? window.location.origin
                : window.location.href),
        Ei(t, 'No window.location.(origin|href) available to create URL');
    let n = typeof r == 'string' ? r : r0(r);
    return (
        (n = n.replace(/ $/, '%20')),
        !e && n.startsWith('//') && (n = t + n),
        new URL(n, t)
    );
}
function nI(r, e, t = '/') {
    return H5(r, e, t, !1);
}
function H5(r, e, t, n) {
    let i = typeof e == 'string' ? Fp(e) : e,
        s = Mu(i.pathname || '/', t);
    if (s == null) return null;
    let o = iI(r);
    G5(o);
    let a = null;
    for (let l = 0; a == null && l < o.length; ++l) {
        let u = eV(s);
        a = J5(o[l], u, n);
    }
    return a;
}
function iI(r, e = [], t = [], n = '') {
    let i = (s, o, a) => {
        let l = {
            relativePath: a === void 0 ? s.path || '' : a,
            caseSensitive: s.caseSensitive === !0,
            childrenIndex: o,
            route: s,
        };
        l.relativePath.startsWith('/') &&
            (Ei(
                l.relativePath.startsWith(n),
                `Absolute route path "${l.relativePath}" nested under path "${n}" is not valid. An absolute child route path must start with the combined path of all its parent routes.`
            ),
            (l.relativePath = l.relativePath.slice(n.length)));
        let u = xu([n, l.relativePath]),
            f = t.concat(l);
        s.children &&
            s.children.length > 0 &&
            (Ei(
                s.index !== !0,
                `Index routes must not have child routes. Please remove all child routes from route path "${u}".`
            ),
            iI(s.children, e, f, u)),
            !(s.path == null && !s.index) &&
                e.push({ path: u, score: Z5(u, s.index), routesMeta: f });
    };
    return (
        r.forEach((s, o) => {
            var a;
            if (s.path === '' || !((a = s.path) != null && a.includes('?')))
                i(s, o);
            else for (let l of rI(s.path)) i(s, o, l);
        }),
        e
    );
}
function rI(r) {
    let e = r.split('/');
    if (e.length === 0) return [];
    let [t, ...n] = e,
        i = t.endsWith('?'),
        s = t.replace(/\?$/, '');
    if (n.length === 0) return i ? [s, ''] : [s];
    let o = rI(n.join('/')),
        a = [];
    return (
        a.push(...o.map((l) => (l === '' ? s : [s, l].join('/')))),
        i && a.push(...o),
        a.map((l) => (r.startsWith('/') && l === '' ? '/' : l))
    );
}
function G5(r) {
    r.sort((e, t) =>
        e.score !== t.score
            ? t.score - e.score
            : $5(
                  e.routesMeta.map((n) => n.childrenIndex),
                  t.routesMeta.map((n) => n.childrenIndex)
              )
    );
}
var W5 = /^:[\w-]+$/,
    j5 = 3,
    X5 = 2,
    Y5 = 1,
    q5 = 10,
    K5 = -2,
    xC = (r) => r === '*';
function Z5(r, e) {
    let t = r.split('/'),
        n = t.length;
    return (
        t.some(xC) && (n += K5),
        e && (n += X5),
        t
            .filter((i) => !xC(i))
            .reduce((i, s) => i + (W5.test(s) ? j5 : s === '' ? Y5 : q5), n)
    );
}
function $5(r, e) {
    return r.length === e.length && r.slice(0, -1).every((n, i) => n === e[i])
        ? r[r.length - 1] - e[e.length - 1]
        : 0;
}
function J5(r, e, t = !1) {
    let { routesMeta: n } = r,
        i = {},
        s = '/',
        o = [];
    for (let a = 0; a < n.length; ++a) {
        let l = n[a],
            u = a === n.length - 1,
            f = s === '/' ? e : e.slice(s.length) || '/',
            d = C_(
                {
                    path: l.relativePath,
                    caseSensitive: l.caseSensitive,
                    end: u,
                },
                f
            ),
            m = l.route;
        if (
            (!d &&
                u &&
                t &&
                !n[n.length - 1].route.index &&
                (d = C_(
                    {
                        path: l.relativePath,
                        caseSensitive: l.caseSensitive,
                        end: !1,
                    },
                    f
                )),
            !d)
        )
            return null;
        Object.assign(i, d.params),
            o.push({
                params: i,
                pathname: xu([s, d.pathname]),
                pathnameBase: rV(xu([s, d.pathnameBase])),
                route: m,
            }),
            d.pathnameBase !== '/' && (s = xu([s, d.pathnameBase]));
    }
    return o;
}
function C_(r, e) {
    typeof r == 'string' && (r = { path: r, caseSensitive: !1, end: !0 });
    let [t, n] = Q5(r.path, r.caseSensitive, r.end),
        i = e.match(t);
    if (!i) return null;
    let s = i[0],
        o = s.replace(/(.)\/+$/, '$1'),
        a = i.slice(1);
    return {
        params: n.reduce((u, { paramName: f, isOptional: d }, m) => {
            if (f === '*') {
                let _ = a[m] || '';
                o = s.slice(0, s.length - _.length).replace(/(.)\/+$/, '$1');
            }
            const v = a[m];
            return (
                d && !v
                    ? (u[f] = void 0)
                    : (u[f] = (v || '').replace(/%2F/g, '/')),
                u
            );
        }, {}),
        pathname: s,
        pathnameBase: o,
        pattern: r,
    };
}
function Q5(r, e = !1, t = !0) {
    Ga(
        r === '*' || !r.endsWith('*') || r.endsWith('/*'),
        `Route path "${r}" will be treated as if it were "${r.replace(/\*$/, '/*')}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${r.replace(/\*$/, '/*')}".`
    );
    let n = [],
        i =
            '^' +
            r
                .replace(/\/*\*?$/, '')
                .replace(/^\/*/, '/')
                .replace(/[\\.*+^${}|()[\]]/g, '\\$&')
                .replace(
                    /\/:([\w-]+)(\?)?/g,
                    (o, a, l) => (
                        n.push({ paramName: a, isOptional: l != null }),
                        l ? '/?([^\\/]+)?' : '/([^\\/]+)'
                    )
                );
    return (
        r.endsWith('*')
            ? (n.push({ paramName: '*' }),
              (i += r === '*' || r === '/*' ? '(.*)$' : '(?:\\/(.+)|\\/*)$'))
            : t
              ? (i += '\\/*$')
              : r !== '' && r !== '/' && (i += '(?:(?=\\/|$))'),
        [new RegExp(i, e ? void 0 : 'i'), n]
    );
}
function eV(r) {
    try {
        return r
            .split('/')
            .map((e) => decodeURIComponent(e).replace(/\//g, '%2F'))
            .join('/');
    } catch (e) {
        return (
            Ga(
                !1,
                `The URL path "${r}" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${e}).`
            ),
            r
        );
    }
}
function Mu(r, e) {
    if (e === '/') return r;
    if (!r.toLowerCase().startsWith(e.toLowerCase())) return null;
    let t = e.endsWith('/') ? e.length - 1 : e.length,
        n = r.charAt(t);
    return n && n !== '/' ? null : r.slice(t) || '/';
}
function tV(r, e = '/') {
    let {
        pathname: t,
        search: n = '',
        hash: i = '',
    } = typeof r == 'string' ? Fp(r) : r;
    return {
        pathname: t ? (t.startsWith('/') ? t : nV(t, e)) : e,
        search: sV(n),
        hash: oV(i),
    };
}
function nV(r, e) {
    let t = e.replace(/\/+$/, '').split('/');
    return (
        r.split('/').forEach((i) => {
            i === '..' ? t.length > 1 && t.pop() : i !== '.' && t.push(i);
        }),
        t.length > 1 ? t.join('/') : '/'
    );
}
function cS(r, e, t, n) {
    return `Cannot include a '${r}' character in a manually specified \`to.${e}\` field [${JSON.stringify(n)}].  Please separate it out to the \`to.${t}\` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.`;
}
function iV(r) {
    return r.filter(
        (e, t) => t === 0 || (e.route.path && e.route.path.length > 0)
    );
}
function VE(r) {
    let e = iV(r);
    return e.map((t, n) => (n === e.length - 1 ? t.pathname : t.pathnameBase));
}
function HE(r, e, t, n = !1) {
    let i;
    typeof r == 'string'
        ? (i = Fp(r))
        : ((i = { ...r }),
          Ei(
              !i.pathname || !i.pathname.includes('?'),
              cS('?', 'pathname', 'search', i)
          ),
          Ei(
              !i.pathname || !i.pathname.includes('#'),
              cS('#', 'pathname', 'hash', i)
          ),
          Ei(
              !i.search || !i.search.includes('#'),
              cS('#', 'search', 'hash', i)
          ));
    let s = r === '' || i.pathname === '',
        o = s ? '/' : i.pathname,
        a;
    if (o == null) a = t;
    else {
        let d = e.length - 1;
        if (!n && o.startsWith('..')) {
            let m = o.split('/');
            for (; m[0] === '..'; ) m.shift(), (d -= 1);
            i.pathname = m.join('/');
        }
        a = d >= 0 ? e[d] : '/';
    }
    let l = tV(i, a),
        u = o && o !== '/' && o.endsWith('/'),
        f = (s || o === '.') && t.endsWith('/');
    return !l.pathname.endsWith('/') && (u || f) && (l.pathname += '/'), l;
}
var xu = (r) => r.join('/').replace(/\/\/+/g, '/'),
    rV = (r) => r.replace(/\/+$/, '').replace(/^\/*/, '/'),
    sV = (r) => (!r || r === '?' ? '' : r.startsWith('?') ? r : '?' + r),
    oV = (r) => (!r || r === '#' ? '' : r.startsWith('#') ? r : '#' + r);
function aV(r) {
    return (
        r != null &&
        typeof r.status == 'number' &&
        typeof r.statusText == 'string' &&
        typeof r.internal == 'boolean' &&
        'data' in r
    );
}
var sI = ['POST', 'PUT', 'PATCH', 'DELETE'];
new Set(sI);
var lV = ['GET', ...sI];
new Set(lV);
var Bp = Y.createContext(null);
Bp.displayName = 'DataRouter';
var bx = Y.createContext(null);
bx.displayName = 'DataRouterState';
var oI = Y.createContext({ isTransitioning: !1 });
oI.displayName = 'ViewTransition';
var uV = Y.createContext(new Map());
uV.displayName = 'Fetchers';
var cV = Y.createContext(null);
cV.displayName = 'Await';
var Wa = Y.createContext(null);
Wa.displayName = 'Navigation';
var z0 = Y.createContext(null);
z0.displayName = 'Location';
var ia = Y.createContext({ outlet: null, matches: [], isDataRoute: !1 });
ia.displayName = 'Route';
var GE = Y.createContext(null);
GE.displayName = 'RouteError';
function fV(r, { relative: e } = {}) {
    Ei(
        zp(),
        'useHref() may be used only in the context of a <Router> component.'
    );
    let { basename: t, navigator: n } = Y.useContext(Wa),
        { hash: i, pathname: s, search: o } = V0(r, { relative: e }),
        a = s;
    return (
        t !== '/' && (a = s === '/' ? t : xu([t, s])),
        n.createHref({ pathname: a, search: o, hash: i })
    );
}
function zp() {
    return Y.useContext(z0) != null;
}
function Nc() {
    return (
        Ei(
            zp(),
            'useLocation() may be used only in the context of a <Router> component.'
        ),
        Y.useContext(z0).location
    );
}
var aI =
    'You should call navigate() in a React.useEffect(), not when your component is first rendered.';
function lI(r) {
    Y.useContext(Wa).static || Y.useLayoutEffect(r);
}
function uI() {
    let { isDataRoute: r } = Y.useContext(ia);
    return r ? AV() : hV();
}
function hV() {
    Ei(
        zp(),
        'useNavigate() may be used only in the context of a <Router> component.'
    );
    let r = Y.useContext(Bp),
        { basename: e, navigator: t } = Y.useContext(Wa),
        { matches: n } = Y.useContext(ia),
        { pathname: i } = Nc(),
        s = JSON.stringify(VE(n)),
        o = Y.useRef(!1);
    return (
        lI(() => {
            o.current = !0;
        }),
        Y.useCallback(
            (l, u = {}) => {
                if ((Ga(o.current, aI), !o.current)) return;
                if (typeof l == 'number') {
                    t.go(l);
                    return;
                }
                let f = HE(l, JSON.parse(s), i, u.relative === 'path');
                r == null &&
                    e !== '/' &&
                    (f.pathname = f.pathname === '/' ? e : xu([e, f.pathname])),
                    (u.replace ? t.replace : t.push)(f, u.state, u);
            },
            [e, t, s, i, r]
        )
    );
}
var dV = Y.createContext(null);
function pV(r) {
    let e = Y.useContext(ia).outlet;
    return e && Y.createElement(dV.Provider, { value: r }, e);
}
function PQ() {
    let { matches: r } = Y.useContext(ia),
        e = r[r.length - 1];
    return e ? e.params : {};
}
function V0(r, { relative: e } = {}) {
    let { matches: t } = Y.useContext(ia),
        { pathname: n } = Nc(),
        i = JSON.stringify(VE(t));
    return Y.useMemo(() => HE(r, JSON.parse(i), n, e === 'path'), [r, i, n, e]);
}
function mV(r, e) {
    return cI(r, e);
}
function cI(r, e, t, n) {
    var A;
    Ei(
        zp(),
        'useRoutes() may be used only in the context of a <Router> component.'
    );
    let { navigator: i, static: s } = Y.useContext(Wa),
        { matches: o } = Y.useContext(ia),
        a = o[o.length - 1],
        l = a ? a.params : {},
        u = a ? a.pathname : '/',
        f = a ? a.pathnameBase : '/',
        d = a && a.route;
    {
        let T = (d && d.path) || '';
        fI(
            u,
            !d || T.endsWith('*') || T.endsWith('*?'),
            `You rendered descendant <Routes> (or called \`useRoutes()\`) at "${u}" (under <Route path="${T}">) but the parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

Please change the parent <Route path="${T}"> to <Route path="${T === '/' ? '*' : `${T}/*`}">.`
        );
    }
    let m = Nc(),
        v;
    if (e) {
        let T = typeof e == 'string' ? Fp(e) : e;
        Ei(
            f === '/' || ((A = T.pathname) == null ? void 0 : A.startsWith(f)),
            `When overriding the location using \`<Routes location>\` or \`useRoutes(routes, location)\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is "${f}" but pathname "${T.pathname}" was given in the \`location\` prop.`
        ),
            (v = T);
    } else v = m;
    let _ = v.pathname || '/',
        S = _;
    if (f !== '/') {
        let T = f.replace(/^\//, '').split('/');
        S = '/' + _.replace(/^\//, '').split('/').slice(T.length).join('/');
    }
    let w =
        !s && t && t.matches && t.matches.length > 0
            ? t.matches
            : nI(r, { pathname: S });
    Ga(
        d || w != null,
        `No routes matched location "${v.pathname}${v.search}${v.hash}" `
    ),
        Ga(
            w == null ||
                w[w.length - 1].route.element !== void 0 ||
                w[w.length - 1].route.Component !== void 0 ||
                w[w.length - 1].route.lazy !== void 0,
            `Matched leaf route at location "${v.pathname}${v.search}${v.hash}" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.`
        );
    let x = xV(
        w &&
            w.map((T) =>
                Object.assign({}, T, {
                    params: Object.assign({}, l, T.params),
                    pathname: xu([
                        f,
                        i.encodeLocation
                            ? i.encodeLocation(T.pathname).pathname
                            : T.pathname,
                    ]),
                    pathnameBase:
                        T.pathnameBase === '/'
                            ? f
                            : xu([
                                  f,
                                  i.encodeLocation
                                      ? i.encodeLocation(T.pathnameBase)
                                            .pathname
                                      : T.pathnameBase,
                              ]),
                })
            ),
        o,
        t,
        n
    );
    return e && x
        ? Y.createElement(
              z0.Provider,
              {
                  value: {
                      location: {
                          pathname: '/',
                          search: '',
                          hash: '',
                          state: null,
                          key: 'default',
                          ...v,
                      },
                      navigationType: 'POP',
                  },
              },
              x
          )
        : x;
}
function gV() {
    let r = TV(),
        e = aV(r)
            ? `${r.status} ${r.statusText}`
            : r instanceof Error
              ? r.message
              : JSON.stringify(r),
        t = r instanceof Error ? r.stack : null,
        n = 'rgba(200,200,200, 0.5)',
        i = { padding: '0.5rem', backgroundColor: n },
        s = { padding: '2px 4px', backgroundColor: n },
        o = null;
    return (
        console.error(
            'Error handled by React Router default ErrorBoundary:',
            r
        ),
        (o = Y.createElement(
            Y.Fragment,
            null,
            Y.createElement('p', null, '💿 Hey developer 👋'),
            Y.createElement(
                'p',
                null,
                'You can provide a way better UX than this when your app throws errors by providing your own ',
                Y.createElement('code', { style: s }, 'ErrorBoundary'),
                ' or',
                ' ',
                Y.createElement('code', { style: s }, 'errorElement'),
                ' prop on your route.'
            )
        )),
        Y.createElement(
            Y.Fragment,
            null,
            Y.createElement('h2', null, 'Unexpected Application Error!'),
            Y.createElement('h3', { style: { fontStyle: 'italic' } }, e),
            t ? Y.createElement('pre', { style: i }, t) : null,
            o
        )
    );
}
var vV = Y.createElement(gV, null),
    yV = class extends Y.Component {
        constructor(r) {
            super(r),
                (this.state = {
                    location: r.location,
                    revalidation: r.revalidation,
                    error: r.error,
                });
        }
        static getDerivedStateFromError(r) {
            return { error: r };
        }
        static getDerivedStateFromProps(r, e) {
            return e.location !== r.location ||
                (e.revalidation !== 'idle' && r.revalidation === 'idle')
                ? {
                      error: r.error,
                      location: r.location,
                      revalidation: r.revalidation,
                  }
                : {
                      error: r.error !== void 0 ? r.error : e.error,
                      location: e.location,
                      revalidation: r.revalidation || e.revalidation,
                  };
        }
        componentDidCatch(r, e) {
            console.error(
                'React Router caught the following error during render',
                r,
                e
            );
        }
        render() {
            return this.state.error !== void 0
                ? Y.createElement(
                      ia.Provider,
                      { value: this.props.routeContext },
                      Y.createElement(GE.Provider, {
                          value: this.state.error,
                          children: this.props.component,
                      })
                  )
                : this.props.children;
        }
    };
function _V({ routeContext: r, match: e, children: t }) {
    let n = Y.useContext(Bp);
    return (
        n &&
            n.static &&
            n.staticContext &&
            (e.route.errorElement || e.route.ErrorBoundary) &&
            (n.staticContext._deepestRenderedBoundaryId = e.route.id),
        Y.createElement(ia.Provider, { value: r }, t)
    );
}
function xV(r, e = [], t = null, n = null) {
    if (r == null) {
        if (!t) return null;
        if (t.errors) r = t.matches;
        else if (e.length === 0 && !t.initialized && t.matches.length > 0)
            r = t.matches;
        else return null;
    }
    let i = r,
        s = t == null ? void 0 : t.errors;
    if (s != null) {
        let l = i.findIndex(
            (u) => u.route.id && (s == null ? void 0 : s[u.route.id]) !== void 0
        );
        Ei(
            l >= 0,
            `Could not find a matching route for errors on route IDs: ${Object.keys(s).join(',')}`
        ),
            (i = i.slice(0, Math.min(i.length, l + 1)));
    }
    let o = !1,
        a = -1;
    if (t)
        for (let l = 0; l < i.length; l++) {
            let u = i[l];
            if (
                ((u.route.HydrateFallback || u.route.hydrateFallbackElement) &&
                    (a = l),
                u.route.id)
            ) {
                let { loaderData: f, errors: d } = t,
                    m =
                        u.route.loader &&
                        !f.hasOwnProperty(u.route.id) &&
                        (!d || d[u.route.id] === void 0);
                if (u.route.lazy || m) {
                    (o = !0), a >= 0 ? (i = i.slice(0, a + 1)) : (i = [i[0]]);
                    break;
                }
            }
        }
    return i.reduceRight((l, u, f) => {
        let d,
            m = !1,
            v = null,
            _ = null;
        t &&
            ((d = s && u.route.id ? s[u.route.id] : void 0),
            (v = u.route.errorElement || vV),
            o &&
                (a < 0 && f === 0
                    ? (fI(
                          'route-fallback',
                          !1,
                          'No `HydrateFallback` element provided to render during initial hydration'
                      ),
                      (m = !0),
                      (_ = null))
                    : a === f &&
                      ((m = !0),
                      (_ = u.route.hydrateFallbackElement || null))));
        let S = e.concat(i.slice(0, f + 1)),
            w = () => {
                let x;
                return (
                    d
                        ? (x = v)
                        : m
                          ? (x = _)
                          : u.route.Component
                            ? (x = Y.createElement(u.route.Component, null))
                            : u.route.element
                              ? (x = u.route.element)
                              : (x = l),
                    Y.createElement(_V, {
                        match: u,
                        routeContext: {
                            outlet: l,
                            matches: S,
                            isDataRoute: t != null,
                        },
                        children: x,
                    })
                );
            };
        return t && (u.route.ErrorBoundary || u.route.errorElement || f === 0)
            ? Y.createElement(yV, {
                  location: t.location,
                  revalidation: t.revalidation,
                  component: v,
                  error: d,
                  children: w(),
                  routeContext: { outlet: null, matches: S, isDataRoute: !0 },
              })
            : w();
    }, null);
}
function WE(r) {
    return `${r} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
}
function SV(r) {
    let e = Y.useContext(Bp);
    return Ei(e, WE(r)), e;
}
function wV(r) {
    let e = Y.useContext(bx);
    return Ei(e, WE(r)), e;
}
function MV(r) {
    let e = Y.useContext(ia);
    return Ei(e, WE(r)), e;
}
function jE(r) {
    let e = MV(r),
        t = e.matches[e.matches.length - 1];
    return (
        Ei(
            t.route.id,
            `${r} can only be used on routes that contain a unique "id"`
        ),
        t.route.id
    );
}
function EV() {
    return jE('useRouteId');
}
function TV() {
    var n;
    let r = Y.useContext(GE),
        e = wV('useRouteError'),
        t = jE('useRouteError');
    return r !== void 0 ? r : (n = e.errors) == null ? void 0 : n[t];
}
function AV() {
    let { router: r } = SV('useNavigate'),
        e = jE('useNavigate'),
        t = Y.useRef(!1);
    return (
        lI(() => {
            t.current = !0;
        }),
        Y.useCallback(
            async (i, s = {}) => {
                Ga(t.current, aI),
                    t.current &&
                        (typeof i == 'number'
                            ? r.navigate(i)
                            : await r.navigate(i, { fromRouteId: e, ...s }));
            },
            [r, e]
        )
    );
}
var SC = {};
function fI(r, e, t) {
    !e && !SC[r] && ((SC[r] = !0), Ga(!1, t));
}
Y.memo(bV);
function bV({ routes: r, future: e, state: t }) {
    return cI(r, void 0, t, e);
}
function R_({ to: r, replace: e, state: t, relative: n }) {
    Ei(
        zp(),
        '<Navigate> may be used only in the context of a <Router> component.'
    );
    let { static: i } = Y.useContext(Wa);
    Ga(
        !i,
        '<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.'
    );
    let { matches: s } = Y.useContext(ia),
        { pathname: o } = Nc(),
        a = uI(),
        l = HE(r, VE(s), o, n === 'path'),
        u = JSON.stringify(l);
    return (
        Y.useEffect(() => {
            a(JSON.parse(u), { replace: e, state: t, relative: n });
        }, [a, u, n, e, t]),
        null
    );
}
function CV(r) {
    return pV(r.context);
}
function ls(r) {
    Ei(
        !1,
        'A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.'
    );
}
function RV({
    basename: r = '/',
    children: e = null,
    location: t,
    navigationType: n = 'POP',
    navigator: i,
    static: s = !1,
}) {
    Ei(
        !zp(),
        'You cannot render a <Router> inside another <Router>. You should never have more than one in your app.'
    );
    let o = r.replace(/^\/*/, '/'),
        a = Y.useMemo(
            () => ({ basename: o, navigator: i, static: s, future: {} }),
            [o, i, s]
        );
    typeof t == 'string' && (t = Fp(t));
    let {
            pathname: l = '/',
            search: u = '',
            hash: f = '',
            state: d = null,
            key: m = 'default',
        } = t,
        v = Y.useMemo(() => {
            let _ = Mu(l, o);
            return _ == null
                ? null
                : {
                      location: {
                          pathname: _,
                          search: u,
                          hash: f,
                          state: d,
                          key: m,
                      },
                      navigationType: n,
                  };
        }, [o, l, u, f, d, m, n]);
    return (
        Ga(
            v != null,
            `<Router basename="${o}"> is not able to match the URL "${l}${u}${f}" because it does not start with the basename, so the <Router> won't render anything.`
        ),
        v == null
            ? null
            : Y.createElement(
                  Wa.Provider,
                  { value: a },
                  Y.createElement(z0.Provider, { children: e, value: v })
              )
    );
}
function PV({ children: r, location: e }) {
    return mV(oM(r), e);
}
function oM(r, e = []) {
    let t = [];
    return (
        Y.Children.forEach(r, (n, i) => {
            if (!Y.isValidElement(n)) return;
            let s = [...e, i];
            if (n.type === Y.Fragment) {
                t.push.apply(t, oM(n.props.children, s));
                return;
            }
            Ei(
                n.type === ls,
                `[${typeof n.type == 'string' ? n.type : n.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`
            ),
                Ei(
                    !n.props.index || !n.props.children,
                    'An index route cannot have child routes.'
                );
            let o = {
                id: n.props.id || s.join('-'),
                caseSensitive: n.props.caseSensitive,
                element: n.props.element,
                Component: n.props.Component,
                index: n.props.index,
                path: n.props.path,
                loader: n.props.loader,
                action: n.props.action,
                hydrateFallbackElement: n.props.hydrateFallbackElement,
                HydrateFallback: n.props.HydrateFallback,
                errorElement: n.props.errorElement,
                ErrorBoundary: n.props.ErrorBoundary,
                hasErrorBoundary:
                    n.props.hasErrorBoundary === !0 ||
                    n.props.ErrorBoundary != null ||
                    n.props.errorElement != null,
                shouldRevalidate: n.props.shouldRevalidate,
                handle: n.props.handle,
                lazy: n.props.lazy,
            };
            n.props.children && (o.children = oM(n.props.children, s)),
                t.push(o);
        }),
        t
    );
}
var d_ = 'get',
    p_ = 'application/x-www-form-urlencoded';
function Cx(r) {
    return r != null && typeof r.tagName == 'string';
}
function LV(r) {
    return Cx(r) && r.tagName.toLowerCase() === 'button';
}
function IV(r) {
    return Cx(r) && r.tagName.toLowerCase() === 'form';
}
function DV(r) {
    return Cx(r) && r.tagName.toLowerCase() === 'input';
}
function OV(r) {
    return !!(r.metaKey || r.altKey || r.ctrlKey || r.shiftKey);
}
function UV(r, e) {
    return r.button === 0 && (!e || e === '_self') && !OV(r);
}
var ny = null;
function kV() {
    if (ny === null)
        try {
            new FormData(document.createElement('form'), 0), (ny = !1);
        } catch {
            ny = !0;
        }
    return ny;
}
var NV = new Set([
    'application/x-www-form-urlencoded',
    'multipart/form-data',
    'text/plain',
]);
function fS(r) {
    return r != null && !NV.has(r)
        ? (Ga(
              !1,
              `"${r}" is not a valid \`encType\` for \`<Form>\`/\`<fetcher.Form>\` and will default to "${p_}"`
          ),
          null)
        : r;
}
function FV(r, e) {
    let t, n, i, s, o;
    if (IV(r)) {
        let a = r.getAttribute('action');
        (n = a ? Mu(a, e) : null),
            (t = r.getAttribute('method') || d_),
            (i = fS(r.getAttribute('enctype')) || p_),
            (s = new FormData(r));
    } else if (
        LV(r) ||
        (DV(r) && (r.type === 'submit' || r.type === 'image'))
    ) {
        let a = r.form;
        if (a == null)
            throw new Error(
                'Cannot submit a <button> or <input type="submit"> without a <form>'
            );
        let l = r.getAttribute('formaction') || a.getAttribute('action');
        if (
            ((n = l ? Mu(l, e) : null),
            (t =
                r.getAttribute('formmethod') || a.getAttribute('method') || d_),
            (i =
                fS(r.getAttribute('formenctype')) ||
                fS(a.getAttribute('enctype')) ||
                p_),
            (s = new FormData(a, r)),
            !kV())
        ) {
            let { name: u, type: f, value: d } = r;
            if (f === 'image') {
                let m = u ? `${u}.` : '';
                s.append(`${m}x`, '0'), s.append(`${m}y`, '0');
            } else u && s.append(u, d);
        }
    } else {
        if (Cx(r))
            throw new Error(
                'Cannot submit element that is not <form>, <button>, or <input type="submit|image">'
            );
        (t = d_), (n = null), (i = p_), (o = r);
    }
    return (
        s && i === 'text/plain' && ((o = s), (s = void 0)),
        { action: n, method: t.toLowerCase(), encType: i, formData: s, body: o }
    );
}
function XE(r, e) {
    if (r === !1 || r === null || typeof r > 'u') throw new Error(e);
}
async function BV(r, e) {
    if (r.id in e) return e[r.id];
    try {
        let t = await import(r.module);
        return (e[r.id] = t), t;
    } catch (t) {
        return (
            console.error(
                `Error loading route module \`${r.module}\`, reloading page...`
            ),
            console.error(t),
            window.__reactRouterContext &&
                window.__reactRouterContext.isSpaMode,
            window.location.reload(),
            new Promise(() => {})
        );
    }
}
function zV(r) {
    return r == null
        ? !1
        : r.href == null
          ? r.rel === 'preload' &&
            typeof r.imageSrcSet == 'string' &&
            typeof r.imageSizes == 'string'
          : typeof r.rel == 'string' && typeof r.href == 'string';
}
async function VV(r, e, t) {
    let n = await Promise.all(
        r.map(async (i) => {
            let s = e.routes[i.route.id];
            if (s) {
                let o = await BV(s, t);
                return o.links ? o.links() : [];
            }
            return [];
        })
    );
    return jV(
        n
            .flat(1)
            .filter(zV)
            .filter((i) => i.rel === 'stylesheet' || i.rel === 'preload')
            .map((i) =>
                i.rel === 'stylesheet'
                    ? { ...i, rel: 'prefetch', as: 'style' }
                    : { ...i, rel: 'prefetch' }
            )
    );
}
function wC(r, e, t, n, i, s) {
    let o = (l, u) => (t[u] ? l.route.id !== t[u].route.id : !0),
        a = (l, u) => {
            var f;
            return (
                t[u].pathname !== l.pathname ||
                (((f = t[u].route.path) == null ? void 0 : f.endsWith('*')) &&
                    t[u].params['*'] !== l.params['*'])
            );
        };
    return s === 'assets'
        ? e.filter((l, u) => o(l, u) || a(l, u))
        : s === 'data'
          ? e.filter((l, u) => {
                var d;
                let f = n.routes[l.route.id];
                if (!f || !f.hasLoader) return !1;
                if (o(l, u) || a(l, u)) return !0;
                if (l.route.shouldRevalidate) {
                    let m = l.route.shouldRevalidate({
                        currentUrl: new URL(
                            i.pathname + i.search + i.hash,
                            window.origin
                        ),
                        currentParams:
                            ((d = t[0]) == null ? void 0 : d.params) || {},
                        nextUrl: new URL(r, window.origin),
                        nextParams: l.params,
                        defaultShouldRevalidate: !0,
                    });
                    if (typeof m == 'boolean') return m;
                }
                return !0;
            })
          : [];
}
function HV(r, e, { includeHydrateFallback: t } = {}) {
    return GV(
        r
            .map((n) => {
                let i = e.routes[n.route.id];
                if (!i) return [];
                let s = [i.module];
                return (
                    i.clientActionModule &&
                        (s = s.concat(i.clientActionModule)),
                    i.clientLoaderModule &&
                        (s = s.concat(i.clientLoaderModule)),
                    t &&
                        i.hydrateFallbackModule &&
                        (s = s.concat(i.hydrateFallbackModule)),
                    i.imports && (s = s.concat(i.imports)),
                    s
                );
            })
            .flat(1)
    );
}
function GV(r) {
    return [...new Set(r)];
}
function WV(r) {
    let e = {},
        t = Object.keys(r).sort();
    for (let n of t) e[n] = r[n];
    return e;
}
function jV(r, e) {
    let t = new Set();
    return (
        new Set(e),
        r.reduce((n, i) => {
            let s = JSON.stringify(WV(i));
            return t.has(s) || (t.add(s), n.push({ key: s, link: i })), n;
        }, [])
    );
}
Object.getOwnPropertyNames(Object.prototype).sort().join('\0');
var XV = new Set([100, 101, 204, 205]);
function YV(r, e) {
    let t =
        typeof r == 'string'
            ? new URL(
                  r,
                  typeof window > 'u'
                      ? 'server://singlefetch/'
                      : window.location.origin
              )
            : r;
    return (
        t.pathname === '/'
            ? (t.pathname = '_root.data')
            : e && Mu(t.pathname, e) === '/'
              ? (t.pathname = `${e.replace(/\/$/, '')}/_root.data`)
              : (t.pathname = `${t.pathname.replace(/\/$/, '')}.data`),
        t
    );
}
function hI() {
    let r = Y.useContext(Bp);
    return (
        XE(
            r,
            'You must render this element inside a <DataRouterContext.Provider> element'
        ),
        r
    );
}
function qV() {
    let r = Y.useContext(bx);
    return (
        XE(
            r,
            'You must render this element inside a <DataRouterStateContext.Provider> element'
        ),
        r
    );
}
var YE = Y.createContext(void 0);
YE.displayName = 'FrameworkContext';
function dI() {
    let r = Y.useContext(YE);
    return (
        XE(r, 'You must render this element inside a <HydratedRouter> element'),
        r
    );
}
function KV(r, e) {
    let t = Y.useContext(YE),
        [n, i] = Y.useState(!1),
        [s, o] = Y.useState(!1),
        {
            onFocus: a,
            onBlur: l,
            onMouseEnter: u,
            onMouseLeave: f,
            onTouchStart: d,
        } = e,
        m = Y.useRef(null);
    Y.useEffect(() => {
        if ((r === 'render' && o(!0), r === 'viewport')) {
            let S = (x) => {
                    x.forEach((A) => {
                        o(A.isIntersecting);
                    });
                },
                w = new IntersectionObserver(S, { threshold: 0.5 });
            return (
                m.current && w.observe(m.current),
                () => {
                    w.disconnect();
                }
            );
        }
    }, [r]),
        Y.useEffect(() => {
            if (n) {
                let S = setTimeout(() => {
                    o(!0);
                }, 100);
                return () => {
                    clearTimeout(S);
                };
            }
        }, [n]);
    let v = () => {
            i(!0);
        },
        _ = () => {
            i(!1), o(!1);
        };
    return t
        ? r !== 'intent'
            ? [s, m, {}]
            : [
                  s,
                  m,
                  {
                      onFocus: Gm(a, v),
                      onBlur: Gm(l, _),
                      onMouseEnter: Gm(u, v),
                      onMouseLeave: Gm(f, _),
                      onTouchStart: Gm(d, v),
                  },
              ]
        : [!1, m, {}];
}
function Gm(r, e) {
    return (t) => {
        r && r(t), t.defaultPrevented || e(t);
    };
}
function ZV({ page: r, ...e }) {
    let { router: t } = hI(),
        n = Y.useMemo(
            () => nI(t.routes, r, t.basename),
            [t.routes, r, t.basename]
        );
    return n ? Y.createElement(JV, { page: r, matches: n, ...e }) : null;
}
function $V(r) {
    let { manifest: e, routeModules: t } = dI(),
        [n, i] = Y.useState([]);
    return (
        Y.useEffect(() => {
            let s = !1;
            return (
                VV(r, e, t).then((o) => {
                    s || i(o);
                }),
                () => {
                    s = !0;
                }
            );
        }, [r, e, t]),
        n
    );
}
function JV({ page: r, matches: e, ...t }) {
    let n = Nc(),
        { manifest: i, routeModules: s } = dI(),
        { basename: o } = hI(),
        { loaderData: a, matches: l } = qV(),
        u = Y.useMemo(() => wC(r, e, l, i, n, 'data'), [r, e, l, i, n]),
        f = Y.useMemo(() => wC(r, e, l, i, n, 'assets'), [r, e, l, i, n]),
        d = Y.useMemo(() => {
            if (r === n.pathname + n.search + n.hash) return [];
            let _ = new Set(),
                S = !1;
            if (
                (e.forEach((x) => {
                    var T;
                    let A = i.routes[x.route.id];
                    !A ||
                        !A.hasLoader ||
                        ((!u.some((b) => b.route.id === x.route.id) &&
                            x.route.id in a &&
                            (T = s[x.route.id]) != null &&
                            T.shouldRevalidate) ||
                        A.hasClientLoader
                            ? (S = !0)
                            : _.add(x.route.id));
                }),
                _.size === 0)
            )
                return [];
            let w = YV(r, o);
            return (
                S &&
                    _.size > 0 &&
                    w.searchParams.set(
                        '_routes',
                        e
                            .filter((x) => _.has(x.route.id))
                            .map((x) => x.route.id)
                            .join(',')
                    ),
                [w.pathname + w.search]
            );
        }, [o, a, n, i, u, e, r, s]),
        m = Y.useMemo(() => HV(f, i), [f, i]),
        v = $V(f);
    return Y.createElement(
        Y.Fragment,
        null,
        d.map((_) =>
            Y.createElement('link', {
                key: _,
                rel: 'prefetch',
                as: 'fetch',
                href: _,
                ...t,
            })
        ),
        m.map((_) =>
            Y.createElement('link', {
                key: _,
                rel: 'modulepreload',
                href: _,
                ...t,
            })
        ),
        v.map(({ key: _, link: S }) =>
            Y.createElement('link', { key: _, ...S })
        )
    );
}
function QV(...r) {
    return (e) => {
        r.forEach((t) => {
            typeof t == 'function' ? t(e) : t != null && (t.current = e);
        });
    };
}
var pI =
    typeof window < 'u' &&
    typeof window.document < 'u' &&
    typeof window.document.createElement < 'u';
try {
    pI && (window.__reactRouterVersion = '7.6.0');
} catch {}
function e6({ basename: r, children: e, window: t }) {
    let n = Y.useRef();
    n.current == null && (n.current = F5({ window: t, v5Compat: !0 }));
    let i = n.current,
        [s, o] = Y.useState({ action: i.action, location: i.location }),
        a = Y.useCallback(
            (l) => {
                Y.startTransition(() => o(l));
            },
            [o]
        );
    return (
        Y.useLayoutEffect(() => i.listen(a), [i, a]),
        Y.createElement(RV, {
            basename: r,
            children: e,
            location: s.location,
            navigationType: s.action,
            navigator: i,
        })
    );
}
var mI = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,
    qE = Y.forwardRef(function (
        {
            onClick: e,
            discover: t = 'render',
            prefetch: n = 'none',
            relative: i,
            reloadDocument: s,
            replace: o,
            state: a,
            target: l,
            to: u,
            preventScrollReset: f,
            viewTransition: d,
            ...m
        },
        v
    ) {
        let { basename: _ } = Y.useContext(Wa),
            S = typeof u == 'string' && mI.test(u),
            w,
            x = !1;
        if (typeof u == 'string' && S && ((w = u), pI))
            try {
                let I = new URL(window.location.href),
                    U = u.startsWith('//')
                        ? new URL(I.protocol + u)
                        : new URL(u),
                    H = Mu(U.pathname, _);
                U.origin === I.origin && H != null
                    ? (u = H + U.search + U.hash)
                    : (x = !0);
            } catch {
                Ga(
                    !1,
                    `<Link to="${u}"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`
                );
            }
        let A = fV(u, { relative: i }),
            [T, b, P] = KV(n, m),
            L = r6(u, {
                replace: o,
                state: a,
                target: l,
                preventScrollReset: f,
                relative: i,
                viewTransition: d,
            });
        function D(I) {
            e && e(I), I.defaultPrevented || L(I);
        }
        let O = Y.createElement('a', {
            ...m,
            ...P,
            href: w || A,
            onClick: x || s ? e : D,
            ref: QV(v, b),
            target: l,
            'data-discover': !S && t === 'render' ? 'true' : void 0,
        });
        return T && !S
            ? Y.createElement(
                  Y.Fragment,
                  null,
                  O,
                  Y.createElement(ZV, { page: A })
              )
            : O;
    });
qE.displayName = 'Link';
var t6 = Y.forwardRef(function (
    {
        'aria-current': e = 'page',
        caseSensitive: t = !1,
        className: n = '',
        end: i = !1,
        style: s,
        to: o,
        viewTransition: a,
        children: l,
        ...u
    },
    f
) {
    let d = V0(o, { relative: u.relative }),
        m = Nc(),
        v = Y.useContext(bx),
        { navigator: _, basename: S } = Y.useContext(Wa),
        w = v != null && u6(d) && a === !0,
        x = _.encodeLocation ? _.encodeLocation(d).pathname : d.pathname,
        A = m.pathname,
        T =
            v && v.navigation && v.navigation.location
                ? v.navigation.location.pathname
                : null;
    t ||
        ((A = A.toLowerCase()),
        (T = T ? T.toLowerCase() : null),
        (x = x.toLowerCase())),
        T && S && (T = Mu(T, S) || T);
    const b = x !== '/' && x.endsWith('/') ? x.length - 1 : x.length;
    let P = A === x || (!i && A.startsWith(x) && A.charAt(b) === '/'),
        L =
            T != null &&
            (T === x || (!i && T.startsWith(x) && T.charAt(x.length) === '/')),
        D = { isActive: P, isPending: L, isTransitioning: w },
        O = P ? e : void 0,
        I;
    typeof n == 'function'
        ? (I = n(D))
        : (I = [
              n,
              P ? 'active' : null,
              L ? 'pending' : null,
              w ? 'transitioning' : null,
          ]
              .filter(Boolean)
              .join(' '));
    let U = typeof s == 'function' ? s(D) : s;
    return Y.createElement(
        qE,
        {
            ...u,
            'aria-current': O,
            className: I,
            ref: f,
            style: U,
            to: o,
            viewTransition: a,
        },
        typeof l == 'function' ? l(D) : l
    );
});
t6.displayName = 'NavLink';
var n6 = Y.forwardRef(
    (
        {
            discover: r = 'render',
            fetcherKey: e,
            navigate: t,
            reloadDocument: n,
            replace: i,
            state: s,
            method: o = d_,
            action: a,
            onSubmit: l,
            relative: u,
            preventScrollReset: f,
            viewTransition: d,
            ...m
        },
        v
    ) => {
        let _ = a6(),
            S = l6(a, { relative: u }),
            w = o.toLowerCase() === 'get' ? 'get' : 'post',
            x = typeof a == 'string' && mI.test(a),
            A = (T) => {
                if ((l && l(T), T.defaultPrevented)) return;
                T.preventDefault();
                let b = T.nativeEvent.submitter,
                    P =
                        (b == null ? void 0 : b.getAttribute('formmethod')) ||
                        o;
                _(b || T.currentTarget, {
                    fetcherKey: e,
                    method: P,
                    navigate: t,
                    replace: i,
                    state: s,
                    relative: u,
                    preventScrollReset: f,
                    viewTransition: d,
                });
            };
        return Y.createElement('form', {
            ref: v,
            method: w,
            action: S,
            onSubmit: n ? l : A,
            ...m,
            'data-discover': !x && r === 'render' ? 'true' : void 0,
        });
    }
);
n6.displayName = 'Form';
function i6(r) {
    return `${r} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;
}
function gI(r) {
    let e = Y.useContext(Bp);
    return Ei(e, i6(r)), e;
}
function r6(
    r,
    {
        target: e,
        replace: t,
        state: n,
        preventScrollReset: i,
        relative: s,
        viewTransition: o,
    } = {}
) {
    let a = uI(),
        l = Nc(),
        u = V0(r, { relative: s });
    return Y.useCallback(
        (f) => {
            if (UV(f, e)) {
                f.preventDefault();
                let d = t !== void 0 ? t : r0(l) === r0(u);
                a(r, {
                    replace: d,
                    state: n,
                    preventScrollReset: i,
                    relative: s,
                    viewTransition: o,
                });
            }
        },
        [l, a, u, t, n, e, r, i, s, o]
    );
}
var s6 = 0,
    o6 = () => `__${String(++s6)}__`;
function a6() {
    let { router: r } = gI('useSubmit'),
        { basename: e } = Y.useContext(Wa),
        t = EV();
    return Y.useCallback(
        async (n, i = {}) => {
            let {
                action: s,
                method: o,
                encType: a,
                formData: l,
                body: u,
            } = FV(n, e);
            if (i.navigate === !1) {
                let f = i.fetcherKey || o6();
                await r.fetch(f, t, i.action || s, {
                    preventScrollReset: i.preventScrollReset,
                    formData: l,
                    body: u,
                    formMethod: i.method || o,
                    formEncType: i.encType || a,
                    flushSync: i.flushSync,
                });
            } else
                await r.navigate(i.action || s, {
                    preventScrollReset: i.preventScrollReset,
                    formData: l,
                    body: u,
                    formMethod: i.method || o,
                    formEncType: i.encType || a,
                    replace: i.replace,
                    state: i.state,
                    fromRouteId: t,
                    flushSync: i.flushSync,
                    viewTransition: i.viewTransition,
                });
        },
        [r, e, t]
    );
}
function l6(r, { relative: e } = {}) {
    let { basename: t } = Y.useContext(Wa),
        n = Y.useContext(ia);
    Ei(n, 'useFormAction must be used inside a RouteContext');
    let [i] = n.matches.slice(-1),
        s = { ...V0(r || '.', { relative: e }) },
        o = Nc();
    if (r == null) {
        s.search = o.search;
        let a = new URLSearchParams(s.search),
            l = a.getAll('index');
        if (l.some((f) => f === '')) {
            a.delete('index'),
                l.filter((d) => d).forEach((d) => a.append('index', d));
            let f = a.toString();
            s.search = f ? `?${f}` : '';
        }
    }
    return (
        (!r || r === '.') &&
            i.route.index &&
            (s.search = s.search
                ? s.search.replace(/^\?/, '?index&')
                : '?index'),
        t !== '/' &&
            (s.pathname = s.pathname === '/' ? t : xu([t, s.pathname])),
        r0(s)
    );
}
function u6(r, e = {}) {
    let t = Y.useContext(oI);
    Ei(
        t != null,
        "`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?"
    );
    let { basename: n } = gI('useViewTransitionState'),
        i = V0(r, { relative: e.relative });
    if (!t.isTransitioning) return !1;
    let s = Mu(t.currentLocation.pathname, n) || t.currentLocation.pathname,
        o = Mu(t.nextLocation.pathname, n) || t.nextLocation.pathname;
    return C_(i.pathname, o) != null || C_(i.pathname, s) != null;
}
[...XV];
const c6 = () => {
    const [r, e] = Y.useState(!1),
        [t, n] = Y.useState(!1);
    Y.useEffect(() => {
        const s = () => {
                e(!0), n(!0), setTimeout(() => n(!1), 3e3);
            },
            o = () => {
                e(!1), n(!0);
            };
        return (
            window.addEventListener('online', s),
            window.addEventListener('offline', o),
            () => {
                window.removeEventListener('online', s),
                    window.removeEventListener('offline', o);
            }
        );
    }, []);
    const i = () => {
        n(!1);
    };
    return t
        ? we.jsx(we.Fragment, {
              children: we.jsxs('div', {
                  className: `ConnectionStatus ${r ? 'online' : 'offline'} font-poppins z-50 outline outline-offset-2 outline-slate-200`,
                  children: [
                      we.jsx('div', { className: 'close-button', onClick: i }),
                      r
                          ? we.jsxs('div', {
                                children: [
                                    we.jsx('h1', {
                                        children: 'Connexion rétablie',
                                    }),
                                    we.jsx('p', {
                                        children:
                                            'Votre connexion internet est rétablie.',
                                    }),
                                ],
                            })
                          : we.jsxs('div', {
                                children: [
                                    we.jsx('a', {
                                        className: 'rounded-xl',
                                        href: 'https://icons8.com/illustrations/author/7WmtYU90j36d',
                                        children: 'Illustration by Fruzka',
                                    }),
                                    we.jsx('h1', {
                                        children: "Pas d'accès Internet",
                                    }),
                                    we.jsx('p', {
                                        children:
                                            "Il semble que vous n'ayez actuellement pas accès à Internet. Nous vous recommandons de vérifier votre connexion Internet.",
                                    }),
                                ],
                            }),
                  ],
              }),
          })
        : null;
};
function mu(r) {
    if (r === void 0)
        throw new ReferenceError(
            "this hasn't been initialised - super() hasn't been called"
        );
    return r;
}
function vI(r, e) {
    (r.prototype = Object.create(e.prototype)),
        (r.prototype.constructor = r),
        (r.__proto__ = e);
}
/*!
 * GSAP 3.13.0
 * https://gsap.com
 *
 * @license Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license
 * @author: Jack Doyle, jack@greensock.com
 */ var Co = {
        autoSleep: 120,
        force3D: 'auto',
        nullTargetWarn: 1,
        units: { lineHeight: '' },
    },
    Mp = { duration: 0.5, overwrite: !1, delay: 0 },
    KE,
    Zr,
    Mi,
    Tl = 1e8,
    hs = 1 / Tl,
    aM = Math.PI * 2,
    f6 = aM / 4,
    h6 = 0,
    yI = Math.sqrt,
    d6 = Math.cos,
    p6 = Math.sin,
    Br = function (e) {
        return typeof e == 'string';
    },
    Hi = function (e) {
        return typeof e == 'function';
    },
    Eu = function (e) {
        return typeof e == 'number';
    },
    ZE = function (e) {
        return typeof e > 'u';
    },
    Rl = function (e) {
        return typeof e == 'object';
    },
    eo = function (e) {
        return e !== !1;
    },
    $E = function () {
        return typeof window < 'u';
    },
    iy = function (e) {
        return Hi(e) || Br(e);
    },
    _I =
        (typeof ArrayBuffer == 'function' && ArrayBuffer.isView) ||
        function () {},
    ds = Array.isArray,
    lM = /(?:-?\.?\d|\.)+/gi,
    xI = /[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g,
    rp = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g,
    hS = /[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi,
    SI = /[+-]=-?[.\d]+/,
    wI = /[^,'"\[\]\s]+/gi,
    m6 = /^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i,
    Ri,
    vl,
    uM,
    JE,
    Lo = {},
    P_ = {},
    MI,
    EI = function (e) {
        return (P_ = Ep(e, Lo)) && ro;
    },
    QE = function (e, t) {
        return console.warn(
            'Invalid property',
            e,
            'set to',
            t,
            'Missing plugin? gsap.registerPlugin()'
        );
    },
    s0 = function (e, t) {
        return !t && console.warn(e);
    },
    TI = function (e, t) {
        return (e && (Lo[e] = t) && P_ && (P_[e] = t)) || Lo;
    },
    o0 = function () {
        return 0;
    },
    g6 = { suppressEvents: !0, isStart: !0, kill: !1 },
    m_ = { suppressEvents: !0, kill: !1 },
    v6 = { suppressEvents: !0 },
    eT = {},
    Mc = [],
    cM = {},
    AI,
    wo = {},
    dS = {},
    MC = 30,
    g_ = [],
    tT = '',
    nT = function (e) {
        var t = e[0],
            n,
            i;
        if ((Rl(t) || Hi(t) || (e = [e]), !(n = (t._gsap || {}).harness))) {
            for (i = g_.length; i-- && !g_[i].targetTest(t); );
            n = g_[i];
        }
        for (i = e.length; i--; )
            (e[i] && (e[i]._gsap || (e[i]._gsap = new ZI(e[i], n)))) ||
                e.splice(i, 1);
        return e;
    },
    rh = function (e) {
        return e._gsap || nT(Qo(e))[0]._gsap;
    },
    bI = function (e, t, n) {
        return (n = e[t]) && Hi(n)
            ? e[t]()
            : (ZE(n) && e.getAttribute && e.getAttribute(t)) || n;
    },
    to = function (e, t) {
        return (e = e.split(',')).forEach(t) || e;
    },
    $i = function (e) {
        return Math.round(e * 1e5) / 1e5 || 0;
    },
    dr = function (e) {
        return Math.round(e * 1e7) / 1e7 || 0;
    },
    dp = function (e, t) {
        var n = t.charAt(0),
            i = parseFloat(t.substr(2));
        return (
            (e = parseFloat(e)),
            n === '+' ? e + i : n === '-' ? e - i : n === '*' ? e * i : e / i
        );
    },
    y6 = function (e, t) {
        for (var n = t.length, i = 0; e.indexOf(t[i]) < 0 && ++i < n; );
        return i < n;
    },
    L_ = function () {
        var e = Mc.length,
            t = Mc.slice(0),
            n,
            i;
        for (cM = {}, Mc.length = 0, n = 0; n < e; n++)
            (i = t[n]),
                i &&
                    i._lazy &&
                    (i.render(i._lazy[0], i._lazy[1], !0)._lazy = 0);
    },
    iT = function (e) {
        return !!(e._initted || e._startAt || e.add);
    },
    CI = function (e, t, n, i) {
        Mc.length && !Zr && L_(),
            e.render(t, n, !!(Zr && t < 0 && iT(e))),
            Mc.length && !Zr && L_();
    },
    RI = function (e) {
        var t = parseFloat(e);
        return (t || t === 0) && (e + '').match(wI).length < 2
            ? t
            : Br(e)
              ? e.trim()
              : e;
    },
    PI = function (e) {
        return e;
    },
    Io = function (e, t) {
        for (var n in t) n in e || (e[n] = t[n]);
        return e;
    },
    _6 = function (e) {
        return function (t, n) {
            for (var i in n)
                i in t ||
                    (i === 'duration' && e) ||
                    i === 'ease' ||
                    (t[i] = n[i]);
        };
    },
    Ep = function (e, t) {
        for (var n in t) e[n] = t[n];
        return e;
    },
    EC = function r(e, t) {
        for (var n in t)
            n !== '__proto__' &&
                n !== 'constructor' &&
                n !== 'prototype' &&
                (e[n] = Rl(t[n]) ? r(e[n] || (e[n] = {}), t[n]) : t[n]);
        return e;
    },
    I_ = function (e, t) {
        var n = {},
            i;
        for (i in e) i in t || (n[i] = e[i]);
        return n;
    },
    Ig = function (e) {
        var t = e.parent || Ri,
            n = e.keyframes ? _6(ds(e.keyframes)) : Io;
        if (eo(e.inherit))
            for (; t; ) n(e, t.vars.defaults), (t = t.parent || t._dp);
        return e;
    },
    x6 = function (e, t) {
        for (var n = e.length, i = n === t.length; i && n-- && e[n] === t[n]; );
        return n < 0;
    },
    LI = function (e, t, n, i, s) {
        var o = e[i],
            a;
        if (s) for (a = t[s]; o && o[s] > a; ) o = o._prev;
        return (
            o
                ? ((t._next = o._next), (o._next = t))
                : ((t._next = e[n]), (e[n] = t)),
            t._next ? (t._next._prev = t) : (e[i] = t),
            (t._prev = o),
            (t.parent = t._dp = e),
            t
        );
    },
    Rx = function (e, t, n, i) {
        n === void 0 && (n = '_first'), i === void 0 && (i = '_last');
        var s = t._prev,
            o = t._next;
        s ? (s._next = o) : e[n] === t && (e[n] = o),
            o ? (o._prev = s) : e[i] === t && (e[i] = s),
            (t._next = t._prev = t.parent = null);
    },
    Rc = function (e, t) {
        e.parent &&
            (!t || e.parent.autoRemoveChildren) &&
            e.parent.remove &&
            e.parent.remove(e),
            (e._act = 0);
    },
    sh = function (e, t) {
        if (e && (!t || t._end > e._dur || t._start < 0))
            for (var n = e; n; ) (n._dirty = 1), (n = n.parent);
        return e;
    },
    S6 = function (e) {
        for (var t = e.parent; t && t.parent; )
            (t._dirty = 1), t.totalDuration(), (t = t.parent);
        return e;
    },
    fM = function (e, t, n, i) {
        return (
            e._startAt &&
            (Zr
                ? e._startAt.revert(m_)
                : (e.vars.immediateRender && !e.vars.autoRevert) ||
                  e._startAt.render(t, !0, i))
        );
    },
    w6 = function r(e) {
        return !e || (e._ts && r(e.parent));
    },
    TC = function (e) {
        return e._repeat ? Tp(e._tTime, (e = e.duration() + e._rDelay)) * e : 0;
    },
    Tp = function (e, t) {
        var n = Math.floor((e = dr(e / t)));
        return e && n === e ? n - 1 : n;
    },
    D_ = function (e, t) {
        return (
            (e - t._start) * t._ts +
            (t._ts >= 0 ? 0 : t._dirty ? t.totalDuration() : t._tDur)
        );
    },
    Px = function (e) {
        return (e._end = dr(
            e._start + (e._tDur / Math.abs(e._ts || e._rts || hs) || 0)
        ));
    },
    Lx = function (e, t) {
        var n = e._dp;
        return (
            n &&
                n.smoothChildTiming &&
                e._ts &&
                ((e._start = dr(
                    n._time -
                        (e._ts > 0
                            ? t / e._ts
                            : ((e._dirty ? e.totalDuration() : e._tDur) - t) /
                              -e._ts)
                )),
                Px(e),
                n._dirty || sh(n, e)),
            e
        );
    },
    II = function (e, t) {
        var n;
        if (
            ((t._time ||
                (!t._dur && t._initted) ||
                (t._start < e._time && (t._dur || !t.add))) &&
                ((n = D_(e.rawTime(), t)),
                (!t._dur || H0(0, t.totalDuration(), n) - t._tTime > hs) &&
                    t.render(n, !0)),
            sh(e, t)._dp && e._initted && e._time >= e._dur && e._ts)
        ) {
            if (e._dur < e.duration())
                for (n = e; n._dp; )
                    n.rawTime() >= 0 && n.totalTime(n._tTime), (n = n._dp);
            e._zTime = -1e-8;
        }
    },
    yl = function (e, t, n, i) {
        return (
            t.parent && Rc(t),
            (t._start = dr(
                (Eu(n) ? n : n || e !== Ri ? $o(e, n, t) : e._time) + t._delay
            )),
            (t._end = dr(
                t._start + (t.totalDuration() / Math.abs(t.timeScale()) || 0)
            )),
            LI(e, t, '_first', '_last', e._sort ? '_start' : 0),
            hM(t) || (e._recent = t),
            i || II(e, t),
            e._ts < 0 && Lx(e, e._tTime),
            e
        );
    },
    DI = function (e, t) {
        return (
            (Lo.ScrollTrigger || QE('scrollTrigger', t)) &&
            Lo.ScrollTrigger.create(t, e)
        );
    },
    OI = function (e, t, n, i, s) {
        if ((sT(e, t, s), !e._initted)) return 1;
        if (
            !n &&
            e._pt &&
            !Zr &&
            ((e._dur && e.vars.lazy !== !1) || (!e._dur && e.vars.lazy)) &&
            AI !== Eo.frame
        )
            return Mc.push(e), (e._lazy = [s, i]), 1;
    },
    M6 = function r(e) {
        var t = e.parent;
        return (
            t && t._ts && t._initted && !t._lock && (t.rawTime() < 0 || r(t))
        );
    },
    hM = function (e) {
        var t = e.data;
        return t === 'isFromStart' || t === 'isStart';
    },
    E6 = function (e, t, n, i) {
        var s = e.ratio,
            o =
                t < 0 ||
                (!t &&
                    ((!e._start && M6(e) && !(!e._initted && hM(e))) ||
                        ((e._ts < 0 || e._dp._ts < 0) && !hM(e))))
                    ? 0
                    : 1,
            a = e._rDelay,
            l = 0,
            u,
            f,
            d;
        if (
            (a &&
                e._repeat &&
                ((l = H0(0, e._tDur, t)),
                (f = Tp(l, a)),
                e._yoyo && f & 1 && (o = 1 - o),
                f !== Tp(e._tTime, a) &&
                    ((s = 1 - o),
                    e.vars.repeatRefresh && e._initted && e.invalidate())),
            o !== s || Zr || i || e._zTime === hs || (!t && e._zTime))
        ) {
            if (!e._initted && OI(e, t, i, n, l)) return;
            for (
                d = e._zTime,
                    e._zTime = t || (n ? hs : 0),
                    n || (n = t && !d),
                    e.ratio = o,
                    e._from && (o = 1 - o),
                    e._time = 0,
                    e._tTime = l,
                    u = e._pt;
                u;

            )
                u.r(o, u.d), (u = u._next);
            t < 0 && fM(e, t, n, !0),
                e._onUpdate && !n && bo(e, 'onUpdate'),
                l && e._repeat && !n && e.parent && bo(e, 'onRepeat'),
                (t >= e._tDur || t < 0) &&
                    e.ratio === o &&
                    (o && Rc(e, 1),
                    !n &&
                        !Zr &&
                        (bo(e, o ? 'onComplete' : 'onReverseComplete', !0),
                        e._prom && e._prom()));
        } else e._zTime || (e._zTime = t);
    },
    T6 = function (e, t, n) {
        var i;
        if (n > t)
            for (i = e._first; i && i._start <= n; ) {
                if (i.data === 'isPause' && i._start > t) return i;
                i = i._next;
            }
        else
            for (i = e._last; i && i._start >= n; ) {
                if (i.data === 'isPause' && i._start < t) return i;
                i = i._prev;
            }
    },
    Ap = function (e, t, n, i) {
        var s = e._repeat,
            o = dr(t) || 0,
            a = e._tTime / e._tDur;
        return (
            a && !i && (e._time *= o / e._dur),
            (e._dur = o),
            (e._tDur = s
                ? s < 0
                    ? 1e10
                    : dr(o * (s + 1) + e._rDelay * s)
                : o),
            a > 0 && !i && Lx(e, (e._tTime = e._tDur * a)),
            e.parent && Px(e),
            n || sh(e.parent, e),
            e
        );
    },
    AC = function (e) {
        return e instanceof Ds ? sh(e) : Ap(e, e._dur);
    },
    A6 = { _start: 0, endTime: o0, totalDuration: o0 },
    $o = function r(e, t, n) {
        var i = e.labels,
            s = e._recent || A6,
            o = e.duration() >= Tl ? s.endTime(!1) : e._dur,
            a,
            l,
            u;
        return Br(t) && (isNaN(t) || t in i)
            ? ((l = t.charAt(0)),
              (u = t.substr(-1) === '%'),
              (a = t.indexOf('=')),
              l === '<' || l === '>'
                  ? (a >= 0 && (t = t.replace(/=/, '')),
                    (l === '<' ? s._start : s.endTime(s._repeat >= 0)) +
                        (parseFloat(t.substr(1)) || 0) *
                            (u ? (a < 0 ? s : n).totalDuration() / 100 : 1))
                  : a < 0
                    ? (t in i || (i[t] = o), i[t])
                    : ((l = parseFloat(t.charAt(a - 1) + t.substr(a + 1))),
                      u &&
                          n &&
                          (l = (l / 100) * (ds(n) ? n[0] : n).totalDuration()),
                      a > 1 ? r(e, t.substr(0, a - 1), n) + l : o + l))
            : t == null
              ? o
              : +t;
    },
    Dg = function (e, t, n) {
        var i = Eu(t[1]),
            s = (i ? 2 : 1) + (e < 2 ? 0 : 1),
            o = t[s],
            a,
            l;
        if ((i && (o.duration = t[1]), (o.parent = n), e)) {
            for (a = o, l = n; l && !('immediateRender' in a); )
                (a = l.vars.defaults || {}),
                    (l = eo(l.vars.inherit) && l.parent);
            (o.immediateRender = eo(a.immediateRender)),
                e < 2 ? (o.runBackwards = 1) : (o.startAt = t[s - 1]);
        }
        return new hr(t[0], o, t[s + 1]);
    },
    Fc = function (e, t) {
        return e || e === 0 ? t(e) : t;
    },
    H0 = function (e, t, n) {
        return n < e ? e : n > t ? t : n;
    },
    cs = function (e, t) {
        return !Br(e) || !(t = m6.exec(e)) ? '' : t[1];
    },
    b6 = function (e, t, n) {
        return Fc(n, function (i) {
            return H0(e, t, i);
        });
    },
    dM = [].slice,
    UI = function (e, t) {
        return (
            e &&
            Rl(e) &&
            'length' in e &&
            ((!t && !e.length) || (e.length - 1 in e && Rl(e[0]))) &&
            !e.nodeType &&
            e !== vl
        );
    },
    C6 = function (e, t, n) {
        return (
            n === void 0 && (n = []),
            e.forEach(function (i) {
                var s;
                return (Br(i) && !t) || UI(i, 1)
                    ? (s = n).push.apply(s, Qo(i))
                    : n.push(i);
            }) || n
        );
    },
    Qo = function (e, t, n) {
        return Mi && !t && Mi.selector
            ? Mi.selector(e)
            : Br(e) && !n && (uM || !bp())
              ? dM.call((t || JE).querySelectorAll(e), 0)
              : ds(e)
                ? C6(e, n)
                : UI(e)
                  ? dM.call(e, 0)
                  : e
                    ? [e]
                    : [];
    },
    pM = function (e) {
        return (
            (e = Qo(e)[0] || s0('Invalid scope') || {}),
            function (t) {
                var n = e.current || e.nativeElement || e;
                return Qo(
                    t,
                    n.querySelectorAll
                        ? n
                        : n === e
                          ? s0('Invalid scope') || JE.createElement('div')
                          : e
                );
            }
        );
    },
    kI = function (e) {
        return e.sort(function () {
            return 0.5 - Math.random();
        });
    },
    NI = function (e) {
        if (Hi(e)) return e;
        var t = Rl(e) ? e : { each: e },
            n = oh(t.ease),
            i = t.from || 0,
            s = parseFloat(t.base) || 0,
            o = {},
            a = i > 0 && i < 1,
            l = isNaN(i) || a,
            u = t.axis,
            f = i,
            d = i;
        return (
            Br(i)
                ? (f = d = { center: 0.5, edges: 0.5, end: 1 }[i] || 0)
                : !a && l && ((f = i[0]), (d = i[1])),
            function (m, v, _) {
                var S = (_ || t).length,
                    w = o[S],
                    x,
                    A,
                    T,
                    b,
                    P,
                    L,
                    D,
                    O,
                    I;
                if (!w) {
                    if (
                        ((I = t.grid === 'auto' ? 0 : (t.grid || [1, Tl])[1]),
                        !I)
                    ) {
                        for (
                            D = -1e8;
                            D < (D = _[I++].getBoundingClientRect().left) &&
                            I < S;

                        );
                        I < S && I--;
                    }
                    for (
                        w = o[S] = [],
                            x = l ? Math.min(I, S) * f - 0.5 : i % I,
                            A =
                                I === Tl
                                    ? 0
                                    : l
                                      ? (S * d) / I - 0.5
                                      : (i / I) | 0,
                            D = 0,
                            O = Tl,
                            L = 0;
                        L < S;
                        L++
                    )
                        (T = (L % I) - x),
                            (b = A - ((L / I) | 0)),
                            (w[L] = P =
                                u
                                    ? Math.abs(u === 'y' ? b : T)
                                    : yI(T * T + b * b)),
                            P > D && (D = P),
                            P < O && (O = P);
                    i === 'random' && kI(w),
                        (w.max = D - O),
                        (w.min = O),
                        (w.v = S =
                            (parseFloat(t.amount) ||
                                parseFloat(t.each) *
                                    (I > S
                                        ? S - 1
                                        : u
                                          ? u === 'y'
                                              ? S / I
                                              : I
                                          : Math.max(I, S / I)) ||
                                0) * (i === 'edges' ? -1 : 1)),
                        (w.b = S < 0 ? s - S : s),
                        (w.u = cs(t.amount || t.each) || 0),
                        (n = n && S < 0 ? YI(n) : n);
                }
                return (
                    (S = (w[m] - w.min) / w.max || 0),
                    dr(w.b + (n ? n(S) : S) * w.v) + w.u
                );
            }
        );
    },
    mM = function (e) {
        var t = Math.pow(10, ((e + '').split('.')[1] || '').length);
        return function (n) {
            var i = dr(Math.round(parseFloat(n) / e) * e * t);
            return (i - (i % 1)) / t + (Eu(n) ? 0 : cs(n));
        };
    },
    FI = function (e, t) {
        var n = ds(e),
            i,
            s;
        return (
            !n &&
                Rl(e) &&
                ((i = n = e.radius || Tl),
                e.values
                    ? ((e = Qo(e.values)), (s = !Eu(e[0])) && (i *= i))
                    : (e = mM(e.increment))),
            Fc(
                t,
                n
                    ? Hi(e)
                        ? function (o) {
                              return (s = e(o)), Math.abs(s - o) <= i ? s : o;
                          }
                        : function (o) {
                              for (
                                  var a = parseFloat(s ? o.x : o),
                                      l = parseFloat(s ? o.y : 0),
                                      u = Tl,
                                      f = 0,
                                      d = e.length,
                                      m,
                                      v;
                                  d--;

                              )
                                  s
                                      ? ((m = e[d].x - a),
                                        (v = e[d].y - l),
                                        (m = m * m + v * v))
                                      : (m = Math.abs(e[d] - a)),
                                      m < u && ((u = m), (f = d));
                              return (
                                  (f = !i || u <= i ? e[f] : o),
                                  s || f === o || Eu(o) ? f : f + cs(o)
                              );
                          }
                    : mM(e)
            )
        );
    },
    BI = function (e, t, n, i) {
        return Fc(ds(e) ? !t : n === !0 ? !!(n = 0) : !i, function () {
            return ds(e)
                ? e[~~(Math.random() * e.length)]
                : (n = n || 1e-5) &&
                      (i = n < 1 ? Math.pow(10, (n + '').length - 2) : 1) &&
                      Math.floor(
                          Math.round(
                              (e - n / 2 + Math.random() * (t - e + n * 0.99)) /
                                  n
                          ) *
                              n *
                              i
                      ) / i;
        });
    },
    R6 = function () {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
            t[n] = arguments[n];
        return function (i) {
            return t.reduce(function (s, o) {
                return o(s);
            }, i);
        };
    },
    P6 = function (e, t) {
        return function (n) {
            return e(parseFloat(n)) + (t || cs(n));
        };
    },
    L6 = function (e, t, n) {
        return VI(e, t, 0, 1, n);
    },
    zI = function (e, t, n) {
        return Fc(n, function (i) {
            return e[~~t(i)];
        });
    },
    I6 = function r(e, t, n) {
        var i = t - e;
        return ds(e)
            ? zI(e, r(0, e.length), t)
            : Fc(n, function (s) {
                  return ((i + ((s - e) % i)) % i) + e;
              });
    },
    D6 = function r(e, t, n) {
        var i = t - e,
            s = i * 2;
        return ds(e)
            ? zI(e, r(0, e.length - 1), t)
            : Fc(n, function (o) {
                  return (
                      (o = (s + ((o - e) % s)) % s || 0),
                      e + (o > i ? s - o : o)
                  );
              });
    },
    a0 = function (e) {
        for (var t = 0, n = '', i, s, o, a; ~(i = e.indexOf('random(', t)); )
            (o = e.indexOf(')', i)),
                (a = e.charAt(i + 7) === '['),
                (s = e.substr(i + 7, o - i - 7).match(a ? wI : lM)),
                (n +=
                    e.substr(t, i - t) +
                    BI(a ? s : +s[0], a ? 0 : +s[1], +s[2] || 1e-5)),
                (t = o + 1);
        return n + e.substr(t, e.length - t);
    },
    VI = function (e, t, n, i, s) {
        var o = t - e,
            a = i - n;
        return Fc(s, function (l) {
            return n + (((l - e) / o) * a || 0);
        });
    },
    O6 = function r(e, t, n, i) {
        var s = isNaN(e + t)
            ? 0
            : function (v) {
                  return (1 - v) * e + v * t;
              };
        if (!s) {
            var o = Br(e),
                a = {},
                l,
                u,
                f,
                d,
                m;
            if ((n === !0 && (i = 1) && (n = null), o))
                (e = { p: e }), (t = { p: t });
            else if (ds(e) && !ds(t)) {
                for (f = [], d = e.length, m = d - 2, u = 1; u < d; u++)
                    f.push(r(e[u - 1], e[u]));
                d--,
                    (s = function (_) {
                        _ *= d;
                        var S = Math.min(m, ~~_);
                        return f[S](_ - S);
                    }),
                    (n = t);
            } else i || (e = Ep(ds(e) ? [] : {}, e));
            if (!f) {
                for (l in t) rT.call(a, e, l, 'get', t[l]);
                s = function (_) {
                    return lT(_, a) || (o ? e.p : e);
                };
            }
        }
        return Fc(n, s);
    },
    bC = function (e, t, n) {
        var i = e.labels,
            s = Tl,
            o,
            a,
            l;
        for (o in i)
            (a = i[o] - t),
                a < 0 == !!n &&
                    a &&
                    s > (a = Math.abs(a)) &&
                    ((l = o), (s = a));
        return l;
    },
    bo = function (e, t, n) {
        var i = e.vars,
            s = i[t],
            o = Mi,
            a = e._ctx,
            l,
            u,
            f;
        if (s)
            return (
                (l = i[t + 'Params']),
                (u = i.callbackScope || e),
                n && Mc.length && L_(),
                a && (Mi = a),
                (f = l ? s.apply(u, l) : s.call(u)),
                (Mi = o),
                f
            );
    },
    Sg = function (e) {
        return (
            Rc(e),
            e.scrollTrigger && e.scrollTrigger.kill(!!Zr),
            e.progress() < 1 && bo(e, 'onInterrupt'),
            e
        );
    },
    sp,
    HI = [],
    GI = function (e) {
        if (e)
            if (((e = (!e.name && e.default) || e), $E() || e.headless)) {
                var t = e.name,
                    n = Hi(e),
                    i =
                        t && !n && e.init
                            ? function () {
                                  this._props = [];
                              }
                            : e,
                    s = {
                        init: o0,
                        render: lT,
                        add: rT,
                        kill: Z6,
                        modifier: K6,
                        rawVars: 0,
                    },
                    o = {
                        targetTest: 0,
                        get: 0,
                        getSetter: aT,
                        aliases: {},
                        register: 0,
                    };
                if ((bp(), e !== i)) {
                    if (wo[t]) return;
                    Io(i, Io(I_(e, s), o)),
                        Ep(i.prototype, Ep(s, I_(e, o))),
                        (wo[(i.prop = t)] = i),
                        e.targetTest && (g_.push(i), (eT[t] = 1)),
                        (t =
                            (t === 'css'
                                ? 'CSS'
                                : t.charAt(0).toUpperCase() + t.substr(1)) +
                            'Plugin');
                }
                TI(t, i), e.register && e.register(ro, i, no);
            } else HI.push(e);
    },
    ii = 255,
    wg = {
        aqua: [0, ii, ii],
        lime: [0, ii, 0],
        silver: [192, 192, 192],
        black: [0, 0, 0],
        maroon: [128, 0, 0],
        teal: [0, 128, 128],
        blue: [0, 0, ii],
        navy: [0, 0, 128],
        white: [ii, ii, ii],
        olive: [128, 128, 0],
        yellow: [ii, ii, 0],
        orange: [ii, 165, 0],
        gray: [128, 128, 128],
        purple: [128, 0, 128],
        green: [0, 128, 0],
        red: [ii, 0, 0],
        pink: [ii, 192, 203],
        cyan: [0, ii, ii],
        transparent: [ii, ii, ii, 0],
    },
    pS = function (e, t, n) {
        return (
            (e += e < 0 ? 1 : e > 1 ? -1 : 0),
            ((e * 6 < 1
                ? t + (n - t) * e * 6
                : e < 0.5
                  ? n
                  : e * 3 < 2
                    ? t + (n - t) * (2 / 3 - e) * 6
                    : t) *
                ii +
                0.5) |
                0
        );
    },
    WI = function (e, t, n) {
        var i = e ? (Eu(e) ? [e >> 16, (e >> 8) & ii, e & ii] : 0) : wg.black,
            s,
            o,
            a,
            l,
            u,
            f,
            d,
            m,
            v,
            _;
        if (!i) {
            if (
                (e.substr(-1) === ',' && (e = e.substr(0, e.length - 1)), wg[e])
            )
                i = wg[e];
            else if (e.charAt(0) === '#') {
                if (
                    (e.length < 6 &&
                        ((s = e.charAt(1)),
                        (o = e.charAt(2)),
                        (a = e.charAt(3)),
                        (e =
                            '#' +
                            s +
                            s +
                            o +
                            o +
                            a +
                            a +
                            (e.length === 5 ? e.charAt(4) + e.charAt(4) : ''))),
                    e.length === 9)
                )
                    return (
                        (i = parseInt(e.substr(1, 6), 16)),
                        [
                            i >> 16,
                            (i >> 8) & ii,
                            i & ii,
                            parseInt(e.substr(7), 16) / 255,
                        ]
                    );
                (e = parseInt(e.substr(1), 16)),
                    (i = [e >> 16, (e >> 8) & ii, e & ii]);
            } else if (e.substr(0, 3) === 'hsl') {
                if (((i = _ = e.match(lM)), !t))
                    (l = (+i[0] % 360) / 360),
                        (u = +i[1] / 100),
                        (f = +i[2] / 100),
                        (o = f <= 0.5 ? f * (u + 1) : f + u - f * u),
                        (s = f * 2 - o),
                        i.length > 3 && (i[3] *= 1),
                        (i[0] = pS(l + 1 / 3, s, o)),
                        (i[1] = pS(l, s, o)),
                        (i[2] = pS(l - 1 / 3, s, o));
                else if (~e.indexOf('='))
                    return (
                        (i = e.match(xI)), n && i.length < 4 && (i[3] = 1), i
                    );
            } else i = e.match(lM) || wg.transparent;
            i = i.map(Number);
        }
        return (
            t &&
                !_ &&
                ((s = i[0] / ii),
                (o = i[1] / ii),
                (a = i[2] / ii),
                (d = Math.max(s, o, a)),
                (m = Math.min(s, o, a)),
                (f = (d + m) / 2),
                d === m
                    ? (l = u = 0)
                    : ((v = d - m),
                      (u = f > 0.5 ? v / (2 - d - m) : v / (d + m)),
                      (l =
                          d === s
                              ? (o - a) / v + (o < a ? 6 : 0)
                              : d === o
                                ? (a - s) / v + 2
                                : (s - o) / v + 4),
                      (l *= 60)),
                (i[0] = ~~(l + 0.5)),
                (i[1] = ~~(u * 100 + 0.5)),
                (i[2] = ~~(f * 100 + 0.5))),
            n && i.length < 4 && (i[3] = 1),
            i
        );
    },
    jI = function (e) {
        var t = [],
            n = [],
            i = -1;
        return (
            e.split(Ec).forEach(function (s) {
                var o = s.match(rp) || [];
                t.push.apply(t, o), n.push((i += o.length + 1));
            }),
            (t.c = n),
            t
        );
    },
    CC = function (e, t, n) {
        var i = '',
            s = (e + i).match(Ec),
            o = t ? 'hsla(' : 'rgba(',
            a = 0,
            l,
            u,
            f,
            d;
        if (!s) return e;
        if (
            ((s = s.map(function (m) {
                return (
                    (m = WI(m, t, 1)) &&
                    o +
                        (t
                            ? m[0] + ',' + m[1] + '%,' + m[2] + '%,' + m[3]
                            : m.join(',')) +
                        ')'
                );
            })),
            n && ((f = jI(e)), (l = n.c), l.join(i) !== f.c.join(i)))
        )
            for (u = e.replace(Ec, '1').split(rp), d = u.length - 1; a < d; a++)
                i +=
                    u[a] +
                    (~l.indexOf(a)
                        ? s.shift() || o + '0,0,0,0)'
                        : (f.length ? f : s.length ? s : n).shift());
        if (!u)
            for (u = e.split(Ec), d = u.length - 1; a < d; a++)
                i += u[a] + s[a];
        return i + u[d];
    },
    Ec = (function () {
        var r =
                '(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b',
            e;
        for (e in wg) r += '|' + e + '\\b';
        return new RegExp(r + ')', 'gi');
    })(),
    U6 = /hsl[a]?\(/,
    XI = function (e) {
        var t = e.join(' '),
            n;
        if (((Ec.lastIndex = 0), Ec.test(t)))
            return (
                (n = U6.test(t)),
                (e[1] = CC(e[1], n)),
                (e[0] = CC(e[0], n, jI(e[1]))),
                !0
            );
    },
    l0,
    Eo = (function () {
        var r = Date.now,
            e = 500,
            t = 33,
            n = r(),
            i = n,
            s = 1e3 / 240,
            o = s,
            a = [],
            l,
            u,
            f,
            d,
            m,
            v,
            _ = function S(w) {
                var x = r() - i,
                    A = w === !0,
                    T,
                    b,
                    P,
                    L;
                if (
                    ((x > e || x < 0) && (n += x - t),
                    (i += x),
                    (P = i - n),
                    (T = P - o),
                    (T > 0 || A) &&
                        ((L = ++d.frame),
                        (m = P - d.time * 1e3),
                        (d.time = P = P / 1e3),
                        (o += T + (T >= s ? 4 : s - T)),
                        (b = 1)),
                    A || (l = u(S)),
                    b)
                )
                    for (v = 0; v < a.length; v++) a[v](P, m, L, w);
            };
        return (
            (d = {
                time: 0,
                frame: 0,
                tick: function () {
                    _(!0);
                },
                deltaRatio: function (w) {
                    return m / (1e3 / (w || 60));
                },
                wake: function () {
                    MI &&
                        (!uM &&
                            $E() &&
                            ((vl = uM = window),
                            (JE = vl.document || {}),
                            (Lo.gsap = ro),
                            (vl.gsapVersions || (vl.gsapVersions = [])).push(
                                ro.version
                            ),
                            EI(
                                P_ ||
                                    vl.GreenSockGlobals ||
                                    (!vl.gsap && vl) ||
                                    {}
                            ),
                            HI.forEach(GI)),
                        (f =
                            typeof requestAnimationFrame < 'u' &&
                            requestAnimationFrame),
                        l && d.sleep(),
                        (u =
                            f ||
                            function (w) {
                                return setTimeout(
                                    w,
                                    (o - d.time * 1e3 + 1) | 0
                                );
                            }),
                        (l0 = 1),
                        _(2));
                },
                sleep: function () {
                    (f ? cancelAnimationFrame : clearTimeout)(l),
                        (l0 = 0),
                        (u = o0);
                },
                lagSmoothing: function (w, x) {
                    (e = w || 1 / 0), (t = Math.min(x || 33, e));
                },
                fps: function (w) {
                    (s = 1e3 / (w || 240)), (o = d.time * 1e3 + s);
                },
                add: function (w, x, A) {
                    var T = x
                        ? function (b, P, L, D) {
                              w(b, P, L, D), d.remove(T);
                          }
                        : w;
                    return d.remove(w), a[A ? 'unshift' : 'push'](T), bp(), T;
                },
                remove: function (w, x) {
                    ~(x = a.indexOf(w)) && a.splice(x, 1) && v >= x && v--;
                },
                _listeners: a,
            }),
            d
        );
    })(),
    bp = function () {
        return !l0 && Eo.wake();
    },
    Rn = {},
    k6 = /^[\d.\-M][\d.\-,\s]/,
    N6 = /["']/g,
    F6 = function (e) {
        for (
            var t = {},
                n = e.substr(1, e.length - 3).split(':'),
                i = n[0],
                s = 1,
                o = n.length,
                a,
                l,
                u;
            s < o;
            s++
        )
            (l = n[s]),
                (a = s !== o - 1 ? l.lastIndexOf(',') : l.length),
                (u = l.substr(0, a)),
                (t[i] = isNaN(u) ? u.replace(N6, '').trim() : +u),
                (i = l.substr(a + 1).trim());
        return t;
    },
    B6 = function (e) {
        var t = e.indexOf('(') + 1,
            n = e.indexOf(')'),
            i = e.indexOf('(', t);
        return e.substring(t, ~i && i < n ? e.indexOf(')', n + 1) : n);
    },
    z6 = function (e) {
        var t = (e + '').split('('),
            n = Rn[t[0]];
        return n && t.length > 1 && n.config
            ? n.config.apply(
                  null,
                  ~e.indexOf('{') ? [F6(t[1])] : B6(e).split(',').map(RI)
              )
            : Rn._CE && k6.test(e)
              ? Rn._CE('', e)
              : n;
    },
    YI = function (e) {
        return function (t) {
            return 1 - e(1 - t);
        };
    },
    qI = function r(e, t) {
        for (var n = e._first, i; n; )
            n instanceof Ds
                ? r(n, t)
                : n.vars.yoyoEase &&
                  (!n._yoyo || !n._repeat) &&
                  n._yoyo !== t &&
                  (n.timeline
                      ? r(n.timeline, t)
                      : ((i = n._ease),
                        (n._ease = n._yEase),
                        (n._yEase = i),
                        (n._yoyo = t))),
                (n = n._next);
    },
    oh = function (e, t) {
        return (e && (Hi(e) ? e : Rn[e] || z6(e))) || t;
    },
    Sh = function (e, t, n, i) {
        n === void 0 &&
            (n = function (l) {
                return 1 - t(1 - l);
            }),
            i === void 0 &&
                (i = function (l) {
                    return l < 0.5 ? t(l * 2) / 2 : 1 - t((1 - l) * 2) / 2;
                });
        var s = { easeIn: t, easeOut: n, easeInOut: i },
            o;
        return (
            to(e, function (a) {
                (Rn[a] = Lo[a] = s), (Rn[(o = a.toLowerCase())] = n);
                for (var l in s)
                    Rn[
                        o +
                            (l === 'easeIn'
                                ? '.in'
                                : l === 'easeOut'
                                  ? '.out'
                                  : '.inOut')
                    ] = Rn[a + '.' + l] = s[l];
            }),
            s
        );
    },
    KI = function (e) {
        return function (t) {
            return t < 0.5
                ? (1 - e(1 - t * 2)) / 2
                : 0.5 + e((t - 0.5) * 2) / 2;
        };
    },
    mS = function r(e, t, n) {
        var i = t >= 1 ? t : 1,
            s = (n || (e ? 0.3 : 0.45)) / (t < 1 ? t : 1),
            o = (s / aM) * (Math.asin(1 / i) || 0),
            a = function (f) {
                return f === 1
                    ? 1
                    : i * Math.pow(2, -10 * f) * p6((f - o) * s) + 1;
            },
            l =
                e === 'out'
                    ? a
                    : e === 'in'
                      ? function (u) {
                            return 1 - a(1 - u);
                        }
                      : KI(a);
        return (
            (s = aM / s),
            (l.config = function (u, f) {
                return r(e, u, f);
            }),
            l
        );
    },
    gS = function r(e, t) {
        t === void 0 && (t = 1.70158);
        var n = function (o) {
                return o ? --o * o * ((t + 1) * o + t) + 1 : 0;
            },
            i =
                e === 'out'
                    ? n
                    : e === 'in'
                      ? function (s) {
                            return 1 - n(1 - s);
                        }
                      : KI(n);
        return (
            (i.config = function (s) {
                return r(e, s);
            }),
            i
        );
    };
to('Linear,Quad,Cubic,Quart,Quint,Strong', function (r, e) {
    var t = e < 5 ? e + 1 : e;
    Sh(
        r + ',Power' + (t - 1),
        e
            ? function (n) {
                  return Math.pow(n, t);
              }
            : function (n) {
                  return n;
              },
        function (n) {
            return 1 - Math.pow(1 - n, t);
        },
        function (n) {
            return n < 0.5
                ? Math.pow(n * 2, t) / 2
                : 1 - Math.pow((1 - n) * 2, t) / 2;
        }
    );
});
Rn.Linear.easeNone = Rn.none = Rn.Linear.easeIn;
Sh('Elastic', mS('in'), mS('out'), mS());
(function (r, e) {
    var t = 1 / e,
        n = 2 * t,
        i = 2.5 * t,
        s = function (a) {
            return a < t
                ? r * a * a
                : a < n
                  ? r * Math.pow(a - 1.5 / e, 2) + 0.75
                  : a < i
                    ? r * (a -= 2.25 / e) * a + 0.9375
                    : r * Math.pow(a - 2.625 / e, 2) + 0.984375;
        };
    Sh(
        'Bounce',
        function (o) {
            return 1 - s(1 - o);
        },
        s
    );
})(7.5625, 2.75);
Sh('Expo', function (r) {
    return Math.pow(2, 10 * (r - 1)) * r + r * r * r * r * r * r * (1 - r);
});
Sh('Circ', function (r) {
    return -(yI(1 - r * r) - 1);
});
Sh('Sine', function (r) {
    return r === 1 ? 1 : -d6(r * f6) + 1;
});
Sh('Back', gS('in'), gS('out'), gS());
Rn.SteppedEase =
    Rn.steps =
    Lo.SteppedEase =
        {
            config: function (e, t) {
                e === void 0 && (e = 1);
                var n = 1 / e,
                    i = e + (t ? 0 : 1),
                    s = t ? 1 : 0,
                    o = 1 - hs;
                return function (a) {
                    return (((i * H0(0, o, a)) | 0) + s) * n;
                };
            },
        };
Mp.ease = Rn['quad.out'];
to(
    'onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt',
    function (r) {
        return (tT += r + ',' + r + 'Params,');
    }
);
var ZI = function (e, t) {
        (this.id = h6++),
            (e._gsap = this),
            (this.target = e),
            (this.harness = t),
            (this.get = t ? t.get : bI),
            (this.set = t ? t.getSetter : aT);
    },
    u0 = (function () {
        function r(t) {
            (this.vars = t),
                (this._delay = +t.delay || 0),
                (this._repeat = t.repeat === 1 / 0 ? -2 : t.repeat || 0) &&
                    ((this._rDelay = t.repeatDelay || 0),
                    (this._yoyo = !!t.yoyo || !!t.yoyoEase)),
                (this._ts = 1),
                Ap(this, +t.duration, 1, 1),
                (this.data = t.data),
                Mi && ((this._ctx = Mi), Mi.data.push(this)),
                l0 || Eo.wake();
        }
        var e = r.prototype;
        return (
            (e.delay = function (n) {
                return n || n === 0
                    ? (this.parent &&
                          this.parent.smoothChildTiming &&
                          this.startTime(this._start + n - this._delay),
                      (this._delay = n),
                      this)
                    : this._delay;
            }),
            (e.duration = function (n) {
                return arguments.length
                    ? this.totalDuration(
                          this._repeat > 0
                              ? n + (n + this._rDelay) * this._repeat
                              : n
                      )
                    : this.totalDuration() && this._dur;
            }),
            (e.totalDuration = function (n) {
                return arguments.length
                    ? ((this._dirty = 0),
                      Ap(
                          this,
                          this._repeat < 0
                              ? n
                              : (n - this._repeat * this._rDelay) /
                                    (this._repeat + 1)
                      ))
                    : this._tDur;
            }),
            (e.totalTime = function (n, i) {
                if ((bp(), !arguments.length)) return this._tTime;
                var s = this._dp;
                if (s && s.smoothChildTiming && this._ts) {
                    for (
                        Lx(this, n), !s._dp || s.parent || II(s, this);
                        s && s.parent;

                    )
                        s.parent._time !==
                            s._start +
                                (s._ts >= 0
                                    ? s._tTime / s._ts
                                    : (s.totalDuration() - s._tTime) /
                                      -s._ts) && s.totalTime(s._tTime, !0),
                            (s = s.parent);
                    !this.parent &&
                        this._dp.autoRemoveChildren &&
                        ((this._ts > 0 && n < this._tDur) ||
                            (this._ts < 0 && n > 0) ||
                            (!this._tDur && !n)) &&
                        yl(this._dp, this, this._start - this._delay);
                }
                return (
                    (this._tTime !== n ||
                        (!this._dur && !i) ||
                        (this._initted && Math.abs(this._zTime) === hs) ||
                        (!n &&
                            !this._initted &&
                            (this.add || this._ptLookup))) &&
                        (this._ts || (this._pTime = n), CI(this, n, i)),
                    this
                );
            }),
            (e.time = function (n, i) {
                return arguments.length
                    ? this.totalTime(
                          Math.min(this.totalDuration(), n + TC(this)) %
                              (this._dur + this._rDelay) || (n ? this._dur : 0),
                          i
                      )
                    : this._time;
            }),
            (e.totalProgress = function (n, i) {
                return arguments.length
                    ? this.totalTime(this.totalDuration() * n, i)
                    : this.totalDuration()
                      ? Math.min(1, this._tTime / this._tDur)
                      : this.rawTime() >= 0 && this._initted
                        ? 1
                        : 0;
            }),
            (e.progress = function (n, i) {
                return arguments.length
                    ? this.totalTime(
                          this.duration() *
                              (this._yoyo && !(this.iteration() & 1)
                                  ? 1 - n
                                  : n) +
                              TC(this),
                          i
                      )
                    : this.duration()
                      ? Math.min(1, this._time / this._dur)
                      : this.rawTime() > 0
                        ? 1
                        : 0;
            }),
            (e.iteration = function (n, i) {
                var s = this.duration() + this._rDelay;
                return arguments.length
                    ? this.totalTime(this._time + (n - 1) * s, i)
                    : this._repeat
                      ? Tp(this._tTime, s) + 1
                      : 1;
            }),
            (e.timeScale = function (n, i) {
                if (!arguments.length)
                    return this._rts === -1e-8 ? 0 : this._rts;
                if (this._rts === n) return this;
                var s =
                    this.parent && this._ts
                        ? D_(this.parent._time, this)
                        : this._tTime;
                return (
                    (this._rts = +n || 0),
                    (this._ts = this._ps || n === -1e-8 ? 0 : this._rts),
                    this.totalTime(
                        H0(-Math.abs(this._delay), this.totalDuration(), s),
                        i !== !1
                    ),
                    Px(this),
                    S6(this)
                );
            }),
            (e.paused = function (n) {
                return arguments.length
                    ? (this._ps !== n &&
                          ((this._ps = n),
                          n
                              ? ((this._pTime =
                                    this._tTime ||
                                    Math.max(-this._delay, this.rawTime())),
                                (this._ts = this._act = 0))
                              : (bp(),
                                (this._ts = this._rts),
                                this.totalTime(
                                    this.parent &&
                                        !this.parent.smoothChildTiming
                                        ? this.rawTime()
                                        : this._tTime || this._pTime,
                                    this.progress() === 1 &&
                                        Math.abs(this._zTime) !== hs &&
                                        (this._tTime -= hs)
                                ))),
                      this)
                    : this._ps;
            }),
            (e.startTime = function (n) {
                if (arguments.length) {
                    this._start = n;
                    var i = this.parent || this._dp;
                    return (
                        i &&
                            (i._sort || !this.parent) &&
                            yl(i, this, n - this._delay),
                        this
                    );
                }
                return this._start;
            }),
            (e.endTime = function (n) {
                return (
                    this._start +
                    (eo(n) ? this.totalDuration() : this.duration()) /
                        Math.abs(this._ts || 1)
                );
            }),
            (e.rawTime = function (n) {
                var i = this.parent || this._dp;
                return i
                    ? n &&
                      (!this._ts ||
                          (this._repeat &&
                              this._time &&
                              this.totalProgress() < 1))
                        ? this._tTime % (this._dur + this._rDelay)
                        : this._ts
                          ? D_(i.rawTime(n), this)
                          : this._tTime
                    : this._tTime;
            }),
            (e.revert = function (n) {
                n === void 0 && (n = v6);
                var i = Zr;
                return (
                    (Zr = n),
                    iT(this) &&
                        (this.timeline && this.timeline.revert(n),
                        this.totalTime(-0.01, n.suppressEvents)),
                    this.data !== 'nested' && n.kill !== !1 && this.kill(),
                    (Zr = i),
                    this
                );
            }),
            (e.globalTime = function (n) {
                for (var i = this, s = arguments.length ? n : i.rawTime(); i; )
                    (s = i._start + s / (Math.abs(i._ts) || 1)), (i = i._dp);
                return !this.parent && this._sat ? this._sat.globalTime(n) : s;
            }),
            (e.repeat = function (n) {
                return arguments.length
                    ? ((this._repeat = n === 1 / 0 ? -2 : n), AC(this))
                    : this._repeat === -2
                      ? 1 / 0
                      : this._repeat;
            }),
            (e.repeatDelay = function (n) {
                if (arguments.length) {
                    var i = this._time;
                    return (
                        (this._rDelay = n), AC(this), i ? this.time(i) : this
                    );
                }
                return this._rDelay;
            }),
            (e.yoyo = function (n) {
                return arguments.length ? ((this._yoyo = n), this) : this._yoyo;
            }),
            (e.seek = function (n, i) {
                return this.totalTime($o(this, n), eo(i));
            }),
            (e.restart = function (n, i) {
                return (
                    this.play().totalTime(n ? -this._delay : 0, eo(i)),
                    this._dur || (this._zTime = -1e-8),
                    this
                );
            }),
            (e.play = function (n, i) {
                return (
                    n != null && this.seek(n, i), this.reversed(!1).paused(!1)
                );
            }),
            (e.reverse = function (n, i) {
                return (
                    n != null && this.seek(n || this.totalDuration(), i),
                    this.reversed(!0).paused(!1)
                );
            }),
            (e.pause = function (n, i) {
                return n != null && this.seek(n, i), this.paused(!0);
            }),
            (e.resume = function () {
                return this.paused(!1);
            }),
            (e.reversed = function (n) {
                return arguments.length
                    ? (!!n !== this.reversed() &&
                          this.timeScale(-this._rts || (n ? -1e-8 : 0)),
                      this)
                    : this._rts < 0;
            }),
            (e.invalidate = function () {
                return (
                    (this._initted = this._act = 0), (this._zTime = -1e-8), this
                );
            }),
            (e.isActive = function () {
                var n = this.parent || this._dp,
                    i = this._start,
                    s;
                return !!(
                    !n ||
                    (this._ts &&
                        this._initted &&
                        n.isActive() &&
                        (s = n.rawTime(!0)) >= i &&
                        s < this.endTime(!0) - hs)
                );
            }),
            (e.eventCallback = function (n, i, s) {
                var o = this.vars;
                return arguments.length > 1
                    ? (i
                          ? ((o[n] = i),
                            s && (o[n + 'Params'] = s),
                            n === 'onUpdate' && (this._onUpdate = i))
                          : delete o[n],
                      this)
                    : o[n];
            }),
            (e.then = function (n) {
                var i = this;
                return new Promise(function (s) {
                    var o = Hi(n) ? n : PI,
                        a = function () {
                            var u = i.then;
                            (i.then = null),
                                Hi(o) &&
                                    (o = o(i)) &&
                                    (o.then || o === i) &&
                                    (i.then = u),
                                s(o),
                                (i.then = u);
                        };
                    (i._initted && i.totalProgress() === 1 && i._ts >= 0) ||
                    (!i._tTime && i._ts < 0)
                        ? a()
                        : (i._prom = a);
                });
            }),
            (e.kill = function () {
                Sg(this);
            }),
            r
        );
    })();
Io(u0.prototype, {
    _time: 0,
    _start: 0,
    _end: 0,
    _tTime: 0,
    _tDur: 0,
    _dirty: 0,
    _repeat: 0,
    _yoyo: !1,
    parent: null,
    _initted: !1,
    _rDelay: 0,
    _ts: 1,
    _dp: 0,
    ratio: 0,
    _zTime: -1e-8,
    _prom: 0,
    _ps: !1,
    _rts: 1,
});
var Ds = (function (r) {
    vI(e, r);
    function e(n, i) {
        var s;
        return (
            n === void 0 && (n = {}),
            (s = r.call(this, n) || this),
            (s.labels = {}),
            (s.smoothChildTiming = !!n.smoothChildTiming),
            (s.autoRemoveChildren = !!n.autoRemoveChildren),
            (s._sort = eo(n.sortChildren)),
            Ri && yl(n.parent || Ri, mu(s), i),
            n.reversed && s.reverse(),
            n.paused && s.paused(!0),
            n.scrollTrigger && DI(mu(s), n.scrollTrigger),
            s
        );
    }
    var t = e.prototype;
    return (
        (t.to = function (i, s, o) {
            return Dg(0, arguments, this), this;
        }),
        (t.from = function (i, s, o) {
            return Dg(1, arguments, this), this;
        }),
        (t.fromTo = function (i, s, o, a) {
            return Dg(2, arguments, this), this;
        }),
        (t.set = function (i, s, o) {
            return (
                (s.duration = 0),
                (s.parent = this),
                Ig(s).repeatDelay || (s.repeat = 0),
                (s.immediateRender = !!s.immediateRender),
                new hr(i, s, $o(this, o), 1),
                this
            );
        }),
        (t.call = function (i, s, o) {
            return yl(this, hr.delayedCall(0, i, s), o);
        }),
        (t.staggerTo = function (i, s, o, a, l, u, f) {
            return (
                (o.duration = s),
                (o.stagger = o.stagger || a),
                (o.onComplete = u),
                (o.onCompleteParams = f),
                (o.parent = this),
                new hr(i, o, $o(this, l)),
                this
            );
        }),
        (t.staggerFrom = function (i, s, o, a, l, u, f) {
            return (
                (o.runBackwards = 1),
                (Ig(o).immediateRender = eo(o.immediateRender)),
                this.staggerTo(i, s, o, a, l, u, f)
            );
        }),
        (t.staggerFromTo = function (i, s, o, a, l, u, f, d) {
            return (
                (a.startAt = o),
                (Ig(a).immediateRender = eo(a.immediateRender)),
                this.staggerTo(i, s, a, l, u, f, d)
            );
        }),
        (t.render = function (i, s, o) {
            var a = this._time,
                l = this._dirty ? this.totalDuration() : this._tDur,
                u = this._dur,
                f = i <= 0 ? 0 : dr(i),
                d = this._zTime < 0 != i < 0 && (this._initted || !u),
                m,
                v,
                _,
                S,
                w,
                x,
                A,
                T,
                b,
                P,
                L,
                D;
            if (
                (this !== Ri && f > l && i >= 0 && (f = l),
                f !== this._tTime || o || d)
            ) {
                if (
                    (a !== this._time &&
                        u &&
                        ((f += this._time - a), (i += this._time - a)),
                    (m = f),
                    (b = this._start),
                    (T = this._ts),
                    (x = !T),
                    d &&
                        (u || (a = this._zTime),
                        (i || !s) && (this._zTime = i)),
                    this._repeat)
                ) {
                    if (
                        ((L = this._yoyo),
                        (w = u + this._rDelay),
                        this._repeat < -1 && i < 0)
                    )
                        return this.totalTime(w * 100 + i, s, o);
                    if (
                        ((m = dr(f % w)),
                        f === l
                            ? ((S = this._repeat), (m = u))
                            : ((P = dr(f / w)),
                              (S = ~~P),
                              S && S === P && ((m = u), S--),
                              m > u && (m = u)),
                        (P = Tp(this._tTime, w)),
                        !a &&
                            this._tTime &&
                            P !== S &&
                            this._tTime - P * w - this._dur <= 0 &&
                            (P = S),
                        L && S & 1 && ((m = u - m), (D = 1)),
                        S !== P && !this._lock)
                    ) {
                        var O = L && P & 1,
                            I = O === (L && S & 1);
                        if (
                            (S < P && (O = !O),
                            (a = O ? 0 : f % u ? u : f),
                            (this._lock = 1),
                            (this.render(
                                a || (D ? 0 : dr(S * w)),
                                s,
                                !u
                            )._lock = 0),
                            (this._tTime = f),
                            !s && this.parent && bo(this, 'onRepeat'),
                            this.vars.repeatRefresh &&
                                !D &&
                                (this.invalidate()._lock = 1),
                            (a && a !== this._time) ||
                                x !== !this._ts ||
                                (this.vars.onRepeat &&
                                    !this.parent &&
                                    !this._act))
                        )
                            return this;
                        if (
                            ((u = this._dur),
                            (l = this._tDur),
                            I &&
                                ((this._lock = 2),
                                (a = O ? u : -1e-4),
                                this.render(a, !0),
                                this.vars.repeatRefresh &&
                                    !D &&
                                    this.invalidate()),
                            (this._lock = 0),
                            !this._ts && !x)
                        )
                            return this;
                        qI(this, D);
                    }
                }
                if (
                    (this._hasPause &&
                        !this._forcing &&
                        this._lock < 2 &&
                        ((A = T6(this, dr(a), dr(m))),
                        A && (f -= m - (m = A._start))),
                    (this._tTime = f),
                    (this._time = m),
                    (this._act = !T),
                    this._initted ||
                        ((this._onUpdate = this.vars.onUpdate),
                        (this._initted = 1),
                        (this._zTime = i),
                        (a = 0)),
                    !a &&
                        f &&
                        !s &&
                        !P &&
                        (bo(this, 'onStart'), this._tTime !== f))
                )
                    return this;
                if (m >= a && i >= 0)
                    for (v = this._first; v; ) {
                        if (
                            ((_ = v._next),
                            (v._act || m >= v._start) && v._ts && A !== v)
                        ) {
                            if (v.parent !== this) return this.render(i, s, o);
                            if (
                                (v.render(
                                    v._ts > 0
                                        ? (m - v._start) * v._ts
                                        : (v._dirty
                                              ? v.totalDuration()
                                              : v._tDur) +
                                              (m - v._start) * v._ts,
                                    s,
                                    o
                                ),
                                m !== this._time || (!this._ts && !x))
                            ) {
                                (A = 0), _ && (f += this._zTime = -1e-8);
                                break;
                            }
                        }
                        v = _;
                    }
                else {
                    v = this._last;
                    for (var U = i < 0 ? i : m; v; ) {
                        if (
                            ((_ = v._prev),
                            (v._act || U <= v._end) && v._ts && A !== v)
                        ) {
                            if (v.parent !== this) return this.render(i, s, o);
                            if (
                                (v.render(
                                    v._ts > 0
                                        ? (U - v._start) * v._ts
                                        : (v._dirty
                                              ? v.totalDuration()
                                              : v._tDur) +
                                              (U - v._start) * v._ts,
                                    s,
                                    o || (Zr && iT(v))
                                ),
                                m !== this._time || (!this._ts && !x))
                            ) {
                                (A = 0),
                                    _ && (f += this._zTime = U ? -1e-8 : hs);
                                break;
                            }
                        }
                        v = _;
                    }
                }
                if (
                    A &&
                    !s &&
                    (this.pause(),
                    (A.render(m >= a ? 0 : -1e-8)._zTime = m >= a ? 1 : -1),
                    this._ts)
                )
                    return (this._start = b), Px(this), this.render(i, s, o);
                this._onUpdate && !s && bo(this, 'onUpdate', !0),
                    ((f === l && this._tTime >= this.totalDuration()) ||
                        (!f && a)) &&
                        (b === this._start ||
                            Math.abs(T) !== Math.abs(this._ts)) &&
                        (this._lock ||
                            ((i || !u) &&
                                ((f === l && this._ts > 0) ||
                                    (!f && this._ts < 0)) &&
                                Rc(this, 1),
                            !s &&
                                !(i < 0 && !a) &&
                                (f || a || !l) &&
                                (bo(
                                    this,
                                    f === l && i >= 0
                                        ? 'onComplete'
                                        : 'onReverseComplete',
                                    !0
                                ),
                                this._prom &&
                                    !(f < l && this.timeScale() > 0) &&
                                    this._prom())));
            }
            return this;
        }),
        (t.add = function (i, s) {
            var o = this;
            if ((Eu(s) || (s = $o(this, s, i)), !(i instanceof u0))) {
                if (ds(i))
                    return (
                        i.forEach(function (a) {
                            return o.add(a, s);
                        }),
                        this
                    );
                if (Br(i)) return this.addLabel(i, s);
                if (Hi(i)) i = hr.delayedCall(0, i);
                else return this;
            }
            return this !== i ? yl(this, i, s) : this;
        }),
        (t.getChildren = function (i, s, o, a) {
            i === void 0 && (i = !0),
                s === void 0 && (s = !0),
                o === void 0 && (o = !0),
                a === void 0 && (a = -1e8);
            for (var l = [], u = this._first; u; )
                u._start >= a &&
                    (u instanceof hr
                        ? s && l.push(u)
                        : (o && l.push(u),
                          i && l.push.apply(l, u.getChildren(!0, s, o)))),
                    (u = u._next);
            return l;
        }),
        (t.getById = function (i) {
            for (var s = this.getChildren(1, 1, 1), o = s.length; o--; )
                if (s[o].vars.id === i) return s[o];
        }),
        (t.remove = function (i) {
            return Br(i)
                ? this.removeLabel(i)
                : Hi(i)
                  ? this.killTweensOf(i)
                  : (i.parent === this && Rx(this, i),
                    i === this._recent && (this._recent = this._last),
                    sh(this));
        }),
        (t.totalTime = function (i, s) {
            return arguments.length
                ? ((this._forcing = 1),
                  !this._dp &&
                      this._ts &&
                      (this._start = dr(
                          Eo.time -
                              (this._ts > 0
                                  ? i / this._ts
                                  : (this.totalDuration() - i) / -this._ts)
                      )),
                  r.prototype.totalTime.call(this, i, s),
                  (this._forcing = 0),
                  this)
                : this._tTime;
        }),
        (t.addLabel = function (i, s) {
            return (this.labels[i] = $o(this, s)), this;
        }),
        (t.removeLabel = function (i) {
            return delete this.labels[i], this;
        }),
        (t.addPause = function (i, s, o) {
            var a = hr.delayedCall(0, s || o0, o);
            return (
                (a.data = 'isPause'),
                (this._hasPause = 1),
                yl(this, a, $o(this, i))
            );
        }),
        (t.removePause = function (i) {
            var s = this._first;
            for (i = $o(this, i); s; )
                s._start === i && s.data === 'isPause' && Rc(s), (s = s._next);
        }),
        (t.killTweensOf = function (i, s, o) {
            for (var a = this.getTweensOf(i, o), l = a.length; l--; )
                _c !== a[l] && a[l].kill(i, s);
            return this;
        }),
        (t.getTweensOf = function (i, s) {
            for (var o = [], a = Qo(i), l = this._first, u = Eu(s), f; l; )
                l instanceof hr
                    ? y6(l._targets, a) &&
                      (u
                          ? (!_c || (l._initted && l._ts)) &&
                            l.globalTime(0) <= s &&
                            l.globalTime(l.totalDuration()) > s
                          : !s || l.isActive()) &&
                      o.push(l)
                    : (f = l.getTweensOf(a, s)).length && o.push.apply(o, f),
                    (l = l._next);
            return o;
        }),
        (t.tweenTo = function (i, s) {
            s = s || {};
            var o = this,
                a = $o(o, i),
                l = s,
                u = l.startAt,
                f = l.onStart,
                d = l.onStartParams,
                m = l.immediateRender,
                v,
                _ = hr.to(
                    o,
                    Io(
                        {
                            ease: s.ease || 'none',
                            lazy: !1,
                            immediateRender: !1,
                            time: a,
                            overwrite: 'auto',
                            duration:
                                s.duration ||
                                Math.abs(
                                    (a -
                                        (u && 'time' in u ? u.time : o._time)) /
                                        o.timeScale()
                                ) ||
                                hs,
                            onStart: function () {
                                if ((o.pause(), !v)) {
                                    var w =
                                        s.duration ||
                                        Math.abs(
                                            (a -
                                                (u && 'time' in u
                                                    ? u.time
                                                    : o._time)) /
                                                o.timeScale()
                                        );
                                    _._dur !== w &&
                                        Ap(_, w, 0, 1).render(_._time, !0, !0),
                                        (v = 1);
                                }
                                f && f.apply(_, d || []);
                            },
                        },
                        s
                    )
                );
            return m ? _.render(0) : _;
        }),
        (t.tweenFromTo = function (i, s, o) {
            return this.tweenTo(s, Io({ startAt: { time: $o(this, i) } }, o));
        }),
        (t.recent = function () {
            return this._recent;
        }),
        (t.nextLabel = function (i) {
            return i === void 0 && (i = this._time), bC(this, $o(this, i));
        }),
        (t.previousLabel = function (i) {
            return i === void 0 && (i = this._time), bC(this, $o(this, i), 1);
        }),
        (t.currentLabel = function (i) {
            return arguments.length
                ? this.seek(i, !0)
                : this.previousLabel(this._time + hs);
        }),
        (t.shiftChildren = function (i, s, o) {
            o === void 0 && (o = 0);
            for (var a = this._first, l = this.labels, u; a; )
                a._start >= o && ((a._start += i), (a._end += i)),
                    (a = a._next);
            if (s) for (u in l) l[u] >= o && (l[u] += i);
            return sh(this);
        }),
        (t.invalidate = function (i) {
            var s = this._first;
            for (this._lock = 0; s; ) s.invalidate(i), (s = s._next);
            return r.prototype.invalidate.call(this, i);
        }),
        (t.clear = function (i) {
            i === void 0 && (i = !0);
            for (var s = this._first, o; s; )
                (o = s._next), this.remove(s), (s = o);
            return (
                this._dp && (this._time = this._tTime = this._pTime = 0),
                i && (this.labels = {}),
                sh(this)
            );
        }),
        (t.totalDuration = function (i) {
            var s = 0,
                o = this,
                a = o._last,
                l = Tl,
                u,
                f,
                d;
            if (arguments.length)
                return o.timeScale(
                    (o._repeat < 0 ? o.duration() : o.totalDuration()) /
                        (o.reversed() ? -i : i)
                );
            if (o._dirty) {
                for (d = o.parent; a; )
                    (u = a._prev),
                        a._dirty && a.totalDuration(),
                        (f = a._start),
                        f > l && o._sort && a._ts && !o._lock
                            ? ((o._lock = 1),
                              (yl(o, a, f - a._delay, 1)._lock = 0))
                            : (l = f),
                        f < 0 &&
                            a._ts &&
                            ((s -= f),
                            ((!d && !o._dp) || (d && d.smoothChildTiming)) &&
                                ((o._start += f / o._ts),
                                (o._time -= f),
                                (o._tTime -= f)),
                            o.shiftChildren(-f, !1, -1 / 0),
                            (l = 0)),
                        a._end > s && a._ts && (s = a._end),
                        (a = u);
                Ap(o, o === Ri && o._time > s ? o._time : s, 1, 1),
                    (o._dirty = 0);
            }
            return o._tDur;
        }),
        (e.updateRoot = function (i) {
            if (
                (Ri._ts && (CI(Ri, D_(i, Ri)), (AI = Eo.frame)), Eo.frame >= MC)
            ) {
                MC += Co.autoSleep || 120;
                var s = Ri._first;
                if (
                    (!s || !s._ts) &&
                    Co.autoSleep &&
                    Eo._listeners.length < 2
                ) {
                    for (; s && !s._ts; ) s = s._next;
                    s || Eo.sleep();
                }
            }
        }),
        e
    );
})(u0);
Io(Ds.prototype, { _lock: 0, _hasPause: 0, _forcing: 0 });
var V6 = function (e, t, n, i, s, o, a) {
        var l = new no(this._pt, e, t, 0, 1, nD, null, s),
            u = 0,
            f = 0,
            d,
            m,
            v,
            _,
            S,
            w,
            x,
            A;
        for (
            l.b = n,
                l.e = i,
                n += '',
                i += '',
                (x = ~i.indexOf('random(')) && (i = a0(i)),
                o && ((A = [n, i]), o(A, e, t), (n = A[0]), (i = A[1])),
                m = n.match(hS) || [];
            (d = hS.exec(i));

        )
            (_ = d[0]),
                (S = i.substring(u, d.index)),
                v ? (v = (v + 1) % 5) : S.substr(-5) === 'rgba(' && (v = 1),
                _ !== m[f++] &&
                    ((w = parseFloat(m[f - 1]) || 0),
                    (l._pt = {
                        _next: l._pt,
                        p: S || f === 1 ? S : ',',
                        s: w,
                        c:
                            _.charAt(1) === '='
                                ? dp(w, _) - w
                                : parseFloat(_) - w,
                        m: v && v < 4 ? Math.round : 0,
                    }),
                    (u = hS.lastIndex));
        return (
            (l.c = u < i.length ? i.substring(u, i.length) : ''),
            (l.fp = a),
            (SI.test(i) || x) && (l.e = 0),
            (this._pt = l),
            l
        );
    },
    rT = function (e, t, n, i, s, o, a, l, u, f) {
        Hi(i) && (i = i(s || 0, e, o));
        var d = e[t],
            m =
                n !== 'get'
                    ? n
                    : Hi(d)
                      ? u
                          ? e[
                                t.indexOf('set') || !Hi(e['get' + t.substr(3)])
                                    ? t
                                    : 'get' + t.substr(3)
                            ](u)
                          : e[t]()
                      : d,
            v = Hi(d) ? (u ? X6 : eD) : oT,
            _;
        if (
            (Br(i) &&
                (~i.indexOf('random(') && (i = a0(i)),
                i.charAt(1) === '=' &&
                    ((_ = dp(m, i) + (cs(m) || 0)), (_ || _ === 0) && (i = _))),
            !f || m !== i || gM)
        )
            return !isNaN(m * i) && i !== ''
                ? ((_ = new no(
                      this._pt,
                      e,
                      t,
                      +m || 0,
                      i - (m || 0),
                      typeof d == 'boolean' ? q6 : tD,
                      0,
                      v
                  )),
                  u && (_.fp = u),
                  a && _.modifier(a, this, e),
                  (this._pt = _))
                : (!d && !(t in e) && QE(t, i),
                  V6.call(this, e, t, m, i, v, l || Co.stringFilter, u));
    },
    H6 = function (e, t, n, i, s) {
        if (
            (Hi(e) && (e = Og(e, s, t, n, i)),
            !Rl(e) || (e.style && e.nodeType) || ds(e) || _I(e))
        )
            return Br(e) ? Og(e, s, t, n, i) : e;
        var o = {},
            a;
        for (a in e) o[a] = Og(e[a], s, t, n, i);
        return o;
    },
    $I = function (e, t, n, i, s, o) {
        var a, l, u, f;
        if (
            wo[e] &&
            (a = new wo[e]()).init(
                s,
                a.rawVars ? t[e] : H6(t[e], i, s, o, n),
                n,
                i,
                o
            ) !== !1 &&
            ((n._pt = l =
                new no(n._pt, s, e, 0, 1, a.render, a, 0, a.priority)),
            n !== sp)
        )
            for (
                u = n._ptLookup[n._targets.indexOf(s)], f = a._props.length;
                f--;

            )
                u[a._props[f]] = l;
        return a;
    },
    _c,
    gM,
    sT = function r(e, t, n) {
        var i = e.vars,
            s = i.ease,
            o = i.startAt,
            a = i.immediateRender,
            l = i.lazy,
            u = i.onUpdate,
            f = i.runBackwards,
            d = i.yoyoEase,
            m = i.keyframes,
            v = i.autoRevert,
            _ = e._dur,
            S = e._startAt,
            w = e._targets,
            x = e.parent,
            A = x && x.data === 'nested' ? x.vars.targets : w,
            T = e._overwrite === 'auto' && !KE,
            b = e.timeline,
            P,
            L,
            D,
            O,
            I,
            U,
            H,
            W,
            q,
            K,
            le,
            ee,
            de;
        if (
            (b && (!m || !s) && (s = 'none'),
            (e._ease = oh(s, Mp.ease)),
            (e._yEase = d ? YI(oh(d === !0 ? s : d, Mp.ease)) : 0),
            d &&
                e._yoyo &&
                !e._repeat &&
                ((d = e._yEase), (e._yEase = e._ease), (e._ease = d)),
            (e._from = !b && !!i.runBackwards),
            !b || (m && !i.stagger))
        ) {
            if (
                ((W = w[0] ? rh(w[0]).harness : 0),
                (ee = W && i[W.prop]),
                (P = I_(i, eT)),
                S &&
                    (S._zTime < 0 && S.progress(1),
                    t < 0 && f && a && !v
                        ? S.render(-1, !0)
                        : S.revert(f && _ ? m_ : g6),
                    (S._lazy = 0)),
                o)
            ) {
                if (
                    (Rc(
                        (e._startAt = hr.set(
                            w,
                            Io(
                                {
                                    data: 'isStart',
                                    overwrite: !1,
                                    parent: x,
                                    immediateRender: !0,
                                    lazy: !S && eo(l),
                                    startAt: null,
                                    delay: 0,
                                    onUpdate:
                                        u &&
                                        function () {
                                            return bo(e, 'onUpdate');
                                        },
                                    stagger: 0,
                                },
                                o
                            )
                        ))
                    ),
                    (e._startAt._dp = 0),
                    (e._startAt._sat = e),
                    t < 0 && (Zr || (!a && !v)) && e._startAt.revert(m_),
                    a && _ && t <= 0 && n <= 0)
                ) {
                    t && (e._zTime = t);
                    return;
                }
            } else if (f && _ && !S) {
                if (
                    (t && (a = !1),
                    (D = Io(
                        {
                            overwrite: !1,
                            data: 'isFromStart',
                            lazy: a && !S && eo(l),
                            immediateRender: a,
                            stagger: 0,
                            parent: x,
                        },
                        P
                    )),
                    ee && (D[W.prop] = ee),
                    Rc((e._startAt = hr.set(w, D))),
                    (e._startAt._dp = 0),
                    (e._startAt._sat = e),
                    t < 0 &&
                        (Zr
                            ? e._startAt.revert(m_)
                            : e._startAt.render(-1, !0)),
                    (e._zTime = t),
                    !a)
                )
                    r(e._startAt, hs, hs);
                else if (!t) return;
            }
            for (
                e._pt = e._ptCache = 0, l = (_ && eo(l)) || (l && !_), L = 0;
                L < w.length;
                L++
            ) {
                if (
                    ((I = w[L]),
                    (H = I._gsap || nT(w)[L]._gsap),
                    (e._ptLookup[L] = K = {}),
                    cM[H.id] && Mc.length && L_(),
                    (le = A === w ? L : A.indexOf(I)),
                    W &&
                        (q = new W()).init(I, ee || P, e, le, A) !== !1 &&
                        ((e._pt = O =
                            new no(
                                e._pt,
                                I,
                                q.name,
                                0,
                                1,
                                q.render,
                                q,
                                0,
                                q.priority
                            )),
                        q._props.forEach(function (Z) {
                            K[Z] = O;
                        }),
                        q.priority && (U = 1)),
                    !W || ee)
                )
                    for (D in P)
                        wo[D] && (q = $I(D, P, e, le, I, A))
                            ? q.priority && (U = 1)
                            : (K[D] = O =
                                  rT.call(
                                      e,
                                      I,
                                      D,
                                      'get',
                                      P[D],
                                      le,
                                      A,
                                      0,
                                      i.stringFilter
                                  ));
                e._op && e._op[L] && e.kill(I, e._op[L]),
                    T &&
                        e._pt &&
                        ((_c = e),
                        Ri.killTweensOf(I, K, e.globalTime(t)),
                        (de = !e.parent),
                        (_c = 0)),
                    e._pt && l && (cM[H.id] = 1);
            }
            U && iD(e), e._onInit && e._onInit(e);
        }
        (e._onUpdate = u),
            (e._initted = (!e._op || e._pt) && !de),
            m && t <= 0 && b.render(Tl, !0, !0);
    },
    G6 = function (e, t, n, i, s, o, a, l) {
        var u = ((e._pt && e._ptCache) || (e._ptCache = {}))[t],
            f,
            d,
            m,
            v;
        if (!u)
            for (
                u = e._ptCache[t] = [], m = e._ptLookup, v = e._targets.length;
                v--;

            ) {
                if (((f = m[v][t]), f && f.d && f.d._pt))
                    for (f = f.d._pt; f && f.p !== t && f.fp !== t; )
                        f = f._next;
                if (!f)
                    return (
                        (gM = 1),
                        (e.vars[t] = '+=0'),
                        sT(e, a),
                        (gM = 0),
                        l ? s0(t + ' not eligible for reset') : 1
                    );
                u.push(f);
            }
        for (v = u.length; v--; )
            (d = u[v]),
                (f = d._pt || d),
                (f.s = (i || i === 0) && !s ? i : f.s + (i || 0) + o * f.c),
                (f.c = n - f.s),
                d.e && (d.e = $i(n) + cs(d.e)),
                d.b && (d.b = f.s + cs(d.b));
    },
    W6 = function (e, t) {
        var n = e[0] ? rh(e[0]).harness : 0,
            i = n && n.aliases,
            s,
            o,
            a,
            l;
        if (!i) return t;
        s = Ep({}, t);
        for (o in i)
            if (o in s)
                for (l = i[o].split(','), a = l.length; a--; ) s[l[a]] = s[o];
        return s;
    },
    j6 = function (e, t, n, i) {
        var s = t.ease || i || 'power1.inOut',
            o,
            a;
        if (ds(t))
            (a = n[e] || (n[e] = [])),
                t.forEach(function (l, u) {
                    return a.push({
                        t: (u / (t.length - 1)) * 100,
                        v: l,
                        e: s,
                    });
                });
        else
            for (o in t)
                (a = n[o] || (n[o] = [])),
                    o === 'ease' || a.push({ t: parseFloat(e), v: t[o], e: s });
    },
    Og = function (e, t, n, i, s) {
        return Hi(e)
            ? e.call(t, n, i, s)
            : Br(e) && ~e.indexOf('random(')
              ? a0(e)
              : e;
    },
    JI = tT + 'repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert',
    QI = {};
to(JI + ',id,stagger,delay,duration,paused,scrollTrigger', function (r) {
    return (QI[r] = 1);
});
var hr = (function (r) {
    vI(e, r);
    function e(n, i, s, o) {
        var a;
        typeof i == 'number' && ((s.duration = i), (i = s), (s = null)),
            (a = r.call(this, o ? i : Ig(i)) || this);
        var l = a.vars,
            u = l.duration,
            f = l.delay,
            d = l.immediateRender,
            m = l.stagger,
            v = l.overwrite,
            _ = l.keyframes,
            S = l.defaults,
            w = l.scrollTrigger,
            x = l.yoyoEase,
            A = i.parent || Ri,
            T = (ds(n) || _I(n) ? Eu(n[0]) : 'length' in i) ? [n] : Qo(n),
            b,
            P,
            L,
            D,
            O,
            I,
            U,
            H;
        if (
            ((a._targets = T.length
                ? nT(T)
                : s0(
                      'GSAP target ' + n + ' not found. https://gsap.com',
                      !Co.nullTargetWarn
                  ) || []),
            (a._ptLookup = []),
            (a._overwrite = v),
            _ || m || iy(u) || iy(f))
        ) {
            if (
                ((i = a.vars),
                (b = a.timeline =
                    new Ds({
                        data: 'nested',
                        defaults: S || {},
                        targets: A && A.data === 'nested' ? A.vars.targets : T,
                    })),
                b.kill(),
                (b.parent = b._dp = mu(a)),
                (b._start = 0),
                m || iy(u) || iy(f))
            ) {
                if (((D = T.length), (U = m && NI(m)), Rl(m)))
                    for (O in m)
                        ~JI.indexOf(O) && (H || (H = {}), (H[O] = m[O]));
                for (P = 0; P < D; P++)
                    (L = I_(i, QI)),
                        (L.stagger = 0),
                        x && (L.yoyoEase = x),
                        H && Ep(L, H),
                        (I = T[P]),
                        (L.duration = +Og(u, mu(a), P, I, T)),
                        (L.delay = (+Og(f, mu(a), P, I, T) || 0) - a._delay),
                        !m &&
                            D === 1 &&
                            L.delay &&
                            ((a._delay = f = L.delay),
                            (a._start += f),
                            (L.delay = 0)),
                        b.to(I, L, U ? U(P, I, T) : 0),
                        (b._ease = Rn.none);
                b.duration() ? (u = f = 0) : (a.timeline = 0);
            } else if (_) {
                Ig(Io(b.vars.defaults, { ease: 'none' })),
                    (b._ease = oh(_.ease || i.ease || 'none'));
                var W = 0,
                    q,
                    K,
                    le;
                if (ds(_))
                    _.forEach(function (ee) {
                        return b.to(T, ee, '>');
                    }),
                        b.duration();
                else {
                    L = {};
                    for (O in _)
                        O === 'ease' ||
                            O === 'easeEach' ||
                            j6(O, _[O], L, _.easeEach);
                    for (O in L)
                        for (
                            q = L[O].sort(function (ee, de) {
                                return ee.t - de.t;
                            }),
                                W = 0,
                                P = 0;
                            P < q.length;
                            P++
                        )
                            (K = q[P]),
                                (le = {
                                    ease: K.e,
                                    duration:
                                        ((K.t - (P ? q[P - 1].t : 0)) / 100) *
                                        u,
                                }),
                                (le[O] = K.v),
                                b.to(T, le, W),
                                (W += le.duration);
                    b.duration() < u &&
                        b.to({}, { duration: u - b.duration() });
                }
            }
            u || a.duration((u = b.duration()));
        } else a.timeline = 0;
        return (
            v === !0 && !KE && ((_c = mu(a)), Ri.killTweensOf(T), (_c = 0)),
            yl(A, mu(a), s),
            i.reversed && a.reverse(),
            i.paused && a.paused(!0),
            (d ||
                (!u &&
                    !_ &&
                    a._start === dr(A._time) &&
                    eo(d) &&
                    w6(mu(a)) &&
                    A.data !== 'nested')) &&
                ((a._tTime = -1e-8), a.render(Math.max(0, -f) || 0)),
            w && DI(mu(a), w),
            a
        );
    }
    var t = e.prototype;
    return (
        (t.render = function (i, s, o) {
            var a = this._time,
                l = this._tDur,
                u = this._dur,
                f = i < 0,
                d = i > l - hs && !f ? l : i < hs ? 0 : i,
                m,
                v,
                _,
                S,
                w,
                x,
                A,
                T,
                b;
            if (!u) E6(this, i, s, o);
            else if (
                d !== this._tTime ||
                !i ||
                o ||
                (!this._initted && this._tTime) ||
                (this._startAt && this._zTime < 0 !== f) ||
                this._lazy
            ) {
                if (((m = d), (T = this.timeline), this._repeat)) {
                    if (((S = u + this._rDelay), this._repeat < -1 && f))
                        return this.totalTime(S * 100 + i, s, o);
                    if (
                        ((m = dr(d % S)),
                        d === l
                            ? ((_ = this._repeat), (m = u))
                            : ((w = dr(d / S)),
                              (_ = ~~w),
                              _ && _ === w ? ((m = u), _--) : m > u && (m = u)),
                        (x = this._yoyo && _ & 1),
                        x && ((b = this._yEase), (m = u - m)),
                        (w = Tp(this._tTime, S)),
                        m === a && !o && this._initted && _ === w)
                    )
                        return (this._tTime = d), this;
                    _ !== w &&
                        (T && this._yEase && qI(T, x),
                        this.vars.repeatRefresh &&
                            !x &&
                            !this._lock &&
                            m !== S &&
                            this._initted &&
                            ((this._lock = o = 1),
                            (this.render(dr(S * _), !0).invalidate()._lock =
                                0)));
                }
                if (!this._initted) {
                    if (OI(this, f ? i : m, o, s, d))
                        return (this._tTime = 0), this;
                    if (
                        a !== this._time &&
                        !(o && this.vars.repeatRefresh && _ !== w)
                    )
                        return this;
                    if (u !== this._dur) return this.render(i, s, o);
                }
                if (
                    ((this._tTime = d),
                    (this._time = m),
                    !this._act &&
                        this._ts &&
                        ((this._act = 1), (this._lazy = 0)),
                    (this.ratio = A = (b || this._ease)(m / u)),
                    this._from && (this.ratio = A = 1 - A),
                    !a &&
                        d &&
                        !s &&
                        !w &&
                        (bo(this, 'onStart'), this._tTime !== d))
                )
                    return this;
                for (v = this._pt; v; ) v.r(A, v.d), (v = v._next);
                (T &&
                    T.render(
                        i < 0 ? i : T._dur * T._ease(m / this._dur),
                        s,
                        o
                    )) ||
                    (this._startAt && (this._zTime = i)),
                    this._onUpdate &&
                        !s &&
                        (f && fM(this, i, s, o), bo(this, 'onUpdate')),
                    this._repeat &&
                        _ !== w &&
                        this.vars.onRepeat &&
                        !s &&
                        this.parent &&
                        bo(this, 'onRepeat'),
                    (d === this._tDur || !d) &&
                        this._tTime === d &&
                        (f && !this._onUpdate && fM(this, i, !0, !0),
                        (i || !u) &&
                            ((d === this._tDur && this._ts > 0) ||
                                (!d && this._ts < 0)) &&
                            Rc(this, 1),
                        !s &&
                            !(f && !a) &&
                            (d || a || x) &&
                            (bo(
                                this,
                                d === l ? 'onComplete' : 'onReverseComplete',
                                !0
                            ),
                            this._prom &&
                                !(d < l && this.timeScale() > 0) &&
                                this._prom()));
            }
            return this;
        }),
        (t.targets = function () {
            return this._targets;
        }),
        (t.invalidate = function (i) {
            return (
                (!i || !this.vars.runBackwards) && (this._startAt = 0),
                (this._pt =
                    this._op =
                    this._onUpdate =
                    this._lazy =
                    this.ratio =
                        0),
                (this._ptLookup = []),
                this.timeline && this.timeline.invalidate(i),
                r.prototype.invalidate.call(this, i)
            );
        }),
        (t.resetTo = function (i, s, o, a, l) {
            l0 || Eo.wake(), this._ts || this.play();
            var u = Math.min(
                    this._dur,
                    (this._dp._time - this._start) * this._ts
                ),
                f;
            return (
                this._initted || sT(this, u),
                (f = this._ease(u / this._dur)),
                G6(this, i, s, o, a, f, u, l)
                    ? this.resetTo(i, s, o, a, 1)
                    : (Lx(this, 0),
                      this.parent ||
                          LI(
                              this._dp,
                              this,
                              '_first',
                              '_last',
                              this._dp._sort ? '_start' : 0
                          ),
                      this.render(0))
            );
        }),
        (t.kill = function (i, s) {
            if ((s === void 0 && (s = 'all'), !i && (!s || s === 'all')))
                return (
                    (this._lazy = this._pt = 0),
                    this.parent
                        ? Sg(this)
                        : this.scrollTrigger && this.scrollTrigger.kill(!!Zr),
                    this
                );
            if (this.timeline) {
                var o = this.timeline.totalDuration();
                return (
                    this.timeline.killTweensOf(
                        i,
                        s,
                        _c && _c.vars.overwrite !== !0
                    )._first || Sg(this),
                    this.parent &&
                        o !== this.timeline.totalDuration() &&
                        Ap(this, (this._dur * this.timeline._tDur) / o, 0, 1),
                    this
                );
            }
            var a = this._targets,
                l = i ? Qo(i) : a,
                u = this._ptLookup,
                f = this._pt,
                d,
                m,
                v,
                _,
                S,
                w,
                x;
            if ((!s || s === 'all') && x6(a, l))
                return s === 'all' && (this._pt = 0), Sg(this);
            for (
                d = this._op = this._op || [],
                    s !== 'all' &&
                        (Br(s) &&
                            ((S = {}),
                            to(s, function (A) {
                                return (S[A] = 1);
                            }),
                            (s = S)),
                        (s = W6(a, s))),
                    x = a.length;
                x--;

            )
                if (~l.indexOf(a[x])) {
                    (m = u[x]),
                        s === 'all'
                            ? ((d[x] = s), (_ = m), (v = {}))
                            : ((v = d[x] = d[x] || {}), (_ = s));
                    for (S in _)
                        (w = m && m[S]),
                            w &&
                                ((!('kill' in w.d) || w.d.kill(S) === !0) &&
                                    Rx(this, w, '_pt'),
                                delete m[S]),
                            v !== 'all' && (v[S] = 1);
                }
            return this._initted && !this._pt && f && Sg(this), this;
        }),
        (e.to = function (i, s) {
            return new e(i, s, arguments[2]);
        }),
        (e.from = function (i, s) {
            return Dg(1, arguments);
        }),
        (e.delayedCall = function (i, s, o, a) {
            return new e(s, 0, {
                immediateRender: !1,
                lazy: !1,
                overwrite: !1,
                delay: i,
                onComplete: s,
                onReverseComplete: s,
                onCompleteParams: o,
                onReverseCompleteParams: o,
                callbackScope: a,
            });
        }),
        (e.fromTo = function (i, s, o) {
            return Dg(2, arguments);
        }),
        (e.set = function (i, s) {
            return (
                (s.duration = 0), s.repeatDelay || (s.repeat = 0), new e(i, s)
            );
        }),
        (e.killTweensOf = function (i, s, o) {
            return Ri.killTweensOf(i, s, o);
        }),
        e
    );
})(u0);
Io(hr.prototype, { _targets: [], _lazy: 0, _startAt: 0, _op: 0, _onInit: 0 });
to('staggerTo,staggerFrom,staggerFromTo', function (r) {
    hr[r] = function () {
        var e = new Ds(),
            t = dM.call(arguments, 0);
        return t.splice(r === 'staggerFromTo' ? 5 : 4, 0, 0), e[r].apply(e, t);
    };
});
var oT = function (e, t, n) {
        return (e[t] = n);
    },
    eD = function (e, t, n) {
        return e[t](n);
    },
    X6 = function (e, t, n, i) {
        return e[t](i.fp, n);
    },
    Y6 = function (e, t, n) {
        return e.setAttribute(t, n);
    },
    aT = function (e, t) {
        return Hi(e[t]) ? eD : ZE(e[t]) && e.setAttribute ? Y6 : oT;
    },
    tD = function (e, t) {
        return t.set(t.t, t.p, Math.round((t.s + t.c * e) * 1e6) / 1e6, t);
    },
    q6 = function (e, t) {
        return t.set(t.t, t.p, !!(t.s + t.c * e), t);
    },
    nD = function (e, t) {
        var n = t._pt,
            i = '';
        if (!e && t.b) i = t.b;
        else if (e === 1 && t.e) i = t.e;
        else {
            for (; n; )
                (i =
                    n.p +
                    (n.m
                        ? n.m(n.s + n.c * e)
                        : Math.round((n.s + n.c * e) * 1e4) / 1e4) +
                    i),
                    (n = n._next);
            i += t.c;
        }
        t.set(t.t, t.p, i, t);
    },
    lT = function (e, t) {
        for (var n = t._pt; n; ) n.r(e, n.d), (n = n._next);
    },
    K6 = function (e, t, n, i) {
        for (var s = this._pt, o; s; )
            (o = s._next), s.p === i && s.modifier(e, t, n), (s = o);
    },
    Z6 = function (e) {
        for (var t = this._pt, n, i; t; )
            (i = t._next),
                (t.p === e && !t.op) || t.op === e
                    ? Rx(this, t, '_pt')
                    : t.dep || (n = 1),
                (t = i);
        return !n;
    },
    $6 = function (e, t, n, i) {
        i.mSet(e, t, i.m.call(i.tween, n, i.mt), i);
    },
    iD = function (e) {
        for (var t = e._pt, n, i, s, o; t; ) {
            for (n = t._next, i = s; i && i.pr > t.pr; ) i = i._next;
            (t._prev = i ? i._prev : o) ? (t._prev._next = t) : (s = t),
                (t._next = i) ? (i._prev = t) : (o = t),
                (t = n);
        }
        e._pt = s;
    },
    no = (function () {
        function r(t, n, i, s, o, a, l, u, f) {
            (this.t = n),
                (this.s = s),
                (this.c = o),
                (this.p = i),
                (this.r = a || tD),
                (this.d = l || this),
                (this.set = u || oT),
                (this.pr = f || 0),
                (this._next = t),
                t && (t._prev = this);
        }
        var e = r.prototype;
        return (
            (e.modifier = function (n, i, s) {
                (this.mSet = this.mSet || this.set),
                    (this.set = $6),
                    (this.m = n),
                    (this.mt = s),
                    (this.tween = i);
            }),
            r
        );
    })();
to(
    tT +
        'parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger',
    function (r) {
        return (eT[r] = 1);
    }
);
Lo.TweenMax = Lo.TweenLite = hr;
Lo.TimelineLite = Lo.TimelineMax = Ds;
Ri = new Ds({
    sortChildren: !1,
    defaults: Mp,
    autoRemoveChildren: !0,
    id: 'root',
    smoothChildTiming: !0,
});
Co.stringFilter = XI;
var ah = [],
    v_ = {},
    J6 = [],
    RC = 0,
    Q6 = 0,
    vS = function (e) {
        return (v_[e] || J6).map(function (t) {
            return t();
        });
    },
    vM = function () {
        var e = Date.now(),
            t = [];
        e - RC > 2 &&
            (vS('matchMediaInit'),
            ah.forEach(function (n) {
                var i = n.queries,
                    s = n.conditions,
                    o,
                    a,
                    l,
                    u;
                for (a in i)
                    (o = vl.matchMedia(i[a]).matches),
                        o && (l = 1),
                        o !== s[a] && ((s[a] = o), (u = 1));
                u && (n.revert(), l && t.push(n));
            }),
            vS('matchMediaRevert'),
            t.forEach(function (n) {
                return n.onMatch(n, function (i) {
                    return n.add(null, i);
                });
            }),
            (RC = e),
            vS('matchMedia'));
    },
    rD = (function () {
        function r(t, n) {
            (this.selector = n && pM(n)),
                (this.data = []),
                (this._r = []),
                (this.isReverted = !1),
                (this.id = Q6++),
                t && this.add(t);
        }
        var e = r.prototype;
        return (
            (e.add = function (n, i, s) {
                Hi(n) && ((s = i), (i = n), (n = Hi));
                var o = this,
                    a = function () {
                        var u = Mi,
                            f = o.selector,
                            d;
                        return (
                            u && u !== o && u.data.push(o),
                            s && (o.selector = pM(s)),
                            (Mi = o),
                            (d = i.apply(o, arguments)),
                            Hi(d) && o._r.push(d),
                            (Mi = u),
                            (o.selector = f),
                            (o.isReverted = !1),
                            d
                        );
                    };
                return (
                    (o.last = a),
                    n === Hi
                        ? a(o, function (l) {
                              return o.add(null, l);
                          })
                        : n
                          ? (o[n] = a)
                          : a
                );
            }),
            (e.ignore = function (n) {
                var i = Mi;
                (Mi = null), n(this), (Mi = i);
            }),
            (e.getTweens = function () {
                var n = [];
                return (
                    this.data.forEach(function (i) {
                        return i instanceof r
                            ? n.push.apply(n, i.getTweens())
                            : i instanceof hr &&
                                  !(i.parent && i.parent.data === 'nested') &&
                                  n.push(i);
                    }),
                    n
                );
            }),
            (e.clear = function () {
                this._r.length = this.data.length = 0;
            }),
            (e.kill = function (n, i) {
                var s = this;
                if (
                    (n
                        ? (function () {
                              for (
                                  var a = s.getTweens(), l = s.data.length, u;
                                  l--;

                              )
                                  (u = s.data[l]),
                                      u.data === 'isFlip' &&
                                          (u.revert(),
                                          u
                                              .getChildren(!0, !0, !1)
                                              .forEach(function (f) {
                                                  return a.splice(
                                                      a.indexOf(f),
                                                      1
                                                  );
                                              }));
                              for (
                                  a
                                      .map(function (f) {
                                          return {
                                              g:
                                                  f._dur ||
                                                  f._delay ||
                                                  (f._sat &&
                                                      !f._sat.vars
                                                          .immediateRender)
                                                      ? f.globalTime(0)
                                                      : -1 / 0,
                                              t: f,
                                          };
                                      })
                                      .sort(function (f, d) {
                                          return d.g - f.g || -1 / 0;
                                      })
                                      .forEach(function (f) {
                                          return f.t.revert(n);
                                      }),
                                      l = s.data.length;
                                  l--;

                              )
                                  (u = s.data[l]),
                                      u instanceof Ds
                                          ? u.data !== 'nested' &&
                                            (u.scrollTrigger &&
                                                u.scrollTrigger.revert(),
                                            u.kill())
                                          : !(u instanceof hr) &&
                                            u.revert &&
                                            u.revert(n);
                              s._r.forEach(function (f) {
                                  return f(n, s);
                              }),
                                  (s.isReverted = !0);
                          })()
                        : this.data.forEach(function (a) {
                              return a.kill && a.kill();
                          }),
                    this.clear(),
                    i)
                )
                    for (var o = ah.length; o--; )
                        ah[o].id === this.id && ah.splice(o, 1);
            }),
            (e.revert = function (n) {
                this.kill(n || {});
            }),
            r
        );
    })(),
    eH = (function () {
        function r(t) {
            (this.contexts = []), (this.scope = t), Mi && Mi.data.push(this);
        }
        var e = r.prototype;
        return (
            (e.add = function (n, i, s) {
                Rl(n) || (n = { matches: n });
                var o = new rD(0, s || this.scope),
                    a = (o.conditions = {}),
                    l,
                    u,
                    f;
                Mi && !o.selector && (o.selector = Mi.selector),
                    this.contexts.push(o),
                    (i = o.add('onMatch', i)),
                    (o.queries = n);
                for (u in n)
                    u === 'all'
                        ? (f = 1)
                        : ((l = vl.matchMedia(n[u])),
                          l &&
                              (ah.indexOf(o) < 0 && ah.push(o),
                              (a[u] = l.matches) && (f = 1),
                              l.addListener
                                  ? l.addListener(vM)
                                  : l.addEventListener('change', vM)));
                return (
                    f &&
                        i(o, function (d) {
                            return o.add(null, d);
                        }),
                    this
                );
            }),
            (e.revert = function (n) {
                this.kill(n || {});
            }),
            (e.kill = function (n) {
                this.contexts.forEach(function (i) {
                    return i.kill(n, !0);
                });
            }),
            r
        );
    })(),
    O_ = {
        registerPlugin: function () {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
                t[n] = arguments[n];
            t.forEach(function (i) {
                return GI(i);
            });
        },
        timeline: function (e) {
            return new Ds(e);
        },
        getTweensOf: function (e, t) {
            return Ri.getTweensOf(e, t);
        },
        getProperty: function (e, t, n, i) {
            Br(e) && (e = Qo(e)[0]);
            var s = rh(e || {}).get,
                o = n ? PI : RI;
            return (
                n === 'native' && (n = ''),
                e &&
                    (t
                        ? o(((wo[t] && wo[t].get) || s)(e, t, n, i))
                        : function (a, l, u) {
                              return o(((wo[a] && wo[a].get) || s)(e, a, l, u));
                          })
            );
        },
        quickSetter: function (e, t, n) {
            if (((e = Qo(e)), e.length > 1)) {
                var i = e.map(function (f) {
                        return ro.quickSetter(f, t, n);
                    }),
                    s = i.length;
                return function (f) {
                    for (var d = s; d--; ) i[d](f);
                };
            }
            e = e[0] || {};
            var o = wo[t],
                a = rh(e),
                l = (a.harness && (a.harness.aliases || {})[t]) || t,
                u = o
                    ? function (f) {
                          var d = new o();
                          (sp._pt = 0),
                              d.init(e, n ? f + n : f, sp, 0, [e]),
                              d.render(1, d),
                              sp._pt && lT(1, sp);
                      }
                    : a.set(e, l);
            return o
                ? u
                : function (f) {
                      return u(e, l, n ? f + n : f, a, 1);
                  };
        },
        quickTo: function (e, t, n) {
            var i,
                s = ro.to(
                    e,
                    Io(
                        ((i = {}),
                        (i[t] = '+=0.1'),
                        (i.paused = !0),
                        (i.stagger = 0),
                        i),
                        n || {}
                    )
                ),
                o = function (l, u, f) {
                    return s.resetTo(t, l, u, f);
                };
            return (o.tween = s), o;
        },
        isTweening: function (e) {
            return Ri.getTweensOf(e, !0).length > 0;
        },
        defaults: function (e) {
            return (
                e && e.ease && (e.ease = oh(e.ease, Mp.ease)), EC(Mp, e || {})
            );
        },
        config: function (e) {
            return EC(Co, e || {});
        },
        registerEffect: function (e) {
            var t = e.name,
                n = e.effect,
                i = e.plugins,
                s = e.defaults,
                o = e.extendTimeline;
            (i || '').split(',').forEach(function (a) {
                return (
                    a &&
                    !wo[a] &&
                    !Lo[a] &&
                    s0(t + ' effect requires ' + a + ' plugin.')
                );
            }),
                (dS[t] = function (a, l, u) {
                    return n(Qo(a), Io(l || {}, s), u);
                }),
                o &&
                    (Ds.prototype[t] = function (a, l, u) {
                        return this.add(
                            dS[t](a, Rl(l) ? l : (u = l) && {}, this),
                            u
                        );
                    });
        },
        registerEase: function (e, t) {
            Rn[e] = oh(t);
        },
        parseEase: function (e, t) {
            return arguments.length ? oh(e, t) : Rn;
        },
        getById: function (e) {
            return Ri.getById(e);
        },
        exportRoot: function (e, t) {
            e === void 0 && (e = {});
            var n = new Ds(e),
                i,
                s;
            for (
                n.smoothChildTiming = eo(e.smoothChildTiming),
                    Ri.remove(n),
                    n._dp = 0,
                    n._time = n._tTime = Ri._time,
                    i = Ri._first;
                i;

            )
                (s = i._next),
                    (t ||
                        !(
                            !i._dur &&
                            i instanceof hr &&
                            i.vars.onComplete === i._targets[0]
                        )) &&
                        yl(n, i, i._start - i._delay),
                    (i = s);
            return yl(Ri, n, 0), n;
        },
        context: function (e, t) {
            return e ? new rD(e, t) : Mi;
        },
        matchMedia: function (e) {
            return new eH(e);
        },
        matchMediaRefresh: function () {
            return (
                ah.forEach(function (e) {
                    var t = e.conditions,
                        n,
                        i;
                    for (i in t) t[i] && ((t[i] = !1), (n = 1));
                    n && e.revert();
                }) || vM()
            );
        },
        addEventListener: function (e, t) {
            var n = v_[e] || (v_[e] = []);
            ~n.indexOf(t) || n.push(t);
        },
        removeEventListener: function (e, t) {
            var n = v_[e],
                i = n && n.indexOf(t);
            i >= 0 && n.splice(i, 1);
        },
        utils: {
            wrap: I6,
            wrapYoyo: D6,
            distribute: NI,
            random: BI,
            snap: FI,
            normalize: L6,
            getUnit: cs,
            clamp: b6,
            splitColor: WI,
            toArray: Qo,
            selector: pM,
            mapRange: VI,
            pipe: R6,
            unitize: P6,
            interpolate: O6,
            shuffle: kI,
        },
        install: EI,
        effects: dS,
        ticker: Eo,
        updateRoot: Ds.updateRoot,
        plugins: wo,
        globalTimeline: Ri,
        core: {
            PropTween: no,
            globals: TI,
            Tween: hr,
            Timeline: Ds,
            Animation: u0,
            getCache: rh,
            _removeLinkedListItem: Rx,
            reverting: function () {
                return Zr;
            },
            context: function (e) {
                return e && Mi && (Mi.data.push(e), (e._ctx = Mi)), Mi;
            },
            suppressOverwrites: function (e) {
                return (KE = e);
            },
        },
    };
to('to,from,fromTo,delayedCall,set,killTweensOf', function (r) {
    return (O_[r] = hr[r]);
});
Eo.add(Ds.updateRoot);
sp = O_.to({}, { duration: 0 });
var tH = function (e, t) {
        for (var n = e._pt; n && n.p !== t && n.op !== t && n.fp !== t; )
            n = n._next;
        return n;
    },
    nH = function (e, t) {
        var n = e._targets,
            i,
            s,
            o;
        for (i in t)
            for (s = n.length; s--; )
                (o = e._ptLookup[s][i]),
                    o &&
                        (o = o.d) &&
                        (o._pt && (o = tH(o, i)),
                        o && o.modifier && o.modifier(t[i], e, n[s], i));
    },
    yS = function (e, t) {
        return {
            name: e,
            headless: 1,
            rawVars: 1,
            init: function (i, s, o) {
                o._onInit = function (a) {
                    var l, u;
                    if (
                        (Br(s) &&
                            ((l = {}),
                            to(s, function (f) {
                                return (l[f] = 1);
                            }),
                            (s = l)),
                        t)
                    ) {
                        l = {};
                        for (u in s) l[u] = t(s[u]);
                        s = l;
                    }
                    nH(a, s);
                };
            },
        };
    },
    ro =
        O_.registerPlugin(
            {
                name: 'attr',
                init: function (e, t, n, i, s) {
                    var o, a, l;
                    this.tween = n;
                    for (o in t)
                        (l = e.getAttribute(o) || ''),
                            (a = this.add(
                                e,
                                'setAttribute',
                                (l || 0) + '',
                                t[o],
                                i,
                                s,
                                0,
                                0,
                                o
                            )),
                            (a.op = o),
                            (a.b = l),
                            this._props.push(o);
                },
                render: function (e, t) {
                    for (var n = t._pt; n; )
                        Zr ? n.set(n.t, n.p, n.b, n) : n.r(e, n.d),
                            (n = n._next);
                },
            },
            {
                name: 'endArray',
                headless: 1,
                init: function (e, t) {
                    for (var n = t.length; n--; )
                        this.add(e, n, e[n] || 0, t[n], 0, 0, 0, 0, 0, 1);
                },
            },
            yS('roundProps', mM),
            yS('modifiers'),
            yS('snap', FI)
        ) || O_;
hr.version = Ds.version = ro.version = '3.13.0';
MI = 1;
$E() && bp();
Rn.Power0;
Rn.Power1;
Rn.Power2;
Rn.Power3;
Rn.Power4;
Rn.Linear;
Rn.Quad;
Rn.Cubic;
Rn.Quart;
Rn.Quint;
Rn.Strong;
Rn.Elastic;
Rn.Back;
Rn.SteppedEase;
Rn.Bounce;
Rn.Sine;
Rn.Expo;
Rn.Circ;
/*!
 * CSSPlugin 3.13.0
 * https://gsap.com
 *
 * Copyright 2008-2025, GreenSock. All rights reserved.
 * Subject to the terms at https://gsap.com/standard-license
 * @author: Jack Doyle, jack@greensock.com
 */ var PC,
    xc,
    pp,
    uT,
    Kf,
    LC,
    cT,
    iH = function () {
        return typeof window < 'u';
    },
    Tu = {},
    Gf = 180 / Math.PI,
    mp = Math.PI / 180,
    md = Math.atan2,
    IC = 1e8,
    fT = /([A-Z])/g,
    rH = /(left|right|width|margin|padding|x)/i,
    sH = /[\s,\(]\S/,
    _l = {
        autoAlpha: 'opacity,visibility',
        scale: 'scaleX,scaleY',
        alpha: 'opacity',
    },
    yM = function (e, t) {
        return t.set(
            t.t,
            t.p,
            Math.round((t.s + t.c * e) * 1e4) / 1e4 + t.u,
            t
        );
    },
    oH = function (e, t) {
        return t.set(
            t.t,
            t.p,
            e === 1 ? t.e : Math.round((t.s + t.c * e) * 1e4) / 1e4 + t.u,
            t
        );
    },
    aH = function (e, t) {
        return t.set(
            t.t,
            t.p,
            e ? Math.round((t.s + t.c * e) * 1e4) / 1e4 + t.u : t.b,
            t
        );
    },
    lH = function (e, t) {
        var n = t.s + t.c * e;
        t.set(t.t, t.p, ~~(n + (n < 0 ? -0.5 : 0.5)) + t.u, t);
    },
    sD = function (e, t) {
        return t.set(t.t, t.p, e ? t.e : t.b, t);
    },
    oD = function (e, t) {
        return t.set(t.t, t.p, e !== 1 ? t.b : t.e, t);
    },
    uH = function (e, t, n) {
        return (e.style[t] = n);
    },
    cH = function (e, t, n) {
        return e.style.setProperty(t, n);
    },
    fH = function (e, t, n) {
        return (e._gsap[t] = n);
    },
    hH = function (e, t, n) {
        return (e._gsap.scaleX = e._gsap.scaleY = n);
    },
    dH = function (e, t, n, i, s) {
        var o = e._gsap;
        (o.scaleX = o.scaleY = n), o.renderTransform(s, o);
    },
    pH = function (e, t, n, i, s) {
        var o = e._gsap;
        (o[t] = n), o.renderTransform(s, o);
    },
    Li = 'transform',
    io = Li + 'Origin',
    mH = function r(e, t) {
        var n = this,
            i = this.target,
            s = i.style,
            o = i._gsap;
        if (e in Tu && s) {
            if (((this.tfm = this.tfm || {}), e !== 'transform'))
                (e = _l[e] || e),
                    ~e.indexOf(',')
                        ? e.split(',').forEach(function (a) {
                              return (n.tfm[a] = gu(i, a));
                          })
                        : (this.tfm[e] = o.x ? o[e] : gu(i, e)),
                    e === io && (this.tfm.zOrigin = o.zOrigin);
            else
                return _l.transform.split(',').forEach(function (a) {
                    return r.call(n, a, t);
                });
            if (this.props.indexOf(Li) >= 0) return;
            o.svg &&
                ((this.svgo = i.getAttribute('data-svg-origin')),
                this.props.push(io, t, '')),
                (e = Li);
        }
        (s || t) && this.props.push(e, t, s[e]);
    },
    aD = function (e) {
        e.translate &&
            (e.removeProperty('translate'),
            e.removeProperty('scale'),
            e.removeProperty('rotate'));
    },
    gH = function () {
        var e = this.props,
            t = this.target,
            n = t.style,
            i = t._gsap,
            s,
            o;
        for (s = 0; s < e.length; s += 3)
            e[s + 1]
                ? e[s + 1] === 2
                    ? t[e[s]](e[s + 2])
                    : (t[e[s]] = e[s + 2])
                : e[s + 2]
                  ? (n[e[s]] = e[s + 2])
                  : n.removeProperty(
                        e[s].substr(0, 2) === '--'
                            ? e[s]
                            : e[s].replace(fT, '-$1').toLowerCase()
                    );
        if (this.tfm) {
            for (o in this.tfm) i[o] = this.tfm[o];
            i.svg &&
                (i.renderTransform(),
                t.setAttribute('data-svg-origin', this.svgo || '')),
                (s = cT()),
                (!s || !s.isStart) &&
                    !n[Li] &&
                    (aD(n),
                    i.zOrigin &&
                        n[io] &&
                        ((n[io] += ' ' + i.zOrigin + 'px'),
                        (i.zOrigin = 0),
                        i.renderTransform()),
                    (i.uncache = 1));
        }
    },
    lD = function (e, t) {
        var n = { target: e, props: [], revert: gH, save: mH };
        return (
            e._gsap || ro.core.getCache(e),
            t &&
                e.style &&
                e.nodeType &&
                t.split(',').forEach(function (i) {
                    return n.save(i);
                }),
            n
        );
    },
    uD,
    _M = function (e, t) {
        var n = xc.createElementNS
            ? xc.createElementNS(
                  (t || 'http://www.w3.org/1999/xhtml').replace(
                      /^https/,
                      'http'
                  ),
                  e
              )
            : xc.createElement(e);
        return n && n.style ? n : xc.createElement(e);
    },
    ea = function r(e, t, n) {
        var i = getComputedStyle(e);
        return (
            i[t] ||
            i.getPropertyValue(t.replace(fT, '-$1').toLowerCase()) ||
            i.getPropertyValue(t) ||
            (!n && r(e, Cp(t) || t, 1)) ||
            ''
        );
    },
    DC = 'O,Moz,ms,Ms,Webkit'.split(','),
    Cp = function (e, t, n) {
        var i = t || Kf,
            s = i.style,
            o = 5;
        if (e in s && !n) return e;
        for (
            e = e.charAt(0).toUpperCase() + e.substr(1);
            o-- && !(DC[o] + e in s);

        );
        return o < 0 ? null : (o === 3 ? 'ms' : o >= 0 ? DC[o] : '') + e;
    },
    xM = function () {
        iH() &&
            window.document &&
            ((PC = window),
            (xc = PC.document),
            (pp = xc.documentElement),
            (Kf = _M('div') || { style: {} }),
            _M('div'),
            (Li = Cp(Li)),
            (io = Li + 'Origin'),
            (Kf.style.cssText =
                'border-width:0;line-height:0;position:absolute;padding:0'),
            (uD = !!Cp('perspective')),
            (cT = ro.core.reverting),
            (uT = 1));
    },
    OC = function (e) {
        var t = e.ownerSVGElement,
            n = _M(
                'svg',
                (t && t.getAttribute('xmlns')) || 'http://www.w3.org/2000/svg'
            ),
            i = e.cloneNode(!0),
            s;
        (i.style.display = 'block'), n.appendChild(i), pp.appendChild(n);
        try {
            s = i.getBBox();
        } catch {}
        return n.removeChild(i), pp.removeChild(n), s;
    },
    UC = function (e, t) {
        for (var n = t.length; n--; )
            if (e.hasAttribute(t[n])) return e.getAttribute(t[n]);
    },
    cD = function (e) {
        var t, n;
        try {
            t = e.getBBox();
        } catch {
            (t = OC(e)), (n = 1);
        }
        return (
            (t && (t.width || t.height)) || n || (t = OC(e)),
            t && !t.width && !t.x && !t.y
                ? {
                      x: +UC(e, ['x', 'cx', 'x1']) || 0,
                      y: +UC(e, ['y', 'cy', 'y1']) || 0,
                      width: 0,
                      height: 0,
                  }
                : t
        );
    },
    fD = function (e) {
        return !!(e.getCTM && (!e.parentNode || e.ownerSVGElement) && cD(e));
    },
    dh = function (e, t) {
        if (t) {
            var n = e.style,
                i;
            t in Tu && t !== io && (t = Li),
                n.removeProperty
                    ? ((i = t.substr(0, 2)),
                      (i === 'ms' || t.substr(0, 6) === 'webkit') &&
                          (t = '-' + t),
                      n.removeProperty(
                          i === '--' ? t : t.replace(fT, '-$1').toLowerCase()
                      ))
                    : n.removeAttribute(t);
        }
    },
    Sc = function (e, t, n, i, s, o) {
        var a = new no(e._pt, t, n, 0, 1, o ? oD : sD);
        return (e._pt = a), (a.b = i), (a.e = s), e._props.push(n), a;
    },
    kC = { deg: 1, rad: 1, turn: 1 },
    vH = { grid: 1, flex: 1 },
    Pc = function r(e, t, n, i) {
        var s = parseFloat(n) || 0,
            o = (n + '').trim().substr((s + '').length) || 'px',
            a = Kf.style,
            l = rH.test(t),
            u = e.tagName.toLowerCase() === 'svg',
            f = (u ? 'client' : 'offset') + (l ? 'Width' : 'Height'),
            d = 100,
            m = i === 'px',
            v = i === '%',
            _,
            S,
            w,
            x;
        if (i === o || !s || kC[i] || kC[o]) return s;
        if (
            (o !== 'px' && !m && (s = r(e, t, n, 'px')),
            (x = e.getCTM && fD(e)),
            (v || o === '%') && (Tu[t] || ~t.indexOf('adius')))
        )
            return (
                (_ = x ? e.getBBox()[l ? 'width' : 'height'] : e[f]),
                $i(v ? (s / _) * d : (s / 100) * _)
            );
        if (
            ((a[l ? 'width' : 'height'] = d + (m ? o : i)),
            (S =
                (i !== 'rem' && ~t.indexOf('adius')) ||
                (i === 'em' && e.appendChild && !u)
                    ? e
                    : e.parentNode),
            x && (S = (e.ownerSVGElement || {}).parentNode),
            (!S || S === xc || !S.appendChild) && (S = xc.body),
            (w = S._gsap),
            w && v && w.width && l && w.time === Eo.time && !w.uncache)
        )
            return $i((s / w.width) * d);
        if (v && (t === 'height' || t === 'width')) {
            var A = e.style[t];
            (e.style[t] = d + i), (_ = e[f]), A ? (e.style[t] = A) : dh(e, t);
        } else
            (v || o === '%') &&
                !vH[ea(S, 'display')] &&
                (a.position = ea(e, 'position')),
                S === e && (a.position = 'static'),
                S.appendChild(Kf),
                (_ = Kf[f]),
                S.removeChild(Kf),
                (a.position = 'absolute');
        return (
            l && v && ((w = rh(S)), (w.time = Eo.time), (w.width = S[f])),
            $i(m ? (_ * s) / d : _ && s ? (d / _) * s : 0)
        );
    },
    gu = function (e, t, n, i) {
        var s;
        return (
            uT || xM(),
            t in _l &&
                t !== 'transform' &&
                ((t = _l[t]), ~t.indexOf(',') && (t = t.split(',')[0])),
            Tu[t] && t !== 'transform'
                ? ((s = f0(e, i)),
                  (s =
                      t !== 'transformOrigin'
                          ? s[t]
                          : s.svg
                            ? s.origin
                            : k_(ea(e, io)) + ' ' + s.zOrigin + 'px'))
                : ((s = e.style[t]),
                  (!s || s === 'auto' || i || ~(s + '').indexOf('calc(')) &&
                      (s =
                          (U_[t] && U_[t](e, t, n)) ||
                          ea(e, t) ||
                          bI(e, t) ||
                          (t === 'opacity' ? 1 : 0))),
            n && !~(s + '').trim().indexOf(' ') ? Pc(e, t, s, n) + n : s
        );
    },
    yH = function (e, t, n, i) {
        if (!n || n === 'none') {
            var s = Cp(t, e, 1),
                o = s && ea(e, s, 1);
            o && o !== n
                ? ((t = s), (n = o))
                : t === 'borderColor' && (n = ea(e, 'borderTopColor'));
        }
        var a = new no(this._pt, e.style, t, 0, 1, nD),
            l = 0,
            u = 0,
            f,
            d,
            m,
            v,
            _,
            S,
            w,
            x,
            A,
            T,
            b,
            P;
        if (
            ((a.b = n),
            (a.e = i),
            (n += ''),
            (i += ''),
            i.substring(0, 6) === 'var(--' &&
                (i = ea(e, i.substring(4, i.indexOf(')')))),
            i === 'auto' &&
                ((S = e.style[t]),
                (e.style[t] = i),
                (i = ea(e, t) || i),
                S ? (e.style[t] = S) : dh(e, t)),
            (f = [n, i]),
            XI(f),
            (n = f[0]),
            (i = f[1]),
            (m = n.match(rp) || []),
            (P = i.match(rp) || []),
            P.length)
        ) {
            for (; (d = rp.exec(i)); )
                (w = d[0]),
                    (A = i.substring(l, d.index)),
                    _
                        ? (_ = (_ + 1) % 5)
                        : (A.substr(-5) === 'rgba(' ||
                              A.substr(-5) === 'hsla(') &&
                          (_ = 1),
                    w !== (S = m[u++] || '') &&
                        ((v = parseFloat(S) || 0),
                        (b = S.substr((v + '').length)),
                        w.charAt(1) === '=' && (w = dp(v, w) + b),
                        (x = parseFloat(w)),
                        (T = w.substr((x + '').length)),
                        (l = rp.lastIndex - T.length),
                        T ||
                            ((T = T || Co.units[t] || b),
                            l === i.length && ((i += T), (a.e += T))),
                        b !== T && (v = Pc(e, t, S, T) || 0),
                        (a._pt = {
                            _next: a._pt,
                            p: A || u === 1 ? A : ',',
                            s: v,
                            c: x - v,
                            m: (_ && _ < 4) || t === 'zIndex' ? Math.round : 0,
                        }));
            a.c = l < i.length ? i.substring(l, i.length) : '';
        } else a.r = t === 'display' && i === 'none' ? oD : sD;
        return SI.test(i) && (a.e = 0), (this._pt = a), a;
    },
    NC = {
        top: '0%',
        bottom: '100%',
        left: '0%',
        right: '100%',
        center: '50%',
    },
    _H = function (e) {
        var t = e.split(' '),
            n = t[0],
            i = t[1] || '50%';
        return (
            (n === 'top' || n === 'bottom' || i === 'left' || i === 'right') &&
                ((e = n), (n = i), (i = e)),
            (t[0] = NC[n] || n),
            (t[1] = NC[i] || i),
            t.join(' ')
        );
    },
    xH = function (e, t) {
        if (t.tween && t.tween._time === t.tween._dur) {
            var n = t.t,
                i = n.style,
                s = t.u,
                o = n._gsap,
                a,
                l,
                u;
            if (s === 'all' || s === !0) (i.cssText = ''), (l = 1);
            else
                for (s = s.split(','), u = s.length; --u > -1; )
                    (a = s[u]),
                        Tu[a] &&
                            ((l = 1), (a = a === 'transformOrigin' ? io : Li)),
                        dh(n, a);
            l &&
                (dh(n, Li),
                o &&
                    (o.svg && n.removeAttribute('transform'),
                    (i.scale = i.rotate = i.translate = 'none'),
                    f0(n, 1),
                    (o.uncache = 1),
                    aD(i)));
        }
    },
    U_ = {
        clearProps: function (e, t, n, i, s) {
            if (s.data !== 'isFromStart') {
                var o = (e._pt = new no(e._pt, t, n, 0, 0, xH));
                return (
                    (o.u = i), (o.pr = -10), (o.tween = s), e._props.push(n), 1
                );
            }
        },
    },
    c0 = [1, 0, 0, 1, 0, 0],
    hD = {},
    dD = function (e) {
        return e === 'matrix(1, 0, 0, 1, 0, 0)' || e === 'none' || !e;
    },
    FC = function (e) {
        var t = ea(e, Li);
        return dD(t) ? c0 : t.substr(7).match(xI).map($i);
    },
    hT = function (e, t) {
        var n = e._gsap || rh(e),
            i = e.style,
            s = FC(e),
            o,
            a,
            l,
            u;
        return n.svg && e.getAttribute('transform')
            ? ((l = e.transform.baseVal.consolidate().matrix),
              (s = [l.a, l.b, l.c, l.d, l.e, l.f]),
              s.join(',') === '1,0,0,1,0,0' ? c0 : s)
            : (s === c0 &&
                  !e.offsetParent &&
                  e !== pp &&
                  !n.svg &&
                  ((l = i.display),
                  (i.display = 'block'),
                  (o = e.parentNode),
                  (!o ||
                      (!e.offsetParent && !e.getBoundingClientRect().width)) &&
                      ((u = 1), (a = e.nextElementSibling), pp.appendChild(e)),
                  (s = FC(e)),
                  l ? (i.display = l) : dh(e, 'display'),
                  u &&
                      (a
                          ? o.insertBefore(e, a)
                          : o
                            ? o.appendChild(e)
                            : pp.removeChild(e))),
              t && s.length > 6 ? [s[0], s[1], s[4], s[5], s[12], s[13]] : s);
    },
    SM = function (e, t, n, i, s, o) {
        var a = e._gsap,
            l = s || hT(e, !0),
            u = a.xOrigin || 0,
            f = a.yOrigin || 0,
            d = a.xOffset || 0,
            m = a.yOffset || 0,
            v = l[0],
            _ = l[1],
            S = l[2],
            w = l[3],
            x = l[4],
            A = l[5],
            T = t.split(' '),
            b = parseFloat(T[0]) || 0,
            P = parseFloat(T[1]) || 0,
            L,
            D,
            O,
            I;
        n
            ? l !== c0 &&
              (D = v * w - _ * S) &&
              ((O = b * (w / D) + P * (-S / D) + (S * A - w * x) / D),
              (I = b * (-_ / D) + P * (v / D) - (v * A - _ * x) / D),
              (b = O),
              (P = I))
            : ((L = cD(e)),
              (b = L.x + (~T[0].indexOf('%') ? (b / 100) * L.width : b)),
              (P =
                  L.y +
                  (~(T[1] || T[0]).indexOf('%') ? (P / 100) * L.height : P))),
            i || (i !== !1 && a.smooth)
                ? ((x = b - u),
                  (A = P - f),
                  (a.xOffset = d + (x * v + A * S) - x),
                  (a.yOffset = m + (x * _ + A * w) - A))
                : (a.xOffset = a.yOffset = 0),
            (a.xOrigin = b),
            (a.yOrigin = P),
            (a.smooth = !!i),
            (a.origin = t),
            (a.originIsAbsolute = !!n),
            (e.style[io] = '0px 0px'),
            o &&
                (Sc(o, a, 'xOrigin', u, b),
                Sc(o, a, 'yOrigin', f, P),
                Sc(o, a, 'xOffset', d, a.xOffset),
                Sc(o, a, 'yOffset', m, a.yOffset)),
            e.setAttribute('data-svg-origin', b + ' ' + P);
    },
    f0 = function (e, t) {
        var n = e._gsap || new ZI(e);
        if ('x' in n && !t && !n.uncache) return n;
        var i = e.style,
            s = n.scaleX < 0,
            o = 'px',
            a = 'deg',
            l = getComputedStyle(e),
            u = ea(e, io) || '0',
            f,
            d,
            m,
            v,
            _,
            S,
            w,
            x,
            A,
            T,
            b,
            P,
            L,
            D,
            O,
            I,
            U,
            H,
            W,
            q,
            K,
            le,
            ee,
            de,
            Z,
            se,
            J,
            F,
            $,
            fe,
            ne,
            ae;
        return (
            (f = d = m = S = w = x = A = T = b = 0),
            (v = _ = 1),
            (n.svg = !!(e.getCTM && fD(e))),
            l.translate &&
                ((l.translate !== 'none' ||
                    l.scale !== 'none' ||
                    l.rotate !== 'none') &&
                    (i[Li] =
                        (l.translate !== 'none'
                            ? 'translate3d(' +
                              (l.translate + ' 0 0')
                                  .split(' ')
                                  .slice(0, 3)
                                  .join(', ') +
                              ') '
                            : '') +
                        (l.rotate !== 'none'
                            ? 'rotate(' + l.rotate + ') '
                            : '') +
                        (l.scale !== 'none'
                            ? 'scale(' + l.scale.split(' ').join(',') + ') '
                            : '') +
                        (l[Li] !== 'none' ? l[Li] : '')),
                (i.scale = i.rotate = i.translate = 'none')),
            (D = hT(e, n.svg)),
            n.svg &&
                (n.uncache
                    ? ((Z = e.getBBox()),
                      (u = n.xOrigin - Z.x + 'px ' + (n.yOrigin - Z.y) + 'px'),
                      (de = ''))
                    : (de = !t && e.getAttribute('data-svg-origin')),
                SM(e, de || u, !!de || n.originIsAbsolute, n.smooth !== !1, D)),
            (P = n.xOrigin || 0),
            (L = n.yOrigin || 0),
            D !== c0 &&
                ((H = D[0]),
                (W = D[1]),
                (q = D[2]),
                (K = D[3]),
                (f = le = D[4]),
                (d = ee = D[5]),
                D.length === 6
                    ? ((v = Math.sqrt(H * H + W * W)),
                      (_ = Math.sqrt(K * K + q * q)),
                      (S = H || W ? md(W, H) * Gf : 0),
                      (A = q || K ? md(q, K) * Gf + S : 0),
                      A && (_ *= Math.abs(Math.cos(A * mp))),
                      n.svg &&
                          ((f -= P - (P * H + L * q)),
                          (d -= L - (P * W + L * K))))
                    : ((ae = D[6]),
                      (fe = D[7]),
                      (J = D[8]),
                      (F = D[9]),
                      ($ = D[10]),
                      (ne = D[11]),
                      (f = D[12]),
                      (d = D[13]),
                      (m = D[14]),
                      (O = md(ae, $)),
                      (w = O * Gf),
                      O &&
                          ((I = Math.cos(-O)),
                          (U = Math.sin(-O)),
                          (de = le * I + J * U),
                          (Z = ee * I + F * U),
                          (se = ae * I + $ * U),
                          (J = le * -U + J * I),
                          (F = ee * -U + F * I),
                          ($ = ae * -U + $ * I),
                          (ne = fe * -U + ne * I),
                          (le = de),
                          (ee = Z),
                          (ae = se)),
                      (O = md(-q, $)),
                      (x = O * Gf),
                      O &&
                          ((I = Math.cos(-O)),
                          (U = Math.sin(-O)),
                          (de = H * I - J * U),
                          (Z = W * I - F * U),
                          (se = q * I - $ * U),
                          (ne = K * U + ne * I),
                          (H = de),
                          (W = Z),
                          (q = se)),
                      (O = md(W, H)),
                      (S = O * Gf),
                      O &&
                          ((I = Math.cos(O)),
                          (U = Math.sin(O)),
                          (de = H * I + W * U),
                          (Z = le * I + ee * U),
                          (W = W * I - H * U),
                          (ee = ee * I - le * U),
                          (H = de),
                          (le = Z)),
                      w &&
                          Math.abs(w) + Math.abs(S) > 359.9 &&
                          ((w = S = 0), (x = 180 - x)),
                      (v = $i(Math.sqrt(H * H + W * W + q * q))),
                      (_ = $i(Math.sqrt(ee * ee + ae * ae))),
                      (O = md(le, ee)),
                      (A = Math.abs(O) > 2e-4 ? O * Gf : 0),
                      (b = ne ? 1 / (ne < 0 ? -ne : ne) : 0)),
                n.svg &&
                    ((de = e.getAttribute('transform')),
                    (n.forceCSS =
                        e.setAttribute('transform', '') || !dD(ea(e, Li))),
                    de && e.setAttribute('transform', de))),
            Math.abs(A) > 90 &&
                Math.abs(A) < 270 &&
                (s
                    ? ((v *= -1),
                      (A += S <= 0 ? 180 : -180),
                      (S += S <= 0 ? 180 : -180))
                    : ((_ *= -1), (A += A <= 0 ? 180 : -180))),
            (t = t || n.uncache),
            (n.x =
                f -
                ((n.xPercent =
                    f &&
                    ((!t && n.xPercent) ||
                        (Math.round(e.offsetWidth / 2) === Math.round(-f)
                            ? -50
                            : 0)))
                    ? (e.offsetWidth * n.xPercent) / 100
                    : 0) +
                o),
            (n.y =
                d -
                ((n.yPercent =
                    d &&
                    ((!t && n.yPercent) ||
                        (Math.round(e.offsetHeight / 2) === Math.round(-d)
                            ? -50
                            : 0)))
                    ? (e.offsetHeight * n.yPercent) / 100
                    : 0) +
                o),
            (n.z = m + o),
            (n.scaleX = $i(v)),
            (n.scaleY = $i(_)),
            (n.rotation = $i(S) + a),
            (n.rotationX = $i(w) + a),
            (n.rotationY = $i(x) + a),
            (n.skewX = A + a),
            (n.skewY = T + a),
            (n.transformPerspective = b + o),
            (n.zOrigin =
                parseFloat(u.split(' ')[2]) || (!t && n.zOrigin) || 0) &&
                (i[io] = k_(u)),
            (n.xOffset = n.yOffset = 0),
            (n.force3D = Co.force3D),
            (n.renderTransform = n.svg ? wH : uD ? pD : SH),
            (n.uncache = 0),
            n
        );
    },
    k_ = function (e) {
        return (e = e.split(' '))[0] + ' ' + e[1];
    },
    _S = function (e, t, n) {
        var i = cs(t);
        return $i(parseFloat(t) + parseFloat(Pc(e, 'x', n + 'px', i))) + i;
    },
    SH = function (e, t) {
        (t.z = '0px'),
            (t.rotationY = t.rotationX = '0deg'),
            (t.force3D = 0),
            pD(e, t);
    },
    Ef = '0deg',
    Wm = '0px',
    Tf = ') ',
    pD = function (e, t) {
        var n = t || this,
            i = n.xPercent,
            s = n.yPercent,
            o = n.x,
            a = n.y,
            l = n.z,
            u = n.rotation,
            f = n.rotationY,
            d = n.rotationX,
            m = n.skewX,
            v = n.skewY,
            _ = n.scaleX,
            S = n.scaleY,
            w = n.transformPerspective,
            x = n.force3D,
            A = n.target,
            T = n.zOrigin,
            b = '',
            P = (x === 'auto' && e && e !== 1) || x === !0;
        if (T && (d !== Ef || f !== Ef)) {
            var L = parseFloat(f) * mp,
                D = Math.sin(L),
                O = Math.cos(L),
                I;
            (L = parseFloat(d) * mp),
                (I = Math.cos(L)),
                (o = _S(A, o, D * I * -T)),
                (a = _S(A, a, -Math.sin(L) * -T)),
                (l = _S(A, l, O * I * -T + T));
        }
        w !== Wm && (b += 'perspective(' + w + Tf),
            (i || s) && (b += 'translate(' + i + '%, ' + s + '%) '),
            (P || o !== Wm || a !== Wm || l !== Wm) &&
                (b +=
                    l !== Wm || P
                        ? 'translate3d(' + o + ', ' + a + ', ' + l + ') '
                        : 'translate(' + o + ', ' + a + Tf),
            u !== Ef && (b += 'rotate(' + u + Tf),
            f !== Ef && (b += 'rotateY(' + f + Tf),
            d !== Ef && (b += 'rotateX(' + d + Tf),
            (m !== Ef || v !== Ef) && (b += 'skew(' + m + ', ' + v + Tf),
            (_ !== 1 || S !== 1) && (b += 'scale(' + _ + ', ' + S + Tf),
            (A.style[Li] = b || 'translate(0, 0)');
    },
    wH = function (e, t) {
        var n = t || this,
            i = n.xPercent,
            s = n.yPercent,
            o = n.x,
            a = n.y,
            l = n.rotation,
            u = n.skewX,
            f = n.skewY,
            d = n.scaleX,
            m = n.scaleY,
            v = n.target,
            _ = n.xOrigin,
            S = n.yOrigin,
            w = n.xOffset,
            x = n.yOffset,
            A = n.forceCSS,
            T = parseFloat(o),
            b = parseFloat(a),
            P,
            L,
            D,
            O,
            I;
        (l = parseFloat(l)),
            (u = parseFloat(u)),
            (f = parseFloat(f)),
            f && ((f = parseFloat(f)), (u += f), (l += f)),
            l || u
                ? ((l *= mp),
                  (u *= mp),
                  (P = Math.cos(l) * d),
                  (L = Math.sin(l) * d),
                  (D = Math.sin(l - u) * -m),
                  (O = Math.cos(l - u) * m),
                  u &&
                      ((f *= mp),
                      (I = Math.tan(u - f)),
                      (I = Math.sqrt(1 + I * I)),
                      (D *= I),
                      (O *= I),
                      f &&
                          ((I = Math.tan(f)),
                          (I = Math.sqrt(1 + I * I)),
                          (P *= I),
                          (L *= I))),
                  (P = $i(P)),
                  (L = $i(L)),
                  (D = $i(D)),
                  (O = $i(O)))
                : ((P = d), (O = m), (L = D = 0)),
            ((T && !~(o + '').indexOf('px')) ||
                (b && !~(a + '').indexOf('px'))) &&
                ((T = Pc(v, 'x', o, 'px')), (b = Pc(v, 'y', a, 'px'))),
            (_ || S || w || x) &&
                ((T = $i(T + _ - (_ * P + S * D) + w)),
                (b = $i(b + S - (_ * L + S * O) + x))),
            (i || s) &&
                ((I = v.getBBox()),
                (T = $i(T + (i / 100) * I.width)),
                (b = $i(b + (s / 100) * I.height))),
            (I =
                'matrix(' +
                P +
                ',' +
                L +
                ',' +
                D +
                ',' +
                O +
                ',' +
                T +
                ',' +
                b +
                ')'),
            v.setAttribute('transform', I),
            A && (v.style[Li] = I);
    },
    MH = function (e, t, n, i, s) {
        var o = 360,
            a = Br(s),
            l = parseFloat(s) * (a && ~s.indexOf('rad') ? Gf : 1),
            u = l - i,
            f = i + u + 'deg',
            d,
            m;
        return (
            a &&
                ((d = s.split('_')[1]),
                d === 'short' &&
                    ((u %= o), u !== u % (o / 2) && (u += u < 0 ? o : -360)),
                d === 'cw' && u < 0
                    ? (u = ((u + o * IC) % o) - ~~(u / o) * o)
                    : d === 'ccw' &&
                      u > 0 &&
                      (u = ((u - o * IC) % o) - ~~(u / o) * o)),
            (e._pt = m = new no(e._pt, t, n, i, u, oH)),
            (m.e = f),
            (m.u = 'deg'),
            e._props.push(n),
            m
        );
    },
    BC = function (e, t) {
        for (var n in t) e[n] = t[n];
        return e;
    },
    EH = function (e, t, n) {
        var i = BC({}, n._gsap),
            s = 'perspective,force3D,transformOrigin,svgOrigin',
            o = n.style,
            a,
            l,
            u,
            f,
            d,
            m,
            v,
            _;
        i.svg
            ? ((u = n.getAttribute('transform')),
              n.setAttribute('transform', ''),
              (o[Li] = t),
              (a = f0(n, 1)),
              dh(n, Li),
              n.setAttribute('transform', u))
            : ((u = getComputedStyle(n)[Li]),
              (o[Li] = t),
              (a = f0(n, 1)),
              (o[Li] = u));
        for (l in Tu)
            (u = i[l]),
                (f = a[l]),
                u !== f &&
                    s.indexOf(l) < 0 &&
                    ((v = cs(u)),
                    (_ = cs(f)),
                    (d = v !== _ ? Pc(n, l, u, _) : parseFloat(u)),
                    (m = parseFloat(f)),
                    (e._pt = new no(e._pt, a, l, d, m - d, yM)),
                    (e._pt.u = _ || 0),
                    e._props.push(l));
        BC(a, i);
    };
to('padding,margin,Width,Radius', function (r, e) {
    var t = 'Top',
        n = 'Right',
        i = 'Bottom',
        s = 'Left',
        o = (e < 3 ? [t, n, i, s] : [t + s, t + n, i + n, i + s]).map(
            function (a) {
                return e < 2 ? r + a : 'border' + a + r;
            }
        );
    U_[e > 1 ? 'border' + r : r] = function (a, l, u, f, d) {
        var m, v;
        if (arguments.length < 4)
            return (
                (m = o.map(function (_) {
                    return gu(a, _, u);
                })),
                (v = m.join(' ')),
                v.split(m[0]).length === 5 ? m[0] : v
            );
        (m = (f + '').split(' ')),
            (v = {}),
            o.forEach(function (_, S) {
                return (v[_] = m[S] = m[S] || m[((S - 1) / 2) | 0]);
            }),
            a.init(l, v, d);
    };
});
var mD = {
    name: 'css',
    register: xM,
    targetTest: function (e) {
        return e.style && e.nodeType;
    },
    init: function (e, t, n, i, s) {
        var o = this._props,
            a = e.style,
            l = n.vars.startAt,
            u,
            f,
            d,
            m,
            v,
            _,
            S,
            w,
            x,
            A,
            T,
            b,
            P,
            L,
            D,
            O;
        uT || xM(),
            (this.styles = this.styles || lD(e)),
            (O = this.styles.props),
            (this.tween = n);
        for (S in t)
            if (
                S !== 'autoRound' &&
                ((f = t[S]), !(wo[S] && $I(S, t, n, i, e, s)))
            ) {
                if (
                    ((v = typeof f),
                    (_ = U_[S]),
                    v === 'function' &&
                        ((f = f.call(n, i, e, s)), (v = typeof f)),
                    v === 'string' && ~f.indexOf('random(') && (f = a0(f)),
                    _)
                )
                    _(this, e, S, f, n) && (D = 1);
                else if (S.substr(0, 2) === '--')
                    (u = (getComputedStyle(e).getPropertyValue(S) + '').trim()),
                        (f += ''),
                        (Ec.lastIndex = 0),
                        Ec.test(u) || ((w = cs(u)), (x = cs(f))),
                        x ? w !== x && (u = Pc(e, S, u, x) + x) : w && (f += w),
                        this.add(a, 'setProperty', u, f, i, s, 0, 0, S),
                        o.push(S),
                        O.push(S, 0, a[S]);
                else if (v !== 'undefined') {
                    if (
                        (l && S in l
                            ? ((u =
                                  typeof l[S] == 'function'
                                      ? l[S].call(n, i, e, s)
                                      : l[S]),
                              Br(u) && ~u.indexOf('random(') && (u = a0(u)),
                              cs(u + '') ||
                                  u === 'auto' ||
                                  (u += Co.units[S] || cs(gu(e, S)) || ''),
                              (u + '').charAt(1) === '=' && (u = gu(e, S)))
                            : (u = gu(e, S)),
                        (m = parseFloat(u)),
                        (A =
                            v === 'string' &&
                            f.charAt(1) === '=' &&
                            f.substr(0, 2)),
                        A && (f = f.substr(2)),
                        (d = parseFloat(f)),
                        S in _l &&
                            (S === 'autoAlpha' &&
                                (m === 1 &&
                                    gu(e, 'visibility') === 'hidden' &&
                                    d &&
                                    (m = 0),
                                O.push('visibility', 0, a.visibility),
                                Sc(
                                    this,
                                    a,
                                    'visibility',
                                    m ? 'inherit' : 'hidden',
                                    d ? 'inherit' : 'hidden',
                                    !d
                                )),
                            S !== 'scale' &&
                                S !== 'transform' &&
                                ((S = _l[S]),
                                ~S.indexOf(',') && (S = S.split(',')[0]))),
                        (T = S in Tu),
                        T)
                    ) {
                        if (
                            (this.styles.save(S),
                            v === 'string' &&
                                f.substring(0, 6) === 'var(--' &&
                                ((f = ea(e, f.substring(4, f.indexOf(')')))),
                                (d = parseFloat(f))),
                            b ||
                                ((P = e._gsap),
                                (P.renderTransform && !t.parseTransform) ||
                                    f0(e, t.parseTransform),
                                (L = t.smoothOrigin !== !1 && P.smooth),
                                (b = this._pt =
                                    new no(
                                        this._pt,
                                        a,
                                        Li,
                                        0,
                                        1,
                                        P.renderTransform,
                                        P,
                                        0,
                                        -1
                                    )),
                                (b.dep = 1)),
                            S === 'scale')
                        )
                            (this._pt = new no(
                                this._pt,
                                P,
                                'scaleY',
                                P.scaleY,
                                (A ? dp(P.scaleY, A + d) : d) - P.scaleY || 0,
                                yM
                            )),
                                (this._pt.u = 0),
                                o.push('scaleY', S),
                                (S += 'X');
                        else if (S === 'transformOrigin') {
                            O.push(io, 0, a[io]),
                                (f = _H(f)),
                                P.svg
                                    ? SM(e, f, 0, L, 0, this)
                                    : ((x = parseFloat(f.split(' ')[2]) || 0),
                                      x !== P.zOrigin &&
                                          Sc(this, P, 'zOrigin', P.zOrigin, x),
                                      Sc(this, a, S, k_(u), k_(f)));
                            continue;
                        } else if (S === 'svgOrigin') {
                            SM(e, f, 1, L, 0, this);
                            continue;
                        } else if (S in hD) {
                            MH(this, P, S, m, A ? dp(m, A + f) : f);
                            continue;
                        } else if (S === 'smoothOrigin') {
                            Sc(this, P, 'smooth', P.smooth, f);
                            continue;
                        } else if (S === 'force3D') {
                            P[S] = f;
                            continue;
                        } else if (S === 'transform') {
                            EH(this, f, e);
                            continue;
                        }
                    } else S in a || (S = Cp(S) || S);
                    if (
                        T ||
                        ((d || d === 0) &&
                            (m || m === 0) &&
                            !sH.test(f) &&
                            S in a)
                    )
                        (w = (u + '').substr((m + '').length)),
                            d || (d = 0),
                            (x = cs(f) || (S in Co.units ? Co.units[S] : w)),
                            w !== x && (m = Pc(e, S, u, x)),
                            (this._pt = new no(
                                this._pt,
                                T ? P : a,
                                S,
                                m,
                                (A ? dp(m, A + d) : d) - m,
                                !T &&
                                (x === 'px' || S === 'zIndex') &&
                                t.autoRound !== !1
                                    ? lH
                                    : yM
                            )),
                            (this._pt.u = x || 0),
                            w !== x &&
                                x !== '%' &&
                                ((this._pt.b = u), (this._pt.r = aH));
                    else if (S in a) yH.call(this, e, S, u, A ? A + f : f);
                    else if (S in e)
                        this.add(e, S, u || e[S], A ? A + f : f, i, s);
                    else if (S !== 'parseTransform') {
                        QE(S, f);
                        continue;
                    }
                    T ||
                        (S in a
                            ? O.push(S, 0, a[S])
                            : typeof e[S] == 'function'
                              ? O.push(S, 2, e[S]())
                              : O.push(S, 1, u || e[S])),
                        o.push(S);
                }
            }
        D && iD(this);
    },
    render: function (e, t) {
        if (t.tween._time || !cT())
            for (var n = t._pt; n; ) n.r(e, n.d), (n = n._next);
        else t.styles.revert();
    },
    get: gu,
    aliases: _l,
    getSetter: function (e, t, n) {
        var i = _l[t];
        return (
            i && i.indexOf(',') < 0 && (t = i),
            t in Tu && t !== io && (e._gsap.x || gu(e, 'x'))
                ? n && LC === n
                    ? t === 'scale'
                        ? hH
                        : fH
                    : (LC = n || {}) && (t === 'scale' ? dH : pH)
                : e.style && !ZE(e.style[t])
                  ? uH
                  : ~t.indexOf('-')
                    ? cH
                    : aT(e, t)
        );
    },
    core: { _removeProperty: dh, _getMatrix: hT },
};
ro.utils.checkPrefix = Cp;
ro.core.getStyleSaver = lD;
(function (r, e, t, n) {
    var i = to(r + ',' + e + ',' + t, function (s) {
        Tu[s] = 1;
    });
    to(e, function (s) {
        (Co.units[s] = 'deg'), (hD[s] = 1);
    }),
        (_l[i[13]] = r + ',' + e),
        to(n, function (s) {
            var o = s.split(':');
            _l[o[1]] = i[o[0]];
        });
})(
    'x,y,z,scale,scaleX,scaleY,xPercent,yPercent',
    'rotation,rotationX,rotationY,skewX,skewY',
    'transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective',
    '0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY'
);
to(
    'x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective',
    function (r) {
        Co.units[r] = 'px';
    }
);
ro.registerPlugin(mD);
var gD = ro.registerPlugin(mD) || ro;
gD.core.Tween;
const vD = () => {
        const r = Y.useRef(null);
        return (
            Y.useEffect(() => {
                gD.timeline({ repeat: -1 }).to(r.current, {
                    duration: 0.75,
                    backgroundPositionX: '200%',
                    ease: 'linear',
                });
            }, []),
            we.jsx('div', {
                className:
                    'bg-custom-dark-gray pointBackground relative flex h-screen w-screen flex-col items-center justify-center overflow-hidden',
                children: we.jsxs('div', {
                    className: 'relative flex h-1 w-64 flex-col items-center',
                    children: [
                        we.jsx('img', {
                            src: '/favicon.svg',
                            alt: 'logo',
                            className: 'relative bottom-30 w-30 animate-bounce',
                            style: { animation: 'bounce 2s infinite' },
                        }),
                        we.jsx('div', {
                            ref: r,
                            className: 'absolute top-5 h-full w-1/2',
                            style: {
                                background:
                                    'linear-gradient(90deg, transparent 0%, #d85dc1 50%, transparent 100%)',
                                backgroundSize: '200% 100%',
                                backgroundPosition: '0% 0%',
                            },
                        }),
                    ],
                }),
            })
        );
    },
    LQ = Object.freeze(
        Object.defineProperty(
            { __proto__: null, default: vD },
            Symbol.toStringTag,
            { value: 'Module' }
        )
    );
class Mg extends Error {}
Mg.prototype.name = 'InvalidTokenError';
function TH(r) {
    return decodeURIComponent(
        atob(r).replace(/(.)/g, (e, t) => {
            let n = t.charCodeAt(0).toString(16).toUpperCase();
            return n.length < 2 && (n = '0' + n), '%' + n;
        })
    );
}
function AH(r) {
    let e = r.replace(/-/g, '+').replace(/_/g, '/');
    switch (e.length % 4) {
        case 0:
            break;
        case 2:
            e += '==';
            break;
        case 3:
            e += '=';
            break;
        default:
            throw new Error('base64 string is not of the correct length');
    }
    try {
        return TH(e);
    } catch {
        return atob(e);
    }
}
function bH(r, e) {
    if (typeof r != 'string')
        throw new Mg('Invalid token specified: must be a string');
    e || (e = {});
    const t = e.header === !0 ? 0 : 1,
        n = r.split('.')[t];
    if (typeof n != 'string')
        throw new Mg(`Invalid token specified: missing part #${t + 1}`);
    let i;
    try {
        i = AH(n);
    } catch (s) {
        throw new Mg(
            `Invalid token specified: invalid base64 for part #${t + 1} (${s.message})`
        );
    }
    try {
        return JSON.parse(i);
    } catch (s) {
        throw new Mg(
            `Invalid token specified: invalid json for part #${t + 1} (${s.message})`
        );
    }
}
const CH = (r) => {
        try {
            if (!r) return null;
            const e = bH(r),
                t = Date.now() / 1e3;
            return e.exp && e.exp < t ? null : e;
        } catch (e) {
            return console.error('Error decoding token:', e), null;
        }
    },
    RH = () => {
        const r = localStorage.getItem('token'),
            e = CH(r);
        return !e || !e.data ? null : e.data;
    },
    PH = () => localStorage.getItem('token'),
    LH = () => {
        try {
            const r = RH();
            return r ? r.role : null;
        } catch (r) {
            return console.error('Error decoding token:', r), null;
        }
    },
    IH = ({ requiredRoles: r = [] }) => {
        const e = PH(),
            t = LH();
        return e
            ? r.length > 0 && !r.includes(t || '')
                ? we.jsx(R_, { to: '/redirect/not-authorized', replace: !0 })
                : we.jsx(CV, {})
            : we.jsx(R_, { to: '/auth', replace: !0 });
    };
/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */ const Vp = '166',
    DH = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 },
    OH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 },
    yD = 0,
    wM = 1,
    _D = 2,
    UH = 3,
    xD = 0,
    Ix = 1,
    Ug = 2,
    Fa = 3,
    Au = 0,
    ps = 1,
    To = 2,
    Al = 0,
    lh = 1,
    MM = 2,
    EM = 3,
    TM = 4,
    SD = 5,
    yc = 100,
    wD = 101,
    MD = 102,
    ED = 103,
    TD = 104,
    AD = 200,
    bD = 201,
    CD = 202,
    RD = 203,
    N_ = 204,
    F_ = 205,
    PD = 206,
    LD = 207,
    ID = 208,
    DD = 209,
    OD = 210,
    UD = 211,
    kD = 212,
    ND = 213,
    FD = 214,
    BD = 0,
    zD = 1,
    VD = 2,
    h0 = 3,
    HD = 4,
    GD = 5,
    WD = 6,
    jD = 7,
    G0 = 0,
    XD = 1,
    YD = 2,
    bl = 0,
    qD = 1,
    KD = 2,
    ZD = 3,
    dT = 4,
    $D = 5,
    JD = 6,
    QD = 7,
    AM = 'attached',
    eO = 'detached',
    Lc = 300,
    Pl = 301,
    Ic = 302,
    Rp = 303,
    d0 = 304,
    Hp = 306,
    p0 = 1e3,
    pr = 1001,
    m0 = 1002,
    Fn = 1003,
    pT = 1004,
    kH = 1004,
    op = 1005,
    NH = 1005,
    Cn = 1006,
    kg = 1007,
    FH = 1007,
    za = 1008,
    bM = 1008,
    so = 1009,
    Dx = 1010,
    Ox = 1011,
    Pp = 1012,
    W0 = 1013,
    Ll = 1014,
    ri = 1015,
    Er = 1016,
    Ux = 1017,
    kx = 1018,
    ph = 1020,
    mT = 35902,
    gT = 1021,
    vT = 1022,
    er = 1023,
    yT = 1024,
    _T = 1025,
    uh = 1026,
    mh = 1027,
    Tc = 1028,
    j0 = 1029,
    xT = 1030,
    Nx = 1031,
    BH = 1032,
    Fx = 1033,
    Ng = 33776,
    Fg = 33777,
    Bg = 33778,
    zg = 33779,
    B_ = 35840,
    z_ = 35841,
    V_ = 35842,
    H_ = 35843,
    G_ = 36196,
    W_ = 37492,
    j_ = 37496,
    X_ = 37808,
    Y_ = 37809,
    q_ = 37810,
    K_ = 37811,
    Z_ = 37812,
    $_ = 37813,
    J_ = 37814,
    Q_ = 37815,
    ex = 37816,
    tx = 37817,
    nx = 37818,
    ix = 37819,
    rx = 37820,
    sx = 37821,
    Vg = 36492,
    ox = 36494,
    ax = 36495,
    ST = 36283,
    lx = 36284,
    ux = 36285,
    cx = 36286,
    tO = 2200,
    nO = 2201,
    iO = 2202,
    g0 = 2300,
    fx = 2301,
    y_ = 2302,
    Zf = 2400,
    $f = 2401,
    v0 = 2402,
    Bx = 2500,
    wT = 2501,
    zH = 0,
    VH = 1,
    HH = 2,
    rO = 3200,
    MT = 3201,
    Bc = 0,
    sO = 1,
    vu = '',
    Mo = 'srgb',
    na = 'srgb-linear',
    zx = 'display-p3',
    X0 = 'display-p3-linear',
    y0 = 'linear',
    ci = 'srgb',
    _0 = 'rec709',
    x0 = 'p3',
    GH = 0,
    Wf = 7680,
    WH = 7681,
    jH = 7682,
    XH = 7683,
    YH = 34055,
    qH = 34056,
    KH = 5386,
    ZH = 512,
    $H = 513,
    JH = 514,
    QH = 515,
    e8 = 516,
    t8 = 517,
    n8 = 518,
    CM = 519,
    oO = 512,
    aO = 513,
    lO = 514,
    ET = 515,
    uO = 516,
    cO = 517,
    fO = 518,
    hO = 519,
    S0 = 35044,
    i8 = 35048,
    r8 = 35040,
    s8 = 35045,
    o8 = 35049,
    a8 = 35041,
    l8 = 35046,
    u8 = 35050,
    c8 = 35042,
    f8 = '100',
    RM = '300 es',
    xl = 2e3,
    w0 = 2001;
let bu = class {
    addEventListener(e, t) {
        this._listeners === void 0 && (this._listeners = {});
        const n = this._listeners;
        n[e] === void 0 && (n[e] = []), n[e].indexOf(t) === -1 && n[e].push(t);
    }
    hasEventListener(e, t) {
        if (this._listeners === void 0) return !1;
        const n = this._listeners;
        return n[e] !== void 0 && n[e].indexOf(t) !== -1;
    }
    removeEventListener(e, t) {
        if (this._listeners === void 0) return;
        const i = this._listeners[e];
        if (i !== void 0) {
            const s = i.indexOf(t);
            s !== -1 && i.splice(s, 1);
        }
    }
    dispatchEvent(e) {
        if (this._listeners === void 0) return;
        const n = this._listeners[e.type];
        if (n !== void 0) {
            e.target = this;
            const i = n.slice(0);
            for (let s = 0, o = i.length; s < o; s++) i[s].call(this, e);
            e.target = null;
        }
    }
};
const ss = [
    '00',
    '01',
    '02',
    '03',
    '04',
    '05',
    '06',
    '07',
    '08',
    '09',
    '0a',
    '0b',
    '0c',
    '0d',
    '0e',
    '0f',
    '10',
    '11',
    '12',
    '13',
    '14',
    '15',
    '16',
    '17',
    '18',
    '19',
    '1a',
    '1b',
    '1c',
    '1d',
    '1e',
    '1f',
    '20',
    '21',
    '22',
    '23',
    '24',
    '25',
    '26',
    '27',
    '28',
    '29',
    '2a',
    '2b',
    '2c',
    '2d',
    '2e',
    '2f',
    '30',
    '31',
    '32',
    '33',
    '34',
    '35',
    '36',
    '37',
    '38',
    '39',
    '3a',
    '3b',
    '3c',
    '3d',
    '3e',
    '3f',
    '40',
    '41',
    '42',
    '43',
    '44',
    '45',
    '46',
    '47',
    '48',
    '49',
    '4a',
    '4b',
    '4c',
    '4d',
    '4e',
    '4f',
    '50',
    '51',
    '52',
    '53',
    '54',
    '55',
    '56',
    '57',
    '58',
    '59',
    '5a',
    '5b',
    '5c',
    '5d',
    '5e',
    '5f',
    '60',
    '61',
    '62',
    '63',
    '64',
    '65',
    '66',
    '67',
    '68',
    '69',
    '6a',
    '6b',
    '6c',
    '6d',
    '6e',
    '6f',
    '70',
    '71',
    '72',
    '73',
    '74',
    '75',
    '76',
    '77',
    '78',
    '79',
    '7a',
    '7b',
    '7c',
    '7d',
    '7e',
    '7f',
    '80',
    '81',
    '82',
    '83',
    '84',
    '85',
    '86',
    '87',
    '88',
    '89',
    '8a',
    '8b',
    '8c',
    '8d',
    '8e',
    '8f',
    '90',
    '91',
    '92',
    '93',
    '94',
    '95',
    '96',
    '97',
    '98',
    '99',
    '9a',
    '9b',
    '9c',
    '9d',
    '9e',
    '9f',
    'a0',
    'a1',
    'a2',
    'a3',
    'a4',
    'a5',
    'a6',
    'a7',
    'a8',
    'a9',
    'aa',
    'ab',
    'ac',
    'ad',
    'ae',
    'af',
    'b0',
    'b1',
    'b2',
    'b3',
    'b4',
    'b5',
    'b6',
    'b7',
    'b8',
    'b9',
    'ba',
    'bb',
    'bc',
    'bd',
    'be',
    'bf',
    'c0',
    'c1',
    'c2',
    'c3',
    'c4',
    'c5',
    'c6',
    'c7',
    'c8',
    'c9',
    'ca',
    'cb',
    'cc',
    'cd',
    'ce',
    'cf',
    'd0',
    'd1',
    'd2',
    'd3',
    'd4',
    'd5',
    'd6',
    'd7',
    'd8',
    'd9',
    'da',
    'db',
    'dc',
    'dd',
    'de',
    'df',
    'e0',
    'e1',
    'e2',
    'e3',
    'e4',
    'e5',
    'e6',
    'e7',
    'e8',
    'e9',
    'ea',
    'eb',
    'ec',
    'ed',
    'ee',
    'ef',
    'f0',
    'f1',
    'f2',
    'f3',
    'f4',
    'f5',
    'f6',
    'f7',
    'f8',
    'f9',
    'fa',
    'fb',
    'fc',
    'fd',
    'fe',
    'ff',
];
let zC = 1234567;
const ch = Math.PI / 180,
    Lp = 180 / Math.PI;
function Ro() {
    const r = (Math.random() * 4294967295) | 0,
        e = (Math.random() * 4294967295) | 0,
        t = (Math.random() * 4294967295) | 0,
        n = (Math.random() * 4294967295) | 0;
    return (
        ss[r & 255] +
        ss[(r >> 8) & 255] +
        ss[(r >> 16) & 255] +
        ss[(r >> 24) & 255] +
        '-' +
        ss[e & 255] +
        ss[(e >> 8) & 255] +
        '-' +
        ss[((e >> 16) & 15) | 64] +
        ss[(e >> 24) & 255] +
        '-' +
        ss[(t & 63) | 128] +
        ss[(t >> 8) & 255] +
        '-' +
        ss[(t >> 16) & 255] +
        ss[(t >> 24) & 255] +
        ss[n & 255] +
        ss[(n >> 8) & 255] +
        ss[(n >> 16) & 255] +
        ss[(n >> 24) & 255]
    ).toLowerCase();
}
function Vi(r, e, t) {
    return Math.max(e, Math.min(t, r));
}
function TT(r, e) {
    return ((r % e) + e) % e;
}
function h8(r, e, t, n, i) {
    return n + ((r - e) * (i - n)) / (t - e);
}
function d8(r, e, t) {
    return r !== e ? (t - r) / (e - r) : 0;
}
function Hg(r, e, t) {
    return (1 - t) * r + t * e;
}
function p8(r, e, t, n) {
    return Hg(r, e, 1 - Math.exp(-t * n));
}
function m8(r, e = 1) {
    return e - Math.abs(TT(r, e * 2) - e);
}
function g8(r, e, t) {
    return r <= e
        ? 0
        : r >= t
          ? 1
          : ((r = (r - e) / (t - e)), r * r * (3 - 2 * r));
}
function v8(r, e, t) {
    return r <= e
        ? 0
        : r >= t
          ? 1
          : ((r = (r - e) / (t - e)), r * r * r * (r * (r * 6 - 15) + 10));
}
function y8(r, e) {
    return r + Math.floor(Math.random() * (e - r + 1));
}
function _8(r, e) {
    return r + Math.random() * (e - r);
}
function x8(r) {
    return r * (0.5 - Math.random());
}
function S8(r) {
    r !== void 0 && (zC = r);
    let e = (zC += 1831565813);
    return (
        (e = Math.imul(e ^ (e >>> 15), e | 1)),
        (e ^= e + Math.imul(e ^ (e >>> 7), e | 61)),
        ((e ^ (e >>> 14)) >>> 0) / 4294967296
    );
}
function w8(r) {
    return r * ch;
}
function M8(r) {
    return r * Lp;
}
function E8(r) {
    return (r & (r - 1)) === 0 && r !== 0;
}
function T8(r) {
    return Math.pow(2, Math.ceil(Math.log(r) / Math.LN2));
}
function A8(r) {
    return Math.pow(2, Math.floor(Math.log(r) / Math.LN2));
}
function b8(r, e, t, n, i) {
    const s = Math.cos,
        o = Math.sin,
        a = s(t / 2),
        l = o(t / 2),
        u = s((e + n) / 2),
        f = o((e + n) / 2),
        d = s((e - n) / 2),
        m = o((e - n) / 2),
        v = s((n - e) / 2),
        _ = o((n - e) / 2);
    switch (i) {
        case 'XYX':
            r.set(a * f, l * d, l * m, a * u);
            break;
        case 'YZY':
            r.set(l * m, a * f, l * d, a * u);
            break;
        case 'ZXZ':
            r.set(l * d, l * m, a * f, a * u);
            break;
        case 'XZX':
            r.set(a * f, l * _, l * v, a * u);
            break;
        case 'YXY':
            r.set(l * v, a * f, l * _, a * u);
            break;
        case 'ZYZ':
            r.set(l * _, l * v, a * f, a * u);
            break;
        default:
            console.warn(
                'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' +
                    i
            );
    }
}
function Os(r, e) {
    switch (e.constructor) {
        case Float32Array:
            return r;
        case Uint32Array:
            return r / 4294967295;
        case Uint16Array:
            return r / 65535;
        case Uint8Array:
            return r / 255;
        case Int32Array:
            return Math.max(r / 2147483647, -1);
        case Int16Array:
            return Math.max(r / 32767, -1);
        case Int8Array:
            return Math.max(r / 127, -1);
        default:
            throw new Error('Invalid component type.');
    }
}
function vn(r, e) {
    switch (e.constructor) {
        case Float32Array:
            return r;
        case Uint32Array:
            return Math.round(r * 4294967295);
        case Uint16Array:
            return Math.round(r * 65535);
        case Uint8Array:
            return Math.round(r * 255);
        case Int32Array:
            return Math.round(r * 2147483647);
        case Int16Array:
            return Math.round(r * 32767);
        case Int8Array:
            return Math.round(r * 127);
        default:
            throw new Error('Invalid component type.');
    }
}
const AT = {
    DEG2RAD: ch,
    RAD2DEG: Lp,
    generateUUID: Ro,
    clamp: Vi,
    euclideanModulo: TT,
    mapLinear: h8,
    inverseLerp: d8,
    lerp: Hg,
    damp: p8,
    pingpong: m8,
    smoothstep: g8,
    smootherstep: v8,
    randInt: y8,
    randFloat: _8,
    randFloatSpread: x8,
    seededRandom: S8,
    degToRad: w8,
    radToDeg: M8,
    isPowerOfTwo: E8,
    ceilPowerOfTwo: T8,
    floorPowerOfTwo: A8,
    setQuaternionFromProperEuler: b8,
    normalize: vn,
    denormalize: Os,
};
class tt {
    constructor(e = 0, t = 0) {
        (tt.prototype.isVector2 = !0), (this.x = e), (this.y = t);
    }
    get width() {
        return this.x;
    }
    set width(e) {
        this.x = e;
    }
    get height() {
        return this.y;
    }
    set height(e) {
        this.y = e;
    }
    set(e, t) {
        return (this.x = e), (this.y = t), this;
    }
    setScalar(e) {
        return (this.x = e), (this.y = e), this;
    }
    setX(e) {
        return (this.x = e), this;
    }
    setY(e) {
        return (this.y = e), this;
    }
    setComponent(e, t) {
        switch (e) {
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            default:
                throw new Error('index is out of range: ' + e);
        }
        return this;
    }
    getComponent(e) {
        switch (e) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            default:
                throw new Error('index is out of range: ' + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y);
    }
    copy(e) {
        return (this.x = e.x), (this.y = e.y), this;
    }
    add(e) {
        return (this.x += e.x), (this.y += e.y), this;
    }
    addScalar(e) {
        return (this.x += e), (this.y += e), this;
    }
    addVectors(e, t) {
        return (this.x = e.x + t.x), (this.y = e.y + t.y), this;
    }
    addScaledVector(e, t) {
        return (this.x += e.x * t), (this.y += e.y * t), this;
    }
    sub(e) {
        return (this.x -= e.x), (this.y -= e.y), this;
    }
    subScalar(e) {
        return (this.x -= e), (this.y -= e), this;
    }
    subVectors(e, t) {
        return (this.x = e.x - t.x), (this.y = e.y - t.y), this;
    }
    multiply(e) {
        return (this.x *= e.x), (this.y *= e.y), this;
    }
    multiplyScalar(e) {
        return (this.x *= e), (this.y *= e), this;
    }
    divide(e) {
        return (this.x /= e.x), (this.y /= e.y), this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    applyMatrix3(e) {
        const t = this.x,
            n = this.y,
            i = e.elements;
        return (
            (this.x = i[0] * t + i[3] * n + i[6]),
            (this.y = i[1] * t + i[4] * n + i[7]),
            this
        );
    }
    min(e) {
        return (
            (this.x = Math.min(this.x, e.x)),
            (this.y = Math.min(this.y, e.y)),
            this
        );
    }
    max(e) {
        return (
            (this.x = Math.max(this.x, e.x)),
            (this.y = Math.max(this.y, e.y)),
            this
        );
    }
    clamp(e, t) {
        return (
            (this.x = Math.max(e.x, Math.min(t.x, this.x))),
            (this.y = Math.max(e.y, Math.min(t.y, this.y))),
            this
        );
    }
    clampScalar(e, t) {
        return (
            (this.x = Math.max(e, Math.min(t, this.x))),
            (this.y = Math.max(e, Math.min(t, this.y))),
            this
        );
    }
    clampLength(e, t) {
        const n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(
            Math.max(e, Math.min(t, n))
        );
    }
    floor() {
        return (
            (this.x = Math.floor(this.x)), (this.y = Math.floor(this.y)), this
        );
    }
    ceil() {
        return (this.x = Math.ceil(this.x)), (this.y = Math.ceil(this.y)), this;
    }
    round() {
        return (
            (this.x = Math.round(this.x)), (this.y = Math.round(this.y)), this
        );
    }
    roundToZero() {
        return (
            (this.x = Math.trunc(this.x)), (this.y = Math.trunc(this.y)), this
        );
    }
    negate() {
        return (this.x = -this.x), (this.y = -this.y), this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y;
    }
    cross(e) {
        return this.x * e.y - this.y * e.x;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    angle() {
        return Math.atan2(-this.y, -this.x) + Math.PI;
    }
    angleTo(e) {
        const t = Math.sqrt(this.lengthSq() * e.lengthSq());
        if (t === 0) return Math.PI / 2;
        const n = this.dot(e) / t;
        return Math.acos(Vi(n, -1, 1));
    }
    distanceTo(e) {
        return Math.sqrt(this.distanceToSquared(e));
    }
    distanceToSquared(e) {
        const t = this.x - e.x,
            n = this.y - e.y;
        return t * t + n * n;
    }
    manhattanDistanceTo(e) {
        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return (
            (this.x += (e.x - this.x) * t), (this.y += (e.y - this.y) * t), this
        );
    }
    lerpVectors(e, t, n) {
        return (
            (this.x = e.x + (t.x - e.x) * n),
            (this.y = e.y + (t.y - e.y) * n),
            this
        );
    }
    equals(e) {
        return e.x === this.x && e.y === this.y;
    }
    fromArray(e, t = 0) {
        return (this.x = e[t]), (this.y = e[t + 1]), this;
    }
    toArray(e = [], t = 0) {
        return (e[t] = this.x), (e[t + 1] = this.y), e;
    }
    fromBufferAttribute(e, t) {
        return (this.x = e.getX(t)), (this.y = e.getY(t)), this;
    }
    rotateAround(e, t) {
        const n = Math.cos(t),
            i = Math.sin(t),
            s = this.x - e.x,
            o = this.y - e.y;
        return (
            (this.x = s * n - o * i + e.x), (this.y = s * i + o * n + e.y), this
        );
    }
    random() {
        return (this.x = Math.random()), (this.y = Math.random()), this;
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y;
    }
}
class pn {
    constructor(e, t, n, i, s, o, a, l, u) {
        (pn.prototype.isMatrix3 = !0),
            (this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1]),
            e !== void 0 && this.set(e, t, n, i, s, o, a, l, u);
    }
    set(e, t, n, i, s, o, a, l, u) {
        const f = this.elements;
        return (
            (f[0] = e),
            (f[1] = i),
            (f[2] = a),
            (f[3] = t),
            (f[4] = s),
            (f[5] = l),
            (f[6] = n),
            (f[7] = o),
            (f[8] = u),
            this
        );
    }
    identity() {
        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this;
    }
    copy(e) {
        const t = this.elements,
            n = e.elements;
        return (
            (t[0] = n[0]),
            (t[1] = n[1]),
            (t[2] = n[2]),
            (t[3] = n[3]),
            (t[4] = n[4]),
            (t[5] = n[5]),
            (t[6] = n[6]),
            (t[7] = n[7]),
            (t[8] = n[8]),
            this
        );
    }
    extractBasis(e, t, n) {
        return (
            e.setFromMatrix3Column(this, 0),
            t.setFromMatrix3Column(this, 1),
            n.setFromMatrix3Column(this, 2),
            this
        );
    }
    setFromMatrix4(e) {
        const t = e.elements;
        return (
            this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]),
            this
        );
    }
    multiply(e) {
        return this.multiplyMatrices(this, e);
    }
    premultiply(e) {
        return this.multiplyMatrices(e, this);
    }
    multiplyMatrices(e, t) {
        const n = e.elements,
            i = t.elements,
            s = this.elements,
            o = n[0],
            a = n[3],
            l = n[6],
            u = n[1],
            f = n[4],
            d = n[7],
            m = n[2],
            v = n[5],
            _ = n[8],
            S = i[0],
            w = i[3],
            x = i[6],
            A = i[1],
            T = i[4],
            b = i[7],
            P = i[2],
            L = i[5],
            D = i[8];
        return (
            (s[0] = o * S + a * A + l * P),
            (s[3] = o * w + a * T + l * L),
            (s[6] = o * x + a * b + l * D),
            (s[1] = u * S + f * A + d * P),
            (s[4] = u * w + f * T + d * L),
            (s[7] = u * x + f * b + d * D),
            (s[2] = m * S + v * A + _ * P),
            (s[5] = m * w + v * T + _ * L),
            (s[8] = m * x + v * b + _ * D),
            this
        );
    }
    multiplyScalar(e) {
        const t = this.elements;
        return (
            (t[0] *= e),
            (t[3] *= e),
            (t[6] *= e),
            (t[1] *= e),
            (t[4] *= e),
            (t[7] *= e),
            (t[2] *= e),
            (t[5] *= e),
            (t[8] *= e),
            this
        );
    }
    determinant() {
        const e = this.elements,
            t = e[0],
            n = e[1],
            i = e[2],
            s = e[3],
            o = e[4],
            a = e[5],
            l = e[6],
            u = e[7],
            f = e[8];
        return (
            t * o * f -
            t * a * u -
            n * s * f +
            n * a * l +
            i * s * u -
            i * o * l
        );
    }
    invert() {
        const e = this.elements,
            t = e[0],
            n = e[1],
            i = e[2],
            s = e[3],
            o = e[4],
            a = e[5],
            l = e[6],
            u = e[7],
            f = e[8],
            d = f * o - a * u,
            m = a * l - f * s,
            v = u * s - o * l,
            _ = t * d + n * m + i * v;
        if (_ === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);
        const S = 1 / _;
        return (
            (e[0] = d * S),
            (e[1] = (i * u - f * n) * S),
            (e[2] = (a * n - i * o) * S),
            (e[3] = m * S),
            (e[4] = (f * t - i * l) * S),
            (e[5] = (i * s - a * t) * S),
            (e[6] = v * S),
            (e[7] = (n * l - u * t) * S),
            (e[8] = (o * t - n * s) * S),
            this
        );
    }
    transpose() {
        let e;
        const t = this.elements;
        return (
            (e = t[1]),
            (t[1] = t[3]),
            (t[3] = e),
            (e = t[2]),
            (t[2] = t[6]),
            (t[6] = e),
            (e = t[5]),
            (t[5] = t[7]),
            (t[7] = e),
            this
        );
    }
    getNormalMatrix(e) {
        return this.setFromMatrix4(e).invert().transpose();
    }
    transposeIntoArray(e) {
        const t = this.elements;
        return (
            (e[0] = t[0]),
            (e[1] = t[3]),
            (e[2] = t[6]),
            (e[3] = t[1]),
            (e[4] = t[4]),
            (e[5] = t[7]),
            (e[6] = t[2]),
            (e[7] = t[5]),
            (e[8] = t[8]),
            this
        );
    }
    setUvTransform(e, t, n, i, s, o, a) {
        const l = Math.cos(s),
            u = Math.sin(s);
        return (
            this.set(
                n * l,
                n * u,
                -n * (l * o + u * a) + o + e,
                -i * u,
                i * l,
                -i * (-u * o + l * a) + a + t,
                0,
                0,
                1
            ),
            this
        );
    }
    scale(e, t) {
        return this.premultiply(xS.makeScale(e, t)), this;
    }
    rotate(e) {
        return this.premultiply(xS.makeRotation(-e)), this;
    }
    translate(e, t) {
        return this.premultiply(xS.makeTranslation(e, t)), this;
    }
    makeTranslation(e, t) {
        return (
            e.isVector2
                ? this.set(1, 0, e.x, 0, 1, e.y, 0, 0, 1)
                : this.set(1, 0, e, 0, 1, t, 0, 0, 1),
            this
        );
    }
    makeRotation(e) {
        const t = Math.cos(e),
            n = Math.sin(e);
        return this.set(t, -n, 0, n, t, 0, 0, 0, 1), this;
    }
    makeScale(e, t) {
        return this.set(e, 0, 0, 0, t, 0, 0, 0, 1), this;
    }
    equals(e) {
        const t = this.elements,
            n = e.elements;
        for (let i = 0; i < 9; i++) if (t[i] !== n[i]) return !1;
        return !0;
    }
    fromArray(e, t = 0) {
        for (let n = 0; n < 9; n++) this.elements[n] = e[n + t];
        return this;
    }
    toArray(e = [], t = 0) {
        const n = this.elements;
        return (
            (e[t] = n[0]),
            (e[t + 1] = n[1]),
            (e[t + 2] = n[2]),
            (e[t + 3] = n[3]),
            (e[t + 4] = n[4]),
            (e[t + 5] = n[5]),
            (e[t + 6] = n[6]),
            (e[t + 7] = n[7]),
            (e[t + 8] = n[8]),
            e
        );
    }
    clone() {
        return new this.constructor().fromArray(this.elements);
    }
}
const xS = new pn();
function dO(r) {
    for (let e = r.length - 1; e >= 0; --e) if (r[e] >= 65535) return !0;
    return !1;
}
const C8 = {
    Int8Array,
    Uint8Array,
    Uint8ClampedArray,
    Int16Array,
    Uint16Array,
    Int32Array,
    Uint32Array,
    Float32Array,
    Float64Array,
};
function ap(r, e) {
    return new C8[r](e);
}
function M0(r) {
    return document.createElementNS('http://www.w3.org/1999/xhtml', r);
}
function pO() {
    const r = M0('canvas');
    return (r.style.display = 'block'), r;
}
const VC = {};
function bT(r) {
    r in VC || ((VC[r] = !0), console.warn(r));
}
function R8(r, e, t) {
    return new Promise(function (n, i) {
        function s() {
            switch (r.clientWaitSync(e, r.SYNC_FLUSH_COMMANDS_BIT, 0)) {
                case r.WAIT_FAILED:
                    i();
                    break;
                case r.TIMEOUT_EXPIRED:
                    setTimeout(s, t);
                    break;
                default:
                    n();
            }
        }
        setTimeout(s, t);
    });
}
const HC = new pn().set(
        0.8224621,
        0.177538,
        0,
        0.0331941,
        0.9668058,
        0,
        0.0170827,
        0.0723974,
        0.9105199
    ),
    GC = new pn().set(
        1.2249401,
        -0.2249404,
        0,
        -0.0420569,
        1.0420571,
        0,
        -0.0196376,
        -0.0786361,
        1.0982735
    ),
    ry = {
        [na]: {
            transfer: y0,
            primaries: _0,
            toReference: (r) => r,
            fromReference: (r) => r,
        },
        [Mo]: {
            transfer: ci,
            primaries: _0,
            toReference: (r) => r.convertSRGBToLinear(),
            fromReference: (r) => r.convertLinearToSRGB(),
        },
        [X0]: {
            transfer: y0,
            primaries: x0,
            toReference: (r) => r.applyMatrix3(GC),
            fromReference: (r) => r.applyMatrix3(HC),
        },
        [zx]: {
            transfer: ci,
            primaries: x0,
            toReference: (r) => r.convertSRGBToLinear().applyMatrix3(GC),
            fromReference: (r) => r.applyMatrix3(HC).convertLinearToSRGB(),
        },
    },
    P8 = new Set([na, X0]),
    zn = {
        enabled: !0,
        _workingColorSpace: na,
        get workingColorSpace() {
            return this._workingColorSpace;
        },
        set workingColorSpace(r) {
            if (!P8.has(r))
                throw new Error(`Unsupported working color space, "${r}".`);
            this._workingColorSpace = r;
        },
        convert: function (r, e, t) {
            if (this.enabled === !1 || e === t || !e || !t) return r;
            const n = ry[e].toReference,
                i = ry[t].fromReference;
            return i(n(r));
        },
        fromWorkingColorSpace: function (r, e) {
            return this.convert(r, this._workingColorSpace, e);
        },
        toWorkingColorSpace: function (r, e) {
            return this.convert(r, e, this._workingColorSpace);
        },
        getPrimaries: function (r) {
            return ry[r].primaries;
        },
        getTransfer: function (r) {
            return r === vu ? y0 : ry[r].transfer;
        },
    };
function gp(r) {
    return r < 0.04045
        ? r * 0.0773993808
        : Math.pow(r * 0.9478672986 + 0.0521327014, 2.4);
}
function SS(r) {
    return r < 0.0031308 ? r * 12.92 : 1.055 * Math.pow(r, 0.41666) - 0.055;
}
let gd;
class mO {
    static getDataURL(e) {
        if (/^data:/i.test(e.src) || typeof HTMLCanvasElement > 'u')
            return e.src;
        let t;
        if (e instanceof HTMLCanvasElement) t = e;
        else {
            gd === void 0 && (gd = M0('canvas')),
                (gd.width = e.width),
                (gd.height = e.height);
            const n = gd.getContext('2d');
            e instanceof ImageData
                ? n.putImageData(e, 0, 0)
                : n.drawImage(e, 0, 0, e.width, e.height),
                (t = gd);
        }
        return t.width > 2048 || t.height > 2048
            ? (console.warn(
                  'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons',
                  e
              ),
              t.toDataURL('image/jpeg', 0.6))
            : t.toDataURL('image/png');
    }
    static sRGBToLinear(e) {
        if (
            (typeof HTMLImageElement < 'u' && e instanceof HTMLImageElement) ||
            (typeof HTMLCanvasElement < 'u' &&
                e instanceof HTMLCanvasElement) ||
            (typeof ImageBitmap < 'u' && e instanceof ImageBitmap)
        ) {
            const t = M0('canvas');
            (t.width = e.width), (t.height = e.height);
            const n = t.getContext('2d');
            n.drawImage(e, 0, 0, e.width, e.height);
            const i = n.getImageData(0, 0, e.width, e.height),
                s = i.data;
            for (let o = 0; o < s.length; o++) s[o] = gp(s[o] / 255) * 255;
            return n.putImageData(i, 0, 0), t;
        } else if (e.data) {
            const t = e.data.slice(0);
            for (let n = 0; n < t.length; n++)
                t instanceof Uint8Array || t instanceof Uint8ClampedArray
                    ? (t[n] = Math.floor(gp(t[n] / 255) * 255))
                    : (t[n] = gp(t[n]));
            return { data: t, width: e.width, height: e.height };
        } else
            return (
                console.warn(
                    'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.'
                ),
                e
            );
    }
}
let L8 = 0;
class Jf {
    constructor(e = null) {
        (this.isSource = !0),
            Object.defineProperty(this, 'id', { value: L8++ }),
            (this.uuid = Ro()),
            (this.data = e),
            (this.dataReady = !0),
            (this.version = 0);
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    toJSON(e) {
        const t = e === void 0 || typeof e == 'string';
        if (!t && e.images[this.uuid] !== void 0) return e.images[this.uuid];
        const n = { uuid: this.uuid, url: '' },
            i = this.data;
        if (i !== null) {
            let s;
            if (Array.isArray(i)) {
                s = [];
                for (let o = 0, a = i.length; o < a; o++)
                    i[o].isDataTexture
                        ? s.push(wS(i[o].image))
                        : s.push(wS(i[o]));
            } else s = wS(i);
            n.url = s;
        }
        return t || (e.images[this.uuid] = n), n;
    }
}
function wS(r) {
    return (typeof HTMLImageElement < 'u' && r instanceof HTMLImageElement) ||
        (typeof HTMLCanvasElement < 'u' && r instanceof HTMLCanvasElement) ||
        (typeof ImageBitmap < 'u' && r instanceof ImageBitmap)
        ? mO.getDataURL(r)
        : r.data
          ? {
                data: Array.from(r.data),
                width: r.width,
                height: r.height,
                type: r.data.constructor.name,
            }
          : (console.warn('THREE.Texture: Unable to serialize Texture.'), {});
}
let I8 = 0;
class Vn extends bu {
    constructor(
        e = Vn.DEFAULT_IMAGE,
        t = Vn.DEFAULT_MAPPING,
        n = pr,
        i = pr,
        s = Cn,
        o = za,
        a = er,
        l = so,
        u = Vn.DEFAULT_ANISOTROPY,
        f = vu
    ) {
        super(),
            (this.isTexture = !0),
            Object.defineProperty(this, 'id', { value: I8++ }),
            (this.uuid = Ro()),
            (this.name = ''),
            (this.source = new Jf(e)),
            (this.mipmaps = []),
            (this.mapping = t),
            (this.channel = 0),
            (this.wrapS = n),
            (this.wrapT = i),
            (this.magFilter = s),
            (this.minFilter = o),
            (this.anisotropy = u),
            (this.format = a),
            (this.internalFormat = null),
            (this.type = l),
            (this.offset = new tt(0, 0)),
            (this.repeat = new tt(1, 1)),
            (this.center = new tt(0, 0)),
            (this.rotation = 0),
            (this.matrixAutoUpdate = !0),
            (this.matrix = new pn()),
            (this.generateMipmaps = !0),
            (this.premultiplyAlpha = !1),
            (this.flipY = !0),
            (this.unpackAlignment = 4),
            (this.colorSpace = f),
            (this.userData = {}),
            (this.version = 0),
            (this.onUpdate = null),
            (this.isRenderTargetTexture = !1),
            (this.pmremVersion = 0);
    }
    get image() {
        return this.source.data;
    }
    set image(e = null) {
        this.source.data = e;
    }
    updateMatrix() {
        this.matrix.setUvTransform(
            this.offset.x,
            this.offset.y,
            this.repeat.x,
            this.repeat.y,
            this.rotation,
            this.center.x,
            this.center.y
        );
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return (
            (this.name = e.name),
            (this.source = e.source),
            (this.mipmaps = e.mipmaps.slice(0)),
            (this.mapping = e.mapping),
            (this.channel = e.channel),
            (this.wrapS = e.wrapS),
            (this.wrapT = e.wrapT),
            (this.magFilter = e.magFilter),
            (this.minFilter = e.minFilter),
            (this.anisotropy = e.anisotropy),
            (this.format = e.format),
            (this.internalFormat = e.internalFormat),
            (this.type = e.type),
            this.offset.copy(e.offset),
            this.repeat.copy(e.repeat),
            this.center.copy(e.center),
            (this.rotation = e.rotation),
            (this.matrixAutoUpdate = e.matrixAutoUpdate),
            this.matrix.copy(e.matrix),
            (this.generateMipmaps = e.generateMipmaps),
            (this.premultiplyAlpha = e.premultiplyAlpha),
            (this.flipY = e.flipY),
            (this.unpackAlignment = e.unpackAlignment),
            (this.colorSpace = e.colorSpace),
            (this.userData = JSON.parse(JSON.stringify(e.userData))),
            (this.needsUpdate = !0),
            this
        );
    }
    toJSON(e) {
        const t = e === void 0 || typeof e == 'string';
        if (!t && e.textures[this.uuid] !== void 0)
            return e.textures[this.uuid];
        const n = {
            metadata: {
                version: 4.6,
                type: 'Texture',
                generator: 'Texture.toJSON',
            },
            uuid: this.uuid,
            name: this.name,
            image: this.source.toJSON(e).uuid,
            mapping: this.mapping,
            channel: this.channel,
            repeat: [this.repeat.x, this.repeat.y],
            offset: [this.offset.x, this.offset.y],
            center: [this.center.x, this.center.y],
            rotation: this.rotation,
            wrap: [this.wrapS, this.wrapT],
            format: this.format,
            internalFormat: this.internalFormat,
            type: this.type,
            colorSpace: this.colorSpace,
            minFilter: this.minFilter,
            magFilter: this.magFilter,
            anisotropy: this.anisotropy,
            flipY: this.flipY,
            generateMipmaps: this.generateMipmaps,
            premultiplyAlpha: this.premultiplyAlpha,
            unpackAlignment: this.unpackAlignment,
        };
        return (
            Object.keys(this.userData).length > 0 &&
                (n.userData = this.userData),
            t || (e.textures[this.uuid] = n),
            n
        );
    }
    dispose() {
        this.dispatchEvent({ type: 'dispose' });
    }
    transformUv(e) {
        if (this.mapping !== Lc) return e;
        if ((e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1))
            switch (this.wrapS) {
                case p0:
                    e.x = e.x - Math.floor(e.x);
                    break;
                case pr:
                    e.x = e.x < 0 ? 0 : 1;
                    break;
                case m0:
                    Math.abs(Math.floor(e.x) % 2) === 1
                        ? (e.x = Math.ceil(e.x) - e.x)
                        : (e.x = e.x - Math.floor(e.x));
                    break;
            }
        if (e.y < 0 || e.y > 1)
            switch (this.wrapT) {
                case p0:
                    e.y = e.y - Math.floor(e.y);
                    break;
                case pr:
                    e.y = e.y < 0 ? 0 : 1;
                    break;
                case m0:
                    Math.abs(Math.floor(e.y) % 2) === 1
                        ? (e.y = Math.ceil(e.y) - e.y)
                        : (e.y = e.y - Math.floor(e.y));
                    break;
            }
        return this.flipY && (e.y = 1 - e.y), e;
    }
    set needsUpdate(e) {
        e === !0 && (this.version++, (this.source.needsUpdate = !0));
    }
    set needsPMREMUpdate(e) {
        e === !0 && this.pmremVersion++;
    }
}
Vn.DEFAULT_IMAGE = null;
Vn.DEFAULT_MAPPING = Lc;
Vn.DEFAULT_ANISOTROPY = 1;
class En {
    constructor(e = 0, t = 0, n = 0, i = 1) {
        (En.prototype.isVector4 = !0),
            (this.x = e),
            (this.y = t),
            (this.z = n),
            (this.w = i);
    }
    get width() {
        return this.z;
    }
    set width(e) {
        this.z = e;
    }
    get height() {
        return this.w;
    }
    set height(e) {
        this.w = e;
    }
    set(e, t, n, i) {
        return (this.x = e), (this.y = t), (this.z = n), (this.w = i), this;
    }
    setScalar(e) {
        return (this.x = e), (this.y = e), (this.z = e), (this.w = e), this;
    }
    setX(e) {
        return (this.x = e), this;
    }
    setY(e) {
        return (this.y = e), this;
    }
    setZ(e) {
        return (this.z = e), this;
    }
    setW(e) {
        return (this.w = e), this;
    }
    setComponent(e, t) {
        switch (e) {
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            case 3:
                this.w = t;
                break;
            default:
                throw new Error('index is out of range: ' + e);
        }
        return this;
    }
    getComponent(e) {
        switch (e) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            case 3:
                return this.w;
            default:
                throw new Error('index is out of range: ' + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y, this.z, this.w);
    }
    copy(e) {
        return (
            (this.x = e.x),
            (this.y = e.y),
            (this.z = e.z),
            (this.w = e.w !== void 0 ? e.w : 1),
            this
        );
    }
    add(e) {
        return (
            (this.x += e.x),
            (this.y += e.y),
            (this.z += e.z),
            (this.w += e.w),
            this
        );
    }
    addScalar(e) {
        return (this.x += e), (this.y += e), (this.z += e), (this.w += e), this;
    }
    addVectors(e, t) {
        return (
            (this.x = e.x + t.x),
            (this.y = e.y + t.y),
            (this.z = e.z + t.z),
            (this.w = e.w + t.w),
            this
        );
    }
    addScaledVector(e, t) {
        return (
            (this.x += e.x * t),
            (this.y += e.y * t),
            (this.z += e.z * t),
            (this.w += e.w * t),
            this
        );
    }
    sub(e) {
        return (
            (this.x -= e.x),
            (this.y -= e.y),
            (this.z -= e.z),
            (this.w -= e.w),
            this
        );
    }
    subScalar(e) {
        return (this.x -= e), (this.y -= e), (this.z -= e), (this.w -= e), this;
    }
    subVectors(e, t) {
        return (
            (this.x = e.x - t.x),
            (this.y = e.y - t.y),
            (this.z = e.z - t.z),
            (this.w = e.w - t.w),
            this
        );
    }
    multiply(e) {
        return (
            (this.x *= e.x),
            (this.y *= e.y),
            (this.z *= e.z),
            (this.w *= e.w),
            this
        );
    }
    multiplyScalar(e) {
        return (this.x *= e), (this.y *= e), (this.z *= e), (this.w *= e), this;
    }
    applyMatrix4(e) {
        const t = this.x,
            n = this.y,
            i = this.z,
            s = this.w,
            o = e.elements;
        return (
            (this.x = o[0] * t + o[4] * n + o[8] * i + o[12] * s),
            (this.y = o[1] * t + o[5] * n + o[9] * i + o[13] * s),
            (this.z = o[2] * t + o[6] * n + o[10] * i + o[14] * s),
            (this.w = o[3] * t + o[7] * n + o[11] * i + o[15] * s),
            this
        );
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    setAxisAngleFromQuaternion(e) {
        this.w = 2 * Math.acos(e.w);
        const t = Math.sqrt(1 - e.w * e.w);
        return (
            t < 1e-4
                ? ((this.x = 1), (this.y = 0), (this.z = 0))
                : ((this.x = e.x / t), (this.y = e.y / t), (this.z = e.z / t)),
            this
        );
    }
    setAxisAngleFromRotationMatrix(e) {
        let t, n, i, s;
        const l = e.elements,
            u = l[0],
            f = l[4],
            d = l[8],
            m = l[1],
            v = l[5],
            _ = l[9],
            S = l[2],
            w = l[6],
            x = l[10];
        if (
            Math.abs(f - m) < 0.01 &&
            Math.abs(d - S) < 0.01 &&
            Math.abs(_ - w) < 0.01
        ) {
            if (
                Math.abs(f + m) < 0.1 &&
                Math.abs(d + S) < 0.1 &&
                Math.abs(_ + w) < 0.1 &&
                Math.abs(u + v + x - 3) < 0.1
            )
                return this.set(1, 0, 0, 0), this;
            t = Math.PI;
            const T = (u + 1) / 2,
                b = (v + 1) / 2,
                P = (x + 1) / 2,
                L = (f + m) / 4,
                D = (d + S) / 4,
                O = (_ + w) / 4;
            return (
                T > b && T > P
                    ? T < 0.01
                        ? ((n = 0), (i = 0.707106781), (s = 0.707106781))
                        : ((n = Math.sqrt(T)), (i = L / n), (s = D / n))
                    : b > P
                      ? b < 0.01
                          ? ((n = 0.707106781), (i = 0), (s = 0.707106781))
                          : ((i = Math.sqrt(b)), (n = L / i), (s = O / i))
                      : P < 0.01
                        ? ((n = 0.707106781), (i = 0.707106781), (s = 0))
                        : ((s = Math.sqrt(P)), (n = D / s), (i = O / s)),
                this.set(n, i, s, t),
                this
            );
        }
        let A = Math.sqrt(
            (w - _) * (w - _) + (d - S) * (d - S) + (m - f) * (m - f)
        );
        return (
            Math.abs(A) < 0.001 && (A = 1),
            (this.x = (w - _) / A),
            (this.y = (d - S) / A),
            (this.z = (m - f) / A),
            (this.w = Math.acos((u + v + x - 1) / 2)),
            this
        );
    }
    setFromMatrixPosition(e) {
        const t = e.elements;
        return (
            (this.x = t[12]),
            (this.y = t[13]),
            (this.z = t[14]),
            (this.w = t[15]),
            this
        );
    }
    min(e) {
        return (
            (this.x = Math.min(this.x, e.x)),
            (this.y = Math.min(this.y, e.y)),
            (this.z = Math.min(this.z, e.z)),
            (this.w = Math.min(this.w, e.w)),
            this
        );
    }
    max(e) {
        return (
            (this.x = Math.max(this.x, e.x)),
            (this.y = Math.max(this.y, e.y)),
            (this.z = Math.max(this.z, e.z)),
            (this.w = Math.max(this.w, e.w)),
            this
        );
    }
    clamp(e, t) {
        return (
            (this.x = Math.max(e.x, Math.min(t.x, this.x))),
            (this.y = Math.max(e.y, Math.min(t.y, this.y))),
            (this.z = Math.max(e.z, Math.min(t.z, this.z))),
            (this.w = Math.max(e.w, Math.min(t.w, this.w))),
            this
        );
    }
    clampScalar(e, t) {
        return (
            (this.x = Math.max(e, Math.min(t, this.x))),
            (this.y = Math.max(e, Math.min(t, this.y))),
            (this.z = Math.max(e, Math.min(t, this.z))),
            (this.w = Math.max(e, Math.min(t, this.w))),
            this
        );
    }
    clampLength(e, t) {
        const n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(
            Math.max(e, Math.min(t, n))
        );
    }
    floor() {
        return (
            (this.x = Math.floor(this.x)),
            (this.y = Math.floor(this.y)),
            (this.z = Math.floor(this.z)),
            (this.w = Math.floor(this.w)),
            this
        );
    }
    ceil() {
        return (
            (this.x = Math.ceil(this.x)),
            (this.y = Math.ceil(this.y)),
            (this.z = Math.ceil(this.z)),
            (this.w = Math.ceil(this.w)),
            this
        );
    }
    round() {
        return (
            (this.x = Math.round(this.x)),
            (this.y = Math.round(this.y)),
            (this.z = Math.round(this.z)),
            (this.w = Math.round(this.w)),
            this
        );
    }
    roundToZero() {
        return (
            (this.x = Math.trunc(this.x)),
            (this.y = Math.trunc(this.y)),
            (this.z = Math.trunc(this.z)),
            (this.w = Math.trunc(this.w)),
            this
        );
    }
    negate() {
        return (
            (this.x = -this.x),
            (this.y = -this.y),
            (this.z = -this.z),
            (this.w = -this.w),
            this
        );
    }
    dot(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w;
    }
    lengthSq() {
        return (
            this.x * this.x +
            this.y * this.y +
            this.z * this.z +
            this.w * this.w
        );
    }
    length() {
        return Math.sqrt(
            this.x * this.x +
                this.y * this.y +
                this.z * this.z +
                this.w * this.w
        );
    }
    manhattanLength() {
        return (
            Math.abs(this.x) +
            Math.abs(this.y) +
            Math.abs(this.z) +
            Math.abs(this.w)
        );
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return (
            (this.x += (e.x - this.x) * t),
            (this.y += (e.y - this.y) * t),
            (this.z += (e.z - this.z) * t),
            (this.w += (e.w - this.w) * t),
            this
        );
    }
    lerpVectors(e, t, n) {
        return (
            (this.x = e.x + (t.x - e.x) * n),
            (this.y = e.y + (t.y - e.y) * n),
            (this.z = e.z + (t.z - e.z) * n),
            (this.w = e.w + (t.w - e.w) * n),
            this
        );
    }
    equals(e) {
        return (
            e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
        );
    }
    fromArray(e, t = 0) {
        return (
            (this.x = e[t]),
            (this.y = e[t + 1]),
            (this.z = e[t + 2]),
            (this.w = e[t + 3]),
            this
        );
    }
    toArray(e = [], t = 0) {
        return (
            (e[t] = this.x),
            (e[t + 1] = this.y),
            (e[t + 2] = this.z),
            (e[t + 3] = this.w),
            e
        );
    }
    fromBufferAttribute(e, t) {
        return (
            (this.x = e.getX(t)),
            (this.y = e.getY(t)),
            (this.z = e.getZ(t)),
            (this.w = e.getW(t)),
            this
        );
    }
    random() {
        return (
            (this.x = Math.random()),
            (this.y = Math.random()),
            (this.z = Math.random()),
            (this.w = Math.random()),
            this
        );
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y, yield this.z, yield this.w;
    }
}
class gO extends bu {
    constructor(e = 1, t = 1, n = {}) {
        super(),
            (this.isRenderTarget = !0),
            (this.width = e),
            (this.height = t),
            (this.depth = 1),
            (this.scissor = new En(0, 0, e, t)),
            (this.scissorTest = !1),
            (this.viewport = new En(0, 0, e, t));
        const i = { width: e, height: t, depth: 1 };
        n = Object.assign(
            {
                generateMipmaps: !1,
                internalFormat: null,
                minFilter: Cn,
                depthBuffer: !0,
                stencilBuffer: !1,
                resolveDepthBuffer: !0,
                resolveStencilBuffer: !0,
                depthTexture: null,
                samples: 0,
                count: 1,
            },
            n
        );
        const s = new Vn(
            i,
            n.mapping,
            n.wrapS,
            n.wrapT,
            n.magFilter,
            n.minFilter,
            n.format,
            n.type,
            n.anisotropy,
            n.colorSpace
        );
        (s.flipY = !1),
            (s.generateMipmaps = n.generateMipmaps),
            (s.internalFormat = n.internalFormat),
            (this.textures = []);
        const o = n.count;
        for (let a = 0; a < o; a++)
            (this.textures[a] = s.clone()),
                (this.textures[a].isRenderTargetTexture = !0);
        (this.depthBuffer = n.depthBuffer),
            (this.stencilBuffer = n.stencilBuffer),
            (this.resolveDepthBuffer = n.resolveDepthBuffer),
            (this.resolveStencilBuffer = n.resolveStencilBuffer),
            (this.depthTexture = n.depthTexture),
            (this.samples = n.samples);
    }
    get texture() {
        return this.textures[0];
    }
    set texture(e) {
        this.textures[0] = e;
    }
    setSize(e, t, n = 1) {
        if (this.width !== e || this.height !== t || this.depth !== n) {
            (this.width = e), (this.height = t), (this.depth = n);
            for (let i = 0, s = this.textures.length; i < s; i++)
                (this.textures[i].image.width = e),
                    (this.textures[i].image.height = t),
                    (this.textures[i].image.depth = n);
            this.dispose();
        }
        this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        (this.width = e.width),
            (this.height = e.height),
            (this.depth = e.depth),
            this.scissor.copy(e.scissor),
            (this.scissorTest = e.scissorTest),
            this.viewport.copy(e.viewport),
            (this.textures.length = 0);
        for (let n = 0, i = e.textures.length; n < i; n++)
            (this.textures[n] = e.textures[n].clone()),
                (this.textures[n].isRenderTargetTexture = !0);
        const t = Object.assign({}, e.texture.image);
        return (
            (this.texture.source = new Jf(t)),
            (this.depthBuffer = e.depthBuffer),
            (this.stencilBuffer = e.stencilBuffer),
            (this.resolveDepthBuffer = e.resolveDepthBuffer),
            (this.resolveStencilBuffer = e.resolveStencilBuffer),
            e.depthTexture !== null &&
                (this.depthTexture = e.depthTexture.clone()),
            (this.samples = e.samples),
            this
        );
    }
    dispose() {
        this.dispatchEvent({ type: 'dispose' });
    }
}
class Ji extends gO {
    constructor(e = 1, t = 1, n = {}) {
        super(e, t, n), (this.isWebGLRenderTarget = !0);
    }
}
class Vx extends Vn {
    constructor(e = null, t = 1, n = 1, i = 1) {
        super(null),
            (this.isDataArrayTexture = !0),
            (this.image = { data: e, width: t, height: n, depth: i }),
            (this.magFilter = Fn),
            (this.minFilter = Fn),
            (this.wrapR = pr),
            (this.generateMipmaps = !1),
            (this.flipY = !1),
            (this.unpackAlignment = 1),
            (this.layerUpdates = new Set());
    }
    addLayerUpdate(e) {
        this.layerUpdates.add(e);
    }
    clearLayerUpdates() {
        this.layerUpdates.clear();
    }
}
class D8 extends Ji {
    constructor(e = 1, t = 1, n = 1, i = {}) {
        super(e, t, i),
            (this.isWebGLArrayRenderTarget = !0),
            (this.depth = n),
            (this.texture = new Vx(null, e, t, n)),
            (this.texture.isRenderTargetTexture = !0);
    }
}
class CT extends Vn {
    constructor(e = null, t = 1, n = 1, i = 1) {
        super(null),
            (this.isData3DTexture = !0),
            (this.image = { data: e, width: t, height: n, depth: i }),
            (this.magFilter = Fn),
            (this.minFilter = Fn),
            (this.wrapR = pr),
            (this.generateMipmaps = !1),
            (this.flipY = !1),
            (this.unpackAlignment = 1);
    }
}
class O8 extends Ji {
    constructor(e = 1, t = 1, n = 1, i = {}) {
        super(e, t, i),
            (this.isWebGL3DRenderTarget = !0),
            (this.depth = n),
            (this.texture = new CT(null, e, t, n)),
            (this.texture.isRenderTargetTexture = !0);
    }
}
class mr {
    constructor(e = 0, t = 0, n = 0, i = 1) {
        (this.isQuaternion = !0),
            (this._x = e),
            (this._y = t),
            (this._z = n),
            (this._w = i);
    }
    static slerpFlat(e, t, n, i, s, o, a) {
        let l = n[i + 0],
            u = n[i + 1],
            f = n[i + 2],
            d = n[i + 3];
        const m = s[o + 0],
            v = s[o + 1],
            _ = s[o + 2],
            S = s[o + 3];
        if (a === 0) {
            (e[t + 0] = l), (e[t + 1] = u), (e[t + 2] = f), (e[t + 3] = d);
            return;
        }
        if (a === 1) {
            (e[t + 0] = m), (e[t + 1] = v), (e[t + 2] = _), (e[t + 3] = S);
            return;
        }
        if (d !== S || l !== m || u !== v || f !== _) {
            let w = 1 - a;
            const x = l * m + u * v + f * _ + d * S,
                A = x >= 0 ? 1 : -1,
                T = 1 - x * x;
            if (T > Number.EPSILON) {
                const P = Math.sqrt(T),
                    L = Math.atan2(P, x * A);
                (w = Math.sin(w * L) / P), (a = Math.sin(a * L) / P);
            }
            const b = a * A;
            if (
                ((l = l * w + m * b),
                (u = u * w + v * b),
                (f = f * w + _ * b),
                (d = d * w + S * b),
                w === 1 - a)
            ) {
                const P = 1 / Math.sqrt(l * l + u * u + f * f + d * d);
                (l *= P), (u *= P), (f *= P), (d *= P);
            }
        }
        (e[t] = l), (e[t + 1] = u), (e[t + 2] = f), (e[t + 3] = d);
    }
    static multiplyQuaternionsFlat(e, t, n, i, s, o) {
        const a = n[i],
            l = n[i + 1],
            u = n[i + 2],
            f = n[i + 3],
            d = s[o],
            m = s[o + 1],
            v = s[o + 2],
            _ = s[o + 3];
        return (
            (e[t] = a * _ + f * d + l * v - u * m),
            (e[t + 1] = l * _ + f * m + u * d - a * v),
            (e[t + 2] = u * _ + f * v + a * m - l * d),
            (e[t + 3] = f * _ - a * d - l * m - u * v),
            e
        );
    }
    get x() {
        return this._x;
    }
    set x(e) {
        (this._x = e), this._onChangeCallback();
    }
    get y() {
        return this._y;
    }
    set y(e) {
        (this._y = e), this._onChangeCallback();
    }
    get z() {
        return this._z;
    }
    set z(e) {
        (this._z = e), this._onChangeCallback();
    }
    get w() {
        return this._w;
    }
    set w(e) {
        (this._w = e), this._onChangeCallback();
    }
    set(e, t, n, i) {
        return (
            (this._x = e),
            (this._y = t),
            (this._z = n),
            (this._w = i),
            this._onChangeCallback(),
            this
        );
    }
    clone() {
        return new this.constructor(this._x, this._y, this._z, this._w);
    }
    copy(e) {
        return (
            (this._x = e.x),
            (this._y = e.y),
            (this._z = e.z),
            (this._w = e.w),
            this._onChangeCallback(),
            this
        );
    }
    setFromEuler(e, t = !0) {
        const n = e._x,
            i = e._y,
            s = e._z,
            o = e._order,
            a = Math.cos,
            l = Math.sin,
            u = a(n / 2),
            f = a(i / 2),
            d = a(s / 2),
            m = l(n / 2),
            v = l(i / 2),
            _ = l(s / 2);
        switch (o) {
            case 'XYZ':
                (this._x = m * f * d + u * v * _),
                    (this._y = u * v * d - m * f * _),
                    (this._z = u * f * _ + m * v * d),
                    (this._w = u * f * d - m * v * _);
                break;
            case 'YXZ':
                (this._x = m * f * d + u * v * _),
                    (this._y = u * v * d - m * f * _),
                    (this._z = u * f * _ - m * v * d),
                    (this._w = u * f * d + m * v * _);
                break;
            case 'ZXY':
                (this._x = m * f * d - u * v * _),
                    (this._y = u * v * d + m * f * _),
                    (this._z = u * f * _ + m * v * d),
                    (this._w = u * f * d - m * v * _);
                break;
            case 'ZYX':
                (this._x = m * f * d - u * v * _),
                    (this._y = u * v * d + m * f * _),
                    (this._z = u * f * _ - m * v * d),
                    (this._w = u * f * d + m * v * _);
                break;
            case 'YZX':
                (this._x = m * f * d + u * v * _),
                    (this._y = u * v * d + m * f * _),
                    (this._z = u * f * _ - m * v * d),
                    (this._w = u * f * d - m * v * _);
                break;
            case 'XZY':
                (this._x = m * f * d - u * v * _),
                    (this._y = u * v * d - m * f * _),
                    (this._z = u * f * _ + m * v * d),
                    (this._w = u * f * d + m * v * _);
                break;
            default:
                console.warn(
                    'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' +
                        o
                );
        }
        return t === !0 && this._onChangeCallback(), this;
    }
    setFromAxisAngle(e, t) {
        const n = t / 2,
            i = Math.sin(n);
        return (
            (this._x = e.x * i),
            (this._y = e.y * i),
            (this._z = e.z * i),
            (this._w = Math.cos(n)),
            this._onChangeCallback(),
            this
        );
    }
    setFromRotationMatrix(e) {
        const t = e.elements,
            n = t[0],
            i = t[4],
            s = t[8],
            o = t[1],
            a = t[5],
            l = t[9],
            u = t[2],
            f = t[6],
            d = t[10],
            m = n + a + d;
        if (m > 0) {
            const v = 0.5 / Math.sqrt(m + 1);
            (this._w = 0.25 / v),
                (this._x = (f - l) * v),
                (this._y = (s - u) * v),
                (this._z = (o - i) * v);
        } else if (n > a && n > d) {
            const v = 2 * Math.sqrt(1 + n - a - d);
            (this._w = (f - l) / v),
                (this._x = 0.25 * v),
                (this._y = (i + o) / v),
                (this._z = (s + u) / v);
        } else if (a > d) {
            const v = 2 * Math.sqrt(1 + a - n - d);
            (this._w = (s - u) / v),
                (this._x = (i + o) / v),
                (this._y = 0.25 * v),
                (this._z = (l + f) / v);
        } else {
            const v = 2 * Math.sqrt(1 + d - n - a);
            (this._w = (o - i) / v),
                (this._x = (s + u) / v),
                (this._y = (l + f) / v),
                (this._z = 0.25 * v);
        }
        return this._onChangeCallback(), this;
    }
    setFromUnitVectors(e, t) {
        let n = e.dot(t) + 1;
        return (
            n < Number.EPSILON
                ? ((n = 0),
                  Math.abs(e.x) > Math.abs(e.z)
                      ? ((this._x = -e.y),
                        (this._y = e.x),
                        (this._z = 0),
                        (this._w = n))
                      : ((this._x = 0),
                        (this._y = -e.z),
                        (this._z = e.y),
                        (this._w = n)))
                : ((this._x = e.y * t.z - e.z * t.y),
                  (this._y = e.z * t.x - e.x * t.z),
                  (this._z = e.x * t.y - e.y * t.x),
                  (this._w = n)),
            this.normalize()
        );
    }
    angleTo(e) {
        return 2 * Math.acos(Math.abs(Vi(this.dot(e), -1, 1)));
    }
    rotateTowards(e, t) {
        const n = this.angleTo(e);
        if (n === 0) return this;
        const i = Math.min(1, t / n);
        return this.slerp(e, i), this;
    }
    identity() {
        return this.set(0, 0, 0, 1);
    }
    invert() {
        return this.conjugate();
    }
    conjugate() {
        return (
            (this._x *= -1),
            (this._y *= -1),
            (this._z *= -1),
            this._onChangeCallback(),
            this
        );
    }
    dot(e) {
        return (
            this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
        );
    }
    lengthSq() {
        return (
            this._x * this._x +
            this._y * this._y +
            this._z * this._z +
            this._w * this._w
        );
    }
    length() {
        return Math.sqrt(
            this._x * this._x +
                this._y * this._y +
                this._z * this._z +
                this._w * this._w
        );
    }
    normalize() {
        let e = this.length();
        return (
            e === 0
                ? ((this._x = 0), (this._y = 0), (this._z = 0), (this._w = 1))
                : ((e = 1 / e),
                  (this._x = this._x * e),
                  (this._y = this._y * e),
                  (this._z = this._z * e),
                  (this._w = this._w * e)),
            this._onChangeCallback(),
            this
        );
    }
    multiply(e) {
        return this.multiplyQuaternions(this, e);
    }
    premultiply(e) {
        return this.multiplyQuaternions(e, this);
    }
    multiplyQuaternions(e, t) {
        const n = e._x,
            i = e._y,
            s = e._z,
            o = e._w,
            a = t._x,
            l = t._y,
            u = t._z,
            f = t._w;
        return (
            (this._x = n * f + o * a + i * u - s * l),
            (this._y = i * f + o * l + s * a - n * u),
            (this._z = s * f + o * u + n * l - i * a),
            (this._w = o * f - n * a - i * l - s * u),
            this._onChangeCallback(),
            this
        );
    }
    slerp(e, t) {
        if (t === 0) return this;
        if (t === 1) return this.copy(e);
        const n = this._x,
            i = this._y,
            s = this._z,
            o = this._w;
        let a = o * e._w + n * e._x + i * e._y + s * e._z;
        if (
            (a < 0
                ? ((this._w = -e._w),
                  (this._x = -e._x),
                  (this._y = -e._y),
                  (this._z = -e._z),
                  (a = -a))
                : this.copy(e),
            a >= 1)
        )
            return (
                (this._w = o), (this._x = n), (this._y = i), (this._z = s), this
            );
        const l = 1 - a * a;
        if (l <= Number.EPSILON) {
            const v = 1 - t;
            return (
                (this._w = v * o + t * this._w),
                (this._x = v * n + t * this._x),
                (this._y = v * i + t * this._y),
                (this._z = v * s + t * this._z),
                this.normalize(),
                this
            );
        }
        const u = Math.sqrt(l),
            f = Math.atan2(u, a),
            d = Math.sin((1 - t) * f) / u,
            m = Math.sin(t * f) / u;
        return (
            (this._w = o * d + this._w * m),
            (this._x = n * d + this._x * m),
            (this._y = i * d + this._y * m),
            (this._z = s * d + this._z * m),
            this._onChangeCallback(),
            this
        );
    }
    slerpQuaternions(e, t, n) {
        return this.copy(e).slerp(t, n);
    }
    random() {
        const e = 2 * Math.PI * Math.random(),
            t = 2 * Math.PI * Math.random(),
            n = Math.random(),
            i = Math.sqrt(1 - n),
            s = Math.sqrt(n);
        return this.set(
            i * Math.sin(e),
            i * Math.cos(e),
            s * Math.sin(t),
            s * Math.cos(t)
        );
    }
    equals(e) {
        return (
            e._x === this._x &&
            e._y === this._y &&
            e._z === this._z &&
            e._w === this._w
        );
    }
    fromArray(e, t = 0) {
        return (
            (this._x = e[t]),
            (this._y = e[t + 1]),
            (this._z = e[t + 2]),
            (this._w = e[t + 3]),
            this._onChangeCallback(),
            this
        );
    }
    toArray(e = [], t = 0) {
        return (
            (e[t] = this._x),
            (e[t + 1] = this._y),
            (e[t + 2] = this._z),
            (e[t + 3] = this._w),
            e
        );
    }
    fromBufferAttribute(e, t) {
        return (
            (this._x = e.getX(t)),
            (this._y = e.getY(t)),
            (this._z = e.getZ(t)),
            (this._w = e.getW(t)),
            this._onChangeCallback(),
            this
        );
    }
    toJSON() {
        return this.toArray();
    }
    _onChange(e) {
        return (this._onChangeCallback = e), this;
    }
    _onChangeCallback() {}
    *[Symbol.iterator]() {
        yield this._x, yield this._y, yield this._z, yield this._w;
    }
}
class re {
    constructor(e = 0, t = 0, n = 0) {
        (re.prototype.isVector3 = !0), (this.x = e), (this.y = t), (this.z = n);
    }
    set(e, t, n) {
        return (
            n === void 0 && (n = this.z),
            (this.x = e),
            (this.y = t),
            (this.z = n),
            this
        );
    }
    setScalar(e) {
        return (this.x = e), (this.y = e), (this.z = e), this;
    }
    setX(e) {
        return (this.x = e), this;
    }
    setY(e) {
        return (this.y = e), this;
    }
    setZ(e) {
        return (this.z = e), this;
    }
    setComponent(e, t) {
        switch (e) {
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            default:
                throw new Error('index is out of range: ' + e);
        }
        return this;
    }
    getComponent(e) {
        switch (e) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            default:
                throw new Error('index is out of range: ' + e);
        }
    }
    clone() {
        return new this.constructor(this.x, this.y, this.z);
    }
    copy(e) {
        return (this.x = e.x), (this.y = e.y), (this.z = e.z), this;
    }
    add(e) {
        return (this.x += e.x), (this.y += e.y), (this.z += e.z), this;
    }
    addScalar(e) {
        return (this.x += e), (this.y += e), (this.z += e), this;
    }
    addVectors(e, t) {
        return (
            (this.x = e.x + t.x),
            (this.y = e.y + t.y),
            (this.z = e.z + t.z),
            this
        );
    }
    addScaledVector(e, t) {
        return (
            (this.x += e.x * t), (this.y += e.y * t), (this.z += e.z * t), this
        );
    }
    sub(e) {
        return (this.x -= e.x), (this.y -= e.y), (this.z -= e.z), this;
    }
    subScalar(e) {
        return (this.x -= e), (this.y -= e), (this.z -= e), this;
    }
    subVectors(e, t) {
        return (
            (this.x = e.x - t.x),
            (this.y = e.y - t.y),
            (this.z = e.z - t.z),
            this
        );
    }
    multiply(e) {
        return (this.x *= e.x), (this.y *= e.y), (this.z *= e.z), this;
    }
    multiplyScalar(e) {
        return (this.x *= e), (this.y *= e), (this.z *= e), this;
    }
    multiplyVectors(e, t) {
        return (
            (this.x = e.x * t.x),
            (this.y = e.y * t.y),
            (this.z = e.z * t.z),
            this
        );
    }
    applyEuler(e) {
        return this.applyQuaternion(WC.setFromEuler(e));
    }
    applyAxisAngle(e, t) {
        return this.applyQuaternion(WC.setFromAxisAngle(e, t));
    }
    applyMatrix3(e) {
        const t = this.x,
            n = this.y,
            i = this.z,
            s = e.elements;
        return (
            (this.x = s[0] * t + s[3] * n + s[6] * i),
            (this.y = s[1] * t + s[4] * n + s[7] * i),
            (this.z = s[2] * t + s[5] * n + s[8] * i),
            this
        );
    }
    applyNormalMatrix(e) {
        return this.applyMatrix3(e).normalize();
    }
    applyMatrix4(e) {
        const t = this.x,
            n = this.y,
            i = this.z,
            s = e.elements,
            o = 1 / (s[3] * t + s[7] * n + s[11] * i + s[15]);
        return (
            (this.x = (s[0] * t + s[4] * n + s[8] * i + s[12]) * o),
            (this.y = (s[1] * t + s[5] * n + s[9] * i + s[13]) * o),
            (this.z = (s[2] * t + s[6] * n + s[10] * i + s[14]) * o),
            this
        );
    }
    applyQuaternion(e) {
        const t = this.x,
            n = this.y,
            i = this.z,
            s = e.x,
            o = e.y,
            a = e.z,
            l = e.w,
            u = 2 * (o * i - a * n),
            f = 2 * (a * t - s * i),
            d = 2 * (s * n - o * t);
        return (
            (this.x = t + l * u + o * d - a * f),
            (this.y = n + l * f + a * u - s * d),
            (this.z = i + l * d + s * f - o * u),
            this
        );
    }
    project(e) {
        return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(
            e.projectionMatrix
        );
    }
    unproject(e) {
        return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(
            e.matrixWorld
        );
    }
    transformDirection(e) {
        const t = this.x,
            n = this.y,
            i = this.z,
            s = e.elements;
        return (
            (this.x = s[0] * t + s[4] * n + s[8] * i),
            (this.y = s[1] * t + s[5] * n + s[9] * i),
            (this.z = s[2] * t + s[6] * n + s[10] * i),
            this.normalize()
        );
    }
    divide(e) {
        return (this.x /= e.x), (this.y /= e.y), (this.z /= e.z), this;
    }
    divideScalar(e) {
        return this.multiplyScalar(1 / e);
    }
    min(e) {
        return (
            (this.x = Math.min(this.x, e.x)),
            (this.y = Math.min(this.y, e.y)),
            (this.z = Math.min(this.z, e.z)),
            this
        );
    }
    max(e) {
        return (
            (this.x = Math.max(this.x, e.x)),
            (this.y = Math.max(this.y, e.y)),
            (this.z = Math.max(this.z, e.z)),
            this
        );
    }
    clamp(e, t) {
        return (
            (this.x = Math.max(e.x, Math.min(t.x, this.x))),
            (this.y = Math.max(e.y, Math.min(t.y, this.y))),
            (this.z = Math.max(e.z, Math.min(t.z, this.z))),
            this
        );
    }
    clampScalar(e, t) {
        return (
            (this.x = Math.max(e, Math.min(t, this.x))),
            (this.y = Math.max(e, Math.min(t, this.y))),
            (this.z = Math.max(e, Math.min(t, this.z))),
            this
        );
    }
    clampLength(e, t) {
        const n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(
            Math.max(e, Math.min(t, n))
        );
    }
    floor() {
        return (
            (this.x = Math.floor(this.x)),
            (this.y = Math.floor(this.y)),
            (this.z = Math.floor(this.z)),
            this
        );
    }
    ceil() {
        return (
            (this.x = Math.ceil(this.x)),
            (this.y = Math.ceil(this.y)),
            (this.z = Math.ceil(this.z)),
            this
        );
    }
    round() {
        return (
            (this.x = Math.round(this.x)),
            (this.y = Math.round(this.y)),
            (this.z = Math.round(this.z)),
            this
        );
    }
    roundToZero() {
        return (
            (this.x = Math.trunc(this.x)),
            (this.y = Math.trunc(this.y)),
            (this.z = Math.trunc(this.z)),
            this
        );
    }
    negate() {
        return (this.x = -this.x), (this.y = -this.y), (this.z = -this.z), this;
    }
    dot(e) {
        return this.x * e.x + this.y * e.y + this.z * e.z;
    }
    lengthSq() {
        return this.x * this.x + this.y * this.y + this.z * this.z;
    }
    length() {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);
    }
    manhattanLength() {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);
    }
    normalize() {
        return this.divideScalar(this.length() || 1);
    }
    setLength(e) {
        return this.normalize().multiplyScalar(e);
    }
    lerp(e, t) {
        return (
            (this.x += (e.x - this.x) * t),
            (this.y += (e.y - this.y) * t),
            (this.z += (e.z - this.z) * t),
            this
        );
    }
    lerpVectors(e, t, n) {
        return (
            (this.x = e.x + (t.x - e.x) * n),
            (this.y = e.y + (t.y - e.y) * n),
            (this.z = e.z + (t.z - e.z) * n),
            this
        );
    }
    cross(e) {
        return this.crossVectors(this, e);
    }
    crossVectors(e, t) {
        const n = e.x,
            i = e.y,
            s = e.z,
            o = t.x,
            a = t.y,
            l = t.z;
        return (
            (this.x = i * l - s * a),
            (this.y = s * o - n * l),
            (this.z = n * a - i * o),
            this
        );
    }
    projectOnVector(e) {
        const t = e.lengthSq();
        if (t === 0) return this.set(0, 0, 0);
        const n = e.dot(this) / t;
        return this.copy(e).multiplyScalar(n);
    }
    projectOnPlane(e) {
        return MS.copy(this).projectOnVector(e), this.sub(MS);
    }
    reflect(e) {
        return this.sub(MS.copy(e).multiplyScalar(2 * this.dot(e)));
    }
    angleTo(e) {
        const t = Math.sqrt(this.lengthSq() * e.lengthSq());
        if (t === 0) return Math.PI / 2;
        const n = this.dot(e) / t;
        return Math.acos(Vi(n, -1, 1));
    }
    distanceTo(e) {
        return Math.sqrt(this.distanceToSquared(e));
    }
    distanceToSquared(e) {
        const t = this.x - e.x,
            n = this.y - e.y,
            i = this.z - e.z;
        return t * t + n * n + i * i;
    }
    manhattanDistanceTo(e) {
        return (
            Math.abs(this.x - e.x) +
            Math.abs(this.y - e.y) +
            Math.abs(this.z - e.z)
        );
    }
    setFromSpherical(e) {
        return this.setFromSphericalCoords(e.radius, e.phi, e.theta);
    }
    setFromSphericalCoords(e, t, n) {
        const i = Math.sin(t) * e;
        return (
            (this.x = i * Math.sin(n)),
            (this.y = Math.cos(t) * e),
            (this.z = i * Math.cos(n)),
            this
        );
    }
    setFromCylindrical(e) {
        return this.setFromCylindricalCoords(e.radius, e.theta, e.y);
    }
    setFromCylindricalCoords(e, t, n) {
        return (
            (this.x = e * Math.sin(t)),
            (this.y = n),
            (this.z = e * Math.cos(t)),
            this
        );
    }
    setFromMatrixPosition(e) {
        const t = e.elements;
        return (this.x = t[12]), (this.y = t[13]), (this.z = t[14]), this;
    }
    setFromMatrixScale(e) {
        const t = this.setFromMatrixColumn(e, 0).length(),
            n = this.setFromMatrixColumn(e, 1).length(),
            i = this.setFromMatrixColumn(e, 2).length();
        return (this.x = t), (this.y = n), (this.z = i), this;
    }
    setFromMatrixColumn(e, t) {
        return this.fromArray(e.elements, t * 4);
    }
    setFromMatrix3Column(e, t) {
        return this.fromArray(e.elements, t * 3);
    }
    setFromEuler(e) {
        return (this.x = e._x), (this.y = e._y), (this.z = e._z), this;
    }
    setFromColor(e) {
        return (this.x = e.r), (this.y = e.g), (this.z = e.b), this;
    }
    equals(e) {
        return e.x === this.x && e.y === this.y && e.z === this.z;
    }
    fromArray(e, t = 0) {
        return (this.x = e[t]), (this.y = e[t + 1]), (this.z = e[t + 2]), this;
    }
    toArray(e = [], t = 0) {
        return (e[t] = this.x), (e[t + 1] = this.y), (e[t + 2] = this.z), e;
    }
    fromBufferAttribute(e, t) {
        return (
            (this.x = e.getX(t)),
            (this.y = e.getY(t)),
            (this.z = e.getZ(t)),
            this
        );
    }
    random() {
        return (
            (this.x = Math.random()),
            (this.y = Math.random()),
            (this.z = Math.random()),
            this
        );
    }
    randomDirection() {
        const e = Math.random() * Math.PI * 2,
            t = Math.random() * 2 - 1,
            n = Math.sqrt(1 - t * t);
        return (
            (this.x = n * Math.cos(e)),
            (this.y = t),
            (this.z = n * Math.sin(e)),
            this
        );
    }
    *[Symbol.iterator]() {
        yield this.x, yield this.y, yield this.z;
    }
}
const MS = new re(),
    WC = new mr();
class Ar {
    constructor(
        e = new re(1 / 0, 1 / 0, 1 / 0),
        t = new re(-1 / 0, -1 / 0, -1 / 0)
    ) {
        (this.isBox3 = !0), (this.min = e), (this.max = t);
    }
    set(e, t) {
        return this.min.copy(e), this.max.copy(t), this;
    }
    setFromArray(e) {
        this.makeEmpty();
        for (let t = 0, n = e.length; t < n; t += 3)
            this.expandByPoint(La.fromArray(e, t));
        return this;
    }
    setFromBufferAttribute(e) {
        this.makeEmpty();
        for (let t = 0, n = e.count; t < n; t++)
            this.expandByPoint(La.fromBufferAttribute(e, t));
        return this;
    }
    setFromPoints(e) {
        this.makeEmpty();
        for (let t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
        return this;
    }
    setFromCenterAndSize(e, t) {
        const n = La.copy(t).multiplyScalar(0.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
    }
    setFromObject(e, t = !1) {
        return this.makeEmpty(), this.expandByObject(e, t);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.min.copy(e.min), this.max.copy(e.max), this;
    }
    makeEmpty() {
        return (
            (this.min.x = this.min.y = this.min.z = 1 / 0),
            (this.max.x = this.max.y = this.max.z = -1 / 0),
            this
        );
    }
    isEmpty() {
        return (
            this.max.x < this.min.x ||
            this.max.y < this.min.y ||
            this.max.z < this.min.z
        );
    }
    getCenter(e) {
        return this.isEmpty()
            ? e.set(0, 0, 0)
            : e.addVectors(this.min, this.max).multiplyScalar(0.5);
    }
    getSize(e) {
        return this.isEmpty()
            ? e.set(0, 0, 0)
            : e.subVectors(this.max, this.min);
    }
    expandByPoint(e) {
        return this.min.min(e), this.max.max(e), this;
    }
    expandByVector(e) {
        return this.min.sub(e), this.max.add(e), this;
    }
    expandByScalar(e) {
        return this.min.addScalar(-e), this.max.addScalar(e), this;
    }
    expandByObject(e, t = !1) {
        e.updateWorldMatrix(!1, !1);
        const n = e.geometry;
        if (n !== void 0) {
            const s = n.getAttribute('position');
            if (t === !0 && s !== void 0 && e.isInstancedMesh !== !0)
                for (let o = 0, a = s.count; o < a; o++)
                    e.isMesh === !0
                        ? e.getVertexPosition(o, La)
                        : La.fromBufferAttribute(s, o),
                        La.applyMatrix4(e.matrixWorld),
                        this.expandByPoint(La);
            else
                e.boundingBox !== void 0
                    ? (e.boundingBox === null && e.computeBoundingBox(),
                      sy.copy(e.boundingBox))
                    : (n.boundingBox === null && n.computeBoundingBox(),
                      sy.copy(n.boundingBox)),
                    sy.applyMatrix4(e.matrixWorld),
                    this.union(sy);
        }
        const i = e.children;
        for (let s = 0, o = i.length; s < o; s++) this.expandByObject(i[s], t);
        return this;
    }
    containsPoint(e) {
        return !(
            e.x < this.min.x ||
            e.x > this.max.x ||
            e.y < this.min.y ||
            e.y > this.max.y ||
            e.z < this.min.z ||
            e.z > this.max.z
        );
    }
    containsBox(e) {
        return (
            this.min.x <= e.min.x &&
            e.max.x <= this.max.x &&
            this.min.y <= e.min.y &&
            e.max.y <= this.max.y &&
            this.min.z <= e.min.z &&
            e.max.z <= this.max.z
        );
    }
    getParameter(e, t) {
        return t.set(
            (e.x - this.min.x) / (this.max.x - this.min.x),
            (e.y - this.min.y) / (this.max.y - this.min.y),
            (e.z - this.min.z) / (this.max.z - this.min.z)
        );
    }
    intersectsBox(e) {
        return !(
            e.max.x < this.min.x ||
            e.min.x > this.max.x ||
            e.max.y < this.min.y ||
            e.min.y > this.max.y ||
            e.max.z < this.min.z ||
            e.min.z > this.max.z
        );
    }
    intersectsSphere(e) {
        return (
            this.clampPoint(e.center, La),
            La.distanceToSquared(e.center) <= e.radius * e.radius
        );
    }
    intersectsPlane(e) {
        let t, n;
        return (
            e.normal.x > 0
                ? ((t = e.normal.x * this.min.x), (n = e.normal.x * this.max.x))
                : ((t = e.normal.x * this.max.x),
                  (n = e.normal.x * this.min.x)),
            e.normal.y > 0
                ? ((t += e.normal.y * this.min.y),
                  (n += e.normal.y * this.max.y))
                : ((t += e.normal.y * this.max.y),
                  (n += e.normal.y * this.min.y)),
            e.normal.z > 0
                ? ((t += e.normal.z * this.min.z),
                  (n += e.normal.z * this.max.z))
                : ((t += e.normal.z * this.max.z),
                  (n += e.normal.z * this.min.z)),
            t <= -e.constant && n >= -e.constant
        );
    }
    intersectsTriangle(e) {
        if (this.isEmpty()) return !1;
        this.getCenter(jm),
            oy.subVectors(this.max, jm),
            vd.subVectors(e.a, jm),
            yd.subVectors(e.b, jm),
            _d.subVectors(e.c, jm),
            rc.subVectors(yd, vd),
            sc.subVectors(_d, yd),
            Af.subVectors(vd, _d);
        let t = [
            0,
            -rc.z,
            rc.y,
            0,
            -sc.z,
            sc.y,
            0,
            -Af.z,
            Af.y,
            rc.z,
            0,
            -rc.x,
            sc.z,
            0,
            -sc.x,
            Af.z,
            0,
            -Af.x,
            -rc.y,
            rc.x,
            0,
            -sc.y,
            sc.x,
            0,
            -Af.y,
            Af.x,
            0,
        ];
        return !ES(t, vd, yd, _d, oy) ||
            ((t = [1, 0, 0, 0, 1, 0, 0, 0, 1]), !ES(t, vd, yd, _d, oy))
            ? !1
            : (ay.crossVectors(rc, sc),
              (t = [ay.x, ay.y, ay.z]),
              ES(t, vd, yd, _d, oy));
    }
    clampPoint(e, t) {
        return t.copy(e).clamp(this.min, this.max);
    }
    distanceToPoint(e) {
        return this.clampPoint(e, La).distanceTo(e);
    }
    getBoundingSphere(e) {
        return (
            this.isEmpty()
                ? e.makeEmpty()
                : (this.getCenter(e.center),
                  (e.radius = this.getSize(La).length() * 0.5)),
            e
        );
    }
    intersect(e) {
        return (
            this.min.max(e.min),
            this.max.min(e.max),
            this.isEmpty() && this.makeEmpty(),
            this
        );
    }
    union(e) {
        return this.min.min(e.min), this.max.max(e.max), this;
    }
    applyMatrix4(e) {
        return this.isEmpty()
            ? this
            : (lu[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e),
              lu[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e),
              lu[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e),
              lu[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e),
              lu[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e),
              lu[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e),
              lu[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e),
              lu[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e),
              this.setFromPoints(lu),
              this);
    }
    translate(e) {
        return this.min.add(e), this.max.add(e), this;
    }
    equals(e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
    }
}
const lu = [
        new re(),
        new re(),
        new re(),
        new re(),
        new re(),
        new re(),
        new re(),
        new re(),
    ],
    La = new re(),
    sy = new Ar(),
    vd = new re(),
    yd = new re(),
    _d = new re(),
    rc = new re(),
    sc = new re(),
    Af = new re(),
    jm = new re(),
    oy = new re(),
    ay = new re(),
    bf = new re();
function ES(r, e, t, n, i) {
    for (let s = 0, o = r.length - 3; s <= o; s += 3) {
        bf.fromArray(r, s);
        const a =
                i.x * Math.abs(bf.x) +
                i.y * Math.abs(bf.y) +
                i.z * Math.abs(bf.z),
            l = e.dot(bf),
            u = t.dot(bf),
            f = n.dot(bf);
        if (Math.max(-Math.max(l, u, f), Math.min(l, u, f)) > a) return !1;
    }
    return !0;
}
const U8 = new Ar(),
    Xm = new re(),
    TS = new re();
class Fr {
    constructor(e = new re(), t = -1) {
        (this.isSphere = !0), (this.center = e), (this.radius = t);
    }
    set(e, t) {
        return this.center.copy(e), (this.radius = t), this;
    }
    setFromPoints(e, t) {
        const n = this.center;
        t !== void 0 ? n.copy(t) : U8.setFromPoints(e).getCenter(n);
        let i = 0;
        for (let s = 0, o = e.length; s < o; s++)
            i = Math.max(i, n.distanceToSquared(e[s]));
        return (this.radius = Math.sqrt(i)), this;
    }
    copy(e) {
        return this.center.copy(e.center), (this.radius = e.radius), this;
    }
    isEmpty() {
        return this.radius < 0;
    }
    makeEmpty() {
        return this.center.set(0, 0, 0), (this.radius = -1), this;
    }
    containsPoint(e) {
        return e.distanceToSquared(this.center) <= this.radius * this.radius;
    }
    distanceToPoint(e) {
        return e.distanceTo(this.center) - this.radius;
    }
    intersectsSphere(e) {
        const t = this.radius + e.radius;
        return e.center.distanceToSquared(this.center) <= t * t;
    }
    intersectsBox(e) {
        return e.intersectsSphere(this);
    }
    intersectsPlane(e) {
        return Math.abs(e.distanceToPoint(this.center)) <= this.radius;
    }
    clampPoint(e, t) {
        const n = this.center.distanceToSquared(e);
        return (
            t.copy(e),
            n > this.radius * this.radius &&
                (t.sub(this.center).normalize(),
                t.multiplyScalar(this.radius).add(this.center)),
            t
        );
    }
    getBoundingBox(e) {
        return this.isEmpty()
            ? (e.makeEmpty(), e)
            : (e.set(this.center, this.center),
              e.expandByScalar(this.radius),
              e);
    }
    applyMatrix4(e) {
        return (
            this.center.applyMatrix4(e),
            (this.radius = this.radius * e.getMaxScaleOnAxis()),
            this
        );
    }
    translate(e) {
        return this.center.add(e), this;
    }
    expandByPoint(e) {
        if (this.isEmpty()) return this.center.copy(e), (this.radius = 0), this;
        Xm.subVectors(e, this.center);
        const t = Xm.lengthSq();
        if (t > this.radius * this.radius) {
            const n = Math.sqrt(t),
                i = (n - this.radius) * 0.5;
            this.center.addScaledVector(Xm, i / n), (this.radius += i);
        }
        return this;
    }
    union(e) {
        return e.isEmpty()
            ? this
            : this.isEmpty()
              ? (this.copy(e), this)
              : (this.center.equals(e.center) === !0
                    ? (this.radius = Math.max(this.radius, e.radius))
                    : (TS.subVectors(e.center, this.center).setLength(e.radius),
                      this.expandByPoint(Xm.copy(e.center).add(TS)),
                      this.expandByPoint(Xm.copy(e.center).sub(TS))),
                this);
    }
    equals(e) {
        return e.center.equals(this.center) && e.radius === this.radius;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}
const uu = new re(),
    AS = new re(),
    ly = new re(),
    oc = new re(),
    bS = new re(),
    uy = new re(),
    CS = new re();
class Gp {
    constructor(e = new re(), t = new re(0, 0, -1)) {
        (this.origin = e), (this.direction = t);
    }
    set(e, t) {
        return this.origin.copy(e), this.direction.copy(t), this;
    }
    copy(e) {
        return (
            this.origin.copy(e.origin), this.direction.copy(e.direction), this
        );
    }
    at(e, t) {
        return t.copy(this.origin).addScaledVector(this.direction, e);
    }
    lookAt(e) {
        return this.direction.copy(e).sub(this.origin).normalize(), this;
    }
    recast(e) {
        return this.origin.copy(this.at(e, uu)), this;
    }
    closestPointToPoint(e, t) {
        t.subVectors(e, this.origin);
        const n = t.dot(this.direction);
        return n < 0
            ? t.copy(this.origin)
            : t.copy(this.origin).addScaledVector(this.direction, n);
    }
    distanceToPoint(e) {
        return Math.sqrt(this.distanceSqToPoint(e));
    }
    distanceSqToPoint(e) {
        const t = uu.subVectors(e, this.origin).dot(this.direction);
        return t < 0
            ? this.origin.distanceToSquared(e)
            : (uu.copy(this.origin).addScaledVector(this.direction, t),
              uu.distanceToSquared(e));
    }
    distanceSqToSegment(e, t, n, i) {
        AS.copy(e).add(t).multiplyScalar(0.5),
            ly.copy(t).sub(e).normalize(),
            oc.copy(this.origin).sub(AS);
        const s = e.distanceTo(t) * 0.5,
            o = -this.direction.dot(ly),
            a = oc.dot(this.direction),
            l = -oc.dot(ly),
            u = oc.lengthSq(),
            f = Math.abs(1 - o * o);
        let d, m, v, _;
        if (f > 0)
            if (((d = o * l - a), (m = o * a - l), (_ = s * f), d >= 0))
                if (m >= -_)
                    if (m <= _) {
                        const S = 1 / f;
                        (d *= S),
                            (m *= S),
                            (v =
                                d * (d + o * m + 2 * a) +
                                m * (o * d + m + 2 * l) +
                                u);
                    } else
                        (m = s),
                            (d = Math.max(0, -(o * m + a))),
                            (v = -d * d + m * (m + 2 * l) + u);
                else
                    (m = -s),
                        (d = Math.max(0, -(o * m + a))),
                        (v = -d * d + m * (m + 2 * l) + u);
            else
                m <= -_
                    ? ((d = Math.max(0, -(-o * s + a))),
                      (m = d > 0 ? -s : Math.min(Math.max(-s, -l), s)),
                      (v = -d * d + m * (m + 2 * l) + u))
                    : m <= _
                      ? ((d = 0),
                        (m = Math.min(Math.max(-s, -l), s)),
                        (v = m * (m + 2 * l) + u))
                      : ((d = Math.max(0, -(o * s + a))),
                        (m = d > 0 ? s : Math.min(Math.max(-s, -l), s)),
                        (v = -d * d + m * (m + 2 * l) + u));
        else
            (m = o > 0 ? -s : s),
                (d = Math.max(0, -(o * m + a))),
                (v = -d * d + m * (m + 2 * l) + u);
        return (
            n && n.copy(this.origin).addScaledVector(this.direction, d),
            i && i.copy(AS).addScaledVector(ly, m),
            v
        );
    }
    intersectSphere(e, t) {
        uu.subVectors(e.center, this.origin);
        const n = uu.dot(this.direction),
            i = uu.dot(uu) - n * n,
            s = e.radius * e.radius;
        if (i > s) return null;
        const o = Math.sqrt(s - i),
            a = n - o,
            l = n + o;
        return l < 0 ? null : a < 0 ? this.at(l, t) : this.at(a, t);
    }
    intersectsSphere(e) {
        return this.distanceSqToPoint(e.center) <= e.radius * e.radius;
    }
    distanceToPlane(e) {
        const t = e.normal.dot(this.direction);
        if (t === 0) return e.distanceToPoint(this.origin) === 0 ? 0 : null;
        const n = -(this.origin.dot(e.normal) + e.constant) / t;
        return n >= 0 ? n : null;
    }
    intersectPlane(e, t) {
        const n = this.distanceToPlane(e);
        return n === null ? null : this.at(n, t);
    }
    intersectsPlane(e) {
        const t = e.distanceToPoint(this.origin);
        return t === 0 || e.normal.dot(this.direction) * t < 0;
    }
    intersectBox(e, t) {
        let n, i, s, o, a, l;
        const u = 1 / this.direction.x,
            f = 1 / this.direction.y,
            d = 1 / this.direction.z,
            m = this.origin;
        return (
            u >= 0
                ? ((n = (e.min.x - m.x) * u), (i = (e.max.x - m.x) * u))
                : ((n = (e.max.x - m.x) * u), (i = (e.min.x - m.x) * u)),
            f >= 0
                ? ((s = (e.min.y - m.y) * f), (o = (e.max.y - m.y) * f))
                : ((s = (e.max.y - m.y) * f), (o = (e.min.y - m.y) * f)),
            n > o ||
            s > i ||
            ((s > n || isNaN(n)) && (n = s),
            (o < i || isNaN(i)) && (i = o),
            d >= 0
                ? ((a = (e.min.z - m.z) * d), (l = (e.max.z - m.z) * d))
                : ((a = (e.max.z - m.z) * d), (l = (e.min.z - m.z) * d)),
            n > l || a > i) ||
            ((a > n || n !== n) && (n = a),
            (l < i || i !== i) && (i = l),
            i < 0)
                ? null
                : this.at(n >= 0 ? n : i, t)
        );
    }
    intersectsBox(e) {
        return this.intersectBox(e, uu) !== null;
    }
    intersectTriangle(e, t, n, i, s) {
        bS.subVectors(t, e), uy.subVectors(n, e), CS.crossVectors(bS, uy);
        let o = this.direction.dot(CS),
            a;
        if (o > 0) {
            if (i) return null;
            a = 1;
        } else if (o < 0) (a = -1), (o = -o);
        else return null;
        oc.subVectors(this.origin, e);
        const l = a * this.direction.dot(uy.crossVectors(oc, uy));
        if (l < 0) return null;
        const u = a * this.direction.dot(bS.cross(oc));
        if (u < 0 || l + u > o) return null;
        const f = -a * oc.dot(CS);
        return f < 0 ? null : this.at(f / o, s);
    }
    applyMatrix4(e) {
        return (
            this.origin.applyMatrix4(e),
            this.direction.transformDirection(e),
            this
        );
    }
    equals(e) {
        return (
            e.origin.equals(this.origin) && e.direction.equals(this.direction)
        );
    }
    clone() {
        return new this.constructor().copy(this);
    }
}
class qt {
    constructor(e, t, n, i, s, o, a, l, u, f, d, m, v, _, S, w) {
        (qt.prototype.isMatrix4 = !0),
            (this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]),
            e !== void 0 &&
                this.set(e, t, n, i, s, o, a, l, u, f, d, m, v, _, S, w);
    }
    set(e, t, n, i, s, o, a, l, u, f, d, m, v, _, S, w) {
        const x = this.elements;
        return (
            (x[0] = e),
            (x[4] = t),
            (x[8] = n),
            (x[12] = i),
            (x[1] = s),
            (x[5] = o),
            (x[9] = a),
            (x[13] = l),
            (x[2] = u),
            (x[6] = f),
            (x[10] = d),
            (x[14] = m),
            (x[3] = v),
            (x[7] = _),
            (x[11] = S),
            (x[15] = w),
            this
        );
    }
    identity() {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
    }
    clone() {
        return new qt().fromArray(this.elements);
    }
    copy(e) {
        const t = this.elements,
            n = e.elements;
        return (
            (t[0] = n[0]),
            (t[1] = n[1]),
            (t[2] = n[2]),
            (t[3] = n[3]),
            (t[4] = n[4]),
            (t[5] = n[5]),
            (t[6] = n[6]),
            (t[7] = n[7]),
            (t[8] = n[8]),
            (t[9] = n[9]),
            (t[10] = n[10]),
            (t[11] = n[11]),
            (t[12] = n[12]),
            (t[13] = n[13]),
            (t[14] = n[14]),
            (t[15] = n[15]),
            this
        );
    }
    copyPosition(e) {
        const t = this.elements,
            n = e.elements;
        return (t[12] = n[12]), (t[13] = n[13]), (t[14] = n[14]), this;
    }
    setFromMatrix3(e) {
        const t = e.elements;
        return (
            this.set(
                t[0],
                t[3],
                t[6],
                0,
                t[1],
                t[4],
                t[7],
                0,
                t[2],
                t[5],
                t[8],
                0,
                0,
                0,
                0,
                1
            ),
            this
        );
    }
    extractBasis(e, t, n) {
        return (
            e.setFromMatrixColumn(this, 0),
            t.setFromMatrixColumn(this, 1),
            n.setFromMatrixColumn(this, 2),
            this
        );
    }
    makeBasis(e, t, n) {
        return (
            this.set(
                e.x,
                t.x,
                n.x,
                0,
                e.y,
                t.y,
                n.y,
                0,
                e.z,
                t.z,
                n.z,
                0,
                0,
                0,
                0,
                1
            ),
            this
        );
    }
    extractRotation(e) {
        const t = this.elements,
            n = e.elements,
            i = 1 / xd.setFromMatrixColumn(e, 0).length(),
            s = 1 / xd.setFromMatrixColumn(e, 1).length(),
            o = 1 / xd.setFromMatrixColumn(e, 2).length();
        return (
            (t[0] = n[0] * i),
            (t[1] = n[1] * i),
            (t[2] = n[2] * i),
            (t[3] = 0),
            (t[4] = n[4] * s),
            (t[5] = n[5] * s),
            (t[6] = n[6] * s),
            (t[7] = 0),
            (t[8] = n[8] * o),
            (t[9] = n[9] * o),
            (t[10] = n[10] * o),
            (t[11] = 0),
            (t[12] = 0),
            (t[13] = 0),
            (t[14] = 0),
            (t[15] = 1),
            this
        );
    }
    makeRotationFromEuler(e) {
        const t = this.elements,
            n = e.x,
            i = e.y,
            s = e.z,
            o = Math.cos(n),
            a = Math.sin(n),
            l = Math.cos(i),
            u = Math.sin(i),
            f = Math.cos(s),
            d = Math.sin(s);
        if (e.order === 'XYZ') {
            const m = o * f,
                v = o * d,
                _ = a * f,
                S = a * d;
            (t[0] = l * f),
                (t[4] = -l * d),
                (t[8] = u),
                (t[1] = v + _ * u),
                (t[5] = m - S * u),
                (t[9] = -a * l),
                (t[2] = S - m * u),
                (t[6] = _ + v * u),
                (t[10] = o * l);
        } else if (e.order === 'YXZ') {
            const m = l * f,
                v = l * d,
                _ = u * f,
                S = u * d;
            (t[0] = m + S * a),
                (t[4] = _ * a - v),
                (t[8] = o * u),
                (t[1] = o * d),
                (t[5] = o * f),
                (t[9] = -a),
                (t[2] = v * a - _),
                (t[6] = S + m * a),
                (t[10] = o * l);
        } else if (e.order === 'ZXY') {
            const m = l * f,
                v = l * d,
                _ = u * f,
                S = u * d;
            (t[0] = m - S * a),
                (t[4] = -o * d),
                (t[8] = _ + v * a),
                (t[1] = v + _ * a),
                (t[5] = o * f),
                (t[9] = S - m * a),
                (t[2] = -o * u),
                (t[6] = a),
                (t[10] = o * l);
        } else if (e.order === 'ZYX') {
            const m = o * f,
                v = o * d,
                _ = a * f,
                S = a * d;
            (t[0] = l * f),
                (t[4] = _ * u - v),
                (t[8] = m * u + S),
                (t[1] = l * d),
                (t[5] = S * u + m),
                (t[9] = v * u - _),
                (t[2] = -u),
                (t[6] = a * l),
                (t[10] = o * l);
        } else if (e.order === 'YZX') {
            const m = o * l,
                v = o * u,
                _ = a * l,
                S = a * u;
            (t[0] = l * f),
                (t[4] = S - m * d),
                (t[8] = _ * d + v),
                (t[1] = d),
                (t[5] = o * f),
                (t[9] = -a * f),
                (t[2] = -u * f),
                (t[6] = v * d + _),
                (t[10] = m - S * d);
        } else if (e.order === 'XZY') {
            const m = o * l,
                v = o * u,
                _ = a * l,
                S = a * u;
            (t[0] = l * f),
                (t[4] = -d),
                (t[8] = u * f),
                (t[1] = m * d + S),
                (t[5] = o * f),
                (t[9] = v * d - _),
                (t[2] = _ * d - v),
                (t[6] = a * f),
                (t[10] = S * d + m);
        }
        return (
            (t[3] = 0),
            (t[7] = 0),
            (t[11] = 0),
            (t[12] = 0),
            (t[13] = 0),
            (t[14] = 0),
            (t[15] = 1),
            this
        );
    }
    makeRotationFromQuaternion(e) {
        return this.compose(k8, e, N8);
    }
    lookAt(e, t, n) {
        const i = this.elements;
        return (
            xo.subVectors(e, t),
            xo.lengthSq() === 0 && (xo.z = 1),
            xo.normalize(),
            ac.crossVectors(n, xo),
            ac.lengthSq() === 0 &&
                (Math.abs(n.z) === 1 ? (xo.x += 1e-4) : (xo.z += 1e-4),
                xo.normalize(),
                ac.crossVectors(n, xo)),
            ac.normalize(),
            cy.crossVectors(xo, ac),
            (i[0] = ac.x),
            (i[4] = cy.x),
            (i[8] = xo.x),
            (i[1] = ac.y),
            (i[5] = cy.y),
            (i[9] = xo.y),
            (i[2] = ac.z),
            (i[6] = cy.z),
            (i[10] = xo.z),
            this
        );
    }
    multiply(e) {
        return this.multiplyMatrices(this, e);
    }
    premultiply(e) {
        return this.multiplyMatrices(e, this);
    }
    multiplyMatrices(e, t) {
        const n = e.elements,
            i = t.elements,
            s = this.elements,
            o = n[0],
            a = n[4],
            l = n[8],
            u = n[12],
            f = n[1],
            d = n[5],
            m = n[9],
            v = n[13],
            _ = n[2],
            S = n[6],
            w = n[10],
            x = n[14],
            A = n[3],
            T = n[7],
            b = n[11],
            P = n[15],
            L = i[0],
            D = i[4],
            O = i[8],
            I = i[12],
            U = i[1],
            H = i[5],
            W = i[9],
            q = i[13],
            K = i[2],
            le = i[6],
            ee = i[10],
            de = i[14],
            Z = i[3],
            se = i[7],
            J = i[11],
            F = i[15];
        return (
            (s[0] = o * L + a * U + l * K + u * Z),
            (s[4] = o * D + a * H + l * le + u * se),
            (s[8] = o * O + a * W + l * ee + u * J),
            (s[12] = o * I + a * q + l * de + u * F),
            (s[1] = f * L + d * U + m * K + v * Z),
            (s[5] = f * D + d * H + m * le + v * se),
            (s[9] = f * O + d * W + m * ee + v * J),
            (s[13] = f * I + d * q + m * de + v * F),
            (s[2] = _ * L + S * U + w * K + x * Z),
            (s[6] = _ * D + S * H + w * le + x * se),
            (s[10] = _ * O + S * W + w * ee + x * J),
            (s[14] = _ * I + S * q + w * de + x * F),
            (s[3] = A * L + T * U + b * K + P * Z),
            (s[7] = A * D + T * H + b * le + P * se),
            (s[11] = A * O + T * W + b * ee + P * J),
            (s[15] = A * I + T * q + b * de + P * F),
            this
        );
    }
    multiplyScalar(e) {
        const t = this.elements;
        return (
            (t[0] *= e),
            (t[4] *= e),
            (t[8] *= e),
            (t[12] *= e),
            (t[1] *= e),
            (t[5] *= e),
            (t[9] *= e),
            (t[13] *= e),
            (t[2] *= e),
            (t[6] *= e),
            (t[10] *= e),
            (t[14] *= e),
            (t[3] *= e),
            (t[7] *= e),
            (t[11] *= e),
            (t[15] *= e),
            this
        );
    }
    determinant() {
        const e = this.elements,
            t = e[0],
            n = e[4],
            i = e[8],
            s = e[12],
            o = e[1],
            a = e[5],
            l = e[9],
            u = e[13],
            f = e[2],
            d = e[6],
            m = e[10],
            v = e[14],
            _ = e[3],
            S = e[7],
            w = e[11],
            x = e[15];
        return (
            _ *
                (+s * l * d -
                    i * u * d -
                    s * a * m +
                    n * u * m +
                    i * a * v -
                    n * l * v) +
            S *
                (+t * l * v -
                    t * u * m +
                    s * o * m -
                    i * o * v +
                    i * u * f -
                    s * l * f) +
            w *
                (+t * u * d -
                    t * a * v -
                    s * o * d +
                    n * o * v +
                    s * a * f -
                    n * u * f) +
            x *
                (-i * a * f -
                    t * l * d +
                    t * a * m +
                    i * o * d -
                    n * o * m +
                    n * l * f)
        );
    }
    transpose() {
        const e = this.elements;
        let t;
        return (
            (t = e[1]),
            (e[1] = e[4]),
            (e[4] = t),
            (t = e[2]),
            (e[2] = e[8]),
            (e[8] = t),
            (t = e[6]),
            (e[6] = e[9]),
            (e[9] = t),
            (t = e[3]),
            (e[3] = e[12]),
            (e[12] = t),
            (t = e[7]),
            (e[7] = e[13]),
            (e[13] = t),
            (t = e[11]),
            (e[11] = e[14]),
            (e[14] = t),
            this
        );
    }
    setPosition(e, t, n) {
        const i = this.elements;
        return (
            e.isVector3
                ? ((i[12] = e.x), (i[13] = e.y), (i[14] = e.z))
                : ((i[12] = e), (i[13] = t), (i[14] = n)),
            this
        );
    }
    invert() {
        const e = this.elements,
            t = e[0],
            n = e[1],
            i = e[2],
            s = e[3],
            o = e[4],
            a = e[5],
            l = e[6],
            u = e[7],
            f = e[8],
            d = e[9],
            m = e[10],
            v = e[11],
            _ = e[12],
            S = e[13],
            w = e[14],
            x = e[15],
            A =
                d * w * u -
                S * m * u +
                S * l * v -
                a * w * v -
                d * l * x +
                a * m * x,
            T =
                _ * m * u -
                f * w * u -
                _ * l * v +
                o * w * v +
                f * l * x -
                o * m * x,
            b =
                f * S * u -
                _ * d * u +
                _ * a * v -
                o * S * v -
                f * a * x +
                o * d * x,
            P =
                _ * d * l -
                f * S * l -
                _ * a * m +
                o * S * m +
                f * a * w -
                o * d * w,
            L = t * A + n * T + i * b + s * P;
        if (L === 0)
            return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        const D = 1 / L;
        return (
            (e[0] = A * D),
            (e[1] =
                (S * m * s -
                    d * w * s -
                    S * i * v +
                    n * w * v +
                    d * i * x -
                    n * m * x) *
                D),
            (e[2] =
                (a * w * s -
                    S * l * s +
                    S * i * u -
                    n * w * u -
                    a * i * x +
                    n * l * x) *
                D),
            (e[3] =
                (d * l * s -
                    a * m * s -
                    d * i * u +
                    n * m * u +
                    a * i * v -
                    n * l * v) *
                D),
            (e[4] = T * D),
            (e[5] =
                (f * w * s -
                    _ * m * s +
                    _ * i * v -
                    t * w * v -
                    f * i * x +
                    t * m * x) *
                D),
            (e[6] =
                (_ * l * s -
                    o * w * s -
                    _ * i * u +
                    t * w * u +
                    o * i * x -
                    t * l * x) *
                D),
            (e[7] =
                (o * m * s -
                    f * l * s +
                    f * i * u -
                    t * m * u -
                    o * i * v +
                    t * l * v) *
                D),
            (e[8] = b * D),
            (e[9] =
                (_ * d * s -
                    f * S * s -
                    _ * n * v +
                    t * S * v +
                    f * n * x -
                    t * d * x) *
                D),
            (e[10] =
                (o * S * s -
                    _ * a * s +
                    _ * n * u -
                    t * S * u -
                    o * n * x +
                    t * a * x) *
                D),
            (e[11] =
                (f * a * s -
                    o * d * s -
                    f * n * u +
                    t * d * u +
                    o * n * v -
                    t * a * v) *
                D),
            (e[12] = P * D),
            (e[13] =
                (f * S * i -
                    _ * d * i +
                    _ * n * m -
                    t * S * m -
                    f * n * w +
                    t * d * w) *
                D),
            (e[14] =
                (_ * a * i -
                    o * S * i -
                    _ * n * l +
                    t * S * l +
                    o * n * w -
                    t * a * w) *
                D),
            (e[15] =
                (o * d * i -
                    f * a * i +
                    f * n * l -
                    t * d * l -
                    o * n * m +
                    t * a * m) *
                D),
            this
        );
    }
    scale(e) {
        const t = this.elements,
            n = e.x,
            i = e.y,
            s = e.z;
        return (
            (t[0] *= n),
            (t[4] *= i),
            (t[8] *= s),
            (t[1] *= n),
            (t[5] *= i),
            (t[9] *= s),
            (t[2] *= n),
            (t[6] *= i),
            (t[10] *= s),
            (t[3] *= n),
            (t[7] *= i),
            (t[11] *= s),
            this
        );
    }
    getMaxScaleOnAxis() {
        const e = this.elements,
            t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
            n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
            i = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
        return Math.sqrt(Math.max(t, n, i));
    }
    makeTranslation(e, t, n) {
        return (
            e.isVector3
                ? this.set(1, 0, 0, e.x, 0, 1, 0, e.y, 0, 0, 1, e.z, 0, 0, 0, 1)
                : this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1),
            this
        );
    }
    makeRotationX(e) {
        const t = Math.cos(e),
            n = Math.sin(e);
        return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this;
    }
    makeRotationY(e) {
        const t = Math.cos(e),
            n = Math.sin(e);
        return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this;
    }
    makeRotationZ(e) {
        const t = Math.cos(e),
            n = Math.sin(e);
        return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this;
    }
    makeRotationAxis(e, t) {
        const n = Math.cos(t),
            i = Math.sin(t),
            s = 1 - n,
            o = e.x,
            a = e.y,
            l = e.z,
            u = s * o,
            f = s * a;
        return (
            this.set(
                u * o + n,
                u * a - i * l,
                u * l + i * a,
                0,
                u * a + i * l,
                f * a + n,
                f * l - i * o,
                0,
                u * l - i * a,
                f * l + i * o,
                s * l * l + n,
                0,
                0,
                0,
                0,
                1
            ),
            this
        );
    }
    makeScale(e, t, n) {
        return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this;
    }
    makeShear(e, t, n, i, s, o) {
        return this.set(1, n, s, 0, e, 1, o, 0, t, i, 1, 0, 0, 0, 0, 1), this;
    }
    compose(e, t, n) {
        const i = this.elements,
            s = t._x,
            o = t._y,
            a = t._z,
            l = t._w,
            u = s + s,
            f = o + o,
            d = a + a,
            m = s * u,
            v = s * f,
            _ = s * d,
            S = o * f,
            w = o * d,
            x = a * d,
            A = l * u,
            T = l * f,
            b = l * d,
            P = n.x,
            L = n.y,
            D = n.z;
        return (
            (i[0] = (1 - (S + x)) * P),
            (i[1] = (v + b) * P),
            (i[2] = (_ - T) * P),
            (i[3] = 0),
            (i[4] = (v - b) * L),
            (i[5] = (1 - (m + x)) * L),
            (i[6] = (w + A) * L),
            (i[7] = 0),
            (i[8] = (_ + T) * D),
            (i[9] = (w - A) * D),
            (i[10] = (1 - (m + S)) * D),
            (i[11] = 0),
            (i[12] = e.x),
            (i[13] = e.y),
            (i[14] = e.z),
            (i[15] = 1),
            this
        );
    }
    decompose(e, t, n) {
        const i = this.elements;
        let s = xd.set(i[0], i[1], i[2]).length();
        const o = xd.set(i[4], i[5], i[6]).length(),
            a = xd.set(i[8], i[9], i[10]).length();
        this.determinant() < 0 && (s = -s),
            (e.x = i[12]),
            (e.y = i[13]),
            (e.z = i[14]),
            Ia.copy(this);
        const u = 1 / s,
            f = 1 / o,
            d = 1 / a;
        return (
            (Ia.elements[0] *= u),
            (Ia.elements[1] *= u),
            (Ia.elements[2] *= u),
            (Ia.elements[4] *= f),
            (Ia.elements[5] *= f),
            (Ia.elements[6] *= f),
            (Ia.elements[8] *= d),
            (Ia.elements[9] *= d),
            (Ia.elements[10] *= d),
            t.setFromRotationMatrix(Ia),
            (n.x = s),
            (n.y = o),
            (n.z = a),
            this
        );
    }
    makePerspective(e, t, n, i, s, o, a = xl) {
        const l = this.elements,
            u = (2 * s) / (t - e),
            f = (2 * s) / (n - i),
            d = (t + e) / (t - e),
            m = (n + i) / (n - i);
        let v, _;
        if (a === xl) (v = -(o + s) / (o - s)), (_ = (-2 * o * s) / (o - s));
        else if (a === w0) (v = -o / (o - s)), (_ = (-o * s) / (o - s));
        else
            throw new Error(
                'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' +
                    a
            );
        return (
            (l[0] = u),
            (l[4] = 0),
            (l[8] = d),
            (l[12] = 0),
            (l[1] = 0),
            (l[5] = f),
            (l[9] = m),
            (l[13] = 0),
            (l[2] = 0),
            (l[6] = 0),
            (l[10] = v),
            (l[14] = _),
            (l[3] = 0),
            (l[7] = 0),
            (l[11] = -1),
            (l[15] = 0),
            this
        );
    }
    makeOrthographic(e, t, n, i, s, o, a = xl) {
        const l = this.elements,
            u = 1 / (t - e),
            f = 1 / (n - i),
            d = 1 / (o - s),
            m = (t + e) * u,
            v = (n + i) * f;
        let _, S;
        if (a === xl) (_ = (o + s) * d), (S = -2 * d);
        else if (a === w0) (_ = s * d), (S = -1 * d);
        else
            throw new Error(
                'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' +
                    a
            );
        return (
            (l[0] = 2 * u),
            (l[4] = 0),
            (l[8] = 0),
            (l[12] = -m),
            (l[1] = 0),
            (l[5] = 2 * f),
            (l[9] = 0),
            (l[13] = -v),
            (l[2] = 0),
            (l[6] = 0),
            (l[10] = S),
            (l[14] = -_),
            (l[3] = 0),
            (l[7] = 0),
            (l[11] = 0),
            (l[15] = 1),
            this
        );
    }
    equals(e) {
        const t = this.elements,
            n = e.elements;
        for (let i = 0; i < 16; i++) if (t[i] !== n[i]) return !1;
        return !0;
    }
    fromArray(e, t = 0) {
        for (let n = 0; n < 16; n++) this.elements[n] = e[n + t];
        return this;
    }
    toArray(e = [], t = 0) {
        const n = this.elements;
        return (
            (e[t] = n[0]),
            (e[t + 1] = n[1]),
            (e[t + 2] = n[2]),
            (e[t + 3] = n[3]),
            (e[t + 4] = n[4]),
            (e[t + 5] = n[5]),
            (e[t + 6] = n[6]),
            (e[t + 7] = n[7]),
            (e[t + 8] = n[8]),
            (e[t + 9] = n[9]),
            (e[t + 10] = n[10]),
            (e[t + 11] = n[11]),
            (e[t + 12] = n[12]),
            (e[t + 13] = n[13]),
            (e[t + 14] = n[14]),
            (e[t + 15] = n[15]),
            e
        );
    }
}
const xd = new re(),
    Ia = new qt(),
    k8 = new re(0, 0, 0),
    N8 = new re(1, 1, 1),
    ac = new re(),
    cy = new re(),
    xo = new re(),
    jC = new qt(),
    XC = new mr();
class oo {
    constructor(e = 0, t = 0, n = 0, i = oo.DEFAULT_ORDER) {
        (this.isEuler = !0),
            (this._x = e),
            (this._y = t),
            (this._z = n),
            (this._order = i);
    }
    get x() {
        return this._x;
    }
    set x(e) {
        (this._x = e), this._onChangeCallback();
    }
    get y() {
        return this._y;
    }
    set y(e) {
        (this._y = e), this._onChangeCallback();
    }
    get z() {
        return this._z;
    }
    set z(e) {
        (this._z = e), this._onChangeCallback();
    }
    get order() {
        return this._order;
    }
    set order(e) {
        (this._order = e), this._onChangeCallback();
    }
    set(e, t, n, i = this._order) {
        return (
            (this._x = e),
            (this._y = t),
            (this._z = n),
            (this._order = i),
            this._onChangeCallback(),
            this
        );
    }
    clone() {
        return new this.constructor(this._x, this._y, this._z, this._order);
    }
    copy(e) {
        return (
            (this._x = e._x),
            (this._y = e._y),
            (this._z = e._z),
            (this._order = e._order),
            this._onChangeCallback(),
            this
        );
    }
    setFromRotationMatrix(e, t = this._order, n = !0) {
        const i = e.elements,
            s = i[0],
            o = i[4],
            a = i[8],
            l = i[1],
            u = i[5],
            f = i[9],
            d = i[2],
            m = i[6],
            v = i[10];
        switch (t) {
            case 'XYZ':
                (this._y = Math.asin(Vi(a, -1, 1))),
                    Math.abs(a) < 0.9999999
                        ? ((this._x = Math.atan2(-f, v)),
                          (this._z = Math.atan2(-o, s)))
                        : ((this._x = Math.atan2(m, u)), (this._z = 0));
                break;
            case 'YXZ':
                (this._x = Math.asin(-Vi(f, -1, 1))),
                    Math.abs(f) < 0.9999999
                        ? ((this._y = Math.atan2(a, v)),
                          (this._z = Math.atan2(l, u)))
                        : ((this._y = Math.atan2(-d, s)), (this._z = 0));
                break;
            case 'ZXY':
                (this._x = Math.asin(Vi(m, -1, 1))),
                    Math.abs(m) < 0.9999999
                        ? ((this._y = Math.atan2(-d, v)),
                          (this._z = Math.atan2(-o, u)))
                        : ((this._y = 0), (this._z = Math.atan2(l, s)));
                break;
            case 'ZYX':
                (this._y = Math.asin(-Vi(d, -1, 1))),
                    Math.abs(d) < 0.9999999
                        ? ((this._x = Math.atan2(m, v)),
                          (this._z = Math.atan2(l, s)))
                        : ((this._x = 0), (this._z = Math.atan2(-o, u)));
                break;
            case 'YZX':
                (this._z = Math.asin(Vi(l, -1, 1))),
                    Math.abs(l) < 0.9999999
                        ? ((this._x = Math.atan2(-f, u)),
                          (this._y = Math.atan2(-d, s)))
                        : ((this._x = 0), (this._y = Math.atan2(a, v)));
                break;
            case 'XZY':
                (this._z = Math.asin(-Vi(o, -1, 1))),
                    Math.abs(o) < 0.9999999
                        ? ((this._x = Math.atan2(m, u)),
                          (this._y = Math.atan2(a, s)))
                        : ((this._x = Math.atan2(-f, v)), (this._y = 0));
                break;
            default:
                console.warn(
                    'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' +
                        t
                );
        }
        return (this._order = t), n === !0 && this._onChangeCallback(), this;
    }
    setFromQuaternion(e, t, n) {
        return (
            jC.makeRotationFromQuaternion(e),
            this.setFromRotationMatrix(jC, t, n)
        );
    }
    setFromVector3(e, t = this._order) {
        return this.set(e.x, e.y, e.z, t);
    }
    reorder(e) {
        return XC.setFromEuler(this), this.setFromQuaternion(XC, e);
    }
    equals(e) {
        return (
            e._x === this._x &&
            e._y === this._y &&
            e._z === this._z &&
            e._order === this._order
        );
    }
    fromArray(e) {
        return (
            (this._x = e[0]),
            (this._y = e[1]),
            (this._z = e[2]),
            e[3] !== void 0 && (this._order = e[3]),
            this._onChangeCallback(),
            this
        );
    }
    toArray(e = [], t = 0) {
        return (
            (e[t] = this._x),
            (e[t + 1] = this._y),
            (e[t + 2] = this._z),
            (e[t + 3] = this._order),
            e
        );
    }
    _onChange(e) {
        return (this._onChangeCallback = e), this;
    }
    _onChangeCallback() {}
    *[Symbol.iterator]() {
        yield this._x, yield this._y, yield this._z, yield this._order;
    }
}
oo.DEFAULT_ORDER = 'XYZ';
class fh {
    constructor() {
        this.mask = 1;
    }
    set(e) {
        this.mask = ((1 << e) | 0) >>> 0;
    }
    enable(e) {
        this.mask |= (1 << e) | 0;
    }
    enableAll() {
        this.mask = -1;
    }
    toggle(e) {
        this.mask ^= (1 << e) | 0;
    }
    disable(e) {
        this.mask &= ~((1 << e) | 0);
    }
    disableAll() {
        this.mask = 0;
    }
    test(e) {
        return (this.mask & e.mask) !== 0;
    }
    isEnabled(e) {
        return (this.mask & ((1 << e) | 0)) !== 0;
    }
}
let F8 = 0;
const YC = new re(),
    Sd = new mr(),
    cu = new qt(),
    fy = new re(),
    Ym = new re(),
    B8 = new re(),
    z8 = new mr(),
    qC = new re(1, 0, 0),
    KC = new re(0, 1, 0),
    ZC = new re(0, 0, 1),
    $C = { type: 'added' },
    V8 = { type: 'removed' },
    wd = { type: 'childadded', child: null },
    RS = { type: 'childremoved', child: null };
class In extends bu {
    constructor() {
        super(),
            (this.isObject3D = !0),
            Object.defineProperty(this, 'id', { value: F8++ }),
            (this.uuid = Ro()),
            (this.name = ''),
            (this.type = 'Object3D'),
            (this.parent = null),
            (this.children = []),
            (this.up = In.DEFAULT_UP.clone());
        const e = new re(),
            t = new oo(),
            n = new mr(),
            i = new re(1, 1, 1);
        function s() {
            n.setFromEuler(t, !1);
        }
        function o() {
            t.setFromQuaternion(n, void 0, !1);
        }
        t._onChange(s),
            n._onChange(o),
            Object.defineProperties(this, {
                position: { configurable: !0, enumerable: !0, value: e },
                rotation: { configurable: !0, enumerable: !0, value: t },
                quaternion: { configurable: !0, enumerable: !0, value: n },
                scale: { configurable: !0, enumerable: !0, value: i },
                modelViewMatrix: { value: new qt() },
                normalMatrix: { value: new pn() },
            }),
            (this.matrix = new qt()),
            (this.matrixWorld = new qt()),
            (this.matrixAutoUpdate = In.DEFAULT_MATRIX_AUTO_UPDATE),
            (this.matrixWorldAutoUpdate = In.DEFAULT_MATRIX_WORLD_AUTO_UPDATE),
            (this.matrixWorldNeedsUpdate = !1),
            (this.layers = new fh()),
            (this.visible = !0),
            (this.castShadow = !1),
            (this.receiveShadow = !1),
            (this.frustumCulled = !0),
            (this.renderOrder = 0),
            (this.animations = []),
            (this.userData = {});
    }
    onBeforeShadow() {}
    onAfterShadow() {}
    onBeforeRender() {}
    onAfterRender() {}
    applyMatrix4(e) {
        this.matrixAutoUpdate && this.updateMatrix(),
            this.matrix.premultiply(e),
            this.matrix.decompose(this.position, this.quaternion, this.scale);
    }
    applyQuaternion(e) {
        return this.quaternion.premultiply(e), this;
    }
    setRotationFromAxisAngle(e, t) {
        this.quaternion.setFromAxisAngle(e, t);
    }
    setRotationFromEuler(e) {
        this.quaternion.setFromEuler(e, !0);
    }
    setRotationFromMatrix(e) {
        this.quaternion.setFromRotationMatrix(e);
    }
    setRotationFromQuaternion(e) {
        this.quaternion.copy(e);
    }
    rotateOnAxis(e, t) {
        return Sd.setFromAxisAngle(e, t), this.quaternion.multiply(Sd), this;
    }
    rotateOnWorldAxis(e, t) {
        return Sd.setFromAxisAngle(e, t), this.quaternion.premultiply(Sd), this;
    }
    rotateX(e) {
        return this.rotateOnAxis(qC, e);
    }
    rotateY(e) {
        return this.rotateOnAxis(KC, e);
    }
    rotateZ(e) {
        return this.rotateOnAxis(ZC, e);
    }
    translateOnAxis(e, t) {
        return (
            YC.copy(e).applyQuaternion(this.quaternion),
            this.position.add(YC.multiplyScalar(t)),
            this
        );
    }
    translateX(e) {
        return this.translateOnAxis(qC, e);
    }
    translateY(e) {
        return this.translateOnAxis(KC, e);
    }
    translateZ(e) {
        return this.translateOnAxis(ZC, e);
    }
    localToWorld(e) {
        return this.updateWorldMatrix(!0, !1), e.applyMatrix4(this.matrixWorld);
    }
    worldToLocal(e) {
        return (
            this.updateWorldMatrix(!0, !1),
            e.applyMatrix4(cu.copy(this.matrixWorld).invert())
        );
    }
    lookAt(e, t, n) {
        e.isVector3 ? fy.copy(e) : fy.set(e, t, n);
        const i = this.parent;
        this.updateWorldMatrix(!0, !1),
            Ym.setFromMatrixPosition(this.matrixWorld),
            this.isCamera || this.isLight
                ? cu.lookAt(Ym, fy, this.up)
                : cu.lookAt(fy, Ym, this.up),
            this.quaternion.setFromRotationMatrix(cu),
            i &&
                (cu.extractRotation(i.matrixWorld),
                Sd.setFromRotationMatrix(cu),
                this.quaternion.premultiply(Sd.invert()));
    }
    add(e) {
        if (arguments.length > 1) {
            for (let t = 0; t < arguments.length; t++) this.add(arguments[t]);
            return this;
        }
        return e === this
            ? (console.error(
                  "THREE.Object3D.add: object can't be added as a child of itself.",
                  e
              ),
              this)
            : (e && e.isObject3D
                  ? (e.removeFromParent(),
                    (e.parent = this),
                    this.children.push(e),
                    e.dispatchEvent($C),
                    (wd.child = e),
                    this.dispatchEvent(wd),
                    (wd.child = null))
                  : console.error(
                        'THREE.Object3D.add: object not an instance of THREE.Object3D.',
                        e
                    ),
              this);
    }
    remove(e) {
        if (arguments.length > 1) {
            for (let n = 0; n < arguments.length; n++)
                this.remove(arguments[n]);
            return this;
        }
        const t = this.children.indexOf(e);
        return (
            t !== -1 &&
                ((e.parent = null),
                this.children.splice(t, 1),
                e.dispatchEvent(V8),
                (RS.child = e),
                this.dispatchEvent(RS),
                (RS.child = null)),
            this
        );
    }
    removeFromParent() {
        const e = this.parent;
        return e !== null && e.remove(this), this;
    }
    clear() {
        return this.remove(...this.children);
    }
    attach(e) {
        return (
            this.updateWorldMatrix(!0, !1),
            cu.copy(this.matrixWorld).invert(),
            e.parent !== null &&
                (e.parent.updateWorldMatrix(!0, !1),
                cu.multiply(e.parent.matrixWorld)),
            e.applyMatrix4(cu),
            e.removeFromParent(),
            (e.parent = this),
            this.children.push(e),
            e.updateWorldMatrix(!1, !0),
            e.dispatchEvent($C),
            (wd.child = e),
            this.dispatchEvent(wd),
            (wd.child = null),
            this
        );
    }
    getObjectById(e) {
        return this.getObjectByProperty('id', e);
    }
    getObjectByName(e) {
        return this.getObjectByProperty('name', e);
    }
    getObjectByProperty(e, t) {
        if (this[e] === t) return this;
        for (let n = 0, i = this.children.length; n < i; n++) {
            const o = this.children[n].getObjectByProperty(e, t);
            if (o !== void 0) return o;
        }
    }
    getObjectsByProperty(e, t, n = []) {
        this[e] === t && n.push(this);
        const i = this.children;
        for (let s = 0, o = i.length; s < o; s++)
            i[s].getObjectsByProperty(e, t, n);
        return n;
    }
    getWorldPosition(e) {
        return (
            this.updateWorldMatrix(!0, !1),
            e.setFromMatrixPosition(this.matrixWorld)
        );
    }
    getWorldQuaternion(e) {
        return (
            this.updateWorldMatrix(!0, !1),
            this.matrixWorld.decompose(Ym, e, B8),
            e
        );
    }
    getWorldScale(e) {
        return (
            this.updateWorldMatrix(!0, !1),
            this.matrixWorld.decompose(Ym, z8, e),
            e
        );
    }
    getWorldDirection(e) {
        this.updateWorldMatrix(!0, !1);
        const t = this.matrixWorld.elements;
        return e.set(t[8], t[9], t[10]).normalize();
    }
    raycast() {}
    traverse(e) {
        e(this);
        const t = this.children;
        for (let n = 0, i = t.length; n < i; n++) t[n].traverse(e);
    }
    traverseVisible(e) {
        if (this.visible === !1) return;
        e(this);
        const t = this.children;
        for (let n = 0, i = t.length; n < i; n++) t[n].traverseVisible(e);
    }
    traverseAncestors(e) {
        const t = this.parent;
        t !== null && (e(t), t.traverseAncestors(e));
    }
    updateMatrix() {
        this.matrix.compose(this.position, this.quaternion, this.scale),
            (this.matrixWorldNeedsUpdate = !0);
    }
    updateMatrixWorld(e) {
        this.matrixAutoUpdate && this.updateMatrix(),
            (this.matrixWorldNeedsUpdate || e) &&
                (this.matrixWorldAutoUpdate === !0 &&
                    (this.parent === null
                        ? this.matrixWorld.copy(this.matrix)
                        : this.matrixWorld.multiplyMatrices(
                              this.parent.matrixWorld,
                              this.matrix
                          )),
                (this.matrixWorldNeedsUpdate = !1),
                (e = !0));
        const t = this.children;
        for (let n = 0, i = t.length; n < i; n++) t[n].updateMatrixWorld(e);
    }
    updateWorldMatrix(e, t) {
        const n = this.parent;
        if (
            (e === !0 && n !== null && n.updateWorldMatrix(!0, !1),
            this.matrixAutoUpdate && this.updateMatrix(),
            this.matrixWorldAutoUpdate === !0 &&
                (this.parent === null
                    ? this.matrixWorld.copy(this.matrix)
                    : this.matrixWorld.multiplyMatrices(
                          this.parent.matrixWorld,
                          this.matrix
                      )),
            t === !0)
        ) {
            const i = this.children;
            for (let s = 0, o = i.length; s < o; s++)
                i[s].updateWorldMatrix(!1, !0);
        }
    }
    toJSON(e) {
        const t = e === void 0 || typeof e == 'string',
            n = {};
        t &&
            ((e = {
                geometries: {},
                materials: {},
                textures: {},
                images: {},
                shapes: {},
                skeletons: {},
                animations: {},
                nodes: {},
            }),
            (n.metadata = {
                version: 4.6,
                type: 'Object',
                generator: 'Object3D.toJSON',
            }));
        const i = {};
        (i.uuid = this.uuid),
            (i.type = this.type),
            this.name !== '' && (i.name = this.name),
            this.castShadow === !0 && (i.castShadow = !0),
            this.receiveShadow === !0 && (i.receiveShadow = !0),
            this.visible === !1 && (i.visible = !1),
            this.frustumCulled === !1 && (i.frustumCulled = !1),
            this.renderOrder !== 0 && (i.renderOrder = this.renderOrder),
            Object.keys(this.userData).length > 0 &&
                (i.userData = this.userData),
            (i.layers = this.layers.mask),
            (i.matrix = this.matrix.toArray()),
            (i.up = this.up.toArray()),
            this.matrixAutoUpdate === !1 && (i.matrixAutoUpdate = !1),
            this.isInstancedMesh &&
                ((i.type = 'InstancedMesh'),
                (i.count = this.count),
                (i.instanceMatrix = this.instanceMatrix.toJSON()),
                this.instanceColor !== null &&
                    (i.instanceColor = this.instanceColor.toJSON())),
            this.isBatchedMesh &&
                ((i.type = 'BatchedMesh'),
                (i.perObjectFrustumCulled = this.perObjectFrustumCulled),
                (i.sortObjects = this.sortObjects),
                (i.drawRanges = this._drawRanges),
                (i.reservedRanges = this._reservedRanges),
                (i.visibility = this._visibility),
                (i.active = this._active),
                (i.bounds = this._bounds.map((a) => ({
                    boxInitialized: a.boxInitialized,
                    boxMin: a.box.min.toArray(),
                    boxMax: a.box.max.toArray(),
                    sphereInitialized: a.sphereInitialized,
                    sphereRadius: a.sphere.radius,
                    sphereCenter: a.sphere.center.toArray(),
                }))),
                (i.maxInstanceCount = this._maxInstanceCount),
                (i.maxVertexCount = this._maxVertexCount),
                (i.maxIndexCount = this._maxIndexCount),
                (i.geometryInitialized = this._geometryInitialized),
                (i.geometryCount = this._geometryCount),
                (i.matricesTexture = this._matricesTexture.toJSON(e)),
                this._colorsTexture !== null &&
                    (i.colorsTexture = this._colorsTexture.toJSON(e)),
                this.boundingSphere !== null &&
                    (i.boundingSphere = {
                        center: i.boundingSphere.center.toArray(),
                        radius: i.boundingSphere.radius,
                    }),
                this.boundingBox !== null &&
                    (i.boundingBox = {
                        min: i.boundingBox.min.toArray(),
                        max: i.boundingBox.max.toArray(),
                    }));
        function s(a, l) {
            return a[l.uuid] === void 0 && (a[l.uuid] = l.toJSON(e)), l.uuid;
        }
        if (this.isScene)
            this.background &&
                (this.background.isColor
                    ? (i.background = this.background.toJSON())
                    : this.background.isTexture &&
                      (i.background = this.background.toJSON(e).uuid)),
                this.environment &&
                    this.environment.isTexture &&
                    this.environment.isRenderTargetTexture !== !0 &&
                    (i.environment = this.environment.toJSON(e).uuid);
        else if (this.isMesh || this.isLine || this.isPoints) {
            i.geometry = s(e.geometries, this.geometry);
            const a = this.geometry.parameters;
            if (a !== void 0 && a.shapes !== void 0) {
                const l = a.shapes;
                if (Array.isArray(l))
                    for (let u = 0, f = l.length; u < f; u++) {
                        const d = l[u];
                        s(e.shapes, d);
                    }
                else s(e.shapes, l);
            }
        }
        if (
            (this.isSkinnedMesh &&
                ((i.bindMode = this.bindMode),
                (i.bindMatrix = this.bindMatrix.toArray()),
                this.skeleton !== void 0 &&
                    (s(e.skeletons, this.skeleton),
                    (i.skeleton = this.skeleton.uuid))),
            this.material !== void 0)
        )
            if (Array.isArray(this.material)) {
                const a = [];
                for (let l = 0, u = this.material.length; l < u; l++)
                    a.push(s(e.materials, this.material[l]));
                i.material = a;
            } else i.material = s(e.materials, this.material);
        if (this.children.length > 0) {
            i.children = [];
            for (let a = 0; a < this.children.length; a++)
                i.children.push(this.children[a].toJSON(e).object);
        }
        if (this.animations.length > 0) {
            i.animations = [];
            for (let a = 0; a < this.animations.length; a++) {
                const l = this.animations[a];
                i.animations.push(s(e.animations, l));
            }
        }
        if (t) {
            const a = o(e.geometries),
                l = o(e.materials),
                u = o(e.textures),
                f = o(e.images),
                d = o(e.shapes),
                m = o(e.skeletons),
                v = o(e.animations),
                _ = o(e.nodes);
            a.length > 0 && (n.geometries = a),
                l.length > 0 && (n.materials = l),
                u.length > 0 && (n.textures = u),
                f.length > 0 && (n.images = f),
                d.length > 0 && (n.shapes = d),
                m.length > 0 && (n.skeletons = m),
                v.length > 0 && (n.animations = v),
                _.length > 0 && (n.nodes = _);
        }
        return (n.object = i), n;
        function o(a) {
            const l = [];
            for (const u in a) {
                const f = a[u];
                delete f.metadata, l.push(f);
            }
            return l;
        }
    }
    clone(e) {
        return new this.constructor().copy(this, e);
    }
    copy(e, t = !0) {
        if (
            ((this.name = e.name),
            this.up.copy(e.up),
            this.position.copy(e.position),
            (this.rotation.order = e.rotation.order),
            this.quaternion.copy(e.quaternion),
            this.scale.copy(e.scale),
            this.matrix.copy(e.matrix),
            this.matrixWorld.copy(e.matrixWorld),
            (this.matrixAutoUpdate = e.matrixAutoUpdate),
            (this.matrixWorldAutoUpdate = e.matrixWorldAutoUpdate),
            (this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate),
            (this.layers.mask = e.layers.mask),
            (this.visible = e.visible),
            (this.castShadow = e.castShadow),
            (this.receiveShadow = e.receiveShadow),
            (this.frustumCulled = e.frustumCulled),
            (this.renderOrder = e.renderOrder),
            (this.animations = e.animations.slice()),
            (this.userData = JSON.parse(JSON.stringify(e.userData))),
            t === !0)
        )
            for (let n = 0; n < e.children.length; n++) {
                const i = e.children[n];
                this.add(i.clone());
            }
        return this;
    }
}
In.DEFAULT_UP = new re(0, 1, 0);
In.DEFAULT_MATRIX_AUTO_UPDATE = !0;
In.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = !0;
const Da = new re(),
    fu = new re(),
    PS = new re(),
    hu = new re(),
    Md = new re(),
    Ed = new re(),
    JC = new re(),
    LS = new re(),
    IS = new re(),
    DS = new re();
class Ao {
    constructor(e = new re(), t = new re(), n = new re()) {
        (this.a = e), (this.b = t), (this.c = n);
    }
    static getNormal(e, t, n, i) {
        i.subVectors(n, t), Da.subVectors(e, t), i.cross(Da);
        const s = i.lengthSq();
        return s > 0 ? i.multiplyScalar(1 / Math.sqrt(s)) : i.set(0, 0, 0);
    }
    static getBarycoord(e, t, n, i, s) {
        Da.subVectors(i, t), fu.subVectors(n, t), PS.subVectors(e, t);
        const o = Da.dot(Da),
            a = Da.dot(fu),
            l = Da.dot(PS),
            u = fu.dot(fu),
            f = fu.dot(PS),
            d = o * u - a * a;
        if (d === 0) return s.set(0, 0, 0), null;
        const m = 1 / d,
            v = (u * l - a * f) * m,
            _ = (o * f - a * l) * m;
        return s.set(1 - v - _, _, v);
    }
    static containsPoint(e, t, n, i) {
        return this.getBarycoord(e, t, n, i, hu) === null
            ? !1
            : hu.x >= 0 && hu.y >= 0 && hu.x + hu.y <= 1;
    }
    static getInterpolation(e, t, n, i, s, o, a, l) {
        return this.getBarycoord(e, t, n, i, hu) === null
            ? ((l.x = 0),
              (l.y = 0),
              'z' in l && (l.z = 0),
              'w' in l && (l.w = 0),
              null)
            : (l.setScalar(0),
              l.addScaledVector(s, hu.x),
              l.addScaledVector(o, hu.y),
              l.addScaledVector(a, hu.z),
              l);
    }
    static isFrontFacing(e, t, n, i) {
        return (
            Da.subVectors(n, t), fu.subVectors(e, t), Da.cross(fu).dot(i) < 0
        );
    }
    set(e, t, n) {
        return this.a.copy(e), this.b.copy(t), this.c.copy(n), this;
    }
    setFromPointsAndIndices(e, t, n, i) {
        return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[i]), this;
    }
    setFromAttributeAndIndices(e, t, n, i) {
        return (
            this.a.fromBufferAttribute(e, t),
            this.b.fromBufferAttribute(e, n),
            this.c.fromBufferAttribute(e, i),
            this
        );
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this;
    }
    getArea() {
        return (
            Da.subVectors(this.c, this.b),
            fu.subVectors(this.a, this.b),
            Da.cross(fu).length() * 0.5
        );
    }
    getMidpoint(e) {
        return e
            .addVectors(this.a, this.b)
            .add(this.c)
            .multiplyScalar(1 / 3);
    }
    getNormal(e) {
        return Ao.getNormal(this.a, this.b, this.c, e);
    }
    getPlane(e) {
        return e.setFromCoplanarPoints(this.a, this.b, this.c);
    }
    getBarycoord(e, t) {
        return Ao.getBarycoord(e, this.a, this.b, this.c, t);
    }
    getInterpolation(e, t, n, i, s) {
        return Ao.getInterpolation(e, this.a, this.b, this.c, t, n, i, s);
    }
    containsPoint(e) {
        return Ao.containsPoint(e, this.a, this.b, this.c);
    }
    isFrontFacing(e) {
        return Ao.isFrontFacing(this.a, this.b, this.c, e);
    }
    intersectsBox(e) {
        return e.intersectsTriangle(this);
    }
    closestPointToPoint(e, t) {
        const n = this.a,
            i = this.b,
            s = this.c;
        let o, a;
        Md.subVectors(i, n), Ed.subVectors(s, n), LS.subVectors(e, n);
        const l = Md.dot(LS),
            u = Ed.dot(LS);
        if (l <= 0 && u <= 0) return t.copy(n);
        IS.subVectors(e, i);
        const f = Md.dot(IS),
            d = Ed.dot(IS);
        if (f >= 0 && d <= f) return t.copy(i);
        const m = l * d - f * u;
        if (m <= 0 && l >= 0 && f <= 0)
            return (o = l / (l - f)), t.copy(n).addScaledVector(Md, o);
        DS.subVectors(e, s);
        const v = Md.dot(DS),
            _ = Ed.dot(DS);
        if (_ >= 0 && v <= _) return t.copy(s);
        const S = v * u - l * _;
        if (S <= 0 && u >= 0 && _ <= 0)
            return (a = u / (u - _)), t.copy(n).addScaledVector(Ed, a);
        const w = f * _ - v * d;
        if (w <= 0 && d - f >= 0 && v - _ >= 0)
            return (
                JC.subVectors(s, i),
                (a = (d - f) / (d - f + (v - _))),
                t.copy(i).addScaledVector(JC, a)
            );
        const x = 1 / (w + S + m);
        return (
            (o = S * x),
            (a = m * x),
            t.copy(n).addScaledVector(Md, o).addScaledVector(Ed, a)
        );
    }
    equals(e) {
        return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c);
    }
}
const vO = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074,
    },
    lc = { h: 0, s: 0, l: 0 },
    hy = { h: 0, s: 0, l: 0 };
function OS(r, e, t) {
    return (
        t < 0 && (t += 1),
        t > 1 && (t -= 1),
        t < 1 / 6
            ? r + (e - r) * 6 * t
            : t < 1 / 2
              ? e
              : t < 2 / 3
                ? r + (e - r) * 6 * (2 / 3 - t)
                : r
    );
}
class Tt {
    constructor(e, t, n) {
        return (
            (this.isColor = !0),
            (this.r = 1),
            (this.g = 1),
            (this.b = 1),
            this.set(e, t, n)
        );
    }
    set(e, t, n) {
        if (t === void 0 && n === void 0) {
            const i = e;
            i && i.isColor
                ? this.copy(i)
                : typeof i == 'number'
                  ? this.setHex(i)
                  : typeof i == 'string' && this.setStyle(i);
        } else this.setRGB(e, t, n);
        return this;
    }
    setScalar(e) {
        return (this.r = e), (this.g = e), (this.b = e), this;
    }
    setHex(e, t = Mo) {
        return (
            (e = Math.floor(e)),
            (this.r = ((e >> 16) & 255) / 255),
            (this.g = ((e >> 8) & 255) / 255),
            (this.b = (e & 255) / 255),
            zn.toWorkingColorSpace(this, t),
            this
        );
    }
    setRGB(e, t, n, i = zn.workingColorSpace) {
        return (
            (this.r = e),
            (this.g = t),
            (this.b = n),
            zn.toWorkingColorSpace(this, i),
            this
        );
    }
    setHSL(e, t, n, i = zn.workingColorSpace) {
        if (((e = TT(e, 1)), (t = Vi(t, 0, 1)), (n = Vi(n, 0, 1)), t === 0))
            this.r = this.g = this.b = n;
        else {
            const s = n <= 0.5 ? n * (1 + t) : n + t - n * t,
                o = 2 * n - s;
            (this.r = OS(o, s, e + 1 / 3)),
                (this.g = OS(o, s, e)),
                (this.b = OS(o, s, e - 1 / 3));
        }
        return zn.toWorkingColorSpace(this, i), this;
    }
    setStyle(e, t = Mo) {
        function n(s) {
            s !== void 0 &&
                parseFloat(s) < 1 &&
                console.warn(
                    'THREE.Color: Alpha component of ' + e + ' will be ignored.'
                );
        }
        let i;
        if ((i = /^(\w+)\(([^\)]*)\)/.exec(e))) {
            let s;
            const o = i[1],
                a = i[2];
            switch (o) {
                case 'rgb':
                case 'rgba':
                    if (
                        (s =
                            /^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                                a
                            ))
                    )
                        return (
                            n(s[4]),
                            this.setRGB(
                                Math.min(255, parseInt(s[1], 10)) / 255,
                                Math.min(255, parseInt(s[2], 10)) / 255,
                                Math.min(255, parseInt(s[3], 10)) / 255,
                                t
                            )
                        );
                    if (
                        (s =
                            /^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                                a
                            ))
                    )
                        return (
                            n(s[4]),
                            this.setRGB(
                                Math.min(100, parseInt(s[1], 10)) / 100,
                                Math.min(100, parseInt(s[2], 10)) / 100,
                                Math.min(100, parseInt(s[3], 10)) / 100,
                                t
                            )
                        );
                    break;
                case 'hsl':
                case 'hsla':
                    if (
                        (s =
                            /^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(
                                a
                            ))
                    )
                        return (
                            n(s[4]),
                            this.setHSL(
                                parseFloat(s[1]) / 360,
                                parseFloat(s[2]) / 100,
                                parseFloat(s[3]) / 100,
                                t
                            )
                        );
                    break;
                default:
                    console.warn('THREE.Color: Unknown color model ' + e);
            }
        } else if ((i = /^\#([A-Fa-f\d]+)$/.exec(e))) {
            const s = i[1],
                o = s.length;
            if (o === 3)
                return this.setRGB(
                    parseInt(s.charAt(0), 16) / 15,
                    parseInt(s.charAt(1), 16) / 15,
                    parseInt(s.charAt(2), 16) / 15,
                    t
                );
            if (o === 6) return this.setHex(parseInt(s, 16), t);
            console.warn('THREE.Color: Invalid hex color ' + e);
        } else if (e && e.length > 0) return this.setColorName(e, t);
        return this;
    }
    setColorName(e, t = Mo) {
        const n = vO[e.toLowerCase()];
        return (
            n !== void 0
                ? this.setHex(n, t)
                : console.warn('THREE.Color: Unknown color ' + e),
            this
        );
    }
    clone() {
        return new this.constructor(this.r, this.g, this.b);
    }
    copy(e) {
        return (this.r = e.r), (this.g = e.g), (this.b = e.b), this;
    }
    copySRGBToLinear(e) {
        return (this.r = gp(e.r)), (this.g = gp(e.g)), (this.b = gp(e.b)), this;
    }
    copyLinearToSRGB(e) {
        return (this.r = SS(e.r)), (this.g = SS(e.g)), (this.b = SS(e.b)), this;
    }
    convertSRGBToLinear() {
        return this.copySRGBToLinear(this), this;
    }
    convertLinearToSRGB() {
        return this.copyLinearToSRGB(this), this;
    }
    getHex(e = Mo) {
        return (
            zn.fromWorkingColorSpace(os.copy(this), e),
            Math.round(Vi(os.r * 255, 0, 255)) * 65536 +
                Math.round(Vi(os.g * 255, 0, 255)) * 256 +
                Math.round(Vi(os.b * 255, 0, 255))
        );
    }
    getHexString(e = Mo) {
        return ('000000' + this.getHex(e).toString(16)).slice(-6);
    }
    getHSL(e, t = zn.workingColorSpace) {
        zn.fromWorkingColorSpace(os.copy(this), t);
        const n = os.r,
            i = os.g,
            s = os.b,
            o = Math.max(n, i, s),
            a = Math.min(n, i, s);
        let l, u;
        const f = (a + o) / 2;
        if (a === o) (l = 0), (u = 0);
        else {
            const d = o - a;
            switch (((u = f <= 0.5 ? d / (o + a) : d / (2 - o - a)), o)) {
                case n:
                    l = (i - s) / d + (i < s ? 6 : 0);
                    break;
                case i:
                    l = (s - n) / d + 2;
                    break;
                case s:
                    l = (n - i) / d + 4;
                    break;
            }
            l /= 6;
        }
        return (e.h = l), (e.s = u), (e.l = f), e;
    }
    getRGB(e, t = zn.workingColorSpace) {
        return (
            zn.fromWorkingColorSpace(os.copy(this), t),
            (e.r = os.r),
            (e.g = os.g),
            (e.b = os.b),
            e
        );
    }
    getStyle(e = Mo) {
        zn.fromWorkingColorSpace(os.copy(this), e);
        const t = os.r,
            n = os.g,
            i = os.b;
        return e !== Mo
            ? `color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`
            : `rgb(${Math.round(t * 255)},${Math.round(n * 255)},${Math.round(i * 255)})`;
    }
    offsetHSL(e, t, n) {
        return this.getHSL(lc), this.setHSL(lc.h + e, lc.s + t, lc.l + n);
    }
    add(e) {
        return (this.r += e.r), (this.g += e.g), (this.b += e.b), this;
    }
    addColors(e, t) {
        return (
            (this.r = e.r + t.r),
            (this.g = e.g + t.g),
            (this.b = e.b + t.b),
            this
        );
    }
    addScalar(e) {
        return (this.r += e), (this.g += e), (this.b += e), this;
    }
    sub(e) {
        return (
            (this.r = Math.max(0, this.r - e.r)),
            (this.g = Math.max(0, this.g - e.g)),
            (this.b = Math.max(0, this.b - e.b)),
            this
        );
    }
    multiply(e) {
        return (this.r *= e.r), (this.g *= e.g), (this.b *= e.b), this;
    }
    multiplyScalar(e) {
        return (this.r *= e), (this.g *= e), (this.b *= e), this;
    }
    lerp(e, t) {
        return (
            (this.r += (e.r - this.r) * t),
            (this.g += (e.g - this.g) * t),
            (this.b += (e.b - this.b) * t),
            this
        );
    }
    lerpColors(e, t, n) {
        return (
            (this.r = e.r + (t.r - e.r) * n),
            (this.g = e.g + (t.g - e.g) * n),
            (this.b = e.b + (t.b - e.b) * n),
            this
        );
    }
    lerpHSL(e, t) {
        this.getHSL(lc), e.getHSL(hy);
        const n = Hg(lc.h, hy.h, t),
            i = Hg(lc.s, hy.s, t),
            s = Hg(lc.l, hy.l, t);
        return this.setHSL(n, i, s), this;
    }
    setFromVector3(e) {
        return (this.r = e.x), (this.g = e.y), (this.b = e.z), this;
    }
    applyMatrix3(e) {
        const t = this.r,
            n = this.g,
            i = this.b,
            s = e.elements;
        return (
            (this.r = s[0] * t + s[3] * n + s[6] * i),
            (this.g = s[1] * t + s[4] * n + s[7] * i),
            (this.b = s[2] * t + s[5] * n + s[8] * i),
            this
        );
    }
    equals(e) {
        return e.r === this.r && e.g === this.g && e.b === this.b;
    }
    fromArray(e, t = 0) {
        return (this.r = e[t]), (this.g = e[t + 1]), (this.b = e[t + 2]), this;
    }
    toArray(e = [], t = 0) {
        return (e[t] = this.r), (e[t + 1] = this.g), (e[t + 2] = this.b), e;
    }
    fromBufferAttribute(e, t) {
        return (
            (this.r = e.getX(t)),
            (this.g = e.getY(t)),
            (this.b = e.getZ(t)),
            this
        );
    }
    toJSON() {
        return this.getHex();
    }
    *[Symbol.iterator]() {
        yield this.r, yield this.g, yield this.b;
    }
}
const os = new Tt();
Tt.NAMES = vO;
let H8 = 0;
class gs extends bu {
    constructor() {
        super(),
            (this.isMaterial = !0),
            Object.defineProperty(this, 'id', { value: H8++ }),
            (this.uuid = Ro()),
            (this.name = ''),
            (this.type = 'Material'),
            (this.blending = lh),
            (this.side = Au),
            (this.vertexColors = !1),
            (this.opacity = 1),
            (this.transparent = !1),
            (this.alphaHash = !1),
            (this.blendSrc = N_),
            (this.blendDst = F_),
            (this.blendEquation = yc),
            (this.blendSrcAlpha = null),
            (this.blendDstAlpha = null),
            (this.blendEquationAlpha = null),
            (this.blendColor = new Tt(0, 0, 0)),
            (this.blendAlpha = 0),
            (this.depthFunc = h0),
            (this.depthTest = !0),
            (this.depthWrite = !0),
            (this.stencilWriteMask = 255),
            (this.stencilFunc = CM),
            (this.stencilRef = 0),
            (this.stencilFuncMask = 255),
            (this.stencilFail = Wf),
            (this.stencilZFail = Wf),
            (this.stencilZPass = Wf),
            (this.stencilWrite = !1),
            (this.clippingPlanes = null),
            (this.clipIntersection = !1),
            (this.clipShadows = !1),
            (this.shadowSide = null),
            (this.colorWrite = !0),
            (this.precision = null),
            (this.polygonOffset = !1),
            (this.polygonOffsetFactor = 0),
            (this.polygonOffsetUnits = 0),
            (this.dithering = !1),
            (this.alphaToCoverage = !1),
            (this.premultipliedAlpha = !1),
            (this.forceSinglePass = !1),
            (this.visible = !0),
            (this.toneMapped = !0),
            (this.userData = {}),
            (this.version = 0),
            (this._alphaTest = 0);
    }
    get alphaTest() {
        return this._alphaTest;
    }
    set alphaTest(e) {
        this._alphaTest > 0 != e > 0 && this.version++, (this._alphaTest = e);
    }
    onBeforeCompile() {}
    customProgramCacheKey() {
        return this.onBeforeCompile.toString();
    }
    setValues(e) {
        if (e !== void 0)
            for (const t in e) {
                const n = e[t];
                if (n === void 0) {
                    console.warn(
                        `THREE.Material: parameter '${t}' has value of undefined.`
                    );
                    continue;
                }
                const i = this[t];
                if (i === void 0) {
                    console.warn(
                        `THREE.Material: '${t}' is not a property of THREE.${this.type}.`
                    );
                    continue;
                }
                i && i.isColor
                    ? i.set(n)
                    : i && i.isVector3 && n && n.isVector3
                      ? i.copy(n)
                      : (this[t] = n);
            }
    }
    toJSON(e) {
        const t = e === void 0 || typeof e == 'string';
        t && (e = { textures: {}, images: {} });
        const n = {
            metadata: {
                version: 4.6,
                type: 'Material',
                generator: 'Material.toJSON',
            },
        };
        (n.uuid = this.uuid),
            (n.type = this.type),
            this.name !== '' && (n.name = this.name),
            this.color && this.color.isColor && (n.color = this.color.getHex()),
            this.roughness !== void 0 && (n.roughness = this.roughness),
            this.metalness !== void 0 && (n.metalness = this.metalness),
            this.sheen !== void 0 && (n.sheen = this.sheen),
            this.sheenColor &&
                this.sheenColor.isColor &&
                (n.sheenColor = this.sheenColor.getHex()),
            this.sheenRoughness !== void 0 &&
                (n.sheenRoughness = this.sheenRoughness),
            this.emissive &&
                this.emissive.isColor &&
                (n.emissive = this.emissive.getHex()),
            this.emissiveIntensity !== void 0 &&
                this.emissiveIntensity !== 1 &&
                (n.emissiveIntensity = this.emissiveIntensity),
            this.specular &&
                this.specular.isColor &&
                (n.specular = this.specular.getHex()),
            this.specularIntensity !== void 0 &&
                (n.specularIntensity = this.specularIntensity),
            this.specularColor &&
                this.specularColor.isColor &&
                (n.specularColor = this.specularColor.getHex()),
            this.shininess !== void 0 && (n.shininess = this.shininess),
            this.clearcoat !== void 0 && (n.clearcoat = this.clearcoat),
            this.clearcoatRoughness !== void 0 &&
                (n.clearcoatRoughness = this.clearcoatRoughness),
            this.clearcoatMap &&
                this.clearcoatMap.isTexture &&
                (n.clearcoatMap = this.clearcoatMap.toJSON(e).uuid),
            this.clearcoatRoughnessMap &&
                this.clearcoatRoughnessMap.isTexture &&
                (n.clearcoatRoughnessMap =
                    this.clearcoatRoughnessMap.toJSON(e).uuid),
            this.clearcoatNormalMap &&
                this.clearcoatNormalMap.isTexture &&
                ((n.clearcoatNormalMap =
                    this.clearcoatNormalMap.toJSON(e).uuid),
                (n.clearcoatNormalScale = this.clearcoatNormalScale.toArray())),
            this.dispersion !== void 0 && (n.dispersion = this.dispersion),
            this.iridescence !== void 0 && (n.iridescence = this.iridescence),
            this.iridescenceIOR !== void 0 &&
                (n.iridescenceIOR = this.iridescenceIOR),
            this.iridescenceThicknessRange !== void 0 &&
                (n.iridescenceThicknessRange = this.iridescenceThicknessRange),
            this.iridescenceMap &&
                this.iridescenceMap.isTexture &&
                (n.iridescenceMap = this.iridescenceMap.toJSON(e).uuid),
            this.iridescenceThicknessMap &&
                this.iridescenceThicknessMap.isTexture &&
                (n.iridescenceThicknessMap =
                    this.iridescenceThicknessMap.toJSON(e).uuid),
            this.anisotropy !== void 0 && (n.anisotropy = this.anisotropy),
            this.anisotropyRotation !== void 0 &&
                (n.anisotropyRotation = this.anisotropyRotation),
            this.anisotropyMap &&
                this.anisotropyMap.isTexture &&
                (n.anisotropyMap = this.anisotropyMap.toJSON(e).uuid),
            this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid),
            this.matcap &&
                this.matcap.isTexture &&
                (n.matcap = this.matcap.toJSON(e).uuid),
            this.alphaMap &&
                this.alphaMap.isTexture &&
                (n.alphaMap = this.alphaMap.toJSON(e).uuid),
            this.lightMap &&
                this.lightMap.isTexture &&
                ((n.lightMap = this.lightMap.toJSON(e).uuid),
                (n.lightMapIntensity = this.lightMapIntensity)),
            this.aoMap &&
                this.aoMap.isTexture &&
                ((n.aoMap = this.aoMap.toJSON(e).uuid),
                (n.aoMapIntensity = this.aoMapIntensity)),
            this.bumpMap &&
                this.bumpMap.isTexture &&
                ((n.bumpMap = this.bumpMap.toJSON(e).uuid),
                (n.bumpScale = this.bumpScale)),
            this.normalMap &&
                this.normalMap.isTexture &&
                ((n.normalMap = this.normalMap.toJSON(e).uuid),
                (n.normalMapType = this.normalMapType),
                (n.normalScale = this.normalScale.toArray())),
            this.displacementMap &&
                this.displacementMap.isTexture &&
                ((n.displacementMap = this.displacementMap.toJSON(e).uuid),
                (n.displacementScale = this.displacementScale),
                (n.displacementBias = this.displacementBias)),
            this.roughnessMap &&
                this.roughnessMap.isTexture &&
                (n.roughnessMap = this.roughnessMap.toJSON(e).uuid),
            this.metalnessMap &&
                this.metalnessMap.isTexture &&
                (n.metalnessMap = this.metalnessMap.toJSON(e).uuid),
            this.emissiveMap &&
                this.emissiveMap.isTexture &&
                (n.emissiveMap = this.emissiveMap.toJSON(e).uuid),
            this.specularMap &&
                this.specularMap.isTexture &&
                (n.specularMap = this.specularMap.toJSON(e).uuid),
            this.specularIntensityMap &&
                this.specularIntensityMap.isTexture &&
                (n.specularIntensityMap =
                    this.specularIntensityMap.toJSON(e).uuid),
            this.specularColorMap &&
                this.specularColorMap.isTexture &&
                (n.specularColorMap = this.specularColorMap.toJSON(e).uuid),
            this.envMap &&
                this.envMap.isTexture &&
                ((n.envMap = this.envMap.toJSON(e).uuid),
                this.combine !== void 0 && (n.combine = this.combine)),
            this.envMapRotation !== void 0 &&
                (n.envMapRotation = this.envMapRotation.toArray()),
            this.envMapIntensity !== void 0 &&
                (n.envMapIntensity = this.envMapIntensity),
            this.reflectivity !== void 0 &&
                (n.reflectivity = this.reflectivity),
            this.refractionRatio !== void 0 &&
                (n.refractionRatio = this.refractionRatio),
            this.gradientMap &&
                this.gradientMap.isTexture &&
                (n.gradientMap = this.gradientMap.toJSON(e).uuid),
            this.transmission !== void 0 &&
                (n.transmission = this.transmission),
            this.transmissionMap &&
                this.transmissionMap.isTexture &&
                (n.transmissionMap = this.transmissionMap.toJSON(e).uuid),
            this.thickness !== void 0 && (n.thickness = this.thickness),
            this.thicknessMap &&
                this.thicknessMap.isTexture &&
                (n.thicknessMap = this.thicknessMap.toJSON(e).uuid),
            this.attenuationDistance !== void 0 &&
                this.attenuationDistance !== 1 / 0 &&
                (n.attenuationDistance = this.attenuationDistance),
            this.attenuationColor !== void 0 &&
                (n.attenuationColor = this.attenuationColor.getHex()),
            this.size !== void 0 && (n.size = this.size),
            this.shadowSide !== null && (n.shadowSide = this.shadowSide),
            this.sizeAttenuation !== void 0 &&
                (n.sizeAttenuation = this.sizeAttenuation),
            this.blending !== lh && (n.blending = this.blending),
            this.side !== Au && (n.side = this.side),
            this.vertexColors === !0 && (n.vertexColors = !0),
            this.opacity < 1 && (n.opacity = this.opacity),
            this.transparent === !0 && (n.transparent = !0),
            this.blendSrc !== N_ && (n.blendSrc = this.blendSrc),
            this.blendDst !== F_ && (n.blendDst = this.blendDst),
            this.blendEquation !== yc && (n.blendEquation = this.blendEquation),
            this.blendSrcAlpha !== null &&
                (n.blendSrcAlpha = this.blendSrcAlpha),
            this.blendDstAlpha !== null &&
                (n.blendDstAlpha = this.blendDstAlpha),
            this.blendEquationAlpha !== null &&
                (n.blendEquationAlpha = this.blendEquationAlpha),
            this.blendColor &&
                this.blendColor.isColor &&
                (n.blendColor = this.blendColor.getHex()),
            this.blendAlpha !== 0 && (n.blendAlpha = this.blendAlpha),
            this.depthFunc !== h0 && (n.depthFunc = this.depthFunc),
            this.depthTest === !1 && (n.depthTest = this.depthTest),
            this.depthWrite === !1 && (n.depthWrite = this.depthWrite),
            this.colorWrite === !1 && (n.colorWrite = this.colorWrite),
            this.stencilWriteMask !== 255 &&
                (n.stencilWriteMask = this.stencilWriteMask),
            this.stencilFunc !== CM && (n.stencilFunc = this.stencilFunc),
            this.stencilRef !== 0 && (n.stencilRef = this.stencilRef),
            this.stencilFuncMask !== 255 &&
                (n.stencilFuncMask = this.stencilFuncMask),
            this.stencilFail !== Wf && (n.stencilFail = this.stencilFail),
            this.stencilZFail !== Wf && (n.stencilZFail = this.stencilZFail),
            this.stencilZPass !== Wf && (n.stencilZPass = this.stencilZPass),
            this.stencilWrite === !0 && (n.stencilWrite = this.stencilWrite),
            this.rotation !== void 0 &&
                this.rotation !== 0 &&
                (n.rotation = this.rotation),
            this.polygonOffset === !0 && (n.polygonOffset = !0),
            this.polygonOffsetFactor !== 0 &&
                (n.polygonOffsetFactor = this.polygonOffsetFactor),
            this.polygonOffsetUnits !== 0 &&
                (n.polygonOffsetUnits = this.polygonOffsetUnits),
            this.linewidth !== void 0 &&
                this.linewidth !== 1 &&
                (n.linewidth = this.linewidth),
            this.dashSize !== void 0 && (n.dashSize = this.dashSize),
            this.gapSize !== void 0 && (n.gapSize = this.gapSize),
            this.scale !== void 0 && (n.scale = this.scale),
            this.dithering === !0 && (n.dithering = !0),
            this.alphaTest > 0 && (n.alphaTest = this.alphaTest),
            this.alphaHash === !0 && (n.alphaHash = !0),
            this.alphaToCoverage === !0 && (n.alphaToCoverage = !0),
            this.premultipliedAlpha === !0 && (n.premultipliedAlpha = !0),
            this.forceSinglePass === !0 && (n.forceSinglePass = !0),
            this.wireframe === !0 && (n.wireframe = !0),
            this.wireframeLinewidth > 1 &&
                (n.wireframeLinewidth = this.wireframeLinewidth),
            this.wireframeLinecap !== 'round' &&
                (n.wireframeLinecap = this.wireframeLinecap),
            this.wireframeLinejoin !== 'round' &&
                (n.wireframeLinejoin = this.wireframeLinejoin),
            this.flatShading === !0 && (n.flatShading = !0),
            this.visible === !1 && (n.visible = !1),
            this.toneMapped === !1 && (n.toneMapped = !1),
            this.fog === !1 && (n.fog = !1),
            Object.keys(this.userData).length > 0 &&
                (n.userData = this.userData);
        function i(s) {
            const o = [];
            for (const a in s) {
                const l = s[a];
                delete l.metadata, o.push(l);
            }
            return o;
        }
        if (t) {
            const s = i(e.textures),
                o = i(e.images);
            s.length > 0 && (n.textures = s), o.length > 0 && (n.images = o);
        }
        return n;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        (this.name = e.name),
            (this.blending = e.blending),
            (this.side = e.side),
            (this.vertexColors = e.vertexColors),
            (this.opacity = e.opacity),
            (this.transparent = e.transparent),
            (this.blendSrc = e.blendSrc),
            (this.blendDst = e.blendDst),
            (this.blendEquation = e.blendEquation),
            (this.blendSrcAlpha = e.blendSrcAlpha),
            (this.blendDstAlpha = e.blendDstAlpha),
            (this.blendEquationAlpha = e.blendEquationAlpha),
            this.blendColor.copy(e.blendColor),
            (this.blendAlpha = e.blendAlpha),
            (this.depthFunc = e.depthFunc),
            (this.depthTest = e.depthTest),
            (this.depthWrite = e.depthWrite),
            (this.stencilWriteMask = e.stencilWriteMask),
            (this.stencilFunc = e.stencilFunc),
            (this.stencilRef = e.stencilRef),
            (this.stencilFuncMask = e.stencilFuncMask),
            (this.stencilFail = e.stencilFail),
            (this.stencilZFail = e.stencilZFail),
            (this.stencilZPass = e.stencilZPass),
            (this.stencilWrite = e.stencilWrite);
        const t = e.clippingPlanes;
        let n = null;
        if (t !== null) {
            const i = t.length;
            n = new Array(i);
            for (let s = 0; s !== i; ++s) n[s] = t[s].clone();
        }
        return (
            (this.clippingPlanes = n),
            (this.clipIntersection = e.clipIntersection),
            (this.clipShadows = e.clipShadows),
            (this.shadowSide = e.shadowSide),
            (this.colorWrite = e.colorWrite),
            (this.precision = e.precision),
            (this.polygonOffset = e.polygonOffset),
            (this.polygonOffsetFactor = e.polygonOffsetFactor),
            (this.polygonOffsetUnits = e.polygonOffsetUnits),
            (this.dithering = e.dithering),
            (this.alphaTest = e.alphaTest),
            (this.alphaHash = e.alphaHash),
            (this.alphaToCoverage = e.alphaToCoverage),
            (this.premultipliedAlpha = e.premultipliedAlpha),
            (this.forceSinglePass = e.forceSinglePass),
            (this.visible = e.visible),
            (this.toneMapped = e.toneMapped),
            (this.userData = JSON.parse(JSON.stringify(e.userData))),
            this
        );
    }
    dispose() {
        this.dispatchEvent({ type: 'dispose' });
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    onBuild() {
        console.warn('Material: onBuild() has been removed.');
    }
    onBeforeRender() {
        console.warn('Material: onBeforeRender() has been removed.');
    }
}
class ja extends gs {
    constructor(e) {
        super(),
            (this.isMeshBasicMaterial = !0),
            (this.type = 'MeshBasicMaterial'),
            (this.color = new Tt(16777215)),
            (this.map = null),
            (this.lightMap = null),
            (this.lightMapIntensity = 1),
            (this.aoMap = null),
            (this.aoMapIntensity = 1),
            (this.specularMap = null),
            (this.alphaMap = null),
            (this.envMap = null),
            (this.envMapRotation = new oo()),
            (this.combine = G0),
            (this.reflectivity = 1),
            (this.refractionRatio = 0.98),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.wireframeLinecap = 'round'),
            (this.wireframeLinejoin = 'round'),
            (this.fog = !0),
            this.setValues(e);
    }
    copy(e) {
        return (
            super.copy(e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.lightMap = e.lightMap),
            (this.lightMapIntensity = e.lightMapIntensity),
            (this.aoMap = e.aoMap),
            (this.aoMapIntensity = e.aoMapIntensity),
            (this.specularMap = e.specularMap),
            (this.alphaMap = e.alphaMap),
            (this.envMap = e.envMap),
            this.envMapRotation.copy(e.envMapRotation),
            (this.combine = e.combine),
            (this.reflectivity = e.reflectivity),
            (this.refractionRatio = e.refractionRatio),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.wireframeLinecap = e.wireframeLinecap),
            (this.wireframeLinejoin = e.wireframeLinejoin),
            (this.fog = e.fog),
            this
        );
    }
}
const yu = G8();
function G8() {
    const r = new ArrayBuffer(4),
        e = new Float32Array(r),
        t = new Uint32Array(r),
        n = new Uint32Array(512),
        i = new Uint32Array(512);
    for (let l = 0; l < 256; ++l) {
        const u = l - 127;
        u < -27
            ? ((n[l] = 0), (n[l | 256] = 32768), (i[l] = 24), (i[l | 256] = 24))
            : u < -14
              ? ((n[l] = 1024 >> (-u - 14)),
                (n[l | 256] = (1024 >> (-u - 14)) | 32768),
                (i[l] = -u - 1),
                (i[l | 256] = -u - 1))
              : u <= 15
                ? ((n[l] = (u + 15) << 10),
                  (n[l | 256] = ((u + 15) << 10) | 32768),
                  (i[l] = 13),
                  (i[l | 256] = 13))
                : u < 128
                  ? ((n[l] = 31744),
                    (n[l | 256] = 64512),
                    (i[l] = 24),
                    (i[l | 256] = 24))
                  : ((n[l] = 31744),
                    (n[l | 256] = 64512),
                    (i[l] = 13),
                    (i[l | 256] = 13));
    }
    const s = new Uint32Array(2048),
        o = new Uint32Array(64),
        a = new Uint32Array(64);
    for (let l = 1; l < 1024; ++l) {
        let u = l << 13,
            f = 0;
        for (; (u & 8388608) === 0; ) (u <<= 1), (f -= 8388608);
        (u &= -8388609), (f += 947912704), (s[l] = u | f);
    }
    for (let l = 1024; l < 2048; ++l) s[l] = 939524096 + ((l - 1024) << 13);
    for (let l = 1; l < 31; ++l) o[l] = l << 23;
    (o[31] = 1199570944), (o[32] = 2147483648);
    for (let l = 33; l < 63; ++l) o[l] = 2147483648 + ((l - 32) << 23);
    o[63] = 3347054592;
    for (let l = 1; l < 64; ++l) l !== 32 && (a[l] = 1024);
    return {
        floatView: e,
        uint32View: t,
        baseTable: n,
        shiftTable: i,
        mantissaTable: s,
        exponentTable: o,
        offsetTable: a,
    };
}
function Js(r) {
    Math.abs(r) > 65504 &&
        console.warn('THREE.DataUtils.toHalfFloat(): Value out of range.'),
        (r = Vi(r, -65504, 65504)),
        (yu.floatView[0] = r);
    const e = yu.uint32View[0],
        t = (e >> 23) & 511;
    return yu.baseTable[t] + ((e & 8388607) >> yu.shiftTable[t]);
}
function Eg(r) {
    const e = r >> 10;
    return (
        (yu.uint32View[0] =
            yu.mantissaTable[yu.offsetTable[e] + (r & 1023)] +
            yu.exponentTable[e]),
        yu.floatView[0]
    );
}
const Qf = { toHalfFloat: Js, fromHalfFloat: Eg },
    fr = new re(),
    dy = new tt();
class qn {
    constructor(e, t, n = !1) {
        if (Array.isArray(e))
            throw new TypeError(
                'THREE.BufferAttribute: array should be a Typed Array.'
            );
        (this.isBufferAttribute = !0),
            (this.name = ''),
            (this.array = e),
            (this.itemSize = t),
            (this.count = e !== void 0 ? e.length / t : 0),
            (this.normalized = n),
            (this.usage = S0),
            (this._updateRange = { offset: 0, count: -1 }),
            (this.updateRanges = []),
            (this.gpuType = ri),
            (this.version = 0);
    }
    onUploadCallback() {}
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    get updateRange() {
        return (
            bT(
                'THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.'
            ),
            this._updateRange
        );
    }
    setUsage(e) {
        return (this.usage = e), this;
    }
    addUpdateRange(e, t) {
        this.updateRanges.push({ start: e, count: t });
    }
    clearUpdateRanges() {
        this.updateRanges.length = 0;
    }
    copy(e) {
        return (
            (this.name = e.name),
            (this.array = new e.array.constructor(e.array)),
            (this.itemSize = e.itemSize),
            (this.count = e.count),
            (this.normalized = e.normalized),
            (this.usage = e.usage),
            (this.gpuType = e.gpuType),
            this
        );
    }
    copyAt(e, t, n) {
        (e *= this.itemSize), (n *= t.itemSize);
        for (let i = 0, s = this.itemSize; i < s; i++)
            this.array[e + i] = t.array[n + i];
        return this;
    }
    copyArray(e) {
        return this.array.set(e), this;
    }
    applyMatrix3(e) {
        if (this.itemSize === 2)
            for (let t = 0, n = this.count; t < n; t++)
                dy.fromBufferAttribute(this, t),
                    dy.applyMatrix3(e),
                    this.setXY(t, dy.x, dy.y);
        else if (this.itemSize === 3)
            for (let t = 0, n = this.count; t < n; t++)
                fr.fromBufferAttribute(this, t),
                    fr.applyMatrix3(e),
                    this.setXYZ(t, fr.x, fr.y, fr.z);
        return this;
    }
    applyMatrix4(e) {
        for (let t = 0, n = this.count; t < n; t++)
            fr.fromBufferAttribute(this, t),
                fr.applyMatrix4(e),
                this.setXYZ(t, fr.x, fr.y, fr.z);
        return this;
    }
    applyNormalMatrix(e) {
        for (let t = 0, n = this.count; t < n; t++)
            fr.fromBufferAttribute(this, t),
                fr.applyNormalMatrix(e),
                this.setXYZ(t, fr.x, fr.y, fr.z);
        return this;
    }
    transformDirection(e) {
        for (let t = 0, n = this.count; t < n; t++)
            fr.fromBufferAttribute(this, t),
                fr.transformDirection(e),
                this.setXYZ(t, fr.x, fr.y, fr.z);
        return this;
    }
    set(e, t = 0) {
        return this.array.set(e, t), this;
    }
    getComponent(e, t) {
        let n = this.array[e * this.itemSize + t];
        return this.normalized && (n = Os(n, this.array)), n;
    }
    setComponent(e, t, n) {
        return (
            this.normalized && (n = vn(n, this.array)),
            (this.array[e * this.itemSize + t] = n),
            this
        );
    }
    getX(e) {
        let t = this.array[e * this.itemSize];
        return this.normalized && (t = Os(t, this.array)), t;
    }
    setX(e, t) {
        return (
            this.normalized && (t = vn(t, this.array)),
            (this.array[e * this.itemSize] = t),
            this
        );
    }
    getY(e) {
        let t = this.array[e * this.itemSize + 1];
        return this.normalized && (t = Os(t, this.array)), t;
    }
    setY(e, t) {
        return (
            this.normalized && (t = vn(t, this.array)),
            (this.array[e * this.itemSize + 1] = t),
            this
        );
    }
    getZ(e) {
        let t = this.array[e * this.itemSize + 2];
        return this.normalized && (t = Os(t, this.array)), t;
    }
    setZ(e, t) {
        return (
            this.normalized && (t = vn(t, this.array)),
            (this.array[e * this.itemSize + 2] = t),
            this
        );
    }
    getW(e) {
        let t = this.array[e * this.itemSize + 3];
        return this.normalized && (t = Os(t, this.array)), t;
    }
    setW(e, t) {
        return (
            this.normalized && (t = vn(t, this.array)),
            (this.array[e * this.itemSize + 3] = t),
            this
        );
    }
    setXY(e, t, n) {
        return (
            (e *= this.itemSize),
            this.normalized &&
                ((t = vn(t, this.array)), (n = vn(n, this.array))),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            this
        );
    }
    setXYZ(e, t, n, i) {
        return (
            (e *= this.itemSize),
            this.normalized &&
                ((t = vn(t, this.array)),
                (n = vn(n, this.array)),
                (i = vn(i, this.array))),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            (this.array[e + 2] = i),
            this
        );
    }
    setXYZW(e, t, n, i, s) {
        return (
            (e *= this.itemSize),
            this.normalized &&
                ((t = vn(t, this.array)),
                (n = vn(n, this.array)),
                (i = vn(i, this.array)),
                (s = vn(s, this.array))),
            (this.array[e + 0] = t),
            (this.array[e + 1] = n),
            (this.array[e + 2] = i),
            (this.array[e + 3] = s),
            this
        );
    }
    onUpload(e) {
        return (this.onUploadCallback = e), this;
    }
    clone() {
        return new this.constructor(this.array, this.itemSize).copy(this);
    }
    toJSON() {
        const e = {
            itemSize: this.itemSize,
            type: this.array.constructor.name,
            array: Array.from(this.array),
            normalized: this.normalized,
        };
        return (
            this.name !== '' && (e.name = this.name),
            this.usage !== S0 && (e.usage = this.usage),
            e
        );
    }
}
class W8 extends qn {
    constructor(e, t, n) {
        super(new Int8Array(e), t, n);
    }
}
class j8 extends qn {
    constructor(e, t, n) {
        super(new Uint8Array(e), t, n);
    }
}
class X8 extends qn {
    constructor(e, t, n) {
        super(new Uint8ClampedArray(e), t, n);
    }
}
class Y8 extends qn {
    constructor(e, t, n) {
        super(new Int16Array(e), t, n);
    }
}
class RT extends qn {
    constructor(e, t, n) {
        super(new Uint16Array(e), t, n);
    }
}
class q8 extends qn {
    constructor(e, t, n) {
        super(new Int32Array(e), t, n);
    }
}
class PT extends qn {
    constructor(e, t, n) {
        super(new Uint32Array(e), t, n);
    }
}
class K8 extends qn {
    constructor(e, t, n) {
        super(new Uint16Array(e), t, n), (this.isFloat16BufferAttribute = !0);
    }
    getX(e) {
        let t = Eg(this.array[e * this.itemSize]);
        return this.normalized && (t = Os(t, this.array)), t;
    }
    setX(e, t) {
        return (
            this.normalized && (t = vn(t, this.array)),
            (this.array[e * this.itemSize] = Js(t)),
            this
        );
    }
    getY(e) {
        let t = Eg(this.array[e * this.itemSize + 1]);
        return this.normalized && (t = Os(t, this.array)), t;
    }
    setY(e, t) {
        return (
            this.normalized && (t = vn(t, this.array)),
            (this.array[e * this.itemSize + 1] = Js(t)),
            this
        );
    }
    getZ(e) {
        let t = Eg(this.array[e * this.itemSize + 2]);
        return this.normalized && (t = Os(t, this.array)), t;
    }
    setZ(e, t) {
        return (
            this.normalized && (t = vn(t, this.array)),
            (this.array[e * this.itemSize + 2] = Js(t)),
            this
        );
    }
    getW(e) {
        let t = Eg(this.array[e * this.itemSize + 3]);
        return this.normalized && (t = Os(t, this.array)), t;
    }
    setW(e, t) {
        return (
            this.normalized && (t = vn(t, this.array)),
            (this.array[e * this.itemSize + 3] = Js(t)),
            this
        );
    }
    setXY(e, t, n) {
        return (
            (e *= this.itemSize),
            this.normalized &&
                ((t = vn(t, this.array)), (n = vn(n, this.array))),
            (this.array[e + 0] = Js(t)),
            (this.array[e + 1] = Js(n)),
            this
        );
    }
    setXYZ(e, t, n, i) {
        return (
            (e *= this.itemSize),
            this.normalized &&
                ((t = vn(t, this.array)),
                (n = vn(n, this.array)),
                (i = vn(i, this.array))),
            (this.array[e + 0] = Js(t)),
            (this.array[e + 1] = Js(n)),
            (this.array[e + 2] = Js(i)),
            this
        );
    }
    setXYZW(e, t, n, i, s) {
        return (
            (e *= this.itemSize),
            this.normalized &&
                ((t = vn(t, this.array)),
                (n = vn(n, this.array)),
                (i = vn(i, this.array)),
                (s = vn(s, this.array))),
            (this.array[e + 0] = Js(t)),
            (this.array[e + 1] = Js(n)),
            (this.array[e + 2] = Js(i)),
            (this.array[e + 3] = Js(s)),
            this
        );
    }
}
class Ht extends qn {
    constructor(e, t, n) {
        super(new Float32Array(e), t, n);
    }
}
let Z8 = 0;
const Yo = new qt(),
    US = new In(),
    Td = new re(),
    So = new Ar(),
    qm = new Ar(),
    kr = new re();
class xn extends bu {
    constructor() {
        super(),
            (this.isBufferGeometry = !0),
            Object.defineProperty(this, 'id', { value: Z8++ }),
            (this.uuid = Ro()),
            (this.name = ''),
            (this.type = 'BufferGeometry'),
            (this.index = null),
            (this.attributes = {}),
            (this.morphAttributes = {}),
            (this.morphTargetsRelative = !1),
            (this.groups = []),
            (this.boundingBox = null),
            (this.boundingSphere = null),
            (this.drawRange = { start: 0, count: 1 / 0 }),
            (this.userData = {});
    }
    getIndex() {
        return this.index;
    }
    setIndex(e) {
        return (
            Array.isArray(e)
                ? (this.index = new (dO(e) ? PT : RT)(e, 1))
                : (this.index = e),
            this
        );
    }
    getAttribute(e) {
        return this.attributes[e];
    }
    setAttribute(e, t) {
        return (this.attributes[e] = t), this;
    }
    deleteAttribute(e) {
        return delete this.attributes[e], this;
    }
    hasAttribute(e) {
        return this.attributes[e] !== void 0;
    }
    addGroup(e, t, n = 0) {
        this.groups.push({ start: e, count: t, materialIndex: n });
    }
    clearGroups() {
        this.groups = [];
    }
    setDrawRange(e, t) {
        (this.drawRange.start = e), (this.drawRange.count = t);
    }
    applyMatrix4(e) {
        const t = this.attributes.position;
        t !== void 0 && (t.applyMatrix4(e), (t.needsUpdate = !0));
        const n = this.attributes.normal;
        if (n !== void 0) {
            const s = new pn().getNormalMatrix(e);
            n.applyNormalMatrix(s), (n.needsUpdate = !0);
        }
        const i = this.attributes.tangent;
        return (
            i !== void 0 && (i.transformDirection(e), (i.needsUpdate = !0)),
            this.boundingBox !== null && this.computeBoundingBox(),
            this.boundingSphere !== null && this.computeBoundingSphere(),
            this
        );
    }
    applyQuaternion(e) {
        return Yo.makeRotationFromQuaternion(e), this.applyMatrix4(Yo), this;
    }
    rotateX(e) {
        return Yo.makeRotationX(e), this.applyMatrix4(Yo), this;
    }
    rotateY(e) {
        return Yo.makeRotationY(e), this.applyMatrix4(Yo), this;
    }
    rotateZ(e) {
        return Yo.makeRotationZ(e), this.applyMatrix4(Yo), this;
    }
    translate(e, t, n) {
        return Yo.makeTranslation(e, t, n), this.applyMatrix4(Yo), this;
    }
    scale(e, t, n) {
        return Yo.makeScale(e, t, n), this.applyMatrix4(Yo), this;
    }
    lookAt(e) {
        return (
            US.lookAt(e), US.updateMatrix(), this.applyMatrix4(US.matrix), this
        );
    }
    center() {
        return (
            this.computeBoundingBox(),
            this.boundingBox.getCenter(Td).negate(),
            this.translate(Td.x, Td.y, Td.z),
            this
        );
    }
    setFromPoints(e) {
        const t = [];
        for (let n = 0, i = e.length; n < i; n++) {
            const s = e[n];
            t.push(s.x, s.y, s.z || 0);
        }
        return this.setAttribute('position', new Ht(t, 3)), this;
    }
    computeBoundingBox() {
        this.boundingBox === null && (this.boundingBox = new Ar());
        const e = this.attributes.position,
            t = this.morphAttributes.position;
        if (e && e.isGLBufferAttribute) {
            console.error(
                'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.',
                this
            ),
                this.boundingBox.set(
                    new re(-1 / 0, -1 / 0, -1 / 0),
                    new re(1 / 0, 1 / 0, 1 / 0)
                );
            return;
        }
        if (e !== void 0) {
            if ((this.boundingBox.setFromBufferAttribute(e), t))
                for (let n = 0, i = t.length; n < i; n++) {
                    const s = t[n];
                    So.setFromBufferAttribute(s),
                        this.morphTargetsRelative
                            ? (kr.addVectors(this.boundingBox.min, So.min),
                              this.boundingBox.expandByPoint(kr),
                              kr.addVectors(this.boundingBox.max, So.max),
                              this.boundingBox.expandByPoint(kr))
                            : (this.boundingBox.expandByPoint(So.min),
                              this.boundingBox.expandByPoint(So.max));
                }
        } else this.boundingBox.makeEmpty();
        (isNaN(this.boundingBox.min.x) ||
            isNaN(this.boundingBox.min.y) ||
            isNaN(this.boundingBox.min.z)) &&
            console.error(
                'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',
                this
            );
    }
    computeBoundingSphere() {
        this.boundingSphere === null && (this.boundingSphere = new Fr());
        const e = this.attributes.position,
            t = this.morphAttributes.position;
        if (e && e.isGLBufferAttribute) {
            console.error(
                'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.',
                this
            ),
                this.boundingSphere.set(new re(), 1 / 0);
            return;
        }
        if (e) {
            const n = this.boundingSphere.center;
            if ((So.setFromBufferAttribute(e), t))
                for (let s = 0, o = t.length; s < o; s++) {
                    const a = t[s];
                    qm.setFromBufferAttribute(a),
                        this.morphTargetsRelative
                            ? (kr.addVectors(So.min, qm.min),
                              So.expandByPoint(kr),
                              kr.addVectors(So.max, qm.max),
                              So.expandByPoint(kr))
                            : (So.expandByPoint(qm.min),
                              So.expandByPoint(qm.max));
                }
            So.getCenter(n);
            let i = 0;
            for (let s = 0, o = e.count; s < o; s++)
                kr.fromBufferAttribute(e, s),
                    (i = Math.max(i, n.distanceToSquared(kr)));
            if (t)
                for (let s = 0, o = t.length; s < o; s++) {
                    const a = t[s],
                        l = this.morphTargetsRelative;
                    for (let u = 0, f = a.count; u < f; u++)
                        kr.fromBufferAttribute(a, u),
                            l && (Td.fromBufferAttribute(e, u), kr.add(Td)),
                            (i = Math.max(i, n.distanceToSquared(kr)));
                }
            (this.boundingSphere.radius = Math.sqrt(i)),
                isNaN(this.boundingSphere.radius) &&
                    console.error(
                        'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',
                        this
                    );
        }
    }
    computeTangents() {
        const e = this.index,
            t = this.attributes;
        if (
            e === null ||
            t.position === void 0 ||
            t.normal === void 0 ||
            t.uv === void 0
        ) {
            console.error(
                'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)'
            );
            return;
        }
        const n = t.position,
            i = t.normal,
            s = t.uv;
        this.hasAttribute('tangent') === !1 &&
            this.setAttribute(
                'tangent',
                new qn(new Float32Array(4 * n.count), 4)
            );
        const o = this.getAttribute('tangent'),
            a = [],
            l = [];
        for (let O = 0; O < n.count; O++) (a[O] = new re()), (l[O] = new re());
        const u = new re(),
            f = new re(),
            d = new re(),
            m = new tt(),
            v = new tt(),
            _ = new tt(),
            S = new re(),
            w = new re();
        function x(O, I, U) {
            u.fromBufferAttribute(n, O),
                f.fromBufferAttribute(n, I),
                d.fromBufferAttribute(n, U),
                m.fromBufferAttribute(s, O),
                v.fromBufferAttribute(s, I),
                _.fromBufferAttribute(s, U),
                f.sub(u),
                d.sub(u),
                v.sub(m),
                _.sub(m);
            const H = 1 / (v.x * _.y - _.x * v.y);
            isFinite(H) &&
                (S.copy(f)
                    .multiplyScalar(_.y)
                    .addScaledVector(d, -v.y)
                    .multiplyScalar(H),
                w
                    .copy(d)
                    .multiplyScalar(v.x)
                    .addScaledVector(f, -_.x)
                    .multiplyScalar(H),
                a[O].add(S),
                a[I].add(S),
                a[U].add(S),
                l[O].add(w),
                l[I].add(w),
                l[U].add(w));
        }
        let A = this.groups;
        A.length === 0 && (A = [{ start: 0, count: e.count }]);
        for (let O = 0, I = A.length; O < I; ++O) {
            const U = A[O],
                H = U.start,
                W = U.count;
            for (let q = H, K = H + W; q < K; q += 3)
                x(e.getX(q + 0), e.getX(q + 1), e.getX(q + 2));
        }
        const T = new re(),
            b = new re(),
            P = new re(),
            L = new re();
        function D(O) {
            P.fromBufferAttribute(i, O), L.copy(P);
            const I = a[O];
            T.copy(I),
                T.sub(P.multiplyScalar(P.dot(I))).normalize(),
                b.crossVectors(L, I);
            const H = b.dot(l[O]) < 0 ? -1 : 1;
            o.setXYZW(O, T.x, T.y, T.z, H);
        }
        for (let O = 0, I = A.length; O < I; ++O) {
            const U = A[O],
                H = U.start,
                W = U.count;
            for (let q = H, K = H + W; q < K; q += 3)
                D(e.getX(q + 0)), D(e.getX(q + 1)), D(e.getX(q + 2));
        }
    }
    computeVertexNormals() {
        const e = this.index,
            t = this.getAttribute('position');
        if (t !== void 0) {
            let n = this.getAttribute('normal');
            if (n === void 0)
                (n = new qn(new Float32Array(t.count * 3), 3)),
                    this.setAttribute('normal', n);
            else for (let m = 0, v = n.count; m < v; m++) n.setXYZ(m, 0, 0, 0);
            const i = new re(),
                s = new re(),
                o = new re(),
                a = new re(),
                l = new re(),
                u = new re(),
                f = new re(),
                d = new re();
            if (e)
                for (let m = 0, v = e.count; m < v; m += 3) {
                    const _ = e.getX(m + 0),
                        S = e.getX(m + 1),
                        w = e.getX(m + 2);
                    i.fromBufferAttribute(t, _),
                        s.fromBufferAttribute(t, S),
                        o.fromBufferAttribute(t, w),
                        f.subVectors(o, s),
                        d.subVectors(i, s),
                        f.cross(d),
                        a.fromBufferAttribute(n, _),
                        l.fromBufferAttribute(n, S),
                        u.fromBufferAttribute(n, w),
                        a.add(f),
                        l.add(f),
                        u.add(f),
                        n.setXYZ(_, a.x, a.y, a.z),
                        n.setXYZ(S, l.x, l.y, l.z),
                        n.setXYZ(w, u.x, u.y, u.z);
                }
            else
                for (let m = 0, v = t.count; m < v; m += 3)
                    i.fromBufferAttribute(t, m + 0),
                        s.fromBufferAttribute(t, m + 1),
                        o.fromBufferAttribute(t, m + 2),
                        f.subVectors(o, s),
                        d.subVectors(i, s),
                        f.cross(d),
                        n.setXYZ(m + 0, f.x, f.y, f.z),
                        n.setXYZ(m + 1, f.x, f.y, f.z),
                        n.setXYZ(m + 2, f.x, f.y, f.z);
            this.normalizeNormals(), (n.needsUpdate = !0);
        }
    }
    normalizeNormals() {
        const e = this.attributes.normal;
        for (let t = 0, n = e.count; t < n; t++)
            kr.fromBufferAttribute(e, t),
                kr.normalize(),
                e.setXYZ(t, kr.x, kr.y, kr.z);
    }
    toNonIndexed() {
        function e(a, l) {
            const u = a.array,
                f = a.itemSize,
                d = a.normalized,
                m = new u.constructor(l.length * f);
            let v = 0,
                _ = 0;
            for (let S = 0, w = l.length; S < w; S++) {
                a.isInterleavedBufferAttribute
                    ? (v = l[S] * a.data.stride + a.offset)
                    : (v = l[S] * f);
                for (let x = 0; x < f; x++) m[_++] = u[v++];
            }
            return new qn(m, f, d);
        }
        if (this.index === null)
            return (
                console.warn(
                    'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.'
                ),
                this
            );
        const t = new xn(),
            n = this.index.array,
            i = this.attributes;
        for (const a in i) {
            const l = i[a],
                u = e(l, n);
            t.setAttribute(a, u);
        }
        const s = this.morphAttributes;
        for (const a in s) {
            const l = [],
                u = s[a];
            for (let f = 0, d = u.length; f < d; f++) {
                const m = u[f],
                    v = e(m, n);
                l.push(v);
            }
            t.morphAttributes[a] = l;
        }
        t.morphTargetsRelative = this.morphTargetsRelative;
        const o = this.groups;
        for (let a = 0, l = o.length; a < l; a++) {
            const u = o[a];
            t.addGroup(u.start, u.count, u.materialIndex);
        }
        return t;
    }
    toJSON() {
        const e = {
            metadata: {
                version: 4.6,
                type: 'BufferGeometry',
                generator: 'BufferGeometry.toJSON',
            },
        };
        if (
            ((e.uuid = this.uuid),
            (e.type = this.type),
            this.name !== '' && (e.name = this.name),
            Object.keys(this.userData).length > 0 &&
                (e.userData = this.userData),
            this.parameters !== void 0)
        ) {
            const l = this.parameters;
            for (const u in l) l[u] !== void 0 && (e[u] = l[u]);
            return e;
        }
        e.data = { attributes: {} };
        const t = this.index;
        t !== null &&
            (e.data.index = {
                type: t.array.constructor.name,
                array: Array.prototype.slice.call(t.array),
            });
        const n = this.attributes;
        for (const l in n) {
            const u = n[l];
            e.data.attributes[l] = u.toJSON(e.data);
        }
        const i = {};
        let s = !1;
        for (const l in this.morphAttributes) {
            const u = this.morphAttributes[l],
                f = [];
            for (let d = 0, m = u.length; d < m; d++) {
                const v = u[d];
                f.push(v.toJSON(e.data));
            }
            f.length > 0 && ((i[l] = f), (s = !0));
        }
        s &&
            ((e.data.morphAttributes = i),
            (e.data.morphTargetsRelative = this.morphTargetsRelative));
        const o = this.groups;
        o.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(o)));
        const a = this.boundingSphere;
        return (
            a !== null &&
                (e.data.boundingSphere = {
                    center: a.center.toArray(),
                    radius: a.radius,
                }),
            e
        );
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        (this.index = null),
            (this.attributes = {}),
            (this.morphAttributes = {}),
            (this.groups = []),
            (this.boundingBox = null),
            (this.boundingSphere = null);
        const t = {};
        this.name = e.name;
        const n = e.index;
        n !== null && this.setIndex(n.clone(t));
        const i = e.attributes;
        for (const u in i) {
            const f = i[u];
            this.setAttribute(u, f.clone(t));
        }
        const s = e.morphAttributes;
        for (const u in s) {
            const f = [],
                d = s[u];
            for (let m = 0, v = d.length; m < v; m++) f.push(d[m].clone(t));
            this.morphAttributes[u] = f;
        }
        this.morphTargetsRelative = e.morphTargetsRelative;
        const o = e.groups;
        for (let u = 0, f = o.length; u < f; u++) {
            const d = o[u];
            this.addGroup(d.start, d.count, d.materialIndex);
        }
        const a = e.boundingBox;
        a !== null && (this.boundingBox = a.clone());
        const l = e.boundingSphere;
        return (
            l !== null && (this.boundingSphere = l.clone()),
            (this.drawRange.start = e.drawRange.start),
            (this.drawRange.count = e.drawRange.count),
            (this.userData = e.userData),
            this
        );
    }
    dispose() {
        this.dispatchEvent({ type: 'dispose' });
    }
}
const QC = new qt(),
    Cf = new Gp(),
    py = new Fr(),
    e2 = new re(),
    Ad = new re(),
    bd = new re(),
    Cd = new re(),
    kS = new re(),
    my = new re(),
    gy = new tt(),
    vy = new tt(),
    yy = new tt(),
    t2 = new re(),
    n2 = new re(),
    i2 = new re(),
    _y = new re(),
    xy = new re();
class Jn extends In {
    constructor(e = new xn(), t = new ja()) {
        super(),
            (this.isMesh = !0),
            (this.type = 'Mesh'),
            (this.geometry = e),
            (this.material = t),
            this.updateMorphTargets();
    }
    copy(e, t) {
        return (
            super.copy(e, t),
            e.morphTargetInfluences !== void 0 &&
                (this.morphTargetInfluences = e.morphTargetInfluences.slice()),
            e.morphTargetDictionary !== void 0 &&
                (this.morphTargetDictionary = Object.assign(
                    {},
                    e.morphTargetDictionary
                )),
            (this.material = Array.isArray(e.material)
                ? e.material.slice()
                : e.material),
            (this.geometry = e.geometry),
            this
        );
    }
    updateMorphTargets() {
        const t = this.geometry.morphAttributes,
            n = Object.keys(t);
        if (n.length > 0) {
            const i = t[n[0]];
            if (i !== void 0) {
                (this.morphTargetInfluences = []),
                    (this.morphTargetDictionary = {});
                for (let s = 0, o = i.length; s < o; s++) {
                    const a = i[s].name || String(s);
                    this.morphTargetInfluences.push(0),
                        (this.morphTargetDictionary[a] = s);
                }
            }
        }
    }
    getVertexPosition(e, t) {
        const n = this.geometry,
            i = n.attributes.position,
            s = n.morphAttributes.position,
            o = n.morphTargetsRelative;
        t.fromBufferAttribute(i, e);
        const a = this.morphTargetInfluences;
        if (s && a) {
            my.set(0, 0, 0);
            for (let l = 0, u = s.length; l < u; l++) {
                const f = a[l],
                    d = s[l];
                f !== 0 &&
                    (kS.fromBufferAttribute(d, e),
                    o
                        ? my.addScaledVector(kS, f)
                        : my.addScaledVector(kS.sub(t), f));
            }
            t.add(my);
        }
        return t;
    }
    raycast(e, t) {
        const n = this.geometry,
            i = this.material,
            s = this.matrixWorld;
        i !== void 0 &&
            (n.boundingSphere === null && n.computeBoundingSphere(),
            py.copy(n.boundingSphere),
            py.applyMatrix4(s),
            Cf.copy(e.ray).recast(e.near),
            !(
                py.containsPoint(Cf.origin) === !1 &&
                (Cf.intersectSphere(py, e2) === null ||
                    Cf.origin.distanceToSquared(e2) > (e.far - e.near) ** 2)
            ) &&
                (QC.copy(s).invert(),
                Cf.copy(e.ray).applyMatrix4(QC),
                !(
                    n.boundingBox !== null &&
                    Cf.intersectsBox(n.boundingBox) === !1
                ) && this._computeIntersections(e, t, Cf)));
    }
    _computeIntersections(e, t, n) {
        let i;
        const s = this.geometry,
            o = this.material,
            a = s.index,
            l = s.attributes.position,
            u = s.attributes.uv,
            f = s.attributes.uv1,
            d = s.attributes.normal,
            m = s.groups,
            v = s.drawRange;
        if (a !== null)
            if (Array.isArray(o))
                for (let _ = 0, S = m.length; _ < S; _++) {
                    const w = m[_],
                        x = o[w.materialIndex],
                        A = Math.max(w.start, v.start),
                        T = Math.min(
                            a.count,
                            Math.min(w.start + w.count, v.start + v.count)
                        );
                    for (let b = A, P = T; b < P; b += 3) {
                        const L = a.getX(b),
                            D = a.getX(b + 1),
                            O = a.getX(b + 2);
                        (i = Sy(this, x, e, n, u, f, d, L, D, O)),
                            i &&
                                ((i.faceIndex = Math.floor(b / 3)),
                                (i.face.materialIndex = w.materialIndex),
                                t.push(i));
                    }
                }
            else {
                const _ = Math.max(0, v.start),
                    S = Math.min(a.count, v.start + v.count);
                for (let w = _, x = S; w < x; w += 3) {
                    const A = a.getX(w),
                        T = a.getX(w + 1),
                        b = a.getX(w + 2);
                    (i = Sy(this, o, e, n, u, f, d, A, T, b)),
                        i && ((i.faceIndex = Math.floor(w / 3)), t.push(i));
                }
            }
        else if (l !== void 0)
            if (Array.isArray(o))
                for (let _ = 0, S = m.length; _ < S; _++) {
                    const w = m[_],
                        x = o[w.materialIndex],
                        A = Math.max(w.start, v.start),
                        T = Math.min(
                            l.count,
                            Math.min(w.start + w.count, v.start + v.count)
                        );
                    for (let b = A, P = T; b < P; b += 3) {
                        const L = b,
                            D = b + 1,
                            O = b + 2;
                        (i = Sy(this, x, e, n, u, f, d, L, D, O)),
                            i &&
                                ((i.faceIndex = Math.floor(b / 3)),
                                (i.face.materialIndex = w.materialIndex),
                                t.push(i));
                    }
                }
            else {
                const _ = Math.max(0, v.start),
                    S = Math.min(l.count, v.start + v.count);
                for (let w = _, x = S; w < x; w += 3) {
                    const A = w,
                        T = w + 1,
                        b = w + 2;
                    (i = Sy(this, o, e, n, u, f, d, A, T, b)),
                        i && ((i.faceIndex = Math.floor(w / 3)), t.push(i));
                }
            }
    }
}
function $8(r, e, t, n, i, s, o, a) {
    let l;
    if (
        (e.side === ps
            ? (l = n.intersectTriangle(o, s, i, !0, a))
            : (l = n.intersectTriangle(i, s, o, e.side === Au, a)),
        l === null)
    )
        return null;
    xy.copy(a), xy.applyMatrix4(r.matrixWorld);
    const u = t.ray.origin.distanceTo(xy);
    return u < t.near || u > t.far
        ? null
        : { distance: u, point: xy.clone(), object: r };
}
function Sy(r, e, t, n, i, s, o, a, l, u) {
    r.getVertexPosition(a, Ad),
        r.getVertexPosition(l, bd),
        r.getVertexPosition(u, Cd);
    const f = $8(r, e, t, n, Ad, bd, Cd, _y);
    if (f) {
        i &&
            (gy.fromBufferAttribute(i, a),
            vy.fromBufferAttribute(i, l),
            yy.fromBufferAttribute(i, u),
            (f.uv = Ao.getInterpolation(_y, Ad, bd, Cd, gy, vy, yy, new tt()))),
            s &&
                (gy.fromBufferAttribute(s, a),
                vy.fromBufferAttribute(s, l),
                yy.fromBufferAttribute(s, u),
                (f.uv1 = Ao.getInterpolation(
                    _y,
                    Ad,
                    bd,
                    Cd,
                    gy,
                    vy,
                    yy,
                    new tt()
                ))),
            o &&
                (t2.fromBufferAttribute(o, a),
                n2.fromBufferAttribute(o, l),
                i2.fromBufferAttribute(o, u),
                (f.normal = Ao.getInterpolation(
                    _y,
                    Ad,
                    bd,
                    Cd,
                    t2,
                    n2,
                    i2,
                    new re()
                )),
                f.normal.dot(n.direction) > 0 && f.normal.multiplyScalar(-1));
        const d = { a, b: l, c: u, normal: new re(), materialIndex: 0 };
        Ao.getNormal(Ad, bd, Cd, d.normal), (f.face = d);
    }
    return f;
}
class wh extends xn {
    constructor(e = 1, t = 1, n = 1, i = 1, s = 1, o = 1) {
        super(),
            (this.type = 'BoxGeometry'),
            (this.parameters = {
                width: e,
                height: t,
                depth: n,
                widthSegments: i,
                heightSegments: s,
                depthSegments: o,
            });
        const a = this;
        (i = Math.floor(i)), (s = Math.floor(s)), (o = Math.floor(o));
        const l = [],
            u = [],
            f = [],
            d = [];
        let m = 0,
            v = 0;
        _('z', 'y', 'x', -1, -1, n, t, e, o, s, 0),
            _('z', 'y', 'x', 1, -1, n, t, -e, o, s, 1),
            _('x', 'z', 'y', 1, 1, e, n, t, i, o, 2),
            _('x', 'z', 'y', 1, -1, e, n, -t, i, o, 3),
            _('x', 'y', 'z', 1, -1, e, t, n, i, s, 4),
            _('x', 'y', 'z', -1, -1, e, t, -n, i, s, 5),
            this.setIndex(l),
            this.setAttribute('position', new Ht(u, 3)),
            this.setAttribute('normal', new Ht(f, 3)),
            this.setAttribute('uv', new Ht(d, 2));
        function _(S, w, x, A, T, b, P, L, D, O, I) {
            const U = b / D,
                H = P / O,
                W = b / 2,
                q = P / 2,
                K = L / 2,
                le = D + 1,
                ee = O + 1;
            let de = 0,
                Z = 0;
            const se = new re();
            for (let J = 0; J < ee; J++) {
                const F = J * H - q;
                for (let $ = 0; $ < le; $++) {
                    const fe = $ * U - W;
                    (se[S] = fe * A),
                        (se[w] = F * T),
                        (se[x] = K),
                        u.push(se.x, se.y, se.z),
                        (se[S] = 0),
                        (se[w] = 0),
                        (se[x] = L > 0 ? 1 : -1),
                        f.push(se.x, se.y, se.z),
                        d.push($ / D),
                        d.push(1 - J / O),
                        (de += 1);
                }
            }
            for (let J = 0; J < O; J++)
                for (let F = 0; F < D; F++) {
                    const $ = m + F + le * J,
                        fe = m + F + le * (J + 1),
                        ne = m + (F + 1) + le * (J + 1),
                        ae = m + (F + 1) + le * J;
                    l.push($, fe, ae), l.push(fe, ne, ae), (Z += 6);
                }
            a.addGroup(v, Z, I), (v += Z), (m += de);
        }
    }
    copy(e) {
        return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
        );
    }
    static fromJSON(e) {
        return new wh(
            e.width,
            e.height,
            e.depth,
            e.widthSegments,
            e.heightSegments,
            e.depthSegments
        );
    }
}
function Ip(r) {
    const e = {};
    for (const t in r) {
        e[t] = {};
        for (const n in r[t]) {
            const i = r[t][n];
            i &&
            (i.isColor ||
                i.isMatrix3 ||
                i.isMatrix4 ||
                i.isVector2 ||
                i.isVector3 ||
                i.isVector4 ||
                i.isTexture ||
                i.isQuaternion)
                ? i.isRenderTargetTexture
                    ? (console.warn(
                          'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().'
                      ),
                      (e[t][n] = null))
                    : (e[t][n] = i.clone())
                : Array.isArray(i)
                  ? (e[t][n] = i.slice())
                  : (e[t][n] = i);
        }
    }
    return e;
}
function Is(r) {
    const e = {};
    for (let t = 0; t < r.length; t++) {
        const n = Ip(r[t]);
        for (const i in n) e[i] = n[i];
    }
    return e;
}
function J8(r) {
    const e = [];
    for (let t = 0; t < r.length; t++) e.push(r[t].clone());
    return e;
}
function yO(r) {
    const e = r.getRenderTarget();
    return e === null
        ? r.outputColorSpace
        : e.isXRRenderTarget === !0
          ? e.texture.colorSpace
          : zn.workingColorSpace;
}
const Hx = { clone: Ip, merge: Is };
var Q8 = `void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,
    eG = `void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;
class Qi extends gs {
    constructor(e) {
        super(),
            (this.isShaderMaterial = !0),
            (this.type = 'ShaderMaterial'),
            (this.defines = {}),
            (this.uniforms = {}),
            (this.uniformsGroups = []),
            (this.vertexShader = Q8),
            (this.fragmentShader = eG),
            (this.linewidth = 1),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.fog = !1),
            (this.lights = !1),
            (this.clipping = !1),
            (this.forceSinglePass = !0),
            (this.extensions = { clipCullDistance: !1, multiDraw: !1 }),
            (this.defaultAttributeValues = {
                color: [1, 1, 1],
                uv: [0, 0],
                uv1: [0, 0],
            }),
            (this.index0AttributeName = void 0),
            (this.uniformsNeedUpdate = !1),
            (this.glslVersion = null),
            e !== void 0 && this.setValues(e);
    }
    copy(e) {
        return (
            super.copy(e),
            (this.fragmentShader = e.fragmentShader),
            (this.vertexShader = e.vertexShader),
            (this.uniforms = Ip(e.uniforms)),
            (this.uniformsGroups = J8(e.uniformsGroups)),
            (this.defines = Object.assign({}, e.defines)),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.fog = e.fog),
            (this.lights = e.lights),
            (this.clipping = e.clipping),
            (this.extensions = Object.assign({}, e.extensions)),
            (this.glslVersion = e.glslVersion),
            this
        );
    }
    toJSON(e) {
        const t = super.toJSON(e);
        (t.glslVersion = this.glslVersion), (t.uniforms = {});
        for (const i in this.uniforms) {
            const o = this.uniforms[i].value;
            o && o.isTexture
                ? (t.uniforms[i] = { type: 't', value: o.toJSON(e).uuid })
                : o && o.isColor
                  ? (t.uniforms[i] = { type: 'c', value: o.getHex() })
                  : o && o.isVector2
                    ? (t.uniforms[i] = { type: 'v2', value: o.toArray() })
                    : o && o.isVector3
                      ? (t.uniforms[i] = { type: 'v3', value: o.toArray() })
                      : o && o.isVector4
                        ? (t.uniforms[i] = { type: 'v4', value: o.toArray() })
                        : o && o.isMatrix3
                          ? (t.uniforms[i] = { type: 'm3', value: o.toArray() })
                          : o && o.isMatrix4
                            ? (t.uniforms[i] = {
                                  type: 'm4',
                                  value: o.toArray(),
                              })
                            : (t.uniforms[i] = { value: o });
        }
        Object.keys(this.defines).length > 0 && (t.defines = this.defines),
            (t.vertexShader = this.vertexShader),
            (t.fragmentShader = this.fragmentShader),
            (t.lights = this.lights),
            (t.clipping = this.clipping);
        const n = {};
        for (const i in this.extensions)
            this.extensions[i] === !0 && (n[i] = !0);
        return Object.keys(n).length > 0 && (t.extensions = n), t;
    }
}
class Y0 extends In {
    constructor() {
        super(),
            (this.isCamera = !0),
            (this.type = 'Camera'),
            (this.matrixWorldInverse = new qt()),
            (this.projectionMatrix = new qt()),
            (this.projectionMatrixInverse = new qt()),
            (this.coordinateSystem = xl);
    }
    copy(e, t) {
        return (
            super.copy(e, t),
            this.matrixWorldInverse.copy(e.matrixWorldInverse),
            this.projectionMatrix.copy(e.projectionMatrix),
            this.projectionMatrixInverse.copy(e.projectionMatrixInverse),
            (this.coordinateSystem = e.coordinateSystem),
            this
        );
    }
    getWorldDirection(e) {
        return super.getWorldDirection(e).negate();
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e),
            this.matrixWorldInverse.copy(this.matrixWorld).invert();
    }
    updateWorldMatrix(e, t) {
        super.updateWorldMatrix(e, t),
            this.matrixWorldInverse.copy(this.matrixWorld).invert();
    }
    clone() {
        return new this.constructor().copy(this);
    }
}
const uc = new re(),
    r2 = new tt(),
    s2 = new tt();
class Nr extends Y0 {
    constructor(e = 50, t = 1, n = 0.1, i = 2e3) {
        super(),
            (this.isPerspectiveCamera = !0),
            (this.type = 'PerspectiveCamera'),
            (this.fov = e),
            (this.zoom = 1),
            (this.near = n),
            (this.far = i),
            (this.focus = 10),
            (this.aspect = t),
            (this.view = null),
            (this.filmGauge = 35),
            (this.filmOffset = 0),
            this.updateProjectionMatrix();
    }
    copy(e, t) {
        return (
            super.copy(e, t),
            (this.fov = e.fov),
            (this.zoom = e.zoom),
            (this.near = e.near),
            (this.far = e.far),
            (this.focus = e.focus),
            (this.aspect = e.aspect),
            (this.view = e.view === null ? null : Object.assign({}, e.view)),
            (this.filmGauge = e.filmGauge),
            (this.filmOffset = e.filmOffset),
            this
        );
    }
    setFocalLength(e) {
        const t = (0.5 * this.getFilmHeight()) / e;
        (this.fov = Lp * 2 * Math.atan(t)), this.updateProjectionMatrix();
    }
    getFocalLength() {
        const e = Math.tan(ch * 0.5 * this.fov);
        return (0.5 * this.getFilmHeight()) / e;
    }
    getEffectiveFOV() {
        return Lp * 2 * Math.atan(Math.tan(ch * 0.5 * this.fov) / this.zoom);
    }
    getFilmWidth() {
        return this.filmGauge * Math.min(this.aspect, 1);
    }
    getFilmHeight() {
        return this.filmGauge / Math.max(this.aspect, 1);
    }
    getViewBounds(e, t, n) {
        uc.set(-1, -1, 0.5).applyMatrix4(this.projectionMatrixInverse),
            t.set(uc.x, uc.y).multiplyScalar(-e / uc.z),
            uc.set(1, 1, 0.5).applyMatrix4(this.projectionMatrixInverse),
            n.set(uc.x, uc.y).multiplyScalar(-e / uc.z);
    }
    getViewSize(e, t) {
        return this.getViewBounds(e, r2, s2), t.subVectors(s2, r2);
    }
    setViewOffset(e, t, n, i, s, o) {
        (this.aspect = e / t),
            this.view === null &&
                (this.view = {
                    enabled: !0,
                    fullWidth: 1,
                    fullHeight: 1,
                    offsetX: 0,
                    offsetY: 0,
                    width: 1,
                    height: 1,
                }),
            (this.view.enabled = !0),
            (this.view.fullWidth = e),
            (this.view.fullHeight = t),
            (this.view.offsetX = n),
            (this.view.offsetY = i),
            (this.view.width = s),
            (this.view.height = o),
            this.updateProjectionMatrix();
    }
    clearViewOffset() {
        this.view !== null && (this.view.enabled = !1),
            this.updateProjectionMatrix();
    }
    updateProjectionMatrix() {
        const e = this.near;
        let t = (e * Math.tan(ch * 0.5 * this.fov)) / this.zoom,
            n = 2 * t,
            i = this.aspect * n,
            s = -0.5 * i;
        const o = this.view;
        if (this.view !== null && this.view.enabled) {
            const l = o.fullWidth,
                u = o.fullHeight;
            (s += (o.offsetX * i) / l),
                (t -= (o.offsetY * n) / u),
                (i *= o.width / l),
                (n *= o.height / u);
        }
        const a = this.filmOffset;
        a !== 0 && (s += (e * a) / this.getFilmWidth()),
            this.projectionMatrix.makePerspective(
                s,
                s + i,
                t,
                t - n,
                e,
                this.far,
                this.coordinateSystem
            ),
            this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
    }
    toJSON(e) {
        const t = super.toJSON(e);
        return (
            (t.object.fov = this.fov),
            (t.object.zoom = this.zoom),
            (t.object.near = this.near),
            (t.object.far = this.far),
            (t.object.focus = this.focus),
            (t.object.aspect = this.aspect),
            this.view !== null &&
                (t.object.view = Object.assign({}, this.view)),
            (t.object.filmGauge = this.filmGauge),
            (t.object.filmOffset = this.filmOffset),
            t
        );
    }
}
const Rd = -90,
    Pd = 1;
class _O extends In {
    constructor(e, t, n) {
        super(),
            (this.type = 'CubeCamera'),
            (this.renderTarget = n),
            (this.coordinateSystem = null),
            (this.activeMipmapLevel = 0);
        const i = new Nr(Rd, Pd, e, t);
        (i.layers = this.layers), this.add(i);
        const s = new Nr(Rd, Pd, e, t);
        (s.layers = this.layers), this.add(s);
        const o = new Nr(Rd, Pd, e, t);
        (o.layers = this.layers), this.add(o);
        const a = new Nr(Rd, Pd, e, t);
        (a.layers = this.layers), this.add(a);
        const l = new Nr(Rd, Pd, e, t);
        (l.layers = this.layers), this.add(l);
        const u = new Nr(Rd, Pd, e, t);
        (u.layers = this.layers), this.add(u);
    }
    updateCoordinateSystem() {
        const e = this.coordinateSystem,
            t = this.children.concat(),
            [n, i, s, o, a, l] = t;
        for (const u of t) this.remove(u);
        if (e === xl)
            n.up.set(0, 1, 0),
                n.lookAt(1, 0, 0),
                i.up.set(0, 1, 0),
                i.lookAt(-1, 0, 0),
                s.up.set(0, 0, -1),
                s.lookAt(0, 1, 0),
                o.up.set(0, 0, 1),
                o.lookAt(0, -1, 0),
                a.up.set(0, 1, 0),
                a.lookAt(0, 0, 1),
                l.up.set(0, 1, 0),
                l.lookAt(0, 0, -1);
        else if (e === w0)
            n.up.set(0, -1, 0),
                n.lookAt(-1, 0, 0),
                i.up.set(0, -1, 0),
                i.lookAt(1, 0, 0),
                s.up.set(0, 0, 1),
                s.lookAt(0, 1, 0),
                o.up.set(0, 0, -1),
                o.lookAt(0, -1, 0),
                a.up.set(0, -1, 0),
                a.lookAt(0, 0, 1),
                l.up.set(0, -1, 0),
                l.lookAt(0, 0, -1);
        else
            throw new Error(
                'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' +
                    e
            );
        for (const u of t) this.add(u), u.updateMatrixWorld();
    }
    update(e, t) {
        this.parent === null && this.updateMatrixWorld();
        const { renderTarget: n, activeMipmapLevel: i } = this;
        this.coordinateSystem !== e.coordinateSystem &&
            ((this.coordinateSystem = e.coordinateSystem),
            this.updateCoordinateSystem());
        const [s, o, a, l, u, f] = this.children,
            d = e.getRenderTarget(),
            m = e.getActiveCubeFace(),
            v = e.getActiveMipmapLevel(),
            _ = e.xr.enabled;
        e.xr.enabled = !1;
        const S = n.texture.generateMipmaps;
        (n.texture.generateMipmaps = !1),
            e.setRenderTarget(n, 0, i),
            e.render(t, s),
            e.setRenderTarget(n, 1, i),
            e.render(t, o),
            e.setRenderTarget(n, 2, i),
            e.render(t, a),
            e.setRenderTarget(n, 3, i),
            e.render(t, l),
            e.setRenderTarget(n, 4, i),
            e.render(t, u),
            (n.texture.generateMipmaps = S),
            e.setRenderTarget(n, 5, i),
            e.render(t, f),
            e.setRenderTarget(d, m, v),
            (e.xr.enabled = _),
            (n.texture.needsPMREMUpdate = !0);
    }
}
class q0 extends Vn {
    constructor(e, t, n, i, s, o, a, l, u, f) {
        (e = e !== void 0 ? e : []),
            (t = t !== void 0 ? t : Pl),
            super(e, t, n, i, s, o, a, l, u, f),
            (this.isCubeTexture = !0),
            (this.flipY = !1);
    }
    get images() {
        return this.image;
    }
    set images(e) {
        this.image = e;
    }
}
class LT extends Ji {
    constructor(e = 1, t = {}) {
        super(e, e, t), (this.isWebGLCubeRenderTarget = !0);
        const n = { width: e, height: e, depth: 1 },
            i = [n, n, n, n, n, n];
        (this.texture = new q0(
            i,
            t.mapping,
            t.wrapS,
            t.wrapT,
            t.magFilter,
            t.minFilter,
            t.format,
            t.type,
            t.anisotropy,
            t.colorSpace
        )),
            (this.texture.isRenderTargetTexture = !0),
            (this.texture.generateMipmaps =
                t.generateMipmaps !== void 0 ? t.generateMipmaps : !1),
            (this.texture.minFilter =
                t.minFilter !== void 0 ? t.minFilter : Cn);
    }
    fromEquirectangularTexture(e, t) {
        (this.texture.type = t.type),
            (this.texture.colorSpace = t.colorSpace),
            (this.texture.generateMipmaps = t.generateMipmaps),
            (this.texture.minFilter = t.minFilter),
            (this.texture.magFilter = t.magFilter);
        const n = {
                uniforms: { tEquirect: { value: null } },
                vertexShader: `

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,
                fragmentShader: `

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`,
            },
            i = new wh(5, 5, 5),
            s = new Qi({
                name: 'CubemapFromEquirect',
                uniforms: Ip(n.uniforms),
                vertexShader: n.vertexShader,
                fragmentShader: n.fragmentShader,
                side: ps,
                blending: Al,
            });
        s.uniforms.tEquirect.value = t;
        const o = new Jn(i, s),
            a = t.minFilter;
        return (
            t.minFilter === za && (t.minFilter = Cn),
            new _O(1, 10, this).update(e, o),
            (t.minFilter = a),
            o.geometry.dispose(),
            o.material.dispose(),
            this
        );
    }
    clear(e, t, n, i) {
        const s = e.getRenderTarget();
        for (let o = 0; o < 6; o++)
            e.setRenderTarget(this, o), e.clear(t, n, i);
        e.setRenderTarget(s);
    }
}
const NS = new re(),
    tG = new re(),
    nG = new pn();
class gc {
    constructor(e = new re(1, 0, 0), t = 0) {
        (this.isPlane = !0), (this.normal = e), (this.constant = t);
    }
    set(e, t) {
        return this.normal.copy(e), (this.constant = t), this;
    }
    setComponents(e, t, n, i) {
        return this.normal.set(e, t, n), (this.constant = i), this;
    }
    setFromNormalAndCoplanarPoint(e, t) {
        return this.normal.copy(e), (this.constant = -t.dot(this.normal)), this;
    }
    setFromCoplanarPoints(e, t, n) {
        const i = NS.subVectors(n, t).cross(tG.subVectors(e, t)).normalize();
        return this.setFromNormalAndCoplanarPoint(i, e), this;
    }
    copy(e) {
        return this.normal.copy(e.normal), (this.constant = e.constant), this;
    }
    normalize() {
        const e = 1 / this.normal.length();
        return this.normal.multiplyScalar(e), (this.constant *= e), this;
    }
    negate() {
        return (this.constant *= -1), this.normal.negate(), this;
    }
    distanceToPoint(e) {
        return this.normal.dot(e) + this.constant;
    }
    distanceToSphere(e) {
        return this.distanceToPoint(e.center) - e.radius;
    }
    projectPoint(e, t) {
        return t.copy(e).addScaledVector(this.normal, -this.distanceToPoint(e));
    }
    intersectLine(e, t) {
        const n = e.delta(NS),
            i = this.normal.dot(n);
        if (i === 0)
            return this.distanceToPoint(e.start) === 0 ? t.copy(e.start) : null;
        const s = -(e.start.dot(this.normal) + this.constant) / i;
        return s < 0 || s > 1 ? null : t.copy(e.start).addScaledVector(n, s);
    }
    intersectsLine(e) {
        const t = this.distanceToPoint(e.start),
            n = this.distanceToPoint(e.end);
        return (t < 0 && n > 0) || (n < 0 && t > 0);
    }
    intersectsBox(e) {
        return e.intersectsPlane(this);
    }
    intersectsSphere(e) {
        return e.intersectsPlane(this);
    }
    coplanarPoint(e) {
        return e.copy(this.normal).multiplyScalar(-this.constant);
    }
    applyMatrix4(e, t) {
        const n = t || nG.getNormalMatrix(e),
            i = this.coplanarPoint(NS).applyMatrix4(e),
            s = this.normal.applyMatrix3(n).normalize();
        return (this.constant = -i.dot(s)), this;
    }
    translate(e) {
        return (this.constant -= e.dot(this.normal)), this;
    }
    equals(e) {
        return e.normal.equals(this.normal) && e.constant === this.constant;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}
const Rf = new Fr(),
    wy = new re();
class K0 {
    constructor(
        e = new gc(),
        t = new gc(),
        n = new gc(),
        i = new gc(),
        s = new gc(),
        o = new gc()
    ) {
        this.planes = [e, t, n, i, s, o];
    }
    set(e, t, n, i, s, o) {
        const a = this.planes;
        return (
            a[0].copy(e),
            a[1].copy(t),
            a[2].copy(n),
            a[3].copy(i),
            a[4].copy(s),
            a[5].copy(o),
            this
        );
    }
    copy(e) {
        const t = this.planes;
        for (let n = 0; n < 6; n++) t[n].copy(e.planes[n]);
        return this;
    }
    setFromProjectionMatrix(e, t = xl) {
        const n = this.planes,
            i = e.elements,
            s = i[0],
            o = i[1],
            a = i[2],
            l = i[3],
            u = i[4],
            f = i[5],
            d = i[6],
            m = i[7],
            v = i[8],
            _ = i[9],
            S = i[10],
            w = i[11],
            x = i[12],
            A = i[13],
            T = i[14],
            b = i[15];
        if (
            (n[0].setComponents(l - s, m - u, w - v, b - x).normalize(),
            n[1].setComponents(l + s, m + u, w + v, b + x).normalize(),
            n[2].setComponents(l + o, m + f, w + _, b + A).normalize(),
            n[3].setComponents(l - o, m - f, w - _, b - A).normalize(),
            n[4].setComponents(l - a, m - d, w - S, b - T).normalize(),
            t === xl)
        )
            n[5].setComponents(l + a, m + d, w + S, b + T).normalize();
        else if (t === w0) n[5].setComponents(a, d, S, T).normalize();
        else
            throw new Error(
                'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' +
                    t
            );
        return this;
    }
    intersectsObject(e) {
        if (e.boundingSphere !== void 0)
            e.boundingSphere === null && e.computeBoundingSphere(),
                Rf.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);
        else {
            const t = e.geometry;
            t.boundingSphere === null && t.computeBoundingSphere(),
                Rf.copy(t.boundingSphere).applyMatrix4(e.matrixWorld);
        }
        return this.intersectsSphere(Rf);
    }
    intersectsSprite(e) {
        return (
            Rf.center.set(0, 0, 0),
            (Rf.radius = 0.7071067811865476),
            Rf.applyMatrix4(e.matrixWorld),
            this.intersectsSphere(Rf)
        );
    }
    intersectsSphere(e) {
        const t = this.planes,
            n = e.center,
            i = -e.radius;
        for (let s = 0; s < 6; s++) if (t[s].distanceToPoint(n) < i) return !1;
        return !0;
    }
    intersectsBox(e) {
        const t = this.planes;
        for (let n = 0; n < 6; n++) {
            const i = t[n];
            if (
                ((wy.x = i.normal.x > 0 ? e.max.x : e.min.x),
                (wy.y = i.normal.y > 0 ? e.max.y : e.min.y),
                (wy.z = i.normal.z > 0 ? e.max.z : e.min.z),
                i.distanceToPoint(wy) < 0)
            )
                return !1;
        }
        return !0;
    }
    containsPoint(e) {
        const t = this.planes;
        for (let n = 0; n < 6; n++) if (t[n].distanceToPoint(e) < 0) return !1;
        return !0;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}
function xO() {
    let r = null,
        e = !1,
        t = null,
        n = null;
    function i(s, o) {
        t(s, o), (n = r.requestAnimationFrame(i));
    }
    return {
        start: function () {
            e !== !0 &&
                t !== null &&
                ((n = r.requestAnimationFrame(i)), (e = !0));
        },
        stop: function () {
            r.cancelAnimationFrame(n), (e = !1);
        },
        setAnimationLoop: function (s) {
            t = s;
        },
        setContext: function (s) {
            r = s;
        },
    };
}
function iG(r) {
    const e = new WeakMap();
    function t(a, l) {
        const u = a.array,
            f = a.usage,
            d = u.byteLength,
            m = r.createBuffer();
        r.bindBuffer(l, m), r.bufferData(l, u, f), a.onUploadCallback();
        let v;
        if (u instanceof Float32Array) v = r.FLOAT;
        else if (u instanceof Uint16Array)
            a.isFloat16BufferAttribute
                ? (v = r.HALF_FLOAT)
                : (v = r.UNSIGNED_SHORT);
        else if (u instanceof Int16Array) v = r.SHORT;
        else if (u instanceof Uint32Array) v = r.UNSIGNED_INT;
        else if (u instanceof Int32Array) v = r.INT;
        else if (u instanceof Int8Array) v = r.BYTE;
        else if (u instanceof Uint8Array) v = r.UNSIGNED_BYTE;
        else if (u instanceof Uint8ClampedArray) v = r.UNSIGNED_BYTE;
        else
            throw new Error(
                'THREE.WebGLAttributes: Unsupported buffer data format: ' + u
            );
        return {
            buffer: m,
            type: v,
            bytesPerElement: u.BYTES_PER_ELEMENT,
            version: a.version,
            size: d,
        };
    }
    function n(a, l, u) {
        const f = l.array,
            d = l._updateRange,
            m = l.updateRanges;
        if (
            (r.bindBuffer(u, a),
            d.count === -1 && m.length === 0 && r.bufferSubData(u, 0, f),
            m.length !== 0)
        ) {
            for (let v = 0, _ = m.length; v < _; v++) {
                const S = m[v];
                r.bufferSubData(
                    u,
                    S.start * f.BYTES_PER_ELEMENT,
                    f,
                    S.start,
                    S.count
                );
            }
            l.clearUpdateRanges();
        }
        d.count !== -1 &&
            (r.bufferSubData(
                u,
                d.offset * f.BYTES_PER_ELEMENT,
                f,
                d.offset,
                d.count
            ),
            (d.count = -1)),
            l.onUploadCallback();
    }
    function i(a) {
        return a.isInterleavedBufferAttribute && (a = a.data), e.get(a);
    }
    function s(a) {
        a.isInterleavedBufferAttribute && (a = a.data);
        const l = e.get(a);
        l && (r.deleteBuffer(l.buffer), e.delete(a));
    }
    function o(a, l) {
        if (a.isGLBufferAttribute) {
            const f = e.get(a);
            (!f || f.version < a.version) &&
                e.set(a, {
                    buffer: a.buffer,
                    type: a.type,
                    bytesPerElement: a.elementSize,
                    version: a.version,
                });
            return;
        }
        a.isInterleavedBufferAttribute && (a = a.data);
        const u = e.get(a);
        if (u === void 0) e.set(a, t(a, l));
        else if (u.version < a.version) {
            if (u.size !== a.array.byteLength)
                throw new Error(
                    "THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported."
                );
            n(u.buffer, a, l), (u.version = a.version);
        }
    }
    return { get: i, remove: s, update: o };
}
class ra extends xn {
    constructor(e = 1, t = 1, n = 1, i = 1) {
        super(),
            (this.type = 'PlaneGeometry'),
            (this.parameters = {
                width: e,
                height: t,
                widthSegments: n,
                heightSegments: i,
            });
        const s = e / 2,
            o = t / 2,
            a = Math.floor(n),
            l = Math.floor(i),
            u = a + 1,
            f = l + 1,
            d = e / a,
            m = t / l,
            v = [],
            _ = [],
            S = [],
            w = [];
        for (let x = 0; x < f; x++) {
            const A = x * m - o;
            for (let T = 0; T < u; T++) {
                const b = T * d - s;
                _.push(b, -A, 0),
                    S.push(0, 0, 1),
                    w.push(T / a),
                    w.push(1 - x / l);
            }
        }
        for (let x = 0; x < l; x++)
            for (let A = 0; A < a; A++) {
                const T = A + u * x,
                    b = A + u * (x + 1),
                    P = A + 1 + u * (x + 1),
                    L = A + 1 + u * x;
                v.push(T, b, L), v.push(b, P, L);
            }
        this.setIndex(v),
            this.setAttribute('position', new Ht(_, 3)),
            this.setAttribute('normal', new Ht(S, 3)),
            this.setAttribute('uv', new Ht(w, 2));
    }
    copy(e) {
        return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
        );
    }
    static fromJSON(e) {
        return new ra(e.width, e.height, e.widthSegments, e.heightSegments);
    }
}
var rG = `#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,
    sG = `#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,
    oG = `#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,
    aG = `#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,
    lG = `#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,
    uG = `#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,
    cG = `#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,
    fG = `#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,
    hG = `#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,
    dG = `#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,
    pG = `vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,
    mG = `vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,
    gG = `float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,
    vG = `#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,
    yG = `#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,
    _G = `#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,
    xG = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,
    SG = `#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,
    wG = `#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,
    MG = `#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,
    EG = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,
    TG = `#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,
    AG = `#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,
    bG = `#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,
    CG = `#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,
    RG = `vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,
    PG = `#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,
    LG = `#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,
    IG = `#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,
    DG = `#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,
    OG = 'gl_FragColor = linearToOutputTexel( gl_FragColor );',
    UG = `
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,
    kG = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,
    NG = `#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,
    FG = `#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,
    BG = `#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,
    zG = `#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,
    VG = `#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,
    HG = `#ifdef USE_FOG
	varying float vFogDepth;
#endif`,
    GG = `#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,
    WG = `#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,
    jG = `#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,
    XG = `#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,
    YG = `LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,
    qG = `varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,
    KG = `uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,
    ZG = `#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,
    $G = `ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,
    JG = `varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,
    QG = `BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,
    eW = `varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,
    tW = `PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,
    nW = `struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,
    iW = `
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,
    rW = `#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,
    sW = `#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,
    oW = `#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,
    aW = `#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,
    lW = `#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,
    uW = `#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,
    cW = `#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,
    fW = `#ifdef USE_MAP
	uniform sampler2D map;
#endif`,
    hW = `#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,
    dW = `#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,
    pW = `float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,
    mW = `#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,
    gW = `#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,
    vW = `#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,
    yW = `#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,
    _W = `#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,
    xW = `#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,
    SW = `float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,
    wW = `#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,
    MW = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,
    EW = `#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,
    TW = `#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,
    AW = `#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,
    bW = `#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,
    CW = `#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,
    RW = `#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,
    PW = `#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,
    LW = `#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,
    IW = `vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,
    DW = `#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,
    OW = `vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,
    UW = `#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,
    kW = `#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,
    NW = `float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,
    FW = `#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,
    BW = `#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,
    zW = `#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,
    VW = `#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,
    HW = `float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,
    GW = `#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,
    WW = `#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,
    jW = `#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,
    XW = `#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,
    YW = `float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,
    qW = `#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,
    KW = `#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,
    ZW = `#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,
    $W = `#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,
    JW = `#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,
    QW = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,
    e9 = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,
    t9 = `#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,
    n9 = `#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;
const i9 = `varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,
    r9 = `uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
    s9 = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,
    o9 = `#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
    a9 = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,
    l9 = `uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
    u9 = `#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,
    c9 = `#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,
    f9 = `#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,
    h9 = `#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,
    d9 = `varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,
    p9 = `uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,
    m9 = `uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,
    g9 = `uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,
    v9 = `#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,
    y9 = `uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
    _9 = `#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
    x9 = `#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
    S9 = `#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,
    w9 = `#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
    M9 = `#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,
    E9 = `#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,
    T9 = `#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
    A9 = `#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
    b9 = `#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,
    C9 = `#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
    R9 = `#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
    P9 = `#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,
    L9 = `uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,
    I9 = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,
    D9 = `#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,
    O9 = `uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,
    U9 = `uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,
    k9 = `uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,
    gn = {
        alphahash_fragment: rG,
        alphahash_pars_fragment: sG,
        alphamap_fragment: oG,
        alphamap_pars_fragment: aG,
        alphatest_fragment: lG,
        alphatest_pars_fragment: uG,
        aomap_fragment: cG,
        aomap_pars_fragment: fG,
        batching_pars_vertex: hG,
        batching_vertex: dG,
        begin_vertex: pG,
        beginnormal_vertex: mG,
        bsdfs: gG,
        iridescence_fragment: vG,
        bumpmap_pars_fragment: yG,
        clipping_planes_fragment: _G,
        clipping_planes_pars_fragment: xG,
        clipping_planes_pars_vertex: SG,
        clipping_planes_vertex: wG,
        color_fragment: MG,
        color_pars_fragment: EG,
        color_pars_vertex: TG,
        color_vertex: AG,
        common: bG,
        cube_uv_reflection_fragment: CG,
        defaultnormal_vertex: RG,
        displacementmap_pars_vertex: PG,
        displacementmap_vertex: LG,
        emissivemap_fragment: IG,
        emissivemap_pars_fragment: DG,
        colorspace_fragment: OG,
        colorspace_pars_fragment: UG,
        envmap_fragment: kG,
        envmap_common_pars_fragment: NG,
        envmap_pars_fragment: FG,
        envmap_pars_vertex: BG,
        envmap_physical_pars_fragment: ZG,
        envmap_vertex: zG,
        fog_vertex: VG,
        fog_pars_vertex: HG,
        fog_fragment: GG,
        fog_pars_fragment: WG,
        gradientmap_pars_fragment: jG,
        lightmap_pars_fragment: XG,
        lights_lambert_fragment: YG,
        lights_lambert_pars_fragment: qG,
        lights_pars_begin: KG,
        lights_toon_fragment: $G,
        lights_toon_pars_fragment: JG,
        lights_phong_fragment: QG,
        lights_phong_pars_fragment: eW,
        lights_physical_fragment: tW,
        lights_physical_pars_fragment: nW,
        lights_fragment_begin: iW,
        lights_fragment_maps: rW,
        lights_fragment_end: sW,
        logdepthbuf_fragment: oW,
        logdepthbuf_pars_fragment: aW,
        logdepthbuf_pars_vertex: lW,
        logdepthbuf_vertex: uW,
        map_fragment: cW,
        map_pars_fragment: fW,
        map_particle_fragment: hW,
        map_particle_pars_fragment: dW,
        metalnessmap_fragment: pW,
        metalnessmap_pars_fragment: mW,
        morphinstance_vertex: gW,
        morphcolor_vertex: vW,
        morphnormal_vertex: yW,
        morphtarget_pars_vertex: _W,
        morphtarget_vertex: xW,
        normal_fragment_begin: SW,
        normal_fragment_maps: wW,
        normal_pars_fragment: MW,
        normal_pars_vertex: EW,
        normal_vertex: TW,
        normalmap_pars_fragment: AW,
        clearcoat_normal_fragment_begin: bW,
        clearcoat_normal_fragment_maps: CW,
        clearcoat_pars_fragment: RW,
        iridescence_pars_fragment: PW,
        opaque_fragment: LW,
        packing: IW,
        premultiplied_alpha_fragment: DW,
        project_vertex: OW,
        dithering_fragment: UW,
        dithering_pars_fragment: kW,
        roughnessmap_fragment: NW,
        roughnessmap_pars_fragment: FW,
        shadowmap_pars_fragment: BW,
        shadowmap_pars_vertex: zW,
        shadowmap_vertex: VW,
        shadowmask_pars_fragment: HW,
        skinbase_vertex: GW,
        skinning_pars_vertex: WW,
        skinning_vertex: jW,
        skinnormal_vertex: XW,
        specularmap_fragment: YW,
        specularmap_pars_fragment: qW,
        tonemapping_fragment: KW,
        tonemapping_pars_fragment: ZW,
        transmission_fragment: $W,
        transmission_pars_fragment: JW,
        uv_pars_fragment: QW,
        uv_pars_vertex: e9,
        uv_vertex: t9,
        worldpos_vertex: n9,
        background_vert: i9,
        background_frag: r9,
        backgroundCube_vert: s9,
        backgroundCube_frag: o9,
        cube_vert: a9,
        cube_frag: l9,
        depth_vert: u9,
        depth_frag: c9,
        distanceRGBA_vert: f9,
        distanceRGBA_frag: h9,
        equirect_vert: d9,
        equirect_frag: p9,
        linedashed_vert: m9,
        linedashed_frag: g9,
        meshbasic_vert: v9,
        meshbasic_frag: y9,
        meshlambert_vert: _9,
        meshlambert_frag: x9,
        meshmatcap_vert: S9,
        meshmatcap_frag: w9,
        meshnormal_vert: M9,
        meshnormal_frag: E9,
        meshphong_vert: T9,
        meshphong_frag: A9,
        meshphysical_vert: b9,
        meshphysical_frag: C9,
        meshtoon_vert: R9,
        meshtoon_frag: P9,
        points_vert: L9,
        points_frag: I9,
        shadow_vert: D9,
        shadow_frag: O9,
        sprite_vert: U9,
        sprite_frag: k9,
    },
    bt = {
        common: {
            diffuse: { value: new Tt(16777215) },
            opacity: { value: 1 },
            map: { value: null },
            mapTransform: { value: new pn() },
            alphaMap: { value: null },
            alphaMapTransform: { value: new pn() },
            alphaTest: { value: 0 },
        },
        specularmap: {
            specularMap: { value: null },
            specularMapTransform: { value: new pn() },
        },
        envmap: {
            envMap: { value: null },
            envMapRotation: { value: new pn() },
            flipEnvMap: { value: -1 },
            reflectivity: { value: 1 },
            ior: { value: 1.5 },
            refractionRatio: { value: 0.98 },
        },
        aomap: {
            aoMap: { value: null },
            aoMapIntensity: { value: 1 },
            aoMapTransform: { value: new pn() },
        },
        lightmap: {
            lightMap: { value: null },
            lightMapIntensity: { value: 1 },
            lightMapTransform: { value: new pn() },
        },
        bumpmap: {
            bumpMap: { value: null },
            bumpMapTransform: { value: new pn() },
            bumpScale: { value: 1 },
        },
        normalmap: {
            normalMap: { value: null },
            normalMapTransform: { value: new pn() },
            normalScale: { value: new tt(1, 1) },
        },
        displacementmap: {
            displacementMap: { value: null },
            displacementMapTransform: { value: new pn() },
            displacementScale: { value: 1 },
            displacementBias: { value: 0 },
        },
        emissivemap: {
            emissiveMap: { value: null },
            emissiveMapTransform: { value: new pn() },
        },
        metalnessmap: {
            metalnessMap: { value: null },
            metalnessMapTransform: { value: new pn() },
        },
        roughnessmap: {
            roughnessMap: { value: null },
            roughnessMapTransform: { value: new pn() },
        },
        gradientmap: { gradientMap: { value: null } },
        fog: {
            fogDensity: { value: 25e-5 },
            fogNear: { value: 1 },
            fogFar: { value: 2e3 },
            fogColor: { value: new Tt(16777215) },
        },
        lights: {
            ambientLightColor: { value: [] },
            lightProbe: { value: [] },
            directionalLights: {
                value: [],
                properties: { direction: {}, color: {} },
            },
            directionalLightShadows: {
                value: [],
                properties: {
                    shadowIntensity: 1,
                    shadowBias: {},
                    shadowNormalBias: {},
                    shadowRadius: {},
                    shadowMapSize: {},
                },
            },
            directionalShadowMap: { value: [] },
            directionalShadowMatrix: { value: [] },
            spotLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    direction: {},
                    distance: {},
                    coneCos: {},
                    penumbraCos: {},
                    decay: {},
                },
            },
            spotLightShadows: {
                value: [],
                properties: {
                    shadowIntensity: 1,
                    shadowBias: {},
                    shadowNormalBias: {},
                    shadowRadius: {},
                    shadowMapSize: {},
                },
            },
            spotLightMap: { value: [] },
            spotShadowMap: { value: [] },
            spotLightMatrix: { value: [] },
            pointLights: {
                value: [],
                properties: {
                    color: {},
                    position: {},
                    decay: {},
                    distance: {},
                },
            },
            pointLightShadows: {
                value: [],
                properties: {
                    shadowIntensity: 1,
                    shadowBias: {},
                    shadowNormalBias: {},
                    shadowRadius: {},
                    shadowMapSize: {},
                    shadowCameraNear: {},
                    shadowCameraFar: {},
                },
            },
            pointShadowMap: { value: [] },
            pointShadowMatrix: { value: [] },
            hemisphereLights: {
                value: [],
                properties: { direction: {}, skyColor: {}, groundColor: {} },
            },
            rectAreaLights: {
                value: [],
                properties: { color: {}, position: {}, width: {}, height: {} },
            },
            ltc_1: { value: null },
            ltc_2: { value: null },
        },
        points: {
            diffuse: { value: new Tt(16777215) },
            opacity: { value: 1 },
            size: { value: 1 },
            scale: { value: 1 },
            map: { value: null },
            alphaMap: { value: null },
            alphaMapTransform: { value: new pn() },
            alphaTest: { value: 0 },
            uvTransform: { value: new pn() },
        },
        sprite: {
            diffuse: { value: new Tt(16777215) },
            opacity: { value: 1 },
            center: { value: new tt(0.5, 0.5) },
            rotation: { value: 0 },
            map: { value: null },
            mapTransform: { value: new pn() },
            alphaMap: { value: null },
            alphaMapTransform: { value: new pn() },
            alphaTest: { value: 0 },
        },
    },
    Ba = {
        basic: {
            uniforms: Is([
                bt.common,
                bt.specularmap,
                bt.envmap,
                bt.aomap,
                bt.lightmap,
                bt.fog,
            ]),
            vertexShader: gn.meshbasic_vert,
            fragmentShader: gn.meshbasic_frag,
        },
        lambert: {
            uniforms: Is([
                bt.common,
                bt.specularmap,
                bt.envmap,
                bt.aomap,
                bt.lightmap,
                bt.emissivemap,
                bt.bumpmap,
                bt.normalmap,
                bt.displacementmap,
                bt.fog,
                bt.lights,
                { emissive: { value: new Tt(0) } },
            ]),
            vertexShader: gn.meshlambert_vert,
            fragmentShader: gn.meshlambert_frag,
        },
        phong: {
            uniforms: Is([
                bt.common,
                bt.specularmap,
                bt.envmap,
                bt.aomap,
                bt.lightmap,
                bt.emissivemap,
                bt.bumpmap,
                bt.normalmap,
                bt.displacementmap,
                bt.fog,
                bt.lights,
                {
                    emissive: { value: new Tt(0) },
                    specular: { value: new Tt(1118481) },
                    shininess: { value: 30 },
                },
            ]),
            vertexShader: gn.meshphong_vert,
            fragmentShader: gn.meshphong_frag,
        },
        standard: {
            uniforms: Is([
                bt.common,
                bt.envmap,
                bt.aomap,
                bt.lightmap,
                bt.emissivemap,
                bt.bumpmap,
                bt.normalmap,
                bt.displacementmap,
                bt.roughnessmap,
                bt.metalnessmap,
                bt.fog,
                bt.lights,
                {
                    emissive: { value: new Tt(0) },
                    roughness: { value: 1 },
                    metalness: { value: 0 },
                    envMapIntensity: { value: 1 },
                },
            ]),
            vertexShader: gn.meshphysical_vert,
            fragmentShader: gn.meshphysical_frag,
        },
        toon: {
            uniforms: Is([
                bt.common,
                bt.aomap,
                bt.lightmap,
                bt.emissivemap,
                bt.bumpmap,
                bt.normalmap,
                bt.displacementmap,
                bt.gradientmap,
                bt.fog,
                bt.lights,
                { emissive: { value: new Tt(0) } },
            ]),
            vertexShader: gn.meshtoon_vert,
            fragmentShader: gn.meshtoon_frag,
        },
        matcap: {
            uniforms: Is([
                bt.common,
                bt.bumpmap,
                bt.normalmap,
                bt.displacementmap,
                bt.fog,
                { matcap: { value: null } },
            ]),
            vertexShader: gn.meshmatcap_vert,
            fragmentShader: gn.meshmatcap_frag,
        },
        points: {
            uniforms: Is([bt.points, bt.fog]),
            vertexShader: gn.points_vert,
            fragmentShader: gn.points_frag,
        },
        dashed: {
            uniforms: Is([
                bt.common,
                bt.fog,
                {
                    scale: { value: 1 },
                    dashSize: { value: 1 },
                    totalSize: { value: 2 },
                },
            ]),
            vertexShader: gn.linedashed_vert,
            fragmentShader: gn.linedashed_frag,
        },
        depth: {
            uniforms: Is([bt.common, bt.displacementmap]),
            vertexShader: gn.depth_vert,
            fragmentShader: gn.depth_frag,
        },
        normal: {
            uniforms: Is([
                bt.common,
                bt.bumpmap,
                bt.normalmap,
                bt.displacementmap,
                { opacity: { value: 1 } },
            ]),
            vertexShader: gn.meshnormal_vert,
            fragmentShader: gn.meshnormal_frag,
        },
        sprite: {
            uniforms: Is([bt.sprite, bt.fog]),
            vertexShader: gn.sprite_vert,
            fragmentShader: gn.sprite_frag,
        },
        background: {
            uniforms: {
                uvTransform: { value: new pn() },
                t2D: { value: null },
                backgroundIntensity: { value: 1 },
            },
            vertexShader: gn.background_vert,
            fragmentShader: gn.background_frag,
        },
        backgroundCube: {
            uniforms: {
                envMap: { value: null },
                flipEnvMap: { value: -1 },
                backgroundBlurriness: { value: 0 },
                backgroundIntensity: { value: 1 },
                backgroundRotation: { value: new pn() },
            },
            vertexShader: gn.backgroundCube_vert,
            fragmentShader: gn.backgroundCube_frag,
        },
        cube: {
            uniforms: {
                tCube: { value: null },
                tFlip: { value: -1 },
                opacity: { value: 1 },
            },
            vertexShader: gn.cube_vert,
            fragmentShader: gn.cube_frag,
        },
        equirect: {
            uniforms: { tEquirect: { value: null } },
            vertexShader: gn.equirect_vert,
            fragmentShader: gn.equirect_frag,
        },
        distanceRGBA: {
            uniforms: Is([
                bt.common,
                bt.displacementmap,
                {
                    referencePosition: { value: new re() },
                    nearDistance: { value: 1 },
                    farDistance: { value: 1e3 },
                },
            ]),
            vertexShader: gn.distanceRGBA_vert,
            fragmentShader: gn.distanceRGBA_frag,
        },
        shadow: {
            uniforms: Is([
                bt.lights,
                bt.fog,
                { color: { value: new Tt(0) }, opacity: { value: 1 } },
            ]),
            vertexShader: gn.shadow_vert,
            fragmentShader: gn.shadow_frag,
        },
    };
Ba.physical = {
    uniforms: Is([
        Ba.standard.uniforms,
        {
            clearcoat: { value: 0 },
            clearcoatMap: { value: null },
            clearcoatMapTransform: { value: new pn() },
            clearcoatNormalMap: { value: null },
            clearcoatNormalMapTransform: { value: new pn() },
            clearcoatNormalScale: { value: new tt(1, 1) },
            clearcoatRoughness: { value: 0 },
            clearcoatRoughnessMap: { value: null },
            clearcoatRoughnessMapTransform: { value: new pn() },
            dispersion: { value: 0 },
            iridescence: { value: 0 },
            iridescenceMap: { value: null },
            iridescenceMapTransform: { value: new pn() },
            iridescenceIOR: { value: 1.3 },
            iridescenceThicknessMinimum: { value: 100 },
            iridescenceThicknessMaximum: { value: 400 },
            iridescenceThicknessMap: { value: null },
            iridescenceThicknessMapTransform: { value: new pn() },
            sheen: { value: 0 },
            sheenColor: { value: new Tt(0) },
            sheenColorMap: { value: null },
            sheenColorMapTransform: { value: new pn() },
            sheenRoughness: { value: 1 },
            sheenRoughnessMap: { value: null },
            sheenRoughnessMapTransform: { value: new pn() },
            transmission: { value: 0 },
            transmissionMap: { value: null },
            transmissionMapTransform: { value: new pn() },
            transmissionSamplerSize: { value: new tt() },
            transmissionSamplerMap: { value: null },
            thickness: { value: 0 },
            thicknessMap: { value: null },
            thicknessMapTransform: { value: new pn() },
            attenuationDistance: { value: 0 },
            attenuationColor: { value: new Tt(0) },
            specularColor: { value: new Tt(1, 1, 1) },
            specularColorMap: { value: null },
            specularColorMapTransform: { value: new pn() },
            specularIntensity: { value: 1 },
            specularIntensityMap: { value: null },
            specularIntensityMapTransform: { value: new pn() },
            anisotropyVector: { value: new tt() },
            anisotropyMap: { value: null },
            anisotropyMapTransform: { value: new pn() },
        },
    ]),
    vertexShader: gn.meshphysical_vert,
    fragmentShader: gn.meshphysical_frag,
};
const My = { r: 0, b: 0, g: 0 },
    Pf = new oo(),
    N9 = new qt();
function F9(r, e, t, n, i, s, o) {
    const a = new Tt(0);
    let l = s === !0 ? 0 : 1,
        u,
        f,
        d = null,
        m = 0,
        v = null;
    function _(A) {
        let T = A.isScene === !0 ? A.background : null;
        return (
            T &&
                T.isTexture &&
                (T = (A.backgroundBlurriness > 0 ? t : e).get(T)),
            T
        );
    }
    function S(A) {
        let T = !1;
        const b = _(A);
        b === null ? x(a, l) : b && b.isColor && (x(b, 1), (T = !0));
        const P = r.xr.getEnvironmentBlendMode();
        P === 'additive'
            ? n.buffers.color.setClear(0, 0, 0, 1, o)
            : P === 'alpha-blend' && n.buffers.color.setClear(0, 0, 0, 0, o),
            (r.autoClear || T) &&
                (n.buffers.depth.setTest(!0),
                n.buffers.depth.setMask(!0),
                n.buffers.color.setMask(!0),
                r.clear(
                    r.autoClearColor,
                    r.autoClearDepth,
                    r.autoClearStencil
                ));
    }
    function w(A, T) {
        const b = _(T);
        b && (b.isCubeTexture || b.mapping === Hp)
            ? (f === void 0 &&
                  ((f = new Jn(
                      new wh(1, 1, 1),
                      new Qi({
                          name: 'BackgroundCubeMaterial',
                          uniforms: Ip(Ba.backgroundCube.uniforms),
                          vertexShader: Ba.backgroundCube.vertexShader,
                          fragmentShader: Ba.backgroundCube.fragmentShader,
                          side: ps,
                          depthTest: !1,
                          depthWrite: !1,
                          fog: !1,
                      })
                  )),
                  f.geometry.deleteAttribute('normal'),
                  f.geometry.deleteAttribute('uv'),
                  (f.onBeforeRender = function (P, L, D) {
                      this.matrixWorld.copyPosition(D.matrixWorld);
                  }),
                  Object.defineProperty(f.material, 'envMap', {
                      get: function () {
                          return this.uniforms.envMap.value;
                      },
                  }),
                  i.update(f)),
              Pf.copy(T.backgroundRotation),
              (Pf.x *= -1),
              (Pf.y *= -1),
              (Pf.z *= -1),
              b.isCubeTexture &&
                  b.isRenderTargetTexture === !1 &&
                  ((Pf.y *= -1), (Pf.z *= -1)),
              (f.material.uniforms.envMap.value = b),
              (f.material.uniforms.flipEnvMap.value =
                  b.isCubeTexture && b.isRenderTargetTexture === !1 ? -1 : 1),
              (f.material.uniforms.backgroundBlurriness.value =
                  T.backgroundBlurriness),
              (f.material.uniforms.backgroundIntensity.value =
                  T.backgroundIntensity),
              f.material.uniforms.backgroundRotation.value.setFromMatrix4(
                  N9.makeRotationFromEuler(Pf)
              ),
              (f.material.toneMapped = zn.getTransfer(b.colorSpace) !== ci),
              (d !== b || m !== b.version || v !== r.toneMapping) &&
                  ((f.material.needsUpdate = !0),
                  (d = b),
                  (m = b.version),
                  (v = r.toneMapping)),
              f.layers.enableAll(),
              A.unshift(f, f.geometry, f.material, 0, 0, null))
            : b &&
              b.isTexture &&
              (u === void 0 &&
                  ((u = new Jn(
                      new ra(2, 2),
                      new Qi({
                          name: 'BackgroundMaterial',
                          uniforms: Ip(Ba.background.uniforms),
                          vertexShader: Ba.background.vertexShader,
                          fragmentShader: Ba.background.fragmentShader,
                          side: Au,
                          depthTest: !1,
                          depthWrite: !1,
                          fog: !1,
                      })
                  )),
                  u.geometry.deleteAttribute('normal'),
                  Object.defineProperty(u.material, 'map', {
                      get: function () {
                          return this.uniforms.t2D.value;
                      },
                  }),
                  i.update(u)),
              (u.material.uniforms.t2D.value = b),
              (u.material.uniforms.backgroundIntensity.value =
                  T.backgroundIntensity),
              (u.material.toneMapped = zn.getTransfer(b.colorSpace) !== ci),
              b.matrixAutoUpdate === !0 && b.updateMatrix(),
              u.material.uniforms.uvTransform.value.copy(b.matrix),
              (d !== b || m !== b.version || v !== r.toneMapping) &&
                  ((u.material.needsUpdate = !0),
                  (d = b),
                  (m = b.version),
                  (v = r.toneMapping)),
              u.layers.enableAll(),
              A.unshift(u, u.geometry, u.material, 0, 0, null));
    }
    function x(A, T) {
        A.getRGB(My, yO(r)), n.buffers.color.setClear(My.r, My.g, My.b, T, o);
    }
    return {
        getClearColor: function () {
            return a;
        },
        setClearColor: function (A, T = 1) {
            a.set(A), (l = T), x(a, l);
        },
        getClearAlpha: function () {
            return l;
        },
        setClearAlpha: function (A) {
            (l = A), x(a, l);
        },
        render: S,
        addToRenderList: w,
    };
}
function B9(r, e) {
    const t = r.getParameter(r.MAX_VERTEX_ATTRIBS),
        n = {},
        i = m(null);
    let s = i,
        o = !1;
    function a(U, H, W, q, K) {
        let le = !1;
        const ee = d(q, W, H);
        s !== ee && ((s = ee), u(s.object)),
            (le = v(U, q, W, K)),
            le && _(U, q, W, K),
            K !== null && e.update(K, r.ELEMENT_ARRAY_BUFFER),
            (le || o) &&
                ((o = !1),
                b(U, H, W, q),
                K !== null &&
                    r.bindBuffer(r.ELEMENT_ARRAY_BUFFER, e.get(K).buffer));
    }
    function l() {
        return r.createVertexArray();
    }
    function u(U) {
        return r.bindVertexArray(U);
    }
    function f(U) {
        return r.deleteVertexArray(U);
    }
    function d(U, H, W) {
        const q = W.wireframe === !0;
        let K = n[U.id];
        K === void 0 && ((K = {}), (n[U.id] = K));
        let le = K[H.id];
        le === void 0 && ((le = {}), (K[H.id] = le));
        let ee = le[q];
        return ee === void 0 && ((ee = m(l())), (le[q] = ee)), ee;
    }
    function m(U) {
        const H = [],
            W = [],
            q = [];
        for (let K = 0; K < t; K++) (H[K] = 0), (W[K] = 0), (q[K] = 0);
        return {
            geometry: null,
            program: null,
            wireframe: !1,
            newAttributes: H,
            enabledAttributes: W,
            attributeDivisors: q,
            object: U,
            attributes: {},
            index: null,
        };
    }
    function v(U, H, W, q) {
        const K = s.attributes,
            le = H.attributes;
        let ee = 0;
        const de = W.getAttributes();
        for (const Z in de)
            if (de[Z].location >= 0) {
                const J = K[Z];
                let F = le[Z];
                if (
                    (F === void 0 &&
                        (Z === 'instanceMatrix' &&
                            U.instanceMatrix &&
                            (F = U.instanceMatrix),
                        Z === 'instanceColor' &&
                            U.instanceColor &&
                            (F = U.instanceColor)),
                    J === void 0 ||
                        J.attribute !== F ||
                        (F && J.data !== F.data))
                )
                    return !0;
                ee++;
            }
        return s.attributesNum !== ee || s.index !== q;
    }
    function _(U, H, W, q) {
        const K = {},
            le = H.attributes;
        let ee = 0;
        const de = W.getAttributes();
        for (const Z in de)
            if (de[Z].location >= 0) {
                let J = le[Z];
                J === void 0 &&
                    (Z === 'instanceMatrix' &&
                        U.instanceMatrix &&
                        (J = U.instanceMatrix),
                    Z === 'instanceColor' &&
                        U.instanceColor &&
                        (J = U.instanceColor));
                const F = {};
                (F.attribute = J),
                    J && J.data && (F.data = J.data),
                    (K[Z] = F),
                    ee++;
            }
        (s.attributes = K), (s.attributesNum = ee), (s.index = q);
    }
    function S() {
        const U = s.newAttributes;
        for (let H = 0, W = U.length; H < W; H++) U[H] = 0;
    }
    function w(U) {
        x(U, 0);
    }
    function x(U, H) {
        const W = s.newAttributes,
            q = s.enabledAttributes,
            K = s.attributeDivisors;
        (W[U] = 1),
            q[U] === 0 && (r.enableVertexAttribArray(U), (q[U] = 1)),
            K[U] !== H && (r.vertexAttribDivisor(U, H), (K[U] = H));
    }
    function A() {
        const U = s.newAttributes,
            H = s.enabledAttributes;
        for (let W = 0, q = H.length; W < q; W++)
            H[W] !== U[W] && (r.disableVertexAttribArray(W), (H[W] = 0));
    }
    function T(U, H, W, q, K, le, ee) {
        ee === !0
            ? r.vertexAttribIPointer(U, H, W, K, le)
            : r.vertexAttribPointer(U, H, W, q, K, le);
    }
    function b(U, H, W, q) {
        S();
        const K = q.attributes,
            le = W.getAttributes(),
            ee = H.defaultAttributeValues;
        for (const de in le) {
            const Z = le[de];
            if (Z.location >= 0) {
                let se = K[de];
                if (
                    (se === void 0 &&
                        (de === 'instanceMatrix' &&
                            U.instanceMatrix &&
                            (se = U.instanceMatrix),
                        de === 'instanceColor' &&
                            U.instanceColor &&
                            (se = U.instanceColor)),
                    se !== void 0)
                ) {
                    const J = se.normalized,
                        F = se.itemSize,
                        $ = e.get(se);
                    if ($ === void 0) continue;
                    const fe = $.buffer,
                        ne = $.type,
                        ae = $.bytesPerElement,
                        me =
                            ne === r.INT ||
                            ne === r.UNSIGNED_INT ||
                            se.gpuType === W0;
                    if (se.isInterleavedBufferAttribute) {
                        const ge = se.data,
                            Ae = ge.stride,
                            je = se.offset;
                        if (ge.isInstancedInterleavedBuffer) {
                            for (let Qe = 0; Qe < Z.locationSize; Qe++)
                                x(Z.location + Qe, ge.meshPerAttribute);
                            U.isInstancedMesh !== !0 &&
                                q._maxInstanceCount === void 0 &&
                                (q._maxInstanceCount =
                                    ge.meshPerAttribute * ge.count);
                        } else
                            for (let Qe = 0; Qe < Z.locationSize; Qe++)
                                w(Z.location + Qe);
                        r.bindBuffer(r.ARRAY_BUFFER, fe);
                        for (let Qe = 0; Qe < Z.locationSize; Qe++)
                            T(
                                Z.location + Qe,
                                F / Z.locationSize,
                                ne,
                                J,
                                Ae * ae,
                                (je + (F / Z.locationSize) * Qe) * ae,
                                me
                            );
                    } else {
                        if (se.isInstancedBufferAttribute) {
                            for (let ge = 0; ge < Z.locationSize; ge++)
                                x(Z.location + ge, se.meshPerAttribute);
                            U.isInstancedMesh !== !0 &&
                                q._maxInstanceCount === void 0 &&
                                (q._maxInstanceCount =
                                    se.meshPerAttribute * se.count);
                        } else
                            for (let ge = 0; ge < Z.locationSize; ge++)
                                w(Z.location + ge);
                        r.bindBuffer(r.ARRAY_BUFFER, fe);
                        for (let ge = 0; ge < Z.locationSize; ge++)
                            T(
                                Z.location + ge,
                                F / Z.locationSize,
                                ne,
                                J,
                                F * ae,
                                (F / Z.locationSize) * ge * ae,
                                me
                            );
                    }
                } else if (ee !== void 0) {
                    const J = ee[de];
                    if (J !== void 0)
                        switch (J.length) {
                            case 2:
                                r.vertexAttrib2fv(Z.location, J);
                                break;
                            case 3:
                                r.vertexAttrib3fv(Z.location, J);
                                break;
                            case 4:
                                r.vertexAttrib4fv(Z.location, J);
                                break;
                            default:
                                r.vertexAttrib1fv(Z.location, J);
                        }
                }
            }
        }
        A();
    }
    function P() {
        O();
        for (const U in n) {
            const H = n[U];
            for (const W in H) {
                const q = H[W];
                for (const K in q) f(q[K].object), delete q[K];
                delete H[W];
            }
            delete n[U];
        }
    }
    function L(U) {
        if (n[U.id] === void 0) return;
        const H = n[U.id];
        for (const W in H) {
            const q = H[W];
            for (const K in q) f(q[K].object), delete q[K];
            delete H[W];
        }
        delete n[U.id];
    }
    function D(U) {
        for (const H in n) {
            const W = n[H];
            if (W[U.id] === void 0) continue;
            const q = W[U.id];
            for (const K in q) f(q[K].object), delete q[K];
            delete W[U.id];
        }
    }
    function O() {
        I(), (o = !0), s !== i && ((s = i), u(s.object));
    }
    function I() {
        (i.geometry = null), (i.program = null), (i.wireframe = !1);
    }
    return {
        setup: a,
        reset: O,
        resetDefaultState: I,
        dispose: P,
        releaseStatesOfGeometry: L,
        releaseStatesOfProgram: D,
        initAttributes: S,
        enableAttribute: w,
        disableUnusedAttributes: A,
    };
}
function z9(r, e, t) {
    let n;
    function i(u) {
        n = u;
    }
    function s(u, f) {
        r.drawArrays(n, u, f), t.update(f, n, 1);
    }
    function o(u, f, d) {
        d !== 0 && (r.drawArraysInstanced(n, u, f, d), t.update(f, n, d));
    }
    function a(u, f, d) {
        if (d === 0) return;
        e.get('WEBGL_multi_draw').multiDrawArraysWEBGL(n, u, 0, f, 0, d);
        let v = 0;
        for (let _ = 0; _ < d; _++) v += f[_];
        t.update(v, n, 1);
    }
    function l(u, f, d, m) {
        if (d === 0) return;
        const v = e.get('WEBGL_multi_draw');
        if (v === null) for (let _ = 0; _ < u.length; _++) o(u[_], f[_], m[_]);
        else {
            v.multiDrawArraysInstancedWEBGL(n, u, 0, f, 0, m, 0, d);
            let _ = 0;
            for (let S = 0; S < d; S++) _ += f[S];
            for (let S = 0; S < m.length; S++) t.update(_, n, m[S]);
        }
    }
    (this.setMode = i),
        (this.render = s),
        (this.renderInstances = o),
        (this.renderMultiDraw = a),
        (this.renderMultiDrawInstances = l);
}
function V9(r, e, t, n) {
    let i;
    function s() {
        if (i !== void 0) return i;
        if (e.has('EXT_texture_filter_anisotropic') === !0) {
            const L = e.get('EXT_texture_filter_anisotropic');
            i = r.getParameter(L.MAX_TEXTURE_MAX_ANISOTROPY_EXT);
        } else i = 0;
        return i;
    }
    function o(L) {
        return !(
            L !== er &&
            n.convert(L) !== r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT)
        );
    }
    function a(L) {
        const D =
            L === Er &&
            (e.has('EXT_color_buffer_half_float') ||
                e.has('EXT_color_buffer_float'));
        return !(
            L !== so &&
            n.convert(L) !== r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE) &&
            L !== ri &&
            !D
        );
    }
    function l(L) {
        if (L === 'highp') {
            if (
                r.getShaderPrecisionFormat(r.VERTEX_SHADER, r.HIGH_FLOAT)
                    .precision > 0 &&
                r.getShaderPrecisionFormat(r.FRAGMENT_SHADER, r.HIGH_FLOAT)
                    .precision > 0
            )
                return 'highp';
            L = 'mediump';
        }
        return L === 'mediump' &&
            r.getShaderPrecisionFormat(r.VERTEX_SHADER, r.MEDIUM_FLOAT)
                .precision > 0 &&
            r.getShaderPrecisionFormat(r.FRAGMENT_SHADER, r.MEDIUM_FLOAT)
                .precision > 0
            ? 'mediump'
            : 'lowp';
    }
    let u = t.precision !== void 0 ? t.precision : 'highp';
    const f = l(u);
    f !== u &&
        (console.warn(
            'THREE.WebGLRenderer:',
            u,
            'not supported, using',
            f,
            'instead.'
        ),
        (u = f));
    const d = t.logarithmicDepthBuffer === !0,
        m = r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),
        v = r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),
        _ = r.getParameter(r.MAX_TEXTURE_SIZE),
        S = r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),
        w = r.getParameter(r.MAX_VERTEX_ATTRIBS),
        x = r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),
        A = r.getParameter(r.MAX_VARYING_VECTORS),
        T = r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),
        b = v > 0,
        P = r.getParameter(r.MAX_SAMPLES);
    return {
        isWebGL2: !0,
        getMaxAnisotropy: s,
        getMaxPrecision: l,
        textureFormatReadable: o,
        textureTypeReadable: a,
        precision: u,
        logarithmicDepthBuffer: d,
        maxTextures: m,
        maxVertexTextures: v,
        maxTextureSize: _,
        maxCubemapSize: S,
        maxAttributes: w,
        maxVertexUniforms: x,
        maxVaryings: A,
        maxFragmentUniforms: T,
        vertexTextures: b,
        maxSamples: P,
    };
}
function H9(r) {
    const e = this;
    let t = null,
        n = 0,
        i = !1,
        s = !1;
    const o = new gc(),
        a = new pn(),
        l = { value: null, needsUpdate: !1 };
    (this.uniform = l),
        (this.numPlanes = 0),
        (this.numIntersection = 0),
        (this.init = function (d, m) {
            const v = d.length !== 0 || m || n !== 0 || i;
            return (i = m), (n = d.length), v;
        }),
        (this.beginShadows = function () {
            (s = !0), f(null);
        }),
        (this.endShadows = function () {
            s = !1;
        }),
        (this.setGlobalState = function (d, m) {
            t = f(d, m, 0);
        }),
        (this.setState = function (d, m, v) {
            const _ = d.clippingPlanes,
                S = d.clipIntersection,
                w = d.clipShadows,
                x = r.get(d);
            if (!i || _ === null || _.length === 0 || (s && !w))
                s ? f(null) : u();
            else {
                const A = s ? 0 : n,
                    T = A * 4;
                let b = x.clippingState || null;
                (l.value = b), (b = f(_, m, T, v));
                for (let P = 0; P !== T; ++P) b[P] = t[P];
                (x.clippingState = b),
                    (this.numIntersection = S ? this.numPlanes : 0),
                    (this.numPlanes += A);
            }
        });
    function u() {
        l.value !== t && ((l.value = t), (l.needsUpdate = n > 0)),
            (e.numPlanes = n),
            (e.numIntersection = 0);
    }
    function f(d, m, v, _) {
        const S = d !== null ? d.length : 0;
        let w = null;
        if (S !== 0) {
            if (((w = l.value), _ !== !0 || w === null)) {
                const x = v + S * 4,
                    A = m.matrixWorldInverse;
                a.getNormalMatrix(A),
                    (w === null || w.length < x) && (w = new Float32Array(x));
                for (let T = 0, b = v; T !== S; ++T, b += 4)
                    o.copy(d[T]).applyMatrix4(A, a),
                        o.normal.toArray(w, b),
                        (w[b + 3] = o.constant);
            }
            (l.value = w), (l.needsUpdate = !0);
        }
        return (e.numPlanes = S), (e.numIntersection = 0), w;
    }
}
function G9(r) {
    let e = new WeakMap();
    function t(o, a) {
        return a === Rp ? (o.mapping = Pl) : a === d0 && (o.mapping = Ic), o;
    }
    function n(o) {
        if (o && o.isTexture) {
            const a = o.mapping;
            if (a === Rp || a === d0)
                if (e.has(o)) {
                    const l = e.get(o).texture;
                    return t(l, o.mapping);
                } else {
                    const l = o.image;
                    if (l && l.height > 0) {
                        const u = new LT(l.height);
                        return (
                            u.fromEquirectangularTexture(r, o),
                            e.set(o, u),
                            o.addEventListener('dispose', i),
                            t(u.texture, o.mapping)
                        );
                    } else return null;
                }
        }
        return o;
    }
    function i(o) {
        const a = o.target;
        a.removeEventListener('dispose', i);
        const l = e.get(a);
        l !== void 0 && (e.delete(a), l.dispose());
    }
    function s() {
        e = new WeakMap();
    }
    return { get: n, dispose: s };
}
class zc extends Y0 {
    constructor(e = -1, t = 1, n = 1, i = -1, s = 0.1, o = 2e3) {
        super(),
            (this.isOrthographicCamera = !0),
            (this.type = 'OrthographicCamera'),
            (this.zoom = 1),
            (this.view = null),
            (this.left = e),
            (this.right = t),
            (this.top = n),
            (this.bottom = i),
            (this.near = s),
            (this.far = o),
            this.updateProjectionMatrix();
    }
    copy(e, t) {
        return (
            super.copy(e, t),
            (this.left = e.left),
            (this.right = e.right),
            (this.top = e.top),
            (this.bottom = e.bottom),
            (this.near = e.near),
            (this.far = e.far),
            (this.zoom = e.zoom),
            (this.view = e.view === null ? null : Object.assign({}, e.view)),
            this
        );
    }
    setViewOffset(e, t, n, i, s, o) {
        this.view === null &&
            (this.view = {
                enabled: !0,
                fullWidth: 1,
                fullHeight: 1,
                offsetX: 0,
                offsetY: 0,
                width: 1,
                height: 1,
            }),
            (this.view.enabled = !0),
            (this.view.fullWidth = e),
            (this.view.fullHeight = t),
            (this.view.offsetX = n),
            (this.view.offsetY = i),
            (this.view.width = s),
            (this.view.height = o),
            this.updateProjectionMatrix();
    }
    clearViewOffset() {
        this.view !== null && (this.view.enabled = !1),
            this.updateProjectionMatrix();
    }
    updateProjectionMatrix() {
        const e = (this.right - this.left) / (2 * this.zoom),
            t = (this.top - this.bottom) / (2 * this.zoom),
            n = (this.right + this.left) / 2,
            i = (this.top + this.bottom) / 2;
        let s = n - e,
            o = n + e,
            a = i + t,
            l = i - t;
        if (this.view !== null && this.view.enabled) {
            const u =
                    (this.right - this.left) / this.view.fullWidth / this.zoom,
                f = (this.top - this.bottom) / this.view.fullHeight / this.zoom;
            (s += u * this.view.offsetX),
                (o = s + u * this.view.width),
                (a -= f * this.view.offsetY),
                (l = a - f * this.view.height);
        }
        this.projectionMatrix.makeOrthographic(
            s,
            o,
            a,
            l,
            this.near,
            this.far,
            this.coordinateSystem
        ),
            this.projectionMatrixInverse.copy(this.projectionMatrix).invert();
    }
    toJSON(e) {
        const t = super.toJSON(e);
        return (
            (t.object.zoom = this.zoom),
            (t.object.left = this.left),
            (t.object.right = this.right),
            (t.object.top = this.top),
            (t.object.bottom = this.bottom),
            (t.object.near = this.near),
            (t.object.far = this.far),
            this.view !== null &&
                (t.object.view = Object.assign({}, this.view)),
            t
        );
    }
}
const lp = 4,
    o2 = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582],
    Xf = 20,
    FS = new zc(),
    a2 = new Tt();
let BS = null,
    zS = 0,
    VS = 0,
    HS = !1;
const jf = (1 + Math.sqrt(5)) / 2,
    Ld = 1 / jf,
    l2 = [
        new re(-jf, Ld, 0),
        new re(jf, Ld, 0),
        new re(-Ld, 0, jf),
        new re(Ld, 0, jf),
        new re(0, jf, -Ld),
        new re(0, jf, Ld),
        new re(-1, 1, -1),
        new re(1, 1, -1),
        new re(-1, 1, 1),
        new re(1, 1, 1),
    ];
class PM {
    constructor(e) {
        (this._renderer = e),
            (this._pingPongRenderTarget = null),
            (this._lodMax = 0),
            (this._cubeSize = 0),
            (this._lodPlanes = []),
            (this._sizeLods = []),
            (this._sigmas = []),
            (this._blurMaterial = null),
            (this._cubemapMaterial = null),
            (this._equirectMaterial = null),
            this._compileMaterial(this._blurMaterial);
    }
    fromScene(e, t = 0, n = 0.1, i = 100) {
        (BS = this._renderer.getRenderTarget()),
            (zS = this._renderer.getActiveCubeFace()),
            (VS = this._renderer.getActiveMipmapLevel()),
            (HS = this._renderer.xr.enabled),
            (this._renderer.xr.enabled = !1),
            this._setSize(256);
        const s = this._allocateTargets();
        return (
            (s.depthBuffer = !0),
            this._sceneToCubeUV(e, n, i, s),
            t > 0 && this._blur(s, 0, 0, t),
            this._applyPMREM(s),
            this._cleanup(s),
            s
        );
    }
    fromEquirectangular(e, t = null) {
        return this._fromTexture(e, t);
    }
    fromCubemap(e, t = null) {
        return this._fromTexture(e, t);
    }
    compileCubemapShader() {
        this._cubemapMaterial === null &&
            ((this._cubemapMaterial = f2()),
            this._compileMaterial(this._cubemapMaterial));
    }
    compileEquirectangularShader() {
        this._equirectMaterial === null &&
            ((this._equirectMaterial = c2()),
            this._compileMaterial(this._equirectMaterial));
    }
    dispose() {
        this._dispose(),
            this._cubemapMaterial !== null && this._cubemapMaterial.dispose(),
            this._equirectMaterial !== null && this._equirectMaterial.dispose();
    }
    _setSize(e) {
        (this._lodMax = Math.floor(Math.log2(e))),
            (this._cubeSize = Math.pow(2, this._lodMax));
    }
    _dispose() {
        this._blurMaterial !== null && this._blurMaterial.dispose(),
            this._pingPongRenderTarget !== null &&
                this._pingPongRenderTarget.dispose();
        for (let e = 0; e < this._lodPlanes.length; e++)
            this._lodPlanes[e].dispose();
    }
    _cleanup(e) {
        this._renderer.setRenderTarget(BS, zS, VS),
            (this._renderer.xr.enabled = HS),
            (e.scissorTest = !1),
            Ey(e, 0, 0, e.width, e.height);
    }
    _fromTexture(e, t) {
        e.mapping === Pl || e.mapping === Ic
            ? this._setSize(
                  e.image.length === 0
                      ? 16
                      : e.image[0].width || e.image[0].image.width
              )
            : this._setSize(e.image.width / 4),
            (BS = this._renderer.getRenderTarget()),
            (zS = this._renderer.getActiveCubeFace()),
            (VS = this._renderer.getActiveMipmapLevel()),
            (HS = this._renderer.xr.enabled),
            (this._renderer.xr.enabled = !1);
        const n = t || this._allocateTargets();
        return (
            this._textureToCubeUV(e, n),
            this._applyPMREM(n),
            this._cleanup(n),
            n
        );
    }
    _allocateTargets() {
        const e = 3 * Math.max(this._cubeSize, 112),
            t = 4 * this._cubeSize,
            n = {
                magFilter: Cn,
                minFilter: Cn,
                generateMipmaps: !1,
                type: Er,
                format: er,
                colorSpace: na,
                depthBuffer: !1,
            },
            i = u2(e, t, n);
        if (
            this._pingPongRenderTarget === null ||
            this._pingPongRenderTarget.width !== e ||
            this._pingPongRenderTarget.height !== t
        ) {
            this._pingPongRenderTarget !== null && this._dispose(),
                (this._pingPongRenderTarget = u2(e, t, n));
            const { _lodMax: s } = this;
            ({
                sizeLods: this._sizeLods,
                lodPlanes: this._lodPlanes,
                sigmas: this._sigmas,
            } = W9(s)),
                (this._blurMaterial = j9(s, e, t));
        }
        return i;
    }
    _compileMaterial(e) {
        const t = new Jn(this._lodPlanes[0], e);
        this._renderer.compile(t, FS);
    }
    _sceneToCubeUV(e, t, n, i) {
        const a = new Nr(90, 1, t, n),
            l = [1, -1, 1, 1, 1, 1],
            u = [1, 1, 1, -1, -1, -1],
            f = this._renderer,
            d = f.autoClear,
            m = f.toneMapping;
        f.getClearColor(a2), (f.toneMapping = bl), (f.autoClear = !1);
        const v = new ja({
                name: 'PMREM.Background',
                side: ps,
                depthWrite: !1,
                depthTest: !1,
            }),
            _ = new Jn(new wh(), v);
        let S = !1;
        const w = e.background;
        w
            ? w.isColor && (v.color.copy(w), (e.background = null), (S = !0))
            : (v.color.copy(a2), (S = !0));
        for (let x = 0; x < 6; x++) {
            const A = x % 3;
            A === 0
                ? (a.up.set(0, l[x], 0), a.lookAt(u[x], 0, 0))
                : A === 1
                  ? (a.up.set(0, 0, l[x]), a.lookAt(0, u[x], 0))
                  : (a.up.set(0, l[x], 0), a.lookAt(0, 0, u[x]));
            const T = this._cubeSize;
            Ey(i, A * T, x > 2 ? T : 0, T, T),
                f.setRenderTarget(i),
                S && f.render(_, a),
                f.render(e, a);
        }
        _.geometry.dispose(),
            _.material.dispose(),
            (f.toneMapping = m),
            (f.autoClear = d),
            (e.background = w);
    }
    _textureToCubeUV(e, t) {
        const n = this._renderer,
            i = e.mapping === Pl || e.mapping === Ic;
        i
            ? (this._cubemapMaterial === null && (this._cubemapMaterial = f2()),
              (this._cubemapMaterial.uniforms.flipEnvMap.value =
                  e.isRenderTargetTexture === !1 ? -1 : 1))
            : this._equirectMaterial === null &&
              (this._equirectMaterial = c2());
        const s = i ? this._cubemapMaterial : this._equirectMaterial,
            o = new Jn(this._lodPlanes[0], s),
            a = s.uniforms;
        a.envMap.value = e;
        const l = this._cubeSize;
        Ey(t, 0, 0, 3 * l, 2 * l), n.setRenderTarget(t), n.render(o, FS);
    }
    _applyPMREM(e) {
        const t = this._renderer,
            n = t.autoClear;
        t.autoClear = !1;
        const i = this._lodPlanes.length;
        for (let s = 1; s < i; s++) {
            const o = Math.sqrt(
                    this._sigmas[s] * this._sigmas[s] -
                        this._sigmas[s - 1] * this._sigmas[s - 1]
                ),
                a = l2[(i - s - 1) % l2.length];
            this._blur(e, s - 1, s, o, a);
        }
        t.autoClear = n;
    }
    _blur(e, t, n, i, s) {
        const o = this._pingPongRenderTarget;
        this._halfBlur(e, o, t, n, i, 'latitudinal', s),
            this._halfBlur(o, e, n, n, i, 'longitudinal', s);
    }
    _halfBlur(e, t, n, i, s, o, a) {
        const l = this._renderer,
            u = this._blurMaterial;
        o !== 'latitudinal' &&
            o !== 'longitudinal' &&
            console.error(
                'blur direction must be either latitudinal or longitudinal!'
            );
        const f = 3,
            d = new Jn(this._lodPlanes[i], u),
            m = u.uniforms,
            v = this._sizeLods[n] - 1,
            _ = isFinite(s) ? Math.PI / (2 * v) : (2 * Math.PI) / (2 * Xf - 1),
            S = s / _,
            w = isFinite(s) ? 1 + Math.floor(f * S) : Xf;
        w > Xf &&
            console.warn(
                `sigmaRadians, ${s}, is too large and will clip, as it requested ${w} samples when the maximum is set to ${Xf}`
            );
        const x = [];
        let A = 0;
        for (let D = 0; D < Xf; ++D) {
            const O = D / S,
                I = Math.exp((-O * O) / 2);
            x.push(I), D === 0 ? (A += I) : D < w && (A += 2 * I);
        }
        for (let D = 0; D < x.length; D++) x[D] = x[D] / A;
        (m.envMap.value = e.texture),
            (m.samples.value = w),
            (m.weights.value = x),
            (m.latitudinal.value = o === 'latitudinal'),
            a && (m.poleAxis.value = a);
        const { _lodMax: T } = this;
        (m.dTheta.value = _), (m.mipInt.value = T - n);
        const b = this._sizeLods[i],
            P = 3 * b * (i > T - lp ? i - T + lp : 0),
            L = 4 * (this._cubeSize - b);
        Ey(t, P, L, 3 * b, 2 * b), l.setRenderTarget(t), l.render(d, FS);
    }
}
function W9(r) {
    const e = [],
        t = [],
        n = [];
    let i = r;
    const s = r - lp + 1 + o2.length;
    for (let o = 0; o < s; o++) {
        const a = Math.pow(2, i);
        t.push(a);
        let l = 1 / a;
        o > r - lp ? (l = o2[o - r + lp - 1]) : o === 0 && (l = 0), n.push(l);
        const u = 1 / (a - 2),
            f = -u,
            d = 1 + u,
            m = [f, f, d, f, d, d, f, f, d, d, f, d],
            v = 6,
            _ = 6,
            S = 3,
            w = 2,
            x = 1,
            A = new Float32Array(S * _ * v),
            T = new Float32Array(w * _ * v),
            b = new Float32Array(x * _ * v);
        for (let L = 0; L < v; L++) {
            const D = ((L % 3) * 2) / 3 - 1,
                O = L > 2 ? 0 : -1,
                I = [
                    D,
                    O,
                    0,
                    D + 2 / 3,
                    O,
                    0,
                    D + 2 / 3,
                    O + 1,
                    0,
                    D,
                    O,
                    0,
                    D + 2 / 3,
                    O + 1,
                    0,
                    D,
                    O + 1,
                    0,
                ];
            A.set(I, S * _ * L), T.set(m, w * _ * L);
            const U = [L, L, L, L, L, L];
            b.set(U, x * _ * L);
        }
        const P = new xn();
        P.setAttribute('position', new qn(A, S)),
            P.setAttribute('uv', new qn(T, w)),
            P.setAttribute('faceIndex', new qn(b, x)),
            e.push(P),
            i > lp && i--;
    }
    return { lodPlanes: e, sizeLods: t, sigmas: n };
}
function u2(r, e, t) {
    const n = new Ji(r, e, t);
    return (
        (n.texture.mapping = Hp),
        (n.texture.name = 'PMREM.cubeUv'),
        (n.scissorTest = !0),
        n
    );
}
function Ey(r, e, t, n, i) {
    r.viewport.set(e, t, n, i), r.scissor.set(e, t, n, i);
}
function j9(r, e, t) {
    const n = new Float32Array(Xf),
        i = new re(0, 1, 0);
    return new Qi({
        name: 'SphericalGaussianBlur',
        defines: {
            n: Xf,
            CUBEUV_TEXEL_WIDTH: 1 / e,
            CUBEUV_TEXEL_HEIGHT: 1 / t,
            CUBEUV_MAX_MIP: `${r}.0`,
        },
        uniforms: {
            envMap: { value: null },
            samples: { value: 1 },
            weights: { value: n },
            latitudinal: { value: !1 },
            dTheta: { value: 0 },
            mipInt: { value: 0 },
            poleAxis: { value: i },
        },
        vertexShader: IT(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,
        blending: Al,
        depthTest: !1,
        depthWrite: !1,
    });
}
function c2() {
    return new Qi({
        name: 'EquirectangularToCubeUV',
        uniforms: { envMap: { value: null } },
        vertexShader: IT(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,
        blending: Al,
        depthTest: !1,
        depthWrite: !1,
    });
}
function f2() {
    return new Qi({
        name: 'CubemapToCubeUV',
        uniforms: { envMap: { value: null }, flipEnvMap: { value: -1 } },
        vertexShader: IT(),
        fragmentShader: `

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,
        blending: Al,
        depthTest: !1,
        depthWrite: !1,
    });
}
function IT() {
    return `

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`;
}
function X9(r) {
    let e = new WeakMap(),
        t = null;
    function n(a) {
        if (a && a.isTexture) {
            const l = a.mapping,
                u = l === Rp || l === d0,
                f = l === Pl || l === Ic;
            if (u || f) {
                let d = e.get(a);
                const m = d !== void 0 ? d.texture.pmremVersion : 0;
                if (a.isRenderTargetTexture && a.pmremVersion !== m)
                    return (
                        t === null && (t = new PM(r)),
                        (d = u
                            ? t.fromEquirectangular(a, d)
                            : t.fromCubemap(a, d)),
                        (d.texture.pmremVersion = a.pmremVersion),
                        e.set(a, d),
                        d.texture
                    );
                if (d !== void 0) return d.texture;
                {
                    const v = a.image;
                    return (u && v && v.height > 0) || (f && v && i(v))
                        ? (t === null && (t = new PM(r)),
                          (d = u ? t.fromEquirectangular(a) : t.fromCubemap(a)),
                          (d.texture.pmremVersion = a.pmremVersion),
                          e.set(a, d),
                          a.addEventListener('dispose', s),
                          d.texture)
                        : null;
                }
            }
        }
        return a;
    }
    function i(a) {
        let l = 0;
        const u = 6;
        for (let f = 0; f < u; f++) a[f] !== void 0 && l++;
        return l === u;
    }
    function s(a) {
        const l = a.target;
        l.removeEventListener('dispose', s);
        const u = e.get(l);
        u !== void 0 && (e.delete(l), u.dispose());
    }
    function o() {
        (e = new WeakMap()), t !== null && (t.dispose(), (t = null));
    }
    return { get: n, dispose: o };
}
function Y9(r) {
    const e = {};
    function t(n) {
        if (e[n] !== void 0) return e[n];
        let i;
        switch (n) {
            case 'WEBGL_depth_texture':
                i =
                    r.getExtension('WEBGL_depth_texture') ||
                    r.getExtension('MOZ_WEBGL_depth_texture') ||
                    r.getExtension('WEBKIT_WEBGL_depth_texture');
                break;
            case 'EXT_texture_filter_anisotropic':
                i =
                    r.getExtension('EXT_texture_filter_anisotropic') ||
                    r.getExtension('MOZ_EXT_texture_filter_anisotropic') ||
                    r.getExtension('WEBKIT_EXT_texture_filter_anisotropic');
                break;
            case 'WEBGL_compressed_texture_s3tc':
                i =
                    r.getExtension('WEBGL_compressed_texture_s3tc') ||
                    r.getExtension('MOZ_WEBGL_compressed_texture_s3tc') ||
                    r.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');
                break;
            case 'WEBGL_compressed_texture_pvrtc':
                i =
                    r.getExtension('WEBGL_compressed_texture_pvrtc') ||
                    r.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');
                break;
            default:
                i = r.getExtension(n);
        }
        return (e[n] = i), i;
    }
    return {
        has: function (n) {
            return t(n) !== null;
        },
        init: function () {
            t('EXT_color_buffer_float'),
                t('WEBGL_clip_cull_distance'),
                t('OES_texture_float_linear'),
                t('EXT_color_buffer_half_float'),
                t('WEBGL_multisampled_render_to_texture'),
                t('WEBGL_render_shared_exponent');
        },
        get: function (n) {
            const i = t(n);
            return (
                i === null &&
                    bT(
                        'THREE.WebGLRenderer: ' +
                            n +
                            ' extension not supported.'
                    ),
                i
            );
        },
    };
}
function q9(r, e, t, n) {
    const i = {},
        s = new WeakMap();
    function o(d) {
        const m = d.target;
        m.index !== null && e.remove(m.index);
        for (const _ in m.attributes) e.remove(m.attributes[_]);
        for (const _ in m.morphAttributes) {
            const S = m.morphAttributes[_];
            for (let w = 0, x = S.length; w < x; w++) e.remove(S[w]);
        }
        m.removeEventListener('dispose', o), delete i[m.id];
        const v = s.get(m);
        v && (e.remove(v), s.delete(m)),
            n.releaseStatesOfGeometry(m),
            m.isInstancedBufferGeometry === !0 && delete m._maxInstanceCount,
            t.memory.geometries--;
    }
    function a(d, m) {
        return (
            i[m.id] === !0 ||
                (m.addEventListener('dispose', o),
                (i[m.id] = !0),
                t.memory.geometries++),
            m
        );
    }
    function l(d) {
        const m = d.attributes;
        for (const _ in m) e.update(m[_], r.ARRAY_BUFFER);
        const v = d.morphAttributes;
        for (const _ in v) {
            const S = v[_];
            for (let w = 0, x = S.length; w < x; w++)
                e.update(S[w], r.ARRAY_BUFFER);
        }
    }
    function u(d) {
        const m = [],
            v = d.index,
            _ = d.attributes.position;
        let S = 0;
        if (v !== null) {
            const A = v.array;
            S = v.version;
            for (let T = 0, b = A.length; T < b; T += 3) {
                const P = A[T + 0],
                    L = A[T + 1],
                    D = A[T + 2];
                m.push(P, L, L, D, D, P);
            }
        } else if (_ !== void 0) {
            const A = _.array;
            S = _.version;
            for (let T = 0, b = A.length / 3 - 1; T < b; T += 3) {
                const P = T + 0,
                    L = T + 1,
                    D = T + 2;
                m.push(P, L, L, D, D, P);
            }
        } else return;
        const w = new (dO(m) ? PT : RT)(m, 1);
        w.version = S;
        const x = s.get(d);
        x && e.remove(x), s.set(d, w);
    }
    function f(d) {
        const m = s.get(d);
        if (m) {
            const v = d.index;
            v !== null && m.version < v.version && u(d);
        } else u(d);
        return s.get(d);
    }
    return { get: a, update: l, getWireframeAttribute: f };
}
function K9(r, e, t) {
    let n;
    function i(m) {
        n = m;
    }
    let s, o;
    function a(m) {
        (s = m.type), (o = m.bytesPerElement);
    }
    function l(m, v) {
        r.drawElements(n, v, s, m * o), t.update(v, n, 1);
    }
    function u(m, v, _) {
        _ !== 0 &&
            (r.drawElementsInstanced(n, v, s, m * o, _), t.update(v, n, _));
    }
    function f(m, v, _) {
        if (_ === 0) return;
        e.get('WEBGL_multi_draw').multiDrawElementsWEBGL(n, v, 0, s, m, 0, _);
        let w = 0;
        for (let x = 0; x < _; x++) w += v[x];
        t.update(w, n, 1);
    }
    function d(m, v, _, S) {
        if (_ === 0) return;
        const w = e.get('WEBGL_multi_draw');
        if (w === null)
            for (let x = 0; x < m.length; x++) u(m[x] / o, v[x], S[x]);
        else {
            w.multiDrawElementsInstancedWEBGL(n, v, 0, s, m, 0, S, 0, _);
            let x = 0;
            for (let A = 0; A < _; A++) x += v[A];
            for (let A = 0; A < S.length; A++) t.update(x, n, S[A]);
        }
    }
    (this.setMode = i),
        (this.setIndex = a),
        (this.render = l),
        (this.renderInstances = u),
        (this.renderMultiDraw = f),
        (this.renderMultiDrawInstances = d);
}
function Z9(r) {
    const e = { geometries: 0, textures: 0 },
        t = { frame: 0, calls: 0, triangles: 0, points: 0, lines: 0 };
    function n(s, o, a) {
        switch ((t.calls++, o)) {
            case r.TRIANGLES:
                t.triangles += a * (s / 3);
                break;
            case r.LINES:
                t.lines += a * (s / 2);
                break;
            case r.LINE_STRIP:
                t.lines += a * (s - 1);
                break;
            case r.LINE_LOOP:
                t.lines += a * s;
                break;
            case r.POINTS:
                t.points += a * s;
                break;
            default:
                console.error('THREE.WebGLInfo: Unknown draw mode:', o);
                break;
        }
    }
    function i() {
        (t.calls = 0), (t.triangles = 0), (t.points = 0), (t.lines = 0);
    }
    return {
        memory: e,
        render: t,
        programs: null,
        autoReset: !0,
        reset: i,
        update: n,
    };
}
function $9(r, e, t) {
    const n = new WeakMap(),
        i = new En();
    function s(o, a, l) {
        const u = o.morphTargetInfluences,
            f =
                a.morphAttributes.position ||
                a.morphAttributes.normal ||
                a.morphAttributes.color,
            d = f !== void 0 ? f.length : 0;
        let m = n.get(a);
        if (m === void 0 || m.count !== d) {
            let I = function () {
                D.dispose(), n.delete(a), a.removeEventListener('dispose', I);
            };
            m !== void 0 && m.texture.dispose();
            const v = a.morphAttributes.position !== void 0,
                _ = a.morphAttributes.normal !== void 0,
                S = a.morphAttributes.color !== void 0,
                w = a.morphAttributes.position || [],
                x = a.morphAttributes.normal || [],
                A = a.morphAttributes.color || [];
            let T = 0;
            v === !0 && (T = 1), _ === !0 && (T = 2), S === !0 && (T = 3);
            let b = a.attributes.position.count * T,
                P = 1;
            b > e.maxTextureSize &&
                ((P = Math.ceil(b / e.maxTextureSize)), (b = e.maxTextureSize));
            const L = new Float32Array(b * P * 4 * d),
                D = new Vx(L, b, P, d);
            (D.type = ri), (D.needsUpdate = !0);
            const O = T * 4;
            for (let U = 0; U < d; U++) {
                const H = w[U],
                    W = x[U],
                    q = A[U],
                    K = b * P * 4 * U;
                for (let le = 0; le < H.count; le++) {
                    const ee = le * O;
                    v === !0 &&
                        (i.fromBufferAttribute(H, le),
                        (L[K + ee + 0] = i.x),
                        (L[K + ee + 1] = i.y),
                        (L[K + ee + 2] = i.z),
                        (L[K + ee + 3] = 0)),
                        _ === !0 &&
                            (i.fromBufferAttribute(W, le),
                            (L[K + ee + 4] = i.x),
                            (L[K + ee + 5] = i.y),
                            (L[K + ee + 6] = i.z),
                            (L[K + ee + 7] = 0)),
                        S === !0 &&
                            (i.fromBufferAttribute(q, le),
                            (L[K + ee + 8] = i.x),
                            (L[K + ee + 9] = i.y),
                            (L[K + ee + 10] = i.z),
                            (L[K + ee + 11] = q.itemSize === 4 ? i.w : 1));
                }
            }
            (m = { count: d, texture: D, size: new tt(b, P) }),
                n.set(a, m),
                a.addEventListener('dispose', I);
        }
        if (o.isInstancedMesh === !0 && o.morphTexture !== null)
            l.getUniforms().setValue(r, 'morphTexture', o.morphTexture, t);
        else {
            let v = 0;
            for (let S = 0; S < u.length; S++) v += u[S];
            const _ = a.morphTargetsRelative ? 1 : 1 - v;
            l.getUniforms().setValue(r, 'morphTargetBaseInfluence', _),
                l.getUniforms().setValue(r, 'morphTargetInfluences', u);
        }
        l.getUniforms().setValue(r, 'morphTargetsTexture', m.texture, t),
            l.getUniforms().setValue(r, 'morphTargetsTextureSize', m.size);
    }
    return { update: s };
}
function J9(r, e, t, n) {
    let i = new WeakMap();
    function s(l) {
        const u = n.render.frame,
            f = l.geometry,
            d = e.get(l, f);
        if (
            (i.get(d) !== u && (e.update(d), i.set(d, u)),
            l.isInstancedMesh &&
                (l.hasEventListener('dispose', a) === !1 &&
                    l.addEventListener('dispose', a),
                i.get(l) !== u &&
                    (t.update(l.instanceMatrix, r.ARRAY_BUFFER),
                    l.instanceColor !== null &&
                        t.update(l.instanceColor, r.ARRAY_BUFFER),
                    i.set(l, u))),
            l.isSkinnedMesh)
        ) {
            const m = l.skeleton;
            i.get(m) !== u && (m.update(), i.set(m, u));
        }
        return d;
    }
    function o() {
        i = new WeakMap();
    }
    function a(l) {
        const u = l.target;
        u.removeEventListener('dispose', a),
            t.remove(u.instanceMatrix),
            u.instanceColor !== null && t.remove(u.instanceColor);
    }
    return { update: s, dispose: o };
}
class Gx extends Vn {
    constructor(e, t, n, i, s, o, a, l, u, f = uh) {
        if (f !== uh && f !== mh)
            throw new Error(
                'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat'
            );
        n === void 0 && f === uh && (n = Ll),
            n === void 0 && f === mh && (n = ph),
            super(null, i, s, o, a, l, f, n, u),
            (this.isDepthTexture = !0),
            (this.image = { width: e, height: t }),
            (this.magFilter = a !== void 0 ? a : Fn),
            (this.minFilter = l !== void 0 ? l : Fn),
            (this.flipY = !1),
            (this.generateMipmaps = !1),
            (this.compareFunction = null);
    }
    copy(e) {
        return super.copy(e), (this.compareFunction = e.compareFunction), this;
    }
    toJSON(e) {
        const t = super.toJSON(e);
        return (
            this.compareFunction !== null &&
                (t.compareFunction = this.compareFunction),
            t
        );
    }
}
const SO = new Vn(),
    h2 = new Gx(1, 1),
    wO = new Vx(),
    MO = new CT(),
    EO = new q0(),
    d2 = [],
    p2 = [],
    m2 = new Float32Array(16),
    g2 = new Float32Array(9),
    v2 = new Float32Array(4);
function Wp(r, e, t) {
    const n = r[0];
    if (n <= 0 || n > 0) return r;
    const i = e * t;
    let s = d2[i];
    if ((s === void 0 && ((s = new Float32Array(i)), (d2[i] = s)), e !== 0)) {
        n.toArray(s, 0);
        for (let o = 1, a = 0; o !== e; ++o) (a += t), r[o].toArray(s, a);
    }
    return s;
}
function br(r, e) {
    if (r.length !== e.length) return !1;
    for (let t = 0, n = r.length; t < n; t++) if (r[t] !== e[t]) return !1;
    return !0;
}
function Cr(r, e) {
    for (let t = 0, n = e.length; t < n; t++) r[t] = e[t];
}
function Wx(r, e) {
    let t = p2[e];
    t === void 0 && ((t = new Int32Array(e)), (p2[e] = t));
    for (let n = 0; n !== e; ++n) t[n] = r.allocateTextureUnit();
    return t;
}
function Q9(r, e) {
    const t = this.cache;
    t[0] !== e && (r.uniform1f(this.addr, e), (t[0] = e));
}
function e7(r, e) {
    const t = this.cache;
    if (e.x !== void 0)
        (t[0] !== e.x || t[1] !== e.y) &&
            (r.uniform2f(this.addr, e.x, e.y), (t[0] = e.x), (t[1] = e.y));
    else {
        if (br(t, e)) return;
        r.uniform2fv(this.addr, e), Cr(t, e);
    }
}
function t7(r, e) {
    const t = this.cache;
    if (e.x !== void 0)
        (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) &&
            (r.uniform3f(this.addr, e.x, e.y, e.z),
            (t[0] = e.x),
            (t[1] = e.y),
            (t[2] = e.z));
    else if (e.r !== void 0)
        (t[0] !== e.r || t[1] !== e.g || t[2] !== e.b) &&
            (r.uniform3f(this.addr, e.r, e.g, e.b),
            (t[0] = e.r),
            (t[1] = e.g),
            (t[2] = e.b));
    else {
        if (br(t, e)) return;
        r.uniform3fv(this.addr, e), Cr(t, e);
    }
}
function n7(r, e) {
    const t = this.cache;
    if (e.x !== void 0)
        (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) &&
            (r.uniform4f(this.addr, e.x, e.y, e.z, e.w),
            (t[0] = e.x),
            (t[1] = e.y),
            (t[2] = e.z),
            (t[3] = e.w));
    else {
        if (br(t, e)) return;
        r.uniform4fv(this.addr, e), Cr(t, e);
    }
}
function i7(r, e) {
    const t = this.cache,
        n = e.elements;
    if (n === void 0) {
        if (br(t, e)) return;
        r.uniformMatrix2fv(this.addr, !1, e), Cr(t, e);
    } else {
        if (br(t, n)) return;
        v2.set(n), r.uniformMatrix2fv(this.addr, !1, v2), Cr(t, n);
    }
}
function r7(r, e) {
    const t = this.cache,
        n = e.elements;
    if (n === void 0) {
        if (br(t, e)) return;
        r.uniformMatrix3fv(this.addr, !1, e), Cr(t, e);
    } else {
        if (br(t, n)) return;
        g2.set(n), r.uniformMatrix3fv(this.addr, !1, g2), Cr(t, n);
    }
}
function s7(r, e) {
    const t = this.cache,
        n = e.elements;
    if (n === void 0) {
        if (br(t, e)) return;
        r.uniformMatrix4fv(this.addr, !1, e), Cr(t, e);
    } else {
        if (br(t, n)) return;
        m2.set(n), r.uniformMatrix4fv(this.addr, !1, m2), Cr(t, n);
    }
}
function o7(r, e) {
    const t = this.cache;
    t[0] !== e && (r.uniform1i(this.addr, e), (t[0] = e));
}
function a7(r, e) {
    const t = this.cache;
    if (e.x !== void 0)
        (t[0] !== e.x || t[1] !== e.y) &&
            (r.uniform2i(this.addr, e.x, e.y), (t[0] = e.x), (t[1] = e.y));
    else {
        if (br(t, e)) return;
        r.uniform2iv(this.addr, e), Cr(t, e);
    }
}
function l7(r, e) {
    const t = this.cache;
    if (e.x !== void 0)
        (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) &&
            (r.uniform3i(this.addr, e.x, e.y, e.z),
            (t[0] = e.x),
            (t[1] = e.y),
            (t[2] = e.z));
    else {
        if (br(t, e)) return;
        r.uniform3iv(this.addr, e), Cr(t, e);
    }
}
function u7(r, e) {
    const t = this.cache;
    if (e.x !== void 0)
        (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) &&
            (r.uniform4i(this.addr, e.x, e.y, e.z, e.w),
            (t[0] = e.x),
            (t[1] = e.y),
            (t[2] = e.z),
            (t[3] = e.w));
    else {
        if (br(t, e)) return;
        r.uniform4iv(this.addr, e), Cr(t, e);
    }
}
function c7(r, e) {
    const t = this.cache;
    t[0] !== e && (r.uniform1ui(this.addr, e), (t[0] = e));
}
function f7(r, e) {
    const t = this.cache;
    if (e.x !== void 0)
        (t[0] !== e.x || t[1] !== e.y) &&
            (r.uniform2ui(this.addr, e.x, e.y), (t[0] = e.x), (t[1] = e.y));
    else {
        if (br(t, e)) return;
        r.uniform2uiv(this.addr, e), Cr(t, e);
    }
}
function h7(r, e) {
    const t = this.cache;
    if (e.x !== void 0)
        (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z) &&
            (r.uniform3ui(this.addr, e.x, e.y, e.z),
            (t[0] = e.x),
            (t[1] = e.y),
            (t[2] = e.z));
    else {
        if (br(t, e)) return;
        r.uniform3uiv(this.addr, e), Cr(t, e);
    }
}
function d7(r, e) {
    const t = this.cache;
    if (e.x !== void 0)
        (t[0] !== e.x || t[1] !== e.y || t[2] !== e.z || t[3] !== e.w) &&
            (r.uniform4ui(this.addr, e.x, e.y, e.z, e.w),
            (t[0] = e.x),
            (t[1] = e.y),
            (t[2] = e.z),
            (t[3] = e.w));
    else {
        if (br(t, e)) return;
        r.uniform4uiv(this.addr, e), Cr(t, e);
    }
}
function p7(r, e, t) {
    const n = this.cache,
        i = t.allocateTextureUnit();
    n[0] !== i && (r.uniform1i(this.addr, i), (n[0] = i));
    let s;
    this.type === r.SAMPLER_2D_SHADOW
        ? ((h2.compareFunction = ET), (s = h2))
        : (s = SO),
        t.setTexture2D(e || s, i);
}
function m7(r, e, t) {
    const n = this.cache,
        i = t.allocateTextureUnit();
    n[0] !== i && (r.uniform1i(this.addr, i), (n[0] = i)),
        t.setTexture3D(e || MO, i);
}
function g7(r, e, t) {
    const n = this.cache,
        i = t.allocateTextureUnit();
    n[0] !== i && (r.uniform1i(this.addr, i), (n[0] = i)),
        t.setTextureCube(e || EO, i);
}
function v7(r, e, t) {
    const n = this.cache,
        i = t.allocateTextureUnit();
    n[0] !== i && (r.uniform1i(this.addr, i), (n[0] = i)),
        t.setTexture2DArray(e || wO, i);
}
function y7(r) {
    switch (r) {
        case 5126:
            return Q9;
        case 35664:
            return e7;
        case 35665:
            return t7;
        case 35666:
            return n7;
        case 35674:
            return i7;
        case 35675:
            return r7;
        case 35676:
            return s7;
        case 5124:
        case 35670:
            return o7;
        case 35667:
        case 35671:
            return a7;
        case 35668:
        case 35672:
            return l7;
        case 35669:
        case 35673:
            return u7;
        case 5125:
            return c7;
        case 36294:
            return f7;
        case 36295:
            return h7;
        case 36296:
            return d7;
        case 35678:
        case 36198:
        case 36298:
        case 36306:
        case 35682:
            return p7;
        case 35679:
        case 36299:
        case 36307:
            return m7;
        case 35680:
        case 36300:
        case 36308:
        case 36293:
            return g7;
        case 36289:
        case 36303:
        case 36311:
        case 36292:
            return v7;
    }
}
function _7(r, e) {
    r.uniform1fv(this.addr, e);
}
function x7(r, e) {
    const t = Wp(e, this.size, 2);
    r.uniform2fv(this.addr, t);
}
function S7(r, e) {
    const t = Wp(e, this.size, 3);
    r.uniform3fv(this.addr, t);
}
function w7(r, e) {
    const t = Wp(e, this.size, 4);
    r.uniform4fv(this.addr, t);
}
function M7(r, e) {
    const t = Wp(e, this.size, 4);
    r.uniformMatrix2fv(this.addr, !1, t);
}
function E7(r, e) {
    const t = Wp(e, this.size, 9);
    r.uniformMatrix3fv(this.addr, !1, t);
}
function T7(r, e) {
    const t = Wp(e, this.size, 16);
    r.uniformMatrix4fv(this.addr, !1, t);
}
function A7(r, e) {
    r.uniform1iv(this.addr, e);
}
function b7(r, e) {
    r.uniform2iv(this.addr, e);
}
function C7(r, e) {
    r.uniform3iv(this.addr, e);
}
function R7(r, e) {
    r.uniform4iv(this.addr, e);
}
function P7(r, e) {
    r.uniform1uiv(this.addr, e);
}
function L7(r, e) {
    r.uniform2uiv(this.addr, e);
}
function I7(r, e) {
    r.uniform3uiv(this.addr, e);
}
function D7(r, e) {
    r.uniform4uiv(this.addr, e);
}
function O7(r, e, t) {
    const n = this.cache,
        i = e.length,
        s = Wx(t, i);
    br(n, s) || (r.uniform1iv(this.addr, s), Cr(n, s));
    for (let o = 0; o !== i; ++o) t.setTexture2D(e[o] || SO, s[o]);
}
function U7(r, e, t) {
    const n = this.cache,
        i = e.length,
        s = Wx(t, i);
    br(n, s) || (r.uniform1iv(this.addr, s), Cr(n, s));
    for (let o = 0; o !== i; ++o) t.setTexture3D(e[o] || MO, s[o]);
}
function k7(r, e, t) {
    const n = this.cache,
        i = e.length,
        s = Wx(t, i);
    br(n, s) || (r.uniform1iv(this.addr, s), Cr(n, s));
    for (let o = 0; o !== i; ++o) t.setTextureCube(e[o] || EO, s[o]);
}
function N7(r, e, t) {
    const n = this.cache,
        i = e.length,
        s = Wx(t, i);
    br(n, s) || (r.uniform1iv(this.addr, s), Cr(n, s));
    for (let o = 0; o !== i; ++o) t.setTexture2DArray(e[o] || wO, s[o]);
}
function F7(r) {
    switch (r) {
        case 5126:
            return _7;
        case 35664:
            return x7;
        case 35665:
            return S7;
        case 35666:
            return w7;
        case 35674:
            return M7;
        case 35675:
            return E7;
        case 35676:
            return T7;
        case 5124:
        case 35670:
            return A7;
        case 35667:
        case 35671:
            return b7;
        case 35668:
        case 35672:
            return C7;
        case 35669:
        case 35673:
            return R7;
        case 5125:
            return P7;
        case 36294:
            return L7;
        case 36295:
            return I7;
        case 36296:
            return D7;
        case 35678:
        case 36198:
        case 36298:
        case 36306:
        case 35682:
            return O7;
        case 35679:
        case 36299:
        case 36307:
            return U7;
        case 35680:
        case 36300:
        case 36308:
        case 36293:
            return k7;
        case 36289:
        case 36303:
        case 36311:
        case 36292:
            return N7;
    }
}
class B7 {
    constructor(e, t, n) {
        (this.id = e),
            (this.addr = n),
            (this.cache = []),
            (this.type = t.type),
            (this.setValue = y7(t.type));
    }
}
class z7 {
    constructor(e, t, n) {
        (this.id = e),
            (this.addr = n),
            (this.cache = []),
            (this.type = t.type),
            (this.size = t.size),
            (this.setValue = F7(t.type));
    }
}
class V7 {
    constructor(e) {
        (this.id = e), (this.seq = []), (this.map = {});
    }
    setValue(e, t, n) {
        const i = this.seq;
        for (let s = 0, o = i.length; s !== o; ++s) {
            const a = i[s];
            a.setValue(e, t[a.id], n);
        }
    }
}
const GS = /(\w+)(\])?(\[|\.)?/g;
function y2(r, e) {
    r.seq.push(e), (r.map[e.id] = e);
}
function H7(r, e, t) {
    const n = r.name,
        i = n.length;
    for (GS.lastIndex = 0; ; ) {
        const s = GS.exec(n),
            o = GS.lastIndex;
        let a = s[1];
        const l = s[2] === ']',
            u = s[3];
        if ((l && (a = a | 0), u === void 0 || (u === '[' && o + 2 === i))) {
            y2(t, u === void 0 ? new B7(a, r, e) : new z7(a, r, e));
            break;
        } else {
            let d = t.map[a];
            d === void 0 && ((d = new V7(a)), y2(t, d)), (t = d);
        }
    }
}
class __ {
    constructor(e, t) {
        (this.seq = []), (this.map = {});
        const n = e.getProgramParameter(t, e.ACTIVE_UNIFORMS);
        for (let i = 0; i < n; ++i) {
            const s = e.getActiveUniform(t, i),
                o = e.getUniformLocation(t, s.name);
            H7(s, o, this);
        }
    }
    setValue(e, t, n, i) {
        const s = this.map[t];
        s !== void 0 && s.setValue(e, n, i);
    }
    setOptional(e, t, n) {
        const i = t[n];
        i !== void 0 && this.setValue(e, n, i);
    }
    static upload(e, t, n, i) {
        for (let s = 0, o = t.length; s !== o; ++s) {
            const a = t[s],
                l = n[a.id];
            l.needsUpdate !== !1 && a.setValue(e, l.value, i);
        }
    }
    static seqWithValue(e, t) {
        const n = [];
        for (let i = 0, s = e.length; i !== s; ++i) {
            const o = e[i];
            o.id in t && n.push(o);
        }
        return n;
    }
}
function _2(r, e, t) {
    const n = r.createShader(e);
    return r.shaderSource(n, t), r.compileShader(n), n;
}
const G7 = 37297;
let W7 = 0;
function j7(r, e) {
    const t = r.split(`
`),
        n = [],
        i = Math.max(e - 6, 0),
        s = Math.min(e + 6, t.length);
    for (let o = i; o < s; o++) {
        const a = o + 1;
        n.push(`${a === e ? '>' : ' '} ${a}: ${t[o]}`);
    }
    return n.join(`
`);
}
function X7(r) {
    const e = zn.getPrimaries(zn.workingColorSpace),
        t = zn.getPrimaries(r);
    let n;
    switch (
        (e === t
            ? (n = '')
            : e === x0 && t === _0
              ? (n = 'LinearDisplayP3ToLinearSRGB')
              : e === _0 && t === x0 && (n = 'LinearSRGBToLinearDisplayP3'),
        r)
    ) {
        case na:
        case X0:
            return [n, 'LinearTransferOETF'];
        case Mo:
        case zx:
            return [n, 'sRGBTransferOETF'];
        default:
            return (
                console.warn('THREE.WebGLProgram: Unsupported color space:', r),
                [n, 'LinearTransferOETF']
            );
    }
}
function x2(r, e, t) {
    const n = r.getShaderParameter(e, r.COMPILE_STATUS),
        i = r.getShaderInfoLog(e).trim();
    if (n && i === '') return '';
    const s = /ERROR: 0:(\d+)/.exec(i);
    if (s) {
        const o = parseInt(s[1]);
        return (
            t.toUpperCase() +
            `

` +
            i +
            `

` +
            j7(r.getShaderSource(e), o)
        );
    } else return i;
}
function Y7(r, e) {
    const t = X7(e);
    return `vec4 ${r}( vec4 value ) { return ${t[0]}( ${t[1]}( value ) ); }`;
}
function q7(r, e) {
    let t;
    switch (e) {
        case qD:
            t = 'Linear';
            break;
        case KD:
            t = 'Reinhard';
            break;
        case ZD:
            t = 'OptimizedCineon';
            break;
        case dT:
            t = 'ACESFilmic';
            break;
        case JD:
            t = 'AgX';
            break;
        case QD:
            t = 'Neutral';
            break;
        case $D:
            t = 'Custom';
            break;
        default:
            console.warn('THREE.WebGLProgram: Unsupported toneMapping:', e),
                (t = 'Linear');
    }
    return (
        'vec3 ' + r + '( vec3 color ) { return ' + t + 'ToneMapping( color ); }'
    );
}
function K7(r) {
    return [
        r.extensionClipCullDistance
            ? '#extension GL_ANGLE_clip_cull_distance : require'
            : '',
        r.extensionMultiDraw ? '#extension GL_ANGLE_multi_draw : require' : '',
    ].filter(Tg).join(`
`);
}
function Z7(r) {
    const e = [];
    for (const t in r) {
        const n = r[t];
        n !== !1 && e.push('#define ' + t + ' ' + n);
    }
    return e.join(`
`);
}
function $7(r, e) {
    const t = {},
        n = r.getProgramParameter(e, r.ACTIVE_ATTRIBUTES);
    for (let i = 0; i < n; i++) {
        const s = r.getActiveAttrib(e, i),
            o = s.name;
        let a = 1;
        s.type === r.FLOAT_MAT2 && (a = 2),
            s.type === r.FLOAT_MAT3 && (a = 3),
            s.type === r.FLOAT_MAT4 && (a = 4),
            (t[o] = {
                type: s.type,
                location: r.getAttribLocation(e, o),
                locationSize: a,
            });
    }
    return t;
}
function Tg(r) {
    return r !== '';
}
function S2(r, e) {
    const t =
        e.numSpotLightShadows +
        e.numSpotLightMaps -
        e.numSpotLightShadowsWithMaps;
    return r
        .replace(/NUM_DIR_LIGHTS/g, e.numDirLights)
        .replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights)
        .replace(/NUM_SPOT_LIGHT_MAPS/g, e.numSpotLightMaps)
        .replace(/NUM_SPOT_LIGHT_COORDS/g, t)
        .replace(/NUM_RECT_AREA_LIGHTS/g, e.numRectAreaLights)
        .replace(/NUM_POINT_LIGHTS/g, e.numPointLights)
        .replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights)
        .replace(/NUM_DIR_LIGHT_SHADOWS/g, e.numDirLightShadows)
        .replace(
            /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,
            e.numSpotLightShadowsWithMaps
        )
        .replace(/NUM_SPOT_LIGHT_SHADOWS/g, e.numSpotLightShadows)
        .replace(/NUM_POINT_LIGHT_SHADOWS/g, e.numPointLightShadows);
}
function w2(r, e) {
    return r
        .replace(/NUM_CLIPPING_PLANES/g, e.numClippingPlanes)
        .replace(
            /UNION_CLIPPING_PLANES/g,
            e.numClippingPlanes - e.numClipIntersection
        );
}
const J7 = /^[ \t]*#include +<([\w\d./]+)>/gm;
function LM(r) {
    return r.replace(J7, ej);
}
const Q7 = new Map();
function ej(r, e) {
    let t = gn[e];
    if (t === void 0) {
        const n = Q7.get(e);
        if (n !== void 0)
            (t = gn[n]),
                console.warn(
                    'THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',
                    e,
                    n
                );
        else throw new Error('Can not resolve #include <' + e + '>');
    }
    return LM(t);
}
const tj =
    /#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;
function M2(r) {
    return r.replace(tj, nj);
}
function nj(r, e, t, n) {
    let i = '';
    for (let s = parseInt(e); s < parseInt(t); s++)
        i += n
            .replace(/\[\s*i\s*\]/g, '[ ' + s + ' ]')
            .replace(/UNROLLED_LOOP_INDEX/g, s);
    return i;
}
function E2(r) {
    let e = `precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;
    return (
        r.precision === 'highp'
            ? (e += `
#define HIGH_PRECISION`)
            : r.precision === 'mediump'
              ? (e += `
#define MEDIUM_PRECISION`)
              : r.precision === 'lowp' &&
                (e += `
#define LOW_PRECISION`),
        e
    );
}
function ij(r) {
    let e = 'SHADOWMAP_TYPE_BASIC';
    return (
        r.shadowMapType === Ix
            ? (e = 'SHADOWMAP_TYPE_PCF')
            : r.shadowMapType === Ug
              ? (e = 'SHADOWMAP_TYPE_PCF_SOFT')
              : r.shadowMapType === Fa && (e = 'SHADOWMAP_TYPE_VSM'),
        e
    );
}
function rj(r) {
    let e = 'ENVMAP_TYPE_CUBE';
    if (r.envMap)
        switch (r.envMapMode) {
            case Pl:
            case Ic:
                e = 'ENVMAP_TYPE_CUBE';
                break;
            case Hp:
                e = 'ENVMAP_TYPE_CUBE_UV';
                break;
        }
    return e;
}
function sj(r) {
    let e = 'ENVMAP_MODE_REFLECTION';
    if (r.envMap)
        switch (r.envMapMode) {
            case Ic:
                e = 'ENVMAP_MODE_REFRACTION';
                break;
        }
    return e;
}
function oj(r) {
    let e = 'ENVMAP_BLENDING_NONE';
    if (r.envMap)
        switch (r.combine) {
            case G0:
                e = 'ENVMAP_BLENDING_MULTIPLY';
                break;
            case XD:
                e = 'ENVMAP_BLENDING_MIX';
                break;
            case YD:
                e = 'ENVMAP_BLENDING_ADD';
                break;
        }
    return e;
}
function aj(r) {
    const e = r.envMapCubeUVHeight;
    if (e === null) return null;
    const t = Math.log2(e) - 2,
        n = 1 / e;
    return {
        texelWidth: 1 / (3 * Math.max(Math.pow(2, t), 7 * 16)),
        texelHeight: n,
        maxMip: t,
    };
}
function lj(r, e, t, n) {
    const i = r.getContext(),
        s = t.defines;
    let o = t.vertexShader,
        a = t.fragmentShader;
    const l = ij(t),
        u = rj(t),
        f = sj(t),
        d = oj(t),
        m = aj(t),
        v = K7(t),
        _ = Z7(s),
        S = i.createProgram();
    let w,
        x,
        A = t.glslVersion
            ? '#version ' +
              t.glslVersion +
              `
`
            : '';
    t.isRawShaderMaterial
        ? ((w = [
              '#define SHADER_TYPE ' + t.shaderType,
              '#define SHADER_NAME ' + t.shaderName,
              _,
          ].filter(Tg).join(`
`)),
          w.length > 0 &&
              (w += `
`),
          (x = [
              '#define SHADER_TYPE ' + t.shaderType,
              '#define SHADER_NAME ' + t.shaderName,
              _,
          ].filter(Tg).join(`
`)),
          x.length > 0 &&
              (x += `
`))
        : ((w = [
              E2(t),
              '#define SHADER_TYPE ' + t.shaderType,
              '#define SHADER_NAME ' + t.shaderName,
              _,
              t.extensionClipCullDistance ? '#define USE_CLIP_DISTANCE' : '',
              t.batching ? '#define USE_BATCHING' : '',
              t.batchingColor ? '#define USE_BATCHING_COLOR' : '',
              t.instancing ? '#define USE_INSTANCING' : '',
              t.instancingColor ? '#define USE_INSTANCING_COLOR' : '',
              t.instancingMorph ? '#define USE_INSTANCING_MORPH' : '',
              t.useFog && t.fog ? '#define USE_FOG' : '',
              t.useFog && t.fogExp2 ? '#define FOG_EXP2' : '',
              t.map ? '#define USE_MAP' : '',
              t.envMap ? '#define USE_ENVMAP' : '',
              t.envMap ? '#define ' + f : '',
              t.lightMap ? '#define USE_LIGHTMAP' : '',
              t.aoMap ? '#define USE_AOMAP' : '',
              t.bumpMap ? '#define USE_BUMPMAP' : '',
              t.normalMap ? '#define USE_NORMALMAP' : '',
              t.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',
              t.normalMapTangentSpace
                  ? '#define USE_NORMALMAP_TANGENTSPACE'
                  : '',
              t.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',
              t.emissiveMap ? '#define USE_EMISSIVEMAP' : '',
              t.anisotropy ? '#define USE_ANISOTROPY' : '',
              t.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',
              t.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',
              t.clearcoatRoughnessMap
                  ? '#define USE_CLEARCOAT_ROUGHNESSMAP'
                  : '',
              t.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',
              t.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',
              t.iridescenceThicknessMap
                  ? '#define USE_IRIDESCENCE_THICKNESSMAP'
                  : '',
              t.specularMap ? '#define USE_SPECULARMAP' : '',
              t.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',
              t.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',
              t.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',
              t.metalnessMap ? '#define USE_METALNESSMAP' : '',
              t.alphaMap ? '#define USE_ALPHAMAP' : '',
              t.alphaHash ? '#define USE_ALPHAHASH' : '',
              t.transmission ? '#define USE_TRANSMISSION' : '',
              t.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',
              t.thicknessMap ? '#define USE_THICKNESSMAP' : '',
              t.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',
              t.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',
              t.mapUv ? '#define MAP_UV ' + t.mapUv : '',
              t.alphaMapUv ? '#define ALPHAMAP_UV ' + t.alphaMapUv : '',
              t.lightMapUv ? '#define LIGHTMAP_UV ' + t.lightMapUv : '',
              t.aoMapUv ? '#define AOMAP_UV ' + t.aoMapUv : '',
              t.emissiveMapUv
                  ? '#define EMISSIVEMAP_UV ' + t.emissiveMapUv
                  : '',
              t.bumpMapUv ? '#define BUMPMAP_UV ' + t.bumpMapUv : '',
              t.normalMapUv ? '#define NORMALMAP_UV ' + t.normalMapUv : '',
              t.displacementMapUv
                  ? '#define DISPLACEMENTMAP_UV ' + t.displacementMapUv
                  : '',
              t.metalnessMapUv
                  ? '#define METALNESSMAP_UV ' + t.metalnessMapUv
                  : '',
              t.roughnessMapUv
                  ? '#define ROUGHNESSMAP_UV ' + t.roughnessMapUv
                  : '',
              t.anisotropyMapUv
                  ? '#define ANISOTROPYMAP_UV ' + t.anisotropyMapUv
                  : '',
              t.clearcoatMapUv
                  ? '#define CLEARCOATMAP_UV ' + t.clearcoatMapUv
                  : '',
              t.clearcoatNormalMapUv
                  ? '#define CLEARCOAT_NORMALMAP_UV ' + t.clearcoatNormalMapUv
                  : '',
              t.clearcoatRoughnessMapUv
                  ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' +
                    t.clearcoatRoughnessMapUv
                  : '',
              t.iridescenceMapUv
                  ? '#define IRIDESCENCEMAP_UV ' + t.iridescenceMapUv
                  : '',
              t.iridescenceThicknessMapUv
                  ? '#define IRIDESCENCE_THICKNESSMAP_UV ' +
                    t.iridescenceThicknessMapUv
                  : '',
              t.sheenColorMapUv
                  ? '#define SHEEN_COLORMAP_UV ' + t.sheenColorMapUv
                  : '',
              t.sheenRoughnessMapUv
                  ? '#define SHEEN_ROUGHNESSMAP_UV ' + t.sheenRoughnessMapUv
                  : '',
              t.specularMapUv
                  ? '#define SPECULARMAP_UV ' + t.specularMapUv
                  : '',
              t.specularColorMapUv
                  ? '#define SPECULAR_COLORMAP_UV ' + t.specularColorMapUv
                  : '',
              t.specularIntensityMapUv
                  ? '#define SPECULAR_INTENSITYMAP_UV ' +
                    t.specularIntensityMapUv
                  : '',
              t.transmissionMapUv
                  ? '#define TRANSMISSIONMAP_UV ' + t.transmissionMapUv
                  : '',
              t.thicknessMapUv
                  ? '#define THICKNESSMAP_UV ' + t.thicknessMapUv
                  : '',
              t.vertexTangents && t.flatShading === !1
                  ? '#define USE_TANGENT'
                  : '',
              t.vertexColors ? '#define USE_COLOR' : '',
              t.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',
              t.vertexUv1s ? '#define USE_UV1' : '',
              t.vertexUv2s ? '#define USE_UV2' : '',
              t.vertexUv3s ? '#define USE_UV3' : '',
              t.pointsUvs ? '#define USE_POINTS_UV' : '',
              t.flatShading ? '#define FLAT_SHADED' : '',
              t.skinning ? '#define USE_SKINNING' : '',
              t.morphTargets ? '#define USE_MORPHTARGETS' : '',
              t.morphNormals && t.flatShading === !1
                  ? '#define USE_MORPHNORMALS'
                  : '',
              t.morphColors ? '#define USE_MORPHCOLORS' : '',
              t.morphTargetsCount > 0
                  ? '#define MORPHTARGETS_TEXTURE_STRIDE ' +
                    t.morphTextureStride
                  : '',
              t.morphTargetsCount > 0
                  ? '#define MORPHTARGETS_COUNT ' + t.morphTargetsCount
                  : '',
              t.doubleSided ? '#define DOUBLE_SIDED' : '',
              t.flipSided ? '#define FLIP_SIDED' : '',
              t.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',
              t.shadowMapEnabled ? '#define ' + l : '',
              t.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',
              t.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',
              t.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',
              'uniform mat4 modelMatrix;',
              'uniform mat4 modelViewMatrix;',
              'uniform mat4 projectionMatrix;',
              'uniform mat4 viewMatrix;',
              'uniform mat3 normalMatrix;',
              'uniform vec3 cameraPosition;',
              'uniform bool isOrthographic;',
              '#ifdef USE_INSTANCING',
              '	attribute mat4 instanceMatrix;',
              '#endif',
              '#ifdef USE_INSTANCING_COLOR',
              '	attribute vec3 instanceColor;',
              '#endif',
              '#ifdef USE_INSTANCING_MORPH',
              '	uniform sampler2D morphTexture;',
              '#endif',
              'attribute vec3 position;',
              'attribute vec3 normal;',
              'attribute vec2 uv;',
              '#ifdef USE_UV1',
              '	attribute vec2 uv1;',
              '#endif',
              '#ifdef USE_UV2',
              '	attribute vec2 uv2;',
              '#endif',
              '#ifdef USE_UV3',
              '	attribute vec2 uv3;',
              '#endif',
              '#ifdef USE_TANGENT',
              '	attribute vec4 tangent;',
              '#endif',
              '#if defined( USE_COLOR_ALPHA )',
              '	attribute vec4 color;',
              '#elif defined( USE_COLOR )',
              '	attribute vec3 color;',
              '#endif',
              '#ifdef USE_SKINNING',
              '	attribute vec4 skinIndex;',
              '	attribute vec4 skinWeight;',
              '#endif',
              `
`,
          ].filter(Tg).join(`
`)),
          (x = [
              E2(t),
              '#define SHADER_TYPE ' + t.shaderType,
              '#define SHADER_NAME ' + t.shaderName,
              _,
              t.useFog && t.fog ? '#define USE_FOG' : '',
              t.useFog && t.fogExp2 ? '#define FOG_EXP2' : '',
              t.alphaToCoverage ? '#define ALPHA_TO_COVERAGE' : '',
              t.map ? '#define USE_MAP' : '',
              t.matcap ? '#define USE_MATCAP' : '',
              t.envMap ? '#define USE_ENVMAP' : '',
              t.envMap ? '#define ' + u : '',
              t.envMap ? '#define ' + f : '',
              t.envMap ? '#define ' + d : '',
              m ? '#define CUBEUV_TEXEL_WIDTH ' + m.texelWidth : '',
              m ? '#define CUBEUV_TEXEL_HEIGHT ' + m.texelHeight : '',
              m ? '#define CUBEUV_MAX_MIP ' + m.maxMip + '.0' : '',
              t.lightMap ? '#define USE_LIGHTMAP' : '',
              t.aoMap ? '#define USE_AOMAP' : '',
              t.bumpMap ? '#define USE_BUMPMAP' : '',
              t.normalMap ? '#define USE_NORMALMAP' : '',
              t.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',
              t.normalMapTangentSpace
                  ? '#define USE_NORMALMAP_TANGENTSPACE'
                  : '',
              t.emissiveMap ? '#define USE_EMISSIVEMAP' : '',
              t.anisotropy ? '#define USE_ANISOTROPY' : '',
              t.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',
              t.clearcoat ? '#define USE_CLEARCOAT' : '',
              t.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',
              t.clearcoatRoughnessMap
                  ? '#define USE_CLEARCOAT_ROUGHNESSMAP'
                  : '',
              t.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',
              t.dispersion ? '#define USE_DISPERSION' : '',
              t.iridescence ? '#define USE_IRIDESCENCE' : '',
              t.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',
              t.iridescenceThicknessMap
                  ? '#define USE_IRIDESCENCE_THICKNESSMAP'
                  : '',
              t.specularMap ? '#define USE_SPECULARMAP' : '',
              t.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',
              t.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',
              t.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',
              t.metalnessMap ? '#define USE_METALNESSMAP' : '',
              t.alphaMap ? '#define USE_ALPHAMAP' : '',
              t.alphaTest ? '#define USE_ALPHATEST' : '',
              t.alphaHash ? '#define USE_ALPHAHASH' : '',
              t.sheen ? '#define USE_SHEEN' : '',
              t.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',
              t.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',
              t.transmission ? '#define USE_TRANSMISSION' : '',
              t.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',
              t.thicknessMap ? '#define USE_THICKNESSMAP' : '',
              t.vertexTangents && t.flatShading === !1
                  ? '#define USE_TANGENT'
                  : '',
              t.vertexColors || t.instancingColor || t.batchingColor
                  ? '#define USE_COLOR'
                  : '',
              t.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',
              t.vertexUv1s ? '#define USE_UV1' : '',
              t.vertexUv2s ? '#define USE_UV2' : '',
              t.vertexUv3s ? '#define USE_UV3' : '',
              t.pointsUvs ? '#define USE_POINTS_UV' : '',
              t.gradientMap ? '#define USE_GRADIENTMAP' : '',
              t.flatShading ? '#define FLAT_SHADED' : '',
              t.doubleSided ? '#define DOUBLE_SIDED' : '',
              t.flipSided ? '#define FLIP_SIDED' : '',
              t.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',
              t.shadowMapEnabled ? '#define ' + l : '',
              t.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',
              t.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',
              t.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',
              t.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',
              'uniform mat4 viewMatrix;',
              'uniform vec3 cameraPosition;',
              'uniform bool isOrthographic;',
              t.toneMapping !== bl ? '#define TONE_MAPPING' : '',
              t.toneMapping !== bl ? gn.tonemapping_pars_fragment : '',
              t.toneMapping !== bl ? q7('toneMapping', t.toneMapping) : '',
              t.dithering ? '#define DITHERING' : '',
              t.opaque ? '#define OPAQUE' : '',
              gn.colorspace_pars_fragment,
              Y7('linearToOutputTexel', t.outputColorSpace),
              t.useDepthPacking
                  ? '#define DEPTH_PACKING ' + t.depthPacking
                  : '',
              `
`,
          ].filter(Tg).join(`
`))),
        (o = LM(o)),
        (o = S2(o, t)),
        (o = w2(o, t)),
        (a = LM(a)),
        (a = S2(a, t)),
        (a = w2(a, t)),
        (o = M2(o)),
        (a = M2(a)),
        t.isRawShaderMaterial !== !0 &&
            ((A = `#version 300 es
`),
            (w =
                [
                    v,
                    '#define attribute in',
                    '#define varying out',
                    '#define texture2D texture',
                ].join(`
`) +
                `
` +
                w),
            (x =
                [
                    '#define varying in',
                    t.glslVersion === RM
                        ? ''
                        : 'layout(location = 0) out highp vec4 pc_fragColor;',
                    t.glslVersion === RM
                        ? ''
                        : '#define gl_FragColor pc_fragColor',
                    '#define gl_FragDepthEXT gl_FragDepth',
                    '#define texture2D texture',
                    '#define textureCube texture',
                    '#define texture2DProj textureProj',
                    '#define texture2DLodEXT textureLod',
                    '#define texture2DProjLodEXT textureProjLod',
                    '#define textureCubeLodEXT textureLod',
                    '#define texture2DGradEXT textureGrad',
                    '#define texture2DProjGradEXT textureProjGrad',
                    '#define textureCubeGradEXT textureGrad',
                ].join(`
`) +
                `
` +
                x));
    const T = A + w + o,
        b = A + x + a,
        P = _2(i, i.VERTEX_SHADER, T),
        L = _2(i, i.FRAGMENT_SHADER, b);
    i.attachShader(S, P),
        i.attachShader(S, L),
        t.index0AttributeName !== void 0
            ? i.bindAttribLocation(S, 0, t.index0AttributeName)
            : t.morphTargets === !0 && i.bindAttribLocation(S, 0, 'position'),
        i.linkProgram(S);
    function D(H) {
        if (r.debug.checkShaderErrors) {
            const W = i.getProgramInfoLog(S).trim(),
                q = i.getShaderInfoLog(P).trim(),
                K = i.getShaderInfoLog(L).trim();
            let le = !0,
                ee = !0;
            if (i.getProgramParameter(S, i.LINK_STATUS) === !1)
                if (((le = !1), typeof r.debug.onShaderError == 'function'))
                    r.debug.onShaderError(i, S, P, L);
                else {
                    const de = x2(i, P, 'vertex'),
                        Z = x2(i, L, 'fragment');
                    console.error(
                        'THREE.WebGLProgram: Shader Error ' +
                            i.getError() +
                            ' - VALIDATE_STATUS ' +
                            i.getProgramParameter(S, i.VALIDATE_STATUS) +
                            `

Material Name: ` +
                            H.name +
                            `
Material Type: ` +
                            H.type +
                            `

Program Info Log: ` +
                            W +
                            `
` +
                            de +
                            `
` +
                            Z
                    );
                }
            else
                W !== ''
                    ? console.warn('THREE.WebGLProgram: Program Info Log:', W)
                    : (q === '' || K === '') && (ee = !1);
            ee &&
                (H.diagnostics = {
                    runnable: le,
                    programLog: W,
                    vertexShader: { log: q, prefix: w },
                    fragmentShader: { log: K, prefix: x },
                });
        }
        i.deleteShader(P),
            i.deleteShader(L),
            (O = new __(i, S)),
            (I = $7(i, S));
    }
    let O;
    this.getUniforms = function () {
        return O === void 0 && D(this), O;
    };
    let I;
    this.getAttributes = function () {
        return I === void 0 && D(this), I;
    };
    let U = t.rendererExtensionParallelShaderCompile === !1;
    return (
        (this.isReady = function () {
            return U === !1 && (U = i.getProgramParameter(S, G7)), U;
        }),
        (this.destroy = function () {
            n.releaseStatesOfProgram(this),
                i.deleteProgram(S),
                (this.program = void 0);
        }),
        (this.type = t.shaderType),
        (this.name = t.shaderName),
        (this.id = W7++),
        (this.cacheKey = e),
        (this.usedTimes = 1),
        (this.program = S),
        (this.vertexShader = P),
        (this.fragmentShader = L),
        this
    );
}
let uj = 0;
class cj {
    constructor() {
        (this.shaderCache = new Map()), (this.materialCache = new Map());
    }
    update(e) {
        const t = e.vertexShader,
            n = e.fragmentShader,
            i = this._getShaderStage(t),
            s = this._getShaderStage(n),
            o = this._getShaderCacheForMaterial(e);
        return (
            o.has(i) === !1 && (o.add(i), i.usedTimes++),
            o.has(s) === !1 && (o.add(s), s.usedTimes++),
            this
        );
    }
    remove(e) {
        const t = this.materialCache.get(e);
        for (const n of t)
            n.usedTimes--, n.usedTimes === 0 && this.shaderCache.delete(n.code);
        return this.materialCache.delete(e), this;
    }
    getVertexShaderID(e) {
        return this._getShaderStage(e.vertexShader).id;
    }
    getFragmentShaderID(e) {
        return this._getShaderStage(e.fragmentShader).id;
    }
    dispose() {
        this.shaderCache.clear(), this.materialCache.clear();
    }
    _getShaderCacheForMaterial(e) {
        const t = this.materialCache;
        let n = t.get(e);
        return n === void 0 && ((n = new Set()), t.set(e, n)), n;
    }
    _getShaderStage(e) {
        const t = this.shaderCache;
        let n = t.get(e);
        return n === void 0 && ((n = new fj(e)), t.set(e, n)), n;
    }
}
class fj {
    constructor(e) {
        (this.id = uj++), (this.code = e), (this.usedTimes = 0);
    }
}
function hj(r, e, t, n, i, s, o) {
    const a = new fh(),
        l = new cj(),
        u = new Set(),
        f = [],
        d = i.logarithmicDepthBuffer,
        m = i.vertexTextures;
    let v = i.precision;
    const _ = {
        MeshDepthMaterial: 'depth',
        MeshDistanceMaterial: 'distanceRGBA',
        MeshNormalMaterial: 'normal',
        MeshBasicMaterial: 'basic',
        MeshLambertMaterial: 'lambert',
        MeshPhongMaterial: 'phong',
        MeshToonMaterial: 'toon',
        MeshStandardMaterial: 'physical',
        MeshPhysicalMaterial: 'physical',
        MeshMatcapMaterial: 'matcap',
        LineBasicMaterial: 'basic',
        LineDashedMaterial: 'dashed',
        PointsMaterial: 'points',
        ShadowMaterial: 'shadow',
        SpriteMaterial: 'sprite',
    };
    function S(I) {
        return u.add(I), I === 0 ? 'uv' : `uv${I}`;
    }
    function w(I, U, H, W, q) {
        const K = W.fog,
            le = q.geometry,
            ee = I.isMeshStandardMaterial ? W.environment : null,
            de = (I.isMeshStandardMaterial ? t : e).get(I.envMap || ee),
            Z = de && de.mapping === Hp ? de.image.height : null,
            se = _[I.type];
        I.precision !== null &&
            ((v = i.getMaxPrecision(I.precision)),
            v !== I.precision &&
                console.warn(
                    'THREE.WebGLProgram.getParameters:',
                    I.precision,
                    'not supported, using',
                    v,
                    'instead.'
                ));
        const J =
                le.morphAttributes.position ||
                le.morphAttributes.normal ||
                le.morphAttributes.color,
            F = J !== void 0 ? J.length : 0;
        let $ = 0;
        le.morphAttributes.position !== void 0 && ($ = 1),
            le.morphAttributes.normal !== void 0 && ($ = 2),
            le.morphAttributes.color !== void 0 && ($ = 3);
        let fe, ne, ae, me;
        if (se) {
            const Mt = Ba[se];
            (fe = Mt.vertexShader), (ne = Mt.fragmentShader);
        } else
            (fe = I.vertexShader),
                (ne = I.fragmentShader),
                l.update(I),
                (ae = l.getVertexShaderID(I)),
                (me = l.getFragmentShaderID(I));
        const ge = r.getRenderTarget(),
            Ae = q.isInstancedMesh === !0,
            je = q.isBatchedMesh === !0,
            Qe = !!I.map,
            Ke = !!I.matcap,
            X = !!de,
            He = !!I.aoMap,
            Fe = !!I.lightMap,
            We = !!I.bumpMap,
            Re = !!I.normalMap,
            st = !!I.displacementMap,
            De = !!I.emissiveMap,
            Je = !!I.metalnessMap,
            te = !!I.roughnessMap,
            V = I.anisotropy > 0,
            Me = I.clearcoat > 0,
            Le = I.dispersion > 0,
            Ie = I.iridescence > 0,
            Ce = I.sheen > 0,
            gt = I.transmission > 0,
            Xe = V && !!I.anisotropyMap,
            Ze = Me && !!I.clearcoatMap,
            at = Me && !!I.clearcoatNormalMap,
            Ye = Me && !!I.clearcoatRoughnessMap,
            ot = Ie && !!I.iridescenceMap,
            kt = Ie && !!I.iridescenceThicknessMap,
            pt = Ce && !!I.sheenColorMap,
            et = Ce && !!I.sheenRoughnessMap,
            lt = !!I.specularMap,
            Ct = !!I.specularColorMap,
            Dt = !!I.specularIntensityMap,
            _e = gt && !!I.transmissionMap,
            nt = gt && !!I.thicknessMap,
            ve = !!I.gradientMap,
            Be = !!I.alphaMap,
            ht = I.alphaTest > 0,
            wt = !!I.alphaHash,
            Et = !!I.extensions;
        let Qt = bl;
        I.toneMapped &&
            (ge === null || ge.isXRRenderTarget === !0) &&
            (Qt = r.toneMapping);
        const en = {
            shaderID: se,
            shaderType: I.type,
            shaderName: I.name,
            vertexShader: fe,
            fragmentShader: ne,
            defines: I.defines,
            customVertexShaderID: ae,
            customFragmentShaderID: me,
            isRawShaderMaterial: I.isRawShaderMaterial === !0,
            glslVersion: I.glslVersion,
            precision: v,
            batching: je,
            batchingColor: je && q._colorsTexture !== null,
            instancing: Ae,
            instancingColor: Ae && q.instanceColor !== null,
            instancingMorph: Ae && q.morphTexture !== null,
            supportsVertexTextures: m,
            outputColorSpace:
                ge === null
                    ? r.outputColorSpace
                    : ge.isXRRenderTarget === !0
                      ? ge.texture.colorSpace
                      : na,
            alphaToCoverage: !!I.alphaToCoverage,
            map: Qe,
            matcap: Ke,
            envMap: X,
            envMapMode: X && de.mapping,
            envMapCubeUVHeight: Z,
            aoMap: He,
            lightMap: Fe,
            bumpMap: We,
            normalMap: Re,
            displacementMap: m && st,
            emissiveMap: De,
            normalMapObjectSpace: Re && I.normalMapType === sO,
            normalMapTangentSpace: Re && I.normalMapType === Bc,
            metalnessMap: Je,
            roughnessMap: te,
            anisotropy: V,
            anisotropyMap: Xe,
            clearcoat: Me,
            clearcoatMap: Ze,
            clearcoatNormalMap: at,
            clearcoatRoughnessMap: Ye,
            dispersion: Le,
            iridescence: Ie,
            iridescenceMap: ot,
            iridescenceThicknessMap: kt,
            sheen: Ce,
            sheenColorMap: pt,
            sheenRoughnessMap: et,
            specularMap: lt,
            specularColorMap: Ct,
            specularIntensityMap: Dt,
            transmission: gt,
            transmissionMap: _e,
            thicknessMap: nt,
            gradientMap: ve,
            opaque:
                I.transparent === !1 &&
                I.blending === lh &&
                I.alphaToCoverage === !1,
            alphaMap: Be,
            alphaTest: ht,
            alphaHash: wt,
            combine: I.combine,
            mapUv: Qe && S(I.map.channel),
            aoMapUv: He && S(I.aoMap.channel),
            lightMapUv: Fe && S(I.lightMap.channel),
            bumpMapUv: We && S(I.bumpMap.channel),
            normalMapUv: Re && S(I.normalMap.channel),
            displacementMapUv: st && S(I.displacementMap.channel),
            emissiveMapUv: De && S(I.emissiveMap.channel),
            metalnessMapUv: Je && S(I.metalnessMap.channel),
            roughnessMapUv: te && S(I.roughnessMap.channel),
            anisotropyMapUv: Xe && S(I.anisotropyMap.channel),
            clearcoatMapUv: Ze && S(I.clearcoatMap.channel),
            clearcoatNormalMapUv: at && S(I.clearcoatNormalMap.channel),
            clearcoatRoughnessMapUv: Ye && S(I.clearcoatRoughnessMap.channel),
            iridescenceMapUv: ot && S(I.iridescenceMap.channel),
            iridescenceThicknessMapUv:
                kt && S(I.iridescenceThicknessMap.channel),
            sheenColorMapUv: pt && S(I.sheenColorMap.channel),
            sheenRoughnessMapUv: et && S(I.sheenRoughnessMap.channel),
            specularMapUv: lt && S(I.specularMap.channel),
            specularColorMapUv: Ct && S(I.specularColorMap.channel),
            specularIntensityMapUv: Dt && S(I.specularIntensityMap.channel),
            transmissionMapUv: _e && S(I.transmissionMap.channel),
            thicknessMapUv: nt && S(I.thicknessMap.channel),
            alphaMapUv: Be && S(I.alphaMap.channel),
            vertexTangents: !!le.attributes.tangent && (Re || V),
            vertexColors: I.vertexColors,
            vertexAlphas:
                I.vertexColors === !0 &&
                !!le.attributes.color &&
                le.attributes.color.itemSize === 4,
            pointsUvs: q.isPoints === !0 && !!le.attributes.uv && (Qe || Be),
            fog: !!K,
            useFog: I.fog === !0,
            fogExp2: !!K && K.isFogExp2,
            flatShading: I.flatShading === !0,
            sizeAttenuation: I.sizeAttenuation === !0,
            logarithmicDepthBuffer: d,
            skinning: q.isSkinnedMesh === !0,
            morphTargets: le.morphAttributes.position !== void 0,
            morphNormals: le.morphAttributes.normal !== void 0,
            morphColors: le.morphAttributes.color !== void 0,
            morphTargetsCount: F,
            morphTextureStride: $,
            numDirLights: U.directional.length,
            numPointLights: U.point.length,
            numSpotLights: U.spot.length,
            numSpotLightMaps: U.spotLightMap.length,
            numRectAreaLights: U.rectArea.length,
            numHemiLights: U.hemi.length,
            numDirLightShadows: U.directionalShadowMap.length,
            numPointLightShadows: U.pointShadowMap.length,
            numSpotLightShadows: U.spotShadowMap.length,
            numSpotLightShadowsWithMaps: U.numSpotLightShadowsWithMaps,
            numLightProbes: U.numLightProbes,
            numClippingPlanes: o.numPlanes,
            numClipIntersection: o.numIntersection,
            dithering: I.dithering,
            shadowMapEnabled: r.shadowMap.enabled && H.length > 0,
            shadowMapType: r.shadowMap.type,
            toneMapping: Qt,
            decodeVideoTexture:
                Qe &&
                I.map.isVideoTexture === !0 &&
                zn.getTransfer(I.map.colorSpace) === ci,
            premultipliedAlpha: I.premultipliedAlpha,
            doubleSided: I.side === To,
            flipSided: I.side === ps,
            useDepthPacking: I.depthPacking >= 0,
            depthPacking: I.depthPacking || 0,
            index0AttributeName: I.index0AttributeName,
            extensionClipCullDistance:
                Et &&
                I.extensions.clipCullDistance === !0 &&
                n.has('WEBGL_clip_cull_distance'),
            extensionMultiDraw:
                ((Et && I.extensions.multiDraw === !0) || je) &&
                n.has('WEBGL_multi_draw'),
            rendererExtensionParallelShaderCompile: n.has(
                'KHR_parallel_shader_compile'
            ),
            customProgramCacheKey: I.customProgramCacheKey(),
        };
        return (
            (en.vertexUv1s = u.has(1)),
            (en.vertexUv2s = u.has(2)),
            (en.vertexUv3s = u.has(3)),
            u.clear(),
            en
        );
    }
    function x(I) {
        const U = [];
        if (
            (I.shaderID
                ? U.push(I.shaderID)
                : (U.push(I.customVertexShaderID),
                  U.push(I.customFragmentShaderID)),
            I.defines !== void 0)
        )
            for (const H in I.defines) U.push(H), U.push(I.defines[H]);
        return (
            I.isRawShaderMaterial === !1 &&
                (A(U, I), T(U, I), U.push(r.outputColorSpace)),
            U.push(I.customProgramCacheKey),
            U.join()
        );
    }
    function A(I, U) {
        I.push(U.precision),
            I.push(U.outputColorSpace),
            I.push(U.envMapMode),
            I.push(U.envMapCubeUVHeight),
            I.push(U.mapUv),
            I.push(U.alphaMapUv),
            I.push(U.lightMapUv),
            I.push(U.aoMapUv),
            I.push(U.bumpMapUv),
            I.push(U.normalMapUv),
            I.push(U.displacementMapUv),
            I.push(U.emissiveMapUv),
            I.push(U.metalnessMapUv),
            I.push(U.roughnessMapUv),
            I.push(U.anisotropyMapUv),
            I.push(U.clearcoatMapUv),
            I.push(U.clearcoatNormalMapUv),
            I.push(U.clearcoatRoughnessMapUv),
            I.push(U.iridescenceMapUv),
            I.push(U.iridescenceThicknessMapUv),
            I.push(U.sheenColorMapUv),
            I.push(U.sheenRoughnessMapUv),
            I.push(U.specularMapUv),
            I.push(U.specularColorMapUv),
            I.push(U.specularIntensityMapUv),
            I.push(U.transmissionMapUv),
            I.push(U.thicknessMapUv),
            I.push(U.combine),
            I.push(U.fogExp2),
            I.push(U.sizeAttenuation),
            I.push(U.morphTargetsCount),
            I.push(U.morphAttributeCount),
            I.push(U.numDirLights),
            I.push(U.numPointLights),
            I.push(U.numSpotLights),
            I.push(U.numSpotLightMaps),
            I.push(U.numHemiLights),
            I.push(U.numRectAreaLights),
            I.push(U.numDirLightShadows),
            I.push(U.numPointLightShadows),
            I.push(U.numSpotLightShadows),
            I.push(U.numSpotLightShadowsWithMaps),
            I.push(U.numLightProbes),
            I.push(U.shadowMapType),
            I.push(U.toneMapping),
            I.push(U.numClippingPlanes),
            I.push(U.numClipIntersection),
            I.push(U.depthPacking);
    }
    function T(I, U) {
        a.disableAll(),
            U.supportsVertexTextures && a.enable(0),
            U.instancing && a.enable(1),
            U.instancingColor && a.enable(2),
            U.instancingMorph && a.enable(3),
            U.matcap && a.enable(4),
            U.envMap && a.enable(5),
            U.normalMapObjectSpace && a.enable(6),
            U.normalMapTangentSpace && a.enable(7),
            U.clearcoat && a.enable(8),
            U.iridescence && a.enable(9),
            U.alphaTest && a.enable(10),
            U.vertexColors && a.enable(11),
            U.vertexAlphas && a.enable(12),
            U.vertexUv1s && a.enable(13),
            U.vertexUv2s && a.enable(14),
            U.vertexUv3s && a.enable(15),
            U.vertexTangents && a.enable(16),
            U.anisotropy && a.enable(17),
            U.alphaHash && a.enable(18),
            U.batching && a.enable(19),
            U.dispersion && a.enable(20),
            U.batchingColor && a.enable(21),
            I.push(a.mask),
            a.disableAll(),
            U.fog && a.enable(0),
            U.useFog && a.enable(1),
            U.flatShading && a.enable(2),
            U.logarithmicDepthBuffer && a.enable(3),
            U.skinning && a.enable(4),
            U.morphTargets && a.enable(5),
            U.morphNormals && a.enable(6),
            U.morphColors && a.enable(7),
            U.premultipliedAlpha && a.enable(8),
            U.shadowMapEnabled && a.enable(9),
            U.doubleSided && a.enable(10),
            U.flipSided && a.enable(11),
            U.useDepthPacking && a.enable(12),
            U.dithering && a.enable(13),
            U.transmission && a.enable(14),
            U.sheen && a.enable(15),
            U.opaque && a.enable(16),
            U.pointsUvs && a.enable(17),
            U.decodeVideoTexture && a.enable(18),
            U.alphaToCoverage && a.enable(19),
            I.push(a.mask);
    }
    function b(I) {
        const U = _[I.type];
        let H;
        if (U) {
            const W = Ba[U];
            H = Hx.clone(W.uniforms);
        } else H = I.uniforms;
        return H;
    }
    function P(I, U) {
        let H;
        for (let W = 0, q = f.length; W < q; W++) {
            const K = f[W];
            if (K.cacheKey === U) {
                (H = K), ++H.usedTimes;
                break;
            }
        }
        return H === void 0 && ((H = new lj(r, U, I, s)), f.push(H)), H;
    }
    function L(I) {
        if (--I.usedTimes === 0) {
            const U = f.indexOf(I);
            (f[U] = f[f.length - 1]), f.pop(), I.destroy();
        }
    }
    function D(I) {
        l.remove(I);
    }
    function O() {
        l.dispose();
    }
    return {
        getParameters: w,
        getProgramCacheKey: x,
        getUniforms: b,
        acquireProgram: P,
        releaseProgram: L,
        releaseShaderCache: D,
        programs: f,
        dispose: O,
    };
}
function dj() {
    let r = new WeakMap();
    function e(s) {
        let o = r.get(s);
        return o === void 0 && ((o = {}), r.set(s, o)), o;
    }
    function t(s) {
        r.delete(s);
    }
    function n(s, o, a) {
        r.get(s)[o] = a;
    }
    function i() {
        r = new WeakMap();
    }
    return { get: e, remove: t, update: n, dispose: i };
}
function pj(r, e) {
    return r.groupOrder !== e.groupOrder
        ? r.groupOrder - e.groupOrder
        : r.renderOrder !== e.renderOrder
          ? r.renderOrder - e.renderOrder
          : r.material.id !== e.material.id
            ? r.material.id - e.material.id
            : r.z !== e.z
              ? r.z - e.z
              : r.id - e.id;
}
function T2(r, e) {
    return r.groupOrder !== e.groupOrder
        ? r.groupOrder - e.groupOrder
        : r.renderOrder !== e.renderOrder
          ? r.renderOrder - e.renderOrder
          : r.z !== e.z
            ? e.z - r.z
            : r.id - e.id;
}
function A2() {
    const r = [];
    let e = 0;
    const t = [],
        n = [],
        i = [];
    function s() {
        (e = 0), (t.length = 0), (n.length = 0), (i.length = 0);
    }
    function o(d, m, v, _, S, w) {
        let x = r[e];
        return (
            x === void 0
                ? ((x = {
                      id: d.id,
                      object: d,
                      geometry: m,
                      material: v,
                      groupOrder: _,
                      renderOrder: d.renderOrder,
                      z: S,
                      group: w,
                  }),
                  (r[e] = x))
                : ((x.id = d.id),
                  (x.object = d),
                  (x.geometry = m),
                  (x.material = v),
                  (x.groupOrder = _),
                  (x.renderOrder = d.renderOrder),
                  (x.z = S),
                  (x.group = w)),
            e++,
            x
        );
    }
    function a(d, m, v, _, S, w) {
        const x = o(d, m, v, _, S, w);
        v.transmission > 0
            ? n.push(x)
            : v.transparent === !0
              ? i.push(x)
              : t.push(x);
    }
    function l(d, m, v, _, S, w) {
        const x = o(d, m, v, _, S, w);
        v.transmission > 0
            ? n.unshift(x)
            : v.transparent === !0
              ? i.unshift(x)
              : t.unshift(x);
    }
    function u(d, m) {
        t.length > 1 && t.sort(d || pj),
            n.length > 1 && n.sort(m || T2),
            i.length > 1 && i.sort(m || T2);
    }
    function f() {
        for (let d = e, m = r.length; d < m; d++) {
            const v = r[d];
            if (v.id === null) break;
            (v.id = null),
                (v.object = null),
                (v.geometry = null),
                (v.material = null),
                (v.group = null);
        }
    }
    return {
        opaque: t,
        transmissive: n,
        transparent: i,
        init: s,
        push: a,
        unshift: l,
        finish: f,
        sort: u,
    };
}
function mj() {
    let r = new WeakMap();
    function e(n, i) {
        const s = r.get(n);
        let o;
        return (
            s === void 0
                ? ((o = new A2()), r.set(n, [o]))
                : i >= s.length
                  ? ((o = new A2()), s.push(o))
                  : (o = s[i]),
            o
        );
    }
    function t() {
        r = new WeakMap();
    }
    return { get: e, dispose: t };
}
function gj() {
    const r = {};
    return {
        get: function (e) {
            if (r[e.id] !== void 0) return r[e.id];
            let t;
            switch (e.type) {
                case 'DirectionalLight':
                    t = { direction: new re(), color: new Tt() };
                    break;
                case 'SpotLight':
                    t = {
                        position: new re(),
                        direction: new re(),
                        color: new Tt(),
                        distance: 0,
                        coneCos: 0,
                        penumbraCos: 0,
                        decay: 0,
                    };
                    break;
                case 'PointLight':
                    t = {
                        position: new re(),
                        color: new Tt(),
                        distance: 0,
                        decay: 0,
                    };
                    break;
                case 'HemisphereLight':
                    t = {
                        direction: new re(),
                        skyColor: new Tt(),
                        groundColor: new Tt(),
                    };
                    break;
                case 'RectAreaLight':
                    t = {
                        color: new Tt(),
                        position: new re(),
                        halfWidth: new re(),
                        halfHeight: new re(),
                    };
                    break;
            }
            return (r[e.id] = t), t;
        },
    };
}
function vj() {
    const r = {};
    return {
        get: function (e) {
            if (r[e.id] !== void 0) return r[e.id];
            let t;
            switch (e.type) {
                case 'DirectionalLight':
                    t = {
                        shadowIntensity: 1,
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new tt(),
                    };
                    break;
                case 'SpotLight':
                    t = {
                        shadowIntensity: 1,
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new tt(),
                    };
                    break;
                case 'PointLight':
                    t = {
                        shadowIntensity: 1,
                        shadowBias: 0,
                        shadowNormalBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new tt(),
                        shadowCameraNear: 1,
                        shadowCameraFar: 1e3,
                    };
                    break;
            }
            return (r[e.id] = t), t;
        },
    };
}
let yj = 0;
function _j(r, e) {
    return (
        (e.castShadow ? 2 : 0) -
        (r.castShadow ? 2 : 0) +
        (e.map ? 1 : 0) -
        (r.map ? 1 : 0)
    );
}
function xj(r) {
    const e = new gj(),
        t = vj(),
        n = {
            version: 0,
            hash: {
                directionalLength: -1,
                pointLength: -1,
                spotLength: -1,
                rectAreaLength: -1,
                hemiLength: -1,
                numDirectionalShadows: -1,
                numPointShadows: -1,
                numSpotShadows: -1,
                numSpotMaps: -1,
                numLightProbes: -1,
            },
            ambient: [0, 0, 0],
            probe: [],
            directional: [],
            directionalShadow: [],
            directionalShadowMap: [],
            directionalShadowMatrix: [],
            spot: [],
            spotLightMap: [],
            spotShadow: [],
            spotShadowMap: [],
            spotLightMatrix: [],
            rectArea: [],
            rectAreaLTC1: null,
            rectAreaLTC2: null,
            point: [],
            pointShadow: [],
            pointShadowMap: [],
            pointShadowMatrix: [],
            hemi: [],
            numSpotLightShadowsWithMaps: 0,
            numLightProbes: 0,
        };
    for (let u = 0; u < 9; u++) n.probe.push(new re());
    const i = new re(),
        s = new qt(),
        o = new qt();
    function a(u) {
        let f = 0,
            d = 0,
            m = 0;
        for (let I = 0; I < 9; I++) n.probe[I].set(0, 0, 0);
        let v = 0,
            _ = 0,
            S = 0,
            w = 0,
            x = 0,
            A = 0,
            T = 0,
            b = 0,
            P = 0,
            L = 0,
            D = 0;
        u.sort(_j);
        for (let I = 0, U = u.length; I < U; I++) {
            const H = u[I],
                W = H.color,
                q = H.intensity,
                K = H.distance,
                le = H.shadow && H.shadow.map ? H.shadow.map.texture : null;
            if (H.isAmbientLight)
                (f += W.r * q), (d += W.g * q), (m += W.b * q);
            else if (H.isLightProbe) {
                for (let ee = 0; ee < 9; ee++)
                    n.probe[ee].addScaledVector(H.sh.coefficients[ee], q);
                D++;
            } else if (H.isDirectionalLight) {
                const ee = e.get(H);
                if (
                    (ee.color.copy(H.color).multiplyScalar(H.intensity),
                    H.castShadow)
                ) {
                    const de = H.shadow,
                        Z = t.get(H);
                    (Z.shadowIntensity = de.intensity),
                        (Z.shadowBias = de.bias),
                        (Z.shadowNormalBias = de.normalBias),
                        (Z.shadowRadius = de.radius),
                        (Z.shadowMapSize = de.mapSize),
                        (n.directionalShadow[v] = Z),
                        (n.directionalShadowMap[v] = le),
                        (n.directionalShadowMatrix[v] = H.shadow.matrix),
                        A++;
                }
                (n.directional[v] = ee), v++;
            } else if (H.isSpotLight) {
                const ee = e.get(H);
                ee.position.setFromMatrixPosition(H.matrixWorld),
                    ee.color.copy(W).multiplyScalar(q),
                    (ee.distance = K),
                    (ee.coneCos = Math.cos(H.angle)),
                    (ee.penumbraCos = Math.cos(H.angle * (1 - H.penumbra))),
                    (ee.decay = H.decay),
                    (n.spot[S] = ee);
                const de = H.shadow;
                if (
                    (H.map &&
                        ((n.spotLightMap[P] = H.map),
                        P++,
                        de.updateMatrices(H),
                        H.castShadow && L++),
                    (n.spotLightMatrix[S] = de.matrix),
                    H.castShadow)
                ) {
                    const Z = t.get(H);
                    (Z.shadowIntensity = de.intensity),
                        (Z.shadowBias = de.bias),
                        (Z.shadowNormalBias = de.normalBias),
                        (Z.shadowRadius = de.radius),
                        (Z.shadowMapSize = de.mapSize),
                        (n.spotShadow[S] = Z),
                        (n.spotShadowMap[S] = le),
                        b++;
                }
                S++;
            } else if (H.isRectAreaLight) {
                const ee = e.get(H);
                ee.color.copy(W).multiplyScalar(q),
                    ee.halfWidth.set(H.width * 0.5, 0, 0),
                    ee.halfHeight.set(0, H.height * 0.5, 0),
                    (n.rectArea[w] = ee),
                    w++;
            } else if (H.isPointLight) {
                const ee = e.get(H);
                if (
                    (ee.color.copy(H.color).multiplyScalar(H.intensity),
                    (ee.distance = H.distance),
                    (ee.decay = H.decay),
                    H.castShadow)
                ) {
                    const de = H.shadow,
                        Z = t.get(H);
                    (Z.shadowIntensity = de.intensity),
                        (Z.shadowBias = de.bias),
                        (Z.shadowNormalBias = de.normalBias),
                        (Z.shadowRadius = de.radius),
                        (Z.shadowMapSize = de.mapSize),
                        (Z.shadowCameraNear = de.camera.near),
                        (Z.shadowCameraFar = de.camera.far),
                        (n.pointShadow[_] = Z),
                        (n.pointShadowMap[_] = le),
                        (n.pointShadowMatrix[_] = H.shadow.matrix),
                        T++;
                }
                (n.point[_] = ee), _++;
            } else if (H.isHemisphereLight) {
                const ee = e.get(H);
                ee.skyColor.copy(H.color).multiplyScalar(q),
                    ee.groundColor.copy(H.groundColor).multiplyScalar(q),
                    (n.hemi[x] = ee),
                    x++;
            }
        }
        w > 0 &&
            (r.has('OES_texture_float_linear') === !0
                ? ((n.rectAreaLTC1 = bt.LTC_FLOAT_1),
                  (n.rectAreaLTC2 = bt.LTC_FLOAT_2))
                : ((n.rectAreaLTC1 = bt.LTC_HALF_1),
                  (n.rectAreaLTC2 = bt.LTC_HALF_2))),
            (n.ambient[0] = f),
            (n.ambient[1] = d),
            (n.ambient[2] = m);
        const O = n.hash;
        (O.directionalLength !== v ||
            O.pointLength !== _ ||
            O.spotLength !== S ||
            O.rectAreaLength !== w ||
            O.hemiLength !== x ||
            O.numDirectionalShadows !== A ||
            O.numPointShadows !== T ||
            O.numSpotShadows !== b ||
            O.numSpotMaps !== P ||
            O.numLightProbes !== D) &&
            ((n.directional.length = v),
            (n.spot.length = S),
            (n.rectArea.length = w),
            (n.point.length = _),
            (n.hemi.length = x),
            (n.directionalShadow.length = A),
            (n.directionalShadowMap.length = A),
            (n.pointShadow.length = T),
            (n.pointShadowMap.length = T),
            (n.spotShadow.length = b),
            (n.spotShadowMap.length = b),
            (n.directionalShadowMatrix.length = A),
            (n.pointShadowMatrix.length = T),
            (n.spotLightMatrix.length = b + P - L),
            (n.spotLightMap.length = P),
            (n.numSpotLightShadowsWithMaps = L),
            (n.numLightProbes = D),
            (O.directionalLength = v),
            (O.pointLength = _),
            (O.spotLength = S),
            (O.rectAreaLength = w),
            (O.hemiLength = x),
            (O.numDirectionalShadows = A),
            (O.numPointShadows = T),
            (O.numSpotShadows = b),
            (O.numSpotMaps = P),
            (O.numLightProbes = D),
            (n.version = yj++));
    }
    function l(u, f) {
        let d = 0,
            m = 0,
            v = 0,
            _ = 0,
            S = 0;
        const w = f.matrixWorldInverse;
        for (let x = 0, A = u.length; x < A; x++) {
            const T = u[x];
            if (T.isDirectionalLight) {
                const b = n.directional[d];
                b.direction.setFromMatrixPosition(T.matrixWorld),
                    i.setFromMatrixPosition(T.target.matrixWorld),
                    b.direction.sub(i),
                    b.direction.transformDirection(w),
                    d++;
            } else if (T.isSpotLight) {
                const b = n.spot[v];
                b.position.setFromMatrixPosition(T.matrixWorld),
                    b.position.applyMatrix4(w),
                    b.direction.setFromMatrixPosition(T.matrixWorld),
                    i.setFromMatrixPosition(T.target.matrixWorld),
                    b.direction.sub(i),
                    b.direction.transformDirection(w),
                    v++;
            } else if (T.isRectAreaLight) {
                const b = n.rectArea[_];
                b.position.setFromMatrixPosition(T.matrixWorld),
                    b.position.applyMatrix4(w),
                    o.identity(),
                    s.copy(T.matrixWorld),
                    s.premultiply(w),
                    o.extractRotation(s),
                    b.halfWidth.set(T.width * 0.5, 0, 0),
                    b.halfHeight.set(0, T.height * 0.5, 0),
                    b.halfWidth.applyMatrix4(o),
                    b.halfHeight.applyMatrix4(o),
                    _++;
            } else if (T.isPointLight) {
                const b = n.point[m];
                b.position.setFromMatrixPosition(T.matrixWorld),
                    b.position.applyMatrix4(w),
                    m++;
            } else if (T.isHemisphereLight) {
                const b = n.hemi[S];
                b.direction.setFromMatrixPosition(T.matrixWorld),
                    b.direction.transformDirection(w),
                    S++;
            }
        }
    }
    return { setup: a, setupView: l, state: n };
}
function b2(r) {
    const e = new xj(r),
        t = [],
        n = [];
    function i(f) {
        (u.camera = f), (t.length = 0), (n.length = 0);
    }
    function s(f) {
        t.push(f);
    }
    function o(f) {
        n.push(f);
    }
    function a() {
        e.setup(t);
    }
    function l(f) {
        e.setupView(t, f);
    }
    const u = {
        lightsArray: t,
        shadowsArray: n,
        camera: null,
        lights: e,
        transmissionRenderTarget: {},
    };
    return {
        init: i,
        state: u,
        setupLights: a,
        setupLightsView: l,
        pushLight: s,
        pushShadow: o,
    };
}
function Sj(r) {
    let e = new WeakMap();
    function t(i, s = 0) {
        const o = e.get(i);
        let a;
        return (
            o === void 0
                ? ((a = new b2(r)), e.set(i, [a]))
                : s >= o.length
                  ? ((a = new b2(r)), o.push(a))
                  : (a = o[s]),
            a
        );
    }
    function n() {
        e = new WeakMap();
    }
    return { get: t, dispose: n };
}
class jx extends gs {
    constructor(e) {
        super(),
            (this.isMeshDepthMaterial = !0),
            (this.type = 'MeshDepthMaterial'),
            (this.depthPacking = rO),
            (this.map = null),
            (this.alphaMap = null),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            this.setValues(e);
    }
    copy(e) {
        return (
            super.copy(e),
            (this.depthPacking = e.depthPacking),
            (this.map = e.map),
            (this.alphaMap = e.alphaMap),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            this
        );
    }
}
class Xx extends gs {
    constructor(e) {
        super(),
            (this.isMeshDistanceMaterial = !0),
            (this.type = 'MeshDistanceMaterial'),
            (this.map = null),
            (this.alphaMap = null),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            this.setValues(e);
    }
    copy(e) {
        return (
            super.copy(e),
            (this.map = e.map),
            (this.alphaMap = e.alphaMap),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            this
        );
    }
}
const wj = `void main() {
	gl_Position = vec4( position, 1.0 );
}`,
    Mj = `uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;
function Ej(r, e, t) {
    let n = new K0();
    const i = new tt(),
        s = new tt(),
        o = new En(),
        a = new jx({ depthPacking: MT }),
        l = new Xx(),
        u = {},
        f = t.maxTextureSize,
        d = { [Au]: ps, [ps]: Au, [To]: To },
        m = new Qi({
            defines: { VSM_SAMPLES: 8 },
            uniforms: {
                shadow_pass: { value: null },
                resolution: { value: new tt() },
                radius: { value: 4 },
            },
            vertexShader: wj,
            fragmentShader: Mj,
        }),
        v = m.clone();
    v.defines.HORIZONTAL_PASS = 1;
    const _ = new xn();
    _.setAttribute(
        'position',
        new qn(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3)
    );
    const S = new Jn(_, m),
        w = this;
    (this.enabled = !1),
        (this.autoUpdate = !0),
        (this.needsUpdate = !1),
        (this.type = Ix);
    let x = this.type;
    this.render = function (L, D, O) {
        if (
            w.enabled === !1 ||
            (w.autoUpdate === !1 && w.needsUpdate === !1) ||
            L.length === 0
        )
            return;
        const I = r.getRenderTarget(),
            U = r.getActiveCubeFace(),
            H = r.getActiveMipmapLevel(),
            W = r.state;
        W.setBlending(Al),
            W.buffers.color.setClear(1, 1, 1, 1),
            W.buffers.depth.setTest(!0),
            W.setScissorTest(!1);
        const q = x !== Fa && this.type === Fa,
            K = x === Fa && this.type !== Fa;
        for (let le = 0, ee = L.length; le < ee; le++) {
            const de = L[le],
                Z = de.shadow;
            if (Z === void 0) {
                console.warn('THREE.WebGLShadowMap:', de, 'has no shadow.');
                continue;
            }
            if (Z.autoUpdate === !1 && Z.needsUpdate === !1) continue;
            i.copy(Z.mapSize);
            const se = Z.getFrameExtents();
            if (
                (i.multiply(se),
                s.copy(Z.mapSize),
                (i.x > f || i.y > f) &&
                    (i.x > f &&
                        ((s.x = Math.floor(f / se.x)),
                        (i.x = s.x * se.x),
                        (Z.mapSize.x = s.x)),
                    i.y > f &&
                        ((s.y = Math.floor(f / se.y)),
                        (i.y = s.y * se.y),
                        (Z.mapSize.y = s.y))),
                Z.map === null || q === !0 || K === !0)
            ) {
                const F =
                    this.type !== Fa ? { minFilter: Fn, magFilter: Fn } : {};
                Z.map !== null && Z.map.dispose(),
                    (Z.map = new Ji(i.x, i.y, F)),
                    (Z.map.texture.name = de.name + '.shadowMap'),
                    Z.camera.updateProjectionMatrix();
            }
            r.setRenderTarget(Z.map), r.clear();
            const J = Z.getViewportCount();
            for (let F = 0; F < J; F++) {
                const $ = Z.getViewport(F);
                o.set(s.x * $.x, s.y * $.y, s.x * $.z, s.y * $.w),
                    W.viewport(o),
                    Z.updateMatrices(de, F),
                    (n = Z.getFrustum()),
                    b(D, O, Z.camera, de, this.type);
            }
            Z.isPointLightShadow !== !0 && this.type === Fa && A(Z, O),
                (Z.needsUpdate = !1);
        }
        (x = this.type), (w.needsUpdate = !1), r.setRenderTarget(I, U, H);
    };
    function A(L, D) {
        const O = e.update(S);
        m.defines.VSM_SAMPLES !== L.blurSamples &&
            ((m.defines.VSM_SAMPLES = L.blurSamples),
            (v.defines.VSM_SAMPLES = L.blurSamples),
            (m.needsUpdate = !0),
            (v.needsUpdate = !0)),
            L.mapPass === null && (L.mapPass = new Ji(i.x, i.y)),
            (m.uniforms.shadow_pass.value = L.map.texture),
            (m.uniforms.resolution.value = L.mapSize),
            (m.uniforms.radius.value = L.radius),
            r.setRenderTarget(L.mapPass),
            r.clear(),
            r.renderBufferDirect(D, null, O, m, S, null),
            (v.uniforms.shadow_pass.value = L.mapPass.texture),
            (v.uniforms.resolution.value = L.mapSize),
            (v.uniforms.radius.value = L.radius),
            r.setRenderTarget(L.map),
            r.clear(),
            r.renderBufferDirect(D, null, O, v, S, null);
    }
    function T(L, D, O, I) {
        let U = null;
        const H =
            O.isPointLight === !0
                ? L.customDistanceMaterial
                : L.customDepthMaterial;
        if (H !== void 0) U = H;
        else if (
            ((U = O.isPointLight === !0 ? l : a),
            (r.localClippingEnabled &&
                D.clipShadows === !0 &&
                Array.isArray(D.clippingPlanes) &&
                D.clippingPlanes.length !== 0) ||
                (D.displacementMap && D.displacementScale !== 0) ||
                (D.alphaMap && D.alphaTest > 0) ||
                (D.map && D.alphaTest > 0))
        ) {
            const W = U.uuid,
                q = D.uuid;
            let K = u[W];
            K === void 0 && ((K = {}), (u[W] = K));
            let le = K[q];
            le === void 0 &&
                ((le = U.clone()),
                (K[q] = le),
                D.addEventListener('dispose', P)),
                (U = le);
        }
        if (
            ((U.visible = D.visible),
            (U.wireframe = D.wireframe),
            I === Fa
                ? (U.side = D.shadowSide !== null ? D.shadowSide : D.side)
                : (U.side = D.shadowSide !== null ? D.shadowSide : d[D.side]),
            (U.alphaMap = D.alphaMap),
            (U.alphaTest = D.alphaTest),
            (U.map = D.map),
            (U.clipShadows = D.clipShadows),
            (U.clippingPlanes = D.clippingPlanes),
            (U.clipIntersection = D.clipIntersection),
            (U.displacementMap = D.displacementMap),
            (U.displacementScale = D.displacementScale),
            (U.displacementBias = D.displacementBias),
            (U.wireframeLinewidth = D.wireframeLinewidth),
            (U.linewidth = D.linewidth),
            O.isPointLight === !0 && U.isMeshDistanceMaterial === !0)
        ) {
            const W = r.properties.get(U);
            W.light = O;
        }
        return U;
    }
    function b(L, D, O, I, U) {
        if (L.visible === !1) return;
        if (
            L.layers.test(D.layers) &&
            (L.isMesh || L.isLine || L.isPoints) &&
            (L.castShadow || (L.receiveShadow && U === Fa)) &&
            (!L.frustumCulled || n.intersectsObject(L))
        ) {
            L.modelViewMatrix.multiplyMatrices(
                O.matrixWorldInverse,
                L.matrixWorld
            );
            const q = e.update(L),
                K = L.material;
            if (Array.isArray(K)) {
                const le = q.groups;
                for (let ee = 0, de = le.length; ee < de; ee++) {
                    const Z = le[ee],
                        se = K[Z.materialIndex];
                    if (se && se.visible) {
                        const J = T(L, se, I, U);
                        L.onBeforeShadow(r, L, D, O, q, J, Z),
                            r.renderBufferDirect(O, null, q, J, L, Z),
                            L.onAfterShadow(r, L, D, O, q, J, Z);
                    }
                }
            } else if (K.visible) {
                const le = T(L, K, I, U);
                L.onBeforeShadow(r, L, D, O, q, le, null),
                    r.renderBufferDirect(O, null, q, le, L, null),
                    L.onAfterShadow(r, L, D, O, q, le, null);
            }
        }
        const W = L.children;
        for (let q = 0, K = W.length; q < K; q++) b(W[q], D, O, I, U);
    }
    function P(L) {
        L.target.removeEventListener('dispose', P);
        for (const O in u) {
            const I = u[O],
                U = L.target.uuid;
            U in I && (I[U].dispose(), delete I[U]);
        }
    }
}
function Tj(r) {
    function e() {
        let _e = !1;
        const nt = new En();
        let ve = null;
        const Be = new En(0, 0, 0, 0);
        return {
            setMask: function (ht) {
                ve !== ht && !_e && (r.colorMask(ht, ht, ht, ht), (ve = ht));
            },
            setLocked: function (ht) {
                _e = ht;
            },
            setClear: function (ht, wt, Et, Qt, en) {
                en === !0 && ((ht *= Qt), (wt *= Qt), (Et *= Qt)),
                    nt.set(ht, wt, Et, Qt),
                    Be.equals(nt) === !1 &&
                        (r.clearColor(ht, wt, Et, Qt), Be.copy(nt));
            },
            reset: function () {
                (_e = !1), (ve = null), Be.set(-1, 0, 0, 0);
            },
        };
    }
    function t() {
        let _e = !1,
            nt = null,
            ve = null,
            Be = null;
        return {
            setTest: function (ht) {
                ht ? me(r.DEPTH_TEST) : ge(r.DEPTH_TEST);
            },
            setMask: function (ht) {
                nt !== ht && !_e && (r.depthMask(ht), (nt = ht));
            },
            setFunc: function (ht) {
                if (ve !== ht) {
                    switch (ht) {
                        case BD:
                            r.depthFunc(r.NEVER);
                            break;
                        case zD:
                            r.depthFunc(r.ALWAYS);
                            break;
                        case VD:
                            r.depthFunc(r.LESS);
                            break;
                        case h0:
                            r.depthFunc(r.LEQUAL);
                            break;
                        case HD:
                            r.depthFunc(r.EQUAL);
                            break;
                        case GD:
                            r.depthFunc(r.GEQUAL);
                            break;
                        case WD:
                            r.depthFunc(r.GREATER);
                            break;
                        case jD:
                            r.depthFunc(r.NOTEQUAL);
                            break;
                        default:
                            r.depthFunc(r.LEQUAL);
                    }
                    ve = ht;
                }
            },
            setLocked: function (ht) {
                _e = ht;
            },
            setClear: function (ht) {
                Be !== ht && (r.clearDepth(ht), (Be = ht));
            },
            reset: function () {
                (_e = !1), (nt = null), (ve = null), (Be = null);
            },
        };
    }
    function n() {
        let _e = !1,
            nt = null,
            ve = null,
            Be = null,
            ht = null,
            wt = null,
            Et = null,
            Qt = null,
            en = null;
        return {
            setTest: function (Mt) {
                _e || (Mt ? me(r.STENCIL_TEST) : ge(r.STENCIL_TEST));
            },
            setMask: function (Mt) {
                nt !== Mt && !_e && (r.stencilMask(Mt), (nt = Mt));
            },
            setFunc: function (Mt, hn, Pn) {
                (ve !== Mt || Be !== hn || ht !== Pn) &&
                    (r.stencilFunc(Mt, hn, Pn),
                    (ve = Mt),
                    (Be = hn),
                    (ht = Pn));
            },
            setOp: function (Mt, hn, Pn) {
                (wt !== Mt || Et !== hn || Qt !== Pn) &&
                    (r.stencilOp(Mt, hn, Pn), (wt = Mt), (Et = hn), (Qt = Pn));
            },
            setLocked: function (Mt) {
                _e = Mt;
            },
            setClear: function (Mt) {
                en !== Mt && (r.clearStencil(Mt), (en = Mt));
            },
            reset: function () {
                (_e = !1),
                    (nt = null),
                    (ve = null),
                    (Be = null),
                    (ht = null),
                    (wt = null),
                    (Et = null),
                    (Qt = null),
                    (en = null);
            },
        };
    }
    const i = new e(),
        s = new t(),
        o = new n(),
        a = new WeakMap(),
        l = new WeakMap();
    let u = {},
        f = {},
        d = new WeakMap(),
        m = [],
        v = null,
        _ = !1,
        S = null,
        w = null,
        x = null,
        A = null,
        T = null,
        b = null,
        P = null,
        L = new Tt(0, 0, 0),
        D = 0,
        O = !1,
        I = null,
        U = null,
        H = null,
        W = null,
        q = null;
    const K = r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);
    let le = !1,
        ee = 0;
    const de = r.getParameter(r.VERSION);
    de.indexOf('WebGL') !== -1
        ? ((ee = parseFloat(/^WebGL (\d)/.exec(de)[1])), (le = ee >= 1))
        : de.indexOf('OpenGL ES') !== -1 &&
          ((ee = parseFloat(/^OpenGL ES (\d)/.exec(de)[1])), (le = ee >= 2));
    let Z = null,
        se = {};
    const J = r.getParameter(r.SCISSOR_BOX),
        F = r.getParameter(r.VIEWPORT),
        $ = new En().fromArray(J),
        fe = new En().fromArray(F);
    function ne(_e, nt, ve, Be) {
        const ht = new Uint8Array(4),
            wt = r.createTexture();
        r.bindTexture(_e, wt),
            r.texParameteri(_e, r.TEXTURE_MIN_FILTER, r.NEAREST),
            r.texParameteri(_e, r.TEXTURE_MAG_FILTER, r.NEAREST);
        for (let Et = 0; Et < ve; Et++)
            _e === r.TEXTURE_3D || _e === r.TEXTURE_2D_ARRAY
                ? r.texImage3D(
                      nt,
                      0,
                      r.RGBA,
                      1,
                      1,
                      Be,
                      0,
                      r.RGBA,
                      r.UNSIGNED_BYTE,
                      ht
                  )
                : r.texImage2D(
                      nt + Et,
                      0,
                      r.RGBA,
                      1,
                      1,
                      0,
                      r.RGBA,
                      r.UNSIGNED_BYTE,
                      ht
                  );
        return wt;
    }
    const ae = {};
    (ae[r.TEXTURE_2D] = ne(r.TEXTURE_2D, r.TEXTURE_2D, 1)),
        (ae[r.TEXTURE_CUBE_MAP] = ne(
            r.TEXTURE_CUBE_MAP,
            r.TEXTURE_CUBE_MAP_POSITIVE_X,
            6
        )),
        (ae[r.TEXTURE_2D_ARRAY] = ne(
            r.TEXTURE_2D_ARRAY,
            r.TEXTURE_2D_ARRAY,
            1,
            1
        )),
        (ae[r.TEXTURE_3D] = ne(r.TEXTURE_3D, r.TEXTURE_3D, 1, 1)),
        i.setClear(0, 0, 0, 1),
        s.setClear(1),
        o.setClear(0),
        me(r.DEPTH_TEST),
        s.setFunc(h0),
        We(!1),
        Re(wM),
        me(r.CULL_FACE),
        He(Al);
    function me(_e) {
        u[_e] !== !0 && (r.enable(_e), (u[_e] = !0));
    }
    function ge(_e) {
        u[_e] !== !1 && (r.disable(_e), (u[_e] = !1));
    }
    function Ae(_e, nt) {
        return f[_e] !== nt
            ? (r.bindFramebuffer(_e, nt),
              (f[_e] = nt),
              _e === r.DRAW_FRAMEBUFFER && (f[r.FRAMEBUFFER] = nt),
              _e === r.FRAMEBUFFER && (f[r.DRAW_FRAMEBUFFER] = nt),
              !0)
            : !1;
    }
    function je(_e, nt) {
        let ve = m,
            Be = !1;
        if (_e) {
            (ve = d.get(nt)), ve === void 0 && ((ve = []), d.set(nt, ve));
            const ht = _e.textures;
            if (ve.length !== ht.length || ve[0] !== r.COLOR_ATTACHMENT0) {
                for (let wt = 0, Et = ht.length; wt < Et; wt++)
                    ve[wt] = r.COLOR_ATTACHMENT0 + wt;
                (ve.length = ht.length), (Be = !0);
            }
        } else ve[0] !== r.BACK && ((ve[0] = r.BACK), (Be = !0));
        Be && r.drawBuffers(ve);
    }
    function Qe(_e) {
        return v !== _e ? (r.useProgram(_e), (v = _e), !0) : !1;
    }
    const Ke = {
        [yc]: r.FUNC_ADD,
        [wD]: r.FUNC_SUBTRACT,
        [MD]: r.FUNC_REVERSE_SUBTRACT,
    };
    (Ke[ED] = r.MIN), (Ke[TD] = r.MAX);
    const X = {
        [AD]: r.ZERO,
        [bD]: r.ONE,
        [CD]: r.SRC_COLOR,
        [N_]: r.SRC_ALPHA,
        [OD]: r.SRC_ALPHA_SATURATE,
        [ID]: r.DST_COLOR,
        [PD]: r.DST_ALPHA,
        [RD]: r.ONE_MINUS_SRC_COLOR,
        [F_]: r.ONE_MINUS_SRC_ALPHA,
        [DD]: r.ONE_MINUS_DST_COLOR,
        [LD]: r.ONE_MINUS_DST_ALPHA,
        [UD]: r.CONSTANT_COLOR,
        [kD]: r.ONE_MINUS_CONSTANT_COLOR,
        [ND]: r.CONSTANT_ALPHA,
        [FD]: r.ONE_MINUS_CONSTANT_ALPHA,
    };
    function He(_e, nt, ve, Be, ht, wt, Et, Qt, en, Mt) {
        if (_e === Al) {
            _ === !0 && (ge(r.BLEND), (_ = !1));
            return;
        }
        if ((_ === !1 && (me(r.BLEND), (_ = !0)), _e !== SD)) {
            if (_e !== S || Mt !== O) {
                if (
                    ((w !== yc || T !== yc) &&
                        (r.blendEquation(r.FUNC_ADD), (w = yc), (T = yc)),
                    Mt)
                )
                    switch (_e) {
                        case lh:
                            r.blendFuncSeparate(
                                r.ONE,
                                r.ONE_MINUS_SRC_ALPHA,
                                r.ONE,
                                r.ONE_MINUS_SRC_ALPHA
                            );
                            break;
                        case MM:
                            r.blendFunc(r.ONE, r.ONE);
                            break;
                        case EM:
                            r.blendFuncSeparate(
                                r.ZERO,
                                r.ONE_MINUS_SRC_COLOR,
                                r.ZERO,
                                r.ONE
                            );
                            break;
                        case TM:
                            r.blendFuncSeparate(
                                r.ZERO,
                                r.SRC_COLOR,
                                r.ZERO,
                                r.SRC_ALPHA
                            );
                            break;
                        default:
                            console.error(
                                'THREE.WebGLState: Invalid blending: ',
                                _e
                            );
                            break;
                    }
                else
                    switch (_e) {
                        case lh:
                            r.blendFuncSeparate(
                                r.SRC_ALPHA,
                                r.ONE_MINUS_SRC_ALPHA,
                                r.ONE,
                                r.ONE_MINUS_SRC_ALPHA
                            );
                            break;
                        case MM:
                            r.blendFunc(r.SRC_ALPHA, r.ONE);
                            break;
                        case EM:
                            r.blendFuncSeparate(
                                r.ZERO,
                                r.ONE_MINUS_SRC_COLOR,
                                r.ZERO,
                                r.ONE
                            );
                            break;
                        case TM:
                            r.blendFunc(r.ZERO, r.SRC_COLOR);
                            break;
                        default:
                            console.error(
                                'THREE.WebGLState: Invalid blending: ',
                                _e
                            );
                            break;
                    }
                (x = null),
                    (A = null),
                    (b = null),
                    (P = null),
                    L.set(0, 0, 0),
                    (D = 0),
                    (S = _e),
                    (O = Mt);
            }
            return;
        }
        (ht = ht || nt),
            (wt = wt || ve),
            (Et = Et || Be),
            (nt !== w || ht !== T) &&
                (r.blendEquationSeparate(Ke[nt], Ke[ht]), (w = nt), (T = ht)),
            (ve !== x || Be !== A || wt !== b || Et !== P) &&
                (r.blendFuncSeparate(X[ve], X[Be], X[wt], X[Et]),
                (x = ve),
                (A = Be),
                (b = wt),
                (P = Et)),
            (Qt.equals(L) === !1 || en !== D) &&
                (r.blendColor(Qt.r, Qt.g, Qt.b, en), L.copy(Qt), (D = en)),
            (S = _e),
            (O = !1);
    }
    function Fe(_e, nt) {
        _e.side === To ? ge(r.CULL_FACE) : me(r.CULL_FACE);
        let ve = _e.side === ps;
        nt && (ve = !ve),
            We(ve),
            _e.blending === lh && _e.transparent === !1
                ? He(Al)
                : He(
                      _e.blending,
                      _e.blendEquation,
                      _e.blendSrc,
                      _e.blendDst,
                      _e.blendEquationAlpha,
                      _e.blendSrcAlpha,
                      _e.blendDstAlpha,
                      _e.blendColor,
                      _e.blendAlpha,
                      _e.premultipliedAlpha
                  ),
            s.setFunc(_e.depthFunc),
            s.setTest(_e.depthTest),
            s.setMask(_e.depthWrite),
            i.setMask(_e.colorWrite);
        const Be = _e.stencilWrite;
        o.setTest(Be),
            Be &&
                (o.setMask(_e.stencilWriteMask),
                o.setFunc(_e.stencilFunc, _e.stencilRef, _e.stencilFuncMask),
                o.setOp(_e.stencilFail, _e.stencilZFail, _e.stencilZPass)),
            De(_e.polygonOffset, _e.polygonOffsetFactor, _e.polygonOffsetUnits),
            _e.alphaToCoverage === !0
                ? me(r.SAMPLE_ALPHA_TO_COVERAGE)
                : ge(r.SAMPLE_ALPHA_TO_COVERAGE);
    }
    function We(_e) {
        I !== _e && (_e ? r.frontFace(r.CW) : r.frontFace(r.CCW), (I = _e));
    }
    function Re(_e) {
        _e !== yD
            ? (me(r.CULL_FACE),
              _e !== U &&
                  (_e === wM
                      ? r.cullFace(r.BACK)
                      : _e === _D
                        ? r.cullFace(r.FRONT)
                        : r.cullFace(r.FRONT_AND_BACK)))
            : ge(r.CULL_FACE),
            (U = _e);
    }
    function st(_e) {
        _e !== H && (le && r.lineWidth(_e), (H = _e));
    }
    function De(_e, nt, ve) {
        _e
            ? (me(r.POLYGON_OFFSET_FILL),
              (W !== nt || q !== ve) &&
                  (r.polygonOffset(nt, ve), (W = nt), (q = ve)))
            : ge(r.POLYGON_OFFSET_FILL);
    }
    function Je(_e) {
        _e ? me(r.SCISSOR_TEST) : ge(r.SCISSOR_TEST);
    }
    function te(_e) {
        _e === void 0 && (_e = r.TEXTURE0 + K - 1),
            Z !== _e && (r.activeTexture(_e), (Z = _e));
    }
    function V(_e, nt, ve) {
        ve === void 0 && (Z === null ? (ve = r.TEXTURE0 + K - 1) : (ve = Z));
        let Be = se[ve];
        Be === void 0 &&
            ((Be = { type: void 0, texture: void 0 }), (se[ve] = Be)),
            (Be.type !== _e || Be.texture !== nt) &&
                (Z !== ve && (r.activeTexture(ve), (Z = ve)),
                r.bindTexture(_e, nt || ae[_e]),
                (Be.type = _e),
                (Be.texture = nt));
    }
    function Me() {
        const _e = se[Z];
        _e !== void 0 &&
            _e.type !== void 0 &&
            (r.bindTexture(_e.type, null),
            (_e.type = void 0),
            (_e.texture = void 0));
    }
    function Le() {
        try {
            r.compressedTexImage2D.apply(r, arguments);
        } catch (_e) {
            console.error('THREE.WebGLState:', _e);
        }
    }
    function Ie() {
        try {
            r.compressedTexImage3D.apply(r, arguments);
        } catch (_e) {
            console.error('THREE.WebGLState:', _e);
        }
    }
    function Ce() {
        try {
            r.texSubImage2D.apply(r, arguments);
        } catch (_e) {
            console.error('THREE.WebGLState:', _e);
        }
    }
    function gt() {
        try {
            r.texSubImage3D.apply(r, arguments);
        } catch (_e) {
            console.error('THREE.WebGLState:', _e);
        }
    }
    function Xe() {
        try {
            r.compressedTexSubImage2D.apply(r, arguments);
        } catch (_e) {
            console.error('THREE.WebGLState:', _e);
        }
    }
    function Ze() {
        try {
            r.compressedTexSubImage3D.apply(r, arguments);
        } catch (_e) {
            console.error('THREE.WebGLState:', _e);
        }
    }
    function at() {
        try {
            r.texStorage2D.apply(r, arguments);
        } catch (_e) {
            console.error('THREE.WebGLState:', _e);
        }
    }
    function Ye() {
        try {
            r.texStorage3D.apply(r, arguments);
        } catch (_e) {
            console.error('THREE.WebGLState:', _e);
        }
    }
    function ot() {
        try {
            r.texImage2D.apply(r, arguments);
        } catch (_e) {
            console.error('THREE.WebGLState:', _e);
        }
    }
    function kt() {
        try {
            r.texImage3D.apply(r, arguments);
        } catch (_e) {
            console.error('THREE.WebGLState:', _e);
        }
    }
    function pt(_e) {
        $.equals(_e) === !1 && (r.scissor(_e.x, _e.y, _e.z, _e.w), $.copy(_e));
    }
    function et(_e) {
        fe.equals(_e) === !1 &&
            (r.viewport(_e.x, _e.y, _e.z, _e.w), fe.copy(_e));
    }
    function lt(_e, nt) {
        let ve = l.get(nt);
        ve === void 0 && ((ve = new WeakMap()), l.set(nt, ve));
        let Be = ve.get(_e);
        Be === void 0 &&
            ((Be = r.getUniformBlockIndex(nt, _e.name)), ve.set(_e, Be));
    }
    function Ct(_e, nt) {
        const Be = l.get(nt).get(_e);
        a.get(nt) !== Be &&
            (r.uniformBlockBinding(nt, Be, _e.__bindingPointIndex),
            a.set(nt, Be));
    }
    function Dt() {
        r.disable(r.BLEND),
            r.disable(r.CULL_FACE),
            r.disable(r.DEPTH_TEST),
            r.disable(r.POLYGON_OFFSET_FILL),
            r.disable(r.SCISSOR_TEST),
            r.disable(r.STENCIL_TEST),
            r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),
            r.blendEquation(r.FUNC_ADD),
            r.blendFunc(r.ONE, r.ZERO),
            r.blendFuncSeparate(r.ONE, r.ZERO, r.ONE, r.ZERO),
            r.blendColor(0, 0, 0, 0),
            r.colorMask(!0, !0, !0, !0),
            r.clearColor(0, 0, 0, 0),
            r.depthMask(!0),
            r.depthFunc(r.LESS),
            r.clearDepth(1),
            r.stencilMask(4294967295),
            r.stencilFunc(r.ALWAYS, 0, 4294967295),
            r.stencilOp(r.KEEP, r.KEEP, r.KEEP),
            r.clearStencil(0),
            r.cullFace(r.BACK),
            r.frontFace(r.CCW),
            r.polygonOffset(0, 0),
            r.activeTexture(r.TEXTURE0),
            r.bindFramebuffer(r.FRAMEBUFFER, null),
            r.bindFramebuffer(r.DRAW_FRAMEBUFFER, null),
            r.bindFramebuffer(r.READ_FRAMEBUFFER, null),
            r.useProgram(null),
            r.lineWidth(1),
            r.scissor(0, 0, r.canvas.width, r.canvas.height),
            r.viewport(0, 0, r.canvas.width, r.canvas.height),
            (u = {}),
            (Z = null),
            (se = {}),
            (f = {}),
            (d = new WeakMap()),
            (m = []),
            (v = null),
            (_ = !1),
            (S = null),
            (w = null),
            (x = null),
            (A = null),
            (T = null),
            (b = null),
            (P = null),
            (L = new Tt(0, 0, 0)),
            (D = 0),
            (O = !1),
            (I = null),
            (U = null),
            (H = null),
            (W = null),
            (q = null),
            $.set(0, 0, r.canvas.width, r.canvas.height),
            fe.set(0, 0, r.canvas.width, r.canvas.height),
            i.reset(),
            s.reset(),
            o.reset();
    }
    return {
        buffers: { color: i, depth: s, stencil: o },
        enable: me,
        disable: ge,
        bindFramebuffer: Ae,
        drawBuffers: je,
        useProgram: Qe,
        setBlending: He,
        setMaterial: Fe,
        setFlipSided: We,
        setCullFace: Re,
        setLineWidth: st,
        setPolygonOffset: De,
        setScissorTest: Je,
        activeTexture: te,
        bindTexture: V,
        unbindTexture: Me,
        compressedTexImage2D: Le,
        compressedTexImage3D: Ie,
        texImage2D: ot,
        texImage3D: kt,
        updateUBOMapping: lt,
        uniformBlockBinding: Ct,
        texStorage2D: at,
        texStorage3D: Ye,
        texSubImage2D: Ce,
        texSubImage3D: gt,
        compressedTexSubImage2D: Xe,
        compressedTexSubImage3D: Ze,
        scissor: pt,
        viewport: et,
        reset: Dt,
    };
}
function Aj(r, e) {
    const t = r.image && r.image.width ? r.image.width / r.image.height : 1;
    return (
        t > e
            ? ((r.repeat.x = 1),
              (r.repeat.y = t / e),
              (r.offset.x = 0),
              (r.offset.y = (1 - r.repeat.y) / 2))
            : ((r.repeat.x = e / t),
              (r.repeat.y = 1),
              (r.offset.x = (1 - r.repeat.x) / 2),
              (r.offset.y = 0)),
        r
    );
}
function bj(r, e) {
    const t = r.image && r.image.width ? r.image.width / r.image.height : 1;
    return (
        t > e
            ? ((r.repeat.x = e / t),
              (r.repeat.y = 1),
              (r.offset.x = (1 - r.repeat.x) / 2),
              (r.offset.y = 0))
            : ((r.repeat.x = 1),
              (r.repeat.y = t / e),
              (r.offset.x = 0),
              (r.offset.y = (1 - r.repeat.y) / 2)),
        r
    );
}
function Cj(r) {
    return (
        (r.repeat.x = 1),
        (r.repeat.y = 1),
        (r.offset.x = 0),
        (r.offset.y = 0),
        r
    );
}
function IM(r, e, t, n) {
    const i = Rj(n);
    switch (t) {
        case gT:
            return r * e;
        case yT:
            return r * e;
        case _T:
            return r * e * 2;
        case Tc:
            return ((r * e) / i.components) * i.byteLength;
        case j0:
            return ((r * e) / i.components) * i.byteLength;
        case xT:
            return ((r * e * 2) / i.components) * i.byteLength;
        case Nx:
            return ((r * e * 2) / i.components) * i.byteLength;
        case vT:
            return ((r * e * 3) / i.components) * i.byteLength;
        case er:
            return ((r * e * 4) / i.components) * i.byteLength;
        case Fx:
            return ((r * e * 4) / i.components) * i.byteLength;
        case Ng:
        case Fg:
            return Math.floor((r + 3) / 4) * Math.floor((e + 3) / 4) * 8;
        case Bg:
        case zg:
            return Math.floor((r + 3) / 4) * Math.floor((e + 3) / 4) * 16;
        case z_:
        case H_:
            return (Math.max(r, 16) * Math.max(e, 8)) / 4;
        case B_:
        case V_:
            return (Math.max(r, 8) * Math.max(e, 8)) / 2;
        case G_:
        case W_:
            return Math.floor((r + 3) / 4) * Math.floor((e + 3) / 4) * 8;
        case j_:
            return Math.floor((r + 3) / 4) * Math.floor((e + 3) / 4) * 16;
        case X_:
            return Math.floor((r + 3) / 4) * Math.floor((e + 3) / 4) * 16;
        case Y_:
            return Math.floor((r + 4) / 5) * Math.floor((e + 3) / 4) * 16;
        case q_:
            return Math.floor((r + 4) / 5) * Math.floor((e + 4) / 5) * 16;
        case K_:
            return Math.floor((r + 5) / 6) * Math.floor((e + 4) / 5) * 16;
        case Z_:
            return Math.floor((r + 5) / 6) * Math.floor((e + 5) / 6) * 16;
        case $_:
            return Math.floor((r + 7) / 8) * Math.floor((e + 4) / 5) * 16;
        case J_:
            return Math.floor((r + 7) / 8) * Math.floor((e + 5) / 6) * 16;
        case Q_:
            return Math.floor((r + 7) / 8) * Math.floor((e + 7) / 8) * 16;
        case ex:
            return Math.floor((r + 9) / 10) * Math.floor((e + 4) / 5) * 16;
        case tx:
            return Math.floor((r + 9) / 10) * Math.floor((e + 5) / 6) * 16;
        case nx:
            return Math.floor((r + 9) / 10) * Math.floor((e + 7) / 8) * 16;
        case ix:
            return Math.floor((r + 9) / 10) * Math.floor((e + 9) / 10) * 16;
        case rx:
            return Math.floor((r + 11) / 12) * Math.floor((e + 9) / 10) * 16;
        case sx:
            return Math.floor((r + 11) / 12) * Math.floor((e + 11) / 12) * 16;
        case Vg:
        case ox:
        case ax:
            return Math.ceil(r / 4) * Math.ceil(e / 4) * 16;
        case ST:
        case lx:
            return Math.ceil(r / 4) * Math.ceil(e / 4) * 8;
        case ux:
        case cx:
            return Math.ceil(r / 4) * Math.ceil(e / 4) * 16;
    }
    throw new Error(`Unable to determine texture byte length for ${t} format.`);
}
function Rj(r) {
    switch (r) {
        case so:
        case Dx:
            return { byteLength: 1, components: 1 };
        case Pp:
        case Ox:
        case Er:
            return { byteLength: 2, components: 1 };
        case Ux:
        case kx:
            return { byteLength: 2, components: 4 };
        case Ll:
        case W0:
        case ri:
            return { byteLength: 4, components: 1 };
        case mT:
            return { byteLength: 4, components: 3 };
    }
    throw new Error(`Unknown texture type ${r}.`);
}
const Pj = { contain: Aj, cover: bj, fill: Cj, getByteLength: IM };
function Lj(r, e, t, n, i, s, o) {
    const a = e.has('WEBGL_multisampled_render_to_texture')
            ? e.get('WEBGL_multisampled_render_to_texture')
            : null,
        l =
            typeof navigator > 'u'
                ? !1
                : /OculusBrowser/g.test(navigator.userAgent),
        u = new tt(),
        f = new WeakMap();
    let d;
    const m = new WeakMap();
    let v = !1;
    try {
        v =
            typeof OffscreenCanvas < 'u' &&
            new OffscreenCanvas(1, 1).getContext('2d') !== null;
    } catch {}
    function _(te, V) {
        return v ? new OffscreenCanvas(te, V) : M0('canvas');
    }
    function S(te, V, Me) {
        let Le = 1;
        const Ie = Je(te);
        if (
            ((Ie.width > Me || Ie.height > Me) &&
                (Le = Me / Math.max(Ie.width, Ie.height)),
            Le < 1)
        )
            if (
                (typeof HTMLImageElement < 'u' &&
                    te instanceof HTMLImageElement) ||
                (typeof HTMLCanvasElement < 'u' &&
                    te instanceof HTMLCanvasElement) ||
                (typeof ImageBitmap < 'u' && te instanceof ImageBitmap) ||
                (typeof VideoFrame < 'u' && te instanceof VideoFrame)
            ) {
                const Ce = Math.floor(Le * Ie.width),
                    gt = Math.floor(Le * Ie.height);
                d === void 0 && (d = _(Ce, gt));
                const Xe = V ? _(Ce, gt) : d;
                return (
                    (Xe.width = Ce),
                    (Xe.height = gt),
                    Xe.getContext('2d').drawImage(te, 0, 0, Ce, gt),
                    console.warn(
                        'THREE.WebGLRenderer: Texture has been resized from (' +
                            Ie.width +
                            'x' +
                            Ie.height +
                            ') to (' +
                            Ce +
                            'x' +
                            gt +
                            ').'
                    ),
                    Xe
                );
            } else
                return (
                    'data' in te &&
                        console.warn(
                            'THREE.WebGLRenderer: Image in DataTexture is too big (' +
                                Ie.width +
                                'x' +
                                Ie.height +
                                ').'
                        ),
                    te
                );
        return te;
    }
    function w(te) {
        return te.generateMipmaps && te.minFilter !== Fn && te.minFilter !== Cn;
    }
    function x(te) {
        r.generateMipmap(te);
    }
    function A(te, V, Me, Le, Ie = !1) {
        if (te !== null) {
            if (r[te] !== void 0) return r[te];
            console.warn(
                "THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" +
                    te +
                    "'"
            );
        }
        let Ce = V;
        if (
            (V === r.RED &&
                (Me === r.FLOAT && (Ce = r.R32F),
                Me === r.HALF_FLOAT && (Ce = r.R16F),
                Me === r.UNSIGNED_BYTE && (Ce = r.R8)),
            V === r.RED_INTEGER &&
                (Me === r.UNSIGNED_BYTE && (Ce = r.R8UI),
                Me === r.UNSIGNED_SHORT && (Ce = r.R16UI),
                Me === r.UNSIGNED_INT && (Ce = r.R32UI),
                Me === r.BYTE && (Ce = r.R8I),
                Me === r.SHORT && (Ce = r.R16I),
                Me === r.INT && (Ce = r.R32I)),
            V === r.RG &&
                (Me === r.FLOAT && (Ce = r.RG32F),
                Me === r.HALF_FLOAT && (Ce = r.RG16F),
                Me === r.UNSIGNED_BYTE && (Ce = r.RG8)),
            V === r.RG_INTEGER &&
                (Me === r.UNSIGNED_BYTE && (Ce = r.RG8UI),
                Me === r.UNSIGNED_SHORT && (Ce = r.RG16UI),
                Me === r.UNSIGNED_INT && (Ce = r.RG32UI),
                Me === r.BYTE && (Ce = r.RG8I),
                Me === r.SHORT && (Ce = r.RG16I),
                Me === r.INT && (Ce = r.RG32I)),
            V === r.RGB &&
                Me === r.UNSIGNED_INT_5_9_9_9_REV &&
                (Ce = r.RGB9_E5),
            V === r.RGBA)
        ) {
            const gt = Ie ? y0 : zn.getTransfer(Le);
            Me === r.FLOAT && (Ce = r.RGBA32F),
                Me === r.HALF_FLOAT && (Ce = r.RGBA16F),
                Me === r.UNSIGNED_BYTE &&
                    (Ce = gt === ci ? r.SRGB8_ALPHA8 : r.RGBA8),
                Me === r.UNSIGNED_SHORT_4_4_4_4 && (Ce = r.RGBA4),
                Me === r.UNSIGNED_SHORT_5_5_5_1 && (Ce = r.RGB5_A1);
        }
        return (
            (Ce === r.R16F ||
                Ce === r.R32F ||
                Ce === r.RG16F ||
                Ce === r.RG32F ||
                Ce === r.RGBA16F ||
                Ce === r.RGBA32F) &&
                e.get('EXT_color_buffer_float'),
            Ce
        );
    }
    function T(te, V) {
        let Me;
        return (
            te
                ? V === null || V === Ll || V === ph
                    ? (Me = r.DEPTH24_STENCIL8)
                    : V === ri
                      ? (Me = r.DEPTH32F_STENCIL8)
                      : V === Pp &&
                        ((Me = r.DEPTH24_STENCIL8),
                        console.warn(
                            'DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.'
                        ))
                : V === null || V === Ll || V === ph
                  ? (Me = r.DEPTH_COMPONENT24)
                  : V === ri
                    ? (Me = r.DEPTH_COMPONENT32F)
                    : V === Pp && (Me = r.DEPTH_COMPONENT16),
            Me
        );
    }
    function b(te, V) {
        return w(te) === !0 ||
            (te.isFramebufferTexture &&
                te.minFilter !== Fn &&
                te.minFilter !== Cn)
            ? Math.log2(Math.max(V.width, V.height)) + 1
            : te.mipmaps !== void 0 && te.mipmaps.length > 0
              ? te.mipmaps.length
              : te.isCompressedTexture && Array.isArray(te.image)
                ? V.mipmaps.length
                : 1;
    }
    function P(te) {
        const V = te.target;
        V.removeEventListener('dispose', P),
            D(V),
            V.isVideoTexture && f.delete(V);
    }
    function L(te) {
        const V = te.target;
        V.removeEventListener('dispose', L), I(V);
    }
    function D(te) {
        const V = n.get(te);
        if (V.__webglInit === void 0) return;
        const Me = te.source,
            Le = m.get(Me);
        if (Le) {
            const Ie = Le[V.__cacheKey];
            Ie.usedTimes--,
                Ie.usedTimes === 0 && O(te),
                Object.keys(Le).length === 0 && m.delete(Me);
        }
        n.remove(te);
    }
    function O(te) {
        const V = n.get(te);
        r.deleteTexture(V.__webglTexture);
        const Me = te.source,
            Le = m.get(Me);
        delete Le[V.__cacheKey], o.memory.textures--;
    }
    function I(te) {
        const V = n.get(te);
        if (
            (te.depthTexture && te.depthTexture.dispose(),
            te.isWebGLCubeRenderTarget)
        )
            for (let Le = 0; Le < 6; Le++) {
                if (Array.isArray(V.__webglFramebuffer[Le]))
                    for (let Ie = 0; Ie < V.__webglFramebuffer[Le].length; Ie++)
                        r.deleteFramebuffer(V.__webglFramebuffer[Le][Ie]);
                else r.deleteFramebuffer(V.__webglFramebuffer[Le]);
                V.__webglDepthbuffer &&
                    r.deleteRenderbuffer(V.__webglDepthbuffer[Le]);
            }
        else {
            if (Array.isArray(V.__webglFramebuffer))
                for (let Le = 0; Le < V.__webglFramebuffer.length; Le++)
                    r.deleteFramebuffer(V.__webglFramebuffer[Le]);
            else r.deleteFramebuffer(V.__webglFramebuffer);
            if (
                (V.__webglDepthbuffer &&
                    r.deleteRenderbuffer(V.__webglDepthbuffer),
                V.__webglMultisampledFramebuffer &&
                    r.deleteFramebuffer(V.__webglMultisampledFramebuffer),
                V.__webglColorRenderbuffer)
            )
                for (let Le = 0; Le < V.__webglColorRenderbuffer.length; Le++)
                    V.__webglColorRenderbuffer[Le] &&
                        r.deleteRenderbuffer(V.__webglColorRenderbuffer[Le]);
            V.__webglDepthRenderbuffer &&
                r.deleteRenderbuffer(V.__webglDepthRenderbuffer);
        }
        const Me = te.textures;
        for (let Le = 0, Ie = Me.length; Le < Ie; Le++) {
            const Ce = n.get(Me[Le]);
            Ce.__webglTexture &&
                (r.deleteTexture(Ce.__webglTexture), o.memory.textures--),
                n.remove(Me[Le]);
        }
        n.remove(te);
    }
    let U = 0;
    function H() {
        U = 0;
    }
    function W() {
        const te = U;
        return (
            te >= i.maxTextures &&
                console.warn(
                    'THREE.WebGLTextures: Trying to use ' +
                        te +
                        ' texture units while this GPU supports only ' +
                        i.maxTextures
                ),
            (U += 1),
            te
        );
    }
    function q(te) {
        const V = [];
        return (
            V.push(te.wrapS),
            V.push(te.wrapT),
            V.push(te.wrapR || 0),
            V.push(te.magFilter),
            V.push(te.minFilter),
            V.push(te.anisotropy),
            V.push(te.internalFormat),
            V.push(te.format),
            V.push(te.type),
            V.push(te.generateMipmaps),
            V.push(te.premultiplyAlpha),
            V.push(te.flipY),
            V.push(te.unpackAlignment),
            V.push(te.colorSpace),
            V.join()
        );
    }
    function K(te, V) {
        const Me = n.get(te);
        if (
            (te.isVideoTexture && st(te),
            te.isRenderTargetTexture === !1 &&
                te.version > 0 &&
                Me.__version !== te.version)
        ) {
            const Le = te.image;
            if (Le === null)
                console.warn(
                    'THREE.WebGLRenderer: Texture marked for update but no image data found.'
                );
            else if (Le.complete === !1)
                console.warn(
                    'THREE.WebGLRenderer: Texture marked for update but image is incomplete'
                );
            else {
                fe(Me, te, V);
                return;
            }
        }
        t.bindTexture(r.TEXTURE_2D, Me.__webglTexture, r.TEXTURE0 + V);
    }
    function le(te, V) {
        const Me = n.get(te);
        if (te.version > 0 && Me.__version !== te.version) {
            fe(Me, te, V);
            return;
        }
        t.bindTexture(r.TEXTURE_2D_ARRAY, Me.__webglTexture, r.TEXTURE0 + V);
    }
    function ee(te, V) {
        const Me = n.get(te);
        if (te.version > 0 && Me.__version !== te.version) {
            fe(Me, te, V);
            return;
        }
        t.bindTexture(r.TEXTURE_3D, Me.__webglTexture, r.TEXTURE0 + V);
    }
    function de(te, V) {
        const Me = n.get(te);
        if (te.version > 0 && Me.__version !== te.version) {
            ne(Me, te, V);
            return;
        }
        t.bindTexture(r.TEXTURE_CUBE_MAP, Me.__webglTexture, r.TEXTURE0 + V);
    }
    const Z = {
            [p0]: r.REPEAT,
            [pr]: r.CLAMP_TO_EDGE,
            [m0]: r.MIRRORED_REPEAT,
        },
        se = {
            [Fn]: r.NEAREST,
            [pT]: r.NEAREST_MIPMAP_NEAREST,
            [op]: r.NEAREST_MIPMAP_LINEAR,
            [Cn]: r.LINEAR,
            [kg]: r.LINEAR_MIPMAP_NEAREST,
            [za]: r.LINEAR_MIPMAP_LINEAR,
        },
        J = {
            [oO]: r.NEVER,
            [hO]: r.ALWAYS,
            [aO]: r.LESS,
            [ET]: r.LEQUAL,
            [lO]: r.EQUAL,
            [fO]: r.GEQUAL,
            [uO]: r.GREATER,
            [cO]: r.NOTEQUAL,
        };
    function F(te, V) {
        if (
            (V.type === ri &&
                e.has('OES_texture_float_linear') === !1 &&
                (V.magFilter === Cn ||
                    V.magFilter === kg ||
                    V.magFilter === op ||
                    V.magFilter === za ||
                    V.minFilter === Cn ||
                    V.minFilter === kg ||
                    V.minFilter === op ||
                    V.minFilter === za) &&
                console.warn(
                    'THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device.'
                ),
            r.texParameteri(te, r.TEXTURE_WRAP_S, Z[V.wrapS]),
            r.texParameteri(te, r.TEXTURE_WRAP_T, Z[V.wrapT]),
            (te === r.TEXTURE_3D || te === r.TEXTURE_2D_ARRAY) &&
                r.texParameteri(te, r.TEXTURE_WRAP_R, Z[V.wrapR]),
            r.texParameteri(te, r.TEXTURE_MAG_FILTER, se[V.magFilter]),
            r.texParameteri(te, r.TEXTURE_MIN_FILTER, se[V.minFilter]),
            V.compareFunction &&
                (r.texParameteri(
                    te,
                    r.TEXTURE_COMPARE_MODE,
                    r.COMPARE_REF_TO_TEXTURE
                ),
                r.texParameteri(
                    te,
                    r.TEXTURE_COMPARE_FUNC,
                    J[V.compareFunction]
                )),
            e.has('EXT_texture_filter_anisotropic') === !0)
        ) {
            if (
                V.magFilter === Fn ||
                (V.minFilter !== op && V.minFilter !== za) ||
                (V.type === ri && e.has('OES_texture_float_linear') === !1)
            )
                return;
            if (V.anisotropy > 1 || n.get(V).__currentAnisotropy) {
                const Me = e.get('EXT_texture_filter_anisotropic');
                r.texParameterf(
                    te,
                    Me.TEXTURE_MAX_ANISOTROPY_EXT,
                    Math.min(V.anisotropy, i.getMaxAnisotropy())
                ),
                    (n.get(V).__currentAnisotropy = V.anisotropy);
            }
        }
    }
    function $(te, V) {
        let Me = !1;
        te.__webglInit === void 0 &&
            ((te.__webglInit = !0), V.addEventListener('dispose', P));
        const Le = V.source;
        let Ie = m.get(Le);
        Ie === void 0 && ((Ie = {}), m.set(Le, Ie));
        const Ce = q(V);
        if (Ce !== te.__cacheKey) {
            Ie[Ce] === void 0 &&
                ((Ie[Ce] = { texture: r.createTexture(), usedTimes: 0 }),
                o.memory.textures++,
                (Me = !0)),
                Ie[Ce].usedTimes++;
            const gt = Ie[te.__cacheKey];
            gt !== void 0 &&
                (Ie[te.__cacheKey].usedTimes--, gt.usedTimes === 0 && O(V)),
                (te.__cacheKey = Ce),
                (te.__webglTexture = Ie[Ce].texture);
        }
        return Me;
    }
    function fe(te, V, Me) {
        let Le = r.TEXTURE_2D;
        (V.isDataArrayTexture || V.isCompressedArrayTexture) &&
            (Le = r.TEXTURE_2D_ARRAY),
            V.isData3DTexture && (Le = r.TEXTURE_3D);
        const Ie = $(te, V),
            Ce = V.source;
        t.bindTexture(Le, te.__webglTexture, r.TEXTURE0 + Me);
        const gt = n.get(Ce);
        if (Ce.version !== gt.__version || Ie === !0) {
            t.activeTexture(r.TEXTURE0 + Me);
            const Xe = zn.getPrimaries(zn.workingColorSpace),
                Ze = V.colorSpace === vu ? null : zn.getPrimaries(V.colorSpace),
                at =
                    V.colorSpace === vu || Xe === Ze
                        ? r.NONE
                        : r.BROWSER_DEFAULT_WEBGL;
            r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL, V.flipY),
                r.pixelStorei(
                    r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                    V.premultiplyAlpha
                ),
                r.pixelStorei(r.UNPACK_ALIGNMENT, V.unpackAlignment),
                r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL, at);
            let Ye = S(V.image, !1, i.maxTextureSize);
            Ye = De(V, Ye);
            const ot = s.convert(V.format, V.colorSpace),
                kt = s.convert(V.type);
            let pt = A(
                V.internalFormat,
                ot,
                kt,
                V.colorSpace,
                V.isVideoTexture
            );
            F(Le, V);
            let et;
            const lt = V.mipmaps,
                Ct = V.isVideoTexture !== !0,
                Dt = gt.__version === void 0 || Ie === !0,
                _e = Ce.dataReady,
                nt = b(V, Ye);
            if (V.isDepthTexture)
                (pt = T(V.format === mh, V.type)),
                    Dt &&
                        (Ct
                            ? t.texStorage2D(
                                  r.TEXTURE_2D,
                                  1,
                                  pt,
                                  Ye.width,
                                  Ye.height
                              )
                            : t.texImage2D(
                                  r.TEXTURE_2D,
                                  0,
                                  pt,
                                  Ye.width,
                                  Ye.height,
                                  0,
                                  ot,
                                  kt,
                                  null
                              ));
            else if (V.isDataTexture)
                if (lt.length > 0) {
                    Ct &&
                        Dt &&
                        t.texStorage2D(
                            r.TEXTURE_2D,
                            nt,
                            pt,
                            lt[0].width,
                            lt[0].height
                        );
                    for (let ve = 0, Be = lt.length; ve < Be; ve++)
                        (et = lt[ve]),
                            Ct
                                ? _e &&
                                  t.texSubImage2D(
                                      r.TEXTURE_2D,
                                      ve,
                                      0,
                                      0,
                                      et.width,
                                      et.height,
                                      ot,
                                      kt,
                                      et.data
                                  )
                                : t.texImage2D(
                                      r.TEXTURE_2D,
                                      ve,
                                      pt,
                                      et.width,
                                      et.height,
                                      0,
                                      ot,
                                      kt,
                                      et.data
                                  );
                    V.generateMipmaps = !1;
                } else
                    Ct
                        ? (Dt &&
                              t.texStorage2D(
                                  r.TEXTURE_2D,
                                  nt,
                                  pt,
                                  Ye.width,
                                  Ye.height
                              ),
                          _e &&
                              t.texSubImage2D(
                                  r.TEXTURE_2D,
                                  0,
                                  0,
                                  0,
                                  Ye.width,
                                  Ye.height,
                                  ot,
                                  kt,
                                  Ye.data
                              ))
                        : t.texImage2D(
                              r.TEXTURE_2D,
                              0,
                              pt,
                              Ye.width,
                              Ye.height,
                              0,
                              ot,
                              kt,
                              Ye.data
                          );
            else if (V.isCompressedTexture)
                if (V.isCompressedArrayTexture) {
                    Ct &&
                        Dt &&
                        t.texStorage3D(
                            r.TEXTURE_2D_ARRAY,
                            nt,
                            pt,
                            lt[0].width,
                            lt[0].height,
                            Ye.depth
                        );
                    for (let ve = 0, Be = lt.length; ve < Be; ve++)
                        if (((et = lt[ve]), V.format !== er))
                            if (ot !== null)
                                if (Ct) {
                                    if (_e)
                                        if (V.layerUpdates.size > 0) {
                                            const ht = IM(
                                                et.width,
                                                et.height,
                                                V.format,
                                                V.type
                                            );
                                            for (const wt of V.layerUpdates) {
                                                const Et = et.data.subarray(
                                                    (wt * ht) /
                                                        et.data
                                                            .BYTES_PER_ELEMENT,
                                                    ((wt + 1) * ht) /
                                                        et.data
                                                            .BYTES_PER_ELEMENT
                                                );
                                                t.compressedTexSubImage3D(
                                                    r.TEXTURE_2D_ARRAY,
                                                    ve,
                                                    0,
                                                    0,
                                                    wt,
                                                    et.width,
                                                    et.height,
                                                    1,
                                                    ot,
                                                    Et,
                                                    0,
                                                    0
                                                );
                                            }
                                            V.clearLayerUpdates();
                                        } else
                                            t.compressedTexSubImage3D(
                                                r.TEXTURE_2D_ARRAY,
                                                ve,
                                                0,
                                                0,
                                                0,
                                                et.width,
                                                et.height,
                                                Ye.depth,
                                                ot,
                                                et.data,
                                                0,
                                                0
                                            );
                                } else
                                    t.compressedTexImage3D(
                                        r.TEXTURE_2D_ARRAY,
                                        ve,
                                        pt,
                                        et.width,
                                        et.height,
                                        Ye.depth,
                                        0,
                                        et.data,
                                        0,
                                        0
                                    );
                            else
                                console.warn(
                                    'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()'
                                );
                        else
                            Ct
                                ? _e &&
                                  t.texSubImage3D(
                                      r.TEXTURE_2D_ARRAY,
                                      ve,
                                      0,
                                      0,
                                      0,
                                      et.width,
                                      et.height,
                                      Ye.depth,
                                      ot,
                                      kt,
                                      et.data
                                  )
                                : t.texImage3D(
                                      r.TEXTURE_2D_ARRAY,
                                      ve,
                                      pt,
                                      et.width,
                                      et.height,
                                      Ye.depth,
                                      0,
                                      ot,
                                      kt,
                                      et.data
                                  );
                } else {
                    Ct &&
                        Dt &&
                        t.texStorage2D(
                            r.TEXTURE_2D,
                            nt,
                            pt,
                            lt[0].width,
                            lt[0].height
                        );
                    for (let ve = 0, Be = lt.length; ve < Be; ve++)
                        (et = lt[ve]),
                            V.format !== er
                                ? ot !== null
                                    ? Ct
                                        ? _e &&
                                          t.compressedTexSubImage2D(
                                              r.TEXTURE_2D,
                                              ve,
                                              0,
                                              0,
                                              et.width,
                                              et.height,
                                              ot,
                                              et.data
                                          )
                                        : t.compressedTexImage2D(
                                              r.TEXTURE_2D,
                                              ve,
                                              pt,
                                              et.width,
                                              et.height,
                                              0,
                                              et.data
                                          )
                                    : console.warn(
                                          'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()'
                                      )
                                : Ct
                                  ? _e &&
                                    t.texSubImage2D(
                                        r.TEXTURE_2D,
                                        ve,
                                        0,
                                        0,
                                        et.width,
                                        et.height,
                                        ot,
                                        kt,
                                        et.data
                                    )
                                  : t.texImage2D(
                                        r.TEXTURE_2D,
                                        ve,
                                        pt,
                                        et.width,
                                        et.height,
                                        0,
                                        ot,
                                        kt,
                                        et.data
                                    );
                }
            else if (V.isDataArrayTexture)
                if (Ct) {
                    if (
                        (Dt &&
                            t.texStorage3D(
                                r.TEXTURE_2D_ARRAY,
                                nt,
                                pt,
                                Ye.width,
                                Ye.height,
                                Ye.depth
                            ),
                        _e)
                    )
                        if (V.layerUpdates.size > 0) {
                            const ve = IM(
                                Ye.width,
                                Ye.height,
                                V.format,
                                V.type
                            );
                            for (const Be of V.layerUpdates) {
                                const ht = Ye.data.subarray(
                                    (Be * ve) / Ye.data.BYTES_PER_ELEMENT,
                                    ((Be + 1) * ve) / Ye.data.BYTES_PER_ELEMENT
                                );
                                t.texSubImage3D(
                                    r.TEXTURE_2D_ARRAY,
                                    0,
                                    0,
                                    0,
                                    Be,
                                    Ye.width,
                                    Ye.height,
                                    1,
                                    ot,
                                    kt,
                                    ht
                                );
                            }
                            V.clearLayerUpdates();
                        } else
                            t.texSubImage3D(
                                r.TEXTURE_2D_ARRAY,
                                0,
                                0,
                                0,
                                0,
                                Ye.width,
                                Ye.height,
                                Ye.depth,
                                ot,
                                kt,
                                Ye.data
                            );
                } else
                    t.texImage3D(
                        r.TEXTURE_2D_ARRAY,
                        0,
                        pt,
                        Ye.width,
                        Ye.height,
                        Ye.depth,
                        0,
                        ot,
                        kt,
                        Ye.data
                    );
            else if (V.isData3DTexture)
                Ct
                    ? (Dt &&
                          t.texStorage3D(
                              r.TEXTURE_3D,
                              nt,
                              pt,
                              Ye.width,
                              Ye.height,
                              Ye.depth
                          ),
                      _e &&
                          t.texSubImage3D(
                              r.TEXTURE_3D,
                              0,
                              0,
                              0,
                              0,
                              Ye.width,
                              Ye.height,
                              Ye.depth,
                              ot,
                              kt,
                              Ye.data
                          ))
                    : t.texImage3D(
                          r.TEXTURE_3D,
                          0,
                          pt,
                          Ye.width,
                          Ye.height,
                          Ye.depth,
                          0,
                          ot,
                          kt,
                          Ye.data
                      );
            else if (V.isFramebufferTexture) {
                if (Dt)
                    if (Ct)
                        t.texStorage2D(
                            r.TEXTURE_2D,
                            nt,
                            pt,
                            Ye.width,
                            Ye.height
                        );
                    else {
                        let ve = Ye.width,
                            Be = Ye.height;
                        for (let ht = 0; ht < nt; ht++)
                            t.texImage2D(
                                r.TEXTURE_2D,
                                ht,
                                pt,
                                ve,
                                Be,
                                0,
                                ot,
                                kt,
                                null
                            ),
                                (ve >>= 1),
                                (Be >>= 1);
                    }
            } else if (lt.length > 0) {
                if (Ct && Dt) {
                    const ve = Je(lt[0]);
                    t.texStorage2D(r.TEXTURE_2D, nt, pt, ve.width, ve.height);
                }
                for (let ve = 0, Be = lt.length; ve < Be; ve++)
                    (et = lt[ve]),
                        Ct
                            ? _e &&
                              t.texSubImage2D(
                                  r.TEXTURE_2D,
                                  ve,
                                  0,
                                  0,
                                  ot,
                                  kt,
                                  et
                              )
                            : t.texImage2D(r.TEXTURE_2D, ve, pt, ot, kt, et);
                V.generateMipmaps = !1;
            } else if (Ct) {
                if (Dt) {
                    const ve = Je(Ye);
                    t.texStorage2D(r.TEXTURE_2D, nt, pt, ve.width, ve.height);
                }
                _e && t.texSubImage2D(r.TEXTURE_2D, 0, 0, 0, ot, kt, Ye);
            } else t.texImage2D(r.TEXTURE_2D, 0, pt, ot, kt, Ye);
            w(V) && x(Le),
                (gt.__version = Ce.version),
                V.onUpdate && V.onUpdate(V);
        }
        te.__version = V.version;
    }
    function ne(te, V, Me) {
        if (V.image.length !== 6) return;
        const Le = $(te, V),
            Ie = V.source;
        t.bindTexture(r.TEXTURE_CUBE_MAP, te.__webglTexture, r.TEXTURE0 + Me);
        const Ce = n.get(Ie);
        if (Ie.version !== Ce.__version || Le === !0) {
            t.activeTexture(r.TEXTURE0 + Me);
            const gt = zn.getPrimaries(zn.workingColorSpace),
                Xe = V.colorSpace === vu ? null : zn.getPrimaries(V.colorSpace),
                Ze =
                    V.colorSpace === vu || gt === Xe
                        ? r.NONE
                        : r.BROWSER_DEFAULT_WEBGL;
            r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL, V.flipY),
                r.pixelStorei(
                    r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                    V.premultiplyAlpha
                ),
                r.pixelStorei(r.UNPACK_ALIGNMENT, V.unpackAlignment),
                r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL, Ze);
            const at = V.isCompressedTexture || V.image[0].isCompressedTexture,
                Ye = V.image[0] && V.image[0].isDataTexture,
                ot = [];
            for (let Be = 0; Be < 6; Be++)
                !at && !Ye
                    ? (ot[Be] = S(V.image[Be], !0, i.maxCubemapSize))
                    : (ot[Be] = Ye ? V.image[Be].image : V.image[Be]),
                    (ot[Be] = De(V, ot[Be]));
            const kt = ot[0],
                pt = s.convert(V.format, V.colorSpace),
                et = s.convert(V.type),
                lt = A(V.internalFormat, pt, et, V.colorSpace),
                Ct = V.isVideoTexture !== !0,
                Dt = Ce.__version === void 0 || Le === !0,
                _e = Ie.dataReady;
            let nt = b(V, kt);
            F(r.TEXTURE_CUBE_MAP, V);
            let ve;
            if (at) {
                Ct &&
                    Dt &&
                    t.texStorage2D(
                        r.TEXTURE_CUBE_MAP,
                        nt,
                        lt,
                        kt.width,
                        kt.height
                    );
                for (let Be = 0; Be < 6; Be++) {
                    ve = ot[Be].mipmaps;
                    for (let ht = 0; ht < ve.length; ht++) {
                        const wt = ve[ht];
                        V.format !== er
                            ? pt !== null
                                ? Ct
                                    ? _e &&
                                      t.compressedTexSubImage2D(
                                          r.TEXTURE_CUBE_MAP_POSITIVE_X + Be,
                                          ht,
                                          0,
                                          0,
                                          wt.width,
                                          wt.height,
                                          pt,
                                          wt.data
                                      )
                                    : t.compressedTexImage2D(
                                          r.TEXTURE_CUBE_MAP_POSITIVE_X + Be,
                                          ht,
                                          lt,
                                          wt.width,
                                          wt.height,
                                          0,
                                          wt.data
                                      )
                                : console.warn(
                                      'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()'
                                  )
                            : Ct
                              ? _e &&
                                t.texSubImage2D(
                                    r.TEXTURE_CUBE_MAP_POSITIVE_X + Be,
                                    ht,
                                    0,
                                    0,
                                    wt.width,
                                    wt.height,
                                    pt,
                                    et,
                                    wt.data
                                )
                              : t.texImage2D(
                                    r.TEXTURE_CUBE_MAP_POSITIVE_X + Be,
                                    ht,
                                    lt,
                                    wt.width,
                                    wt.height,
                                    0,
                                    pt,
                                    et,
                                    wt.data
                                );
                    }
                }
            } else {
                if (((ve = V.mipmaps), Ct && Dt)) {
                    ve.length > 0 && nt++;
                    const Be = Je(ot[0]);
                    t.texStorage2D(
                        r.TEXTURE_CUBE_MAP,
                        nt,
                        lt,
                        Be.width,
                        Be.height
                    );
                }
                for (let Be = 0; Be < 6; Be++)
                    if (Ye) {
                        Ct
                            ? _e &&
                              t.texSubImage2D(
                                  r.TEXTURE_CUBE_MAP_POSITIVE_X + Be,
                                  0,
                                  0,
                                  0,
                                  ot[Be].width,
                                  ot[Be].height,
                                  pt,
                                  et,
                                  ot[Be].data
                              )
                            : t.texImage2D(
                                  r.TEXTURE_CUBE_MAP_POSITIVE_X + Be,
                                  0,
                                  lt,
                                  ot[Be].width,
                                  ot[Be].height,
                                  0,
                                  pt,
                                  et,
                                  ot[Be].data
                              );
                        for (let ht = 0; ht < ve.length; ht++) {
                            const Et = ve[ht].image[Be].image;
                            Ct
                                ? _e &&
                                  t.texSubImage2D(
                                      r.TEXTURE_CUBE_MAP_POSITIVE_X + Be,
                                      ht + 1,
                                      0,
                                      0,
                                      Et.width,
                                      Et.height,
                                      pt,
                                      et,
                                      Et.data
                                  )
                                : t.texImage2D(
                                      r.TEXTURE_CUBE_MAP_POSITIVE_X + Be,
                                      ht + 1,
                                      lt,
                                      Et.width,
                                      Et.height,
                                      0,
                                      pt,
                                      et,
                                      Et.data
                                  );
                        }
                    } else {
                        Ct
                            ? _e &&
                              t.texSubImage2D(
                                  r.TEXTURE_CUBE_MAP_POSITIVE_X + Be,
                                  0,
                                  0,
                                  0,
                                  pt,
                                  et,
                                  ot[Be]
                              )
                            : t.texImage2D(
                                  r.TEXTURE_CUBE_MAP_POSITIVE_X + Be,
                                  0,
                                  lt,
                                  pt,
                                  et,
                                  ot[Be]
                              );
                        for (let ht = 0; ht < ve.length; ht++) {
                            const wt = ve[ht];
                            Ct
                                ? _e &&
                                  t.texSubImage2D(
                                      r.TEXTURE_CUBE_MAP_POSITIVE_X + Be,
                                      ht + 1,
                                      0,
                                      0,
                                      pt,
                                      et,
                                      wt.image[Be]
                                  )
                                : t.texImage2D(
                                      r.TEXTURE_CUBE_MAP_POSITIVE_X + Be,
                                      ht + 1,
                                      lt,
                                      pt,
                                      et,
                                      wt.image[Be]
                                  );
                        }
                    }
            }
            w(V) && x(r.TEXTURE_CUBE_MAP),
                (Ce.__version = Ie.version),
                V.onUpdate && V.onUpdate(V);
        }
        te.__version = V.version;
    }
    function ae(te, V, Me, Le, Ie, Ce) {
        const gt = s.convert(Me.format, Me.colorSpace),
            Xe = s.convert(Me.type),
            Ze = A(Me.internalFormat, gt, Xe, Me.colorSpace);
        if (!n.get(V).__hasExternalTextures) {
            const Ye = Math.max(1, V.width >> Ce),
                ot = Math.max(1, V.height >> Ce);
            Ie === r.TEXTURE_3D || Ie === r.TEXTURE_2D_ARRAY
                ? t.texImage3D(Ie, Ce, Ze, Ye, ot, V.depth, 0, gt, Xe, null)
                : t.texImage2D(Ie, Ce, Ze, Ye, ot, 0, gt, Xe, null);
        }
        t.bindFramebuffer(r.FRAMEBUFFER, te),
            Re(V)
                ? a.framebufferTexture2DMultisampleEXT(
                      r.FRAMEBUFFER,
                      Le,
                      Ie,
                      n.get(Me).__webglTexture,
                      0,
                      We(V)
                  )
                : (Ie === r.TEXTURE_2D ||
                      (Ie >= r.TEXTURE_CUBE_MAP_POSITIVE_X &&
                          Ie <= r.TEXTURE_CUBE_MAP_NEGATIVE_Z)) &&
                  r.framebufferTexture2D(
                      r.FRAMEBUFFER,
                      Le,
                      Ie,
                      n.get(Me).__webglTexture,
                      Ce
                  ),
            t.bindFramebuffer(r.FRAMEBUFFER, null);
    }
    function me(te, V, Me) {
        if ((r.bindRenderbuffer(r.RENDERBUFFER, te), V.depthBuffer)) {
            const Le = V.depthTexture,
                Ie = Le && Le.isDepthTexture ? Le.type : null,
                Ce = T(V.stencilBuffer, Ie),
                gt = V.stencilBuffer
                    ? r.DEPTH_STENCIL_ATTACHMENT
                    : r.DEPTH_ATTACHMENT,
                Xe = We(V);
            Re(V)
                ? a.renderbufferStorageMultisampleEXT(
                      r.RENDERBUFFER,
                      Xe,
                      Ce,
                      V.width,
                      V.height
                  )
                : Me
                  ? r.renderbufferStorageMultisample(
                        r.RENDERBUFFER,
                        Xe,
                        Ce,
                        V.width,
                        V.height
                    )
                  : r.renderbufferStorage(
                        r.RENDERBUFFER,
                        Ce,
                        V.width,
                        V.height
                    ),
                r.framebufferRenderbuffer(
                    r.FRAMEBUFFER,
                    gt,
                    r.RENDERBUFFER,
                    te
                );
        } else {
            const Le = V.textures;
            for (let Ie = 0; Ie < Le.length; Ie++) {
                const Ce = Le[Ie],
                    gt = s.convert(Ce.format, Ce.colorSpace),
                    Xe = s.convert(Ce.type),
                    Ze = A(Ce.internalFormat, gt, Xe, Ce.colorSpace),
                    at = We(V);
                Me && Re(V) === !1
                    ? r.renderbufferStorageMultisample(
                          r.RENDERBUFFER,
                          at,
                          Ze,
                          V.width,
                          V.height
                      )
                    : Re(V)
                      ? a.renderbufferStorageMultisampleEXT(
                            r.RENDERBUFFER,
                            at,
                            Ze,
                            V.width,
                            V.height
                        )
                      : r.renderbufferStorage(
                            r.RENDERBUFFER,
                            Ze,
                            V.width,
                            V.height
                        );
            }
        }
        r.bindRenderbuffer(r.RENDERBUFFER, null);
    }
    function ge(te, V) {
        if (V && V.isWebGLCubeRenderTarget)
            throw new Error(
                'Depth Texture with cube render targets is not supported'
            );
        if (
            (t.bindFramebuffer(r.FRAMEBUFFER, te),
            !(V.depthTexture && V.depthTexture.isDepthTexture))
        )
            throw new Error(
                'renderTarget.depthTexture must be an instance of THREE.DepthTexture'
            );
        (!n.get(V.depthTexture).__webglTexture ||
            V.depthTexture.image.width !== V.width ||
            V.depthTexture.image.height !== V.height) &&
            ((V.depthTexture.image.width = V.width),
            (V.depthTexture.image.height = V.height),
            (V.depthTexture.needsUpdate = !0)),
            K(V.depthTexture, 0);
        const Le = n.get(V.depthTexture).__webglTexture,
            Ie = We(V);
        if (V.depthTexture.format === uh)
            Re(V)
                ? a.framebufferTexture2DMultisampleEXT(
                      r.FRAMEBUFFER,
                      r.DEPTH_ATTACHMENT,
                      r.TEXTURE_2D,
                      Le,
                      0,
                      Ie
                  )
                : r.framebufferTexture2D(
                      r.FRAMEBUFFER,
                      r.DEPTH_ATTACHMENT,
                      r.TEXTURE_2D,
                      Le,
                      0
                  );
        else if (V.depthTexture.format === mh)
            Re(V)
                ? a.framebufferTexture2DMultisampleEXT(
                      r.FRAMEBUFFER,
                      r.DEPTH_STENCIL_ATTACHMENT,
                      r.TEXTURE_2D,
                      Le,
                      0,
                      Ie
                  )
                : r.framebufferTexture2D(
                      r.FRAMEBUFFER,
                      r.DEPTH_STENCIL_ATTACHMENT,
                      r.TEXTURE_2D,
                      Le,
                      0
                  );
        else throw new Error('Unknown depthTexture format');
    }
    function Ae(te) {
        const V = n.get(te),
            Me = te.isWebGLCubeRenderTarget === !0;
        if (te.depthTexture && !V.__autoAllocateDepthBuffer) {
            if (Me)
                throw new Error(
                    'target.depthTexture not supported in Cube render targets'
                );
            ge(V.__webglFramebuffer, te);
        } else if (Me) {
            V.__webglDepthbuffer = [];
            for (let Le = 0; Le < 6; Le++)
                t.bindFramebuffer(r.FRAMEBUFFER, V.__webglFramebuffer[Le]),
                    (V.__webglDepthbuffer[Le] = r.createRenderbuffer()),
                    me(V.__webglDepthbuffer[Le], te, !1);
        } else
            t.bindFramebuffer(r.FRAMEBUFFER, V.__webglFramebuffer),
                (V.__webglDepthbuffer = r.createRenderbuffer()),
                me(V.__webglDepthbuffer, te, !1);
        t.bindFramebuffer(r.FRAMEBUFFER, null);
    }
    function je(te, V, Me) {
        const Le = n.get(te);
        V !== void 0 &&
            ae(
                Le.__webglFramebuffer,
                te,
                te.texture,
                r.COLOR_ATTACHMENT0,
                r.TEXTURE_2D,
                0
            ),
            Me !== void 0 && Ae(te);
    }
    function Qe(te) {
        const V = te.texture,
            Me = n.get(te),
            Le = n.get(V);
        te.addEventListener('dispose', L);
        const Ie = te.textures,
            Ce = te.isWebGLCubeRenderTarget === !0,
            gt = Ie.length > 1;
        if (
            (gt ||
                (Le.__webglTexture === void 0 &&
                    (Le.__webglTexture = r.createTexture()),
                (Le.__version = V.version),
                o.memory.textures++),
            Ce)
        ) {
            Me.__webglFramebuffer = [];
            for (let Xe = 0; Xe < 6; Xe++)
                if (V.mipmaps && V.mipmaps.length > 0) {
                    Me.__webglFramebuffer[Xe] = [];
                    for (let Ze = 0; Ze < V.mipmaps.length; Ze++)
                        Me.__webglFramebuffer[Xe][Ze] = r.createFramebuffer();
                } else Me.__webglFramebuffer[Xe] = r.createFramebuffer();
        } else {
            if (V.mipmaps && V.mipmaps.length > 0) {
                Me.__webglFramebuffer = [];
                for (let Xe = 0; Xe < V.mipmaps.length; Xe++)
                    Me.__webglFramebuffer[Xe] = r.createFramebuffer();
            } else Me.__webglFramebuffer = r.createFramebuffer();
            if (gt)
                for (let Xe = 0, Ze = Ie.length; Xe < Ze; Xe++) {
                    const at = n.get(Ie[Xe]);
                    at.__webglTexture === void 0 &&
                        ((at.__webglTexture = r.createTexture()),
                        o.memory.textures++);
                }
            if (te.samples > 0 && Re(te) === !1) {
                (Me.__webglMultisampledFramebuffer = r.createFramebuffer()),
                    (Me.__webglColorRenderbuffer = []),
                    t.bindFramebuffer(
                        r.FRAMEBUFFER,
                        Me.__webglMultisampledFramebuffer
                    );
                for (let Xe = 0; Xe < Ie.length; Xe++) {
                    const Ze = Ie[Xe];
                    (Me.__webglColorRenderbuffer[Xe] = r.createRenderbuffer()),
                        r.bindRenderbuffer(
                            r.RENDERBUFFER,
                            Me.__webglColorRenderbuffer[Xe]
                        );
                    const at = s.convert(Ze.format, Ze.colorSpace),
                        Ye = s.convert(Ze.type),
                        ot = A(
                            Ze.internalFormat,
                            at,
                            Ye,
                            Ze.colorSpace,
                            te.isXRRenderTarget === !0
                        ),
                        kt = We(te);
                    r.renderbufferStorageMultisample(
                        r.RENDERBUFFER,
                        kt,
                        ot,
                        te.width,
                        te.height
                    ),
                        r.framebufferRenderbuffer(
                            r.FRAMEBUFFER,
                            r.COLOR_ATTACHMENT0 + Xe,
                            r.RENDERBUFFER,
                            Me.__webglColorRenderbuffer[Xe]
                        );
                }
                r.bindRenderbuffer(r.RENDERBUFFER, null),
                    te.depthBuffer &&
                        ((Me.__webglDepthRenderbuffer = r.createRenderbuffer()),
                        me(Me.__webglDepthRenderbuffer, te, !0)),
                    t.bindFramebuffer(r.FRAMEBUFFER, null);
            }
        }
        if (Ce) {
            t.bindTexture(r.TEXTURE_CUBE_MAP, Le.__webglTexture),
                F(r.TEXTURE_CUBE_MAP, V);
            for (let Xe = 0; Xe < 6; Xe++)
                if (V.mipmaps && V.mipmaps.length > 0)
                    for (let Ze = 0; Ze < V.mipmaps.length; Ze++)
                        ae(
                            Me.__webglFramebuffer[Xe][Ze],
                            te,
                            V,
                            r.COLOR_ATTACHMENT0,
                            r.TEXTURE_CUBE_MAP_POSITIVE_X + Xe,
                            Ze
                        );
                else
                    ae(
                        Me.__webglFramebuffer[Xe],
                        te,
                        V,
                        r.COLOR_ATTACHMENT0,
                        r.TEXTURE_CUBE_MAP_POSITIVE_X + Xe,
                        0
                    );
            w(V) && x(r.TEXTURE_CUBE_MAP), t.unbindTexture();
        } else if (gt) {
            for (let Xe = 0, Ze = Ie.length; Xe < Ze; Xe++) {
                const at = Ie[Xe],
                    Ye = n.get(at);
                t.bindTexture(r.TEXTURE_2D, Ye.__webglTexture),
                    F(r.TEXTURE_2D, at),
                    ae(
                        Me.__webglFramebuffer,
                        te,
                        at,
                        r.COLOR_ATTACHMENT0 + Xe,
                        r.TEXTURE_2D,
                        0
                    ),
                    w(at) && x(r.TEXTURE_2D);
            }
            t.unbindTexture();
        } else {
            let Xe = r.TEXTURE_2D;
            if (
                ((te.isWebGL3DRenderTarget || te.isWebGLArrayRenderTarget) &&
                    (Xe = te.isWebGL3DRenderTarget
                        ? r.TEXTURE_3D
                        : r.TEXTURE_2D_ARRAY),
                t.bindTexture(Xe, Le.__webglTexture),
                F(Xe, V),
                V.mipmaps && V.mipmaps.length > 0)
            )
                for (let Ze = 0; Ze < V.mipmaps.length; Ze++)
                    ae(
                        Me.__webglFramebuffer[Ze],
                        te,
                        V,
                        r.COLOR_ATTACHMENT0,
                        Xe,
                        Ze
                    );
            else ae(Me.__webglFramebuffer, te, V, r.COLOR_ATTACHMENT0, Xe, 0);
            w(V) && x(Xe), t.unbindTexture();
        }
        te.depthBuffer && Ae(te);
    }
    function Ke(te) {
        const V = te.textures;
        for (let Me = 0, Le = V.length; Me < Le; Me++) {
            const Ie = V[Me];
            if (w(Ie)) {
                const Ce = te.isWebGLCubeRenderTarget
                        ? r.TEXTURE_CUBE_MAP
                        : r.TEXTURE_2D,
                    gt = n.get(Ie).__webglTexture;
                t.bindTexture(Ce, gt), x(Ce), t.unbindTexture();
            }
        }
    }
    const X = [],
        He = [];
    function Fe(te) {
        if (te.samples > 0) {
            if (Re(te) === !1) {
                const V = te.textures,
                    Me = te.width,
                    Le = te.height;
                let Ie = r.COLOR_BUFFER_BIT;
                const Ce = te.stencilBuffer
                        ? r.DEPTH_STENCIL_ATTACHMENT
                        : r.DEPTH_ATTACHMENT,
                    gt = n.get(te),
                    Xe = V.length > 1;
                if (Xe)
                    for (let Ze = 0; Ze < V.length; Ze++)
                        t.bindFramebuffer(
                            r.FRAMEBUFFER,
                            gt.__webglMultisampledFramebuffer
                        ),
                            r.framebufferRenderbuffer(
                                r.FRAMEBUFFER,
                                r.COLOR_ATTACHMENT0 + Ze,
                                r.RENDERBUFFER,
                                null
                            ),
                            t.bindFramebuffer(
                                r.FRAMEBUFFER,
                                gt.__webglFramebuffer
                            ),
                            r.framebufferTexture2D(
                                r.DRAW_FRAMEBUFFER,
                                r.COLOR_ATTACHMENT0 + Ze,
                                r.TEXTURE_2D,
                                null,
                                0
                            );
                t.bindFramebuffer(
                    r.READ_FRAMEBUFFER,
                    gt.__webglMultisampledFramebuffer
                ),
                    t.bindFramebuffer(
                        r.DRAW_FRAMEBUFFER,
                        gt.__webglFramebuffer
                    );
                for (let Ze = 0; Ze < V.length; Ze++) {
                    if (
                        (te.resolveDepthBuffer &&
                            (te.depthBuffer && (Ie |= r.DEPTH_BUFFER_BIT),
                            te.stencilBuffer &&
                                te.resolveStencilBuffer &&
                                (Ie |= r.STENCIL_BUFFER_BIT)),
                        Xe)
                    ) {
                        r.framebufferRenderbuffer(
                            r.READ_FRAMEBUFFER,
                            r.COLOR_ATTACHMENT0,
                            r.RENDERBUFFER,
                            gt.__webglColorRenderbuffer[Ze]
                        );
                        const at = n.get(V[Ze]).__webglTexture;
                        r.framebufferTexture2D(
                            r.DRAW_FRAMEBUFFER,
                            r.COLOR_ATTACHMENT0,
                            r.TEXTURE_2D,
                            at,
                            0
                        );
                    }
                    r.blitFramebuffer(
                        0,
                        0,
                        Me,
                        Le,
                        0,
                        0,
                        Me,
                        Le,
                        Ie,
                        r.NEAREST
                    ),
                        l === !0 &&
                            ((X.length = 0),
                            (He.length = 0),
                            X.push(r.COLOR_ATTACHMENT0 + Ze),
                            te.depthBuffer &&
                                te.resolveDepthBuffer === !1 &&
                                (X.push(Ce),
                                He.push(Ce),
                                r.invalidateFramebuffer(
                                    r.DRAW_FRAMEBUFFER,
                                    He
                                )),
                            r.invalidateFramebuffer(r.READ_FRAMEBUFFER, X));
                }
                if (
                    (t.bindFramebuffer(r.READ_FRAMEBUFFER, null),
                    t.bindFramebuffer(r.DRAW_FRAMEBUFFER, null),
                    Xe)
                )
                    for (let Ze = 0; Ze < V.length; Ze++) {
                        t.bindFramebuffer(
                            r.FRAMEBUFFER,
                            gt.__webglMultisampledFramebuffer
                        ),
                            r.framebufferRenderbuffer(
                                r.FRAMEBUFFER,
                                r.COLOR_ATTACHMENT0 + Ze,
                                r.RENDERBUFFER,
                                gt.__webglColorRenderbuffer[Ze]
                            );
                        const at = n.get(V[Ze]).__webglTexture;
                        t.bindFramebuffer(r.FRAMEBUFFER, gt.__webglFramebuffer),
                            r.framebufferTexture2D(
                                r.DRAW_FRAMEBUFFER,
                                r.COLOR_ATTACHMENT0 + Ze,
                                r.TEXTURE_2D,
                                at,
                                0
                            );
                    }
                t.bindFramebuffer(
                    r.DRAW_FRAMEBUFFER,
                    gt.__webglMultisampledFramebuffer
                );
            } else if (te.depthBuffer && te.resolveDepthBuffer === !1 && l) {
                const V = te.stencilBuffer
                    ? r.DEPTH_STENCIL_ATTACHMENT
                    : r.DEPTH_ATTACHMENT;
                r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER, [V]);
            }
        }
    }
    function We(te) {
        return Math.min(i.maxSamples, te.samples);
    }
    function Re(te) {
        const V = n.get(te);
        return (
            te.samples > 0 &&
            e.has('WEBGL_multisampled_render_to_texture') === !0 &&
            V.__useRenderToTexture !== !1
        );
    }
    function st(te) {
        const V = o.render.frame;
        f.get(te) !== V && (f.set(te, V), te.update());
    }
    function De(te, V) {
        const Me = te.colorSpace,
            Le = te.format,
            Ie = te.type;
        return (
            te.isCompressedTexture === !0 ||
                te.isVideoTexture === !0 ||
                (Me !== na &&
                    Me !== vu &&
                    (zn.getTransfer(Me) === ci
                        ? (Le !== er || Ie !== so) &&
                          console.warn(
                              'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.'
                          )
                        : console.error(
                              'THREE.WebGLTextures: Unsupported texture color space:',
                              Me
                          ))),
            V
        );
    }
    function Je(te) {
        return (
            typeof HTMLImageElement < 'u' && te instanceof HTMLImageElement
                ? ((u.width = te.naturalWidth || te.width),
                  (u.height = te.naturalHeight || te.height))
                : typeof VideoFrame < 'u' && te instanceof VideoFrame
                  ? ((u.width = te.displayWidth), (u.height = te.displayHeight))
                  : ((u.width = te.width), (u.height = te.height)),
            u
        );
    }
    (this.allocateTextureUnit = W),
        (this.resetTextureUnits = H),
        (this.setTexture2D = K),
        (this.setTexture2DArray = le),
        (this.setTexture3D = ee),
        (this.setTextureCube = de),
        (this.rebindTextures = je),
        (this.setupRenderTarget = Qe),
        (this.updateRenderTargetMipmap = Ke),
        (this.updateMultisampleRenderTarget = Fe),
        (this.setupDepthRenderbuffer = Ae),
        (this.setupFrameBufferTexture = ae),
        (this.useMultisampledRTT = Re);
}
function TO(r, e) {
    function t(n, i = vu) {
        let s;
        const o = zn.getTransfer(i);
        if (n === so) return r.UNSIGNED_BYTE;
        if (n === Ux) return r.UNSIGNED_SHORT_4_4_4_4;
        if (n === kx) return r.UNSIGNED_SHORT_5_5_5_1;
        if (n === mT) return r.UNSIGNED_INT_5_9_9_9_REV;
        if (n === Dx) return r.BYTE;
        if (n === Ox) return r.SHORT;
        if (n === Pp) return r.UNSIGNED_SHORT;
        if (n === W0) return r.INT;
        if (n === Ll) return r.UNSIGNED_INT;
        if (n === ri) return r.FLOAT;
        if (n === Er) return r.HALF_FLOAT;
        if (n === gT) return r.ALPHA;
        if (n === vT) return r.RGB;
        if (n === er) return r.RGBA;
        if (n === yT) return r.LUMINANCE;
        if (n === _T) return r.LUMINANCE_ALPHA;
        if (n === uh) return r.DEPTH_COMPONENT;
        if (n === mh) return r.DEPTH_STENCIL;
        if (n === Tc) return r.RED;
        if (n === j0) return r.RED_INTEGER;
        if (n === xT) return r.RG;
        if (n === Nx) return r.RG_INTEGER;
        if (n === Fx) return r.RGBA_INTEGER;
        if (n === Ng || n === Fg || n === Bg || n === zg)
            if (o === ci)
                if (
                    ((s = e.get('WEBGL_compressed_texture_s3tc_srgb')),
                    s !== null)
                ) {
                    if (n === Ng) return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;
                    if (n === Fg) return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;
                    if (n === Bg) return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;
                    if (n === zg) return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;
                } else return null;
            else if (
                ((s = e.get('WEBGL_compressed_texture_s3tc')), s !== null)
            ) {
                if (n === Ng) return s.COMPRESSED_RGB_S3TC_DXT1_EXT;
                if (n === Fg) return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                if (n === Bg) return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                if (n === zg) return s.COMPRESSED_RGBA_S3TC_DXT5_EXT;
            } else return null;
        if (n === B_ || n === z_ || n === V_ || n === H_)
            if (((s = e.get('WEBGL_compressed_texture_pvrtc')), s !== null)) {
                if (n === B_) return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                if (n === z_) return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                if (n === V_) return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                if (n === H_) return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;
            } else return null;
        if (n === G_ || n === W_ || n === j_)
            if (((s = e.get('WEBGL_compressed_texture_etc')), s !== null)) {
                if (n === G_ || n === W_)
                    return o === ci
                        ? s.COMPRESSED_SRGB8_ETC2
                        : s.COMPRESSED_RGB8_ETC2;
                if (n === j_)
                    return o === ci
                        ? s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC
                        : s.COMPRESSED_RGBA8_ETC2_EAC;
            } else return null;
        if (
            n === X_ ||
            n === Y_ ||
            n === q_ ||
            n === K_ ||
            n === Z_ ||
            n === $_ ||
            n === J_ ||
            n === Q_ ||
            n === ex ||
            n === tx ||
            n === nx ||
            n === ix ||
            n === rx ||
            n === sx
        )
            if (((s = e.get('WEBGL_compressed_texture_astc')), s !== null)) {
                if (n === X_)
                    return o === ci
                        ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR
                        : s.COMPRESSED_RGBA_ASTC_4x4_KHR;
                if (n === Y_)
                    return o === ci
                        ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR
                        : s.COMPRESSED_RGBA_ASTC_5x4_KHR;
                if (n === q_)
                    return o === ci
                        ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR
                        : s.COMPRESSED_RGBA_ASTC_5x5_KHR;
                if (n === K_)
                    return o === ci
                        ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR
                        : s.COMPRESSED_RGBA_ASTC_6x5_KHR;
                if (n === Z_)
                    return o === ci
                        ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR
                        : s.COMPRESSED_RGBA_ASTC_6x6_KHR;
                if (n === $_)
                    return o === ci
                        ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR
                        : s.COMPRESSED_RGBA_ASTC_8x5_KHR;
                if (n === J_)
                    return o === ci
                        ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR
                        : s.COMPRESSED_RGBA_ASTC_8x6_KHR;
                if (n === Q_)
                    return o === ci
                        ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR
                        : s.COMPRESSED_RGBA_ASTC_8x8_KHR;
                if (n === ex)
                    return o === ci
                        ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR
                        : s.COMPRESSED_RGBA_ASTC_10x5_KHR;
                if (n === tx)
                    return o === ci
                        ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR
                        : s.COMPRESSED_RGBA_ASTC_10x6_KHR;
                if (n === nx)
                    return o === ci
                        ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR
                        : s.COMPRESSED_RGBA_ASTC_10x8_KHR;
                if (n === ix)
                    return o === ci
                        ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR
                        : s.COMPRESSED_RGBA_ASTC_10x10_KHR;
                if (n === rx)
                    return o === ci
                        ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR
                        : s.COMPRESSED_RGBA_ASTC_12x10_KHR;
                if (n === sx)
                    return o === ci
                        ? s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR
                        : s.COMPRESSED_RGBA_ASTC_12x12_KHR;
            } else return null;
        if (n === Vg || n === ox || n === ax)
            if (((s = e.get('EXT_texture_compression_bptc')), s !== null)) {
                if (n === Vg)
                    return o === ci
                        ? s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT
                        : s.COMPRESSED_RGBA_BPTC_UNORM_EXT;
                if (n === ox) return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;
                if (n === ax) return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;
            } else return null;
        if (n === ST || n === lx || n === ux || n === cx)
            if (((s = e.get('EXT_texture_compression_rgtc')), s !== null)) {
                if (n === Vg) return s.COMPRESSED_RED_RGTC1_EXT;
                if (n === lx) return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;
                if (n === ux) return s.COMPRESSED_RED_GREEN_RGTC2_EXT;
                if (n === cx) return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;
            } else return null;
        return n === ph ? r.UNSIGNED_INT_24_8 : r[n] !== void 0 ? r[n] : null;
    }
    return { convert: t };
}
class AO extends Nr {
    constructor(e = []) {
        super(), (this.isArrayCamera = !0), (this.cameras = e);
    }
}
class up extends In {
    constructor() {
        super(), (this.isGroup = !0), (this.type = 'Group');
    }
}
const Ij = { type: 'move' };
class WS {
    constructor() {
        (this._targetRay = null), (this._grip = null), (this._hand = null);
    }
    getHandSpace() {
        return (
            this._hand === null &&
                ((this._hand = new up()),
                (this._hand.matrixAutoUpdate = !1),
                (this._hand.visible = !1),
                (this._hand.joints = {}),
                (this._hand.inputState = { pinching: !1 })),
            this._hand
        );
    }
    getTargetRaySpace() {
        return (
            this._targetRay === null &&
                ((this._targetRay = new up()),
                (this._targetRay.matrixAutoUpdate = !1),
                (this._targetRay.visible = !1),
                (this._targetRay.hasLinearVelocity = !1),
                (this._targetRay.linearVelocity = new re()),
                (this._targetRay.hasAngularVelocity = !1),
                (this._targetRay.angularVelocity = new re())),
            this._targetRay
        );
    }
    getGripSpace() {
        return (
            this._grip === null &&
                ((this._grip = new up()),
                (this._grip.matrixAutoUpdate = !1),
                (this._grip.visible = !1),
                (this._grip.hasLinearVelocity = !1),
                (this._grip.linearVelocity = new re()),
                (this._grip.hasAngularVelocity = !1),
                (this._grip.angularVelocity = new re())),
            this._grip
        );
    }
    dispatchEvent(e) {
        return (
            this._targetRay !== null && this._targetRay.dispatchEvent(e),
            this._grip !== null && this._grip.dispatchEvent(e),
            this._hand !== null && this._hand.dispatchEvent(e),
            this
        );
    }
    connect(e) {
        if (e && e.hand) {
            const t = this._hand;
            if (t) for (const n of e.hand.values()) this._getHandJoint(t, n);
        }
        return this.dispatchEvent({ type: 'connected', data: e }), this;
    }
    disconnect(e) {
        return (
            this.dispatchEvent({ type: 'disconnected', data: e }),
            this._targetRay !== null && (this._targetRay.visible = !1),
            this._grip !== null && (this._grip.visible = !1),
            this._hand !== null && (this._hand.visible = !1),
            this
        );
    }
    update(e, t, n) {
        let i = null,
            s = null,
            o = null;
        const a = this._targetRay,
            l = this._grip,
            u = this._hand;
        if (e && t.session.visibilityState !== 'visible-blurred') {
            if (u && e.hand) {
                o = !0;
                for (const S of e.hand.values()) {
                    const w = t.getJointPose(S, n),
                        x = this._getHandJoint(u, S);
                    w !== null &&
                        (x.matrix.fromArray(w.transform.matrix),
                        x.matrix.decompose(x.position, x.rotation, x.scale),
                        (x.matrixWorldNeedsUpdate = !0),
                        (x.jointRadius = w.radius)),
                        (x.visible = w !== null);
                }
                const f = u.joints['index-finger-tip'],
                    d = u.joints['thumb-tip'],
                    m = f.position.distanceTo(d.position),
                    v = 0.02,
                    _ = 0.005;
                u.inputState.pinching && m > v + _
                    ? ((u.inputState.pinching = !1),
                      this.dispatchEvent({
                          type: 'pinchend',
                          handedness: e.handedness,
                          target: this,
                      }))
                    : !u.inputState.pinching &&
                      m <= v - _ &&
                      ((u.inputState.pinching = !0),
                      this.dispatchEvent({
                          type: 'pinchstart',
                          handedness: e.handedness,
                          target: this,
                      }));
            } else
                l !== null &&
                    e.gripSpace &&
                    ((s = t.getPose(e.gripSpace, n)),
                    s !== null &&
                        (l.matrix.fromArray(s.transform.matrix),
                        l.matrix.decompose(l.position, l.rotation, l.scale),
                        (l.matrixWorldNeedsUpdate = !0),
                        s.linearVelocity
                            ? ((l.hasLinearVelocity = !0),
                              l.linearVelocity.copy(s.linearVelocity))
                            : (l.hasLinearVelocity = !1),
                        s.angularVelocity
                            ? ((l.hasAngularVelocity = !0),
                              l.angularVelocity.copy(s.angularVelocity))
                            : (l.hasAngularVelocity = !1)));
            a !== null &&
                ((i = t.getPose(e.targetRaySpace, n)),
                i === null && s !== null && (i = s),
                i !== null &&
                    (a.matrix.fromArray(i.transform.matrix),
                    a.matrix.decompose(a.position, a.rotation, a.scale),
                    (a.matrixWorldNeedsUpdate = !0),
                    i.linearVelocity
                        ? ((a.hasLinearVelocity = !0),
                          a.linearVelocity.copy(i.linearVelocity))
                        : (a.hasLinearVelocity = !1),
                    i.angularVelocity
                        ? ((a.hasAngularVelocity = !0),
                          a.angularVelocity.copy(i.angularVelocity))
                        : (a.hasAngularVelocity = !1),
                    this.dispatchEvent(Ij)));
        }
        return (
            a !== null && (a.visible = i !== null),
            l !== null && (l.visible = s !== null),
            u !== null && (u.visible = o !== null),
            this
        );
    }
    _getHandJoint(e, t) {
        if (e.joints[t.jointName] === void 0) {
            const n = new up();
            (n.matrixAutoUpdate = !1),
                (n.visible = !1),
                (e.joints[t.jointName] = n),
                e.add(n);
        }
        return e.joints[t.jointName];
    }
}
const Dj = `
void main() {

	gl_Position = vec4( position, 1.0 );

}`,
    Oj = `
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;
class Uj {
    constructor() {
        (this.texture = null),
            (this.mesh = null),
            (this.depthNear = 0),
            (this.depthFar = 0);
    }
    init(e, t, n) {
        if (this.texture === null) {
            const i = new Vn(),
                s = e.properties.get(i);
            (s.__webglTexture = t.texture),
                (t.depthNear != n.depthNear || t.depthFar != n.depthFar) &&
                    ((this.depthNear = t.depthNear),
                    (this.depthFar = t.depthFar)),
                (this.texture = i);
        }
    }
    getMesh(e) {
        if (this.texture !== null && this.mesh === null) {
            const t = e.cameras[0].viewport,
                n = new Qi({
                    vertexShader: Dj,
                    fragmentShader: Oj,
                    uniforms: {
                        depthColor: { value: this.texture },
                        depthWidth: { value: t.z },
                        depthHeight: { value: t.w },
                    },
                });
            this.mesh = new Jn(new ra(20, 20), n);
        }
        return this.mesh;
    }
    reset() {
        (this.texture = null), (this.mesh = null);
    }
    getDepthTexture() {
        return this.texture;
    }
}
class kj extends bu {
    constructor(e, t) {
        super();
        const n = this;
        let i = null,
            s = 1,
            o = null,
            a = 'local-floor',
            l = 1,
            u = null,
            f = null,
            d = null,
            m = null,
            v = null,
            _ = null;
        const S = new Uj(),
            w = t.getContextAttributes();
        let x = null,
            A = null;
        const T = [],
            b = [],
            P = new tt();
        let L = null;
        const D = new Nr();
        D.layers.enable(1), (D.viewport = new En());
        const O = new Nr();
        O.layers.enable(2), (O.viewport = new En());
        const I = [D, O],
            U = new AO();
        U.layers.enable(1), U.layers.enable(2);
        let H = null,
            W = null;
        (this.cameraAutoUpdate = !0),
            (this.enabled = !1),
            (this.isPresenting = !1),
            (this.getController = function (ne) {
                let ae = T[ne];
                return (
                    ae === void 0 && ((ae = new WS()), (T[ne] = ae)),
                    ae.getTargetRaySpace()
                );
            }),
            (this.getControllerGrip = function (ne) {
                let ae = T[ne];
                return (
                    ae === void 0 && ((ae = new WS()), (T[ne] = ae)),
                    ae.getGripSpace()
                );
            }),
            (this.getHand = function (ne) {
                let ae = T[ne];
                return (
                    ae === void 0 && ((ae = new WS()), (T[ne] = ae)),
                    ae.getHandSpace()
                );
            });
        function q(ne) {
            const ae = b.indexOf(ne.inputSource);
            if (ae === -1) return;
            const me = T[ae];
            me !== void 0 &&
                (me.update(ne.inputSource, ne.frame, u || o),
                me.dispatchEvent({ type: ne.type, data: ne.inputSource }));
        }
        function K() {
            i.removeEventListener('select', q),
                i.removeEventListener('selectstart', q),
                i.removeEventListener('selectend', q),
                i.removeEventListener('squeeze', q),
                i.removeEventListener('squeezestart', q),
                i.removeEventListener('squeezeend', q),
                i.removeEventListener('end', K),
                i.removeEventListener('inputsourceschange', le);
            for (let ne = 0; ne < T.length; ne++) {
                const ae = b[ne];
                ae !== null && ((b[ne] = null), T[ne].disconnect(ae));
            }
            (H = null),
                (W = null),
                S.reset(),
                e.setRenderTarget(x),
                (v = null),
                (m = null),
                (d = null),
                (i = null),
                (A = null),
                fe.stop(),
                (n.isPresenting = !1),
                e.setPixelRatio(L),
                e.setSize(P.width, P.height, !1),
                n.dispatchEvent({ type: 'sessionend' });
        }
        (this.setFramebufferScaleFactor = function (ne) {
            (s = ne),
                n.isPresenting === !0 &&
                    console.warn(
                        'THREE.WebXRManager: Cannot change framebuffer scale while presenting.'
                    );
        }),
            (this.setReferenceSpaceType = function (ne) {
                (a = ne),
                    n.isPresenting === !0 &&
                        console.warn(
                            'THREE.WebXRManager: Cannot change reference space type while presenting.'
                        );
            }),
            (this.getReferenceSpace = function () {
                return u || o;
            }),
            (this.setReferenceSpace = function (ne) {
                u = ne;
            }),
            (this.getBaseLayer = function () {
                return m !== null ? m : v;
            }),
            (this.getBinding = function () {
                return d;
            }),
            (this.getFrame = function () {
                return _;
            }),
            (this.getSession = function () {
                return i;
            }),
            (this.setSession = async function (ne) {
                if (((i = ne), i !== null)) {
                    if (
                        ((x = e.getRenderTarget()),
                        i.addEventListener('select', q),
                        i.addEventListener('selectstart', q),
                        i.addEventListener('selectend', q),
                        i.addEventListener('squeeze', q),
                        i.addEventListener('squeezestart', q),
                        i.addEventListener('squeezeend', q),
                        i.addEventListener('end', K),
                        i.addEventListener('inputsourceschange', le),
                        w.xrCompatible !== !0 && (await t.makeXRCompatible()),
                        (L = e.getPixelRatio()),
                        e.getSize(P),
                        i.renderState.layers === void 0)
                    ) {
                        const ae = {
                            antialias: w.antialias,
                            alpha: !0,
                            depth: w.depth,
                            stencil: w.stencil,
                            framebufferScaleFactor: s,
                        };
                        (v = new XRWebGLLayer(i, t, ae)),
                            i.updateRenderState({ baseLayer: v }),
                            e.setPixelRatio(1),
                            e.setSize(
                                v.framebufferWidth,
                                v.framebufferHeight,
                                !1
                            ),
                            (A = new Ji(
                                v.framebufferWidth,
                                v.framebufferHeight,
                                {
                                    format: er,
                                    type: so,
                                    colorSpace: e.outputColorSpace,
                                    stencilBuffer: w.stencil,
                                }
                            ));
                    } else {
                        let ae = null,
                            me = null,
                            ge = null;
                        w.depth &&
                            ((ge = w.stencil
                                ? t.DEPTH24_STENCIL8
                                : t.DEPTH_COMPONENT24),
                            (ae = w.stencil ? mh : uh),
                            (me = w.stencil ? ph : Ll));
                        const Ae = {
                            colorFormat: t.RGBA8,
                            depthFormat: ge,
                            scaleFactor: s,
                        };
                        (d = new XRWebGLBinding(i, t)),
                            (m = d.createProjectionLayer(Ae)),
                            i.updateRenderState({ layers: [m] }),
                            e.setPixelRatio(1),
                            e.setSize(m.textureWidth, m.textureHeight, !1),
                            (A = new Ji(m.textureWidth, m.textureHeight, {
                                format: er,
                                type: so,
                                depthTexture: new Gx(
                                    m.textureWidth,
                                    m.textureHeight,
                                    me,
                                    void 0,
                                    void 0,
                                    void 0,
                                    void 0,
                                    void 0,
                                    void 0,
                                    ae
                                ),
                                stencilBuffer: w.stencil,
                                colorSpace: e.outputColorSpace,
                                samples: w.antialias ? 4 : 0,
                                resolveDepthBuffer: m.ignoreDepthValues === !1,
                            }));
                    }
                    (A.isXRRenderTarget = !0),
                        this.setFoveation(l),
                        (u = null),
                        (o = await i.requestReferenceSpace(a)),
                        fe.setContext(i),
                        fe.start(),
                        (n.isPresenting = !0),
                        n.dispatchEvent({ type: 'sessionstart' });
                }
            }),
            (this.getEnvironmentBlendMode = function () {
                if (i !== null) return i.environmentBlendMode;
            }),
            (this.getDepthTexture = function () {
                return S.getDepthTexture();
            });
        function le(ne) {
            for (let ae = 0; ae < ne.removed.length; ae++) {
                const me = ne.removed[ae],
                    ge = b.indexOf(me);
                ge >= 0 && ((b[ge] = null), T[ge].disconnect(me));
            }
            for (let ae = 0; ae < ne.added.length; ae++) {
                const me = ne.added[ae];
                let ge = b.indexOf(me);
                if (ge === -1) {
                    for (let je = 0; je < T.length; je++)
                        if (je >= b.length) {
                            b.push(me), (ge = je);
                            break;
                        } else if (b[je] === null) {
                            (b[je] = me), (ge = je);
                            break;
                        }
                    if (ge === -1) break;
                }
                const Ae = T[ge];
                Ae && Ae.connect(me);
            }
        }
        const ee = new re(),
            de = new re();
        function Z(ne, ae, me) {
            ee.setFromMatrixPosition(ae.matrixWorld),
                de.setFromMatrixPosition(me.matrixWorld);
            const ge = ee.distanceTo(de),
                Ae = ae.projectionMatrix.elements,
                je = me.projectionMatrix.elements,
                Qe = Ae[14] / (Ae[10] - 1),
                Ke = Ae[14] / (Ae[10] + 1),
                X = (Ae[9] + 1) / Ae[5],
                He = (Ae[9] - 1) / Ae[5],
                Fe = (Ae[8] - 1) / Ae[0],
                We = (je[8] + 1) / je[0],
                Re = Qe * Fe,
                st = Qe * We,
                De = ge / (-Fe + We),
                Je = De * -Fe;
            ae.matrixWorld.decompose(ne.position, ne.quaternion, ne.scale),
                ne.translateX(Je),
                ne.translateZ(De),
                ne.matrixWorld.compose(ne.position, ne.quaternion, ne.scale),
                ne.matrixWorldInverse.copy(ne.matrixWorld).invert();
            const te = Qe + De,
                V = Ke + De,
                Me = Re - Je,
                Le = st + (ge - Je),
                Ie = ((X * Ke) / V) * te,
                Ce = ((He * Ke) / V) * te;
            ne.projectionMatrix.makePerspective(Me, Le, Ie, Ce, te, V),
                ne.projectionMatrixInverse.copy(ne.projectionMatrix).invert();
        }
        function se(ne, ae) {
            ae === null
                ? ne.matrixWorld.copy(ne.matrix)
                : ne.matrixWorld.multiplyMatrices(ae.matrixWorld, ne.matrix),
                ne.matrixWorldInverse.copy(ne.matrixWorld).invert();
        }
        this.updateCamera = function (ne) {
            if (i === null) return;
            S.texture !== null &&
                ((ne.near = S.depthNear), (ne.far = S.depthFar)),
                (U.near = O.near = D.near = ne.near),
                (U.far = O.far = D.far = ne.far),
                (H !== U.near || W !== U.far) &&
                    (i.updateRenderState({
                        depthNear: U.near,
                        depthFar: U.far,
                    }),
                    (H = U.near),
                    (W = U.far),
                    (D.near = H),
                    (D.far = W),
                    (O.near = H),
                    (O.far = W),
                    D.updateProjectionMatrix(),
                    O.updateProjectionMatrix(),
                    ne.updateProjectionMatrix());
            const ae = ne.parent,
                me = U.cameras;
            se(U, ae);
            for (let ge = 0; ge < me.length; ge++) se(me[ge], ae);
            me.length === 2
                ? Z(U, D, O)
                : U.projectionMatrix.copy(D.projectionMatrix),
                J(ne, U, ae);
        };
        function J(ne, ae, me) {
            me === null
                ? ne.matrix.copy(ae.matrixWorld)
                : (ne.matrix.copy(me.matrixWorld),
                  ne.matrix.invert(),
                  ne.matrix.multiply(ae.matrixWorld)),
                ne.matrix.decompose(ne.position, ne.quaternion, ne.scale),
                ne.updateMatrixWorld(!0),
                ne.projectionMatrix.copy(ae.projectionMatrix),
                ne.projectionMatrixInverse.copy(ae.projectionMatrixInverse),
                ne.isPerspectiveCamera &&
                    ((ne.fov =
                        Lp *
                        2 *
                        Math.atan(1 / ne.projectionMatrix.elements[5])),
                    (ne.zoom = 1));
        }
        (this.getCamera = function () {
            return U;
        }),
            (this.getFoveation = function () {
                if (!(m === null && v === null)) return l;
            }),
            (this.setFoveation = function (ne) {
                (l = ne),
                    m !== null && (m.fixedFoveation = ne),
                    v !== null &&
                        v.fixedFoveation !== void 0 &&
                        (v.fixedFoveation = ne);
            }),
            (this.hasDepthSensing = function () {
                return S.texture !== null;
            }),
            (this.getDepthSensingMesh = function () {
                return S.getMesh(U);
            });
        let F = null;
        function $(ne, ae) {
            if (((f = ae.getViewerPose(u || o)), (_ = ae), f !== null)) {
                const me = f.views;
                v !== null &&
                    (e.setRenderTargetFramebuffer(A, v.framebuffer),
                    e.setRenderTarget(A));
                let ge = !1;
                me.length !== U.cameras.length &&
                    ((U.cameras.length = 0), (ge = !0));
                for (let je = 0; je < me.length; je++) {
                    const Qe = me[je];
                    let Ke = null;
                    if (v !== null) Ke = v.getViewport(Qe);
                    else {
                        const He = d.getViewSubImage(m, Qe);
                        (Ke = He.viewport),
                            je === 0 &&
                                (e.setRenderTargetTextures(
                                    A,
                                    He.colorTexture,
                                    m.ignoreDepthValues
                                        ? void 0
                                        : He.depthStencilTexture
                                ),
                                e.setRenderTarget(A));
                    }
                    let X = I[je];
                    X === void 0 &&
                        ((X = new Nr()),
                        X.layers.enable(je),
                        (X.viewport = new En()),
                        (I[je] = X)),
                        X.matrix.fromArray(Qe.transform.matrix),
                        X.matrix.decompose(X.position, X.quaternion, X.scale),
                        X.projectionMatrix.fromArray(Qe.projectionMatrix),
                        X.projectionMatrixInverse
                            .copy(X.projectionMatrix)
                            .invert(),
                        X.viewport.set(Ke.x, Ke.y, Ke.width, Ke.height),
                        je === 0 &&
                            (U.matrix.copy(X.matrix),
                            U.matrix.decompose(
                                U.position,
                                U.quaternion,
                                U.scale
                            )),
                        ge === !0 && U.cameras.push(X);
                }
                const Ae = i.enabledFeatures;
                if (Ae && Ae.includes('depth-sensing')) {
                    const je = d.getDepthInformation(me[0]);
                    je &&
                        je.isValid &&
                        je.texture &&
                        S.init(e, je, i.renderState);
                }
            }
            for (let me = 0; me < T.length; me++) {
                const ge = b[me],
                    Ae = T[me];
                ge !== null && Ae !== void 0 && Ae.update(ge, ae, u || o);
            }
            F && F(ne, ae),
                ae.detectedPlanes &&
                    n.dispatchEvent({ type: 'planesdetected', data: ae }),
                (_ = null);
        }
        const fe = new xO();
        fe.setAnimationLoop($),
            (this.setAnimationLoop = function (ne) {
                F = ne;
            }),
            (this.dispose = function () {});
    }
}
const Lf = new oo(),
    Nj = new qt();
function Fj(r, e) {
    function t(w, x) {
        w.matrixAutoUpdate === !0 && w.updateMatrix(), x.value.copy(w.matrix);
    }
    function n(w, x) {
        x.color.getRGB(w.fogColor.value, yO(r)),
            x.isFog
                ? ((w.fogNear.value = x.near), (w.fogFar.value = x.far))
                : x.isFogExp2 && (w.fogDensity.value = x.density);
    }
    function i(w, x, A, T, b) {
        x.isMeshBasicMaterial || x.isMeshLambertMaterial
            ? s(w, x)
            : x.isMeshToonMaterial
              ? (s(w, x), d(w, x))
              : x.isMeshPhongMaterial
                ? (s(w, x), f(w, x))
                : x.isMeshStandardMaterial
                  ? (s(w, x), m(w, x), x.isMeshPhysicalMaterial && v(w, x, b))
                  : x.isMeshMatcapMaterial
                    ? (s(w, x), _(w, x))
                    : x.isMeshDepthMaterial
                      ? s(w, x)
                      : x.isMeshDistanceMaterial
                        ? (s(w, x), S(w, x))
                        : x.isMeshNormalMaterial
                          ? s(w, x)
                          : x.isLineBasicMaterial
                            ? (o(w, x), x.isLineDashedMaterial && a(w, x))
                            : x.isPointsMaterial
                              ? l(w, x, A, T)
                              : x.isSpriteMaterial
                                ? u(w, x)
                                : x.isShadowMaterial
                                  ? (w.color.value.copy(x.color),
                                    (w.opacity.value = x.opacity))
                                  : x.isShaderMaterial &&
                                    (x.uniformsNeedUpdate = !1);
    }
    function s(w, x) {
        (w.opacity.value = x.opacity),
            x.color && w.diffuse.value.copy(x.color),
            x.emissive &&
                w.emissive.value
                    .copy(x.emissive)
                    .multiplyScalar(x.emissiveIntensity),
            x.map && ((w.map.value = x.map), t(x.map, w.mapTransform)),
            x.alphaMap &&
                ((w.alphaMap.value = x.alphaMap),
                t(x.alphaMap, w.alphaMapTransform)),
            x.bumpMap &&
                ((w.bumpMap.value = x.bumpMap),
                t(x.bumpMap, w.bumpMapTransform),
                (w.bumpScale.value = x.bumpScale),
                x.side === ps && (w.bumpScale.value *= -1)),
            x.normalMap &&
                ((w.normalMap.value = x.normalMap),
                t(x.normalMap, w.normalMapTransform),
                w.normalScale.value.copy(x.normalScale),
                x.side === ps && w.normalScale.value.negate()),
            x.displacementMap &&
                ((w.displacementMap.value = x.displacementMap),
                t(x.displacementMap, w.displacementMapTransform),
                (w.displacementScale.value = x.displacementScale),
                (w.displacementBias.value = x.displacementBias)),
            x.emissiveMap &&
                ((w.emissiveMap.value = x.emissiveMap),
                t(x.emissiveMap, w.emissiveMapTransform)),
            x.specularMap &&
                ((w.specularMap.value = x.specularMap),
                t(x.specularMap, w.specularMapTransform)),
            x.alphaTest > 0 && (w.alphaTest.value = x.alphaTest);
        const A = e.get(x),
            T = A.envMap,
            b = A.envMapRotation;
        T &&
            ((w.envMap.value = T),
            Lf.copy(b),
            (Lf.x *= -1),
            (Lf.y *= -1),
            (Lf.z *= -1),
            T.isCubeTexture &&
                T.isRenderTargetTexture === !1 &&
                ((Lf.y *= -1), (Lf.z *= -1)),
            w.envMapRotation.value.setFromMatrix4(Nj.makeRotationFromEuler(Lf)),
            (w.flipEnvMap.value =
                T.isCubeTexture && T.isRenderTargetTexture === !1 ? -1 : 1),
            (w.reflectivity.value = x.reflectivity),
            (w.ior.value = x.ior),
            (w.refractionRatio.value = x.refractionRatio)),
            x.lightMap &&
                ((w.lightMap.value = x.lightMap),
                (w.lightMapIntensity.value = x.lightMapIntensity),
                t(x.lightMap, w.lightMapTransform)),
            x.aoMap &&
                ((w.aoMap.value = x.aoMap),
                (w.aoMapIntensity.value = x.aoMapIntensity),
                t(x.aoMap, w.aoMapTransform));
    }
    function o(w, x) {
        w.diffuse.value.copy(x.color),
            (w.opacity.value = x.opacity),
            x.map && ((w.map.value = x.map), t(x.map, w.mapTransform));
    }
    function a(w, x) {
        (w.dashSize.value = x.dashSize),
            (w.totalSize.value = x.dashSize + x.gapSize),
            (w.scale.value = x.scale);
    }
    function l(w, x, A, T) {
        w.diffuse.value.copy(x.color),
            (w.opacity.value = x.opacity),
            (w.size.value = x.size * A),
            (w.scale.value = T * 0.5),
            x.map && ((w.map.value = x.map), t(x.map, w.uvTransform)),
            x.alphaMap &&
                ((w.alphaMap.value = x.alphaMap),
                t(x.alphaMap, w.alphaMapTransform)),
            x.alphaTest > 0 && (w.alphaTest.value = x.alphaTest);
    }
    function u(w, x) {
        w.diffuse.value.copy(x.color),
            (w.opacity.value = x.opacity),
            (w.rotation.value = x.rotation),
            x.map && ((w.map.value = x.map), t(x.map, w.mapTransform)),
            x.alphaMap &&
                ((w.alphaMap.value = x.alphaMap),
                t(x.alphaMap, w.alphaMapTransform)),
            x.alphaTest > 0 && (w.alphaTest.value = x.alphaTest);
    }
    function f(w, x) {
        w.specular.value.copy(x.specular),
            (w.shininess.value = Math.max(x.shininess, 1e-4));
    }
    function d(w, x) {
        x.gradientMap && (w.gradientMap.value = x.gradientMap);
    }
    function m(w, x) {
        (w.metalness.value = x.metalness),
            x.metalnessMap &&
                ((w.metalnessMap.value = x.metalnessMap),
                t(x.metalnessMap, w.metalnessMapTransform)),
            (w.roughness.value = x.roughness),
            x.roughnessMap &&
                ((w.roughnessMap.value = x.roughnessMap),
                t(x.roughnessMap, w.roughnessMapTransform)),
            x.envMap && (w.envMapIntensity.value = x.envMapIntensity);
    }
    function v(w, x, A) {
        (w.ior.value = x.ior),
            x.sheen > 0 &&
                (w.sheenColor.value.copy(x.sheenColor).multiplyScalar(x.sheen),
                (w.sheenRoughness.value = x.sheenRoughness),
                x.sheenColorMap &&
                    ((w.sheenColorMap.value = x.sheenColorMap),
                    t(x.sheenColorMap, w.sheenColorMapTransform)),
                x.sheenRoughnessMap &&
                    ((w.sheenRoughnessMap.value = x.sheenRoughnessMap),
                    t(x.sheenRoughnessMap, w.sheenRoughnessMapTransform))),
            x.clearcoat > 0 &&
                ((w.clearcoat.value = x.clearcoat),
                (w.clearcoatRoughness.value = x.clearcoatRoughness),
                x.clearcoatMap &&
                    ((w.clearcoatMap.value = x.clearcoatMap),
                    t(x.clearcoatMap, w.clearcoatMapTransform)),
                x.clearcoatRoughnessMap &&
                    ((w.clearcoatRoughnessMap.value = x.clearcoatRoughnessMap),
                    t(
                        x.clearcoatRoughnessMap,
                        w.clearcoatRoughnessMapTransform
                    )),
                x.clearcoatNormalMap &&
                    ((w.clearcoatNormalMap.value = x.clearcoatNormalMap),
                    t(x.clearcoatNormalMap, w.clearcoatNormalMapTransform),
                    w.clearcoatNormalScale.value.copy(x.clearcoatNormalScale),
                    x.side === ps && w.clearcoatNormalScale.value.negate())),
            x.dispersion > 0 && (w.dispersion.value = x.dispersion),
            x.iridescence > 0 &&
                ((w.iridescence.value = x.iridescence),
                (w.iridescenceIOR.value = x.iridescenceIOR),
                (w.iridescenceThicknessMinimum.value =
                    x.iridescenceThicknessRange[0]),
                (w.iridescenceThicknessMaximum.value =
                    x.iridescenceThicknessRange[1]),
                x.iridescenceMap &&
                    ((w.iridescenceMap.value = x.iridescenceMap),
                    t(x.iridescenceMap, w.iridescenceMapTransform)),
                x.iridescenceThicknessMap &&
                    ((w.iridescenceThicknessMap.value =
                        x.iridescenceThicknessMap),
                    t(
                        x.iridescenceThicknessMap,
                        w.iridescenceThicknessMapTransform
                    ))),
            x.transmission > 0 &&
                ((w.transmission.value = x.transmission),
                (w.transmissionSamplerMap.value = A.texture),
                w.transmissionSamplerSize.value.set(A.width, A.height),
                x.transmissionMap &&
                    ((w.transmissionMap.value = x.transmissionMap),
                    t(x.transmissionMap, w.transmissionMapTransform)),
                (w.thickness.value = x.thickness),
                x.thicknessMap &&
                    ((w.thicknessMap.value = x.thicknessMap),
                    t(x.thicknessMap, w.thicknessMapTransform)),
                (w.attenuationDistance.value = x.attenuationDistance),
                w.attenuationColor.value.copy(x.attenuationColor)),
            x.anisotropy > 0 &&
                (w.anisotropyVector.value.set(
                    x.anisotropy * Math.cos(x.anisotropyRotation),
                    x.anisotropy * Math.sin(x.anisotropyRotation)
                ),
                x.anisotropyMap &&
                    ((w.anisotropyMap.value = x.anisotropyMap),
                    t(x.anisotropyMap, w.anisotropyMapTransform))),
            (w.specularIntensity.value = x.specularIntensity),
            w.specularColor.value.copy(x.specularColor),
            x.specularColorMap &&
                ((w.specularColorMap.value = x.specularColorMap),
                t(x.specularColorMap, w.specularColorMapTransform)),
            x.specularIntensityMap &&
                ((w.specularIntensityMap.value = x.specularIntensityMap),
                t(x.specularIntensityMap, w.specularIntensityMapTransform));
    }
    function _(w, x) {
        x.matcap && (w.matcap.value = x.matcap);
    }
    function S(w, x) {
        const A = e.get(x).light;
        w.referencePosition.value.setFromMatrixPosition(A.matrixWorld),
            (w.nearDistance.value = A.shadow.camera.near),
            (w.farDistance.value = A.shadow.camera.far);
    }
    return { refreshFogUniforms: n, refreshMaterialUniforms: i };
}
function Bj(r, e, t, n) {
    let i = {},
        s = {},
        o = [];
    const a = r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);
    function l(A, T) {
        const b = T.program;
        n.uniformBlockBinding(A, b);
    }
    function u(A, T) {
        let b = i[A.id];
        b === void 0 &&
            (_(A), (b = f(A)), (i[A.id] = b), A.addEventListener('dispose', w));
        const P = T.program;
        n.updateUBOMapping(A, P);
        const L = e.render.frame;
        s[A.id] !== L && (m(A), (s[A.id] = L));
    }
    function f(A) {
        const T = d();
        A.__bindingPointIndex = T;
        const b = r.createBuffer(),
            P = A.__size,
            L = A.usage;
        return (
            r.bindBuffer(r.UNIFORM_BUFFER, b),
            r.bufferData(r.UNIFORM_BUFFER, P, L),
            r.bindBuffer(r.UNIFORM_BUFFER, null),
            r.bindBufferBase(r.UNIFORM_BUFFER, T, b),
            b
        );
    }
    function d() {
        for (let A = 0; A < a; A++)
            if (o.indexOf(A) === -1) return o.push(A), A;
        return (
            console.error(
                'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.'
            ),
            0
        );
    }
    function m(A) {
        const T = i[A.id],
            b = A.uniforms,
            P = A.__cache;
        r.bindBuffer(r.UNIFORM_BUFFER, T);
        for (let L = 0, D = b.length; L < D; L++) {
            const O = Array.isArray(b[L]) ? b[L] : [b[L]];
            for (let I = 0, U = O.length; I < U; I++) {
                const H = O[I];
                if (v(H, L, I, P) === !0) {
                    const W = H.__offset,
                        q = Array.isArray(H.value) ? H.value : [H.value];
                    let K = 0;
                    for (let le = 0; le < q.length; le++) {
                        const ee = q[le],
                            de = S(ee);
                        typeof ee == 'number' || typeof ee == 'boolean'
                            ? ((H.__data[0] = ee),
                              r.bufferSubData(
                                  r.UNIFORM_BUFFER,
                                  W + K,
                                  H.__data
                              ))
                            : ee.isMatrix3
                              ? ((H.__data[0] = ee.elements[0]),
                                (H.__data[1] = ee.elements[1]),
                                (H.__data[2] = ee.elements[2]),
                                (H.__data[3] = 0),
                                (H.__data[4] = ee.elements[3]),
                                (H.__data[5] = ee.elements[4]),
                                (H.__data[6] = ee.elements[5]),
                                (H.__data[7] = 0),
                                (H.__data[8] = ee.elements[6]),
                                (H.__data[9] = ee.elements[7]),
                                (H.__data[10] = ee.elements[8]),
                                (H.__data[11] = 0))
                              : (ee.toArray(H.__data, K),
                                (K +=
                                    de.storage /
                                    Float32Array.BYTES_PER_ELEMENT));
                    }
                    r.bufferSubData(r.UNIFORM_BUFFER, W, H.__data);
                }
            }
        }
        r.bindBuffer(r.UNIFORM_BUFFER, null);
    }
    function v(A, T, b, P) {
        const L = A.value,
            D = T + '_' + b;
        if (P[D] === void 0)
            return (
                typeof L == 'number' || typeof L == 'boolean'
                    ? (P[D] = L)
                    : (P[D] = L.clone()),
                !0
            );
        {
            const O = P[D];
            if (typeof L == 'number' || typeof L == 'boolean') {
                if (O !== L) return (P[D] = L), !0;
            } else if (O.equals(L) === !1) return O.copy(L), !0;
        }
        return !1;
    }
    function _(A) {
        const T = A.uniforms;
        let b = 0;
        const P = 16;
        for (let D = 0, O = T.length; D < O; D++) {
            const I = Array.isArray(T[D]) ? T[D] : [T[D]];
            for (let U = 0, H = I.length; U < H; U++) {
                const W = I[U],
                    q = Array.isArray(W.value) ? W.value : [W.value];
                for (let K = 0, le = q.length; K < le; K++) {
                    const ee = q[K],
                        de = S(ee),
                        Z = b % P;
                    Z !== 0 && P - Z < de.boundary && (b += P - Z),
                        (W.__data = new Float32Array(
                            de.storage / Float32Array.BYTES_PER_ELEMENT
                        )),
                        (W.__offset = b),
                        (b += de.storage);
                }
            }
        }
        const L = b % P;
        return L > 0 && (b += P - L), (A.__size = b), (A.__cache = {}), this;
    }
    function S(A) {
        const T = { boundary: 0, storage: 0 };
        return (
            typeof A == 'number' || typeof A == 'boolean'
                ? ((T.boundary = 4), (T.storage = 4))
                : A.isVector2
                  ? ((T.boundary = 8), (T.storage = 8))
                  : A.isVector3 || A.isColor
                    ? ((T.boundary = 16), (T.storage = 12))
                    : A.isVector4
                      ? ((T.boundary = 16), (T.storage = 16))
                      : A.isMatrix3
                        ? ((T.boundary = 48), (T.storage = 48))
                        : A.isMatrix4
                          ? ((T.boundary = 64), (T.storage = 64))
                          : A.isTexture
                            ? console.warn(
                                  'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.'
                              )
                            : console.warn(
                                  'THREE.WebGLRenderer: Unsupported uniform value type.',
                                  A
                              ),
            T
        );
    }
    function w(A) {
        const T = A.target;
        T.removeEventListener('dispose', w);
        const b = o.indexOf(T.__bindingPointIndex);
        o.splice(b, 1), r.deleteBuffer(i[T.id]), delete i[T.id], delete s[T.id];
    }
    function x() {
        for (const A in i) r.deleteBuffer(i[A]);
        (o = []), (i = {}), (s = {});
    }
    return { bind: l, update: u, dispose: x };
}
class DT {
    constructor(e = {}) {
        const {
            canvas: t = pO(),
            context: n = null,
            depth: i = !0,
            stencil: s = !1,
            alpha: o = !1,
            antialias: a = !1,
            premultipliedAlpha: l = !0,
            preserveDrawingBuffer: u = !1,
            powerPreference: f = 'default',
            failIfMajorPerformanceCaveat: d = !1,
        } = e;
        this.isWebGLRenderer = !0;
        let m;
        if (n !== null) {
            if (
                typeof WebGLRenderingContext < 'u' &&
                n instanceof WebGLRenderingContext
            )
                throw new Error(
                    'THREE.WebGLRenderer: WebGL 1 is not supported since r163.'
                );
            m = n.getContextAttributes().alpha;
        } else m = o;
        const v = new Uint32Array(4),
            _ = new Int32Array(4);
        let S = null,
            w = null;
        const x = [],
            A = [];
        (this.domElement = t),
            (this.debug = { checkShaderErrors: !0, onShaderError: null }),
            (this.autoClear = !0),
            (this.autoClearColor = !0),
            (this.autoClearDepth = !0),
            (this.autoClearStencil = !0),
            (this.sortObjects = !0),
            (this.clippingPlanes = []),
            (this.localClippingEnabled = !1),
            (this._outputColorSpace = Mo),
            (this.toneMapping = bl),
            (this.toneMappingExposure = 1);
        const T = this;
        let b = !1,
            P = 0,
            L = 0,
            D = null,
            O = -1,
            I = null;
        const U = new En(),
            H = new En();
        let W = null;
        const q = new Tt(0);
        let K = 0,
            le = t.width,
            ee = t.height,
            de = 1,
            Z = null,
            se = null;
        const J = new En(0, 0, le, ee),
            F = new En(0, 0, le, ee);
        let $ = !1;
        const fe = new K0();
        let ne = !1,
            ae = !1;
        const me = new qt(),
            ge = new re(),
            Ae = new En(),
            je = {
                background: null,
                fog: null,
                environment: null,
                overrideMaterial: null,
                isScene: !0,
            };
        let Qe = !1;
        function Ke() {
            return D === null ? de : 1;
        }
        let X = n;
        function He(z, ie) {
            return t.getContext(z, ie);
        }
        try {
            const z = {
                alpha: !0,
                depth: i,
                stencil: s,
                antialias: a,
                premultipliedAlpha: l,
                preserveDrawingBuffer: u,
                powerPreference: f,
                failIfMajorPerformanceCaveat: d,
            };
            if (
                ('setAttribute' in t &&
                    t.setAttribute('data-engine', `three.js r${Vp}`),
                t.addEventListener('webglcontextlost', ve, !1),
                t.addEventListener('webglcontextrestored', Be, !1),
                t.addEventListener('webglcontextcreationerror', ht, !1),
                X === null)
            ) {
                const ie = 'webgl2';
                if (((X = He(ie, z)), X === null))
                    throw He(ie)
                        ? new Error(
                              'Error creating WebGL context with your selected attributes.'
                          )
                        : new Error('Error creating WebGL context.');
            }
        } catch (z) {
            throw (console.error('THREE.WebGLRenderer: ' + z.message), z);
        }
        let Fe,
            We,
            Re,
            st,
            De,
            Je,
            te,
            V,
            Me,
            Le,
            Ie,
            Ce,
            gt,
            Xe,
            Ze,
            at,
            Ye,
            ot,
            kt,
            pt,
            et,
            lt,
            Ct,
            Dt;
        function _e() {
            (Fe = new Y9(X)),
                Fe.init(),
                (lt = new TO(X, Fe)),
                (We = new V9(X, Fe, e, lt)),
                (Re = new Tj(X)),
                (st = new Z9(X)),
                (De = new dj()),
                (Je = new Lj(X, Fe, Re, De, We, lt, st)),
                (te = new G9(T)),
                (V = new X9(T)),
                (Me = new iG(X)),
                (Ct = new B9(X, Me)),
                (Le = new q9(X, Me, st, Ct)),
                (Ie = new J9(X, Le, Me, st)),
                (kt = new $9(X, We, Je)),
                (at = new H9(De)),
                (Ce = new hj(T, te, V, Fe, We, Ct, at)),
                (gt = new Fj(T, De)),
                (Xe = new mj()),
                (Ze = new Sj(Fe)),
                (ot = new F9(T, te, V, Re, Ie, m, l)),
                (Ye = new Ej(T, Ie, We)),
                (Dt = new Bj(X, st, We, Re)),
                (pt = new z9(X, Fe, st)),
                (et = new K9(X, Fe, st)),
                (st.programs = Ce.programs),
                (T.capabilities = We),
                (T.extensions = Fe),
                (T.properties = De),
                (T.renderLists = Xe),
                (T.shadowMap = Ye),
                (T.state = Re),
                (T.info = st);
        }
        _e();
        const nt = new kj(T, X);
        (this.xr = nt),
            (this.getContext = function () {
                return X;
            }),
            (this.getContextAttributes = function () {
                return X.getContextAttributes();
            }),
            (this.forceContextLoss = function () {
                const z = Fe.get('WEBGL_lose_context');
                z && z.loseContext();
            }),
            (this.forceContextRestore = function () {
                const z = Fe.get('WEBGL_lose_context');
                z && z.restoreContext();
            }),
            (this.getPixelRatio = function () {
                return de;
            }),
            (this.setPixelRatio = function (z) {
                z !== void 0 && ((de = z), this.setSize(le, ee, !1));
            }),
            (this.getSize = function (z) {
                return z.set(le, ee);
            }),
            (this.setSize = function (z, ie, oe = !0) {
                if (nt.isPresenting) {
                    console.warn(
                        "THREE.WebGLRenderer: Can't change size while VR device is presenting."
                    );
                    return;
                }
                (le = z),
                    (ee = ie),
                    (t.width = Math.floor(z * de)),
                    (t.height = Math.floor(ie * de)),
                    oe === !0 &&
                        ((t.style.width = z + 'px'),
                        (t.style.height = ie + 'px')),
                    this.setViewport(0, 0, z, ie);
            }),
            (this.getDrawingBufferSize = function (z) {
                return z.set(le * de, ee * de).floor();
            }),
            (this.setDrawingBufferSize = function (z, ie, oe) {
                (le = z),
                    (ee = ie),
                    (de = oe),
                    (t.width = Math.floor(z * oe)),
                    (t.height = Math.floor(ie * oe)),
                    this.setViewport(0, 0, z, ie);
            }),
            (this.getCurrentViewport = function (z) {
                return z.copy(U);
            }),
            (this.getViewport = function (z) {
                return z.copy(J);
            }),
            (this.setViewport = function (z, ie, oe, pe) {
                z.isVector4 ? J.set(z.x, z.y, z.z, z.w) : J.set(z, ie, oe, pe),
                    Re.viewport(U.copy(J).multiplyScalar(de).round());
            }),
            (this.getScissor = function (z) {
                return z.copy(F);
            }),
            (this.setScissor = function (z, ie, oe, pe) {
                z.isVector4 ? F.set(z.x, z.y, z.z, z.w) : F.set(z, ie, oe, pe),
                    Re.scissor(H.copy(F).multiplyScalar(de).round());
            }),
            (this.getScissorTest = function () {
                return $;
            }),
            (this.setScissorTest = function (z) {
                Re.setScissorTest(($ = z));
            }),
            (this.setOpaqueSort = function (z) {
                Z = z;
            }),
            (this.setTransparentSort = function (z) {
                se = z;
            }),
            (this.getClearColor = function (z) {
                return z.copy(ot.getClearColor());
            }),
            (this.setClearColor = function () {
                ot.setClearColor.apply(ot, arguments);
            }),
            (this.getClearAlpha = function () {
                return ot.getClearAlpha();
            }),
            (this.setClearAlpha = function () {
                ot.setClearAlpha.apply(ot, arguments);
            }),
            (this.clear = function (z = !0, ie = !0, oe = !0) {
                let pe = 0;
                if (z) {
                    let ue = !1;
                    if (D !== null) {
                        const Pe = D.texture.format;
                        ue = Pe === Fx || Pe === Nx || Pe === j0;
                    }
                    if (ue) {
                        const Pe = D.texture.type,
                            Ue =
                                Pe === so ||
                                Pe === Ll ||
                                Pe === Pp ||
                                Pe === ph ||
                                Pe === Ux ||
                                Pe === kx,
                            Ve = ot.getClearColor(),
                            ye = ot.getClearAlpha(),
                            _t = Ve.r,
                            rt = Ve.g,
                            it = Ve.b;
                        Ue
                            ? ((v[0] = _t),
                              (v[1] = rt),
                              (v[2] = it),
                              (v[3] = ye),
                              X.clearBufferuiv(X.COLOR, 0, v))
                            : ((_[0] = _t),
                              (_[1] = rt),
                              (_[2] = it),
                              (_[3] = ye),
                              X.clearBufferiv(X.COLOR, 0, _));
                    } else pe |= X.COLOR_BUFFER_BIT;
                }
                ie && (pe |= X.DEPTH_BUFFER_BIT),
                    oe &&
                        ((pe |= X.STENCIL_BUFFER_BIT),
                        this.state.buffers.stencil.setMask(4294967295)),
                    X.clear(pe);
            }),
            (this.clearColor = function () {
                this.clear(!0, !1, !1);
            }),
            (this.clearDepth = function () {
                this.clear(!1, !0, !1);
            }),
            (this.clearStencil = function () {
                this.clear(!1, !1, !0);
            }),
            (this.dispose = function () {
                t.removeEventListener('webglcontextlost', ve, !1),
                    t.removeEventListener('webglcontextrestored', Be, !1),
                    t.removeEventListener('webglcontextcreationerror', ht, !1),
                    Xe.dispose(),
                    Ze.dispose(),
                    De.dispose(),
                    te.dispose(),
                    V.dispose(),
                    Ie.dispose(),
                    Ct.dispose(),
                    Dt.dispose(),
                    Ce.dispose(),
                    nt.dispose(),
                    nt.removeEventListener('sessionstart', Pn),
                    nt.removeEventListener('sessionend', jn),
                    An.stop();
            });
        function ve(z) {
            z.preventDefault(),
                console.log('THREE.WebGLRenderer: Context Lost.'),
                (b = !0);
        }
        function Be() {
            console.log('THREE.WebGLRenderer: Context Restored.'), (b = !1);
            const z = st.autoReset,
                ie = Ye.enabled,
                oe = Ye.autoUpdate,
                pe = Ye.needsUpdate,
                ue = Ye.type;
            _e(),
                (st.autoReset = z),
                (Ye.enabled = ie),
                (Ye.autoUpdate = oe),
                (Ye.needsUpdate = pe),
                (Ye.type = ue);
        }
        function ht(z) {
            console.error(
                'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ',
                z.statusMessage
            );
        }
        function wt(z) {
            const ie = z.target;
            ie.removeEventListener('dispose', wt), Et(ie);
        }
        function Et(z) {
            Qt(z), De.remove(z);
        }
        function Qt(z) {
            const ie = De.get(z).programs;
            ie !== void 0 &&
                (ie.forEach(function (oe) {
                    Ce.releaseProgram(oe);
                }),
                z.isShaderMaterial && Ce.releaseShaderCache(z));
        }
        this.renderBufferDirect = function (z, ie, oe, pe, ue, Pe) {
            ie === null && (ie = je);
            const Ue = ue.isMesh && ue.matrixWorld.determinant() < 0,
                Ve = G(z, ie, oe, pe, ue);
            Re.setMaterial(pe, Ue);
            let ye = oe.index,
                _t = 1;
            if (pe.wireframe === !0) {
                if (((ye = Le.getWireframeAttribute(oe)), ye === void 0))
                    return;
                _t = 2;
            }
            const rt = oe.drawRange,
                it = oe.attributes.position;
            let xt = rt.start * _t,
                Pt = (rt.start + rt.count) * _t;
            Pe !== null &&
                ((xt = Math.max(xt, Pe.start * _t)),
                (Pt = Math.min(Pt, (Pe.start + Pe.count) * _t))),
                ye !== null
                    ? ((xt = Math.max(xt, 0)), (Pt = Math.min(Pt, ye.count)))
                    : it != null &&
                      ((xt = Math.max(xt, 0)), (Pt = Math.min(Pt, it.count)));
            const Nt = Pt - xt;
            if (Nt < 0 || Nt === 1 / 0) return;
            Ct.setup(ue, pe, Ve, oe, ye);
            let Wt,
                mt = pt;
            if (
                (ye !== null && ((Wt = Me.get(ye)), (mt = et), mt.setIndex(Wt)),
                ue.isMesh)
            )
                pe.wireframe === !0
                    ? (Re.setLineWidth(pe.wireframeLinewidth * Ke()),
                      mt.setMode(X.LINES))
                    : mt.setMode(X.TRIANGLES);
            else if (ue.isLine) {
                let ut = pe.linewidth;
                ut === void 0 && (ut = 1),
                    Re.setLineWidth(ut * Ke()),
                    ue.isLineSegments
                        ? mt.setMode(X.LINES)
                        : ue.isLineLoop
                          ? mt.setMode(X.LINE_LOOP)
                          : mt.setMode(X.LINE_STRIP);
            } else
                ue.isPoints
                    ? mt.setMode(X.POINTS)
                    : ue.isSprite && mt.setMode(X.TRIANGLES);
            if (ue.isBatchedMesh)
                if (ue._multiDrawInstances !== null)
                    mt.renderMultiDrawInstances(
                        ue._multiDrawStarts,
                        ue._multiDrawCounts,
                        ue._multiDrawCount,
                        ue._multiDrawInstances
                    );
                else if (Fe.get('WEBGL_multi_draw'))
                    mt.renderMultiDraw(
                        ue._multiDrawStarts,
                        ue._multiDrawCounts,
                        ue._multiDrawCount
                    );
                else {
                    const ut = ue._multiDrawStarts,
                        Lt = ue._multiDrawCounts,
                        Bt = ue._multiDrawCount,
                        jt = ye ? Me.get(ye).bytesPerElement : 1,
                        wn = De.get(pe).currentProgram.getUniforms();
                    for (let yn = 0; yn < Bt; yn++)
                        wn.setValue(X, '_gl_DrawID', yn),
                            mt.render(ut[yn] / jt, Lt[yn]);
                }
            else if (ue.isInstancedMesh) mt.renderInstances(xt, Nt, ue.count);
            else if (oe.isInstancedBufferGeometry) {
                const ut =
                        oe._maxInstanceCount !== void 0
                            ? oe._maxInstanceCount
                            : 1 / 0,
                    Lt = Math.min(oe.instanceCount, ut);
                mt.renderInstances(xt, Nt, Lt);
            } else mt.render(xt, Nt);
        };
        function en(z, ie, oe) {
            z.transparent === !0 && z.side === To && z.forceSinglePass === !1
                ? ((z.side = ps),
                  (z.needsUpdate = !0),
                  Xt(z, ie, oe),
                  (z.side = Au),
                  (z.needsUpdate = !0),
                  Xt(z, ie, oe),
                  (z.side = To))
                : Xt(z, ie, oe);
        }
        (this.compile = function (z, ie, oe = null) {
            oe === null && (oe = z),
                (w = Ze.get(oe)),
                w.init(ie),
                A.push(w),
                oe.traverseVisible(function (ue) {
                    ue.isLight &&
                        ue.layers.test(ie.layers) &&
                        (w.pushLight(ue), ue.castShadow && w.pushShadow(ue));
                }),
                z !== oe &&
                    z.traverseVisible(function (ue) {
                        ue.isLight &&
                            ue.layers.test(ie.layers) &&
                            (w.pushLight(ue),
                            ue.castShadow && w.pushShadow(ue));
                    }),
                w.setupLights();
            const pe = new Set();
            return (
                z.traverse(function (ue) {
                    const Pe = ue.material;
                    if (Pe)
                        if (Array.isArray(Pe))
                            for (let Ue = 0; Ue < Pe.length; Ue++) {
                                const Ve = Pe[Ue];
                                en(Ve, oe, ue), pe.add(Ve);
                            }
                        else en(Pe, oe, ue), pe.add(Pe);
                }),
                A.pop(),
                (w = null),
                pe
            );
        }),
            (this.compileAsync = function (z, ie, oe = null) {
                const pe = this.compile(z, ie, oe);
                return new Promise((ue) => {
                    function Pe() {
                        if (
                            (pe.forEach(function (Ue) {
                                De.get(Ue).currentProgram.isReady() &&
                                    pe.delete(Ue);
                            }),
                            pe.size === 0)
                        ) {
                            ue(z);
                            return;
                        }
                        setTimeout(Pe, 10);
                    }
                    Fe.get('KHR_parallel_shader_compile') !== null
                        ? Pe()
                        : setTimeout(Pe, 10);
                });
            });
        let Mt = null;
        function hn(z) {
            Mt && Mt(z);
        }
        function Pn() {
            An.stop();
        }
        function jn() {
            An.start();
        }
        const An = new xO();
        An.setAnimationLoop(hn),
            typeof self < 'u' && An.setContext(self),
            (this.setAnimationLoop = function (z) {
                (Mt = z),
                    nt.setAnimationLoop(z),
                    z === null ? An.stop() : An.start();
            }),
            nt.addEventListener('sessionstart', Pn),
            nt.addEventListener('sessionend', jn),
            (this.render = function (z, ie) {
                if (ie !== void 0 && ie.isCamera !== !0) {
                    console.error(
                        'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.'
                    );
                    return;
                }
                if (b === !0) return;
                if (
                    (z.matrixWorldAutoUpdate === !0 && z.updateMatrixWorld(),
                    ie.parent === null &&
                        ie.matrixWorldAutoUpdate === !0 &&
                        ie.updateMatrixWorld(),
                    nt.enabled === !0 &&
                        nt.isPresenting === !0 &&
                        (nt.cameraAutoUpdate === !0 && nt.updateCamera(ie),
                        (ie = nt.getCamera())),
                    z.isScene === !0 && z.onBeforeRender(T, z, ie, D),
                    (w = Ze.get(z, A.length)),
                    w.init(ie),
                    A.push(w),
                    me.multiplyMatrices(
                        ie.projectionMatrix,
                        ie.matrixWorldInverse
                    ),
                    fe.setFromProjectionMatrix(me),
                    (ae = this.localClippingEnabled),
                    (ne = at.init(this.clippingPlanes, ae)),
                    (S = Xe.get(z, x.length)),
                    S.init(),
                    x.push(S),
                    nt.enabled === !0 && nt.isPresenting === !0)
                ) {
                    const Pe = T.xr.getDepthSensingMesh();
                    Pe !== null && di(Pe, ie, -1 / 0, T.sortObjects);
                }
                di(z, ie, 0, T.sortObjects),
                    S.finish(),
                    T.sortObjects === !0 && S.sort(Z, se),
                    (Qe =
                        nt.enabled === !1 ||
                        nt.isPresenting === !1 ||
                        nt.hasDepthSensing() === !1),
                    Qe && ot.addToRenderList(S, z),
                    this.info.render.frame++,
                    ne === !0 && at.beginShadows();
                const oe = w.state.shadowsArray;
                Ye.render(oe, z, ie),
                    ne === !0 && at.endShadows(),
                    this.info.autoReset === !0 && this.info.reset();
                const pe = S.opaque,
                    ue = S.transmissive;
                if ((w.setupLights(), ie.isArrayCamera)) {
                    const Pe = ie.cameras;
                    if (ue.length > 0)
                        for (let Ue = 0, Ve = Pe.length; Ue < Ve; Ue++) {
                            const ye = Pe[Ue];
                            _i(pe, ue, z, ye);
                        }
                    Qe && ot.render(z);
                    for (let Ue = 0, Ve = Pe.length; Ue < Ve; Ue++) {
                        const ye = Pe[Ue];
                        Gi(S, z, ye, ye.viewport);
                    }
                } else
                    ue.length > 0 && _i(pe, ue, z, ie),
                        Qe && ot.render(z),
                        Gi(S, z, ie);
                D !== null &&
                    (Je.updateMultisampleRenderTarget(D),
                    Je.updateRenderTargetMipmap(D)),
                    z.isScene === !0 && z.onAfterRender(T, z, ie),
                    Ct.resetDefaultState(),
                    (O = -1),
                    (I = null),
                    A.pop(),
                    A.length > 0
                        ? ((w = A[A.length - 1]),
                          ne === !0 &&
                              at.setGlobalState(
                                  T.clippingPlanes,
                                  w.state.camera
                              ))
                        : (w = null),
                    x.pop(),
                    x.length > 0 ? (S = x[x.length - 1]) : (S = null);
            });
        function di(z, ie, oe, pe) {
            if (z.visible === !1) return;
            if (z.layers.test(ie.layers)) {
                if (z.isGroup) oe = z.renderOrder;
                else if (z.isLOD) z.autoUpdate === !0 && z.update(ie);
                else if (z.isLight)
                    w.pushLight(z), z.castShadow && w.pushShadow(z);
                else if (z.isSprite) {
                    if (!z.frustumCulled || fe.intersectsSprite(z)) {
                        pe &&
                            Ae.setFromMatrixPosition(
                                z.matrixWorld
                            ).applyMatrix4(me);
                        const Ue = Ie.update(z),
                            Ve = z.material;
                        Ve.visible && S.push(z, Ue, Ve, oe, Ae.z, null);
                    }
                } else if (
                    (z.isMesh || z.isLine || z.isPoints) &&
                    (!z.frustumCulled || fe.intersectsObject(z))
                ) {
                    const Ue = Ie.update(z),
                        Ve = z.material;
                    if (
                        (pe &&
                            (z.boundingSphere !== void 0
                                ? (z.boundingSphere === null &&
                                      z.computeBoundingSphere(),
                                  Ae.copy(z.boundingSphere.center))
                                : (Ue.boundingSphere === null &&
                                      Ue.computeBoundingSphere(),
                                  Ae.copy(Ue.boundingSphere.center)),
                            Ae.applyMatrix4(z.matrixWorld).applyMatrix4(me)),
                        Array.isArray(Ve))
                    ) {
                        const ye = Ue.groups;
                        for (let _t = 0, rt = ye.length; _t < rt; _t++) {
                            const it = ye[_t],
                                xt = Ve[it.materialIndex];
                            xt && xt.visible && S.push(z, Ue, xt, oe, Ae.z, it);
                        }
                    } else Ve.visible && S.push(z, Ue, Ve, oe, Ae.z, null);
                }
            }
            const Pe = z.children;
            for (let Ue = 0, Ve = Pe.length; Ue < Ve; Ue++)
                di(Pe[Ue], ie, oe, pe);
        }
        function Gi(z, ie, oe, pe) {
            const ue = z.opaque,
                Pe = z.transmissive,
                Ue = z.transparent;
            w.setupLightsView(oe),
                ne === !0 && at.setGlobalState(T.clippingPlanes, oe),
                pe && Re.viewport(U.copy(pe)),
                ue.length > 0 && si(ue, ie, oe),
                Pe.length > 0 && si(Pe, ie, oe),
                Ue.length > 0 && si(Ue, ie, oe),
                Re.buffers.depth.setTest(!0),
                Re.buffers.depth.setMask(!0),
                Re.buffers.color.setMask(!0),
                Re.setPolygonOffset(!1);
        }
        function _i(z, ie, oe, pe) {
            if ((oe.isScene === !0 ? oe.overrideMaterial : null) !== null)
                return;
            w.state.transmissionRenderTarget[pe.id] === void 0 &&
                (w.state.transmissionRenderTarget[pe.id] = new Ji(1, 1, {
                    generateMipmaps: !0,
                    type:
                        Fe.has('EXT_color_buffer_half_float') ||
                        Fe.has('EXT_color_buffer_float')
                            ? Er
                            : so,
                    minFilter: za,
                    samples: 4,
                    stencilBuffer: s,
                    resolveDepthBuffer: !1,
                    resolveStencilBuffer: !1,
                    colorSpace: zn.workingColorSpace,
                }));
            const Pe = w.state.transmissionRenderTarget[pe.id],
                Ue = pe.viewport || U;
            Pe.setSize(Ue.z, Ue.w);
            const Ve = T.getRenderTarget();
            T.setRenderTarget(Pe),
                T.getClearColor(q),
                (K = T.getClearAlpha()),
                K < 1 && T.setClearColor(16777215, 0.5),
                Qe ? ot.render(oe) : T.clear();
            const ye = T.toneMapping;
            T.toneMapping = bl;
            const _t = pe.viewport;
            if (
                (pe.viewport !== void 0 && (pe.viewport = void 0),
                w.setupLightsView(pe),
                ne === !0 && at.setGlobalState(T.clippingPlanes, pe),
                si(z, oe, pe),
                Je.updateMultisampleRenderTarget(Pe),
                Je.updateRenderTargetMipmap(Pe),
                Fe.has('WEBGL_multisampled_render_to_texture') === !1)
            ) {
                let rt = !1;
                for (let it = 0, xt = ie.length; it < xt; it++) {
                    const Pt = ie[it],
                        Nt = Pt.object,
                        Wt = Pt.geometry,
                        mt = Pt.material,
                        ut = Pt.group;
                    if (mt.side === To && Nt.layers.test(pe.layers)) {
                        const Lt = mt.side;
                        (mt.side = ps),
                            (mt.needsUpdate = !0),
                            Qn(Nt, oe, pe, Wt, mt, ut),
                            (mt.side = Lt),
                            (mt.needsUpdate = !0),
                            (rt = !0);
                    }
                }
                rt === !0 &&
                    (Je.updateMultisampleRenderTarget(Pe),
                    Je.updateRenderTargetMipmap(Pe));
            }
            T.setRenderTarget(Ve),
                T.setClearColor(q, K),
                _t !== void 0 && (pe.viewport = _t),
                (T.toneMapping = ye);
        }
        function si(z, ie, oe) {
            const pe = ie.isScene === !0 ? ie.overrideMaterial : null;
            for (let ue = 0, Pe = z.length; ue < Pe; ue++) {
                const Ue = z[ue],
                    Ve = Ue.object,
                    ye = Ue.geometry,
                    _t = pe === null ? Ue.material : pe,
                    rt = Ue.group;
                Ve.layers.test(oe.layers) && Qn(Ve, ie, oe, ye, _t, rt);
            }
        }
        function Qn(z, ie, oe, pe, ue, Pe) {
            z.onBeforeRender(T, ie, oe, pe, ue, Pe),
                z.modelViewMatrix.multiplyMatrices(
                    oe.matrixWorldInverse,
                    z.matrixWorld
                ),
                z.normalMatrix.getNormalMatrix(z.modelViewMatrix),
                ue.transparent === !0 &&
                ue.side === To &&
                ue.forceSinglePass === !1
                    ? ((ue.side = ps),
                      (ue.needsUpdate = !0),
                      T.renderBufferDirect(oe, ie, pe, ue, z, Pe),
                      (ue.side = Au),
                      (ue.needsUpdate = !0),
                      T.renderBufferDirect(oe, ie, pe, ue, z, Pe),
                      (ue.side = To))
                    : T.renderBufferDirect(oe, ie, pe, ue, z, Pe),
                z.onAfterRender(T, ie, oe, pe, ue, Pe);
        }
        function Xt(z, ie, oe) {
            ie.isScene !== !0 && (ie = je);
            const pe = De.get(z),
                ue = w.state.lights,
                Pe = w.state.shadowsArray,
                Ue = ue.state.version,
                Ve = Ce.getParameters(z, ue.state, Pe, ie, oe),
                ye = Ce.getProgramCacheKey(Ve);
            let _t = pe.programs;
            (pe.environment = z.isMeshStandardMaterial ? ie.environment : null),
                (pe.fog = ie.fog),
                (pe.envMap = (z.isMeshStandardMaterial ? V : te).get(
                    z.envMap || pe.environment
                )),
                (pe.envMapRotation =
                    pe.environment !== null && z.envMap === null
                        ? ie.environmentRotation
                        : z.envMapRotation),
                _t === void 0 &&
                    (z.addEventListener('dispose', wt),
                    (_t = new Map()),
                    (pe.programs = _t));
            let rt = _t.get(ye);
            if (rt !== void 0) {
                if (pe.currentProgram === rt && pe.lightsStateVersion === Ue)
                    return $r(z, Ve), rt;
            } else
                (Ve.uniforms = Ce.getUniforms(z)),
                    z.onBeforeCompile(Ve, T),
                    (rt = Ce.acquireProgram(Ve, ye)),
                    _t.set(ye, rt),
                    (pe.uniforms = Ve.uniforms);
            const it = pe.uniforms;
            return (
                ((!z.isShaderMaterial && !z.isRawShaderMaterial) ||
                    z.clipping === !0) &&
                    (it.clippingPlanes = at.uniform),
                $r(z, Ve),
                (pe.needsLights = xe(z)),
                (pe.lightsStateVersion = Ue),
                pe.needsLights &&
                    ((it.ambientLightColor.value = ue.state.ambient),
                    (it.lightProbe.value = ue.state.probe),
                    (it.directionalLights.value = ue.state.directional),
                    (it.directionalLightShadows.value =
                        ue.state.directionalShadow),
                    (it.spotLights.value = ue.state.spot),
                    (it.spotLightShadows.value = ue.state.spotShadow),
                    (it.rectAreaLights.value = ue.state.rectArea),
                    (it.ltc_1.value = ue.state.rectAreaLTC1),
                    (it.ltc_2.value = ue.state.rectAreaLTC2),
                    (it.pointLights.value = ue.state.point),
                    (it.pointLightShadows.value = ue.state.pointShadow),
                    (it.hemisphereLights.value = ue.state.hemi),
                    (it.directionalShadowMap.value =
                        ue.state.directionalShadowMap),
                    (it.directionalShadowMatrix.value =
                        ue.state.directionalShadowMatrix),
                    (it.spotShadowMap.value = ue.state.spotShadowMap),
                    (it.spotLightMatrix.value = ue.state.spotLightMatrix),
                    (it.spotLightMap.value = ue.state.spotLightMap),
                    (it.pointShadowMap.value = ue.state.pointShadowMap),
                    (it.pointShadowMatrix.value = ue.state.pointShadowMatrix)),
                (pe.currentProgram = rt),
                (pe.uniformsList = null),
                rt
            );
        }
        function pi(z) {
            if (z.uniformsList === null) {
                const ie = z.currentProgram.getUniforms();
                z.uniformsList = __.seqWithValue(ie.seq, z.uniforms);
            }
            return z.uniformsList;
        }
        function $r(z, ie) {
            const oe = De.get(z);
            (oe.outputColorSpace = ie.outputColorSpace),
                (oe.batching = ie.batching),
                (oe.batchingColor = ie.batchingColor),
                (oe.instancing = ie.instancing),
                (oe.instancingColor = ie.instancingColor),
                (oe.instancingMorph = ie.instancingMorph),
                (oe.skinning = ie.skinning),
                (oe.morphTargets = ie.morphTargets),
                (oe.morphNormals = ie.morphNormals),
                (oe.morphColors = ie.morphColors),
                (oe.morphTargetsCount = ie.morphTargetsCount),
                (oe.numClippingPlanes = ie.numClippingPlanes),
                (oe.numIntersection = ie.numClipIntersection),
                (oe.vertexAlphas = ie.vertexAlphas),
                (oe.vertexTangents = ie.vertexTangents),
                (oe.toneMapping = ie.toneMapping);
        }
        function G(z, ie, oe, pe, ue) {
            ie.isScene !== !0 && (ie = je), Je.resetTextureUnits();
            const Pe = ie.fog,
                Ue = pe.isMeshStandardMaterial ? ie.environment : null,
                Ve =
                    D === null
                        ? T.outputColorSpace
                        : D.isXRRenderTarget === !0
                          ? D.texture.colorSpace
                          : na,
                ye = (pe.isMeshStandardMaterial ? V : te).get(pe.envMap || Ue),
                _t =
                    pe.vertexColors === !0 &&
                    !!oe.attributes.color &&
                    oe.attributes.color.itemSize === 4,
                rt =
                    !!oe.attributes.tangent &&
                    (!!pe.normalMap || pe.anisotropy > 0),
                it = !!oe.morphAttributes.position,
                xt = !!oe.morphAttributes.normal,
                Pt = !!oe.morphAttributes.color;
            let Nt = bl;
            pe.toneMapped &&
                (D === null || D.isXRRenderTarget === !0) &&
                (Nt = T.toneMapping);
            const Wt =
                    oe.morphAttributes.position ||
                    oe.morphAttributes.normal ||
                    oe.morphAttributes.color,
                mt = Wt !== void 0 ? Wt.length : 0,
                ut = De.get(pe),
                Lt = w.state.lights;
            if (ne === !0 && (ae === !0 || z !== I)) {
                const nn = z === I && pe.id === O;
                at.setState(pe, z, nn);
            }
            let Bt = !1;
            pe.version === ut.__version
                ? ((ut.needsLights &&
                      ut.lightsStateVersion !== Lt.state.version) ||
                      ut.outputColorSpace !== Ve ||
                      (ue.isBatchedMesh && ut.batching === !1) ||
                      (!ue.isBatchedMesh && ut.batching === !0) ||
                      (ue.isBatchedMesh &&
                          ut.batchingColor === !0 &&
                          ue.colorTexture === null) ||
                      (ue.isBatchedMesh &&
                          ut.batchingColor === !1 &&
                          ue.colorTexture !== null) ||
                      (ue.isInstancedMesh && ut.instancing === !1) ||
                      (!ue.isInstancedMesh && ut.instancing === !0) ||
                      (ue.isSkinnedMesh && ut.skinning === !1) ||
                      (!ue.isSkinnedMesh && ut.skinning === !0) ||
                      (ue.isInstancedMesh &&
                          ut.instancingColor === !0 &&
                          ue.instanceColor === null) ||
                      (ue.isInstancedMesh &&
                          ut.instancingColor === !1 &&
                          ue.instanceColor !== null) ||
                      (ue.isInstancedMesh &&
                          ut.instancingMorph === !0 &&
                          ue.morphTexture === null) ||
                      (ue.isInstancedMesh &&
                          ut.instancingMorph === !1 &&
                          ue.morphTexture !== null) ||
                      ut.envMap !== ye ||
                      (pe.fog === !0 && ut.fog !== Pe) ||
                      (ut.numClippingPlanes !== void 0 &&
                          (ut.numClippingPlanes !== at.numPlanes ||
                              ut.numIntersection !== at.numIntersection)) ||
                      ut.vertexAlphas !== _t ||
                      ut.vertexTangents !== rt ||
                      ut.morphTargets !== it ||
                      ut.morphNormals !== xt ||
                      ut.morphColors !== Pt ||
                      ut.toneMapping !== Nt ||
                      ut.morphTargetsCount !== mt) &&
                  (Bt = !0)
                : ((Bt = !0), (ut.__version = pe.version));
            let jt = ut.currentProgram;
            Bt === !0 && (jt = Xt(pe, ie, ue));
            let wn = !1,
                yn = !1,
                Dn = !1;
            const $t = jt.getUniforms(),
                tn = ut.uniforms;
            if (
                (Re.useProgram(jt.program) && ((wn = !0), (yn = !0), (Dn = !0)),
                pe.id !== O && ((O = pe.id), (yn = !0)),
                wn || I !== z)
            ) {
                $t.setValue(X, 'projectionMatrix', z.projectionMatrix),
                    $t.setValue(X, 'viewMatrix', z.matrixWorldInverse);
                const nn = $t.map.cameraPosition;
                nn !== void 0 &&
                    nn.setValue(X, ge.setFromMatrixPosition(z.matrixWorld)),
                    We.logarithmicDepthBuffer &&
                        $t.setValue(
                            X,
                            'logDepthBufFC',
                            2 / (Math.log(z.far + 1) / Math.LN2)
                        ),
                    (pe.isMeshPhongMaterial ||
                        pe.isMeshToonMaterial ||
                        pe.isMeshLambertMaterial ||
                        pe.isMeshBasicMaterial ||
                        pe.isMeshStandardMaterial ||
                        pe.isShaderMaterial) &&
                        $t.setValue(
                            X,
                            'isOrthographic',
                            z.isOrthographicCamera === !0
                        ),
                    I !== z && ((I = z), (yn = !0), (Dn = !0));
            }
            if (ue.isSkinnedMesh) {
                $t.setOptional(X, ue, 'bindMatrix'),
                    $t.setOptional(X, ue, 'bindMatrixInverse');
                const nn = ue.skeleton;
                nn &&
                    (nn.boneTexture === null && nn.computeBoneTexture(),
                    $t.setValue(X, 'boneTexture', nn.boneTexture, Je));
            }
            ue.isBatchedMesh &&
                ($t.setOptional(X, ue, 'batchingTexture'),
                $t.setValue(X, 'batchingTexture', ue._matricesTexture, Je),
                $t.setOptional(X, ue, 'batchingIdTexture'),
                $t.setValue(X, 'batchingIdTexture', ue._indirectTexture, Je),
                $t.setOptional(X, ue, 'batchingColorTexture'),
                ue._colorsTexture !== null &&
                    $t.setValue(
                        X,
                        'batchingColorTexture',
                        ue._colorsTexture,
                        Je
                    ));
            const Xn = oe.morphAttributes;
            if (
                ((Xn.position !== void 0 ||
                    Xn.normal !== void 0 ||
                    Xn.color !== void 0) &&
                    kt.update(ue, oe, jt),
                (yn || ut.receiveShadow !== ue.receiveShadow) &&
                    ((ut.receiveShadow = ue.receiveShadow),
                    $t.setValue(X, 'receiveShadow', ue.receiveShadow)),
                pe.isMeshGouraudMaterial &&
                    pe.envMap !== null &&
                    ((tn.envMap.value = ye),
                    (tn.flipEnvMap.value =
                        ye.isCubeTexture && ye.isRenderTargetTexture === !1
                            ? -1
                            : 1)),
                pe.isMeshStandardMaterial &&
                    pe.envMap === null &&
                    ie.environment !== null &&
                    (tn.envMapIntensity.value = ie.environmentIntensity),
                yn &&
                    ($t.setValue(
                        X,
                        'toneMappingExposure',
                        T.toneMappingExposure
                    ),
                    ut.needsLights && Q(tn, Dn),
                    Pe && pe.fog === !0 && gt.refreshFogUniforms(tn, Pe),
                    gt.refreshMaterialUniforms(
                        tn,
                        pe,
                        de,
                        ee,
                        w.state.transmissionRenderTarget[z.id]
                    ),
                    __.upload(X, pi(ut), tn, Je)),
                pe.isShaderMaterial &&
                    pe.uniformsNeedUpdate === !0 &&
                    (__.upload(X, pi(ut), tn, Je),
                    (pe.uniformsNeedUpdate = !1)),
                pe.isSpriteMaterial && $t.setValue(X, 'center', ue.center),
                $t.setValue(X, 'modelViewMatrix', ue.modelViewMatrix),
                $t.setValue(X, 'normalMatrix', ue.normalMatrix),
                $t.setValue(X, 'modelMatrix', ue.matrixWorld),
                pe.isShaderMaterial || pe.isRawShaderMaterial)
            ) {
                const nn = pe.uniformsGroups;
                for (let Jt = 0, Bn = nn.length; Jt < Bn; Jt++) {
                    const Wi = nn[Jt];
                    Dt.update(Wi, jt), Dt.bind(Wi, jt);
                }
            }
            return jt;
        }
        function Q(z, ie) {
            (z.ambientLightColor.needsUpdate = ie),
                (z.lightProbe.needsUpdate = ie),
                (z.directionalLights.needsUpdate = ie),
                (z.directionalLightShadows.needsUpdate = ie),
                (z.pointLights.needsUpdate = ie),
                (z.pointLightShadows.needsUpdate = ie),
                (z.spotLights.needsUpdate = ie),
                (z.spotLightShadows.needsUpdate = ie),
                (z.rectAreaLights.needsUpdate = ie),
                (z.hemisphereLights.needsUpdate = ie);
        }
        function xe(z) {
            return (
                z.isMeshLambertMaterial ||
                z.isMeshToonMaterial ||
                z.isMeshPhongMaterial ||
                z.isMeshStandardMaterial ||
                z.isShadowMaterial ||
                (z.isShaderMaterial && z.lights === !0)
            );
        }
        (this.getActiveCubeFace = function () {
            return P;
        }),
            (this.getActiveMipmapLevel = function () {
                return L;
            }),
            (this.getRenderTarget = function () {
                return D;
            }),
            (this.setRenderTargetTextures = function (z, ie, oe) {
                (De.get(z.texture).__webglTexture = ie),
                    (De.get(z.depthTexture).__webglTexture = oe);
                const pe = De.get(z);
                (pe.__hasExternalTextures = !0),
                    (pe.__autoAllocateDepthBuffer = oe === void 0),
                    pe.__autoAllocateDepthBuffer ||
                        (Fe.has('WEBGL_multisampled_render_to_texture') ===
                            !0 &&
                            (console.warn(
                                'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided'
                            ),
                            (pe.__useRenderToTexture = !1)));
            }),
            (this.setRenderTargetFramebuffer = function (z, ie) {
                const oe = De.get(z);
                (oe.__webglFramebuffer = ie),
                    (oe.__useDefaultFramebuffer = ie === void 0);
            }),
            (this.setRenderTarget = function (z, ie = 0, oe = 0) {
                (D = z), (P = ie), (L = oe);
                let pe = !0,
                    ue = null,
                    Pe = !1,
                    Ue = !1;
                if (z) {
                    const ye = De.get(z);
                    ye.__useDefaultFramebuffer !== void 0
                        ? (Re.bindFramebuffer(X.FRAMEBUFFER, null), (pe = !1))
                        : ye.__webglFramebuffer === void 0
                          ? Je.setupRenderTarget(z)
                          : ye.__hasExternalTextures &&
                            Je.rebindTextures(
                                z,
                                De.get(z.texture).__webglTexture,
                                De.get(z.depthTexture).__webglTexture
                            );
                    const _t = z.texture;
                    (_t.isData3DTexture ||
                        _t.isDataArrayTexture ||
                        _t.isCompressedArrayTexture) &&
                        (Ue = !0);
                    const rt = De.get(z).__webglFramebuffer;
                    z.isWebGLCubeRenderTarget
                        ? (Array.isArray(rt[ie])
                              ? (ue = rt[ie][oe])
                              : (ue = rt[ie]),
                          (Pe = !0))
                        : z.samples > 0 && Je.useMultisampledRTT(z) === !1
                          ? (ue = De.get(z).__webglMultisampledFramebuffer)
                          : Array.isArray(rt)
                            ? (ue = rt[oe])
                            : (ue = rt),
                        U.copy(z.viewport),
                        H.copy(z.scissor),
                        (W = z.scissorTest);
                } else
                    U.copy(J).multiplyScalar(de).floor(),
                        H.copy(F).multiplyScalar(de).floor(),
                        (W = $);
                if (
                    (Re.bindFramebuffer(X.FRAMEBUFFER, ue) &&
                        pe &&
                        Re.drawBuffers(z, ue),
                    Re.viewport(U),
                    Re.scissor(H),
                    Re.setScissorTest(W),
                    Pe)
                ) {
                    const ye = De.get(z.texture);
                    X.framebufferTexture2D(
                        X.FRAMEBUFFER,
                        X.COLOR_ATTACHMENT0,
                        X.TEXTURE_CUBE_MAP_POSITIVE_X + ie,
                        ye.__webglTexture,
                        oe
                    );
                } else if (Ue) {
                    const ye = De.get(z.texture),
                        _t = ie || 0;
                    X.framebufferTextureLayer(
                        X.FRAMEBUFFER,
                        X.COLOR_ATTACHMENT0,
                        ye.__webglTexture,
                        oe || 0,
                        _t
                    );
                }
                O = -1;
            }),
            (this.readRenderTargetPixels = function (
                z,
                ie,
                oe,
                pe,
                ue,
                Pe,
                Ue
            ) {
                if (!(z && z.isWebGLRenderTarget)) {
                    console.error(
                        'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.'
                    );
                    return;
                }
                let Ve = De.get(z).__webglFramebuffer;
                if (
                    (z.isWebGLCubeRenderTarget &&
                        Ue !== void 0 &&
                        (Ve = Ve[Ue]),
                    Ve)
                ) {
                    Re.bindFramebuffer(X.FRAMEBUFFER, Ve);
                    try {
                        const ye = z.texture,
                            _t = ye.format,
                            rt = ye.type;
                        if (!We.textureFormatReadable(_t)) {
                            console.error(
                                'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.'
                            );
                            return;
                        }
                        if (!We.textureTypeReadable(rt)) {
                            console.error(
                                'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.'
                            );
                            return;
                        }
                        ie >= 0 &&
                            ie <= z.width - pe &&
                            oe >= 0 &&
                            oe <= z.height - ue &&
                            X.readPixels(
                                ie,
                                oe,
                                pe,
                                ue,
                                lt.convert(_t),
                                lt.convert(rt),
                                Pe
                            );
                    } finally {
                        const ye =
                            D !== null ? De.get(D).__webglFramebuffer : null;
                        Re.bindFramebuffer(X.FRAMEBUFFER, ye);
                    }
                }
            }),
            (this.readRenderTargetPixelsAsync = async function (
                z,
                ie,
                oe,
                pe,
                ue,
                Pe,
                Ue
            ) {
                if (!(z && z.isWebGLRenderTarget))
                    throw new Error(
                        'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.'
                    );
                let Ve = De.get(z).__webglFramebuffer;
                if (
                    (z.isWebGLCubeRenderTarget &&
                        Ue !== void 0 &&
                        (Ve = Ve[Ue]),
                    Ve)
                ) {
                    Re.bindFramebuffer(X.FRAMEBUFFER, Ve);
                    try {
                        const ye = z.texture,
                            _t = ye.format,
                            rt = ye.type;
                        if (!We.textureFormatReadable(_t))
                            throw new Error(
                                'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.'
                            );
                        if (!We.textureTypeReadable(rt))
                            throw new Error(
                                'THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.'
                            );
                        if (
                            ie >= 0 &&
                            ie <= z.width - pe &&
                            oe >= 0 &&
                            oe <= z.height - ue
                        ) {
                            const it = X.createBuffer();
                            X.bindBuffer(X.PIXEL_PACK_BUFFER, it),
                                X.bufferData(
                                    X.PIXEL_PACK_BUFFER,
                                    Pe.byteLength,
                                    X.STREAM_READ
                                ),
                                X.readPixels(
                                    ie,
                                    oe,
                                    pe,
                                    ue,
                                    lt.convert(_t),
                                    lt.convert(rt),
                                    0
                                ),
                                X.flush();
                            const xt = X.fenceSync(
                                X.SYNC_GPU_COMMANDS_COMPLETE,
                                0
                            );
                            await R8(X, xt, 4);
                            try {
                                X.bindBuffer(X.PIXEL_PACK_BUFFER, it),
                                    X.getBufferSubData(
                                        X.PIXEL_PACK_BUFFER,
                                        0,
                                        Pe
                                    );
                            } finally {
                                X.deleteBuffer(it), X.deleteSync(xt);
                            }
                            return Pe;
                        }
                    } finally {
                        const ye =
                            D !== null ? De.get(D).__webglFramebuffer : null;
                        Re.bindFramebuffer(X.FRAMEBUFFER, ye);
                    }
                }
            }),
            (this.copyFramebufferToTexture = function (z, ie = null, oe = 0) {
                z.isTexture !== !0 &&
                    (console.warn(
                        'WebGLRenderer: copyFramebufferToTexture function signature has changed.'
                    ),
                    (ie = arguments[0] || null),
                    (z = arguments[1]));
                const pe = Math.pow(2, -oe),
                    ue = Math.floor(z.image.width * pe),
                    Pe = Math.floor(z.image.height * pe),
                    Ue = ie !== null ? ie.x : 0,
                    Ve = ie !== null ? ie.y : 0;
                Je.setTexture2D(z, 0),
                    X.copyTexSubImage2D(X.TEXTURE_2D, oe, 0, 0, Ue, Ve, ue, Pe),
                    Re.unbindTexture();
            }),
            (this.copyTextureToTexture = function (
                z,
                ie,
                oe = null,
                pe = null,
                ue = 0
            ) {
                z.isTexture !== !0 &&
                    (console.warn(
                        'WebGLRenderer: copyTextureToTexture function signature has changed.'
                    ),
                    (pe = arguments[0] || null),
                    (z = arguments[1]),
                    (ie = arguments[2]),
                    (ue = arguments[3] || 0),
                    (oe = null));
                let Pe, Ue, Ve, ye, _t, rt;
                oe !== null
                    ? ((Pe = oe.max.x - oe.min.x),
                      (Ue = oe.max.y - oe.min.y),
                      (Ve = oe.min.x),
                      (ye = oe.min.y))
                    : ((Pe = z.image.width),
                      (Ue = z.image.height),
                      (Ve = 0),
                      (ye = 0)),
                    pe !== null
                        ? ((_t = pe.x), (rt = pe.y))
                        : ((_t = 0), (rt = 0));
                const it = lt.convert(ie.format),
                    xt = lt.convert(ie.type);
                Je.setTexture2D(ie, 0),
                    X.pixelStorei(X.UNPACK_FLIP_Y_WEBGL, ie.flipY),
                    X.pixelStorei(
                        X.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                        ie.premultiplyAlpha
                    ),
                    X.pixelStorei(X.UNPACK_ALIGNMENT, ie.unpackAlignment);
                const Pt = X.getParameter(X.UNPACK_ROW_LENGTH),
                    Nt = X.getParameter(X.UNPACK_IMAGE_HEIGHT),
                    Wt = X.getParameter(X.UNPACK_SKIP_PIXELS),
                    mt = X.getParameter(X.UNPACK_SKIP_ROWS),
                    ut = X.getParameter(X.UNPACK_SKIP_IMAGES),
                    Lt = z.isCompressedTexture ? z.mipmaps[ue] : z.image;
                X.pixelStorei(X.UNPACK_ROW_LENGTH, Lt.width),
                    X.pixelStorei(X.UNPACK_IMAGE_HEIGHT, Lt.height),
                    X.pixelStorei(X.UNPACK_SKIP_PIXELS, Ve),
                    X.pixelStorei(X.UNPACK_SKIP_ROWS, ye),
                    z.isDataTexture
                        ? X.texSubImage2D(
                              X.TEXTURE_2D,
                              ue,
                              _t,
                              rt,
                              Pe,
                              Ue,
                              it,
                              xt,
                              Lt.data
                          )
                        : z.isCompressedTexture
                          ? X.compressedTexSubImage2D(
                                X.TEXTURE_2D,
                                ue,
                                _t,
                                rt,
                                Lt.width,
                                Lt.height,
                                it,
                                Lt.data
                            )
                          : X.texSubImage2D(
                                X.TEXTURE_2D,
                                ue,
                                _t,
                                rt,
                                Pe,
                                Ue,
                                it,
                                xt,
                                Lt
                            ),
                    X.pixelStorei(X.UNPACK_ROW_LENGTH, Pt),
                    X.pixelStorei(X.UNPACK_IMAGE_HEIGHT, Nt),
                    X.pixelStorei(X.UNPACK_SKIP_PIXELS, Wt),
                    X.pixelStorei(X.UNPACK_SKIP_ROWS, mt),
                    X.pixelStorei(X.UNPACK_SKIP_IMAGES, ut),
                    ue === 0 &&
                        ie.generateMipmaps &&
                        X.generateMipmap(X.TEXTURE_2D),
                    Re.unbindTexture();
            }),
            (this.copyTextureToTexture3D = function (
                z,
                ie,
                oe = null,
                pe = null,
                ue = 0
            ) {
                z.isTexture !== !0 &&
                    (console.warn(
                        'WebGLRenderer: copyTextureToTexture3D function signature has changed.'
                    ),
                    (oe = arguments[0] || null),
                    (pe = arguments[1] || null),
                    (z = arguments[2]),
                    (ie = arguments[3]),
                    (ue = arguments[4] || 0));
                let Pe, Ue, Ve, ye, _t, rt, it, xt, Pt;
                const Nt = z.isCompressedTexture ? z.mipmaps[ue] : z.image;
                oe !== null
                    ? ((Pe = oe.max.x - oe.min.x),
                      (Ue = oe.max.y - oe.min.y),
                      (Ve = oe.max.z - oe.min.z),
                      (ye = oe.min.x),
                      (_t = oe.min.y),
                      (rt = oe.min.z))
                    : ((Pe = Nt.width),
                      (Ue = Nt.height),
                      (Ve = Nt.depth),
                      (ye = 0),
                      (_t = 0),
                      (rt = 0)),
                    pe !== null
                        ? ((it = pe.x), (xt = pe.y), (Pt = pe.z))
                        : ((it = 0), (xt = 0), (Pt = 0));
                const Wt = lt.convert(ie.format),
                    mt = lt.convert(ie.type);
                let ut;
                if (ie.isData3DTexture)
                    Je.setTexture3D(ie, 0), (ut = X.TEXTURE_3D);
                else if (ie.isDataArrayTexture || ie.isCompressedArrayTexture)
                    Je.setTexture2DArray(ie, 0), (ut = X.TEXTURE_2D_ARRAY);
                else {
                    console.warn(
                        'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.'
                    );
                    return;
                }
                X.pixelStorei(X.UNPACK_FLIP_Y_WEBGL, ie.flipY),
                    X.pixelStorei(
                        X.UNPACK_PREMULTIPLY_ALPHA_WEBGL,
                        ie.premultiplyAlpha
                    ),
                    X.pixelStorei(X.UNPACK_ALIGNMENT, ie.unpackAlignment);
                const Lt = X.getParameter(X.UNPACK_ROW_LENGTH),
                    Bt = X.getParameter(X.UNPACK_IMAGE_HEIGHT),
                    jt = X.getParameter(X.UNPACK_SKIP_PIXELS),
                    wn = X.getParameter(X.UNPACK_SKIP_ROWS),
                    yn = X.getParameter(X.UNPACK_SKIP_IMAGES);
                X.pixelStorei(X.UNPACK_ROW_LENGTH, Nt.width),
                    X.pixelStorei(X.UNPACK_IMAGE_HEIGHT, Nt.height),
                    X.pixelStorei(X.UNPACK_SKIP_PIXELS, ye),
                    X.pixelStorei(X.UNPACK_SKIP_ROWS, _t),
                    X.pixelStorei(X.UNPACK_SKIP_IMAGES, rt),
                    z.isDataTexture || z.isData3DTexture
                        ? X.texSubImage3D(
                              ut,
                              ue,
                              it,
                              xt,
                              Pt,
                              Pe,
                              Ue,
                              Ve,
                              Wt,
                              mt,
                              Nt.data
                          )
                        : ie.isCompressedArrayTexture
                          ? X.compressedTexSubImage3D(
                                ut,
                                ue,
                                it,
                                xt,
                                Pt,
                                Pe,
                                Ue,
                                Ve,
                                Wt,
                                Nt.data
                            )
                          : X.texSubImage3D(
                                ut,
                                ue,
                                it,
                                xt,
                                Pt,
                                Pe,
                                Ue,
                                Ve,
                                Wt,
                                mt,
                                Nt
                            ),
                    X.pixelStorei(X.UNPACK_ROW_LENGTH, Lt),
                    X.pixelStorei(X.UNPACK_IMAGE_HEIGHT, Bt),
                    X.pixelStorei(X.UNPACK_SKIP_PIXELS, jt),
                    X.pixelStorei(X.UNPACK_SKIP_ROWS, wn),
                    X.pixelStorei(X.UNPACK_SKIP_IMAGES, yn),
                    ue === 0 && ie.generateMipmaps && X.generateMipmap(ut),
                    Re.unbindTexture();
            }),
            (this.initRenderTarget = function (z) {
                De.get(z).__webglFramebuffer === void 0 &&
                    Je.setupRenderTarget(z);
            }),
            (this.initTexture = function (z) {
                z.isCubeTexture
                    ? Je.setTextureCube(z, 0)
                    : z.isData3DTexture
                      ? Je.setTexture3D(z, 0)
                      : z.isDataArrayTexture || z.isCompressedArrayTexture
                        ? Je.setTexture2DArray(z, 0)
                        : Je.setTexture2D(z, 0),
                    Re.unbindTexture();
            }),
            (this.resetState = function () {
                (P = 0), (L = 0), (D = null), Re.reset(), Ct.reset();
            }),
            typeof __THREE_DEVTOOLS__ < 'u' &&
                __THREE_DEVTOOLS__.dispatchEvent(
                    new CustomEvent('observe', { detail: this })
                );
    }
    get coordinateSystem() {
        return xl;
    }
    get outputColorSpace() {
        return this._outputColorSpace;
    }
    set outputColorSpace(e) {
        this._outputColorSpace = e;
        const t = this.getContext();
        (t.drawingBufferColorSpace = e === zx ? 'display-p3' : 'srgb'),
            (t.unpackColorSpace =
                zn.workingColorSpace === X0 ? 'display-p3' : 'srgb');
    }
}
class Yx {
    constructor(e, t = 25e-5) {
        (this.isFogExp2 = !0),
            (this.name = ''),
            (this.color = new Tt(e)),
            (this.density = t);
    }
    clone() {
        return new Yx(this.color, this.density);
    }
    toJSON() {
        return {
            type: 'FogExp2',
            name: this.name,
            color: this.color.getHex(),
            density: this.density,
        };
    }
}
class qx {
    constructor(e, t = 1, n = 1e3) {
        (this.isFog = !0),
            (this.name = ''),
            (this.color = new Tt(e)),
            (this.near = t),
            (this.far = n);
    }
    clone() {
        return new qx(this.color, this.near, this.far);
    }
    toJSON() {
        return {
            type: 'Fog',
            name: this.name,
            color: this.color.getHex(),
            near: this.near,
            far: this.far,
        };
    }
}
class jp extends In {
    constructor() {
        super(),
            (this.isScene = !0),
            (this.type = 'Scene'),
            (this.background = null),
            (this.environment = null),
            (this.fog = null),
            (this.backgroundBlurriness = 0),
            (this.backgroundIntensity = 1),
            (this.backgroundRotation = new oo()),
            (this.environmentIntensity = 1),
            (this.environmentRotation = new oo()),
            (this.overrideMaterial = null),
            typeof __THREE_DEVTOOLS__ < 'u' &&
                __THREE_DEVTOOLS__.dispatchEvent(
                    new CustomEvent('observe', { detail: this })
                );
    }
    copy(e, t) {
        return (
            super.copy(e, t),
            e.background !== null && (this.background = e.background.clone()),
            e.environment !== null &&
                (this.environment = e.environment.clone()),
            e.fog !== null && (this.fog = e.fog.clone()),
            (this.backgroundBlurriness = e.backgroundBlurriness),
            (this.backgroundIntensity = e.backgroundIntensity),
            this.backgroundRotation.copy(e.backgroundRotation),
            (this.environmentIntensity = e.environmentIntensity),
            this.environmentRotation.copy(e.environmentRotation),
            e.overrideMaterial !== null &&
                (this.overrideMaterial = e.overrideMaterial.clone()),
            (this.matrixAutoUpdate = e.matrixAutoUpdate),
            this
        );
    }
    toJSON(e) {
        const t = super.toJSON(e);
        return (
            this.fog !== null && (t.object.fog = this.fog.toJSON()),
            this.backgroundBlurriness > 0 &&
                (t.object.backgroundBlurriness = this.backgroundBlurriness),
            this.backgroundIntensity !== 1 &&
                (t.object.backgroundIntensity = this.backgroundIntensity),
            (t.object.backgroundRotation = this.backgroundRotation.toArray()),
            this.environmentIntensity !== 1 &&
                (t.object.environmentIntensity = this.environmentIntensity),
            (t.object.environmentRotation = this.environmentRotation.toArray()),
            t
        );
    }
}
class Kx {
    constructor(e, t) {
        (this.isInterleavedBuffer = !0),
            (this.array = e),
            (this.stride = t),
            (this.count = e !== void 0 ? e.length / t : 0),
            (this.usage = S0),
            (this._updateRange = { offset: 0, count: -1 }),
            (this.updateRanges = []),
            (this.version = 0),
            (this.uuid = Ro());
    }
    onUploadCallback() {}
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    get updateRange() {
        return (
            bT(
                'THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead.'
            ),
            this._updateRange
        );
    }
    setUsage(e) {
        return (this.usage = e), this;
    }
    addUpdateRange(e, t) {
        this.updateRanges.push({ start: e, count: t });
    }
    clearUpdateRanges() {
        this.updateRanges.length = 0;
    }
    copy(e) {
        return (
            (this.array = new e.array.constructor(e.array)),
            (this.count = e.count),
            (this.stride = e.stride),
            (this.usage = e.usage),
            this
        );
    }
    copyAt(e, t, n) {
        (e *= this.stride), (n *= t.stride);
        for (let i = 0, s = this.stride; i < s; i++)
            this.array[e + i] = t.array[n + i];
        return this;
    }
    set(e, t = 0) {
        return this.array.set(e, t), this;
    }
    clone(e) {
        e.arrayBuffers === void 0 && (e.arrayBuffers = {}),
            this.array.buffer._uuid === void 0 &&
                (this.array.buffer._uuid = Ro()),
            e.arrayBuffers[this.array.buffer._uuid] === void 0 &&
                (e.arrayBuffers[this.array.buffer._uuid] =
                    this.array.slice(0).buffer);
        const t = new this.array.constructor(
                e.arrayBuffers[this.array.buffer._uuid]
            ),
            n = new this.constructor(t, this.stride);
        return n.setUsage(this.usage), n;
    }
    onUpload(e) {
        return (this.onUploadCallback = e), this;
    }
    toJSON(e) {
        return (
            e.arrayBuffers === void 0 && (e.arrayBuffers = {}),
            this.array.buffer._uuid === void 0 &&
                (this.array.buffer._uuid = Ro()),
            e.arrayBuffers[this.array.buffer._uuid] === void 0 &&
                (e.arrayBuffers[this.array.buffer._uuid] = Array.from(
                    new Uint32Array(this.array.buffer)
                )),
            {
                uuid: this.uuid,
                buffer: this.array.buffer._uuid,
                type: this.array.constructor.name,
                stride: this.stride,
            }
        );
    }
}
const Ls = new re();
class gh {
    constructor(e, t, n, i = !1) {
        (this.isInterleavedBufferAttribute = !0),
            (this.name = ''),
            (this.data = e),
            (this.itemSize = t),
            (this.offset = n),
            (this.normalized = i);
    }
    get count() {
        return this.data.count;
    }
    get array() {
        return this.data.array;
    }
    set needsUpdate(e) {
        this.data.needsUpdate = e;
    }
    applyMatrix4(e) {
        for (let t = 0, n = this.data.count; t < n; t++)
            Ls.fromBufferAttribute(this, t),
                Ls.applyMatrix4(e),
                this.setXYZ(t, Ls.x, Ls.y, Ls.z);
        return this;
    }
    applyNormalMatrix(e) {
        for (let t = 0, n = this.count; t < n; t++)
            Ls.fromBufferAttribute(this, t),
                Ls.applyNormalMatrix(e),
                this.setXYZ(t, Ls.x, Ls.y, Ls.z);
        return this;
    }
    transformDirection(e) {
        for (let t = 0, n = this.count; t < n; t++)
            Ls.fromBufferAttribute(this, t),
                Ls.transformDirection(e),
                this.setXYZ(t, Ls.x, Ls.y, Ls.z);
        return this;
    }
    getComponent(e, t) {
        let n = this.array[e * this.data.stride + this.offset + t];
        return this.normalized && (n = Os(n, this.array)), n;
    }
    setComponent(e, t, n) {
        return (
            this.normalized && (n = vn(n, this.array)),
            (this.data.array[e * this.data.stride + this.offset + t] = n),
            this
        );
    }
    setX(e, t) {
        return (
            this.normalized && (t = vn(t, this.array)),
            (this.data.array[e * this.data.stride + this.offset] = t),
            this
        );
    }
    setY(e, t) {
        return (
            this.normalized && (t = vn(t, this.array)),
            (this.data.array[e * this.data.stride + this.offset + 1] = t),
            this
        );
    }
    setZ(e, t) {
        return (
            this.normalized && (t = vn(t, this.array)),
            (this.data.array[e * this.data.stride + this.offset + 2] = t),
            this
        );
    }
    setW(e, t) {
        return (
            this.normalized && (t = vn(t, this.array)),
            (this.data.array[e * this.data.stride + this.offset + 3] = t),
            this
        );
    }
    getX(e) {
        let t = this.data.array[e * this.data.stride + this.offset];
        return this.normalized && (t = Os(t, this.array)), t;
    }
    getY(e) {
        let t = this.data.array[e * this.data.stride + this.offset + 1];
        return this.normalized && (t = Os(t, this.array)), t;
    }
    getZ(e) {
        let t = this.data.array[e * this.data.stride + this.offset + 2];
        return this.normalized && (t = Os(t, this.array)), t;
    }
    getW(e) {
        let t = this.data.array[e * this.data.stride + this.offset + 3];
        return this.normalized && (t = Os(t, this.array)), t;
    }
    setXY(e, t, n) {
        return (
            (e = e * this.data.stride + this.offset),
            this.normalized &&
                ((t = vn(t, this.array)), (n = vn(n, this.array))),
            (this.data.array[e + 0] = t),
            (this.data.array[e + 1] = n),
            this
        );
    }
    setXYZ(e, t, n, i) {
        return (
            (e = e * this.data.stride + this.offset),
            this.normalized &&
                ((t = vn(t, this.array)),
                (n = vn(n, this.array)),
                (i = vn(i, this.array))),
            (this.data.array[e + 0] = t),
            (this.data.array[e + 1] = n),
            (this.data.array[e + 2] = i),
            this
        );
    }
    setXYZW(e, t, n, i, s) {
        return (
            (e = e * this.data.stride + this.offset),
            this.normalized &&
                ((t = vn(t, this.array)),
                (n = vn(n, this.array)),
                (i = vn(i, this.array)),
                (s = vn(s, this.array))),
            (this.data.array[e + 0] = t),
            (this.data.array[e + 1] = n),
            (this.data.array[e + 2] = i),
            (this.data.array[e + 3] = s),
            this
        );
    }
    clone(e) {
        if (e === void 0) {
            console.log(
                'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.'
            );
            const t = [];
            for (let n = 0; n < this.count; n++) {
                const i = n * this.data.stride + this.offset;
                for (let s = 0; s < this.itemSize; s++)
                    t.push(this.data.array[i + s]);
            }
            return new qn(
                new this.array.constructor(t),
                this.itemSize,
                this.normalized
            );
        } else
            return (
                e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}),
                e.interleavedBuffers[this.data.uuid] === void 0 &&
                    (e.interleavedBuffers[this.data.uuid] = this.data.clone(e)),
                new gh(
                    e.interleavedBuffers[this.data.uuid],
                    this.itemSize,
                    this.offset,
                    this.normalized
                )
            );
    }
    toJSON(e) {
        if (e === void 0) {
            console.log(
                'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.'
            );
            const t = [];
            for (let n = 0; n < this.count; n++) {
                const i = n * this.data.stride + this.offset;
                for (let s = 0; s < this.itemSize; s++)
                    t.push(this.data.array[i + s]);
            }
            return {
                itemSize: this.itemSize,
                type: this.array.constructor.name,
                array: t,
                normalized: this.normalized,
            };
        } else
            return (
                e.interleavedBuffers === void 0 && (e.interleavedBuffers = {}),
                e.interleavedBuffers[this.data.uuid] === void 0 &&
                    (e.interleavedBuffers[this.data.uuid] =
                        this.data.toJSON(e)),
                {
                    isInterleavedBufferAttribute: !0,
                    itemSize: this.itemSize,
                    data: this.data.uuid,
                    offset: this.offset,
                    normalized: this.normalized,
                }
            );
    }
}
class OT extends gs {
    constructor(e) {
        super(),
            (this.isSpriteMaterial = !0),
            (this.type = 'SpriteMaterial'),
            (this.color = new Tt(16777215)),
            (this.map = null),
            (this.alphaMap = null),
            (this.rotation = 0),
            (this.sizeAttenuation = !0),
            (this.transparent = !0),
            (this.fog = !0),
            this.setValues(e);
    }
    copy(e) {
        return (
            super.copy(e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.alphaMap = e.alphaMap),
            (this.rotation = e.rotation),
            (this.sizeAttenuation = e.sizeAttenuation),
            (this.fog = e.fog),
            this
        );
    }
}
let Id;
const Km = new re(),
    Dd = new re(),
    Od = new re(),
    Ud = new tt(),
    Zm = new tt(),
    bO = new qt(),
    Ty = new re(),
    $m = new re(),
    Ay = new re(),
    C2 = new tt(),
    jS = new tt(),
    R2 = new tt();
class CO extends In {
    constructor(e = new OT()) {
        if (
            (super(),
            (this.isSprite = !0),
            (this.type = 'Sprite'),
            Id === void 0)
        ) {
            Id = new xn();
            const t = new Float32Array([
                    -0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1,
                    -0.5, 0.5, 0, 0, 1,
                ]),
                n = new Kx(t, 5);
            Id.setIndex([0, 1, 2, 0, 2, 3]),
                Id.setAttribute('position', new gh(n, 3, 0, !1)),
                Id.setAttribute('uv', new gh(n, 2, 3, !1));
        }
        (this.geometry = Id),
            (this.material = e),
            (this.center = new tt(0.5, 0.5));
    }
    raycast(e, t) {
        e.camera === null &&
            console.error(
                'THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'
            ),
            Dd.setFromMatrixScale(this.matrixWorld),
            bO.copy(e.camera.matrixWorld),
            this.modelViewMatrix.multiplyMatrices(
                e.camera.matrixWorldInverse,
                this.matrixWorld
            ),
            Od.setFromMatrixPosition(this.modelViewMatrix),
            e.camera.isPerspectiveCamera &&
                this.material.sizeAttenuation === !1 &&
                Dd.multiplyScalar(-Od.z);
        const n = this.material.rotation;
        let i, s;
        n !== 0 && ((s = Math.cos(n)), (i = Math.sin(n)));
        const o = this.center;
        by(Ty.set(-0.5, -0.5, 0), Od, o, Dd, i, s),
            by($m.set(0.5, -0.5, 0), Od, o, Dd, i, s),
            by(Ay.set(0.5, 0.5, 0), Od, o, Dd, i, s),
            C2.set(0, 0),
            jS.set(1, 0),
            R2.set(1, 1);
        let a = e.ray.intersectTriangle(Ty, $m, Ay, !1, Km);
        if (
            a === null &&
            (by($m.set(-0.5, 0.5, 0), Od, o, Dd, i, s),
            jS.set(0, 1),
            (a = e.ray.intersectTriangle(Ty, Ay, $m, !1, Km)),
            a === null)
        )
            return;
        const l = e.ray.origin.distanceTo(Km);
        l < e.near ||
            l > e.far ||
            t.push({
                distance: l,
                point: Km.clone(),
                uv: Ao.getInterpolation(Km, Ty, $m, Ay, C2, jS, R2, new tt()),
                face: null,
                object: this,
            });
    }
    copy(e, t) {
        return (
            super.copy(e, t),
            e.center !== void 0 && this.center.copy(e.center),
            (this.material = e.material),
            this
        );
    }
}
function by(r, e, t, n, i, s) {
    Ud.subVectors(r, t).addScalar(0.5).multiply(n),
        i !== void 0
            ? ((Zm.x = s * Ud.x - i * Ud.y), (Zm.y = i * Ud.x + s * Ud.y))
            : Zm.copy(Ud),
        r.copy(e),
        (r.x += Zm.x),
        (r.y += Zm.y),
        r.applyMatrix4(bO);
}
const Cy = new re(),
    P2 = new re();
class RO extends In {
    constructor() {
        super(),
            (this._currentLevel = 0),
            (this.type = 'LOD'),
            Object.defineProperties(this, {
                levels: { enumerable: !0, value: [] },
                isLOD: { value: !0 },
            }),
            (this.autoUpdate = !0);
    }
    copy(e) {
        super.copy(e, !1);
        const t = e.levels;
        for (let n = 0, i = t.length; n < i; n++) {
            const s = t[n];
            this.addLevel(s.object.clone(), s.distance, s.hysteresis);
        }
        return (this.autoUpdate = e.autoUpdate), this;
    }
    addLevel(e, t = 0, n = 0) {
        t = Math.abs(t);
        const i = this.levels;
        let s;
        for (s = 0; s < i.length && !(t < i[s].distance); s++);
        return (
            i.splice(s, 0, { distance: t, hysteresis: n, object: e }),
            this.add(e),
            this
        );
    }
    getCurrentLevel() {
        return this._currentLevel;
    }
    getObjectForDistance(e) {
        const t = this.levels;
        if (t.length > 0) {
            let n, i;
            for (n = 1, i = t.length; n < i; n++) {
                let s = t[n].distance;
                if ((t[n].object.visible && (s -= s * t[n].hysteresis), e < s))
                    break;
            }
            return t[n - 1].object;
        }
        return null;
    }
    raycast(e, t) {
        if (this.levels.length > 0) {
            Cy.setFromMatrixPosition(this.matrixWorld);
            const i = e.ray.origin.distanceTo(Cy);
            this.getObjectForDistance(i).raycast(e, t);
        }
    }
    update(e) {
        const t = this.levels;
        if (t.length > 1) {
            Cy.setFromMatrixPosition(e.matrixWorld),
                P2.setFromMatrixPosition(this.matrixWorld);
            const n = Cy.distanceTo(P2) / e.zoom;
            t[0].object.visible = !0;
            let i, s;
            for (i = 1, s = t.length; i < s; i++) {
                let o = t[i].distance;
                if ((t[i].object.visible && (o -= o * t[i].hysteresis), n >= o))
                    (t[i - 1].object.visible = !1), (t[i].object.visible = !0);
                else break;
            }
            for (this._currentLevel = i - 1; i < s; i++)
                t[i].object.visible = !1;
        }
    }
    toJSON(e) {
        const t = super.toJSON(e);
        this.autoUpdate === !1 && (t.object.autoUpdate = !1),
            (t.object.levels = []);
        const n = this.levels;
        for (let i = 0, s = n.length; i < s; i++) {
            const o = n[i];
            t.object.levels.push({
                object: o.object.uuid,
                distance: o.distance,
                hysteresis: o.hysteresis,
            });
        }
        return t;
    }
}
const L2 = new re(),
    I2 = new En(),
    D2 = new En(),
    zj = new re(),
    O2 = new qt(),
    Ry = new re(),
    XS = new Fr(),
    U2 = new qt(),
    YS = new Gp();
class PO extends Jn {
    constructor(e, t) {
        super(e, t),
            (this.isSkinnedMesh = !0),
            (this.type = 'SkinnedMesh'),
            (this.bindMode = AM),
            (this.bindMatrix = new qt()),
            (this.bindMatrixInverse = new qt()),
            (this.boundingBox = null),
            (this.boundingSphere = null);
    }
    computeBoundingBox() {
        const e = this.geometry;
        this.boundingBox === null && (this.boundingBox = new Ar()),
            this.boundingBox.makeEmpty();
        const t = e.getAttribute('position');
        for (let n = 0; n < t.count; n++)
            this.getVertexPosition(n, Ry), this.boundingBox.expandByPoint(Ry);
    }
    computeBoundingSphere() {
        const e = this.geometry;
        this.boundingSphere === null && (this.boundingSphere = new Fr()),
            this.boundingSphere.makeEmpty();
        const t = e.getAttribute('position');
        for (let n = 0; n < t.count; n++)
            this.getVertexPosition(n, Ry),
                this.boundingSphere.expandByPoint(Ry);
    }
    copy(e, t) {
        return (
            super.copy(e, t),
            (this.bindMode = e.bindMode),
            this.bindMatrix.copy(e.bindMatrix),
            this.bindMatrixInverse.copy(e.bindMatrixInverse),
            (this.skeleton = e.skeleton),
            e.boundingBox !== null &&
                (this.boundingBox = e.boundingBox.clone()),
            e.boundingSphere !== null &&
                (this.boundingSphere = e.boundingSphere.clone()),
            this
        );
    }
    raycast(e, t) {
        const n = this.material,
            i = this.matrixWorld;
        n !== void 0 &&
            (this.boundingSphere === null && this.computeBoundingSphere(),
            XS.copy(this.boundingSphere),
            XS.applyMatrix4(i),
            e.ray.intersectsSphere(XS) !== !1 &&
                (U2.copy(i).invert(),
                YS.copy(e.ray).applyMatrix4(U2),
                !(
                    this.boundingBox !== null &&
                    YS.intersectsBox(this.boundingBox) === !1
                ) && this._computeIntersections(e, t, YS)));
    }
    getVertexPosition(e, t) {
        return super.getVertexPosition(e, t), this.applyBoneTransform(e, t), t;
    }
    bind(e, t) {
        (this.skeleton = e),
            t === void 0 &&
                (this.updateMatrixWorld(!0),
                this.skeleton.calculateInverses(),
                (t = this.matrixWorld)),
            this.bindMatrix.copy(t),
            this.bindMatrixInverse.copy(t).invert();
    }
    pose() {
        this.skeleton.pose();
    }
    normalizeSkinWeights() {
        const e = new En(),
            t = this.geometry.attributes.skinWeight;
        for (let n = 0, i = t.count; n < i; n++) {
            e.fromBufferAttribute(t, n);
            const s = 1 / e.manhattanLength();
            s !== 1 / 0 ? e.multiplyScalar(s) : e.set(1, 0, 0, 0),
                t.setXYZW(n, e.x, e.y, e.z, e.w);
        }
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e),
            this.bindMode === AM
                ? this.bindMatrixInverse.copy(this.matrixWorld).invert()
                : this.bindMode === eO
                  ? this.bindMatrixInverse.copy(this.bindMatrix).invert()
                  : console.warn(
                        'THREE.SkinnedMesh: Unrecognized bindMode: ' +
                            this.bindMode
                    );
    }
    applyBoneTransform(e, t) {
        const n = this.skeleton,
            i = this.geometry;
        I2.fromBufferAttribute(i.attributes.skinIndex, e),
            D2.fromBufferAttribute(i.attributes.skinWeight, e),
            L2.copy(t).applyMatrix4(this.bindMatrix),
            t.set(0, 0, 0);
        for (let s = 0; s < 4; s++) {
            const o = D2.getComponent(s);
            if (o !== 0) {
                const a = I2.getComponent(s);
                O2.multiplyMatrices(n.bones[a].matrixWorld, n.boneInverses[a]),
                    t.addScaledVector(zj.copy(L2).applyMatrix4(O2), o);
            }
        }
        return t.applyMatrix4(this.bindMatrixInverse);
    }
}
class UT extends In {
    constructor() {
        super(), (this.isBone = !0), (this.type = 'Bone');
    }
}
class Va extends Vn {
    constructor(e = null, t = 1, n = 1, i, s, o, a, l, u = Fn, f = Fn, d, m) {
        super(null, o, a, l, u, f, i, s, d, m),
            (this.isDataTexture = !0),
            (this.image = { data: e, width: t, height: n }),
            (this.generateMipmaps = !1),
            (this.flipY = !1),
            (this.unpackAlignment = 1);
    }
}
const k2 = new qt(),
    Vj = new qt();
class Zx {
    constructor(e = [], t = []) {
        (this.uuid = Ro()),
            (this.bones = e.slice(0)),
            (this.boneInverses = t),
            (this.boneMatrices = null),
            (this.boneTexture = null),
            this.init();
    }
    init() {
        const e = this.bones,
            t = this.boneInverses;
        if (
            ((this.boneMatrices = new Float32Array(e.length * 16)),
            t.length === 0)
        )
            this.calculateInverses();
        else if (e.length !== t.length) {
            console.warn(
                'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.'
            ),
                (this.boneInverses = []);
            for (let n = 0, i = this.bones.length; n < i; n++)
                this.boneInverses.push(new qt());
        }
    }
    calculateInverses() {
        this.boneInverses.length = 0;
        for (let e = 0, t = this.bones.length; e < t; e++) {
            const n = new qt();
            this.bones[e] && n.copy(this.bones[e].matrixWorld).invert(),
                this.boneInverses.push(n);
        }
    }
    pose() {
        for (let e = 0, t = this.bones.length; e < t; e++) {
            const n = this.bones[e];
            n && n.matrixWorld.copy(this.boneInverses[e]).invert();
        }
        for (let e = 0, t = this.bones.length; e < t; e++) {
            const n = this.bones[e];
            n &&
                (n.parent && n.parent.isBone
                    ? (n.matrix.copy(n.parent.matrixWorld).invert(),
                      n.matrix.multiply(n.matrixWorld))
                    : n.matrix.copy(n.matrixWorld),
                n.matrix.decompose(n.position, n.quaternion, n.scale));
        }
    }
    update() {
        const e = this.bones,
            t = this.boneInverses,
            n = this.boneMatrices,
            i = this.boneTexture;
        for (let s = 0, o = e.length; s < o; s++) {
            const a = e[s] ? e[s].matrixWorld : Vj;
            k2.multiplyMatrices(a, t[s]), k2.toArray(n, s * 16);
        }
        i !== null && (i.needsUpdate = !0);
    }
    clone() {
        return new Zx(this.bones, this.boneInverses);
    }
    computeBoneTexture() {
        let e = Math.sqrt(this.bones.length * 4);
        (e = Math.ceil(e / 4) * 4), (e = Math.max(e, 4));
        const t = new Float32Array(e * e * 4);
        t.set(this.boneMatrices);
        const n = new Va(t, e, e, er, ri);
        return (
            (n.needsUpdate = !0),
            (this.boneMatrices = t),
            (this.boneTexture = n),
            this
        );
    }
    getBoneByName(e) {
        for (let t = 0, n = this.bones.length; t < n; t++) {
            const i = this.bones[t];
            if (i.name === e) return i;
        }
    }
    dispose() {
        this.boneTexture !== null &&
            (this.boneTexture.dispose(), (this.boneTexture = null));
    }
    fromJSON(e, t) {
        this.uuid = e.uuid;
        for (let n = 0, i = e.bones.length; n < i; n++) {
            const s = e.bones[n];
            let o = t[s];
            o === void 0 &&
                (console.warn('THREE.Skeleton: No bone found with UUID:', s),
                (o = new UT())),
                this.bones.push(o),
                this.boneInverses.push(new qt().fromArray(e.boneInverses[n]));
        }
        return this.init(), this;
    }
    toJSON() {
        const e = {
            metadata: {
                version: 4.6,
                type: 'Skeleton',
                generator: 'Skeleton.toJSON',
            },
            bones: [],
            boneInverses: [],
        };
        e.uuid = this.uuid;
        const t = this.bones,
            n = this.boneInverses;
        for (let i = 0, s = t.length; i < s; i++) {
            const o = t[i];
            e.bones.push(o.uuid);
            const a = n[i];
            e.boneInverses.push(a.toArray());
        }
        return e;
    }
}
class vh extends qn {
    constructor(e, t, n, i = 1) {
        super(e, t, n),
            (this.isInstancedBufferAttribute = !0),
            (this.meshPerAttribute = i);
    }
    copy(e) {
        return (
            super.copy(e), (this.meshPerAttribute = e.meshPerAttribute), this
        );
    }
    toJSON() {
        const e = super.toJSON();
        return (
            (e.meshPerAttribute = this.meshPerAttribute),
            (e.isInstancedBufferAttribute = !0),
            e
        );
    }
}
const kd = new qt(),
    N2 = new qt(),
    Py = [],
    F2 = new Ar(),
    Hj = new qt(),
    Jm = new Jn(),
    Qm = new Fr();
class LO extends Jn {
    constructor(e, t, n) {
        super(e, t),
            (this.isInstancedMesh = !0),
            (this.instanceMatrix = new vh(new Float32Array(n * 16), 16)),
            (this.instanceColor = null),
            (this.morphTexture = null),
            (this.count = n),
            (this.boundingBox = null),
            (this.boundingSphere = null);
        for (let i = 0; i < n; i++) this.setMatrixAt(i, Hj);
    }
    computeBoundingBox() {
        const e = this.geometry,
            t = this.count;
        this.boundingBox === null && (this.boundingBox = new Ar()),
            e.boundingBox === null && e.computeBoundingBox(),
            this.boundingBox.makeEmpty();
        for (let n = 0; n < t; n++)
            this.getMatrixAt(n, kd),
                F2.copy(e.boundingBox).applyMatrix4(kd),
                this.boundingBox.union(F2);
    }
    computeBoundingSphere() {
        const e = this.geometry,
            t = this.count;
        this.boundingSphere === null && (this.boundingSphere = new Fr()),
            e.boundingSphere === null && e.computeBoundingSphere(),
            this.boundingSphere.makeEmpty();
        for (let n = 0; n < t; n++)
            this.getMatrixAt(n, kd),
                Qm.copy(e.boundingSphere).applyMatrix4(kd),
                this.boundingSphere.union(Qm);
    }
    copy(e, t) {
        return (
            super.copy(e, t),
            this.instanceMatrix.copy(e.instanceMatrix),
            e.morphTexture !== null &&
                (this.morphTexture = e.morphTexture.clone()),
            e.instanceColor !== null &&
                (this.instanceColor = e.instanceColor.clone()),
            (this.count = e.count),
            e.boundingBox !== null &&
                (this.boundingBox = e.boundingBox.clone()),
            e.boundingSphere !== null &&
                (this.boundingSphere = e.boundingSphere.clone()),
            this
        );
    }
    getColorAt(e, t) {
        t.fromArray(this.instanceColor.array, e * 3);
    }
    getMatrixAt(e, t) {
        t.fromArray(this.instanceMatrix.array, e * 16);
    }
    getMorphAt(e, t) {
        const n = t.morphTargetInfluences,
            i = this.morphTexture.source.data.data,
            s = n.length + 1,
            o = e * s + 1;
        for (let a = 0; a < n.length; a++) n[a] = i[o + a];
    }
    raycast(e, t) {
        const n = this.matrixWorld,
            i = this.count;
        if (
            ((Jm.geometry = this.geometry),
            (Jm.material = this.material),
            Jm.material !== void 0 &&
                (this.boundingSphere === null && this.computeBoundingSphere(),
                Qm.copy(this.boundingSphere),
                Qm.applyMatrix4(n),
                e.ray.intersectsSphere(Qm) !== !1))
        )
            for (let s = 0; s < i; s++) {
                this.getMatrixAt(s, kd),
                    N2.multiplyMatrices(n, kd),
                    (Jm.matrixWorld = N2),
                    Jm.raycast(e, Py);
                for (let o = 0, a = Py.length; o < a; o++) {
                    const l = Py[o];
                    (l.instanceId = s), (l.object = this), t.push(l);
                }
                Py.length = 0;
            }
    }
    setColorAt(e, t) {
        this.instanceColor === null &&
            (this.instanceColor = new vh(
                new Float32Array(this.instanceMatrix.count * 3),
                3
            )),
            t.toArray(this.instanceColor.array, e * 3);
    }
    setMatrixAt(e, t) {
        t.toArray(this.instanceMatrix.array, e * 16);
    }
    setMorphAt(e, t) {
        const n = t.morphTargetInfluences,
            i = n.length + 1;
        this.morphTexture === null &&
            (this.morphTexture = new Va(
                new Float32Array(i * this.count),
                i,
                this.count,
                Tc,
                ri
            ));
        const s = this.morphTexture.source.data.data;
        let o = 0;
        for (let u = 0; u < n.length; u++) o += n[u];
        const a = this.geometry.morphTargetsRelative ? 1 : 1 - o,
            l = i * e;
        (s[l] = a), s.set(n, l + 1);
    }
    updateMorphTargets() {}
    dispose() {
        return (
            this.dispatchEvent({ type: 'dispose' }),
            this.morphTexture !== null &&
                (this.morphTexture.dispose(), (this.morphTexture = null)),
            this
        );
    }
}
function Gj(r, e) {
    return r.z - e.z;
}
function Wj(r, e) {
    return e.z - r.z;
}
class jj {
    constructor() {
        (this.index = 0), (this.pool = []), (this.list = []);
    }
    push(e, t, n) {
        const i = this.pool,
            s = this.list;
        this.index >= i.length &&
            i.push({ start: -1, count: -1, z: -1, index: -1 });
        const o = i[this.index];
        s.push(o),
            this.index++,
            (o.start = e.start),
            (o.count = e.count),
            (o.z = t),
            (o.index = n);
    }
    reset() {
        (this.list.length = 0), (this.index = 0);
    }
}
const cc = new qt(),
    qS = new qt(),
    Xj = new qt(),
    Yj = new Tt(1, 1, 1),
    B2 = new qt(),
    KS = new K0(),
    Ly = new Ar(),
    If = new Fr(),
    eg = new re(),
    z2 = new re(),
    qj = new re(),
    ZS = new jj(),
    as = new Jn(),
    Iy = [];
function Kj(r, e, t = 0) {
    const n = e.itemSize;
    if (
        r.isInterleavedBufferAttribute ||
        r.array.constructor !== e.array.constructor
    ) {
        const i = r.count;
        for (let s = 0; s < i; s++)
            for (let o = 0; o < n; o++)
                e.setComponent(s + t, o, r.getComponent(s, o));
    } else e.array.set(r.array, t * n);
    e.needsUpdate = !0;
}
class IO extends Jn {
    get maxInstanceCount() {
        return this._maxInstanceCount;
    }
    constructor(e, t, n = t * 2, i) {
        super(new xn(), i),
            (this.isBatchedMesh = !0),
            (this.perObjectFrustumCulled = !0),
            (this.sortObjects = !0),
            (this.boundingBox = null),
            (this.boundingSphere = null),
            (this.customSort = null),
            (this._drawInfo = []),
            (this._drawRanges = []),
            (this._reservedRanges = []),
            (this._bounds = []),
            (this._maxInstanceCount = e),
            (this._maxVertexCount = t),
            (this._maxIndexCount = n),
            (this._geometryInitialized = !1),
            (this._geometryCount = 0),
            (this._multiDrawCounts = new Int32Array(e)),
            (this._multiDrawStarts = new Int32Array(e)),
            (this._multiDrawCount = 0),
            (this._multiDrawInstances = null),
            (this._visibilityChanged = !0),
            (this._matricesTexture = null),
            (this._indirectTexture = null),
            (this._colorsTexture = null),
            this._initMatricesTexture(),
            this._initIndirectTexture();
    }
    _initMatricesTexture() {
        let e = Math.sqrt(this._maxInstanceCount * 4);
        (e = Math.ceil(e / 4) * 4), (e = Math.max(e, 4));
        const t = new Float32Array(e * e * 4),
            n = new Va(t, e, e, er, ri);
        this._matricesTexture = n;
    }
    _initIndirectTexture() {
        let e = Math.sqrt(this._maxInstanceCount);
        e = Math.ceil(e);
        const t = new Uint32Array(e * e),
            n = new Va(t, e, e, j0, Ll);
        this._indirectTexture = n;
    }
    _initColorsTexture() {
        let e = Math.sqrt(this._maxIndexCount);
        e = Math.ceil(e);
        const t = new Float32Array(e * e * 4).fill(1),
            n = new Va(t, e, e, er, ri);
        (n.colorSpace = zn.workingColorSpace), (this._colorsTexture = n);
    }
    _initializeGeometry(e) {
        const t = this.geometry,
            n = this._maxVertexCount,
            i = this._maxIndexCount;
        if (this._geometryInitialized === !1) {
            for (const s in e.attributes) {
                const o = e.getAttribute(s),
                    { array: a, itemSize: l, normalized: u } = o,
                    f = new a.constructor(n * l),
                    d = new qn(f, l, u);
                t.setAttribute(s, d);
            }
            if (e.getIndex() !== null) {
                const s = n > 65535 ? new Uint32Array(i) : new Uint16Array(i);
                t.setIndex(new qn(s, 1));
            }
            this._geometryInitialized = !0;
        }
    }
    _validateGeometry(e) {
        const t = this.geometry;
        if (!!e.getIndex() != !!t.getIndex())
            throw new Error(
                'BatchedMesh: All geometries must consistently have "index".'
            );
        for (const n in t.attributes) {
            if (!e.hasAttribute(n))
                throw new Error(
                    `BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`
                );
            const i = e.getAttribute(n),
                s = t.getAttribute(n);
            if (i.itemSize !== s.itemSize || i.normalized !== s.normalized)
                throw new Error(
                    'BatchedMesh: All attributes must have a consistent itemSize and normalized value.'
                );
        }
    }
    setCustomSort(e) {
        return (this.customSort = e), this;
    }
    computeBoundingBox() {
        this.boundingBox === null && (this.boundingBox = new Ar());
        const e = this._geometryCount,
            t = this.boundingBox,
            n = this._drawInfo;
        t.makeEmpty();
        for (let i = 0; i < e; i++) {
            if (n[i].active === !1) continue;
            const s = n[i].geometryIndex;
            this.getMatrixAt(i, cc),
                this.getBoundingBoxAt(s, Ly).applyMatrix4(cc),
                t.union(Ly);
        }
    }
    computeBoundingSphere() {
        this.boundingSphere === null && (this.boundingSphere = new Fr());
        const e = this.boundingSphere,
            t = this._drawInfo;
        e.makeEmpty();
        for (let n = 0, i = t.length; n < i; n++) {
            if (t[n].active === !1) continue;
            const s = t[n].geometryIndex;
            this.getMatrixAt(n, cc),
                this.getBoundingSphereAt(s, If).applyMatrix4(cc),
                e.union(If);
        }
    }
    addInstance(e) {
        if (this._drawInfo.length >= this._maxInstanceCount)
            throw new Error('BatchedMesh: Maximum item count reached.');
        this._drawInfo.push({ visible: !0, active: !0, geometryIndex: e });
        const t = this._drawInfo.length - 1,
            n = this._matricesTexture,
            i = n.image.data;
        Xj.toArray(i, t * 16), (n.needsUpdate = !0);
        const s = this._colorsTexture;
        return s && (Yj.toArray(s.image.data, t * 4), (s.needsUpdate = !0)), t;
    }
    addGeometry(e, t = -1, n = -1) {
        if (
            (this._initializeGeometry(e),
            this._validateGeometry(e),
            this._drawInfo.length >= this._maxInstanceCount)
        )
            throw new Error('BatchedMesh: Maximum item count reached.');
        const i = {
            vertexStart: -1,
            vertexCount: -1,
            indexStart: -1,
            indexCount: -1,
        };
        let s = null;
        const o = this._reservedRanges,
            a = this._drawRanges,
            l = this._bounds;
        this._geometryCount !== 0 && (s = o[o.length - 1]),
            t === -1
                ? (i.vertexCount = e.getAttribute('position').count)
                : (i.vertexCount = t),
            s === null
                ? (i.vertexStart = 0)
                : (i.vertexStart = s.vertexStart + s.vertexCount);
        const u = e.getIndex(),
            f = u !== null;
        if (
            (f &&
                (n === -1 ? (i.indexCount = u.count) : (i.indexCount = n),
                s === null
                    ? (i.indexStart = 0)
                    : (i.indexStart = s.indexStart + s.indexCount)),
            (i.indexStart !== -1 &&
                i.indexStart + i.indexCount > this._maxIndexCount) ||
                i.vertexStart + i.vertexCount > this._maxVertexCount)
        )
            throw new Error(
                'BatchedMesh: Reserved space request exceeds the maximum buffer size.'
            );
        const d = this._geometryCount;
        return (
            this._geometryCount++,
            o.push(i),
            a.push({ start: f ? i.indexStart : i.vertexStart, count: -1 }),
            l.push({
                boxInitialized: !1,
                box: new Ar(),
                sphereInitialized: !1,
                sphere: new Fr(),
            }),
            this.setGeometryAt(d, e),
            d
        );
    }
    setGeometryAt(e, t) {
        if (e >= this._geometryCount)
            throw new Error('BatchedMesh: Maximum geometry count reached.');
        this._validateGeometry(t);
        const n = this.geometry,
            i = n.getIndex() !== null,
            s = n.getIndex(),
            o = t.getIndex(),
            a = this._reservedRanges[e];
        if (
            (i && o.count > a.indexCount) ||
            t.attributes.position.count > a.vertexCount
        )
            throw new Error(
                'BatchedMesh: Reserved space not large enough for provided geometry.'
            );
        const l = a.vertexStart,
            u = a.vertexCount;
        for (const v in n.attributes) {
            const _ = t.getAttribute(v),
                S = n.getAttribute(v);
            Kj(_, S, l);
            const w = _.itemSize;
            for (let x = _.count, A = u; x < A; x++) {
                const T = l + x;
                for (let b = 0; b < w; b++) S.setComponent(T, b, 0);
            }
            (S.needsUpdate = !0), S.addUpdateRange(l * w, u * w);
        }
        if (i) {
            const v = a.indexStart;
            for (let _ = 0; _ < o.count; _++) s.setX(v + _, l + o.getX(_));
            for (let _ = o.count, S = a.indexCount; _ < S; _++)
                s.setX(v + _, l);
            (s.needsUpdate = !0), s.addUpdateRange(v, a.indexCount);
        }
        const f = this._bounds[e];
        t.boundingBox !== null
            ? (f.box.copy(t.boundingBox), (f.boxInitialized = !0))
            : (f.boxInitialized = !1),
            t.boundingSphere !== null
                ? (f.sphere.copy(t.boundingSphere), (f.sphereInitialized = !0))
                : (f.sphereInitialized = !1);
        const d = this._drawRanges[e],
            m = t.getAttribute('position');
        return (
            (d.count = i ? o.count : m.count), (this._visibilityChanged = !0), e
        );
    }
    getBoundingBoxAt(e, t) {
        if (e >= this._geometryCount) return null;
        const n = this._bounds[e],
            i = n.box,
            s = this.geometry;
        if (n.boxInitialized === !1) {
            i.makeEmpty();
            const o = s.index,
                a = s.attributes.position,
                l = this._drawRanges[e];
            for (let u = l.start, f = l.start + l.count; u < f; u++) {
                let d = u;
                o && (d = o.getX(d)),
                    i.expandByPoint(eg.fromBufferAttribute(a, d));
            }
            n.boxInitialized = !0;
        }
        return t.copy(i), t;
    }
    getBoundingSphereAt(e, t) {
        if (e >= this._geometryCount) return null;
        const n = this._bounds[e],
            i = n.sphere,
            s = this.geometry;
        if (n.sphereInitialized === !1) {
            i.makeEmpty(), this.getBoundingBoxAt(e, Ly), Ly.getCenter(i.center);
            const o = s.index,
                a = s.attributes.position,
                l = this._drawRanges[e];
            let u = 0;
            for (let f = l.start, d = l.start + l.count; f < d; f++) {
                let m = f;
                o && (m = o.getX(m)),
                    eg.fromBufferAttribute(a, m),
                    (u = Math.max(u, i.center.distanceToSquared(eg)));
            }
            (i.radius = Math.sqrt(u)), (n.sphereInitialized = !0);
        }
        return t.copy(i), t;
    }
    setMatrixAt(e, t) {
        const n = this._drawInfo,
            i = this._matricesTexture,
            s = this._matricesTexture.image.data;
        return e >= n.length || n[e].active === !1
            ? this
            : (t.toArray(s, e * 16), (i.needsUpdate = !0), this);
    }
    getMatrixAt(e, t) {
        const n = this._drawInfo,
            i = this._matricesTexture.image.data;
        return e >= n.length || n[e].active === !1
            ? null
            : t.fromArray(i, e * 16);
    }
    setColorAt(e, t) {
        this._colorsTexture === null && this._initColorsTexture();
        const n = this._colorsTexture,
            i = this._colorsTexture.image.data,
            s = this._drawInfo;
        return e >= s.length || s[e].active === !1
            ? this
            : (t.toArray(i, e * 4), (n.needsUpdate = !0), this);
    }
    getColorAt(e, t) {
        const n = this._colorsTexture.image.data,
            i = this._drawInfo;
        return e >= i.length || i[e].active === !1
            ? null
            : t.fromArray(n, e * 4);
    }
    setVisibleAt(e, t) {
        const n = this._drawInfo;
        return e >= n.length || n[e].active === !1 || n[e].visible === t
            ? this
            : ((n[e].visible = t), (this._visibilityChanged = !0), this);
    }
    getVisibleAt(e) {
        const t = this._drawInfo;
        return e >= t.length || t[e].active === !1 ? !1 : t[e].visible;
    }
    raycast(e, t) {
        const n = this._drawInfo,
            i = this._drawRanges,
            s = this.matrixWorld,
            o = this.geometry;
        (as.material = this.material),
            (as.geometry.index = o.index),
            (as.geometry.attributes = o.attributes),
            as.geometry.boundingBox === null &&
                (as.geometry.boundingBox = new Ar()),
            as.geometry.boundingSphere === null &&
                (as.geometry.boundingSphere = new Fr());
        for (let a = 0, l = n.length; a < l; a++) {
            if (!n[a].visible || !n[a].active) continue;
            const u = n[a].geometryIndex,
                f = i[u];
            as.geometry.setDrawRange(f.start, f.count),
                this.getMatrixAt(a, as.matrixWorld).premultiply(s),
                this.getBoundingBoxAt(u, as.geometry.boundingBox),
                this.getBoundingSphereAt(u, as.geometry.boundingSphere),
                as.raycast(e, Iy);
            for (let d = 0, m = Iy.length; d < m; d++) {
                const v = Iy[d];
                (v.object = this), (v.batchId = a), t.push(v);
            }
            Iy.length = 0;
        }
        (as.material = null),
            (as.geometry.index = null),
            (as.geometry.attributes = {}),
            as.geometry.setDrawRange(0, 1 / 0);
    }
    copy(e) {
        return (
            super.copy(e),
            (this.geometry = e.geometry.clone()),
            (this.perObjectFrustumCulled = e.perObjectFrustumCulled),
            (this.sortObjects = e.sortObjects),
            (this.boundingBox =
                e.boundingBox !== null ? e.boundingBox.clone() : null),
            (this.boundingSphere =
                e.boundingSphere !== null ? e.boundingSphere.clone() : null),
            (this._drawRanges = e._drawRanges.map((t) => ({ ...t }))),
            (this._reservedRanges = e._reservedRanges.map((t) => ({ ...t }))),
            (this._drawInfo = e._drawInfo.map((t) => ({ ...t }))),
            (this._bounds = e._bounds.map((t) => ({
                boxInitialized: t.boxInitialized,
                box: t.box.clone(),
                sphereInitialized: t.sphereInitialized,
                sphere: t.sphere.clone(),
            }))),
            (this._maxInstanceCount = e._maxInstanceCount),
            (this._maxVertexCount = e._maxVertexCount),
            (this._maxIndexCount = e._maxIndexCount),
            (this._geometryInitialized = e._geometryInitialized),
            (this._geometryCount = e._geometryCount),
            (this._multiDrawCounts = e._multiDrawCounts.slice()),
            (this._multiDrawStarts = e._multiDrawStarts.slice()),
            (this._matricesTexture = e._matricesTexture.clone()),
            (this._matricesTexture.image.data =
                this._matricesTexture.image.slice()),
            this._colorsTexture !== null &&
                ((this._colorsTexture = e._colorsTexture.clone()),
                (this._colorsTexture.image.data =
                    this._colorsTexture.image.slice())),
            this
        );
    }
    dispose() {
        return (
            this.geometry.dispose(),
            this._matricesTexture.dispose(),
            (this._matricesTexture = null),
            this._indirectTexture.dispose(),
            (this._indirectTexture = null),
            this._colorsTexture !== null &&
                (this._colorsTexture.dispose(), (this._colorsTexture = null)),
            this
        );
    }
    onBeforeRender(e, t, n, i, s) {
        if (
            !this._visibilityChanged &&
            !this.perObjectFrustumCulled &&
            !this.sortObjects
        )
            return;
        const o = i.getIndex(),
            a = o === null ? 1 : o.array.BYTES_PER_ELEMENT,
            l = this._drawInfo,
            u = this._multiDrawStarts,
            f = this._multiDrawCounts,
            d = this._drawRanges,
            m = this.perObjectFrustumCulled,
            v = this._indirectTexture,
            _ = v.image.data;
        m &&
            (B2.multiplyMatrices(
                n.projectionMatrix,
                n.matrixWorldInverse
            ).multiply(this.matrixWorld),
            KS.setFromProjectionMatrix(B2, e.coordinateSystem));
        let S = 0;
        if (this.sortObjects) {
            qS.copy(this.matrixWorld).invert(),
                eg.setFromMatrixPosition(n.matrixWorld).applyMatrix4(qS),
                z2
                    .set(0, 0, -1)
                    .transformDirection(n.matrixWorld)
                    .transformDirection(qS);
            for (let A = 0, T = l.length; A < T; A++)
                if (l[A].visible && l[A].active) {
                    const b = l[A].geometryIndex;
                    this.getMatrixAt(A, cc),
                        this.getBoundingSphereAt(b, If).applyMatrix4(cc);
                    let P = !1;
                    if ((m && (P = !KS.intersectsSphere(If)), !P)) {
                        const L = qj.subVectors(If.center, eg).dot(z2);
                        ZS.push(d[b], L, A);
                    }
                }
            const w = ZS.list,
                x = this.customSort;
            x === null ? w.sort(s.transparent ? Wj : Gj) : x.call(this, w, n);
            for (let A = 0, T = w.length; A < T; A++) {
                const b = w[A];
                (u[S] = b.start * a), (f[S] = b.count), (_[S] = b.index), S++;
            }
            ZS.reset();
        } else
            for (let w = 0, x = l.length; w < x; w++)
                if (l[w].visible && l[w].active) {
                    const A = l[w].geometryIndex;
                    let T = !1;
                    if (
                        (m &&
                            (this.getMatrixAt(w, cc),
                            this.getBoundingSphereAt(A, If).applyMatrix4(cc),
                            (T = !KS.intersectsSphere(If))),
                        !T)
                    ) {
                        const b = d[A];
                        (u[S] = b.start * a), (f[S] = b.count), (_[S] = w), S++;
                    }
                }
        (v.needsUpdate = !0),
            (this._multiDrawCount = S),
            (this._visibilityChanged = !1);
    }
    onBeforeShadow(e, t, n, i, s, o) {
        this.onBeforeRender(e, null, i, s, o);
    }
}
class ks extends gs {
    constructor(e) {
        super(),
            (this.isLineBasicMaterial = !0),
            (this.type = 'LineBasicMaterial'),
            (this.color = new Tt(16777215)),
            (this.map = null),
            (this.linewidth = 1),
            (this.linecap = 'round'),
            (this.linejoin = 'round'),
            (this.fog = !0),
            this.setValues(e);
    }
    copy(e) {
        return (
            super.copy(e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.linewidth = e.linewidth),
            (this.linecap = e.linecap),
            (this.linejoin = e.linejoin),
            (this.fog = e.fog),
            this
        );
    }
}
const hx = new re(),
    dx = new re(),
    V2 = new qt(),
    tg = new Gp(),
    Dy = new Fr(),
    $S = new re(),
    H2 = new re();
class Dc extends In {
    constructor(e = new xn(), t = new ks()) {
        super(),
            (this.isLine = !0),
            (this.type = 'Line'),
            (this.geometry = e),
            (this.material = t),
            this.updateMorphTargets();
    }
    copy(e, t) {
        return (
            super.copy(e, t),
            (this.material = Array.isArray(e.material)
                ? e.material.slice()
                : e.material),
            (this.geometry = e.geometry),
            this
        );
    }
    computeLineDistances() {
        const e = this.geometry;
        if (e.index === null) {
            const t = e.attributes.position,
                n = [0];
            for (let i = 1, s = t.count; i < s; i++)
                hx.fromBufferAttribute(t, i - 1),
                    dx.fromBufferAttribute(t, i),
                    (n[i] = n[i - 1]),
                    (n[i] += hx.distanceTo(dx));
            e.setAttribute('lineDistance', new Ht(n, 1));
        } else
            console.warn(
                'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.'
            );
        return this;
    }
    raycast(e, t) {
        const n = this.geometry,
            i = this.matrixWorld,
            s = e.params.Line.threshold,
            o = n.drawRange;
        if (
            (n.boundingSphere === null && n.computeBoundingSphere(),
            Dy.copy(n.boundingSphere),
            Dy.applyMatrix4(i),
            (Dy.radius += s),
            e.ray.intersectsSphere(Dy) === !1)
        )
            return;
        V2.copy(i).invert(), tg.copy(e.ray).applyMatrix4(V2);
        const a = s / ((this.scale.x + this.scale.y + this.scale.z) / 3),
            l = a * a,
            u = this.isLineSegments ? 2 : 1,
            f = n.index,
            m = n.attributes.position;
        if (f !== null) {
            const v = Math.max(0, o.start),
                _ = Math.min(f.count, o.start + o.count);
            for (let S = v, w = _ - 1; S < w; S += u) {
                const x = f.getX(S),
                    A = f.getX(S + 1),
                    T = Oy(this, e, tg, l, x, A);
                T && t.push(T);
            }
            if (this.isLineLoop) {
                const S = f.getX(_ - 1),
                    w = f.getX(v),
                    x = Oy(this, e, tg, l, S, w);
                x && t.push(x);
            }
        } else {
            const v = Math.max(0, o.start),
                _ = Math.min(m.count, o.start + o.count);
            for (let S = v, w = _ - 1; S < w; S += u) {
                const x = Oy(this, e, tg, l, S, S + 1);
                x && t.push(x);
            }
            if (this.isLineLoop) {
                const S = Oy(this, e, tg, l, _ - 1, v);
                S && t.push(S);
            }
        }
    }
    updateMorphTargets() {
        const t = this.geometry.morphAttributes,
            n = Object.keys(t);
        if (n.length > 0) {
            const i = t[n[0]];
            if (i !== void 0) {
                (this.morphTargetInfluences = []),
                    (this.morphTargetDictionary = {});
                for (let s = 0, o = i.length; s < o; s++) {
                    const a = i[s].name || String(s);
                    this.morphTargetInfluences.push(0),
                        (this.morphTargetDictionary[a] = s);
                }
            }
        }
    }
}
function Oy(r, e, t, n, i, s) {
    const o = r.geometry.attributes.position;
    if (
        (hx.fromBufferAttribute(o, i),
        dx.fromBufferAttribute(o, s),
        t.distanceSqToSegment(hx, dx, $S, H2) > n)
    )
        return;
    $S.applyMatrix4(r.matrixWorld);
    const l = e.ray.origin.distanceTo($S);
    if (!(l < e.near || l > e.far))
        return {
            distance: l,
            point: H2.clone().applyMatrix4(r.matrixWorld),
            index: i,
            face: null,
            faceIndex: null,
            object: r,
        };
}
const G2 = new re(),
    W2 = new re();
class Dl extends Dc {
    constructor(e, t) {
        super(e, t), (this.isLineSegments = !0), (this.type = 'LineSegments');
    }
    computeLineDistances() {
        const e = this.geometry;
        if (e.index === null) {
            const t = e.attributes.position,
                n = [];
            for (let i = 0, s = t.count; i < s; i += 2)
                G2.fromBufferAttribute(t, i),
                    W2.fromBufferAttribute(t, i + 1),
                    (n[i] = i === 0 ? 0 : n[i - 1]),
                    (n[i + 1] = n[i] + G2.distanceTo(W2));
            e.setAttribute('lineDistance', new Ht(n, 1));
        } else
            console.warn(
                'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.'
            );
        return this;
    }
}
class DO extends Dc {
    constructor(e, t) {
        super(e, t), (this.isLineLoop = !0), (this.type = 'LineLoop');
    }
}
class kT extends gs {
    constructor(e) {
        super(),
            (this.isPointsMaterial = !0),
            (this.type = 'PointsMaterial'),
            (this.color = new Tt(16777215)),
            (this.map = null),
            (this.alphaMap = null),
            (this.size = 1),
            (this.sizeAttenuation = !0),
            (this.fog = !0),
            this.setValues(e);
    }
    copy(e) {
        return (
            super.copy(e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.alphaMap = e.alphaMap),
            (this.size = e.size),
            (this.sizeAttenuation = e.sizeAttenuation),
            (this.fog = e.fog),
            this
        );
    }
}
const j2 = new qt(),
    DM = new Gp(),
    Uy = new Fr(),
    ky = new re();
class OO extends In {
    constructor(e = new xn(), t = new kT()) {
        super(),
            (this.isPoints = !0),
            (this.type = 'Points'),
            (this.geometry = e),
            (this.material = t),
            this.updateMorphTargets();
    }
    copy(e, t) {
        return (
            super.copy(e, t),
            (this.material = Array.isArray(e.material)
                ? e.material.slice()
                : e.material),
            (this.geometry = e.geometry),
            this
        );
    }
    raycast(e, t) {
        const n = this.geometry,
            i = this.matrixWorld,
            s = e.params.Points.threshold,
            o = n.drawRange;
        if (
            (n.boundingSphere === null && n.computeBoundingSphere(),
            Uy.copy(n.boundingSphere),
            Uy.applyMatrix4(i),
            (Uy.radius += s),
            e.ray.intersectsSphere(Uy) === !1)
        )
            return;
        j2.copy(i).invert(), DM.copy(e.ray).applyMatrix4(j2);
        const a = s / ((this.scale.x + this.scale.y + this.scale.z) / 3),
            l = a * a,
            u = n.index,
            d = n.attributes.position;
        if (u !== null) {
            const m = Math.max(0, o.start),
                v = Math.min(u.count, o.start + o.count);
            for (let _ = m, S = v; _ < S; _++) {
                const w = u.getX(_);
                ky.fromBufferAttribute(d, w), X2(ky, w, l, i, e, t, this);
            }
        } else {
            const m = Math.max(0, o.start),
                v = Math.min(d.count, o.start + o.count);
            for (let _ = m, S = v; _ < S; _++)
                ky.fromBufferAttribute(d, _), X2(ky, _, l, i, e, t, this);
        }
    }
    updateMorphTargets() {
        const t = this.geometry.morphAttributes,
            n = Object.keys(t);
        if (n.length > 0) {
            const i = t[n[0]];
            if (i !== void 0) {
                (this.morphTargetInfluences = []),
                    (this.morphTargetDictionary = {});
                for (let s = 0, o = i.length; s < o; s++) {
                    const a = i[s].name || String(s);
                    this.morphTargetInfluences.push(0),
                        (this.morphTargetDictionary[a] = s);
                }
            }
        }
    }
}
function X2(r, e, t, n, i, s, o) {
    const a = DM.distanceSqToPoint(r);
    if (a < t) {
        const l = new re();
        DM.closestPointToPoint(r, l), l.applyMatrix4(n);
        const u = i.ray.origin.distanceTo(l);
        if (u < i.near || u > i.far) return;
        s.push({
            distance: u,
            distanceToRay: Math.sqrt(a),
            point: l,
            index: e,
            face: null,
            object: o,
        });
    }
}
class Zj extends Vn {
    constructor(e, t, n, i, s, o, a, l, u) {
        super(e, t, n, i, s, o, a, l, u),
            (this.isVideoTexture = !0),
            (this.minFilter = o !== void 0 ? o : Cn),
            (this.magFilter = s !== void 0 ? s : Cn),
            (this.generateMipmaps = !1);
        const f = this;
        function d() {
            (f.needsUpdate = !0), e.requestVideoFrameCallback(d);
        }
        'requestVideoFrameCallback' in e && e.requestVideoFrameCallback(d);
    }
    clone() {
        return new this.constructor(this.image).copy(this);
    }
    update() {
        const e = this.image;
        'requestVideoFrameCallback' in e === !1 &&
            e.readyState >= e.HAVE_CURRENT_DATA &&
            (this.needsUpdate = !0);
    }
}
class $j extends Vn {
    constructor(e, t) {
        super({ width: e, height: t }),
            (this.isFramebufferTexture = !0),
            (this.magFilter = Fn),
            (this.minFilter = Fn),
            (this.generateMipmaps = !1),
            (this.needsUpdate = !0);
    }
}
class $x extends Vn {
    constructor(e, t, n, i, s, o, a, l, u, f, d, m) {
        super(null, o, a, l, u, f, i, s, d, m),
            (this.isCompressedTexture = !0),
            (this.image = { width: t, height: n }),
            (this.mipmaps = e),
            (this.flipY = !1),
            (this.generateMipmaps = !1);
    }
}
class Jj extends $x {
    constructor(e, t, n, i, s, o) {
        super(e, t, n, s, o),
            (this.isCompressedArrayTexture = !0),
            (this.image.depth = i),
            (this.wrapR = pr),
            (this.layerUpdates = new Set());
    }
    addLayerUpdate(e) {
        this.layerUpdates.add(e);
    }
    clearLayerUpdates() {
        this.layerUpdates.clear();
    }
}
class Qj extends $x {
    constructor(e, t, n) {
        super(void 0, e[0].width, e[0].height, t, n, Pl),
            (this.isCompressedCubeTexture = !0),
            (this.isCubeTexture = !0),
            (this.image = e);
    }
}
class eX extends Vn {
    constructor(e, t, n, i, s, o, a, l, u) {
        super(e, t, n, i, s, o, a, l, u),
            (this.isCanvasTexture = !0),
            (this.needsUpdate = !0);
    }
}
class Xa {
    constructor() {
        (this.type = 'Curve'), (this.arcLengthDivisions = 200);
    }
    getPoint() {
        return console.warn('THREE.Curve: .getPoint() not implemented.'), null;
    }
    getPointAt(e, t) {
        const n = this.getUtoTmapping(e);
        return this.getPoint(n, t);
    }
    getPoints(e = 5) {
        const t = [];
        for (let n = 0; n <= e; n++) t.push(this.getPoint(n / e));
        return t;
    }
    getSpacedPoints(e = 5) {
        const t = [];
        for (let n = 0; n <= e; n++) t.push(this.getPointAt(n / e));
        return t;
    }
    getLength() {
        const e = this.getLengths();
        return e[e.length - 1];
    }
    getLengths(e = this.arcLengthDivisions) {
        if (
            this.cacheArcLengths &&
            this.cacheArcLengths.length === e + 1 &&
            !this.needsUpdate
        )
            return this.cacheArcLengths;
        this.needsUpdate = !1;
        const t = [];
        let n,
            i = this.getPoint(0),
            s = 0;
        t.push(0);
        for (let o = 1; o <= e; o++)
            (n = this.getPoint(o / e)),
                (s += n.distanceTo(i)),
                t.push(s),
                (i = n);
        return (this.cacheArcLengths = t), t;
    }
    updateArcLengths() {
        (this.needsUpdate = !0), this.getLengths();
    }
    getUtoTmapping(e, t) {
        const n = this.getLengths();
        let i = 0;
        const s = n.length;
        let o;
        t ? (o = t) : (o = e * n[s - 1]);
        let a = 0,
            l = s - 1,
            u;
        for (; a <= l; )
            if (((i = Math.floor(a + (l - a) / 2)), (u = n[i] - o), u < 0))
                a = i + 1;
            else if (u > 0) l = i - 1;
            else {
                l = i;
                break;
            }
        if (((i = l), n[i] === o)) return i / (s - 1);
        const f = n[i],
            m = n[i + 1] - f,
            v = (o - f) / m;
        return (i + v) / (s - 1);
    }
    getTangent(e, t) {
        let i = e - 1e-4,
            s = e + 1e-4;
        i < 0 && (i = 0), s > 1 && (s = 1);
        const o = this.getPoint(i),
            a = this.getPoint(s),
            l = t || (o.isVector2 ? new tt() : new re());
        return l.copy(a).sub(o).normalize(), l;
    }
    getTangentAt(e, t) {
        const n = this.getUtoTmapping(e);
        return this.getTangent(n, t);
    }
    computeFrenetFrames(e, t) {
        const n = new re(),
            i = [],
            s = [],
            o = [],
            a = new re(),
            l = new qt();
        for (let v = 0; v <= e; v++) {
            const _ = v / e;
            i[v] = this.getTangentAt(_, new re());
        }
        (s[0] = new re()), (o[0] = new re());
        let u = Number.MAX_VALUE;
        const f = Math.abs(i[0].x),
            d = Math.abs(i[0].y),
            m = Math.abs(i[0].z);
        f <= u && ((u = f), n.set(1, 0, 0)),
            d <= u && ((u = d), n.set(0, 1, 0)),
            m <= u && n.set(0, 0, 1),
            a.crossVectors(i[0], n).normalize(),
            s[0].crossVectors(i[0], a),
            o[0].crossVectors(i[0], s[0]);
        for (let v = 1; v <= e; v++) {
            if (
                ((s[v] = s[v - 1].clone()),
                (o[v] = o[v - 1].clone()),
                a.crossVectors(i[v - 1], i[v]),
                a.length() > Number.EPSILON)
            ) {
                a.normalize();
                const _ = Math.acos(Vi(i[v - 1].dot(i[v]), -1, 1));
                s[v].applyMatrix4(l.makeRotationAxis(a, _));
            }
            o[v].crossVectors(i[v], s[v]);
        }
        if (t === !0) {
            let v = Math.acos(Vi(s[0].dot(s[e]), -1, 1));
            (v /= e), i[0].dot(a.crossVectors(s[0], s[e])) > 0 && (v = -v);
            for (let _ = 1; _ <= e; _++)
                s[_].applyMatrix4(l.makeRotationAxis(i[_], v * _)),
                    o[_].crossVectors(i[_], s[_]);
        }
        return { tangents: i, normals: s, binormals: o };
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return (this.arcLengthDivisions = e.arcLengthDivisions), this;
    }
    toJSON() {
        const e = {
            metadata: {
                version: 4.6,
                type: 'Curve',
                generator: 'Curve.toJSON',
            },
        };
        return (
            (e.arcLengthDivisions = this.arcLengthDivisions),
            (e.type = this.type),
            e
        );
    }
    fromJSON(e) {
        return (this.arcLengthDivisions = e.arcLengthDivisions), this;
    }
}
class Jx extends Xa {
    constructor(
        e = 0,
        t = 0,
        n = 1,
        i = 1,
        s = 0,
        o = Math.PI * 2,
        a = !1,
        l = 0
    ) {
        super(),
            (this.isEllipseCurve = !0),
            (this.type = 'EllipseCurve'),
            (this.aX = e),
            (this.aY = t),
            (this.xRadius = n),
            (this.yRadius = i),
            (this.aStartAngle = s),
            (this.aEndAngle = o),
            (this.aClockwise = a),
            (this.aRotation = l);
    }
    getPoint(e, t = new tt()) {
        const n = t,
            i = Math.PI * 2;
        let s = this.aEndAngle - this.aStartAngle;
        const o = Math.abs(s) < Number.EPSILON;
        for (; s < 0; ) s += i;
        for (; s > i; ) s -= i;
        s < Number.EPSILON && (o ? (s = 0) : (s = i)),
            this.aClockwise === !0 && !o && (s === i ? (s = -i) : (s = s - i));
        const a = this.aStartAngle + e * s;
        let l = this.aX + this.xRadius * Math.cos(a),
            u = this.aY + this.yRadius * Math.sin(a);
        if (this.aRotation !== 0) {
            const f = Math.cos(this.aRotation),
                d = Math.sin(this.aRotation),
                m = l - this.aX,
                v = u - this.aY;
            (l = m * f - v * d + this.aX), (u = m * d + v * f + this.aY);
        }
        return n.set(l, u);
    }
    copy(e) {
        return (
            super.copy(e),
            (this.aX = e.aX),
            (this.aY = e.aY),
            (this.xRadius = e.xRadius),
            (this.yRadius = e.yRadius),
            (this.aStartAngle = e.aStartAngle),
            (this.aEndAngle = e.aEndAngle),
            (this.aClockwise = e.aClockwise),
            (this.aRotation = e.aRotation),
            this
        );
    }
    toJSON() {
        const e = super.toJSON();
        return (
            (e.aX = this.aX),
            (e.aY = this.aY),
            (e.xRadius = this.xRadius),
            (e.yRadius = this.yRadius),
            (e.aStartAngle = this.aStartAngle),
            (e.aEndAngle = this.aEndAngle),
            (e.aClockwise = this.aClockwise),
            (e.aRotation = this.aRotation),
            e
        );
    }
    fromJSON(e) {
        return (
            super.fromJSON(e),
            (this.aX = e.aX),
            (this.aY = e.aY),
            (this.xRadius = e.xRadius),
            (this.yRadius = e.yRadius),
            (this.aStartAngle = e.aStartAngle),
            (this.aEndAngle = e.aEndAngle),
            (this.aClockwise = e.aClockwise),
            (this.aRotation = e.aRotation),
            this
        );
    }
}
class UO extends Jx {
    constructor(e, t, n, i, s, o) {
        super(e, t, n, n, i, s, o),
            (this.isArcCurve = !0),
            (this.type = 'ArcCurve');
    }
}
function NT() {
    let r = 0,
        e = 0,
        t = 0,
        n = 0;
    function i(s, o, a, l) {
        (r = s),
            (e = a),
            (t = -3 * s + 3 * o - 2 * a - l),
            (n = 2 * s - 2 * o + a + l);
    }
    return {
        initCatmullRom: function (s, o, a, l, u) {
            i(o, a, u * (a - s), u * (l - o));
        },
        initNonuniformCatmullRom: function (s, o, a, l, u, f, d) {
            let m = (o - s) / u - (a - s) / (u + f) + (a - o) / f,
                v = (a - o) / f - (l - o) / (f + d) + (l - a) / d;
            (m *= f), (v *= f), i(o, a, m, v);
        },
        calc: function (s) {
            const o = s * s,
                a = o * s;
            return r + e * s + t * o + n * a;
        },
    };
}
const Ny = new re(),
    JS = new NT(),
    QS = new NT(),
    ew = new NT();
class kO extends Xa {
    constructor(e = [], t = !1, n = 'centripetal', i = 0.5) {
        super(),
            (this.isCatmullRomCurve3 = !0),
            (this.type = 'CatmullRomCurve3'),
            (this.points = e),
            (this.closed = t),
            (this.curveType = n),
            (this.tension = i);
    }
    getPoint(e, t = new re()) {
        const n = t,
            i = this.points,
            s = i.length,
            o = (s - (this.closed ? 0 : 1)) * e;
        let a = Math.floor(o),
            l = o - a;
        this.closed
            ? (a += a > 0 ? 0 : (Math.floor(Math.abs(a) / s) + 1) * s)
            : l === 0 && a === s - 1 && ((a = s - 2), (l = 1));
        let u, f;
        this.closed || a > 0
            ? (u = i[(a - 1) % s])
            : (Ny.subVectors(i[0], i[1]).add(i[0]), (u = Ny));
        const d = i[a % s],
            m = i[(a + 1) % s];
        if (
            (this.closed || a + 2 < s
                ? (f = i[(a + 2) % s])
                : (Ny.subVectors(i[s - 1], i[s - 2]).add(i[s - 1]), (f = Ny)),
            this.curveType === 'centripetal' || this.curveType === 'chordal')
        ) {
            const v = this.curveType === 'chordal' ? 0.5 : 0.25;
            let _ = Math.pow(u.distanceToSquared(d), v),
                S = Math.pow(d.distanceToSquared(m), v),
                w = Math.pow(m.distanceToSquared(f), v);
            S < 1e-4 && (S = 1),
                _ < 1e-4 && (_ = S),
                w < 1e-4 && (w = S),
                JS.initNonuniformCatmullRom(u.x, d.x, m.x, f.x, _, S, w),
                QS.initNonuniformCatmullRom(u.y, d.y, m.y, f.y, _, S, w),
                ew.initNonuniformCatmullRom(u.z, d.z, m.z, f.z, _, S, w);
        } else
            this.curveType === 'catmullrom' &&
                (JS.initCatmullRom(u.x, d.x, m.x, f.x, this.tension),
                QS.initCatmullRom(u.y, d.y, m.y, f.y, this.tension),
                ew.initCatmullRom(u.z, d.z, m.z, f.z, this.tension));
        return n.set(JS.calc(l), QS.calc(l), ew.calc(l)), n;
    }
    copy(e) {
        super.copy(e), (this.points = []);
        for (let t = 0, n = e.points.length; t < n; t++) {
            const i = e.points[t];
            this.points.push(i.clone());
        }
        return (
            (this.closed = e.closed),
            (this.curveType = e.curveType),
            (this.tension = e.tension),
            this
        );
    }
    toJSON() {
        const e = super.toJSON();
        e.points = [];
        for (let t = 0, n = this.points.length; t < n; t++) {
            const i = this.points[t];
            e.points.push(i.toArray());
        }
        return (
            (e.closed = this.closed),
            (e.curveType = this.curveType),
            (e.tension = this.tension),
            e
        );
    }
    fromJSON(e) {
        super.fromJSON(e), (this.points = []);
        for (let t = 0, n = e.points.length; t < n; t++) {
            const i = e.points[t];
            this.points.push(new re().fromArray(i));
        }
        return (
            (this.closed = e.closed),
            (this.curveType = e.curveType),
            (this.tension = e.tension),
            this
        );
    }
}
function Y2(r, e, t, n, i) {
    const s = (n - e) * 0.5,
        o = (i - t) * 0.5,
        a = r * r,
        l = r * a;
    return (
        (2 * t - 2 * n + s + o) * l +
        (-3 * t + 3 * n - 2 * s - o) * a +
        s * r +
        t
    );
}
function tX(r, e) {
    const t = 1 - r;
    return t * t * e;
}
function nX(r, e) {
    return 2 * (1 - r) * r * e;
}
function iX(r, e) {
    return r * r * e;
}
function Gg(r, e, t, n) {
    return tX(r, e) + nX(r, t) + iX(r, n);
}
function rX(r, e) {
    const t = 1 - r;
    return t * t * t * e;
}
function sX(r, e) {
    const t = 1 - r;
    return 3 * t * t * r * e;
}
function oX(r, e) {
    return 3 * (1 - r) * r * r * e;
}
function aX(r, e) {
    return r * r * r * e;
}
function Wg(r, e, t, n, i) {
    return rX(r, e) + sX(r, t) + oX(r, n) + aX(r, i);
}
class FT extends Xa {
    constructor(e = new tt(), t = new tt(), n = new tt(), i = new tt()) {
        super(),
            (this.isCubicBezierCurve = !0),
            (this.type = 'CubicBezierCurve'),
            (this.v0 = e),
            (this.v1 = t),
            (this.v2 = n),
            (this.v3 = i);
    }
    getPoint(e, t = new tt()) {
        const n = t,
            i = this.v0,
            s = this.v1,
            o = this.v2,
            a = this.v3;
        return n.set(Wg(e, i.x, s.x, o.x, a.x), Wg(e, i.y, s.y, o.y, a.y)), n;
    }
    copy(e) {
        return (
            super.copy(e),
            this.v0.copy(e.v0),
            this.v1.copy(e.v1),
            this.v2.copy(e.v2),
            this.v3.copy(e.v3),
            this
        );
    }
    toJSON() {
        const e = super.toJSON();
        return (
            (e.v0 = this.v0.toArray()),
            (e.v1 = this.v1.toArray()),
            (e.v2 = this.v2.toArray()),
            (e.v3 = this.v3.toArray()),
            e
        );
    }
    fromJSON(e) {
        return (
            super.fromJSON(e),
            this.v0.fromArray(e.v0),
            this.v1.fromArray(e.v1),
            this.v2.fromArray(e.v2),
            this.v3.fromArray(e.v3),
            this
        );
    }
}
class NO extends Xa {
    constructor(e = new re(), t = new re(), n = new re(), i = new re()) {
        super(),
            (this.isCubicBezierCurve3 = !0),
            (this.type = 'CubicBezierCurve3'),
            (this.v0 = e),
            (this.v1 = t),
            (this.v2 = n),
            (this.v3 = i);
    }
    getPoint(e, t = new re()) {
        const n = t,
            i = this.v0,
            s = this.v1,
            o = this.v2,
            a = this.v3;
        return (
            n.set(
                Wg(e, i.x, s.x, o.x, a.x),
                Wg(e, i.y, s.y, o.y, a.y),
                Wg(e, i.z, s.z, o.z, a.z)
            ),
            n
        );
    }
    copy(e) {
        return (
            super.copy(e),
            this.v0.copy(e.v0),
            this.v1.copy(e.v1),
            this.v2.copy(e.v2),
            this.v3.copy(e.v3),
            this
        );
    }
    toJSON() {
        const e = super.toJSON();
        return (
            (e.v0 = this.v0.toArray()),
            (e.v1 = this.v1.toArray()),
            (e.v2 = this.v2.toArray()),
            (e.v3 = this.v3.toArray()),
            e
        );
    }
    fromJSON(e) {
        return (
            super.fromJSON(e),
            this.v0.fromArray(e.v0),
            this.v1.fromArray(e.v1),
            this.v2.fromArray(e.v2),
            this.v3.fromArray(e.v3),
            this
        );
    }
}
class BT extends Xa {
    constructor(e = new tt(), t = new tt()) {
        super(),
            (this.isLineCurve = !0),
            (this.type = 'LineCurve'),
            (this.v1 = e),
            (this.v2 = t);
    }
    getPoint(e, t = new tt()) {
        const n = t;
        return (
            e === 1
                ? n.copy(this.v2)
                : (n.copy(this.v2).sub(this.v1),
                  n.multiplyScalar(e).add(this.v1)),
            n
        );
    }
    getPointAt(e, t) {
        return this.getPoint(e, t);
    }
    getTangent(e, t = new tt()) {
        return t.subVectors(this.v2, this.v1).normalize();
    }
    getTangentAt(e, t) {
        return this.getTangent(e, t);
    }
    copy(e) {
        return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        const e = super.toJSON();
        return (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e;
    }
    fromJSON(e) {
        return (
            super.fromJSON(e),
            this.v1.fromArray(e.v1),
            this.v2.fromArray(e.v2),
            this
        );
    }
}
class FO extends Xa {
    constructor(e = new re(), t = new re()) {
        super(),
            (this.isLineCurve3 = !0),
            (this.type = 'LineCurve3'),
            (this.v1 = e),
            (this.v2 = t);
    }
    getPoint(e, t = new re()) {
        const n = t;
        return (
            e === 1
                ? n.copy(this.v2)
                : (n.copy(this.v2).sub(this.v1),
                  n.multiplyScalar(e).add(this.v1)),
            n
        );
    }
    getPointAt(e, t) {
        return this.getPoint(e, t);
    }
    getTangent(e, t = new re()) {
        return t.subVectors(this.v2, this.v1).normalize();
    }
    getTangentAt(e, t) {
        return this.getTangent(e, t);
    }
    copy(e) {
        return super.copy(e), this.v1.copy(e.v1), this.v2.copy(e.v2), this;
    }
    toJSON() {
        const e = super.toJSON();
        return (e.v1 = this.v1.toArray()), (e.v2 = this.v2.toArray()), e;
    }
    fromJSON(e) {
        return (
            super.fromJSON(e),
            this.v1.fromArray(e.v1),
            this.v2.fromArray(e.v2),
            this
        );
    }
}
class zT extends Xa {
    constructor(e = new tt(), t = new tt(), n = new tt()) {
        super(),
            (this.isQuadraticBezierCurve = !0),
            (this.type = 'QuadraticBezierCurve'),
            (this.v0 = e),
            (this.v1 = t),
            (this.v2 = n);
    }
    getPoint(e, t = new tt()) {
        const n = t,
            i = this.v0,
            s = this.v1,
            o = this.v2;
        return n.set(Gg(e, i.x, s.x, o.x), Gg(e, i.y, s.y, o.y)), n;
    }
    copy(e) {
        return (
            super.copy(e),
            this.v0.copy(e.v0),
            this.v1.copy(e.v1),
            this.v2.copy(e.v2),
            this
        );
    }
    toJSON() {
        const e = super.toJSON();
        return (
            (e.v0 = this.v0.toArray()),
            (e.v1 = this.v1.toArray()),
            (e.v2 = this.v2.toArray()),
            e
        );
    }
    fromJSON(e) {
        return (
            super.fromJSON(e),
            this.v0.fromArray(e.v0),
            this.v1.fromArray(e.v1),
            this.v2.fromArray(e.v2),
            this
        );
    }
}
class VT extends Xa {
    constructor(e = new re(), t = new re(), n = new re()) {
        super(),
            (this.isQuadraticBezierCurve3 = !0),
            (this.type = 'QuadraticBezierCurve3'),
            (this.v0 = e),
            (this.v1 = t),
            (this.v2 = n);
    }
    getPoint(e, t = new re()) {
        const n = t,
            i = this.v0,
            s = this.v1,
            o = this.v2;
        return (
            n.set(
                Gg(e, i.x, s.x, o.x),
                Gg(e, i.y, s.y, o.y),
                Gg(e, i.z, s.z, o.z)
            ),
            n
        );
    }
    copy(e) {
        return (
            super.copy(e),
            this.v0.copy(e.v0),
            this.v1.copy(e.v1),
            this.v2.copy(e.v2),
            this
        );
    }
    toJSON() {
        const e = super.toJSON();
        return (
            (e.v0 = this.v0.toArray()),
            (e.v1 = this.v1.toArray()),
            (e.v2 = this.v2.toArray()),
            e
        );
    }
    fromJSON(e) {
        return (
            super.fromJSON(e),
            this.v0.fromArray(e.v0),
            this.v1.fromArray(e.v1),
            this.v2.fromArray(e.v2),
            this
        );
    }
}
class HT extends Xa {
    constructor(e = []) {
        super(),
            (this.isSplineCurve = !0),
            (this.type = 'SplineCurve'),
            (this.points = e);
    }
    getPoint(e, t = new tt()) {
        const n = t,
            i = this.points,
            s = (i.length - 1) * e,
            o = Math.floor(s),
            a = s - o,
            l = i[o === 0 ? o : o - 1],
            u = i[o],
            f = i[o > i.length - 2 ? i.length - 1 : o + 1],
            d = i[o > i.length - 3 ? i.length - 1 : o + 2];
        return n.set(Y2(a, l.x, u.x, f.x, d.x), Y2(a, l.y, u.y, f.y, d.y)), n;
    }
    copy(e) {
        super.copy(e), (this.points = []);
        for (let t = 0, n = e.points.length; t < n; t++) {
            const i = e.points[t];
            this.points.push(i.clone());
        }
        return this;
    }
    toJSON() {
        const e = super.toJSON();
        e.points = [];
        for (let t = 0, n = this.points.length; t < n; t++) {
            const i = this.points[t];
            e.points.push(i.toArray());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), (this.points = []);
        for (let t = 0, n = e.points.length; t < n; t++) {
            const i = e.points[t];
            this.points.push(new tt().fromArray(i));
        }
        return this;
    }
}
var px = Object.freeze({
    __proto__: null,
    ArcCurve: UO,
    CatmullRomCurve3: kO,
    CubicBezierCurve: FT,
    CubicBezierCurve3: NO,
    EllipseCurve: Jx,
    LineCurve: BT,
    LineCurve3: FO,
    QuadraticBezierCurve: zT,
    QuadraticBezierCurve3: VT,
    SplineCurve: HT,
});
class BO extends Xa {
    constructor() {
        super(),
            (this.type = 'CurvePath'),
            (this.curves = []),
            (this.autoClose = !1);
    }
    add(e) {
        this.curves.push(e);
    }
    closePath() {
        const e = this.curves[0].getPoint(0),
            t = this.curves[this.curves.length - 1].getPoint(1);
        if (!e.equals(t)) {
            const n = e.isVector2 === !0 ? 'LineCurve' : 'LineCurve3';
            this.curves.push(new px[n](t, e));
        }
        return this;
    }
    getPoint(e, t) {
        const n = e * this.getLength(),
            i = this.getCurveLengths();
        let s = 0;
        for (; s < i.length; ) {
            if (i[s] >= n) {
                const o = i[s] - n,
                    a = this.curves[s],
                    l = a.getLength(),
                    u = l === 0 ? 0 : 1 - o / l;
                return a.getPointAt(u, t);
            }
            s++;
        }
        return null;
    }
    getLength() {
        const e = this.getCurveLengths();
        return e[e.length - 1];
    }
    updateArcLengths() {
        (this.needsUpdate = !0),
            (this.cacheLengths = null),
            this.getCurveLengths();
    }
    getCurveLengths() {
        if (
            this.cacheLengths &&
            this.cacheLengths.length === this.curves.length
        )
            return this.cacheLengths;
        const e = [];
        let t = 0;
        for (let n = 0, i = this.curves.length; n < i; n++)
            (t += this.curves[n].getLength()), e.push(t);
        return (this.cacheLengths = e), e;
    }
    getSpacedPoints(e = 40) {
        const t = [];
        for (let n = 0; n <= e; n++) t.push(this.getPoint(n / e));
        return this.autoClose && t.push(t[0]), t;
    }
    getPoints(e = 12) {
        const t = [];
        let n;
        for (let i = 0, s = this.curves; i < s.length; i++) {
            const o = s[i],
                a = o.isEllipseCurve
                    ? e * 2
                    : o.isLineCurve || o.isLineCurve3
                      ? 1
                      : o.isSplineCurve
                        ? e * o.points.length
                        : e,
                l = o.getPoints(a);
            for (let u = 0; u < l.length; u++) {
                const f = l[u];
                (n && n.equals(f)) || (t.push(f), (n = f));
            }
        }
        return (
            this.autoClose &&
                t.length > 1 &&
                !t[t.length - 1].equals(t[0]) &&
                t.push(t[0]),
            t
        );
    }
    copy(e) {
        super.copy(e), (this.curves = []);
        for (let t = 0, n = e.curves.length; t < n; t++) {
            const i = e.curves[t];
            this.curves.push(i.clone());
        }
        return (this.autoClose = e.autoClose), this;
    }
    toJSON() {
        const e = super.toJSON();
        (e.autoClose = this.autoClose), (e.curves = []);
        for (let t = 0, n = this.curves.length; t < n; t++) {
            const i = this.curves[t];
            e.curves.push(i.toJSON());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), (this.autoClose = e.autoClose), (this.curves = []);
        for (let t = 0, n = e.curves.length; t < n; t++) {
            const i = e.curves[t];
            this.curves.push(new px[i.type]().fromJSON(i));
        }
        return this;
    }
}
class E0 extends BO {
    constructor(e) {
        super(),
            (this.type = 'Path'),
            (this.currentPoint = new tt()),
            e && this.setFromPoints(e);
    }
    setFromPoints(e) {
        this.moveTo(e[0].x, e[0].y);
        for (let t = 1, n = e.length; t < n; t++) this.lineTo(e[t].x, e[t].y);
        return this;
    }
    moveTo(e, t) {
        return this.currentPoint.set(e, t), this;
    }
    lineTo(e, t) {
        const n = new BT(this.currentPoint.clone(), new tt(e, t));
        return this.curves.push(n), this.currentPoint.set(e, t), this;
    }
    quadraticCurveTo(e, t, n, i) {
        const s = new zT(this.currentPoint.clone(), new tt(e, t), new tt(n, i));
        return this.curves.push(s), this.currentPoint.set(n, i), this;
    }
    bezierCurveTo(e, t, n, i, s, o) {
        const a = new FT(
            this.currentPoint.clone(),
            new tt(e, t),
            new tt(n, i),
            new tt(s, o)
        );
        return this.curves.push(a), this.currentPoint.set(s, o), this;
    }
    splineThru(e) {
        const t = [this.currentPoint.clone()].concat(e),
            n = new HT(t);
        return (
            this.curves.push(n), this.currentPoint.copy(e[e.length - 1]), this
        );
    }
    arc(e, t, n, i, s, o) {
        const a = this.currentPoint.x,
            l = this.currentPoint.y;
        return this.absarc(e + a, t + l, n, i, s, o), this;
    }
    absarc(e, t, n, i, s, o) {
        return this.absellipse(e, t, n, n, i, s, o), this;
    }
    ellipse(e, t, n, i, s, o, a, l) {
        const u = this.currentPoint.x,
            f = this.currentPoint.y;
        return this.absellipse(e + u, t + f, n, i, s, o, a, l), this;
    }
    absellipse(e, t, n, i, s, o, a, l) {
        const u = new Jx(e, t, n, i, s, o, a, l);
        if (this.curves.length > 0) {
            const d = u.getPoint(0);
            d.equals(this.currentPoint) || this.lineTo(d.x, d.y);
        }
        this.curves.push(u);
        const f = u.getPoint(1);
        return this.currentPoint.copy(f), this;
    }
    copy(e) {
        return super.copy(e), this.currentPoint.copy(e.currentPoint), this;
    }
    toJSON() {
        const e = super.toJSON();
        return (e.currentPoint = this.currentPoint.toArray()), e;
    }
    fromJSON(e) {
        return (
            super.fromJSON(e), this.currentPoint.fromArray(e.currentPoint), this
        );
    }
}
class Z0 extends xn {
    constructor(
        e = [new tt(0, -0.5), new tt(0.5, 0), new tt(0, 0.5)],
        t = 12,
        n = 0,
        i = Math.PI * 2
    ) {
        super(),
            (this.type = 'LatheGeometry'),
            (this.parameters = {
                points: e,
                segments: t,
                phiStart: n,
                phiLength: i,
            }),
            (t = Math.floor(t)),
            (i = Vi(i, 0, Math.PI * 2));
        const s = [],
            o = [],
            a = [],
            l = [],
            u = [],
            f = 1 / t,
            d = new re(),
            m = new tt(),
            v = new re(),
            _ = new re(),
            S = new re();
        let w = 0,
            x = 0;
        for (let A = 0; A <= e.length - 1; A++)
            switch (A) {
                case 0:
                    (w = e[A + 1].x - e[A].x),
                        (x = e[A + 1].y - e[A].y),
                        (v.x = x * 1),
                        (v.y = -w),
                        (v.z = x * 0),
                        S.copy(v),
                        v.normalize(),
                        l.push(v.x, v.y, v.z);
                    break;
                case e.length - 1:
                    l.push(S.x, S.y, S.z);
                    break;
                default:
                    (w = e[A + 1].x - e[A].x),
                        (x = e[A + 1].y - e[A].y),
                        (v.x = x * 1),
                        (v.y = -w),
                        (v.z = x * 0),
                        _.copy(v),
                        (v.x += S.x),
                        (v.y += S.y),
                        (v.z += S.z),
                        v.normalize(),
                        l.push(v.x, v.y, v.z),
                        S.copy(_);
            }
        for (let A = 0; A <= t; A++) {
            const T = n + A * f * i,
                b = Math.sin(T),
                P = Math.cos(T);
            for (let L = 0; L <= e.length - 1; L++) {
                (d.x = e[L].x * b),
                    (d.y = e[L].y),
                    (d.z = e[L].x * P),
                    o.push(d.x, d.y, d.z),
                    (m.x = A / t),
                    (m.y = L / (e.length - 1)),
                    a.push(m.x, m.y);
                const D = l[3 * L + 0] * b,
                    O = l[3 * L + 1],
                    I = l[3 * L + 0] * P;
                u.push(D, O, I);
            }
        }
        for (let A = 0; A < t; A++)
            for (let T = 0; T < e.length - 1; T++) {
                const b = T + A * e.length,
                    P = b,
                    L = b + e.length,
                    D = b + e.length + 1,
                    O = b + 1;
                s.push(P, L, O), s.push(D, O, L);
            }
        this.setIndex(s),
            this.setAttribute('position', new Ht(o, 3)),
            this.setAttribute('uv', new Ht(a, 2)),
            this.setAttribute('normal', new Ht(u, 3));
    }
    copy(e) {
        return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
        );
    }
    static fromJSON(e) {
        return new Z0(e.points, e.segments, e.phiStart, e.phiLength);
    }
}
class Qx extends Z0 {
    constructor(e = 1, t = 1, n = 4, i = 8) {
        const s = new E0();
        s.absarc(0, -t / 2, e, Math.PI * 1.5, 0),
            s.absarc(0, t / 2, e, 0, Math.PI * 0.5),
            super(s.getPoints(n), i),
            (this.type = 'CapsuleGeometry'),
            (this.parameters = {
                radius: e,
                length: t,
                capSegments: n,
                radialSegments: i,
            });
    }
    static fromJSON(e) {
        return new Qx(e.radius, e.length, e.capSegments, e.radialSegments);
    }
}
class e1 extends xn {
    constructor(e = 1, t = 32, n = 0, i = Math.PI * 2) {
        super(),
            (this.type = 'CircleGeometry'),
            (this.parameters = {
                radius: e,
                segments: t,
                thetaStart: n,
                thetaLength: i,
            }),
            (t = Math.max(3, t));
        const s = [],
            o = [],
            a = [],
            l = [],
            u = new re(),
            f = new tt();
        o.push(0, 0, 0), a.push(0, 0, 1), l.push(0.5, 0.5);
        for (let d = 0, m = 3; d <= t; d++, m += 3) {
            const v = n + (d / t) * i;
            (u.x = e * Math.cos(v)),
                (u.y = e * Math.sin(v)),
                o.push(u.x, u.y, u.z),
                a.push(0, 0, 1),
                (f.x = (o[m] / e + 1) / 2),
                (f.y = (o[m + 1] / e + 1) / 2),
                l.push(f.x, f.y);
        }
        for (let d = 1; d <= t; d++) s.push(d, d + 1, 0);
        this.setIndex(s),
            this.setAttribute('position', new Ht(o, 3)),
            this.setAttribute('normal', new Ht(a, 3)),
            this.setAttribute('uv', new Ht(l, 2));
    }
    copy(e) {
        return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
        );
    }
    static fromJSON(e) {
        return new e1(e.radius, e.segments, e.thetaStart, e.thetaLength);
    }
}
class Xp extends xn {
    constructor(
        e = 1,
        t = 1,
        n = 1,
        i = 32,
        s = 1,
        o = !1,
        a = 0,
        l = Math.PI * 2
    ) {
        super(),
            (this.type = 'CylinderGeometry'),
            (this.parameters = {
                radiusTop: e,
                radiusBottom: t,
                height: n,
                radialSegments: i,
                heightSegments: s,
                openEnded: o,
                thetaStart: a,
                thetaLength: l,
            });
        const u = this;
        (i = Math.floor(i)), (s = Math.floor(s));
        const f = [],
            d = [],
            m = [],
            v = [];
        let _ = 0;
        const S = [],
            w = n / 2;
        let x = 0;
        A(),
            o === !1 && (e > 0 && T(!0), t > 0 && T(!1)),
            this.setIndex(f),
            this.setAttribute('position', new Ht(d, 3)),
            this.setAttribute('normal', new Ht(m, 3)),
            this.setAttribute('uv', new Ht(v, 2));
        function A() {
            const b = new re(),
                P = new re();
            let L = 0;
            const D = (t - e) / n;
            for (let O = 0; O <= s; O++) {
                const I = [],
                    U = O / s,
                    H = U * (t - e) + e;
                for (let W = 0; W <= i; W++) {
                    const q = W / i,
                        K = q * l + a,
                        le = Math.sin(K),
                        ee = Math.cos(K);
                    (P.x = H * le),
                        (P.y = -U * n + w),
                        (P.z = H * ee),
                        d.push(P.x, P.y, P.z),
                        b.set(le, D, ee).normalize(),
                        m.push(b.x, b.y, b.z),
                        v.push(q, 1 - U),
                        I.push(_++);
                }
                S.push(I);
            }
            for (let O = 0; O < i; O++)
                for (let I = 0; I < s; I++) {
                    const U = S[I][O],
                        H = S[I + 1][O],
                        W = S[I + 1][O + 1],
                        q = S[I][O + 1];
                    f.push(U, H, q), f.push(H, W, q), (L += 6);
                }
            u.addGroup(x, L, 0), (x += L);
        }
        function T(b) {
            const P = _,
                L = new tt(),
                D = new re();
            let O = 0;
            const I = b === !0 ? e : t,
                U = b === !0 ? 1 : -1;
            for (let W = 1; W <= i; W++)
                d.push(0, w * U, 0), m.push(0, U, 0), v.push(0.5, 0.5), _++;
            const H = _;
            for (let W = 0; W <= i; W++) {
                const K = (W / i) * l + a,
                    le = Math.cos(K),
                    ee = Math.sin(K);
                (D.x = I * ee),
                    (D.y = w * U),
                    (D.z = I * le),
                    d.push(D.x, D.y, D.z),
                    m.push(0, U, 0),
                    (L.x = le * 0.5 + 0.5),
                    (L.y = ee * 0.5 * U + 0.5),
                    v.push(L.x, L.y),
                    _++;
            }
            for (let W = 0; W < i; W++) {
                const q = P + W,
                    K = H + W;
                b === !0 ? f.push(K, K + 1, q) : f.push(K + 1, K, q), (O += 3);
            }
            u.addGroup(x, O, b === !0 ? 1 : 2), (x += O);
        }
    }
    copy(e) {
        return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
        );
    }
    static fromJSON(e) {
        return new Xp(
            e.radiusTop,
            e.radiusBottom,
            e.height,
            e.radialSegments,
            e.heightSegments,
            e.openEnded,
            e.thetaStart,
            e.thetaLength
        );
    }
}
class t1 extends Xp {
    constructor(e = 1, t = 1, n = 32, i = 1, s = !1, o = 0, a = Math.PI * 2) {
        super(0, e, t, n, i, s, o, a),
            (this.type = 'ConeGeometry'),
            (this.parameters = {
                radius: e,
                height: t,
                radialSegments: n,
                heightSegments: i,
                openEnded: s,
                thetaStart: o,
                thetaLength: a,
            });
    }
    static fromJSON(e) {
        return new t1(
            e.radius,
            e.height,
            e.radialSegments,
            e.heightSegments,
            e.openEnded,
            e.thetaStart,
            e.thetaLength
        );
    }
}
class Vc extends xn {
    constructor(e = [], t = [], n = 1, i = 0) {
        super(),
            (this.type = 'PolyhedronGeometry'),
            (this.parameters = {
                vertices: e,
                indices: t,
                radius: n,
                detail: i,
            });
        const s = [],
            o = [];
        a(i),
            u(n),
            f(),
            this.setAttribute('position', new Ht(s, 3)),
            this.setAttribute('normal', new Ht(s.slice(), 3)),
            this.setAttribute('uv', new Ht(o, 2)),
            i === 0 ? this.computeVertexNormals() : this.normalizeNormals();
        function a(A) {
            const T = new re(),
                b = new re(),
                P = new re();
            for (let L = 0; L < t.length; L += 3)
                v(t[L + 0], T), v(t[L + 1], b), v(t[L + 2], P), l(T, b, P, A);
        }
        function l(A, T, b, P) {
            const L = P + 1,
                D = [];
            for (let O = 0; O <= L; O++) {
                D[O] = [];
                const I = A.clone().lerp(b, O / L),
                    U = T.clone().lerp(b, O / L),
                    H = L - O;
                for (let W = 0; W <= H; W++)
                    W === 0 && O === L
                        ? (D[O][W] = I)
                        : (D[O][W] = I.clone().lerp(U, W / H));
            }
            for (let O = 0; O < L; O++)
                for (let I = 0; I < 2 * (L - O) - 1; I++) {
                    const U = Math.floor(I / 2);
                    I % 2 === 0
                        ? (m(D[O][U + 1]), m(D[O + 1][U]), m(D[O][U]))
                        : (m(D[O][U + 1]), m(D[O + 1][U + 1]), m(D[O + 1][U]));
                }
        }
        function u(A) {
            const T = new re();
            for (let b = 0; b < s.length; b += 3)
                (T.x = s[b + 0]),
                    (T.y = s[b + 1]),
                    (T.z = s[b + 2]),
                    T.normalize().multiplyScalar(A),
                    (s[b + 0] = T.x),
                    (s[b + 1] = T.y),
                    (s[b + 2] = T.z);
        }
        function f() {
            const A = new re();
            for (let T = 0; T < s.length; T += 3) {
                (A.x = s[T + 0]), (A.y = s[T + 1]), (A.z = s[T + 2]);
                const b = w(A) / 2 / Math.PI + 0.5,
                    P = x(A) / Math.PI + 0.5;
                o.push(b, 1 - P);
            }
            _(), d();
        }
        function d() {
            for (let A = 0; A < o.length; A += 6) {
                const T = o[A + 0],
                    b = o[A + 2],
                    P = o[A + 4],
                    L = Math.max(T, b, P),
                    D = Math.min(T, b, P);
                L > 0.9 &&
                    D < 0.1 &&
                    (T < 0.2 && (o[A + 0] += 1),
                    b < 0.2 && (o[A + 2] += 1),
                    P < 0.2 && (o[A + 4] += 1));
            }
        }
        function m(A) {
            s.push(A.x, A.y, A.z);
        }
        function v(A, T) {
            const b = A * 3;
            (T.x = e[b + 0]), (T.y = e[b + 1]), (T.z = e[b + 2]);
        }
        function _() {
            const A = new re(),
                T = new re(),
                b = new re(),
                P = new re(),
                L = new tt(),
                D = new tt(),
                O = new tt();
            for (let I = 0, U = 0; I < s.length; I += 9, U += 6) {
                A.set(s[I + 0], s[I + 1], s[I + 2]),
                    T.set(s[I + 3], s[I + 4], s[I + 5]),
                    b.set(s[I + 6], s[I + 7], s[I + 8]),
                    L.set(o[U + 0], o[U + 1]),
                    D.set(o[U + 2], o[U + 3]),
                    O.set(o[U + 4], o[U + 5]),
                    P.copy(A).add(T).add(b).divideScalar(3);
                const H = w(P);
                S(L, U + 0, A, H), S(D, U + 2, T, H), S(O, U + 4, b, H);
            }
        }
        function S(A, T, b, P) {
            P < 0 && A.x === 1 && (o[T] = A.x - 1),
                b.x === 0 && b.z === 0 && (o[T] = P / 2 / Math.PI + 0.5);
        }
        function w(A) {
            return Math.atan2(A.z, -A.x);
        }
        function x(A) {
            return Math.atan2(-A.y, Math.sqrt(A.x * A.x + A.z * A.z));
        }
    }
    copy(e) {
        return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
        );
    }
    static fromJSON(e) {
        return new Vc(e.vertices, e.indices, e.radius, e.details);
    }
}
class n1 extends Vc {
    constructor(e = 1, t = 0) {
        const n = (1 + Math.sqrt(5)) / 2,
            i = 1 / n,
            s = [
                -1,
                -1,
                -1,
                -1,
                -1,
                1,
                -1,
                1,
                -1,
                -1,
                1,
                1,
                1,
                -1,
                -1,
                1,
                -1,
                1,
                1,
                1,
                -1,
                1,
                1,
                1,
                0,
                -i,
                -n,
                0,
                -i,
                n,
                0,
                i,
                -n,
                0,
                i,
                n,
                -i,
                -n,
                0,
                -i,
                n,
                0,
                i,
                -n,
                0,
                i,
                n,
                0,
                -n,
                0,
                -i,
                n,
                0,
                -i,
                -n,
                0,
                i,
                n,
                0,
                i,
            ],
            o = [
                3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15,
                17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0,
                12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2,
                16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4,
                14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19,
                5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9,
            ];
        super(s, o, e, t),
            (this.type = 'DodecahedronGeometry'),
            (this.parameters = { radius: e, detail: t });
    }
    static fromJSON(e) {
        return new n1(e.radius, e.detail);
    }
}
const Fy = new re(),
    By = new re(),
    tw = new re(),
    zy = new Ao();
class zO extends xn {
    constructor(e = null, t = 1) {
        if (
            (super(),
            (this.type = 'EdgesGeometry'),
            (this.parameters = { geometry: e, thresholdAngle: t }),
            e !== null)
        ) {
            const i = Math.pow(10, 4),
                s = Math.cos(ch * t),
                o = e.getIndex(),
                a = e.getAttribute('position'),
                l = o ? o.count : a.count,
                u = [0, 0, 0],
                f = ['a', 'b', 'c'],
                d = new Array(3),
                m = {},
                v = [];
            for (let _ = 0; _ < l; _ += 3) {
                o
                    ? ((u[0] = o.getX(_)),
                      (u[1] = o.getX(_ + 1)),
                      (u[2] = o.getX(_ + 2)))
                    : ((u[0] = _), (u[1] = _ + 1), (u[2] = _ + 2));
                const { a: S, b: w, c: x } = zy;
                if (
                    (S.fromBufferAttribute(a, u[0]),
                    w.fromBufferAttribute(a, u[1]),
                    x.fromBufferAttribute(a, u[2]),
                    zy.getNormal(tw),
                    (d[0] = `${Math.round(S.x * i)},${Math.round(S.y * i)},${Math.round(S.z * i)}`),
                    (d[1] = `${Math.round(w.x * i)},${Math.round(w.y * i)},${Math.round(w.z * i)}`),
                    (d[2] = `${Math.round(x.x * i)},${Math.round(x.y * i)},${Math.round(x.z * i)}`),
                    !(d[0] === d[1] || d[1] === d[2] || d[2] === d[0]))
                )
                    for (let A = 0; A < 3; A++) {
                        const T = (A + 1) % 3,
                            b = d[A],
                            P = d[T],
                            L = zy[f[A]],
                            D = zy[f[T]],
                            O = `${b}_${P}`,
                            I = `${P}_${b}`;
                        I in m && m[I]
                            ? (tw.dot(m[I].normal) <= s &&
                                  (v.push(L.x, L.y, L.z),
                                  v.push(D.x, D.y, D.z)),
                              (m[I] = null))
                            : O in m ||
                              (m[O] = {
                                  index0: u[A],
                                  index1: u[T],
                                  normal: tw.clone(),
                              });
                    }
            }
            for (const _ in m)
                if (m[_]) {
                    const { index0: S, index1: w } = m[_];
                    Fy.fromBufferAttribute(a, S),
                        By.fromBufferAttribute(a, w),
                        v.push(Fy.x, Fy.y, Fy.z),
                        v.push(By.x, By.y, By.z);
                }
            this.setAttribute('position', new Ht(v, 3));
        }
    }
    copy(e) {
        return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
        );
    }
}
class Ac extends E0 {
    constructor(e) {
        super(e), (this.uuid = Ro()), (this.type = 'Shape'), (this.holes = []);
    }
    getPointsHoles(e) {
        const t = [];
        for (let n = 0, i = this.holes.length; n < i; n++)
            t[n] = this.holes[n].getPoints(e);
        return t;
    }
    extractPoints(e) {
        return { shape: this.getPoints(e), holes: this.getPointsHoles(e) };
    }
    copy(e) {
        super.copy(e), (this.holes = []);
        for (let t = 0, n = e.holes.length; t < n; t++) {
            const i = e.holes[t];
            this.holes.push(i.clone());
        }
        return this;
    }
    toJSON() {
        const e = super.toJSON();
        (e.uuid = this.uuid), (e.holes = []);
        for (let t = 0, n = this.holes.length; t < n; t++) {
            const i = this.holes[t];
            e.holes.push(i.toJSON());
        }
        return e;
    }
    fromJSON(e) {
        super.fromJSON(e), (this.uuid = e.uuid), (this.holes = []);
        for (let t = 0, n = e.holes.length; t < n; t++) {
            const i = e.holes[t];
            this.holes.push(new E0().fromJSON(i));
        }
        return this;
    }
}
const lX = {
    triangulate: function (r, e, t = 2) {
        const n = e && e.length,
            i = n ? e[0] * t : r.length;
        let s = VO(r, 0, i, t, !0);
        const o = [];
        if (!s || s.next === s.prev) return o;
        let a, l, u, f, d, m, v;
        if ((n && (s = dX(r, e, s, t)), r.length > 80 * t)) {
            (a = u = r[0]), (l = f = r[1]);
            for (let _ = t; _ < i; _ += t)
                (d = r[_]),
                    (m = r[_ + 1]),
                    d < a && (a = d),
                    m < l && (l = m),
                    d > u && (u = d),
                    m > f && (f = m);
            (v = Math.max(u - a, f - l)), (v = v !== 0 ? 32767 / v : 0);
        }
        return T0(s, o, t, a, l, v, 0), o;
    },
};
function VO(r, e, t, n, i) {
    let s, o;
    if (i === EX(r, e, t, n) > 0)
        for (s = e; s < t; s += n) o = q2(s, r[s], r[s + 1], o);
    else for (s = t - n; s >= e; s -= n) o = q2(s, r[s], r[s + 1], o);
    return o && i1(o, o.next) && (b0(o), (o = o.next)), o;
}
function yh(r, e) {
    if (!r) return r;
    e || (e = r);
    let t = r,
        n;
    do
        if (
            ((n = !1),
            !t.steiner && (i1(t, t.next) || Ii(t.prev, t, t.next) === 0))
        ) {
            if ((b0(t), (t = e = t.prev), t === t.next)) break;
            n = !0;
        } else t = t.next;
    while (n || t !== e);
    return e;
}
function T0(r, e, t, n, i, s, o) {
    if (!r) return;
    !o && s && yX(r, n, i, s);
    let a = r,
        l,
        u;
    for (; r.prev !== r.next; ) {
        if (((l = r.prev), (u = r.next), s ? cX(r, n, i, s) : uX(r))) {
            e.push((l.i / t) | 0),
                e.push((r.i / t) | 0),
                e.push((u.i / t) | 0),
                b0(r),
                (r = u.next),
                (a = u.next);
            continue;
        }
        if (((r = u), r === a)) {
            o
                ? o === 1
                    ? ((r = fX(yh(r), e, t)), T0(r, e, t, n, i, s, 2))
                    : o === 2 && hX(r, e, t, n, i, s)
                : T0(yh(r), e, t, n, i, s, 1);
            break;
        }
    }
}
function uX(r) {
    const e = r.prev,
        t = r,
        n = r.next;
    if (Ii(e, t, n) >= 0) return !1;
    const i = e.x,
        s = t.x,
        o = n.x,
        a = e.y,
        l = t.y,
        u = n.y,
        f = i < s ? (i < o ? i : o) : s < o ? s : o,
        d = a < l ? (a < u ? a : u) : l < u ? l : u,
        m = i > s ? (i > o ? i : o) : s > o ? s : o,
        v = a > l ? (a > u ? a : u) : l > u ? l : u;
    let _ = n.next;
    for (; _ !== e; ) {
        if (
            _.x >= f &&
            _.x <= m &&
            _.y >= d &&
            _.y <= v &&
            cp(i, a, s, l, o, u, _.x, _.y) &&
            Ii(_.prev, _, _.next) >= 0
        )
            return !1;
        _ = _.next;
    }
    return !0;
}
function cX(r, e, t, n) {
    const i = r.prev,
        s = r,
        o = r.next;
    if (Ii(i, s, o) >= 0) return !1;
    const a = i.x,
        l = s.x,
        u = o.x,
        f = i.y,
        d = s.y,
        m = o.y,
        v = a < l ? (a < u ? a : u) : l < u ? l : u,
        _ = f < d ? (f < m ? f : m) : d < m ? d : m,
        S = a > l ? (a > u ? a : u) : l > u ? l : u,
        w = f > d ? (f > m ? f : m) : d > m ? d : m,
        x = OM(v, _, e, t, n),
        A = OM(S, w, e, t, n);
    let T = r.prevZ,
        b = r.nextZ;
    for (; T && T.z >= x && b && b.z <= A; ) {
        if (
            (T.x >= v &&
                T.x <= S &&
                T.y >= _ &&
                T.y <= w &&
                T !== i &&
                T !== o &&
                cp(a, f, l, d, u, m, T.x, T.y) &&
                Ii(T.prev, T, T.next) >= 0) ||
            ((T = T.prevZ),
            b.x >= v &&
                b.x <= S &&
                b.y >= _ &&
                b.y <= w &&
                b !== i &&
                b !== o &&
                cp(a, f, l, d, u, m, b.x, b.y) &&
                Ii(b.prev, b, b.next) >= 0)
        )
            return !1;
        b = b.nextZ;
    }
    for (; T && T.z >= x; ) {
        if (
            T.x >= v &&
            T.x <= S &&
            T.y >= _ &&
            T.y <= w &&
            T !== i &&
            T !== o &&
            cp(a, f, l, d, u, m, T.x, T.y) &&
            Ii(T.prev, T, T.next) >= 0
        )
            return !1;
        T = T.prevZ;
    }
    for (; b && b.z <= A; ) {
        if (
            b.x >= v &&
            b.x <= S &&
            b.y >= _ &&
            b.y <= w &&
            b !== i &&
            b !== o &&
            cp(a, f, l, d, u, m, b.x, b.y) &&
            Ii(b.prev, b, b.next) >= 0
        )
            return !1;
        b = b.nextZ;
    }
    return !0;
}
function fX(r, e, t) {
    let n = r;
    do {
        const i = n.prev,
            s = n.next.next;
        !i1(i, s) &&
            HO(i, n, n.next, s) &&
            A0(i, s) &&
            A0(s, i) &&
            (e.push((i.i / t) | 0),
            e.push((n.i / t) | 0),
            e.push((s.i / t) | 0),
            b0(n),
            b0(n.next),
            (n = r = s)),
            (n = n.next);
    } while (n !== r);
    return yh(n);
}
function hX(r, e, t, n, i, s) {
    let o = r;
    do {
        let a = o.next.next;
        for (; a !== o.prev; ) {
            if (o.i !== a.i && SX(o, a)) {
                let l = GO(o, a);
                (o = yh(o, o.next)),
                    (l = yh(l, l.next)),
                    T0(o, e, t, n, i, s, 0),
                    T0(l, e, t, n, i, s, 0);
                return;
            }
            a = a.next;
        }
        o = o.next;
    } while (o !== r);
}
function dX(r, e, t, n) {
    const i = [];
    let s, o, a, l, u;
    for (s = 0, o = e.length; s < o; s++)
        (a = e[s] * n),
            (l = s < o - 1 ? e[s + 1] * n : r.length),
            (u = VO(r, a, l, n, !1)),
            u === u.next && (u.steiner = !0),
            i.push(xX(u));
    for (i.sort(pX), s = 0; s < i.length; s++) t = mX(i[s], t);
    return t;
}
function pX(r, e) {
    return r.x - e.x;
}
function mX(r, e) {
    const t = gX(r, e);
    if (!t) return e;
    const n = GO(t, r);
    return yh(n, n.next), yh(t, t.next);
}
function gX(r, e) {
    let t = e,
        n = -1 / 0,
        i;
    const s = r.x,
        o = r.y;
    do {
        if (o <= t.y && o >= t.next.y && t.next.y !== t.y) {
            const m = t.x + ((o - t.y) * (t.next.x - t.x)) / (t.next.y - t.y);
            if (
                m <= s &&
                m > n &&
                ((n = m), (i = t.x < t.next.x ? t : t.next), m === s)
            )
                return i;
        }
        t = t.next;
    } while (t !== e);
    if (!i) return null;
    const a = i,
        l = i.x,
        u = i.y;
    let f = 1 / 0,
        d;
    t = i;
    do
        s >= t.x &&
            t.x >= l &&
            s !== t.x &&
            cp(o < u ? s : n, o, l, u, o < u ? n : s, o, t.x, t.y) &&
            ((d = Math.abs(o - t.y) / (s - t.x)),
            A0(t, r) &&
                (d < f ||
                    (d === f && (t.x > i.x || (t.x === i.x && vX(i, t))))) &&
                ((i = t), (f = d))),
            (t = t.next);
    while (t !== a);
    return i;
}
function vX(r, e) {
    return Ii(r.prev, r, e.prev) < 0 && Ii(e.next, r, r.next) < 0;
}
function yX(r, e, t, n) {
    let i = r;
    do
        i.z === 0 && (i.z = OM(i.x, i.y, e, t, n)),
            (i.prevZ = i.prev),
            (i.nextZ = i.next),
            (i = i.next);
    while (i !== r);
    (i.prevZ.nextZ = null), (i.prevZ = null), _X(i);
}
function _X(r) {
    let e,
        t,
        n,
        i,
        s,
        o,
        a,
        l,
        u = 1;
    do {
        for (t = r, r = null, s = null, o = 0; t; ) {
            for (
                o++, n = t, a = 0, e = 0;
                e < u && (a++, (n = n.nextZ), !!n);
                e++
            );
            for (l = u; a > 0 || (l > 0 && n); )
                a !== 0 && (l === 0 || !n || t.z <= n.z)
                    ? ((i = t), (t = t.nextZ), a--)
                    : ((i = n), (n = n.nextZ), l--),
                    s ? (s.nextZ = i) : (r = i),
                    (i.prevZ = s),
                    (s = i);
            t = n;
        }
        (s.nextZ = null), (u *= 2);
    } while (o > 1);
    return r;
}
function OM(r, e, t, n, i) {
    return (
        (r = ((r - t) * i) | 0),
        (e = ((e - n) * i) | 0),
        (r = (r | (r << 8)) & 16711935),
        (r = (r | (r << 4)) & 252645135),
        (r = (r | (r << 2)) & 858993459),
        (r = (r | (r << 1)) & 1431655765),
        (e = (e | (e << 8)) & 16711935),
        (e = (e | (e << 4)) & 252645135),
        (e = (e | (e << 2)) & 858993459),
        (e = (e | (e << 1)) & 1431655765),
        r | (e << 1)
    );
}
function xX(r) {
    let e = r,
        t = r;
    do (e.x < t.x || (e.x === t.x && e.y < t.y)) && (t = e), (e = e.next);
    while (e !== r);
    return t;
}
function cp(r, e, t, n, i, s, o, a) {
    return (
        (i - o) * (e - a) >= (r - o) * (s - a) &&
        (r - o) * (n - a) >= (t - o) * (e - a) &&
        (t - o) * (s - a) >= (i - o) * (n - a)
    );
}
function SX(r, e) {
    return (
        r.next.i !== e.i &&
        r.prev.i !== e.i &&
        !wX(r, e) &&
        ((A0(r, e) &&
            A0(e, r) &&
            MX(r, e) &&
            (Ii(r.prev, r, e.prev) || Ii(r, e.prev, e))) ||
            (i1(r, e) &&
                Ii(r.prev, r, r.next) > 0 &&
                Ii(e.prev, e, e.next) > 0))
    );
}
function Ii(r, e, t) {
    return (e.y - r.y) * (t.x - e.x) - (e.x - r.x) * (t.y - e.y);
}
function i1(r, e) {
    return r.x === e.x && r.y === e.y;
}
function HO(r, e, t, n) {
    const i = Hy(Ii(r, e, t)),
        s = Hy(Ii(r, e, n)),
        o = Hy(Ii(t, n, r)),
        a = Hy(Ii(t, n, e));
    return !!(
        (i !== s && o !== a) ||
        (i === 0 && Vy(r, t, e)) ||
        (s === 0 && Vy(r, n, e)) ||
        (o === 0 && Vy(t, r, n)) ||
        (a === 0 && Vy(t, e, n))
    );
}
function Vy(r, e, t) {
    return (
        e.x <= Math.max(r.x, t.x) &&
        e.x >= Math.min(r.x, t.x) &&
        e.y <= Math.max(r.y, t.y) &&
        e.y >= Math.min(r.y, t.y)
    );
}
function Hy(r) {
    return r > 0 ? 1 : r < 0 ? -1 : 0;
}
function wX(r, e) {
    let t = r;
    do {
        if (
            t.i !== r.i &&
            t.next.i !== r.i &&
            t.i !== e.i &&
            t.next.i !== e.i &&
            HO(t, t.next, r, e)
        )
            return !0;
        t = t.next;
    } while (t !== r);
    return !1;
}
function A0(r, e) {
    return Ii(r.prev, r, r.next) < 0
        ? Ii(r, e, r.next) >= 0 && Ii(r, r.prev, e) >= 0
        : Ii(r, e, r.prev) < 0 || Ii(r, r.next, e) < 0;
}
function MX(r, e) {
    let t = r,
        n = !1;
    const i = (r.x + e.x) / 2,
        s = (r.y + e.y) / 2;
    do
        t.y > s != t.next.y > s &&
            t.next.y !== t.y &&
            i < ((t.next.x - t.x) * (s - t.y)) / (t.next.y - t.y) + t.x &&
            (n = !n),
            (t = t.next);
    while (t !== r);
    return n;
}
function GO(r, e) {
    const t = new UM(r.i, r.x, r.y),
        n = new UM(e.i, e.x, e.y),
        i = r.next,
        s = e.prev;
    return (
        (r.next = e),
        (e.prev = r),
        (t.next = i),
        (i.prev = t),
        (n.next = t),
        (t.prev = n),
        (s.next = n),
        (n.prev = s),
        n
    );
}
function q2(r, e, t, n) {
    const i = new UM(r, e, t);
    return (
        n
            ? ((i.next = n.next), (i.prev = n), (n.next.prev = i), (n.next = i))
            : ((i.prev = i), (i.next = i)),
        i
    );
}
function b0(r) {
    (r.next.prev = r.prev),
        (r.prev.next = r.next),
        r.prevZ && (r.prevZ.nextZ = r.nextZ),
        r.nextZ && (r.nextZ.prevZ = r.prevZ);
}
function UM(r, e, t) {
    (this.i = r),
        (this.x = e),
        (this.y = t),
        (this.prev = null),
        (this.next = null),
        (this.z = 0),
        (this.prevZ = null),
        (this.nextZ = null),
        (this.steiner = !1);
}
function EX(r, e, t, n) {
    let i = 0;
    for (let s = e, o = t - n; s < t; s += n)
        (i += (r[o] - r[s]) * (r[s + 1] + r[o + 1])), (o = s);
    return i;
}
class Cl {
    static area(e) {
        const t = e.length;
        let n = 0;
        for (let i = t - 1, s = 0; s < t; i = s++)
            n += e[i].x * e[s].y - e[s].x * e[i].y;
        return n * 0.5;
    }
    static isClockWise(e) {
        return Cl.area(e) < 0;
    }
    static triangulateShape(e, t) {
        const n = [],
            i = [],
            s = [];
        K2(e), Z2(n, e);
        let o = e.length;
        t.forEach(K2);
        for (let l = 0; l < t.length; l++)
            i.push(o), (o += t[l].length), Z2(n, t[l]);
        const a = lX.triangulate(n, i);
        for (let l = 0; l < a.length; l += 3) s.push(a.slice(l, l + 3));
        return s;
    }
}
function K2(r) {
    const e = r.length;
    e > 2 && r[e - 1].equals(r[0]) && r.pop();
}
function Z2(r, e) {
    for (let t = 0; t < e.length; t++) r.push(e[t].x), r.push(e[t].y);
}
class r1 extends xn {
    constructor(
        e = new Ac([
            new tt(0.5, 0.5),
            new tt(-0.5, 0.5),
            new tt(-0.5, -0.5),
            new tt(0.5, -0.5),
        ]),
        t = {}
    ) {
        super(),
            (this.type = 'ExtrudeGeometry'),
            (this.parameters = { shapes: e, options: t }),
            (e = Array.isArray(e) ? e : [e]);
        const n = this,
            i = [],
            s = [];
        for (let a = 0, l = e.length; a < l; a++) {
            const u = e[a];
            o(u);
        }
        this.setAttribute('position', new Ht(i, 3)),
            this.setAttribute('uv', new Ht(s, 2)),
            this.computeVertexNormals();
        function o(a) {
            const l = [],
                u = t.curveSegments !== void 0 ? t.curveSegments : 12,
                f = t.steps !== void 0 ? t.steps : 1,
                d = t.depth !== void 0 ? t.depth : 1;
            let m = t.bevelEnabled !== void 0 ? t.bevelEnabled : !0,
                v = t.bevelThickness !== void 0 ? t.bevelThickness : 0.2,
                _ = t.bevelSize !== void 0 ? t.bevelSize : v - 0.1,
                S = t.bevelOffset !== void 0 ? t.bevelOffset : 0,
                w = t.bevelSegments !== void 0 ? t.bevelSegments : 3;
            const x = t.extrudePath,
                A = t.UVGenerator !== void 0 ? t.UVGenerator : TX;
            let T,
                b = !1,
                P,
                L,
                D,
                O;
            x &&
                ((T = x.getSpacedPoints(f)),
                (b = !0),
                (m = !1),
                (P = x.computeFrenetFrames(f, !1)),
                (L = new re()),
                (D = new re()),
                (O = new re())),
                m || ((w = 0), (v = 0), (_ = 0), (S = 0));
            const I = a.extractPoints(u);
            let U = I.shape;
            const H = I.holes;
            if (!Cl.isClockWise(U)) {
                U = U.reverse();
                for (let X = 0, He = H.length; X < He; X++) {
                    const Fe = H[X];
                    Cl.isClockWise(Fe) && (H[X] = Fe.reverse());
                }
            }
            const q = Cl.triangulateShape(U, H),
                K = U;
            for (let X = 0, He = H.length; X < He; X++) {
                const Fe = H[X];
                U = U.concat(Fe);
            }
            function le(X, He, Fe) {
                return (
                    He ||
                        console.error(
                            'THREE.ExtrudeGeometry: vec does not exist'
                        ),
                    X.clone().addScaledVector(He, Fe)
                );
            }
            const ee = U.length,
                de = q.length;
            function Z(X, He, Fe) {
                let We, Re, st;
                const De = X.x - He.x,
                    Je = X.y - He.y,
                    te = Fe.x - X.x,
                    V = Fe.y - X.y,
                    Me = De * De + Je * Je,
                    Le = De * V - Je * te;
                if (Math.abs(Le) > Number.EPSILON) {
                    const Ie = Math.sqrt(Me),
                        Ce = Math.sqrt(te * te + V * V),
                        gt = He.x - Je / Ie,
                        Xe = He.y + De / Ie,
                        Ze = Fe.x - V / Ce,
                        at = Fe.y + te / Ce,
                        Ye =
                            ((Ze - gt) * V - (at - Xe) * te) /
                            (De * V - Je * te);
                    (We = gt + De * Ye - X.x), (Re = Xe + Je * Ye - X.y);
                    const ot = We * We + Re * Re;
                    if (ot <= 2) return new tt(We, Re);
                    st = Math.sqrt(ot / 2);
                } else {
                    let Ie = !1;
                    De > Number.EPSILON
                        ? te > Number.EPSILON && (Ie = !0)
                        : De < -Number.EPSILON
                          ? te < -Number.EPSILON && (Ie = !0)
                          : Math.sign(Je) === Math.sign(V) && (Ie = !0),
                        Ie
                            ? ((We = -Je), (Re = De), (st = Math.sqrt(Me)))
                            : ((We = De), (Re = Je), (st = Math.sqrt(Me / 2)));
                }
                return new tt(We / st, Re / st);
            }
            const se = [];
            for (
                let X = 0, He = K.length, Fe = He - 1, We = X + 1;
                X < He;
                X++, Fe++, We++
            )
                Fe === He && (Fe = 0),
                    We === He && (We = 0),
                    (se[X] = Z(K[X], K[Fe], K[We]));
            const J = [];
            let F,
                $ = se.concat();
            for (let X = 0, He = H.length; X < He; X++) {
                const Fe = H[X];
                F = [];
                for (
                    let We = 0, Re = Fe.length, st = Re - 1, De = We + 1;
                    We < Re;
                    We++, st++, De++
                )
                    st === Re && (st = 0),
                        De === Re && (De = 0),
                        (F[We] = Z(Fe[We], Fe[st], Fe[De]));
                J.push(F), ($ = $.concat(F));
            }
            for (let X = 0; X < w; X++) {
                const He = X / w,
                    Fe = v * Math.cos((He * Math.PI) / 2),
                    We = _ * Math.sin((He * Math.PI) / 2) + S;
                for (let Re = 0, st = K.length; Re < st; Re++) {
                    const De = le(K[Re], se[Re], We);
                    ge(De.x, De.y, -Fe);
                }
                for (let Re = 0, st = H.length; Re < st; Re++) {
                    const De = H[Re];
                    F = J[Re];
                    for (let Je = 0, te = De.length; Je < te; Je++) {
                        const V = le(De[Je], F[Je], We);
                        ge(V.x, V.y, -Fe);
                    }
                }
            }
            const fe = _ + S;
            for (let X = 0; X < ee; X++) {
                const He = m ? le(U[X], $[X], fe) : U[X];
                b
                    ? (D.copy(P.normals[0]).multiplyScalar(He.x),
                      L.copy(P.binormals[0]).multiplyScalar(He.y),
                      O.copy(T[0]).add(D).add(L),
                      ge(O.x, O.y, O.z))
                    : ge(He.x, He.y, 0);
            }
            for (let X = 1; X <= f; X++)
                for (let He = 0; He < ee; He++) {
                    const Fe = m ? le(U[He], $[He], fe) : U[He];
                    b
                        ? (D.copy(P.normals[X]).multiplyScalar(Fe.x),
                          L.copy(P.binormals[X]).multiplyScalar(Fe.y),
                          O.copy(T[X]).add(D).add(L),
                          ge(O.x, O.y, O.z))
                        : ge(Fe.x, Fe.y, (d / f) * X);
                }
            for (let X = w - 1; X >= 0; X--) {
                const He = X / w,
                    Fe = v * Math.cos((He * Math.PI) / 2),
                    We = _ * Math.sin((He * Math.PI) / 2) + S;
                for (let Re = 0, st = K.length; Re < st; Re++) {
                    const De = le(K[Re], se[Re], We);
                    ge(De.x, De.y, d + Fe);
                }
                for (let Re = 0, st = H.length; Re < st; Re++) {
                    const De = H[Re];
                    F = J[Re];
                    for (let Je = 0, te = De.length; Je < te; Je++) {
                        const V = le(De[Je], F[Je], We);
                        b
                            ? ge(V.x, V.y + T[f - 1].y, T[f - 1].x + Fe)
                            : ge(V.x, V.y, d + Fe);
                    }
                }
            }
            ne(), ae();
            function ne() {
                const X = i.length / 3;
                if (m) {
                    let He = 0,
                        Fe = ee * He;
                    for (let We = 0; We < de; We++) {
                        const Re = q[We];
                        Ae(Re[2] + Fe, Re[1] + Fe, Re[0] + Fe);
                    }
                    (He = f + w * 2), (Fe = ee * He);
                    for (let We = 0; We < de; We++) {
                        const Re = q[We];
                        Ae(Re[0] + Fe, Re[1] + Fe, Re[2] + Fe);
                    }
                } else {
                    for (let He = 0; He < de; He++) {
                        const Fe = q[He];
                        Ae(Fe[2], Fe[1], Fe[0]);
                    }
                    for (let He = 0; He < de; He++) {
                        const Fe = q[He];
                        Ae(Fe[0] + ee * f, Fe[1] + ee * f, Fe[2] + ee * f);
                    }
                }
                n.addGroup(X, i.length / 3 - X, 0);
            }
            function ae() {
                const X = i.length / 3;
                let He = 0;
                me(K, He), (He += K.length);
                for (let Fe = 0, We = H.length; Fe < We; Fe++) {
                    const Re = H[Fe];
                    me(Re, He), (He += Re.length);
                }
                n.addGroup(X, i.length / 3 - X, 1);
            }
            function me(X, He) {
                let Fe = X.length;
                for (; --Fe >= 0; ) {
                    const We = Fe;
                    let Re = Fe - 1;
                    Re < 0 && (Re = X.length - 1);
                    for (let st = 0, De = f + w * 2; st < De; st++) {
                        const Je = ee * st,
                            te = ee * (st + 1),
                            V = He + We + Je,
                            Me = He + Re + Je,
                            Le = He + Re + te,
                            Ie = He + We + te;
                        je(V, Me, Le, Ie);
                    }
                }
            }
            function ge(X, He, Fe) {
                l.push(X), l.push(He), l.push(Fe);
            }
            function Ae(X, He, Fe) {
                Qe(X), Qe(He), Qe(Fe);
                const We = i.length / 3,
                    Re = A.generateTopUV(n, i, We - 3, We - 2, We - 1);
                Ke(Re[0]), Ke(Re[1]), Ke(Re[2]);
            }
            function je(X, He, Fe, We) {
                Qe(X), Qe(He), Qe(We), Qe(He), Qe(Fe), Qe(We);
                const Re = i.length / 3,
                    st = A.generateSideWallUV(
                        n,
                        i,
                        Re - 6,
                        Re - 3,
                        Re - 2,
                        Re - 1
                    );
                Ke(st[0]),
                    Ke(st[1]),
                    Ke(st[3]),
                    Ke(st[1]),
                    Ke(st[2]),
                    Ke(st[3]);
            }
            function Qe(X) {
                i.push(l[X * 3 + 0]),
                    i.push(l[X * 3 + 1]),
                    i.push(l[X * 3 + 2]);
            }
            function Ke(X) {
                s.push(X.x), s.push(X.y);
            }
        }
    }
    copy(e) {
        return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
        );
    }
    toJSON() {
        const e = super.toJSON(),
            t = this.parameters.shapes,
            n = this.parameters.options;
        return AX(t, n, e);
    }
    static fromJSON(e, t) {
        const n = [];
        for (let s = 0, o = e.shapes.length; s < o; s++) {
            const a = t[e.shapes[s]];
            n.push(a);
        }
        const i = e.options.extrudePath;
        return (
            i !== void 0 &&
                (e.options.extrudePath = new px[i.type]().fromJSON(i)),
            new r1(n, e.options)
        );
    }
}
const TX = {
    generateTopUV: function (r, e, t, n, i) {
        const s = e[t * 3],
            o = e[t * 3 + 1],
            a = e[n * 3],
            l = e[n * 3 + 1],
            u = e[i * 3],
            f = e[i * 3 + 1];
        return [new tt(s, o), new tt(a, l), new tt(u, f)];
    },
    generateSideWallUV: function (r, e, t, n, i, s) {
        const o = e[t * 3],
            a = e[t * 3 + 1],
            l = e[t * 3 + 2],
            u = e[n * 3],
            f = e[n * 3 + 1],
            d = e[n * 3 + 2],
            m = e[i * 3],
            v = e[i * 3 + 1],
            _ = e[i * 3 + 2],
            S = e[s * 3],
            w = e[s * 3 + 1],
            x = e[s * 3 + 2];
        return Math.abs(a - f) < Math.abs(o - u)
            ? [
                  new tt(o, 1 - l),
                  new tt(u, 1 - d),
                  new tt(m, 1 - _),
                  new tt(S, 1 - x),
              ]
            : [
                  new tt(a, 1 - l),
                  new tt(f, 1 - d),
                  new tt(v, 1 - _),
                  new tt(w, 1 - x),
              ];
    },
};
function AX(r, e, t) {
    if (((t.shapes = []), Array.isArray(r)))
        for (let n = 0, i = r.length; n < i; n++) {
            const s = r[n];
            t.shapes.push(s.uuid);
        }
    else t.shapes.push(r.uuid);
    return (
        (t.options = Object.assign({}, e)),
        e.extrudePath !== void 0 &&
            (t.options.extrudePath = e.extrudePath.toJSON()),
        t
    );
}
class $0 extends Vc {
    constructor(e = 1, t = 0) {
        const n = (1 + Math.sqrt(5)) / 2,
            i = [
                -1,
                n,
                0,
                1,
                n,
                0,
                -1,
                -n,
                0,
                1,
                -n,
                0,
                0,
                -1,
                n,
                0,
                1,
                n,
                0,
                -1,
                -n,
                0,
                1,
                -n,
                n,
                0,
                -1,
                n,
                0,
                1,
                -n,
                0,
                -1,
                -n,
                0,
                1,
            ],
            s = [
                0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11,
                4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3,
                6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1,
            ];
        super(i, s, e, t),
            (this.type = 'IcosahedronGeometry'),
            (this.parameters = { radius: e, detail: t });
    }
    static fromJSON(e) {
        return new $0(e.radius, e.detail);
    }
}
class J0 extends Vc {
    constructor(e = 1, t = 0) {
        const n = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1],
            i = [
                0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4,
                1, 4, 2,
            ];
        super(n, i, e, t),
            (this.type = 'OctahedronGeometry'),
            (this.parameters = { radius: e, detail: t });
    }
    static fromJSON(e) {
        return new J0(e.radius, e.detail);
    }
}
class s1 extends xn {
    constructor(e = 0.5, t = 1, n = 32, i = 1, s = 0, o = Math.PI * 2) {
        super(),
            (this.type = 'RingGeometry'),
            (this.parameters = {
                innerRadius: e,
                outerRadius: t,
                thetaSegments: n,
                phiSegments: i,
                thetaStart: s,
                thetaLength: o,
            }),
            (n = Math.max(3, n)),
            (i = Math.max(1, i));
        const a = [],
            l = [],
            u = [],
            f = [];
        let d = e;
        const m = (t - e) / i,
            v = new re(),
            _ = new tt();
        for (let S = 0; S <= i; S++) {
            for (let w = 0; w <= n; w++) {
                const x = s + (w / n) * o;
                (v.x = d * Math.cos(x)),
                    (v.y = d * Math.sin(x)),
                    l.push(v.x, v.y, v.z),
                    u.push(0, 0, 1),
                    (_.x = (v.x / t + 1) / 2),
                    (_.y = (v.y / t + 1) / 2),
                    f.push(_.x, _.y);
            }
            d += m;
        }
        for (let S = 0; S < i; S++) {
            const w = S * (n + 1);
            for (let x = 0; x < n; x++) {
                const A = x + w,
                    T = A,
                    b = A + n + 1,
                    P = A + n + 2,
                    L = A + 1;
                a.push(T, b, L), a.push(b, P, L);
            }
        }
        this.setIndex(a),
            this.setAttribute('position', new Ht(l, 3)),
            this.setAttribute('normal', new Ht(u, 3)),
            this.setAttribute('uv', new Ht(f, 2));
    }
    copy(e) {
        return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
        );
    }
    static fromJSON(e) {
        return new s1(
            e.innerRadius,
            e.outerRadius,
            e.thetaSegments,
            e.phiSegments,
            e.thetaStart,
            e.thetaLength
        );
    }
}
class o1 extends xn {
    constructor(
        e = new Ac([new tt(0, 0.5), new tt(-0.5, -0.5), new tt(0.5, -0.5)]),
        t = 12
    ) {
        super(),
            (this.type = 'ShapeGeometry'),
            (this.parameters = { shapes: e, curveSegments: t });
        const n = [],
            i = [],
            s = [],
            o = [];
        let a = 0,
            l = 0;
        if (Array.isArray(e) === !1) u(e);
        else
            for (let f = 0; f < e.length; f++)
                u(e[f]), this.addGroup(a, l, f), (a += l), (l = 0);
        this.setIndex(n),
            this.setAttribute('position', new Ht(i, 3)),
            this.setAttribute('normal', new Ht(s, 3)),
            this.setAttribute('uv', new Ht(o, 2));
        function u(f) {
            const d = i.length / 3,
                m = f.extractPoints(t);
            let v = m.shape;
            const _ = m.holes;
            Cl.isClockWise(v) === !1 && (v = v.reverse());
            for (let w = 0, x = _.length; w < x; w++) {
                const A = _[w];
                Cl.isClockWise(A) === !0 && (_[w] = A.reverse());
            }
            const S = Cl.triangulateShape(v, _);
            for (let w = 0, x = _.length; w < x; w++) {
                const A = _[w];
                v = v.concat(A);
            }
            for (let w = 0, x = v.length; w < x; w++) {
                const A = v[w];
                i.push(A.x, A.y, 0), s.push(0, 0, 1), o.push(A.x, A.y);
            }
            for (let w = 0, x = S.length; w < x; w++) {
                const A = S[w],
                    T = A[0] + d,
                    b = A[1] + d,
                    P = A[2] + d;
                n.push(T, b, P), (l += 3);
            }
        }
    }
    copy(e) {
        return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
        );
    }
    toJSON() {
        const e = super.toJSON(),
            t = this.parameters.shapes;
        return bX(t, e);
    }
    static fromJSON(e, t) {
        const n = [];
        for (let i = 0, s = e.shapes.length; i < s; i++) {
            const o = t[e.shapes[i]];
            n.push(o);
        }
        return new o1(n, e.curveSegments);
    }
}
function bX(r, e) {
    if (((e.shapes = []), Array.isArray(r)))
        for (let t = 0, n = r.length; t < n; t++) {
            const i = r[t];
            e.shapes.push(i.uuid);
        }
    else e.shapes.push(r.uuid);
    return e;
}
class Q0 extends xn {
    constructor(
        e = 1,
        t = 32,
        n = 16,
        i = 0,
        s = Math.PI * 2,
        o = 0,
        a = Math.PI
    ) {
        super(),
            (this.type = 'SphereGeometry'),
            (this.parameters = {
                radius: e,
                widthSegments: t,
                heightSegments: n,
                phiStart: i,
                phiLength: s,
                thetaStart: o,
                thetaLength: a,
            }),
            (t = Math.max(3, Math.floor(t))),
            (n = Math.max(2, Math.floor(n)));
        const l = Math.min(o + a, Math.PI);
        let u = 0;
        const f = [],
            d = new re(),
            m = new re(),
            v = [],
            _ = [],
            S = [],
            w = [];
        for (let x = 0; x <= n; x++) {
            const A = [],
                T = x / n;
            let b = 0;
            x === 0 && o === 0
                ? (b = 0.5 / t)
                : x === n && l === Math.PI && (b = -0.5 / t);
            for (let P = 0; P <= t; P++) {
                const L = P / t;
                (d.x = -e * Math.cos(i + L * s) * Math.sin(o + T * a)),
                    (d.y = e * Math.cos(o + T * a)),
                    (d.z = e * Math.sin(i + L * s) * Math.sin(o + T * a)),
                    _.push(d.x, d.y, d.z),
                    m.copy(d).normalize(),
                    S.push(m.x, m.y, m.z),
                    w.push(L + b, 1 - T),
                    A.push(u++);
            }
            f.push(A);
        }
        for (let x = 0; x < n; x++)
            for (let A = 0; A < t; A++) {
                const T = f[x][A + 1],
                    b = f[x][A],
                    P = f[x + 1][A],
                    L = f[x + 1][A + 1];
                (x !== 0 || o > 0) && v.push(T, b, L),
                    (x !== n - 1 || l < Math.PI) && v.push(b, P, L);
            }
        this.setIndex(v),
            this.setAttribute('position', new Ht(_, 3)),
            this.setAttribute('normal', new Ht(S, 3)),
            this.setAttribute('uv', new Ht(w, 2));
    }
    copy(e) {
        return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
        );
    }
    static fromJSON(e) {
        return new Q0(
            e.radius,
            e.widthSegments,
            e.heightSegments,
            e.phiStart,
            e.phiLength,
            e.thetaStart,
            e.thetaLength
        );
    }
}
class a1 extends Vc {
    constructor(e = 1, t = 0) {
        const n = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1],
            i = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];
        super(n, i, e, t),
            (this.type = 'TetrahedronGeometry'),
            (this.parameters = { radius: e, detail: t });
    }
    static fromJSON(e) {
        return new a1(e.radius, e.detail);
    }
}
class l1 extends xn {
    constructor(e = 1, t = 0.4, n = 12, i = 48, s = Math.PI * 2) {
        super(),
            (this.type = 'TorusGeometry'),
            (this.parameters = {
                radius: e,
                tube: t,
                radialSegments: n,
                tubularSegments: i,
                arc: s,
            }),
            (n = Math.floor(n)),
            (i = Math.floor(i));
        const o = [],
            a = [],
            l = [],
            u = [],
            f = new re(),
            d = new re(),
            m = new re();
        for (let v = 0; v <= n; v++)
            for (let _ = 0; _ <= i; _++) {
                const S = (_ / i) * s,
                    w = (v / n) * Math.PI * 2;
                (d.x = (e + t * Math.cos(w)) * Math.cos(S)),
                    (d.y = (e + t * Math.cos(w)) * Math.sin(S)),
                    (d.z = t * Math.sin(w)),
                    a.push(d.x, d.y, d.z),
                    (f.x = e * Math.cos(S)),
                    (f.y = e * Math.sin(S)),
                    m.subVectors(d, f).normalize(),
                    l.push(m.x, m.y, m.z),
                    u.push(_ / i),
                    u.push(v / n);
            }
        for (let v = 1; v <= n; v++)
            for (let _ = 1; _ <= i; _++) {
                const S = (i + 1) * v + _ - 1,
                    w = (i + 1) * (v - 1) + _ - 1,
                    x = (i + 1) * (v - 1) + _,
                    A = (i + 1) * v + _;
                o.push(S, w, A), o.push(w, x, A);
            }
        this.setIndex(o),
            this.setAttribute('position', new Ht(a, 3)),
            this.setAttribute('normal', new Ht(l, 3)),
            this.setAttribute('uv', new Ht(u, 2));
    }
    copy(e) {
        return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
        );
    }
    static fromJSON(e) {
        return new l1(
            e.radius,
            e.tube,
            e.radialSegments,
            e.tubularSegments,
            e.arc
        );
    }
}
class u1 extends xn {
    constructor(e = 1, t = 0.4, n = 64, i = 8, s = 2, o = 3) {
        super(),
            (this.type = 'TorusKnotGeometry'),
            (this.parameters = {
                radius: e,
                tube: t,
                tubularSegments: n,
                radialSegments: i,
                p: s,
                q: o,
            }),
            (n = Math.floor(n)),
            (i = Math.floor(i));
        const a = [],
            l = [],
            u = [],
            f = [],
            d = new re(),
            m = new re(),
            v = new re(),
            _ = new re(),
            S = new re(),
            w = new re(),
            x = new re();
        for (let T = 0; T <= n; ++T) {
            const b = (T / n) * s * Math.PI * 2;
            A(b, s, o, e, v),
                A(b + 0.01, s, o, e, _),
                w.subVectors(_, v),
                x.addVectors(_, v),
                S.crossVectors(w, x),
                x.crossVectors(S, w),
                S.normalize(),
                x.normalize();
            for (let P = 0; P <= i; ++P) {
                const L = (P / i) * Math.PI * 2,
                    D = -t * Math.cos(L),
                    O = t * Math.sin(L);
                (d.x = v.x + (D * x.x + O * S.x)),
                    (d.y = v.y + (D * x.y + O * S.y)),
                    (d.z = v.z + (D * x.z + O * S.z)),
                    l.push(d.x, d.y, d.z),
                    m.subVectors(d, v).normalize(),
                    u.push(m.x, m.y, m.z),
                    f.push(T / n),
                    f.push(P / i);
            }
        }
        for (let T = 1; T <= n; T++)
            for (let b = 1; b <= i; b++) {
                const P = (i + 1) * (T - 1) + (b - 1),
                    L = (i + 1) * T + (b - 1),
                    D = (i + 1) * T + b,
                    O = (i + 1) * (T - 1) + b;
                a.push(P, L, O), a.push(L, D, O);
            }
        this.setIndex(a),
            this.setAttribute('position', new Ht(l, 3)),
            this.setAttribute('normal', new Ht(u, 3)),
            this.setAttribute('uv', new Ht(f, 2));
        function A(T, b, P, L, D) {
            const O = Math.cos(T),
                I = Math.sin(T),
                U = (P / b) * T,
                H = Math.cos(U);
            (D.x = L * (2 + H) * 0.5 * O),
                (D.y = L * (2 + H) * I * 0.5),
                (D.z = L * Math.sin(U) * 0.5);
        }
    }
    copy(e) {
        return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
        );
    }
    static fromJSON(e) {
        return new u1(
            e.radius,
            e.tube,
            e.tubularSegments,
            e.radialSegments,
            e.p,
            e.q
        );
    }
}
class c1 extends xn {
    constructor(
        e = new VT(new re(-1, -1, 0), new re(-1, 1, 0), new re(1, 1, 0)),
        t = 64,
        n = 1,
        i = 8,
        s = !1
    ) {
        super(),
            (this.type = 'TubeGeometry'),
            (this.parameters = {
                path: e,
                tubularSegments: t,
                radius: n,
                radialSegments: i,
                closed: s,
            });
        const o = e.computeFrenetFrames(t, s);
        (this.tangents = o.tangents),
            (this.normals = o.normals),
            (this.binormals = o.binormals);
        const a = new re(),
            l = new re(),
            u = new tt();
        let f = new re();
        const d = [],
            m = [],
            v = [],
            _ = [];
        S(),
            this.setIndex(_),
            this.setAttribute('position', new Ht(d, 3)),
            this.setAttribute('normal', new Ht(m, 3)),
            this.setAttribute('uv', new Ht(v, 2));
        function S() {
            for (let T = 0; T < t; T++) w(T);
            w(s === !1 ? t : 0), A(), x();
        }
        function w(T) {
            f = e.getPointAt(T / t, f);
            const b = o.normals[T],
                P = o.binormals[T];
            for (let L = 0; L <= i; L++) {
                const D = (L / i) * Math.PI * 2,
                    O = Math.sin(D),
                    I = -Math.cos(D);
                (l.x = I * b.x + O * P.x),
                    (l.y = I * b.y + O * P.y),
                    (l.z = I * b.z + O * P.z),
                    l.normalize(),
                    m.push(l.x, l.y, l.z),
                    (a.x = f.x + n * l.x),
                    (a.y = f.y + n * l.y),
                    (a.z = f.z + n * l.z),
                    d.push(a.x, a.y, a.z);
            }
        }
        function x() {
            for (let T = 1; T <= t; T++)
                for (let b = 1; b <= i; b++) {
                    const P = (i + 1) * (T - 1) + (b - 1),
                        L = (i + 1) * T + (b - 1),
                        D = (i + 1) * T + b,
                        O = (i + 1) * (T - 1) + b;
                    _.push(P, L, O), _.push(L, D, O);
                }
        }
        function A() {
            for (let T = 0; T <= t; T++)
                for (let b = 0; b <= i; b++)
                    (u.x = T / t), (u.y = b / i), v.push(u.x, u.y);
        }
    }
    copy(e) {
        return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
        );
    }
    toJSON() {
        const e = super.toJSON();
        return (e.path = this.parameters.path.toJSON()), e;
    }
    static fromJSON(e) {
        return new c1(
            new px[e.path.type]().fromJSON(e.path),
            e.tubularSegments,
            e.radius,
            e.radialSegments,
            e.closed
        );
    }
}
class WO extends xn {
    constructor(e = null) {
        if (
            (super(),
            (this.type = 'WireframeGeometry'),
            (this.parameters = { geometry: e }),
            e !== null)
        ) {
            const t = [],
                n = new Set(),
                i = new re(),
                s = new re();
            if (e.index !== null) {
                const o = e.attributes.position,
                    a = e.index;
                let l = e.groups;
                l.length === 0 &&
                    (l = [{ start: 0, count: a.count, materialIndex: 0 }]);
                for (let u = 0, f = l.length; u < f; ++u) {
                    const d = l[u],
                        m = d.start,
                        v = d.count;
                    for (let _ = m, S = m + v; _ < S; _ += 3)
                        for (let w = 0; w < 3; w++) {
                            const x = a.getX(_ + w),
                                A = a.getX(_ + ((w + 1) % 3));
                            i.fromBufferAttribute(o, x),
                                s.fromBufferAttribute(o, A),
                                $2(i, s, n) === !0 &&
                                    (t.push(i.x, i.y, i.z),
                                    t.push(s.x, s.y, s.z));
                        }
                }
            } else {
                const o = e.attributes.position;
                for (let a = 0, l = o.count / 3; a < l; a++)
                    for (let u = 0; u < 3; u++) {
                        const f = 3 * a + u,
                            d = 3 * a + ((u + 1) % 3);
                        i.fromBufferAttribute(o, f),
                            s.fromBufferAttribute(o, d),
                            $2(i, s, n) === !0 &&
                                (t.push(i.x, i.y, i.z), t.push(s.x, s.y, s.z));
                    }
            }
            this.setAttribute('position', new Ht(t, 3));
        }
    }
    copy(e) {
        return (
            super.copy(e),
            (this.parameters = Object.assign({}, e.parameters)),
            this
        );
    }
}
function $2(r, e, t) {
    const n = `${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,
        i = `${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;
    return t.has(n) === !0 || t.has(i) === !0 ? !1 : (t.add(n), t.add(i), !0);
}
var J2 = Object.freeze({
    __proto__: null,
    BoxGeometry: wh,
    CapsuleGeometry: Qx,
    CircleGeometry: e1,
    ConeGeometry: t1,
    CylinderGeometry: Xp,
    DodecahedronGeometry: n1,
    EdgesGeometry: zO,
    ExtrudeGeometry: r1,
    IcosahedronGeometry: $0,
    LatheGeometry: Z0,
    OctahedronGeometry: J0,
    PlaneGeometry: ra,
    PolyhedronGeometry: Vc,
    RingGeometry: s1,
    ShapeGeometry: o1,
    SphereGeometry: Q0,
    TetrahedronGeometry: a1,
    TorusGeometry: l1,
    TorusKnotGeometry: u1,
    TubeGeometry: c1,
    WireframeGeometry: WO,
});
class jO extends gs {
    constructor(e) {
        super(),
            (this.isShadowMaterial = !0),
            (this.type = 'ShadowMaterial'),
            (this.color = new Tt(0)),
            (this.transparent = !0),
            (this.fog = !0),
            this.setValues(e);
    }
    copy(e) {
        return (
            super.copy(e), this.color.copy(e.color), (this.fog = e.fog), this
        );
    }
}
class XO extends Qi {
    constructor(e) {
        super(e),
            (this.isRawShaderMaterial = !0),
            (this.type = 'RawShaderMaterial');
    }
}
class GT extends gs {
    constructor(e) {
        super(),
            (this.isMeshStandardMaterial = !0),
            (this.defines = { STANDARD: '' }),
            (this.type = 'MeshStandardMaterial'),
            (this.color = new Tt(16777215)),
            (this.roughness = 1),
            (this.metalness = 0),
            (this.map = null),
            (this.lightMap = null),
            (this.lightMapIntensity = 1),
            (this.aoMap = null),
            (this.aoMapIntensity = 1),
            (this.emissive = new Tt(0)),
            (this.emissiveIntensity = 1),
            (this.emissiveMap = null),
            (this.bumpMap = null),
            (this.bumpScale = 1),
            (this.normalMap = null),
            (this.normalMapType = Bc),
            (this.normalScale = new tt(1, 1)),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            (this.roughnessMap = null),
            (this.metalnessMap = null),
            (this.alphaMap = null),
            (this.envMap = null),
            (this.envMapRotation = new oo()),
            (this.envMapIntensity = 1),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.wireframeLinecap = 'round'),
            (this.wireframeLinejoin = 'round'),
            (this.flatShading = !1),
            (this.fog = !0),
            this.setValues(e);
    }
    copy(e) {
        return (
            super.copy(e),
            (this.defines = { STANDARD: '' }),
            this.color.copy(e.color),
            (this.roughness = e.roughness),
            (this.metalness = e.metalness),
            (this.map = e.map),
            (this.lightMap = e.lightMap),
            (this.lightMapIntensity = e.lightMapIntensity),
            (this.aoMap = e.aoMap),
            (this.aoMapIntensity = e.aoMapIntensity),
            this.emissive.copy(e.emissive),
            (this.emissiveMap = e.emissiveMap),
            (this.emissiveIntensity = e.emissiveIntensity),
            (this.bumpMap = e.bumpMap),
            (this.bumpScale = e.bumpScale),
            (this.normalMap = e.normalMap),
            (this.normalMapType = e.normalMapType),
            this.normalScale.copy(e.normalScale),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.roughnessMap = e.roughnessMap),
            (this.metalnessMap = e.metalnessMap),
            (this.alphaMap = e.alphaMap),
            (this.envMap = e.envMap),
            this.envMapRotation.copy(e.envMapRotation),
            (this.envMapIntensity = e.envMapIntensity),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.wireframeLinecap = e.wireframeLinecap),
            (this.wireframeLinejoin = e.wireframeLinejoin),
            (this.flatShading = e.flatShading),
            (this.fog = e.fog),
            this
        );
    }
}
class YO extends GT {
    constructor(e) {
        super(),
            (this.isMeshPhysicalMaterial = !0),
            (this.defines = { STANDARD: '', PHYSICAL: '' }),
            (this.type = 'MeshPhysicalMaterial'),
            (this.anisotropyRotation = 0),
            (this.anisotropyMap = null),
            (this.clearcoatMap = null),
            (this.clearcoatRoughness = 0),
            (this.clearcoatRoughnessMap = null),
            (this.clearcoatNormalScale = new tt(1, 1)),
            (this.clearcoatNormalMap = null),
            (this.ior = 1.5),
            Object.defineProperty(this, 'reflectivity', {
                get: function () {
                    return Vi((2.5 * (this.ior - 1)) / (this.ior + 1), 0, 1);
                },
                set: function (t) {
                    this.ior = (1 + 0.4 * t) / (1 - 0.4 * t);
                },
            }),
            (this.iridescenceMap = null),
            (this.iridescenceIOR = 1.3),
            (this.iridescenceThicknessRange = [100, 400]),
            (this.iridescenceThicknessMap = null),
            (this.sheenColor = new Tt(0)),
            (this.sheenColorMap = null),
            (this.sheenRoughness = 1),
            (this.sheenRoughnessMap = null),
            (this.transmissionMap = null),
            (this.thickness = 0),
            (this.thicknessMap = null),
            (this.attenuationDistance = 1 / 0),
            (this.attenuationColor = new Tt(1, 1, 1)),
            (this.specularIntensity = 1),
            (this.specularIntensityMap = null),
            (this.specularColor = new Tt(1, 1, 1)),
            (this.specularColorMap = null),
            (this._anisotropy = 0),
            (this._clearcoat = 0),
            (this._dispersion = 0),
            (this._iridescence = 0),
            (this._sheen = 0),
            (this._transmission = 0),
            this.setValues(e);
    }
    get anisotropy() {
        return this._anisotropy;
    }
    set anisotropy(e) {
        this._anisotropy > 0 != e > 0 && this.version++, (this._anisotropy = e);
    }
    get clearcoat() {
        return this._clearcoat;
    }
    set clearcoat(e) {
        this._clearcoat > 0 != e > 0 && this.version++, (this._clearcoat = e);
    }
    get iridescence() {
        return this._iridescence;
    }
    set iridescence(e) {
        this._iridescence > 0 != e > 0 && this.version++,
            (this._iridescence = e);
    }
    get dispersion() {
        return this._dispersion;
    }
    set dispersion(e) {
        this._dispersion > 0 != e > 0 && this.version++, (this._dispersion = e);
    }
    get sheen() {
        return this._sheen;
    }
    set sheen(e) {
        this._sheen > 0 != e > 0 && this.version++, (this._sheen = e);
    }
    get transmission() {
        return this._transmission;
    }
    set transmission(e) {
        this._transmission > 0 != e > 0 && this.version++,
            (this._transmission = e);
    }
    copy(e) {
        return (
            super.copy(e),
            (this.defines = { STANDARD: '', PHYSICAL: '' }),
            (this.anisotropy = e.anisotropy),
            (this.anisotropyRotation = e.anisotropyRotation),
            (this.anisotropyMap = e.anisotropyMap),
            (this.clearcoat = e.clearcoat),
            (this.clearcoatMap = e.clearcoatMap),
            (this.clearcoatRoughness = e.clearcoatRoughness),
            (this.clearcoatRoughnessMap = e.clearcoatRoughnessMap),
            (this.clearcoatNormalMap = e.clearcoatNormalMap),
            this.clearcoatNormalScale.copy(e.clearcoatNormalScale),
            (this.dispersion = e.dispersion),
            (this.ior = e.ior),
            (this.iridescence = e.iridescence),
            (this.iridescenceMap = e.iridescenceMap),
            (this.iridescenceIOR = e.iridescenceIOR),
            (this.iridescenceThicknessRange = [...e.iridescenceThicknessRange]),
            (this.iridescenceThicknessMap = e.iridescenceThicknessMap),
            (this.sheen = e.sheen),
            this.sheenColor.copy(e.sheenColor),
            (this.sheenColorMap = e.sheenColorMap),
            (this.sheenRoughness = e.sheenRoughness),
            (this.sheenRoughnessMap = e.sheenRoughnessMap),
            (this.transmission = e.transmission),
            (this.transmissionMap = e.transmissionMap),
            (this.thickness = e.thickness),
            (this.thicknessMap = e.thicknessMap),
            (this.attenuationDistance = e.attenuationDistance),
            this.attenuationColor.copy(e.attenuationColor),
            (this.specularIntensity = e.specularIntensity),
            (this.specularIntensityMap = e.specularIntensityMap),
            this.specularColor.copy(e.specularColor),
            (this.specularColorMap = e.specularColorMap),
            this
        );
    }
}
class qO extends gs {
    constructor(e) {
        super(),
            (this.isMeshPhongMaterial = !0),
            (this.type = 'MeshPhongMaterial'),
            (this.color = new Tt(16777215)),
            (this.specular = new Tt(1118481)),
            (this.shininess = 30),
            (this.map = null),
            (this.lightMap = null),
            (this.lightMapIntensity = 1),
            (this.aoMap = null),
            (this.aoMapIntensity = 1),
            (this.emissive = new Tt(0)),
            (this.emissiveIntensity = 1),
            (this.emissiveMap = null),
            (this.bumpMap = null),
            (this.bumpScale = 1),
            (this.normalMap = null),
            (this.normalMapType = Bc),
            (this.normalScale = new tt(1, 1)),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            (this.specularMap = null),
            (this.alphaMap = null),
            (this.envMap = null),
            (this.envMapRotation = new oo()),
            (this.combine = G0),
            (this.reflectivity = 1),
            (this.refractionRatio = 0.98),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.wireframeLinecap = 'round'),
            (this.wireframeLinejoin = 'round'),
            (this.flatShading = !1),
            (this.fog = !0),
            this.setValues(e);
    }
    copy(e) {
        return (
            super.copy(e),
            this.color.copy(e.color),
            this.specular.copy(e.specular),
            (this.shininess = e.shininess),
            (this.map = e.map),
            (this.lightMap = e.lightMap),
            (this.lightMapIntensity = e.lightMapIntensity),
            (this.aoMap = e.aoMap),
            (this.aoMapIntensity = e.aoMapIntensity),
            this.emissive.copy(e.emissive),
            (this.emissiveMap = e.emissiveMap),
            (this.emissiveIntensity = e.emissiveIntensity),
            (this.bumpMap = e.bumpMap),
            (this.bumpScale = e.bumpScale),
            (this.normalMap = e.normalMap),
            (this.normalMapType = e.normalMapType),
            this.normalScale.copy(e.normalScale),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.specularMap = e.specularMap),
            (this.alphaMap = e.alphaMap),
            (this.envMap = e.envMap),
            this.envMapRotation.copy(e.envMapRotation),
            (this.combine = e.combine),
            (this.reflectivity = e.reflectivity),
            (this.refractionRatio = e.refractionRatio),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.wireframeLinecap = e.wireframeLinecap),
            (this.wireframeLinejoin = e.wireframeLinejoin),
            (this.flatShading = e.flatShading),
            (this.fog = e.fog),
            this
        );
    }
}
class KO extends gs {
    constructor(e) {
        super(),
            (this.isMeshToonMaterial = !0),
            (this.defines = { TOON: '' }),
            (this.type = 'MeshToonMaterial'),
            (this.color = new Tt(16777215)),
            (this.map = null),
            (this.gradientMap = null),
            (this.lightMap = null),
            (this.lightMapIntensity = 1),
            (this.aoMap = null),
            (this.aoMapIntensity = 1),
            (this.emissive = new Tt(0)),
            (this.emissiveIntensity = 1),
            (this.emissiveMap = null),
            (this.bumpMap = null),
            (this.bumpScale = 1),
            (this.normalMap = null),
            (this.normalMapType = Bc),
            (this.normalScale = new tt(1, 1)),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            (this.alphaMap = null),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.wireframeLinecap = 'round'),
            (this.wireframeLinejoin = 'round'),
            (this.fog = !0),
            this.setValues(e);
    }
    copy(e) {
        return (
            super.copy(e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.gradientMap = e.gradientMap),
            (this.lightMap = e.lightMap),
            (this.lightMapIntensity = e.lightMapIntensity),
            (this.aoMap = e.aoMap),
            (this.aoMapIntensity = e.aoMapIntensity),
            this.emissive.copy(e.emissive),
            (this.emissiveMap = e.emissiveMap),
            (this.emissiveIntensity = e.emissiveIntensity),
            (this.bumpMap = e.bumpMap),
            (this.bumpScale = e.bumpScale),
            (this.normalMap = e.normalMap),
            (this.normalMapType = e.normalMapType),
            this.normalScale.copy(e.normalScale),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.alphaMap = e.alphaMap),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.wireframeLinecap = e.wireframeLinecap),
            (this.wireframeLinejoin = e.wireframeLinejoin),
            (this.fog = e.fog),
            this
        );
    }
}
class ZO extends gs {
    constructor(e) {
        super(),
            (this.isMeshNormalMaterial = !0),
            (this.type = 'MeshNormalMaterial'),
            (this.bumpMap = null),
            (this.bumpScale = 1),
            (this.normalMap = null),
            (this.normalMapType = Bc),
            (this.normalScale = new tt(1, 1)),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.flatShading = !1),
            this.setValues(e);
    }
    copy(e) {
        return (
            super.copy(e),
            (this.bumpMap = e.bumpMap),
            (this.bumpScale = e.bumpScale),
            (this.normalMap = e.normalMap),
            (this.normalMapType = e.normalMapType),
            this.normalScale.copy(e.normalScale),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.flatShading = e.flatShading),
            this
        );
    }
}
class $O extends gs {
    constructor(e) {
        super(),
            (this.isMeshLambertMaterial = !0),
            (this.type = 'MeshLambertMaterial'),
            (this.color = new Tt(16777215)),
            (this.map = null),
            (this.lightMap = null),
            (this.lightMapIntensity = 1),
            (this.aoMap = null),
            (this.aoMapIntensity = 1),
            (this.emissive = new Tt(0)),
            (this.emissiveIntensity = 1),
            (this.emissiveMap = null),
            (this.bumpMap = null),
            (this.bumpScale = 1),
            (this.normalMap = null),
            (this.normalMapType = Bc),
            (this.normalScale = new tt(1, 1)),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            (this.specularMap = null),
            (this.alphaMap = null),
            (this.envMap = null),
            (this.envMapRotation = new oo()),
            (this.combine = G0),
            (this.reflectivity = 1),
            (this.refractionRatio = 0.98),
            (this.wireframe = !1),
            (this.wireframeLinewidth = 1),
            (this.wireframeLinecap = 'round'),
            (this.wireframeLinejoin = 'round'),
            (this.flatShading = !1),
            (this.fog = !0),
            this.setValues(e);
    }
    copy(e) {
        return (
            super.copy(e),
            this.color.copy(e.color),
            (this.map = e.map),
            (this.lightMap = e.lightMap),
            (this.lightMapIntensity = e.lightMapIntensity),
            (this.aoMap = e.aoMap),
            (this.aoMapIntensity = e.aoMapIntensity),
            this.emissive.copy(e.emissive),
            (this.emissiveMap = e.emissiveMap),
            (this.emissiveIntensity = e.emissiveIntensity),
            (this.bumpMap = e.bumpMap),
            (this.bumpScale = e.bumpScale),
            (this.normalMap = e.normalMap),
            (this.normalMapType = e.normalMapType),
            this.normalScale.copy(e.normalScale),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.specularMap = e.specularMap),
            (this.alphaMap = e.alphaMap),
            (this.envMap = e.envMap),
            this.envMapRotation.copy(e.envMapRotation),
            (this.combine = e.combine),
            (this.reflectivity = e.reflectivity),
            (this.refractionRatio = e.refractionRatio),
            (this.wireframe = e.wireframe),
            (this.wireframeLinewidth = e.wireframeLinewidth),
            (this.wireframeLinecap = e.wireframeLinecap),
            (this.wireframeLinejoin = e.wireframeLinejoin),
            (this.flatShading = e.flatShading),
            (this.fog = e.fog),
            this
        );
    }
}
class JO extends gs {
    constructor(e) {
        super(),
            (this.isMeshMatcapMaterial = !0),
            (this.defines = { MATCAP: '' }),
            (this.type = 'MeshMatcapMaterial'),
            (this.color = new Tt(16777215)),
            (this.matcap = null),
            (this.map = null),
            (this.bumpMap = null),
            (this.bumpScale = 1),
            (this.normalMap = null),
            (this.normalMapType = Bc),
            (this.normalScale = new tt(1, 1)),
            (this.displacementMap = null),
            (this.displacementScale = 1),
            (this.displacementBias = 0),
            (this.alphaMap = null),
            (this.flatShading = !1),
            (this.fog = !0),
            this.setValues(e);
    }
    copy(e) {
        return (
            super.copy(e),
            (this.defines = { MATCAP: '' }),
            this.color.copy(e.color),
            (this.matcap = e.matcap),
            (this.map = e.map),
            (this.bumpMap = e.bumpMap),
            (this.bumpScale = e.bumpScale),
            (this.normalMap = e.normalMap),
            (this.normalMapType = e.normalMapType),
            this.normalScale.copy(e.normalScale),
            (this.displacementMap = e.displacementMap),
            (this.displacementScale = e.displacementScale),
            (this.displacementBias = e.displacementBias),
            (this.alphaMap = e.alphaMap),
            (this.flatShading = e.flatShading),
            (this.fog = e.fog),
            this
        );
    }
}
class QO extends ks {
    constructor(e) {
        super(),
            (this.isLineDashedMaterial = !0),
            (this.type = 'LineDashedMaterial'),
            (this.scale = 1),
            (this.dashSize = 3),
            (this.gapSize = 1),
            this.setValues(e);
    }
    copy(e) {
        return (
            super.copy(e),
            (this.scale = e.scale),
            (this.dashSize = e.dashSize),
            (this.gapSize = e.gapSize),
            this
        );
    }
}
function eh(r, e, t) {
    return !r || (!t && r.constructor === e)
        ? r
        : typeof e.BYTES_PER_ELEMENT == 'number'
          ? new e(r)
          : Array.prototype.slice.call(r);
}
function eU(r) {
    return ArrayBuffer.isView(r) && !(r instanceof DataView);
}
function tU(r) {
    function e(i, s) {
        return r[i] - r[s];
    }
    const t = r.length,
        n = new Array(t);
    for (let i = 0; i !== t; ++i) n[i] = i;
    return n.sort(e), n;
}
function kM(r, e, t) {
    const n = r.length,
        i = new r.constructor(n);
    for (let s = 0, o = 0; o !== n; ++s) {
        const a = t[s] * e;
        for (let l = 0; l !== e; ++l) i[o++] = r[a + l];
    }
    return i;
}
function WT(r, e, t, n) {
    let i = 1,
        s = r[0];
    for (; s !== void 0 && s[n] === void 0; ) s = r[i++];
    if (s === void 0) return;
    let o = s[n];
    if (o !== void 0)
        if (Array.isArray(o))
            do
                (o = s[n]),
                    o !== void 0 && (e.push(s.time), t.push.apply(t, o)),
                    (s = r[i++]);
            while (s !== void 0);
        else if (o.toArray !== void 0)
            do
                (o = s[n]),
                    o !== void 0 && (e.push(s.time), o.toArray(t, t.length)),
                    (s = r[i++]);
            while (s !== void 0);
        else
            do
                (o = s[n]),
                    o !== void 0 && (e.push(s.time), t.push(o)),
                    (s = r[i++]);
            while (s !== void 0);
}
function CX(r, e, t, n, i = 30) {
    const s = r.clone();
    s.name = e;
    const o = [];
    for (let l = 0; l < s.tracks.length; ++l) {
        const u = s.tracks[l],
            f = u.getValueSize(),
            d = [],
            m = [];
        for (let v = 0; v < u.times.length; ++v) {
            const _ = u.times[v] * i;
            if (!(_ < t || _ >= n)) {
                d.push(u.times[v]);
                for (let S = 0; S < f; ++S) m.push(u.values[v * f + S]);
            }
        }
        d.length !== 0 &&
            ((u.times = eh(d, u.times.constructor)),
            (u.values = eh(m, u.values.constructor)),
            o.push(u));
    }
    s.tracks = o;
    let a = 1 / 0;
    for (let l = 0; l < s.tracks.length; ++l)
        a > s.tracks[l].times[0] && (a = s.tracks[l].times[0]);
    for (let l = 0; l < s.tracks.length; ++l) s.tracks[l].shift(-1 * a);
    return s.resetDuration(), s;
}
function RX(r, e = 0, t = r, n = 30) {
    n <= 0 && (n = 30);
    const i = t.tracks.length,
        s = e / n;
    for (let o = 0; o < i; ++o) {
        const a = t.tracks[o],
            l = a.ValueTypeName;
        if (l === 'bool' || l === 'string') continue;
        const u = r.tracks.find(function (x) {
            return x.name === a.name && x.ValueTypeName === l;
        });
        if (u === void 0) continue;
        let f = 0;
        const d = a.getValueSize();
        a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline &&
            (f = d / 3);
        let m = 0;
        const v = u.getValueSize();
        u.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline &&
            (m = v / 3);
        const _ = a.times.length - 1;
        let S;
        if (s <= a.times[0]) {
            const x = f,
                A = d - f;
            S = a.values.slice(x, A);
        } else if (s >= a.times[_]) {
            const x = _ * d + f,
                A = x + d - f;
            S = a.values.slice(x, A);
        } else {
            const x = a.createInterpolant(),
                A = f,
                T = d - f;
            x.evaluate(s), (S = x.resultBuffer.slice(A, T));
        }
        l === 'quaternion' &&
            new mr().fromArray(S).normalize().conjugate().toArray(S);
        const w = u.times.length;
        for (let x = 0; x < w; ++x) {
            const A = x * v + m;
            if (l === 'quaternion')
                mr.multiplyQuaternionsFlat(u.values, A, S, 0, u.values, A);
            else {
                const T = v - m * 2;
                for (let b = 0; b < T; ++b) u.values[A + b] -= S[b];
            }
        }
    }
    return (r.blendMode = wT), r;
}
const PX = {
    convertArray: eh,
    isTypedArray: eU,
    getKeyframeOrder: tU,
    sortedArray: kM,
    flattenJSON: WT,
    subclip: CX,
    makeClipAdditive: RX,
};
class ev {
    constructor(e, t, n, i) {
        (this.parameterPositions = e),
            (this._cachedIndex = 0),
            (this.resultBuffer = i !== void 0 ? i : new t.constructor(n)),
            (this.sampleValues = t),
            (this.valueSize = n),
            (this.settings = null),
            (this.DefaultSettings_ = {});
    }
    evaluate(e) {
        const t = this.parameterPositions;
        let n = this._cachedIndex,
            i = t[n],
            s = t[n - 1];
        e: {
            t: {
                let o;
                n: {
                    i: if (!(e < i)) {
                        for (let a = n + 2; ; ) {
                            if (i === void 0) {
                                if (e < s) break i;
                                return (
                                    (n = t.length),
                                    (this._cachedIndex = n),
                                    this.copySampleValue_(n - 1)
                                );
                            }
                            if (n === a) break;
                            if (((s = i), (i = t[++n]), e < i)) break t;
                        }
                        o = t.length;
                        break n;
                    }
                    if (!(e >= s)) {
                        const a = t[1];
                        e < a && ((n = 2), (s = a));
                        for (let l = n - 2; ; ) {
                            if (s === void 0)
                                return (
                                    (this._cachedIndex = 0),
                                    this.copySampleValue_(0)
                                );
                            if (n === l) break;
                            if (((i = s), (s = t[--n - 1]), e >= s)) break t;
                        }
                        (o = n), (n = 0);
                        break n;
                    }
                    break e;
                }
                for (; n < o; ) {
                    const a = (n + o) >>> 1;
                    e < t[a] ? (o = a) : (n = a + 1);
                }
                if (((i = t[n]), (s = t[n - 1]), s === void 0))
                    return (this._cachedIndex = 0), this.copySampleValue_(0);
                if (i === void 0)
                    return (
                        (n = t.length),
                        (this._cachedIndex = n),
                        this.copySampleValue_(n - 1)
                    );
            }
            (this._cachedIndex = n), this.intervalChanged_(n, s, i);
        }
        return this.interpolate_(n, s, e, i);
    }
    getSettings_() {
        return this.settings || this.DefaultSettings_;
    }
    copySampleValue_(e) {
        const t = this.resultBuffer,
            n = this.sampleValues,
            i = this.valueSize,
            s = e * i;
        for (let o = 0; o !== i; ++o) t[o] = n[s + o];
        return t;
    }
    interpolate_() {
        throw new Error('call to abstract method');
    }
    intervalChanged_() {}
}
class nU extends ev {
    constructor(e, t, n, i) {
        super(e, t, n, i),
            (this._weightPrev = -0),
            (this._offsetPrev = -0),
            (this._weightNext = -0),
            (this._offsetNext = -0),
            (this.DefaultSettings_ = { endingStart: Zf, endingEnd: Zf });
    }
    intervalChanged_(e, t, n) {
        const i = this.parameterPositions;
        let s = e - 2,
            o = e + 1,
            a = i[s],
            l = i[o];
        if (a === void 0)
            switch (this.getSettings_().endingStart) {
                case $f:
                    (s = e), (a = 2 * t - n);
                    break;
                case v0:
                    (s = i.length - 2), (a = t + i[s] - i[s + 1]);
                    break;
                default:
                    (s = e), (a = n);
            }
        if (l === void 0)
            switch (this.getSettings_().endingEnd) {
                case $f:
                    (o = e), (l = 2 * n - t);
                    break;
                case v0:
                    (o = 1), (l = n + i[1] - i[0]);
                    break;
                default:
                    (o = e - 1), (l = t);
            }
        const u = (n - t) * 0.5,
            f = this.valueSize;
        (this._weightPrev = u / (t - a)),
            (this._weightNext = u / (l - n)),
            (this._offsetPrev = s * f),
            (this._offsetNext = o * f);
    }
    interpolate_(e, t, n, i) {
        const s = this.resultBuffer,
            o = this.sampleValues,
            a = this.valueSize,
            l = e * a,
            u = l - a,
            f = this._offsetPrev,
            d = this._offsetNext,
            m = this._weightPrev,
            v = this._weightNext,
            _ = (n - t) / (i - t),
            S = _ * _,
            w = S * _,
            x = -m * w + 2 * m * S - m * _,
            A = (1 + m) * w + (-1.5 - 2 * m) * S + (-0.5 + m) * _ + 1,
            T = (-1 - v) * w + (1.5 + v) * S + 0.5 * _,
            b = v * w - v * S;
        for (let P = 0; P !== a; ++P)
            s[P] = x * o[f + P] + A * o[u + P] + T * o[l + P] + b * o[d + P];
        return s;
    }
}
class jT extends ev {
    constructor(e, t, n, i) {
        super(e, t, n, i);
    }
    interpolate_(e, t, n, i) {
        const s = this.resultBuffer,
            o = this.sampleValues,
            a = this.valueSize,
            l = e * a,
            u = l - a,
            f = (n - t) / (i - t),
            d = 1 - f;
        for (let m = 0; m !== a; ++m) s[m] = o[u + m] * d + o[l + m] * f;
        return s;
    }
}
class iU extends ev {
    constructor(e, t, n, i) {
        super(e, t, n, i);
    }
    interpolate_(e) {
        return this.copySampleValue_(e - 1);
    }
}
class Ya {
    constructor(e, t, n, i) {
        if (e === void 0)
            throw new Error('THREE.KeyframeTrack: track name is undefined');
        if (t === void 0 || t.length === 0)
            throw new Error(
                'THREE.KeyframeTrack: no keyframes in track named ' + e
            );
        (this.name = e),
            (this.times = eh(t, this.TimeBufferType)),
            (this.values = eh(n, this.ValueBufferType)),
            this.setInterpolation(i || this.DefaultInterpolation);
    }
    static toJSON(e) {
        const t = e.constructor;
        let n;
        if (t.toJSON !== this.toJSON) n = t.toJSON(e);
        else {
            n = {
                name: e.name,
                times: eh(e.times, Array),
                values: eh(e.values, Array),
            };
            const i = e.getInterpolation();
            i !== e.DefaultInterpolation && (n.interpolation = i);
        }
        return (n.type = e.ValueTypeName), n;
    }
    InterpolantFactoryMethodDiscrete(e) {
        return new iU(this.times, this.values, this.getValueSize(), e);
    }
    InterpolantFactoryMethodLinear(e) {
        return new jT(this.times, this.values, this.getValueSize(), e);
    }
    InterpolantFactoryMethodSmooth(e) {
        return new nU(this.times, this.values, this.getValueSize(), e);
    }
    setInterpolation(e) {
        let t;
        switch (e) {
            case g0:
                t = this.InterpolantFactoryMethodDiscrete;
                break;
            case fx:
                t = this.InterpolantFactoryMethodLinear;
                break;
            case y_:
                t = this.InterpolantFactoryMethodSmooth;
                break;
        }
        if (t === void 0) {
            const n =
                'unsupported interpolation for ' +
                this.ValueTypeName +
                ' keyframe track named ' +
                this.name;
            if (this.createInterpolant === void 0)
                if (e !== this.DefaultInterpolation)
                    this.setInterpolation(this.DefaultInterpolation);
                else throw new Error(n);
            return console.warn('THREE.KeyframeTrack:', n), this;
        }
        return (this.createInterpolant = t), this;
    }
    getInterpolation() {
        switch (this.createInterpolant) {
            case this.InterpolantFactoryMethodDiscrete:
                return g0;
            case this.InterpolantFactoryMethodLinear:
                return fx;
            case this.InterpolantFactoryMethodSmooth:
                return y_;
        }
    }
    getValueSize() {
        return this.values.length / this.times.length;
    }
    shift(e) {
        if (e !== 0) {
            const t = this.times;
            for (let n = 0, i = t.length; n !== i; ++n) t[n] += e;
        }
        return this;
    }
    scale(e) {
        if (e !== 1) {
            const t = this.times;
            for (let n = 0, i = t.length; n !== i; ++n) t[n] *= e;
        }
        return this;
    }
    trim(e, t) {
        const n = this.times,
            i = n.length;
        let s = 0,
            o = i - 1;
        for (; s !== i && n[s] < e; ) ++s;
        for (; o !== -1 && n[o] > t; ) --o;
        if ((++o, s !== 0 || o !== i)) {
            s >= o && ((o = Math.max(o, 1)), (s = o - 1));
            const a = this.getValueSize();
            (this.times = n.slice(s, o)),
                (this.values = this.values.slice(s * a, o * a));
        }
        return this;
    }
    validate() {
        let e = !0;
        const t = this.getValueSize();
        t - Math.floor(t) !== 0 &&
            (console.error(
                'THREE.KeyframeTrack: Invalid value size in track.',
                this
            ),
            (e = !1));
        const n = this.times,
            i = this.values,
            s = n.length;
        s === 0 &&
            (console.error('THREE.KeyframeTrack: Track is empty.', this),
            (e = !1));
        let o = null;
        for (let a = 0; a !== s; a++) {
            const l = n[a];
            if (typeof l == 'number' && isNaN(l)) {
                console.error(
                    'THREE.KeyframeTrack: Time is not a valid number.',
                    this,
                    a,
                    l
                ),
                    (e = !1);
                break;
            }
            if (o !== null && o > l) {
                console.error(
                    'THREE.KeyframeTrack: Out of order keys.',
                    this,
                    a,
                    l,
                    o
                ),
                    (e = !1);
                break;
            }
            o = l;
        }
        if (i !== void 0 && eU(i))
            for (let a = 0, l = i.length; a !== l; ++a) {
                const u = i[a];
                if (isNaN(u)) {
                    console.error(
                        'THREE.KeyframeTrack: Value is not a valid number.',
                        this,
                        a,
                        u
                    ),
                        (e = !1);
                    break;
                }
            }
        return e;
    }
    optimize() {
        const e = this.times.slice(),
            t = this.values.slice(),
            n = this.getValueSize(),
            i = this.getInterpolation() === y_,
            s = e.length - 1;
        let o = 1;
        for (let a = 1; a < s; ++a) {
            let l = !1;
            const u = e[a],
                f = e[a + 1];
            if (u !== f && (a !== 1 || u !== e[0]))
                if (i) l = !0;
                else {
                    const d = a * n,
                        m = d - n,
                        v = d + n;
                    for (let _ = 0; _ !== n; ++_) {
                        const S = t[d + _];
                        if (S !== t[m + _] || S !== t[v + _]) {
                            l = !0;
                            break;
                        }
                    }
                }
            if (l) {
                if (a !== o) {
                    e[o] = e[a];
                    const d = a * n,
                        m = o * n;
                    for (let v = 0; v !== n; ++v) t[m + v] = t[d + v];
                }
                ++o;
            }
        }
        if (s > 0) {
            e[o] = e[s];
            for (let a = s * n, l = o * n, u = 0; u !== n; ++u)
                t[l + u] = t[a + u];
            ++o;
        }
        return (
            o !== e.length
                ? ((this.times = e.slice(0, o)),
                  (this.values = t.slice(0, o * n)))
                : ((this.times = e), (this.values = t)),
            this
        );
    }
    clone() {
        const e = this.times.slice(),
            t = this.values.slice(),
            n = this.constructor,
            i = new n(this.name, e, t);
        return (i.createInterpolant = this.createInterpolant), i;
    }
}
Ya.prototype.TimeBufferType = Float32Array;
Ya.prototype.ValueBufferType = Float32Array;
Ya.prototype.DefaultInterpolation = fx;
class Mh extends Ya {
    constructor(e, t, n) {
        super(e, t, n);
    }
}
Mh.prototype.ValueTypeName = 'bool';
Mh.prototype.ValueBufferType = Array;
Mh.prototype.DefaultInterpolation = g0;
Mh.prototype.InterpolantFactoryMethodLinear = void 0;
Mh.prototype.InterpolantFactoryMethodSmooth = void 0;
class XT extends Ya {}
XT.prototype.ValueTypeName = 'color';
class C0 extends Ya {}
C0.prototype.ValueTypeName = 'number';
class rU extends ev {
    constructor(e, t, n, i) {
        super(e, t, n, i);
    }
    interpolate_(e, t, n, i) {
        const s = this.resultBuffer,
            o = this.sampleValues,
            a = this.valueSize,
            l = (n - t) / (i - t);
        let u = e * a;
        for (let f = u + a; u !== f; u += 4)
            mr.slerpFlat(s, 0, o, u - a, o, u, l);
        return s;
    }
}
class tv extends Ya {
    InterpolantFactoryMethodLinear(e) {
        return new rU(this.times, this.values, this.getValueSize(), e);
    }
}
tv.prototype.ValueTypeName = 'quaternion';
tv.prototype.InterpolantFactoryMethodSmooth = void 0;
class Eh extends Ya {
    constructor(e, t, n) {
        super(e, t, n);
    }
}
Eh.prototype.ValueTypeName = 'string';
Eh.prototype.ValueBufferType = Array;
Eh.prototype.DefaultInterpolation = g0;
Eh.prototype.InterpolantFactoryMethodLinear = void 0;
Eh.prototype.InterpolantFactoryMethodSmooth = void 0;
class R0 extends Ya {}
R0.prototype.ValueTypeName = 'vector';
class P0 {
    constructor(e = '', t = -1, n = [], i = Bx) {
        (this.name = e),
            (this.tracks = n),
            (this.duration = t),
            (this.blendMode = i),
            (this.uuid = Ro()),
            this.duration < 0 && this.resetDuration();
    }
    static parse(e) {
        const t = [],
            n = e.tracks,
            i = 1 / (e.fps || 1);
        for (let o = 0, a = n.length; o !== a; ++o) t.push(IX(n[o]).scale(i));
        const s = new this(e.name, e.duration, t, e.blendMode);
        return (s.uuid = e.uuid), s;
    }
    static toJSON(e) {
        const t = [],
            n = e.tracks,
            i = {
                name: e.name,
                duration: e.duration,
                tracks: t,
                uuid: e.uuid,
                blendMode: e.blendMode,
            };
        for (let s = 0, o = n.length; s !== o; ++s) t.push(Ya.toJSON(n[s]));
        return i;
    }
    static CreateFromMorphTargetSequence(e, t, n, i) {
        const s = t.length,
            o = [];
        for (let a = 0; a < s; a++) {
            let l = [],
                u = [];
            l.push((a + s - 1) % s, a, (a + 1) % s), u.push(0, 1, 0);
            const f = tU(l);
            (l = kM(l, 1, f)),
                (u = kM(u, 1, f)),
                !i && l[0] === 0 && (l.push(s), u.push(u[0])),
                o.push(
                    new C0(
                        '.morphTargetInfluences[' + t[a].name + ']',
                        l,
                        u
                    ).scale(1 / n)
                );
        }
        return new this(e, -1, o);
    }
    static findByName(e, t) {
        let n = e;
        if (!Array.isArray(e)) {
            const i = e;
            n = (i.geometry && i.geometry.animations) || i.animations;
        }
        for (let i = 0; i < n.length; i++) if (n[i].name === t) return n[i];
        return null;
    }
    static CreateClipsFromMorphTargetSequences(e, t, n) {
        const i = {},
            s = /^([\w-]*?)([\d]+)$/;
        for (let a = 0, l = e.length; a < l; a++) {
            const u = e[a],
                f = u.name.match(s);
            if (f && f.length > 1) {
                const d = f[1];
                let m = i[d];
                m || (i[d] = m = []), m.push(u);
            }
        }
        const o = [];
        for (const a in i)
            o.push(this.CreateFromMorphTargetSequence(a, i[a], t, n));
        return o;
    }
    static parseAnimation(e, t) {
        if (!e)
            return (
                console.error(
                    'THREE.AnimationClip: No animation in JSONLoader data.'
                ),
                null
            );
        const n = function (d, m, v, _, S) {
                if (v.length !== 0) {
                    const w = [],
                        x = [];
                    WT(v, w, x, _), w.length !== 0 && S.push(new d(m, w, x));
                }
            },
            i = [],
            s = e.name || 'default',
            o = e.fps || 30,
            a = e.blendMode;
        let l = e.length || -1;
        const u = e.hierarchy || [];
        for (let d = 0; d < u.length; d++) {
            const m = u[d].keys;
            if (!(!m || m.length === 0))
                if (m[0].morphTargets) {
                    const v = {};
                    let _;
                    for (_ = 0; _ < m.length; _++)
                        if (m[_].morphTargets)
                            for (let S = 0; S < m[_].morphTargets.length; S++)
                                v[m[_].morphTargets[S]] = -1;
                    for (const S in v) {
                        const w = [],
                            x = [];
                        for (let A = 0; A !== m[_].morphTargets.length; ++A) {
                            const T = m[_];
                            w.push(T.time), x.push(T.morphTarget === S ? 1 : 0);
                        }
                        i.push(
                            new C0('.morphTargetInfluence[' + S + ']', w, x)
                        );
                    }
                    l = v.length * o;
                } else {
                    const v = '.bones[' + t[d].name + ']';
                    n(R0, v + '.position', m, 'pos', i),
                        n(tv, v + '.quaternion', m, 'rot', i),
                        n(R0, v + '.scale', m, 'scl', i);
                }
        }
        return i.length === 0 ? null : new this(s, l, i, a);
    }
    resetDuration() {
        const e = this.tracks;
        let t = 0;
        for (let n = 0, i = e.length; n !== i; ++n) {
            const s = this.tracks[n];
            t = Math.max(t, s.times[s.times.length - 1]);
        }
        return (this.duration = t), this;
    }
    trim() {
        for (let e = 0; e < this.tracks.length; e++)
            this.tracks[e].trim(0, this.duration);
        return this;
    }
    validate() {
        let e = !0;
        for (let t = 0; t < this.tracks.length; t++)
            e = e && this.tracks[t].validate();
        return e;
    }
    optimize() {
        for (let e = 0; e < this.tracks.length; e++) this.tracks[e].optimize();
        return this;
    }
    clone() {
        const e = [];
        for (let t = 0; t < this.tracks.length; t++)
            e.push(this.tracks[t].clone());
        return new this.constructor(
            this.name,
            this.duration,
            e,
            this.blendMode
        );
    }
    toJSON() {
        return this.constructor.toJSON(this);
    }
}
function LX(r) {
    switch (r.toLowerCase()) {
        case 'scalar':
        case 'double':
        case 'float':
        case 'number':
        case 'integer':
            return C0;
        case 'vector':
        case 'vector2':
        case 'vector3':
        case 'vector4':
            return R0;
        case 'color':
            return XT;
        case 'quaternion':
            return tv;
        case 'bool':
        case 'boolean':
            return Mh;
        case 'string':
            return Eh;
    }
    throw new Error('THREE.KeyframeTrack: Unsupported typeName: ' + r);
}
function IX(r) {
    if (r.type === void 0)
        throw new Error(
            'THREE.KeyframeTrack: track type undefined, can not parse'
        );
    const e = LX(r.type);
    if (r.times === void 0) {
        const t = [],
            n = [];
        WT(r.keys, t, n, 'value'), (r.times = t), (r.values = n);
    }
    return e.parse !== void 0
        ? e.parse(r)
        : new e(r.name, r.times, r.values, r.interpolation);
}
const _u = {
    enabled: !1,
    files: {},
    add: function (r, e) {
        this.enabled !== !1 && (this.files[r] = e);
    },
    get: function (r) {
        if (this.enabled !== !1) return this.files[r];
    },
    remove: function (r) {
        delete this.files[r];
    },
    clear: function () {
        this.files = {};
    },
};
class f1 {
    constructor(e, t, n) {
        const i = this;
        let s = !1,
            o = 0,
            a = 0,
            l;
        const u = [];
        (this.onStart = void 0),
            (this.onLoad = e),
            (this.onProgress = t),
            (this.onError = n),
            (this.itemStart = function (f) {
                a++,
                    s === !1 && i.onStart !== void 0 && i.onStart(f, o, a),
                    (s = !0);
            }),
            (this.itemEnd = function (f) {
                o++,
                    i.onProgress !== void 0 && i.onProgress(f, o, a),
                    o === a && ((s = !1), i.onLoad !== void 0 && i.onLoad());
            }),
            (this.itemError = function (f) {
                i.onError !== void 0 && i.onError(f);
            }),
            (this.resolveURL = function (f) {
                return l ? l(f) : f;
            }),
            (this.setURLModifier = function (f) {
                return (l = f), this;
            }),
            (this.addHandler = function (f, d) {
                return u.push(f, d), this;
            }),
            (this.removeHandler = function (f) {
                const d = u.indexOf(f);
                return d !== -1 && u.splice(d, 2), this;
            }),
            (this.getHandler = function (f) {
                for (let d = 0, m = u.length; d < m; d += 2) {
                    const v = u[d],
                        _ = u[d + 1];
                    if ((v.global && (v.lastIndex = 0), v.test(f))) return _;
                }
                return null;
            });
    }
}
const sU = new f1();
class Ns {
    constructor(e) {
        (this.manager = e !== void 0 ? e : sU),
            (this.crossOrigin = 'anonymous'),
            (this.withCredentials = !1),
            (this.path = ''),
            (this.resourcePath = ''),
            (this.requestHeader = {});
    }
    load() {}
    loadAsync(e, t) {
        const n = this;
        return new Promise(function (i, s) {
            n.load(e, i, t, s);
        });
    }
    parse() {}
    setCrossOrigin(e) {
        return (this.crossOrigin = e), this;
    }
    setWithCredentials(e) {
        return (this.withCredentials = e), this;
    }
    setPath(e) {
        return (this.path = e), this;
    }
    setResourcePath(e) {
        return (this.resourcePath = e), this;
    }
    setRequestHeader(e) {
        return (this.requestHeader = e), this;
    }
}
Ns.DEFAULT_MATERIAL_NAME = '__DEFAULT';
const du = {};
class DX extends Error {
    constructor(e, t) {
        super(e), (this.response = t);
    }
}
class Po extends Ns {
    constructor(e) {
        super(e);
    }
    load(e, t, n, i) {
        e === void 0 && (e = ''),
            this.path !== void 0 && (e = this.path + e),
            (e = this.manager.resolveURL(e));
        const s = _u.get(e);
        if (s !== void 0)
            return (
                this.manager.itemStart(e),
                setTimeout(() => {
                    t && t(s), this.manager.itemEnd(e);
                }, 0),
                s
            );
        if (du[e] !== void 0) {
            du[e].push({ onLoad: t, onProgress: n, onError: i });
            return;
        }
        (du[e] = []), du[e].push({ onLoad: t, onProgress: n, onError: i });
        const o = new Request(e, {
                headers: new Headers(this.requestHeader),
                credentials: this.withCredentials ? 'include' : 'same-origin',
            }),
            a = this.mimeType,
            l = this.responseType;
        fetch(o)
            .then((u) => {
                if (u.status === 200 || u.status === 0) {
                    if (
                        (u.status === 0 &&
                            console.warn(
                                'THREE.FileLoader: HTTP Status 0 received.'
                            ),
                        typeof ReadableStream > 'u' ||
                            u.body === void 0 ||
                            u.body.getReader === void 0)
                    )
                        return u;
                    const f = du[e],
                        d = u.body.getReader(),
                        m =
                            u.headers.get('X-File-Size') ||
                            u.headers.get('Content-Length'),
                        v = m ? parseInt(m) : 0,
                        _ = v !== 0;
                    let S = 0;
                    const w = new ReadableStream({
                        start(x) {
                            A();
                            function A() {
                                d.read().then(
                                    ({ done: T, value: b }) => {
                                        if (T) x.close();
                                        else {
                                            S += b.byteLength;
                                            const P = new ProgressEvent(
                                                'progress',
                                                {
                                                    lengthComputable: _,
                                                    loaded: S,
                                                    total: v,
                                                }
                                            );
                                            for (
                                                let L = 0, D = f.length;
                                                L < D;
                                                L++
                                            ) {
                                                const O = f[L];
                                                O.onProgress && O.onProgress(P);
                                            }
                                            x.enqueue(b), A();
                                        }
                                    },
                                    (T) => {
                                        x.error(T);
                                    }
                                );
                            }
                        },
                    });
                    return new Response(w);
                } else
                    throw new DX(
                        `fetch for "${u.url}" responded with ${u.status}: ${u.statusText}`,
                        u
                    );
            })
            .then((u) => {
                switch (l) {
                    case 'arraybuffer':
                        return u.arrayBuffer();
                    case 'blob':
                        return u.blob();
                    case 'document':
                        return u
                            .text()
                            .then((f) => new DOMParser().parseFromString(f, a));
                    case 'json':
                        return u.json();
                    default:
                        if (a === void 0) return u.text();
                        {
                            const d = /charset="?([^;"\s]*)"?/i.exec(a),
                                m = d && d[1] ? d[1].toLowerCase() : void 0,
                                v = new TextDecoder(m);
                            return u.arrayBuffer().then((_) => v.decode(_));
                        }
                }
            })
            .then((u) => {
                _u.add(e, u);
                const f = du[e];
                delete du[e];
                for (let d = 0, m = f.length; d < m; d++) {
                    const v = f[d];
                    v.onLoad && v.onLoad(u);
                }
            })
            .catch((u) => {
                const f = du[e];
                if (f === void 0) throw (this.manager.itemError(e), u);
                delete du[e];
                for (let d = 0, m = f.length; d < m; d++) {
                    const v = f[d];
                    v.onError && v.onError(u);
                }
                this.manager.itemError(e);
            })
            .finally(() => {
                this.manager.itemEnd(e);
            }),
            this.manager.itemStart(e);
    }
    setResponseType(e) {
        return (this.responseType = e), this;
    }
    setMimeType(e) {
        return (this.mimeType = e), this;
    }
}
class OX extends Ns {
    constructor(e) {
        super(e);
    }
    load(e, t, n, i) {
        const s = this,
            o = new Po(this.manager);
        o.setPath(this.path),
            o.setRequestHeader(this.requestHeader),
            o.setWithCredentials(this.withCredentials),
            o.load(
                e,
                function (a) {
                    try {
                        t(s.parse(JSON.parse(a)));
                    } catch (l) {
                        i ? i(l) : console.error(l), s.manager.itemError(e);
                    }
                },
                n,
                i
            );
    }
    parse(e) {
        const t = [];
        for (let n = 0; n < e.length; n++) {
            const i = P0.parse(e[n]);
            t.push(i);
        }
        return t;
    }
}
class UX extends Ns {
    constructor(e) {
        super(e);
    }
    load(e, t, n, i) {
        const s = this,
            o = [],
            a = new $x(),
            l = new Po(this.manager);
        l.setPath(this.path),
            l.setResponseType('arraybuffer'),
            l.setRequestHeader(this.requestHeader),
            l.setWithCredentials(s.withCredentials);
        let u = 0;
        function f(d) {
            l.load(
                e[d],
                function (m) {
                    const v = s.parse(m, !0);
                    (o[d] = {
                        width: v.width,
                        height: v.height,
                        format: v.format,
                        mipmaps: v.mipmaps,
                    }),
                        (u += 1),
                        u === 6 &&
                            (v.mipmapCount === 1 && (a.minFilter = Cn),
                            (a.image = o),
                            (a.format = v.format),
                            (a.needsUpdate = !0),
                            t && t(a));
                },
                n,
                i
            );
        }
        if (Array.isArray(e)) for (let d = 0, m = e.length; d < m; ++d) f(d);
        else
            l.load(
                e,
                function (d) {
                    const m = s.parse(d, !0);
                    if (m.isCubemap) {
                        const v = m.mipmaps.length / m.mipmapCount;
                        for (let _ = 0; _ < v; _++) {
                            o[_] = { mipmaps: [] };
                            for (let S = 0; S < m.mipmapCount; S++)
                                o[_].mipmaps.push(
                                    m.mipmaps[_ * m.mipmapCount + S]
                                ),
                                    (o[_].format = m.format),
                                    (o[_].width = m.width),
                                    (o[_].height = m.height);
                        }
                        a.image = o;
                    } else
                        (a.image.width = m.width),
                            (a.image.height = m.height),
                            (a.mipmaps = m.mipmaps);
                    m.mipmapCount === 1 && (a.minFilter = Cn),
                        (a.format = m.format),
                        (a.needsUpdate = !0),
                        t && t(a);
                },
                n,
                i
            );
        return a;
    }
}
class L0 extends Ns {
    constructor(e) {
        super(e);
    }
    load(e, t, n, i) {
        this.path !== void 0 && (e = this.path + e),
            (e = this.manager.resolveURL(e));
        const s = this,
            o = _u.get(e);
        if (o !== void 0)
            return (
                s.manager.itemStart(e),
                setTimeout(function () {
                    t && t(o), s.manager.itemEnd(e);
                }, 0),
                o
            );
        const a = M0('img');
        function l() {
            f(), _u.add(e, this), t && t(this), s.manager.itemEnd(e);
        }
        function u(d) {
            f(), i && i(d), s.manager.itemError(e), s.manager.itemEnd(e);
        }
        function f() {
            a.removeEventListener('load', l, !1),
                a.removeEventListener('error', u, !1);
        }
        return (
            a.addEventListener('load', l, !1),
            a.addEventListener('error', u, !1),
            e.slice(0, 5) !== 'data:' &&
                this.crossOrigin !== void 0 &&
                (a.crossOrigin = this.crossOrigin),
            s.manager.itemStart(e),
            (a.src = e),
            a
        );
    }
}
class oU extends Ns {
    constructor(e) {
        super(e);
    }
    load(e, t, n, i) {
        const s = new q0();
        s.colorSpace = Mo;
        const o = new L0(this.manager);
        o.setCrossOrigin(this.crossOrigin), o.setPath(this.path);
        let a = 0;
        function l(u) {
            o.load(
                e[u],
                function (f) {
                    (s.images[u] = f),
                        a++,
                        a === 6 && ((s.needsUpdate = !0), t && t(s));
                },
                void 0,
                i
            );
        }
        for (let u = 0; u < e.length; ++u) l(u);
        return s;
    }
}
class YT extends Ns {
    constructor(e) {
        super(e);
    }
    load(e, t, n, i) {
        const s = this,
            o = new Va(),
            a = new Po(this.manager);
        return (
            a.setResponseType('arraybuffer'),
            a.setRequestHeader(this.requestHeader),
            a.setPath(this.path),
            a.setWithCredentials(s.withCredentials),
            a.load(
                e,
                function (l) {
                    let u;
                    try {
                        u = s.parse(l);
                    } catch (f) {
                        if (i !== void 0) i(f);
                        else {
                            console.error(f);
                            return;
                        }
                    }
                    u.image !== void 0
                        ? (o.image = u.image)
                        : u.data !== void 0 &&
                          ((o.image.width = u.width),
                          (o.image.height = u.height),
                          (o.image.data = u.data)),
                        (o.wrapS = u.wrapS !== void 0 ? u.wrapS : pr),
                        (o.wrapT = u.wrapT !== void 0 ? u.wrapT : pr),
                        (o.magFilter =
                            u.magFilter !== void 0 ? u.magFilter : Cn),
                        (o.minFilter =
                            u.minFilter !== void 0 ? u.minFilter : Cn),
                        (o.anisotropy =
                            u.anisotropy !== void 0 ? u.anisotropy : 1),
                        u.colorSpace !== void 0 &&
                            (o.colorSpace = u.colorSpace),
                        u.flipY !== void 0 && (o.flipY = u.flipY),
                        u.format !== void 0 && (o.format = u.format),
                        u.type !== void 0 && (o.type = u.type),
                        u.mipmaps !== void 0 &&
                            ((o.mipmaps = u.mipmaps), (o.minFilter = za)),
                        u.mipmapCount === 1 && (o.minFilter = Cn),
                        u.generateMipmaps !== void 0 &&
                            (o.generateMipmaps = u.generateMipmaps),
                        (o.needsUpdate = !0),
                        t && t(o, u);
                },
                n,
                i
            ),
            o
        );
    }
}
class nv extends Ns {
    constructor(e) {
        super(e);
    }
    load(e, t, n, i) {
        const s = new Vn(),
            o = new L0(this.manager);
        return (
            o.setCrossOrigin(this.crossOrigin),
            o.setPath(this.path),
            o.load(
                e,
                function (a) {
                    (s.image = a), (s.needsUpdate = !0), t !== void 0 && t(s);
                },
                n,
                i
            ),
            s
        );
    }
}
class Hc extends In {
    constructor(e, t = 1) {
        super(),
            (this.isLight = !0),
            (this.type = 'Light'),
            (this.color = new Tt(e)),
            (this.intensity = t);
    }
    dispose() {}
    copy(e, t) {
        return (
            super.copy(e, t),
            this.color.copy(e.color),
            (this.intensity = e.intensity),
            this
        );
    }
    toJSON(e) {
        const t = super.toJSON(e);
        return (
            (t.object.color = this.color.getHex()),
            (t.object.intensity = this.intensity),
            this.groundColor !== void 0 &&
                (t.object.groundColor = this.groundColor.getHex()),
            this.distance !== void 0 && (t.object.distance = this.distance),
            this.angle !== void 0 && (t.object.angle = this.angle),
            this.decay !== void 0 && (t.object.decay = this.decay),
            this.penumbra !== void 0 && (t.object.penumbra = this.penumbra),
            this.shadow !== void 0 && (t.object.shadow = this.shadow.toJSON()),
            this.target !== void 0 && (t.object.target = this.target.uuid),
            t
        );
    }
}
class aU extends Hc {
    constructor(e, t, n) {
        super(e, n),
            (this.isHemisphereLight = !0),
            (this.type = 'HemisphereLight'),
            this.position.copy(In.DEFAULT_UP),
            this.updateMatrix(),
            (this.groundColor = new Tt(t));
    }
    copy(e, t) {
        return super.copy(e, t), this.groundColor.copy(e.groundColor), this;
    }
}
const nw = new qt(),
    Q2 = new re(),
    eR = new re();
class qT {
    constructor(e) {
        (this.camera = e),
            (this.intensity = 1),
            (this.bias = 0),
            (this.normalBias = 0),
            (this.radius = 1),
            (this.blurSamples = 8),
            (this.mapSize = new tt(512, 512)),
            (this.map = null),
            (this.mapPass = null),
            (this.matrix = new qt()),
            (this.autoUpdate = !0),
            (this.needsUpdate = !1),
            (this._frustum = new K0()),
            (this._frameExtents = new tt(1, 1)),
            (this._viewportCount = 1),
            (this._viewports = [new En(0, 0, 1, 1)]);
    }
    getViewportCount() {
        return this._viewportCount;
    }
    getFrustum() {
        return this._frustum;
    }
    updateMatrices(e) {
        const t = this.camera,
            n = this.matrix;
        Q2.setFromMatrixPosition(e.matrixWorld),
            t.position.copy(Q2),
            eR.setFromMatrixPosition(e.target.matrixWorld),
            t.lookAt(eR),
            t.updateMatrixWorld(),
            nw.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse),
            this._frustum.setFromProjectionMatrix(nw),
            n.set(0.5, 0, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0, 0.5, 0.5, 0, 0, 0, 1),
            n.multiply(nw);
    }
    getViewport(e) {
        return this._viewports[e];
    }
    getFrameExtents() {
        return this._frameExtents;
    }
    dispose() {
        this.map && this.map.dispose(), this.mapPass && this.mapPass.dispose();
    }
    copy(e) {
        return (
            (this.camera = e.camera.clone()),
            (this.intensity = e.intensity),
            (this.bias = e.bias),
            (this.radius = e.radius),
            this.mapSize.copy(e.mapSize),
            this
        );
    }
    clone() {
        return new this.constructor().copy(this);
    }
    toJSON() {
        const e = {};
        return (
            this.intensity !== 1 && (e.intensity = this.intensity),
            this.bias !== 0 && (e.bias = this.bias),
            this.normalBias !== 0 && (e.normalBias = this.normalBias),
            this.radius !== 1 && (e.radius = this.radius),
            (this.mapSize.x !== 512 || this.mapSize.y !== 512) &&
                (e.mapSize = this.mapSize.toArray()),
            (e.camera = this.camera.toJSON(!1).object),
            delete e.camera.matrix,
            e
        );
    }
}
class kX extends qT {
    constructor() {
        super(new Nr(50, 1, 0.5, 500)),
            (this.isSpotLightShadow = !0),
            (this.focus = 1);
    }
    updateMatrices(e) {
        const t = this.camera,
            n = Lp * 2 * e.angle * this.focus,
            i = this.mapSize.width / this.mapSize.height,
            s = e.distance || t.far;
        (n !== t.fov || i !== t.aspect || s !== t.far) &&
            ((t.fov = n),
            (t.aspect = i),
            (t.far = s),
            t.updateProjectionMatrix()),
            super.updateMatrices(e);
    }
    copy(e) {
        return super.copy(e), (this.focus = e.focus), this;
    }
}
class lU extends Hc {
    constructor(e, t, n = 0, i = Math.PI / 3, s = 0, o = 2) {
        super(e, t),
            (this.isSpotLight = !0),
            (this.type = 'SpotLight'),
            this.position.copy(In.DEFAULT_UP),
            this.updateMatrix(),
            (this.target = new In()),
            (this.distance = n),
            (this.angle = i),
            (this.penumbra = s),
            (this.decay = o),
            (this.map = null),
            (this.shadow = new kX());
    }
    get power() {
        return this.intensity * Math.PI;
    }
    set power(e) {
        this.intensity = e / Math.PI;
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e, t) {
        return (
            super.copy(e, t),
            (this.distance = e.distance),
            (this.angle = e.angle),
            (this.penumbra = e.penumbra),
            (this.decay = e.decay),
            (this.target = e.target.clone()),
            (this.shadow = e.shadow.clone()),
            this
        );
    }
}
const tR = new qt(),
    ng = new re(),
    iw = new re();
class NX extends qT {
    constructor() {
        super(new Nr(90, 1, 0.5, 500)),
            (this.isPointLightShadow = !0),
            (this._frameExtents = new tt(4, 2)),
            (this._viewportCount = 6),
            (this._viewports = [
                new En(2, 1, 1, 1),
                new En(0, 1, 1, 1),
                new En(3, 1, 1, 1),
                new En(1, 1, 1, 1),
                new En(3, 0, 1, 1),
                new En(1, 0, 1, 1),
            ]),
            (this._cubeDirections = [
                new re(1, 0, 0),
                new re(-1, 0, 0),
                new re(0, 0, 1),
                new re(0, 0, -1),
                new re(0, 1, 0),
                new re(0, -1, 0),
            ]),
            (this._cubeUps = [
                new re(0, 1, 0),
                new re(0, 1, 0),
                new re(0, 1, 0),
                new re(0, 1, 0),
                new re(0, 0, 1),
                new re(0, 0, -1),
            ]);
    }
    updateMatrices(e, t = 0) {
        const n = this.camera,
            i = this.matrix,
            s = e.distance || n.far;
        s !== n.far && ((n.far = s), n.updateProjectionMatrix()),
            ng.setFromMatrixPosition(e.matrixWorld),
            n.position.copy(ng),
            iw.copy(n.position),
            iw.add(this._cubeDirections[t]),
            n.up.copy(this._cubeUps[t]),
            n.lookAt(iw),
            n.updateMatrixWorld(),
            i.makeTranslation(-ng.x, -ng.y, -ng.z),
            tR.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse),
            this._frustum.setFromProjectionMatrix(tR);
    }
}
class uU extends Hc {
    constructor(e, t, n = 0, i = 2) {
        super(e, t),
            (this.isPointLight = !0),
            (this.type = 'PointLight'),
            (this.distance = n),
            (this.decay = i),
            (this.shadow = new NX());
    }
    get power() {
        return this.intensity * 4 * Math.PI;
    }
    set power(e) {
        this.intensity = e / (4 * Math.PI);
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e, t) {
        return (
            super.copy(e, t),
            (this.distance = e.distance),
            (this.decay = e.decay),
            (this.shadow = e.shadow.clone()),
            this
        );
    }
}
class FX extends qT {
    constructor() {
        super(new zc(-5, 5, 5, -5, 0.5, 500)),
            (this.isDirectionalLightShadow = !0);
    }
}
class cU extends Hc {
    constructor(e, t) {
        super(e, t),
            (this.isDirectionalLight = !0),
            (this.type = 'DirectionalLight'),
            this.position.copy(In.DEFAULT_UP),
            this.updateMatrix(),
            (this.target = new In()),
            (this.shadow = new FX());
    }
    dispose() {
        this.shadow.dispose();
    }
    copy(e) {
        return (
            super.copy(e),
            (this.target = e.target.clone()),
            (this.shadow = e.shadow.clone()),
            this
        );
    }
}
class fU extends Hc {
    constructor(e, t) {
        super(e, t), (this.isAmbientLight = !0), (this.type = 'AmbientLight');
    }
}
class hU extends Hc {
    constructor(e, t, n = 10, i = 10) {
        super(e, t),
            (this.isRectAreaLight = !0),
            (this.type = 'RectAreaLight'),
            (this.width = n),
            (this.height = i);
    }
    get power() {
        return this.intensity * this.width * this.height * Math.PI;
    }
    set power(e) {
        this.intensity = e / (this.width * this.height * Math.PI);
    }
    copy(e) {
        return (
            super.copy(e),
            (this.width = e.width),
            (this.height = e.height),
            this
        );
    }
    toJSON(e) {
        const t = super.toJSON(e);
        return (
            (t.object.width = this.width), (t.object.height = this.height), t
        );
    }
}
class dU {
    constructor() {
        (this.isSphericalHarmonics3 = !0), (this.coefficients = []);
        for (let e = 0; e < 9; e++) this.coefficients.push(new re());
    }
    set(e) {
        for (let t = 0; t < 9; t++) this.coefficients[t].copy(e[t]);
        return this;
    }
    zero() {
        for (let e = 0; e < 9; e++) this.coefficients[e].set(0, 0, 0);
        return this;
    }
    getAt(e, t) {
        const n = e.x,
            i = e.y,
            s = e.z,
            o = this.coefficients;
        return (
            t.copy(o[0]).multiplyScalar(0.282095),
            t.addScaledVector(o[1], 0.488603 * i),
            t.addScaledVector(o[2], 0.488603 * s),
            t.addScaledVector(o[3], 0.488603 * n),
            t.addScaledVector(o[4], 1.092548 * (n * i)),
            t.addScaledVector(o[5], 1.092548 * (i * s)),
            t.addScaledVector(o[6], 0.315392 * (3 * s * s - 1)),
            t.addScaledVector(o[7], 1.092548 * (n * s)),
            t.addScaledVector(o[8], 0.546274 * (n * n - i * i)),
            t
        );
    }
    getIrradianceAt(e, t) {
        const n = e.x,
            i = e.y,
            s = e.z,
            o = this.coefficients;
        return (
            t.copy(o[0]).multiplyScalar(0.886227),
            t.addScaledVector(o[1], 2 * 0.511664 * i),
            t.addScaledVector(o[2], 2 * 0.511664 * s),
            t.addScaledVector(o[3], 2 * 0.511664 * n),
            t.addScaledVector(o[4], 2 * 0.429043 * n * i),
            t.addScaledVector(o[5], 2 * 0.429043 * i * s),
            t.addScaledVector(o[6], 0.743125 * s * s - 0.247708),
            t.addScaledVector(o[7], 2 * 0.429043 * n * s),
            t.addScaledVector(o[8], 0.429043 * (n * n - i * i)),
            t
        );
    }
    add(e) {
        for (let t = 0; t < 9; t++) this.coefficients[t].add(e.coefficients[t]);
        return this;
    }
    addScaledSH(e, t) {
        for (let n = 0; n < 9; n++)
            this.coefficients[n].addScaledVector(e.coefficients[n], t);
        return this;
    }
    scale(e) {
        for (let t = 0; t < 9; t++) this.coefficients[t].multiplyScalar(e);
        return this;
    }
    lerp(e, t) {
        for (let n = 0; n < 9; n++)
            this.coefficients[n].lerp(e.coefficients[n], t);
        return this;
    }
    equals(e) {
        for (let t = 0; t < 9; t++)
            if (!this.coefficients[t].equals(e.coefficients[t])) return !1;
        return !0;
    }
    copy(e) {
        return this.set(e.coefficients);
    }
    clone() {
        return new this.constructor().copy(this);
    }
    fromArray(e, t = 0) {
        const n = this.coefficients;
        for (let i = 0; i < 9; i++) n[i].fromArray(e, t + i * 3);
        return this;
    }
    toArray(e = [], t = 0) {
        const n = this.coefficients;
        for (let i = 0; i < 9; i++) n[i].toArray(e, t + i * 3);
        return e;
    }
    static getBasisAt(e, t) {
        const n = e.x,
            i = e.y,
            s = e.z;
        (t[0] = 0.282095),
            (t[1] = 0.488603 * i),
            (t[2] = 0.488603 * s),
            (t[3] = 0.488603 * n),
            (t[4] = 1.092548 * n * i),
            (t[5] = 1.092548 * i * s),
            (t[6] = 0.315392 * (3 * s * s - 1)),
            (t[7] = 1.092548 * n * s),
            (t[8] = 0.546274 * (n * n - i * i));
    }
}
class pU extends Hc {
    constructor(e = new dU(), t = 1) {
        super(void 0, t), (this.isLightProbe = !0), (this.sh = e);
    }
    copy(e) {
        return super.copy(e), this.sh.copy(e.sh), this;
    }
    fromJSON(e) {
        return (this.intensity = e.intensity), this.sh.fromArray(e.sh), this;
    }
    toJSON(e) {
        const t = super.toJSON(e);
        return (t.object.sh = this.sh.toArray()), t;
    }
}
class h1 extends Ns {
    constructor(e) {
        super(e), (this.textures = {});
    }
    load(e, t, n, i) {
        const s = this,
            o = new Po(s.manager);
        o.setPath(s.path),
            o.setRequestHeader(s.requestHeader),
            o.setWithCredentials(s.withCredentials),
            o.load(
                e,
                function (a) {
                    try {
                        t(s.parse(JSON.parse(a)));
                    } catch (l) {
                        i ? i(l) : console.error(l), s.manager.itemError(e);
                    }
                },
                n,
                i
            );
    }
    parse(e) {
        const t = this.textures;
        function n(s) {
            return (
                t[s] === void 0 &&
                    console.warn('THREE.MaterialLoader: Undefined texture', s),
                t[s]
            );
        }
        const i = h1.createMaterialFromType(e.type);
        if (
            (e.uuid !== void 0 && (i.uuid = e.uuid),
            e.name !== void 0 && (i.name = e.name),
            e.color !== void 0 && i.color !== void 0 && i.color.setHex(e.color),
            e.roughness !== void 0 && (i.roughness = e.roughness),
            e.metalness !== void 0 && (i.metalness = e.metalness),
            e.sheen !== void 0 && (i.sheen = e.sheen),
            e.sheenColor !== void 0 &&
                (i.sheenColor = new Tt().setHex(e.sheenColor)),
            e.sheenRoughness !== void 0 &&
                (i.sheenRoughness = e.sheenRoughness),
            e.emissive !== void 0 &&
                i.emissive !== void 0 &&
                i.emissive.setHex(e.emissive),
            e.specular !== void 0 &&
                i.specular !== void 0 &&
                i.specular.setHex(e.specular),
            e.specularIntensity !== void 0 &&
                (i.specularIntensity = e.specularIntensity),
            e.specularColor !== void 0 &&
                i.specularColor !== void 0 &&
                i.specularColor.setHex(e.specularColor),
            e.shininess !== void 0 && (i.shininess = e.shininess),
            e.clearcoat !== void 0 && (i.clearcoat = e.clearcoat),
            e.clearcoatRoughness !== void 0 &&
                (i.clearcoatRoughness = e.clearcoatRoughness),
            e.dispersion !== void 0 && (i.dispersion = e.dispersion),
            e.iridescence !== void 0 && (i.iridescence = e.iridescence),
            e.iridescenceIOR !== void 0 &&
                (i.iridescenceIOR = e.iridescenceIOR),
            e.iridescenceThicknessRange !== void 0 &&
                (i.iridescenceThicknessRange = e.iridescenceThicknessRange),
            e.transmission !== void 0 && (i.transmission = e.transmission),
            e.thickness !== void 0 && (i.thickness = e.thickness),
            e.attenuationDistance !== void 0 &&
                (i.attenuationDistance = e.attenuationDistance),
            e.attenuationColor !== void 0 &&
                i.attenuationColor !== void 0 &&
                i.attenuationColor.setHex(e.attenuationColor),
            e.anisotropy !== void 0 && (i.anisotropy = e.anisotropy),
            e.anisotropyRotation !== void 0 &&
                (i.anisotropyRotation = e.anisotropyRotation),
            e.fog !== void 0 && (i.fog = e.fog),
            e.flatShading !== void 0 && (i.flatShading = e.flatShading),
            e.blending !== void 0 && (i.blending = e.blending),
            e.combine !== void 0 && (i.combine = e.combine),
            e.side !== void 0 && (i.side = e.side),
            e.shadowSide !== void 0 && (i.shadowSide = e.shadowSide),
            e.opacity !== void 0 && (i.opacity = e.opacity),
            e.transparent !== void 0 && (i.transparent = e.transparent),
            e.alphaTest !== void 0 && (i.alphaTest = e.alphaTest),
            e.alphaHash !== void 0 && (i.alphaHash = e.alphaHash),
            e.depthFunc !== void 0 && (i.depthFunc = e.depthFunc),
            e.depthTest !== void 0 && (i.depthTest = e.depthTest),
            e.depthWrite !== void 0 && (i.depthWrite = e.depthWrite),
            e.colorWrite !== void 0 && (i.colorWrite = e.colorWrite),
            e.blendSrc !== void 0 && (i.blendSrc = e.blendSrc),
            e.blendDst !== void 0 && (i.blendDst = e.blendDst),
            e.blendEquation !== void 0 && (i.blendEquation = e.blendEquation),
            e.blendSrcAlpha !== void 0 && (i.blendSrcAlpha = e.blendSrcAlpha),
            e.blendDstAlpha !== void 0 && (i.blendDstAlpha = e.blendDstAlpha),
            e.blendEquationAlpha !== void 0 &&
                (i.blendEquationAlpha = e.blendEquationAlpha),
            e.blendColor !== void 0 &&
                i.blendColor !== void 0 &&
                i.blendColor.setHex(e.blendColor),
            e.blendAlpha !== void 0 && (i.blendAlpha = e.blendAlpha),
            e.stencilWriteMask !== void 0 &&
                (i.stencilWriteMask = e.stencilWriteMask),
            e.stencilFunc !== void 0 && (i.stencilFunc = e.stencilFunc),
            e.stencilRef !== void 0 && (i.stencilRef = e.stencilRef),
            e.stencilFuncMask !== void 0 &&
                (i.stencilFuncMask = e.stencilFuncMask),
            e.stencilFail !== void 0 && (i.stencilFail = e.stencilFail),
            e.stencilZFail !== void 0 && (i.stencilZFail = e.stencilZFail),
            e.stencilZPass !== void 0 && (i.stencilZPass = e.stencilZPass),
            e.stencilWrite !== void 0 && (i.stencilWrite = e.stencilWrite),
            e.wireframe !== void 0 && (i.wireframe = e.wireframe),
            e.wireframeLinewidth !== void 0 &&
                (i.wireframeLinewidth = e.wireframeLinewidth),
            e.wireframeLinecap !== void 0 &&
                (i.wireframeLinecap = e.wireframeLinecap),
            e.wireframeLinejoin !== void 0 &&
                (i.wireframeLinejoin = e.wireframeLinejoin),
            e.rotation !== void 0 && (i.rotation = e.rotation),
            e.linewidth !== void 0 && (i.linewidth = e.linewidth),
            e.dashSize !== void 0 && (i.dashSize = e.dashSize),
            e.gapSize !== void 0 && (i.gapSize = e.gapSize),
            e.scale !== void 0 && (i.scale = e.scale),
            e.polygonOffset !== void 0 && (i.polygonOffset = e.polygonOffset),
            e.polygonOffsetFactor !== void 0 &&
                (i.polygonOffsetFactor = e.polygonOffsetFactor),
            e.polygonOffsetUnits !== void 0 &&
                (i.polygonOffsetUnits = e.polygonOffsetUnits),
            e.dithering !== void 0 && (i.dithering = e.dithering),
            e.alphaToCoverage !== void 0 &&
                (i.alphaToCoverage = e.alphaToCoverage),
            e.premultipliedAlpha !== void 0 &&
                (i.premultipliedAlpha = e.premultipliedAlpha),
            e.forceSinglePass !== void 0 &&
                (i.forceSinglePass = e.forceSinglePass),
            e.visible !== void 0 && (i.visible = e.visible),
            e.toneMapped !== void 0 && (i.toneMapped = e.toneMapped),
            e.userData !== void 0 && (i.userData = e.userData),
            e.vertexColors !== void 0 &&
                (typeof e.vertexColors == 'number'
                    ? (i.vertexColors = e.vertexColors > 0)
                    : (i.vertexColors = e.vertexColors)),
            e.uniforms !== void 0)
        )
            for (const s in e.uniforms) {
                const o = e.uniforms[s];
                switch (((i.uniforms[s] = {}), o.type)) {
                    case 't':
                        i.uniforms[s].value = n(o.value);
                        break;
                    case 'c':
                        i.uniforms[s].value = new Tt().setHex(o.value);
                        break;
                    case 'v2':
                        i.uniforms[s].value = new tt().fromArray(o.value);
                        break;
                    case 'v3':
                        i.uniforms[s].value = new re().fromArray(o.value);
                        break;
                    case 'v4':
                        i.uniforms[s].value = new En().fromArray(o.value);
                        break;
                    case 'm3':
                        i.uniforms[s].value = new pn().fromArray(o.value);
                        break;
                    case 'm4':
                        i.uniforms[s].value = new qt().fromArray(o.value);
                        break;
                    default:
                        i.uniforms[s].value = o.value;
                }
            }
        if (
            (e.defines !== void 0 && (i.defines = e.defines),
            e.vertexShader !== void 0 && (i.vertexShader = e.vertexShader),
            e.fragmentShader !== void 0 &&
                (i.fragmentShader = e.fragmentShader),
            e.glslVersion !== void 0 && (i.glslVersion = e.glslVersion),
            e.extensions !== void 0)
        )
            for (const s in e.extensions) i.extensions[s] = e.extensions[s];
        if (
            (e.lights !== void 0 && (i.lights = e.lights),
            e.clipping !== void 0 && (i.clipping = e.clipping),
            e.size !== void 0 && (i.size = e.size),
            e.sizeAttenuation !== void 0 &&
                (i.sizeAttenuation = e.sizeAttenuation),
            e.map !== void 0 && (i.map = n(e.map)),
            e.matcap !== void 0 && (i.matcap = n(e.matcap)),
            e.alphaMap !== void 0 && (i.alphaMap = n(e.alphaMap)),
            e.bumpMap !== void 0 && (i.bumpMap = n(e.bumpMap)),
            e.bumpScale !== void 0 && (i.bumpScale = e.bumpScale),
            e.normalMap !== void 0 && (i.normalMap = n(e.normalMap)),
            e.normalMapType !== void 0 && (i.normalMapType = e.normalMapType),
            e.normalScale !== void 0)
        ) {
            let s = e.normalScale;
            Array.isArray(s) === !1 && (s = [s, s]),
                (i.normalScale = new tt().fromArray(s));
        }
        return (
            e.displacementMap !== void 0 &&
                (i.displacementMap = n(e.displacementMap)),
            e.displacementScale !== void 0 &&
                (i.displacementScale = e.displacementScale),
            e.displacementBias !== void 0 &&
                (i.displacementBias = e.displacementBias),
            e.roughnessMap !== void 0 && (i.roughnessMap = n(e.roughnessMap)),
            e.metalnessMap !== void 0 && (i.metalnessMap = n(e.metalnessMap)),
            e.emissiveMap !== void 0 && (i.emissiveMap = n(e.emissiveMap)),
            e.emissiveIntensity !== void 0 &&
                (i.emissiveIntensity = e.emissiveIntensity),
            e.specularMap !== void 0 && (i.specularMap = n(e.specularMap)),
            e.specularIntensityMap !== void 0 &&
                (i.specularIntensityMap = n(e.specularIntensityMap)),
            e.specularColorMap !== void 0 &&
                (i.specularColorMap = n(e.specularColorMap)),
            e.envMap !== void 0 && (i.envMap = n(e.envMap)),
            e.envMapRotation !== void 0 &&
                i.envMapRotation.fromArray(e.envMapRotation),
            e.envMapIntensity !== void 0 &&
                (i.envMapIntensity = e.envMapIntensity),
            e.reflectivity !== void 0 && (i.reflectivity = e.reflectivity),
            e.refractionRatio !== void 0 &&
                (i.refractionRatio = e.refractionRatio),
            e.lightMap !== void 0 && (i.lightMap = n(e.lightMap)),
            e.lightMapIntensity !== void 0 &&
                (i.lightMapIntensity = e.lightMapIntensity),
            e.aoMap !== void 0 && (i.aoMap = n(e.aoMap)),
            e.aoMapIntensity !== void 0 &&
                (i.aoMapIntensity = e.aoMapIntensity),
            e.gradientMap !== void 0 && (i.gradientMap = n(e.gradientMap)),
            e.clearcoatMap !== void 0 && (i.clearcoatMap = n(e.clearcoatMap)),
            e.clearcoatRoughnessMap !== void 0 &&
                (i.clearcoatRoughnessMap = n(e.clearcoatRoughnessMap)),
            e.clearcoatNormalMap !== void 0 &&
                (i.clearcoatNormalMap = n(e.clearcoatNormalMap)),
            e.clearcoatNormalScale !== void 0 &&
                (i.clearcoatNormalScale = new tt().fromArray(
                    e.clearcoatNormalScale
                )),
            e.iridescenceMap !== void 0 &&
                (i.iridescenceMap = n(e.iridescenceMap)),
            e.iridescenceThicknessMap !== void 0 &&
                (i.iridescenceThicknessMap = n(e.iridescenceThicknessMap)),
            e.transmissionMap !== void 0 &&
                (i.transmissionMap = n(e.transmissionMap)),
            e.thicknessMap !== void 0 && (i.thicknessMap = n(e.thicknessMap)),
            e.anisotropyMap !== void 0 &&
                (i.anisotropyMap = n(e.anisotropyMap)),
            e.sheenColorMap !== void 0 &&
                (i.sheenColorMap = n(e.sheenColorMap)),
            e.sheenRoughnessMap !== void 0 &&
                (i.sheenRoughnessMap = n(e.sheenRoughnessMap)),
            i
        );
    }
    setTextures(e) {
        return (this.textures = e), this;
    }
    static createMaterialFromType(e) {
        const t = {
            ShadowMaterial: jO,
            SpriteMaterial: OT,
            RawShaderMaterial: XO,
            ShaderMaterial: Qi,
            PointsMaterial: kT,
            MeshPhysicalMaterial: YO,
            MeshStandardMaterial: GT,
            MeshPhongMaterial: qO,
            MeshToonMaterial: KO,
            MeshNormalMaterial: ZO,
            MeshLambertMaterial: $O,
            MeshDepthMaterial: jx,
            MeshDistanceMaterial: Xx,
            MeshBasicMaterial: ja,
            MeshMatcapMaterial: JO,
            LineDashedMaterial: QO,
            LineBasicMaterial: ks,
            Material: gs,
        };
        return new t[e]();
    }
}
class NM {
    static decodeText(e) {
        if (
            (console.warn(
                'THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.'
            ),
            typeof TextDecoder < 'u')
        )
            return new TextDecoder().decode(e);
        let t = '';
        for (let n = 0, i = e.length; n < i; n++)
            t += String.fromCharCode(e[n]);
        try {
            return decodeURIComponent(escape(t));
        } catch {
            return t;
        }
    }
    static extractUrlBase(e) {
        const t = e.lastIndexOf('/');
        return t === -1 ? './' : e.slice(0, t + 1);
    }
    static resolveURL(e, t) {
        return typeof e != 'string' || e === ''
            ? ''
            : (/^https?:\/\//i.test(t) &&
                  /^\//.test(e) &&
                  (t = t.replace(/(^https?:\/\/[^\/]+).*/i, '$1')),
              /^(https?:)?\/\//i.test(e) ||
              /^data:.*,.*$/i.test(e) ||
              /^blob:.*$/i.test(e)
                  ? e
                  : t + e);
    }
}
class KT extends xn {
    constructor() {
        super(),
            (this.isInstancedBufferGeometry = !0),
            (this.type = 'InstancedBufferGeometry'),
            (this.instanceCount = 1 / 0);
    }
    copy(e) {
        return super.copy(e), (this.instanceCount = e.instanceCount), this;
    }
    toJSON() {
        const e = super.toJSON();
        return (
            (e.instanceCount = this.instanceCount),
            (e.isInstancedBufferGeometry = !0),
            e
        );
    }
}
class mU extends Ns {
    constructor(e) {
        super(e);
    }
    load(e, t, n, i) {
        const s = this,
            o = new Po(s.manager);
        o.setPath(s.path),
            o.setRequestHeader(s.requestHeader),
            o.setWithCredentials(s.withCredentials),
            o.load(
                e,
                function (a) {
                    try {
                        t(s.parse(JSON.parse(a)));
                    } catch (l) {
                        i ? i(l) : console.error(l), s.manager.itemError(e);
                    }
                },
                n,
                i
            );
    }
    parse(e) {
        const t = {},
            n = {};
        function i(v, _) {
            if (t[_] !== void 0) return t[_];
            const w = v.interleavedBuffers[_],
                x = s(v, w.buffer),
                A = ap(w.type, x),
                T = new Kx(A, w.stride);
            return (T.uuid = w.uuid), (t[_] = T), T;
        }
        function s(v, _) {
            if (n[_] !== void 0) return n[_];
            const w = v.arrayBuffers[_],
                x = new Uint32Array(w).buffer;
            return (n[_] = x), x;
        }
        const o = e.isInstancedBufferGeometry ? new KT() : new xn(),
            a = e.data.index;
        if (a !== void 0) {
            const v = ap(a.type, a.array);
            o.setIndex(new qn(v, 1));
        }
        const l = e.data.attributes;
        for (const v in l) {
            const _ = l[v];
            let S;
            if (_.isInterleavedBufferAttribute) {
                const w = i(e.data, _.data);
                S = new gh(w, _.itemSize, _.offset, _.normalized);
            } else {
                const w = ap(_.type, _.array),
                    x = _.isInstancedBufferAttribute ? vh : qn;
                S = new x(w, _.itemSize, _.normalized);
            }
            _.name !== void 0 && (S.name = _.name),
                _.usage !== void 0 && S.setUsage(_.usage),
                o.setAttribute(v, S);
        }
        const u = e.data.morphAttributes;
        if (u)
            for (const v in u) {
                const _ = u[v],
                    S = [];
                for (let w = 0, x = _.length; w < x; w++) {
                    const A = _[w];
                    let T;
                    if (A.isInterleavedBufferAttribute) {
                        const b = i(e.data, A.data);
                        T = new gh(b, A.itemSize, A.offset, A.normalized);
                    } else {
                        const b = ap(A.type, A.array);
                        T = new qn(b, A.itemSize, A.normalized);
                    }
                    A.name !== void 0 && (T.name = A.name), S.push(T);
                }
                o.morphAttributes[v] = S;
            }
        e.data.morphTargetsRelative && (o.morphTargetsRelative = !0);
        const d = e.data.groups || e.data.drawcalls || e.data.offsets;
        if (d !== void 0)
            for (let v = 0, _ = d.length; v !== _; ++v) {
                const S = d[v];
                o.addGroup(S.start, S.count, S.materialIndex);
            }
        const m = e.data.boundingSphere;
        if (m !== void 0) {
            const v = new re();
            m.center !== void 0 && v.fromArray(m.center),
                (o.boundingSphere = new Fr(v, m.radius));
        }
        return (
            e.name && (o.name = e.name),
            e.userData && (o.userData = e.userData),
            o
        );
    }
}
class BX extends Ns {
    constructor(e) {
        super(e);
    }
    load(e, t, n, i) {
        const s = this,
            o = this.path === '' ? NM.extractUrlBase(e) : this.path;
        this.resourcePath = this.resourcePath || o;
        const a = new Po(this.manager);
        a.setPath(this.path),
            a.setRequestHeader(this.requestHeader),
            a.setWithCredentials(this.withCredentials),
            a.load(
                e,
                function (l) {
                    let u = null;
                    try {
                        u = JSON.parse(l);
                    } catch (d) {
                        i !== void 0 && i(d),
                            console.error(
                                "THREE:ObjectLoader: Can't parse " + e + '.',
                                d.message
                            );
                        return;
                    }
                    const f = u.metadata;
                    if (
                        f === void 0 ||
                        f.type === void 0 ||
                        f.type.toLowerCase() === 'geometry'
                    ) {
                        i !== void 0 &&
                            i(new Error("THREE.ObjectLoader: Can't load " + e)),
                            console.error(
                                "THREE.ObjectLoader: Can't load " + e
                            );
                        return;
                    }
                    s.parse(u, t);
                },
                n,
                i
            );
    }
    async loadAsync(e, t) {
        const n = this,
            i = this.path === '' ? NM.extractUrlBase(e) : this.path;
        this.resourcePath = this.resourcePath || i;
        const s = new Po(this.manager);
        s.setPath(this.path),
            s.setRequestHeader(this.requestHeader),
            s.setWithCredentials(this.withCredentials);
        const o = await s.loadAsync(e, t),
            a = JSON.parse(o),
            l = a.metadata;
        if (
            l === void 0 ||
            l.type === void 0 ||
            l.type.toLowerCase() === 'geometry'
        )
            throw new Error("THREE.ObjectLoader: Can't load " + e);
        return await n.parseAsync(a);
    }
    parse(e, t) {
        const n = this.parseAnimations(e.animations),
            i = this.parseShapes(e.shapes),
            s = this.parseGeometries(e.geometries, i),
            o = this.parseImages(e.images, function () {
                t !== void 0 && t(u);
            }),
            a = this.parseTextures(e.textures, o),
            l = this.parseMaterials(e.materials, a),
            u = this.parseObject(e.object, s, l, a, n),
            f = this.parseSkeletons(e.skeletons, u);
        if (
            (this.bindSkeletons(u, f), this.bindLightTargets(u), t !== void 0)
        ) {
            let d = !1;
            for (const m in o)
                if (o[m].data instanceof HTMLImageElement) {
                    d = !0;
                    break;
                }
            d === !1 && t(u);
        }
        return u;
    }
    async parseAsync(e) {
        const t = this.parseAnimations(e.animations),
            n = this.parseShapes(e.shapes),
            i = this.parseGeometries(e.geometries, n),
            s = await this.parseImagesAsync(e.images),
            o = this.parseTextures(e.textures, s),
            a = this.parseMaterials(e.materials, o),
            l = this.parseObject(e.object, i, a, o, t),
            u = this.parseSkeletons(e.skeletons, l);
        return this.bindSkeletons(l, u), this.bindLightTargets(l), l;
    }
    parseShapes(e) {
        const t = {};
        if (e !== void 0)
            for (let n = 0, i = e.length; n < i; n++) {
                const s = new Ac().fromJSON(e[n]);
                t[s.uuid] = s;
            }
        return t;
    }
    parseSkeletons(e, t) {
        const n = {},
            i = {};
        if (
            (t.traverse(function (s) {
                s.isBone && (i[s.uuid] = s);
            }),
            e !== void 0)
        )
            for (let s = 0, o = e.length; s < o; s++) {
                const a = new Zx().fromJSON(e[s], i);
                n[a.uuid] = a;
            }
        return n;
    }
    parseGeometries(e, t) {
        const n = {};
        if (e !== void 0) {
            const i = new mU();
            for (let s = 0, o = e.length; s < o; s++) {
                let a;
                const l = e[s];
                switch (l.type) {
                    case 'BufferGeometry':
                    case 'InstancedBufferGeometry':
                        a = i.parse(l);
                        break;
                    default:
                        l.type in J2
                            ? (a = J2[l.type].fromJSON(l, t))
                            : console.warn(
                                  `THREE.ObjectLoader: Unsupported geometry type "${l.type}"`
                              );
                }
                (a.uuid = l.uuid),
                    l.name !== void 0 && (a.name = l.name),
                    l.userData !== void 0 && (a.userData = l.userData),
                    (n[l.uuid] = a);
            }
        }
        return n;
    }
    parseMaterials(e, t) {
        const n = {},
            i = {};
        if (e !== void 0) {
            const s = new h1();
            s.setTextures(t);
            for (let o = 0, a = e.length; o < a; o++) {
                const l = e[o];
                n[l.uuid] === void 0 && (n[l.uuid] = s.parse(l)),
                    (i[l.uuid] = n[l.uuid]);
            }
        }
        return i;
    }
    parseAnimations(e) {
        const t = {};
        if (e !== void 0)
            for (let n = 0; n < e.length; n++) {
                const i = e[n],
                    s = P0.parse(i);
                t[s.uuid] = s;
            }
        return t;
    }
    parseImages(e, t) {
        const n = this,
            i = {};
        let s;
        function o(l) {
            return (
                n.manager.itemStart(l),
                s.load(
                    l,
                    function () {
                        n.manager.itemEnd(l);
                    },
                    void 0,
                    function () {
                        n.manager.itemError(l), n.manager.itemEnd(l);
                    }
                )
            );
        }
        function a(l) {
            if (typeof l == 'string') {
                const u = l,
                    f = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(u)
                        ? u
                        : n.resourcePath + u;
                return o(f);
            } else
                return l.data
                    ? {
                          data: ap(l.type, l.data),
                          width: l.width,
                          height: l.height,
                      }
                    : null;
        }
        if (e !== void 0 && e.length > 0) {
            const l = new f1(t);
            (s = new L0(l)), s.setCrossOrigin(this.crossOrigin);
            for (let u = 0, f = e.length; u < f; u++) {
                const d = e[u],
                    m = d.url;
                if (Array.isArray(m)) {
                    const v = [];
                    for (let _ = 0, S = m.length; _ < S; _++) {
                        const w = m[_],
                            x = a(w);
                        x !== null &&
                            (x instanceof HTMLImageElement
                                ? v.push(x)
                                : v.push(new Va(x.data, x.width, x.height)));
                    }
                    i[d.uuid] = new Jf(v);
                } else {
                    const v = a(d.url);
                    i[d.uuid] = new Jf(v);
                }
            }
        }
        return i;
    }
    async parseImagesAsync(e) {
        const t = this,
            n = {};
        let i;
        async function s(o) {
            if (typeof o == 'string') {
                const a = o,
                    l = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)
                        ? a
                        : t.resourcePath + a;
                return await i.loadAsync(l);
            } else
                return o.data
                    ? {
                          data: ap(o.type, o.data),
                          width: o.width,
                          height: o.height,
                      }
                    : null;
        }
        if (e !== void 0 && e.length > 0) {
            (i = new L0(this.manager)), i.setCrossOrigin(this.crossOrigin);
            for (let o = 0, a = e.length; o < a; o++) {
                const l = e[o],
                    u = l.url;
                if (Array.isArray(u)) {
                    const f = [];
                    for (let d = 0, m = u.length; d < m; d++) {
                        const v = u[d],
                            _ = await s(v);
                        _ !== null &&
                            (_ instanceof HTMLImageElement
                                ? f.push(_)
                                : f.push(new Va(_.data, _.width, _.height)));
                    }
                    n[l.uuid] = new Jf(f);
                } else {
                    const f = await s(l.url);
                    n[l.uuid] = new Jf(f);
                }
            }
        }
        return n;
    }
    parseTextures(e, t) {
        function n(s, o) {
            return typeof s == 'number'
                ? s
                : (console.warn(
                      'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.',
                      s
                  ),
                  o[s]);
        }
        const i = {};
        if (e !== void 0)
            for (let s = 0, o = e.length; s < o; s++) {
                const a = e[s];
                a.image === void 0 &&
                    console.warn(
                        'THREE.ObjectLoader: No "image" specified for',
                        a.uuid
                    ),
                    t[a.image] === void 0 &&
                        console.warn(
                            'THREE.ObjectLoader: Undefined image',
                            a.image
                        );
                const l = t[a.image],
                    u = l.data;
                let f;
                Array.isArray(u)
                    ? ((f = new q0()), u.length === 6 && (f.needsUpdate = !0))
                    : (u && u.data ? (f = new Va()) : (f = new Vn()),
                      u && (f.needsUpdate = !0)),
                    (f.source = l),
                    (f.uuid = a.uuid),
                    a.name !== void 0 && (f.name = a.name),
                    a.mapping !== void 0 && (f.mapping = n(a.mapping, zX)),
                    a.channel !== void 0 && (f.channel = a.channel),
                    a.offset !== void 0 && f.offset.fromArray(a.offset),
                    a.repeat !== void 0 && f.repeat.fromArray(a.repeat),
                    a.center !== void 0 && f.center.fromArray(a.center),
                    a.rotation !== void 0 && (f.rotation = a.rotation),
                    a.wrap !== void 0 &&
                        ((f.wrapS = n(a.wrap[0], nR)),
                        (f.wrapT = n(a.wrap[1], nR))),
                    a.format !== void 0 && (f.format = a.format),
                    a.internalFormat !== void 0 &&
                        (f.internalFormat = a.internalFormat),
                    a.type !== void 0 && (f.type = a.type),
                    a.colorSpace !== void 0 && (f.colorSpace = a.colorSpace),
                    a.minFilter !== void 0 &&
                        (f.minFilter = n(a.minFilter, iR)),
                    a.magFilter !== void 0 &&
                        (f.magFilter = n(a.magFilter, iR)),
                    a.anisotropy !== void 0 && (f.anisotropy = a.anisotropy),
                    a.flipY !== void 0 && (f.flipY = a.flipY),
                    a.generateMipmaps !== void 0 &&
                        (f.generateMipmaps = a.generateMipmaps),
                    a.premultiplyAlpha !== void 0 &&
                        (f.premultiplyAlpha = a.premultiplyAlpha),
                    a.unpackAlignment !== void 0 &&
                        (f.unpackAlignment = a.unpackAlignment),
                    a.compareFunction !== void 0 &&
                        (f.compareFunction = a.compareFunction),
                    a.userData !== void 0 && (f.userData = a.userData),
                    (i[a.uuid] = f);
            }
        return i;
    }
    parseObject(e, t, n, i, s) {
        let o;
        function a(m) {
            return (
                t[m] === void 0 &&
                    console.warn('THREE.ObjectLoader: Undefined geometry', m),
                t[m]
            );
        }
        function l(m) {
            if (m !== void 0) {
                if (Array.isArray(m)) {
                    const v = [];
                    for (let _ = 0, S = m.length; _ < S; _++) {
                        const w = m[_];
                        n[w] === void 0 &&
                            console.warn(
                                'THREE.ObjectLoader: Undefined material',
                                w
                            ),
                            v.push(n[w]);
                    }
                    return v;
                }
                return (
                    n[m] === void 0 &&
                        console.warn(
                            'THREE.ObjectLoader: Undefined material',
                            m
                        ),
                    n[m]
                );
            }
        }
        function u(m) {
            return (
                i[m] === void 0 &&
                    console.warn('THREE.ObjectLoader: Undefined texture', m),
                i[m]
            );
        }
        let f, d;
        switch (e.type) {
            case 'Scene':
                (o = new jp()),
                    e.background !== void 0 &&
                        (Number.isInteger(e.background)
                            ? (o.background = new Tt(e.background))
                            : (o.background = u(e.background))),
                    e.environment !== void 0 &&
                        (o.environment = u(e.environment)),
                    e.fog !== void 0 &&
                        (e.fog.type === 'Fog'
                            ? (o.fog = new qx(
                                  e.fog.color,
                                  e.fog.near,
                                  e.fog.far
                              ))
                            : e.fog.type === 'FogExp2' &&
                              (o.fog = new Yx(e.fog.color, e.fog.density)),
                        e.fog.name !== '' && (o.fog.name = e.fog.name)),
                    e.backgroundBlurriness !== void 0 &&
                        (o.backgroundBlurriness = e.backgroundBlurriness),
                    e.backgroundIntensity !== void 0 &&
                        (o.backgroundIntensity = e.backgroundIntensity),
                    e.backgroundRotation !== void 0 &&
                        o.backgroundRotation.fromArray(e.backgroundRotation),
                    e.environmentIntensity !== void 0 &&
                        (o.environmentIntensity = e.environmentIntensity),
                    e.environmentRotation !== void 0 &&
                        o.environmentRotation.fromArray(e.environmentRotation);
                break;
            case 'PerspectiveCamera':
                (o = new Nr(e.fov, e.aspect, e.near, e.far)),
                    e.focus !== void 0 && (o.focus = e.focus),
                    e.zoom !== void 0 && (o.zoom = e.zoom),
                    e.filmGauge !== void 0 && (o.filmGauge = e.filmGauge),
                    e.filmOffset !== void 0 && (o.filmOffset = e.filmOffset),
                    e.view !== void 0 && (o.view = Object.assign({}, e.view));
                break;
            case 'OrthographicCamera':
                (o = new zc(e.left, e.right, e.top, e.bottom, e.near, e.far)),
                    e.zoom !== void 0 && (o.zoom = e.zoom),
                    e.view !== void 0 && (o.view = Object.assign({}, e.view));
                break;
            case 'AmbientLight':
                o = new fU(e.color, e.intensity);
                break;
            case 'DirectionalLight':
                (o = new cU(e.color, e.intensity)), (o.target = e.target || '');
                break;
            case 'PointLight':
                o = new uU(e.color, e.intensity, e.distance, e.decay);
                break;
            case 'RectAreaLight':
                o = new hU(e.color, e.intensity, e.width, e.height);
                break;
            case 'SpotLight':
                (o = new lU(
                    e.color,
                    e.intensity,
                    e.distance,
                    e.angle,
                    e.penumbra,
                    e.decay
                )),
                    (o.target = e.target || '');
                break;
            case 'HemisphereLight':
                o = new aU(e.color, e.groundColor, e.intensity);
                break;
            case 'LightProbe':
                o = new pU().fromJSON(e);
                break;
            case 'SkinnedMesh':
                (f = a(e.geometry)),
                    (d = l(e.material)),
                    (o = new PO(f, d)),
                    e.bindMode !== void 0 && (o.bindMode = e.bindMode),
                    e.bindMatrix !== void 0 &&
                        o.bindMatrix.fromArray(e.bindMatrix),
                    e.skeleton !== void 0 && (o.skeleton = e.skeleton);
                break;
            case 'Mesh':
                (f = a(e.geometry)), (d = l(e.material)), (o = new Jn(f, d));
                break;
            case 'InstancedMesh':
                (f = a(e.geometry)), (d = l(e.material));
                const m = e.count,
                    v = e.instanceMatrix,
                    _ = e.instanceColor;
                (o = new LO(f, d, m)),
                    (o.instanceMatrix = new vh(new Float32Array(v.array), 16)),
                    _ !== void 0 &&
                        (o.instanceColor = new vh(
                            new Float32Array(_.array),
                            _.itemSize
                        ));
                break;
            case 'BatchedMesh':
                (f = a(e.geometry)),
                    (d = l(e.material)),
                    (o = new IO(
                        e.maxInstanceCount,
                        e.maxVertexCount,
                        e.maxIndexCount,
                        d
                    )),
                    (o.geometry = f),
                    (o.perObjectFrustumCulled = e.perObjectFrustumCulled),
                    (o.sortObjects = e.sortObjects),
                    (o._drawRanges = e.drawRanges),
                    (o._reservedRanges = e.reservedRanges),
                    (o._visibility = e.visibility),
                    (o._active = e.active),
                    (o._bounds = e.bounds.map((S) => {
                        const w = new Ar();
                        w.min.fromArray(S.boxMin), w.max.fromArray(S.boxMax);
                        const x = new Fr();
                        return (
                            (x.radius = S.sphereRadius),
                            x.center.fromArray(S.sphereCenter),
                            {
                                boxInitialized: S.boxInitialized,
                                box: w,
                                sphereInitialized: S.sphereInitialized,
                                sphere: x,
                            }
                        );
                    })),
                    (o._maxInstanceCount = e.maxInstanceCount),
                    (o._maxVertexCount = e.maxVertexCount),
                    (o._maxIndexCount = e.maxIndexCount),
                    (o._geometryInitialized = e.geometryInitialized),
                    (o._geometryCount = e.geometryCount),
                    (o._matricesTexture = u(e.matricesTexture.uuid)),
                    e.colorsTexture !== void 0 &&
                        (o._colorsTexture = u(e.colorsTexture.uuid));
                break;
            case 'LOD':
                o = new RO();
                break;
            case 'Line':
                o = new Dc(a(e.geometry), l(e.material));
                break;
            case 'LineLoop':
                o = new DO(a(e.geometry), l(e.material));
                break;
            case 'LineSegments':
                o = new Dl(a(e.geometry), l(e.material));
                break;
            case 'PointCloud':
            case 'Points':
                o = new OO(a(e.geometry), l(e.material));
                break;
            case 'Sprite':
                o = new CO(l(e.material));
                break;
            case 'Group':
                o = new up();
                break;
            case 'Bone':
                o = new UT();
                break;
            default:
                o = new In();
        }
        if (
            ((o.uuid = e.uuid),
            e.name !== void 0 && (o.name = e.name),
            e.matrix !== void 0
                ? (o.matrix.fromArray(e.matrix),
                  e.matrixAutoUpdate !== void 0 &&
                      (o.matrixAutoUpdate = e.matrixAutoUpdate),
                  o.matrixAutoUpdate &&
                      o.matrix.decompose(o.position, o.quaternion, o.scale))
                : (e.position !== void 0 && o.position.fromArray(e.position),
                  e.rotation !== void 0 && o.rotation.fromArray(e.rotation),
                  e.quaternion !== void 0 &&
                      o.quaternion.fromArray(e.quaternion),
                  e.scale !== void 0 && o.scale.fromArray(e.scale)),
            e.up !== void 0 && o.up.fromArray(e.up),
            e.castShadow !== void 0 && (o.castShadow = e.castShadow),
            e.receiveShadow !== void 0 && (o.receiveShadow = e.receiveShadow),
            e.shadow &&
                (e.shadow.intensity !== void 0 &&
                    (o.shadow.intensity = e.shadow.intensity),
                e.shadow.bias !== void 0 && (o.shadow.bias = e.shadow.bias),
                e.shadow.normalBias !== void 0 &&
                    (o.shadow.normalBias = e.shadow.normalBias),
                e.shadow.radius !== void 0 &&
                    (o.shadow.radius = e.shadow.radius),
                e.shadow.mapSize !== void 0 &&
                    o.shadow.mapSize.fromArray(e.shadow.mapSize),
                e.shadow.camera !== void 0 &&
                    (o.shadow.camera = this.parseObject(e.shadow.camera))),
            e.visible !== void 0 && (o.visible = e.visible),
            e.frustumCulled !== void 0 && (o.frustumCulled = e.frustumCulled),
            e.renderOrder !== void 0 && (o.renderOrder = e.renderOrder),
            e.userData !== void 0 && (o.userData = e.userData),
            e.layers !== void 0 && (o.layers.mask = e.layers),
            e.children !== void 0)
        ) {
            const m = e.children;
            for (let v = 0; v < m.length; v++)
                o.add(this.parseObject(m[v], t, n, i, s));
        }
        if (e.animations !== void 0) {
            const m = e.animations;
            for (let v = 0; v < m.length; v++) {
                const _ = m[v];
                o.animations.push(s[_]);
            }
        }
        if (e.type === 'LOD') {
            e.autoUpdate !== void 0 && (o.autoUpdate = e.autoUpdate);
            const m = e.levels;
            for (let v = 0; v < m.length; v++) {
                const _ = m[v],
                    S = o.getObjectByProperty('uuid', _.object);
                S !== void 0 && o.addLevel(S, _.distance, _.hysteresis);
            }
        }
        return o;
    }
    bindSkeletons(e, t) {
        Object.keys(t).length !== 0 &&
            e.traverse(function (n) {
                if (n.isSkinnedMesh === !0 && n.skeleton !== void 0) {
                    const i = t[n.skeleton];
                    i === void 0
                        ? console.warn(
                              'THREE.ObjectLoader: No skeleton found with UUID:',
                              n.skeleton
                          )
                        : n.bind(i, n.bindMatrix);
                }
            });
    }
    bindLightTargets(e) {
        e.traverse(function (t) {
            if (t.isDirectionalLight || t.isSpotLight) {
                const n = t.target,
                    i = e.getObjectByProperty('uuid', n);
                i !== void 0 ? (t.target = i) : (t.target = new In());
            }
        });
    }
}
const zX = {
        UVMapping: Lc,
        CubeReflectionMapping: Pl,
        CubeRefractionMapping: Ic,
        EquirectangularReflectionMapping: Rp,
        EquirectangularRefractionMapping: d0,
        CubeUVReflectionMapping: Hp,
    },
    nR = {
        RepeatWrapping: p0,
        ClampToEdgeWrapping: pr,
        MirroredRepeatWrapping: m0,
    },
    iR = {
        NearestFilter: Fn,
        NearestMipmapNearestFilter: pT,
        NearestMipmapLinearFilter: op,
        LinearFilter: Cn,
        LinearMipmapNearestFilter: kg,
        LinearMipmapLinearFilter: za,
    };
class VX extends Ns {
    constructor(e) {
        super(e),
            (this.isImageBitmapLoader = !0),
            typeof createImageBitmap > 'u' &&
                console.warn(
                    'THREE.ImageBitmapLoader: createImageBitmap() not supported.'
                ),
            typeof fetch > 'u' &&
                console.warn('THREE.ImageBitmapLoader: fetch() not supported.'),
            (this.options = { premultiplyAlpha: 'none' });
    }
    setOptions(e) {
        return (this.options = e), this;
    }
    load(e, t, n, i) {
        e === void 0 && (e = ''),
            this.path !== void 0 && (e = this.path + e),
            (e = this.manager.resolveURL(e));
        const s = this,
            o = _u.get(e);
        if (o !== void 0) {
            if ((s.manager.itemStart(e), o.then)) {
                o.then((u) => {
                    t && t(u), s.manager.itemEnd(e);
                }).catch((u) => {
                    i && i(u);
                });
                return;
            }
            return (
                setTimeout(function () {
                    t && t(o), s.manager.itemEnd(e);
                }, 0),
                o
            );
        }
        const a = {};
        (a.credentials =
            this.crossOrigin === 'anonymous' ? 'same-origin' : 'include'),
            (a.headers = this.requestHeader);
        const l = fetch(e, a)
            .then(function (u) {
                return u.blob();
            })
            .then(function (u) {
                return createImageBitmap(
                    u,
                    Object.assign(s.options, { colorSpaceConversion: 'none' })
                );
            })
            .then(function (u) {
                return _u.add(e, u), t && t(u), s.manager.itemEnd(e), u;
            })
            .catch(function (u) {
                i && i(u),
                    _u.remove(e),
                    s.manager.itemError(e),
                    s.manager.itemEnd(e);
            });
        _u.add(e, l), s.manager.itemStart(e);
    }
}
let Gy;
class ZT {
    static getContext() {
        return (
            Gy === void 0 &&
                (Gy = new (window.AudioContext || window.webkitAudioContext)()),
            Gy
        );
    }
    static setContext(e) {
        Gy = e;
    }
}
class HX extends Ns {
    constructor(e) {
        super(e);
    }
    load(e, t, n, i) {
        const s = this,
            o = new Po(this.manager);
        o.setResponseType('arraybuffer'),
            o.setPath(this.path),
            o.setRequestHeader(this.requestHeader),
            o.setWithCredentials(this.withCredentials),
            o.load(
                e,
                function (l) {
                    try {
                        const u = l.slice(0);
                        ZT.getContext()
                            .decodeAudioData(u, function (d) {
                                t(d);
                            })
                            .catch(a);
                    } catch (u) {
                        a(u);
                    }
                },
                n,
                i
            );
        function a(l) {
            i ? i(l) : console.error(l), s.manager.itemError(e);
        }
    }
}
const rR = new qt(),
    sR = new qt(),
    Df = new qt();
class GX {
    constructor() {
        (this.type = 'StereoCamera'),
            (this.aspect = 1),
            (this.eyeSep = 0.064),
            (this.cameraL = new Nr()),
            this.cameraL.layers.enable(1),
            (this.cameraL.matrixAutoUpdate = !1),
            (this.cameraR = new Nr()),
            this.cameraR.layers.enable(2),
            (this.cameraR.matrixAutoUpdate = !1),
            (this._cache = {
                focus: null,
                fov: null,
                aspect: null,
                near: null,
                far: null,
                zoom: null,
                eyeSep: null,
            });
    }
    update(e) {
        const t = this._cache;
        if (
            t.focus !== e.focus ||
            t.fov !== e.fov ||
            t.aspect !== e.aspect * this.aspect ||
            t.near !== e.near ||
            t.far !== e.far ||
            t.zoom !== e.zoom ||
            t.eyeSep !== this.eyeSep
        ) {
            (t.focus = e.focus),
                (t.fov = e.fov),
                (t.aspect = e.aspect * this.aspect),
                (t.near = e.near),
                (t.far = e.far),
                (t.zoom = e.zoom),
                (t.eyeSep = this.eyeSep),
                Df.copy(e.projectionMatrix);
            const i = t.eyeSep / 2,
                s = (i * t.near) / t.focus,
                o = (t.near * Math.tan(ch * t.fov * 0.5)) / t.zoom;
            let a, l;
            (sR.elements[12] = -i),
                (rR.elements[12] = i),
                (a = -o * t.aspect + s),
                (l = o * t.aspect + s),
                (Df.elements[0] = (2 * t.near) / (l - a)),
                (Df.elements[8] = (l + a) / (l - a)),
                this.cameraL.projectionMatrix.copy(Df),
                (a = -o * t.aspect - s),
                (l = o * t.aspect - s),
                (Df.elements[0] = (2 * t.near) / (l - a)),
                (Df.elements[8] = (l + a) / (l - a)),
                this.cameraR.projectionMatrix.copy(Df);
        }
        this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(sR),
            this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(rR);
    }
}
class $T {
    constructor(e = !0) {
        (this.autoStart = e),
            (this.startTime = 0),
            (this.oldTime = 0),
            (this.elapsedTime = 0),
            (this.running = !1);
    }
    start() {
        (this.startTime = oR()),
            (this.oldTime = this.startTime),
            (this.elapsedTime = 0),
            (this.running = !0);
    }
    stop() {
        this.getElapsedTime(), (this.running = !1), (this.autoStart = !1);
    }
    getElapsedTime() {
        return this.getDelta(), this.elapsedTime;
    }
    getDelta() {
        let e = 0;
        if (this.autoStart && !this.running) return this.start(), 0;
        if (this.running) {
            const t = oR();
            (e = (t - this.oldTime) / 1e3),
                (this.oldTime = t),
                (this.elapsedTime += e);
        }
        return e;
    }
}
function oR() {
    return (typeof performance > 'u' ? Date : performance).now();
}
const Of = new re(),
    aR = new mr(),
    WX = new re(),
    Uf = new re();
class jX extends In {
    constructor() {
        super(),
            (this.type = 'AudioListener'),
            (this.context = ZT.getContext()),
            (this.gain = this.context.createGain()),
            this.gain.connect(this.context.destination),
            (this.filter = null),
            (this.timeDelta = 0),
            (this._clock = new $T());
    }
    getInput() {
        return this.gain;
    }
    removeFilter() {
        return (
            this.filter !== null &&
                (this.gain.disconnect(this.filter),
                this.filter.disconnect(this.context.destination),
                this.gain.connect(this.context.destination),
                (this.filter = null)),
            this
        );
    }
    getFilter() {
        return this.filter;
    }
    setFilter(e) {
        return (
            this.filter !== null
                ? (this.gain.disconnect(this.filter),
                  this.filter.disconnect(this.context.destination))
                : this.gain.disconnect(this.context.destination),
            (this.filter = e),
            this.gain.connect(this.filter),
            this.filter.connect(this.context.destination),
            this
        );
    }
    getMasterVolume() {
        return this.gain.gain.value;
    }
    setMasterVolume(e) {
        return (
            this.gain.gain.setTargetAtTime(e, this.context.currentTime, 0.01),
            this
        );
    }
    updateMatrixWorld(e) {
        super.updateMatrixWorld(e);
        const t = this.context.listener,
            n = this.up;
        if (
            ((this.timeDelta = this._clock.getDelta()),
            this.matrixWorld.decompose(Of, aR, WX),
            Uf.set(0, 0, -1).applyQuaternion(aR),
            t.positionX)
        ) {
            const i = this.context.currentTime + this.timeDelta;
            t.positionX.linearRampToValueAtTime(Of.x, i),
                t.positionY.linearRampToValueAtTime(Of.y, i),
                t.positionZ.linearRampToValueAtTime(Of.z, i),
                t.forwardX.linearRampToValueAtTime(Uf.x, i),
                t.forwardY.linearRampToValueAtTime(Uf.y, i),
                t.forwardZ.linearRampToValueAtTime(Uf.z, i),
                t.upX.linearRampToValueAtTime(n.x, i),
                t.upY.linearRampToValueAtTime(n.y, i),
                t.upZ.linearRampToValueAtTime(n.z, i);
        } else
            t.setPosition(Of.x, Of.y, Of.z),
                t.setOrientation(Uf.x, Uf.y, Uf.z, n.x, n.y, n.z);
    }
}
let gU = class extends In {
    constructor(e) {
        super(),
            (this.type = 'Audio'),
            (this.listener = e),
            (this.context = e.context),
            (this.gain = this.context.createGain()),
            this.gain.connect(e.getInput()),
            (this.autoplay = !1),
            (this.buffer = null),
            (this.detune = 0),
            (this.loop = !1),
            (this.loopStart = 0),
            (this.loopEnd = 0),
            (this.offset = 0),
            (this.duration = void 0),
            (this.playbackRate = 1),
            (this.isPlaying = !1),
            (this.hasPlaybackControl = !0),
            (this.source = null),
            (this.sourceType = 'empty'),
            (this._startedAt = 0),
            (this._progress = 0),
            (this._connected = !1),
            (this.filters = []);
    }
    getOutput() {
        return this.gain;
    }
    setNodeSource(e) {
        return (
            (this.hasPlaybackControl = !1),
            (this.sourceType = 'audioNode'),
            (this.source = e),
            this.connect(),
            this
        );
    }
    setMediaElementSource(e) {
        return (
            (this.hasPlaybackControl = !1),
            (this.sourceType = 'mediaNode'),
            (this.source = this.context.createMediaElementSource(e)),
            this.connect(),
            this
        );
    }
    setMediaStreamSource(e) {
        return (
            (this.hasPlaybackControl = !1),
            (this.sourceType = 'mediaStreamNode'),
            (this.source = this.context.createMediaStreamSource(e)),
            this.connect(),
            this
        );
    }
    setBuffer(e) {
        return (
            (this.buffer = e),
            (this.sourceType = 'buffer'),
            this.autoplay && this.play(),
            this
        );
    }
    play(e = 0) {
        if (this.isPlaying === !0) {
            console.warn('THREE.Audio: Audio is already playing.');
            return;
        }
        if (this.hasPlaybackControl === !1) {
            console.warn('THREE.Audio: this Audio has no playback control.');
            return;
        }
        this._startedAt = this.context.currentTime + e;
        const t = this.context.createBufferSource();
        return (
            (t.buffer = this.buffer),
            (t.loop = this.loop),
            (t.loopStart = this.loopStart),
            (t.loopEnd = this.loopEnd),
            (t.onended = this.onEnded.bind(this)),
            t.start(
                this._startedAt,
                this._progress + this.offset,
                this.duration
            ),
            (this.isPlaying = !0),
            (this.source = t),
            this.setDetune(this.detune),
            this.setPlaybackRate(this.playbackRate),
            this.connect()
        );
    }
    pause() {
        if (this.hasPlaybackControl === !1) {
            console.warn('THREE.Audio: this Audio has no playback control.');
            return;
        }
        return (
            this.isPlaying === !0 &&
                ((this._progress +=
                    Math.max(this.context.currentTime - this._startedAt, 0) *
                    this.playbackRate),
                this.loop === !0 &&
                    (this._progress =
                        this._progress %
                        (this.duration || this.buffer.duration)),
                this.source.stop(),
                (this.source.onended = null),
                (this.isPlaying = !1)),
            this
        );
    }
    stop() {
        if (this.hasPlaybackControl === !1) {
            console.warn('THREE.Audio: this Audio has no playback control.');
            return;
        }
        return (
            (this._progress = 0),
            this.source !== null &&
                (this.source.stop(), (this.source.onended = null)),
            (this.isPlaying = !1),
            this
        );
    }
    connect() {
        if (this.filters.length > 0) {
            this.source.connect(this.filters[0]);
            for (let e = 1, t = this.filters.length; e < t; e++)
                this.filters[e - 1].connect(this.filters[e]);
            this.filters[this.filters.length - 1].connect(this.getOutput());
        } else this.source.connect(this.getOutput());
        return (this._connected = !0), this;
    }
    disconnect() {
        if (this._connected !== !1) {
            if (this.filters.length > 0) {
                this.source.disconnect(this.filters[0]);
                for (let e = 1, t = this.filters.length; e < t; e++)
                    this.filters[e - 1].disconnect(this.filters[e]);
                this.filters[this.filters.length - 1].disconnect(
                    this.getOutput()
                );
            } else this.source.disconnect(this.getOutput());
            return (this._connected = !1), this;
        }
    }
    getFilters() {
        return this.filters;
    }
    setFilters(e) {
        return (
            e || (e = []),
            this._connected === !0
                ? (this.disconnect(),
                  (this.filters = e.slice()),
                  this.connect())
                : (this.filters = e.slice()),
            this
        );
    }
    setDetune(e) {
        return (
            (this.detune = e),
            this.isPlaying === !0 &&
                this.source.detune !== void 0 &&
                this.source.detune.setTargetAtTime(
                    this.detune,
                    this.context.currentTime,
                    0.01
                ),
            this
        );
    }
    getDetune() {
        return this.detune;
    }
    getFilter() {
        return this.getFilters()[0];
    }
    setFilter(e) {
        return this.setFilters(e ? [e] : []);
    }
    setPlaybackRate(e) {
        if (this.hasPlaybackControl === !1) {
            console.warn('THREE.Audio: this Audio has no playback control.');
            return;
        }
        return (
            (this.playbackRate = e),
            this.isPlaying === !0 &&
                this.source.playbackRate.setTargetAtTime(
                    this.playbackRate,
                    this.context.currentTime,
                    0.01
                ),
            this
        );
    }
    getPlaybackRate() {
        return this.playbackRate;
    }
    onEnded() {
        this.isPlaying = !1;
    }
    getLoop() {
        return this.hasPlaybackControl === !1
            ? (console.warn('THREE.Audio: this Audio has no playback control.'),
              !1)
            : this.loop;
    }
    setLoop(e) {
        if (this.hasPlaybackControl === !1) {
            console.warn('THREE.Audio: this Audio has no playback control.');
            return;
        }
        return (
            (this.loop = e),
            this.isPlaying === !0 && (this.source.loop = this.loop),
            this
        );
    }
    setLoopStart(e) {
        return (this.loopStart = e), this;
    }
    setLoopEnd(e) {
        return (this.loopEnd = e), this;
    }
    getVolume() {
        return this.gain.gain.value;
    }
    setVolume(e) {
        return (
            this.gain.gain.setTargetAtTime(e, this.context.currentTime, 0.01),
            this
        );
    }
};
const kf = new re(),
    lR = new mr(),
    XX = new re(),
    Nf = new re();
class YX extends gU {
    constructor(e) {
        super(e),
            (this.panner = this.context.createPanner()),
            (this.panner.panningModel = 'HRTF'),
            this.panner.connect(this.gain);
    }
    connect() {
        super.connect(), this.panner.connect(this.gain);
    }
    disconnect() {
        super.disconnect(), this.panner.disconnect(this.gain);
    }
    getOutput() {
        return this.panner;
    }
    getRefDistance() {
        return this.panner.refDistance;
    }
    setRefDistance(e) {
        return (this.panner.refDistance = e), this;
    }
    getRolloffFactor() {
        return this.panner.rolloffFactor;
    }
    setRolloffFactor(e) {
        return (this.panner.rolloffFactor = e), this;
    }
    getDistanceModel() {
        return this.panner.distanceModel;
    }
    setDistanceModel(e) {
        return (this.panner.distanceModel = e), this;
    }
    getMaxDistance() {
        return this.panner.maxDistance;
    }
    setMaxDistance(e) {
        return (this.panner.maxDistance = e), this;
    }
    setDirectionalCone(e, t, n) {
        return (
            (this.panner.coneInnerAngle = e),
            (this.panner.coneOuterAngle = t),
            (this.panner.coneOuterGain = n),
            this
        );
    }
    updateMatrixWorld(e) {
        if (
            (super.updateMatrixWorld(e),
            this.hasPlaybackControl === !0 && this.isPlaying === !1)
        )
            return;
        this.matrixWorld.decompose(kf, lR, XX),
            Nf.set(0, 0, 1).applyQuaternion(lR);
        const t = this.panner;
        if (t.positionX) {
            const n = this.context.currentTime + this.listener.timeDelta;
            t.positionX.linearRampToValueAtTime(kf.x, n),
                t.positionY.linearRampToValueAtTime(kf.y, n),
                t.positionZ.linearRampToValueAtTime(kf.z, n),
                t.orientationX.linearRampToValueAtTime(Nf.x, n),
                t.orientationY.linearRampToValueAtTime(Nf.y, n),
                t.orientationZ.linearRampToValueAtTime(Nf.z, n);
        } else
            t.setPosition(kf.x, kf.y, kf.z), t.setOrientation(Nf.x, Nf.y, Nf.z);
    }
}
class qX {
    constructor(e, t = 2048) {
        (this.analyser = e.context.createAnalyser()),
            (this.analyser.fftSize = t),
            (this.data = new Uint8Array(this.analyser.frequencyBinCount)),
            e.getOutput().connect(this.analyser);
    }
    getFrequencyData() {
        return this.analyser.getByteFrequencyData(this.data), this.data;
    }
    getAverageFrequency() {
        let e = 0;
        const t = this.getFrequencyData();
        for (let n = 0; n < t.length; n++) e += t[n];
        return e / t.length;
    }
}
class vU {
    constructor(e, t, n) {
        (this.binding = e), (this.valueSize = n);
        let i, s, o;
        switch (t) {
            case 'quaternion':
                (i = this._slerp),
                    (s = this._slerpAdditive),
                    (o = this._setAdditiveIdentityQuaternion),
                    (this.buffer = new Float64Array(n * 6)),
                    (this._workIndex = 5);
                break;
            case 'string':
            case 'bool':
                (i = this._select),
                    (s = this._select),
                    (o = this._setAdditiveIdentityOther),
                    (this.buffer = new Array(n * 5));
                break;
            default:
                (i = this._lerp),
                    (s = this._lerpAdditive),
                    (o = this._setAdditiveIdentityNumeric),
                    (this.buffer = new Float64Array(n * 5));
        }
        (this._mixBufferRegion = i),
            (this._mixBufferRegionAdditive = s),
            (this._setIdentity = o),
            (this._origIndex = 3),
            (this._addIndex = 4),
            (this.cumulativeWeight = 0),
            (this.cumulativeWeightAdditive = 0),
            (this.useCount = 0),
            (this.referenceCount = 0);
    }
    accumulate(e, t) {
        const n = this.buffer,
            i = this.valueSize,
            s = e * i + i;
        let o = this.cumulativeWeight;
        if (o === 0) {
            for (let a = 0; a !== i; ++a) n[s + a] = n[a];
            o = t;
        } else {
            o += t;
            const a = t / o;
            this._mixBufferRegion(n, s, 0, a, i);
        }
        this.cumulativeWeight = o;
    }
    accumulateAdditive(e) {
        const t = this.buffer,
            n = this.valueSize,
            i = n * this._addIndex;
        this.cumulativeWeightAdditive === 0 && this._setIdentity(),
            this._mixBufferRegionAdditive(t, i, 0, e, n),
            (this.cumulativeWeightAdditive += e);
    }
    apply(e) {
        const t = this.valueSize,
            n = this.buffer,
            i = e * t + t,
            s = this.cumulativeWeight,
            o = this.cumulativeWeightAdditive,
            a = this.binding;
        if (
            ((this.cumulativeWeight = 0),
            (this.cumulativeWeightAdditive = 0),
            s < 1)
        ) {
            const l = t * this._origIndex;
            this._mixBufferRegion(n, i, l, 1 - s, t);
        }
        o > 0 && this._mixBufferRegionAdditive(n, i, this._addIndex * t, 1, t);
        for (let l = t, u = t + t; l !== u; ++l)
            if (n[l] !== n[l + t]) {
                a.setValue(n, i);
                break;
            }
    }
    saveOriginalState() {
        const e = this.binding,
            t = this.buffer,
            n = this.valueSize,
            i = n * this._origIndex;
        e.getValue(t, i);
        for (let s = n, o = i; s !== o; ++s) t[s] = t[i + (s % n)];
        this._setIdentity(),
            (this.cumulativeWeight = 0),
            (this.cumulativeWeightAdditive = 0);
    }
    restoreOriginalState() {
        const e = this.valueSize * 3;
        this.binding.setValue(this.buffer, e);
    }
    _setAdditiveIdentityNumeric() {
        const e = this._addIndex * this.valueSize,
            t = e + this.valueSize;
        for (let n = e; n < t; n++) this.buffer[n] = 0;
    }
    _setAdditiveIdentityQuaternion() {
        this._setAdditiveIdentityNumeric(),
            (this.buffer[this._addIndex * this.valueSize + 3] = 1);
    }
    _setAdditiveIdentityOther() {
        const e = this._origIndex * this.valueSize,
            t = this._addIndex * this.valueSize;
        for (let n = 0; n < this.valueSize; n++)
            this.buffer[t + n] = this.buffer[e + n];
    }
    _select(e, t, n, i, s) {
        if (i >= 0.5) for (let o = 0; o !== s; ++o) e[t + o] = e[n + o];
    }
    _slerp(e, t, n, i) {
        mr.slerpFlat(e, t, e, t, e, n, i);
    }
    _slerpAdditive(e, t, n, i, s) {
        const o = this._workIndex * s;
        mr.multiplyQuaternionsFlat(e, o, e, t, e, n),
            mr.slerpFlat(e, t, e, t, e, o, i);
    }
    _lerp(e, t, n, i, s) {
        const o = 1 - i;
        for (let a = 0; a !== s; ++a) {
            const l = t + a;
            e[l] = e[l] * o + e[n + a] * i;
        }
    }
    _lerpAdditive(e, t, n, i, s) {
        for (let o = 0; o !== s; ++o) {
            const a = t + o;
            e[a] = e[a] + e[n + o] * i;
        }
    }
}
const JT = '\\[\\]\\.:\\/',
    KX = new RegExp('[' + JT + ']', 'g'),
    QT = '[^' + JT + ']',
    ZX = '[^' + JT.replace('\\.', '') + ']',
    $X = /((?:WC+[\/:])*)/.source.replace('WC', QT),
    JX = /(WCOD+)?/.source.replace('WCOD', ZX),
    QX = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace('WC', QT),
    eY = /\.(WC+)(?:\[(.+)\])?/.source.replace('WC', QT),
    tY = new RegExp('^' + $X + JX + QX + eY + '$'),
    nY = ['material', 'materials', 'bones', 'map'];
class iY {
    constructor(e, t, n) {
        const i = n || Un.parseTrackName(t);
        (this._targetGroup = e), (this._bindings = e.subscribe_(t, i));
    }
    getValue(e, t) {
        this.bind();
        const n = this._targetGroup.nCachedObjects_,
            i = this._bindings[n];
        i !== void 0 && i.getValue(e, t);
    }
    setValue(e, t) {
        const n = this._bindings;
        for (
            let i = this._targetGroup.nCachedObjects_, s = n.length;
            i !== s;
            ++i
        )
            n[i].setValue(e, t);
    }
    bind() {
        const e = this._bindings;
        for (
            let t = this._targetGroup.nCachedObjects_, n = e.length;
            t !== n;
            ++t
        )
            e[t].bind();
    }
    unbind() {
        const e = this._bindings;
        for (
            let t = this._targetGroup.nCachedObjects_, n = e.length;
            t !== n;
            ++t
        )
            e[t].unbind();
    }
}
class Un {
    constructor(e, t, n) {
        (this.path = t),
            (this.parsedPath = n || Un.parseTrackName(t)),
            (this.node = Un.findNode(e, this.parsedPath.nodeName)),
            (this.rootNode = e),
            (this.getValue = this._getValue_unbound),
            (this.setValue = this._setValue_unbound);
    }
    static create(e, t, n) {
        return e && e.isAnimationObjectGroup
            ? new Un.Composite(e, t, n)
            : new Un(e, t, n);
    }
    static sanitizeNodeName(e) {
        return e.replace(/\s/g, '_').replace(KX, '');
    }
    static parseTrackName(e) {
        const t = tY.exec(e);
        if (t === null)
            throw new Error('PropertyBinding: Cannot parse trackName: ' + e);
        const n = {
                nodeName: t[2],
                objectName: t[3],
                objectIndex: t[4],
                propertyName: t[5],
                propertyIndex: t[6],
            },
            i = n.nodeName && n.nodeName.lastIndexOf('.');
        if (i !== void 0 && i !== -1) {
            const s = n.nodeName.substring(i + 1);
            nY.indexOf(s) !== -1 &&
                ((n.nodeName = n.nodeName.substring(0, i)), (n.objectName = s));
        }
        if (n.propertyName === null || n.propertyName.length === 0)
            throw new Error(
                'PropertyBinding: can not parse propertyName from trackName: ' +
                    e
            );
        return n;
    }
    static findNode(e, t) {
        if (
            t === void 0 ||
            t === '' ||
            t === '.' ||
            t === -1 ||
            t === e.name ||
            t === e.uuid
        )
            return e;
        if (e.skeleton) {
            const n = e.skeleton.getBoneByName(t);
            if (n !== void 0) return n;
        }
        if (e.children) {
            const n = function (s) {
                    for (let o = 0; o < s.length; o++) {
                        const a = s[o];
                        if (a.name === t || a.uuid === t) return a;
                        const l = n(a.children);
                        if (l) return l;
                    }
                    return null;
                },
                i = n(e.children);
            if (i) return i;
        }
        return null;
    }
    _getValue_unavailable() {}
    _setValue_unavailable() {}
    _getValue_direct(e, t) {
        e[t] = this.targetObject[this.propertyName];
    }
    _getValue_array(e, t) {
        const n = this.resolvedProperty;
        for (let i = 0, s = n.length; i !== s; ++i) e[t++] = n[i];
    }
    _getValue_arrayElement(e, t) {
        e[t] = this.resolvedProperty[this.propertyIndex];
    }
    _getValue_toArray(e, t) {
        this.resolvedProperty.toArray(e, t);
    }
    _setValue_direct(e, t) {
        this.targetObject[this.propertyName] = e[t];
    }
    _setValue_direct_setNeedsUpdate(e, t) {
        (this.targetObject[this.propertyName] = e[t]),
            (this.targetObject.needsUpdate = !0);
    }
    _setValue_direct_setMatrixWorldNeedsUpdate(e, t) {
        (this.targetObject[this.propertyName] = e[t]),
            (this.targetObject.matrixWorldNeedsUpdate = !0);
    }
    _setValue_array(e, t) {
        const n = this.resolvedProperty;
        for (let i = 0, s = n.length; i !== s; ++i) n[i] = e[t++];
    }
    _setValue_array_setNeedsUpdate(e, t) {
        const n = this.resolvedProperty;
        for (let i = 0, s = n.length; i !== s; ++i) n[i] = e[t++];
        this.targetObject.needsUpdate = !0;
    }
    _setValue_array_setMatrixWorldNeedsUpdate(e, t) {
        const n = this.resolvedProperty;
        for (let i = 0, s = n.length; i !== s; ++i) n[i] = e[t++];
        this.targetObject.matrixWorldNeedsUpdate = !0;
    }
    _setValue_arrayElement(e, t) {
        this.resolvedProperty[this.propertyIndex] = e[t];
    }
    _setValue_arrayElement_setNeedsUpdate(e, t) {
        (this.resolvedProperty[this.propertyIndex] = e[t]),
            (this.targetObject.needsUpdate = !0);
    }
    _setValue_arrayElement_setMatrixWorldNeedsUpdate(e, t) {
        (this.resolvedProperty[this.propertyIndex] = e[t]),
            (this.targetObject.matrixWorldNeedsUpdate = !0);
    }
    _setValue_fromArray(e, t) {
        this.resolvedProperty.fromArray(e, t);
    }
    _setValue_fromArray_setNeedsUpdate(e, t) {
        this.resolvedProperty.fromArray(e, t),
            (this.targetObject.needsUpdate = !0);
    }
    _setValue_fromArray_setMatrixWorldNeedsUpdate(e, t) {
        this.resolvedProperty.fromArray(e, t),
            (this.targetObject.matrixWorldNeedsUpdate = !0);
    }
    _getValue_unbound(e, t) {
        this.bind(), this.getValue(e, t);
    }
    _setValue_unbound(e, t) {
        this.bind(), this.setValue(e, t);
    }
    bind() {
        let e = this.node;
        const t = this.parsedPath,
            n = t.objectName,
            i = t.propertyName;
        let s = t.propertyIndex;
        if (
            (e ||
                ((e = Un.findNode(this.rootNode, t.nodeName)), (this.node = e)),
            (this.getValue = this._getValue_unavailable),
            (this.setValue = this._setValue_unavailable),
            !e)
        ) {
            console.warn(
                'THREE.PropertyBinding: No target node found for track: ' +
                    this.path +
                    '.'
            );
            return;
        }
        if (n) {
            let u = t.objectIndex;
            switch (n) {
                case 'materials':
                    if (!e.material) {
                        console.error(
                            'THREE.PropertyBinding: Can not bind to material as node does not have a material.',
                            this
                        );
                        return;
                    }
                    if (!e.material.materials) {
                        console.error(
                            'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.',
                            this
                        );
                        return;
                    }
                    e = e.material.materials;
                    break;
                case 'bones':
                    if (!e.skeleton) {
                        console.error(
                            'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.',
                            this
                        );
                        return;
                    }
                    e = e.skeleton.bones;
                    for (let f = 0; f < e.length; f++)
                        if (e[f].name === u) {
                            u = f;
                            break;
                        }
                    break;
                case 'map':
                    if ('map' in e) {
                        e = e.map;
                        break;
                    }
                    if (!e.material) {
                        console.error(
                            'THREE.PropertyBinding: Can not bind to material as node does not have a material.',
                            this
                        );
                        return;
                    }
                    if (!e.material.map) {
                        console.error(
                            'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.',
                            this
                        );
                        return;
                    }
                    e = e.material.map;
                    break;
                default:
                    if (e[n] === void 0) {
                        console.error(
                            'THREE.PropertyBinding: Can not bind to objectName of node undefined.',
                            this
                        );
                        return;
                    }
                    e = e[n];
            }
            if (u !== void 0) {
                if (e[u] === void 0) {
                    console.error(
                        'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.',
                        this,
                        e
                    );
                    return;
                }
                e = e[u];
            }
        }
        const o = e[i];
        if (o === void 0) {
            const u = t.nodeName;
            console.error(
                'THREE.PropertyBinding: Trying to update property for track: ' +
                    u +
                    '.' +
                    i +
                    " but it wasn't found.",
                e
            );
            return;
        }
        let a = this.Versioning.None;
        (this.targetObject = e),
            e.needsUpdate !== void 0
                ? (a = this.Versioning.NeedsUpdate)
                : e.matrixWorldNeedsUpdate !== void 0 &&
                  (a = this.Versioning.MatrixWorldNeedsUpdate);
        let l = this.BindingType.Direct;
        if (s !== void 0) {
            if (i === 'morphTargetInfluences') {
                if (!e.geometry) {
                    console.error(
                        'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.',
                        this
                    );
                    return;
                }
                if (!e.geometry.morphAttributes) {
                    console.error(
                        'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.',
                        this
                    );
                    return;
                }
                e.morphTargetDictionary[s] !== void 0 &&
                    (s = e.morphTargetDictionary[s]);
            }
            (l = this.BindingType.ArrayElement),
                (this.resolvedProperty = o),
                (this.propertyIndex = s);
        } else
            o.fromArray !== void 0 && o.toArray !== void 0
                ? ((l = this.BindingType.HasFromToArray),
                  (this.resolvedProperty = o))
                : Array.isArray(o)
                  ? ((l = this.BindingType.EntireArray),
                    (this.resolvedProperty = o))
                  : (this.propertyName = i);
        (this.getValue = this.GetterByBindingType[l]),
            (this.setValue = this.SetterByBindingTypeAndVersioning[l][a]);
    }
    unbind() {
        (this.node = null),
            (this.getValue = this._getValue_unbound),
            (this.setValue = this._setValue_unbound);
    }
}
Un.Composite = iY;
Un.prototype.BindingType = {
    Direct: 0,
    EntireArray: 1,
    ArrayElement: 2,
    HasFromToArray: 3,
};
Un.prototype.Versioning = {
    None: 0,
    NeedsUpdate: 1,
    MatrixWorldNeedsUpdate: 2,
};
Un.prototype.GetterByBindingType = [
    Un.prototype._getValue_direct,
    Un.prototype._getValue_array,
    Un.prototype._getValue_arrayElement,
    Un.prototype._getValue_toArray,
];
Un.prototype.SetterByBindingTypeAndVersioning = [
    [
        Un.prototype._setValue_direct,
        Un.prototype._setValue_direct_setNeedsUpdate,
        Un.prototype._setValue_direct_setMatrixWorldNeedsUpdate,
    ],
    [
        Un.prototype._setValue_array,
        Un.prototype._setValue_array_setNeedsUpdate,
        Un.prototype._setValue_array_setMatrixWorldNeedsUpdate,
    ],
    [
        Un.prototype._setValue_arrayElement,
        Un.prototype._setValue_arrayElement_setNeedsUpdate,
        Un.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,
    ],
    [
        Un.prototype._setValue_fromArray,
        Un.prototype._setValue_fromArray_setNeedsUpdate,
        Un.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,
    ],
];
class rY {
    constructor() {
        (this.isAnimationObjectGroup = !0),
            (this.uuid = Ro()),
            (this._objects = Array.prototype.slice.call(arguments)),
            (this.nCachedObjects_ = 0);
        const e = {};
        this._indicesByUUID = e;
        for (let n = 0, i = arguments.length; n !== i; ++n)
            e[arguments[n].uuid] = n;
        (this._paths = []),
            (this._parsedPaths = []),
            (this._bindings = []),
            (this._bindingsIndicesByPath = {});
        const t = this;
        this.stats = {
            objects: {
                get total() {
                    return t._objects.length;
                },
                get inUse() {
                    return this.total - t.nCachedObjects_;
                },
            },
            get bindingsPerObject() {
                return t._bindings.length;
            },
        };
    }
    add() {
        const e = this._objects,
            t = this._indicesByUUID,
            n = this._paths,
            i = this._parsedPaths,
            s = this._bindings,
            o = s.length;
        let a,
            l = e.length,
            u = this.nCachedObjects_;
        for (let f = 0, d = arguments.length; f !== d; ++f) {
            const m = arguments[f],
                v = m.uuid;
            let _ = t[v];
            if (_ === void 0) {
                (_ = l++), (t[v] = _), e.push(m);
                for (let S = 0, w = o; S !== w; ++S)
                    s[S].push(new Un(m, n[S], i[S]));
            } else if (_ < u) {
                a = e[_];
                const S = --u,
                    w = e[S];
                (t[w.uuid] = _), (e[_] = w), (t[v] = S), (e[S] = m);
                for (let x = 0, A = o; x !== A; ++x) {
                    const T = s[x],
                        b = T[S];
                    let P = T[_];
                    (T[_] = b),
                        P === void 0 && (P = new Un(m, n[x], i[x])),
                        (T[S] = P);
                }
            } else
                e[_] !== a &&
                    console.error(
                        'THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.'
                    );
        }
        this.nCachedObjects_ = u;
    }
    remove() {
        const e = this._objects,
            t = this._indicesByUUID,
            n = this._bindings,
            i = n.length;
        let s = this.nCachedObjects_;
        for (let o = 0, a = arguments.length; o !== a; ++o) {
            const l = arguments[o],
                u = l.uuid,
                f = t[u];
            if (f !== void 0 && f >= s) {
                const d = s++,
                    m = e[d];
                (t[m.uuid] = f), (e[f] = m), (t[u] = d), (e[d] = l);
                for (let v = 0, _ = i; v !== _; ++v) {
                    const S = n[v],
                        w = S[d],
                        x = S[f];
                    (S[f] = w), (S[d] = x);
                }
            }
        }
        this.nCachedObjects_ = s;
    }
    uncache() {
        const e = this._objects,
            t = this._indicesByUUID,
            n = this._bindings,
            i = n.length;
        let s = this.nCachedObjects_,
            o = e.length;
        for (let a = 0, l = arguments.length; a !== l; ++a) {
            const u = arguments[a],
                f = u.uuid,
                d = t[f];
            if (d !== void 0)
                if ((delete t[f], d < s)) {
                    const m = --s,
                        v = e[m],
                        _ = --o,
                        S = e[_];
                    (t[v.uuid] = d),
                        (e[d] = v),
                        (t[S.uuid] = m),
                        (e[m] = S),
                        e.pop();
                    for (let w = 0, x = i; w !== x; ++w) {
                        const A = n[w],
                            T = A[m],
                            b = A[_];
                        (A[d] = T), (A[m] = b), A.pop();
                    }
                } else {
                    const m = --o,
                        v = e[m];
                    m > 0 && (t[v.uuid] = d), (e[d] = v), e.pop();
                    for (let _ = 0, S = i; _ !== S; ++_) {
                        const w = n[_];
                        (w[d] = w[m]), w.pop();
                    }
                }
        }
        this.nCachedObjects_ = s;
    }
    subscribe_(e, t) {
        const n = this._bindingsIndicesByPath;
        let i = n[e];
        const s = this._bindings;
        if (i !== void 0) return s[i];
        const o = this._paths,
            a = this._parsedPaths,
            l = this._objects,
            u = l.length,
            f = this.nCachedObjects_,
            d = new Array(u);
        (i = s.length), (n[e] = i), o.push(e), a.push(t), s.push(d);
        for (let m = f, v = l.length; m !== v; ++m) {
            const _ = l[m];
            d[m] = new Un(_, e, t);
        }
        return d;
    }
    unsubscribe_(e) {
        const t = this._bindingsIndicesByPath,
            n = t[e];
        if (n !== void 0) {
            const i = this._paths,
                s = this._parsedPaths,
                o = this._bindings,
                a = o.length - 1,
                l = o[a],
                u = e[a];
            (t[u] = n),
                (o[n] = l),
                o.pop(),
                (s[n] = s[a]),
                s.pop(),
                (i[n] = i[a]),
                i.pop();
        }
    }
}
class yU {
    constructor(e, t, n = null, i = t.blendMode) {
        (this._mixer = e),
            (this._clip = t),
            (this._localRoot = n),
            (this.blendMode = i);
        const s = t.tracks,
            o = s.length,
            a = new Array(o),
            l = { endingStart: Zf, endingEnd: Zf };
        for (let u = 0; u !== o; ++u) {
            const f = s[u].createInterpolant(null);
            (a[u] = f), (f.settings = l);
        }
        (this._interpolantSettings = l),
            (this._interpolants = a),
            (this._propertyBindings = new Array(o)),
            (this._cacheIndex = null),
            (this._byClipCacheIndex = null),
            (this._timeScaleInterpolant = null),
            (this._weightInterpolant = null),
            (this.loop = nO),
            (this._loopCount = -1),
            (this._startTime = null),
            (this.time = 0),
            (this.timeScale = 1),
            (this._effectiveTimeScale = 1),
            (this.weight = 1),
            (this._effectiveWeight = 1),
            (this.repetitions = 1 / 0),
            (this.paused = !1),
            (this.enabled = !0),
            (this.clampWhenFinished = !1),
            (this.zeroSlopeAtStart = !0),
            (this.zeroSlopeAtEnd = !0);
    }
    play() {
        return this._mixer._activateAction(this), this;
    }
    stop() {
        return this._mixer._deactivateAction(this), this.reset();
    }
    reset() {
        return (
            (this.paused = !1),
            (this.enabled = !0),
            (this.time = 0),
            (this._loopCount = -1),
            (this._startTime = null),
            this.stopFading().stopWarping()
        );
    }
    isRunning() {
        return (
            this.enabled &&
            !this.paused &&
            this.timeScale !== 0 &&
            this._startTime === null &&
            this._mixer._isActiveAction(this)
        );
    }
    isScheduled() {
        return this._mixer._isActiveAction(this);
    }
    startAt(e) {
        return (this._startTime = e), this;
    }
    setLoop(e, t) {
        return (this.loop = e), (this.repetitions = t), this;
    }
    setEffectiveWeight(e) {
        return (
            (this.weight = e),
            (this._effectiveWeight = this.enabled ? e : 0),
            this.stopFading()
        );
    }
    getEffectiveWeight() {
        return this._effectiveWeight;
    }
    fadeIn(e) {
        return this._scheduleFading(e, 0, 1);
    }
    fadeOut(e) {
        return this._scheduleFading(e, 1, 0);
    }
    crossFadeFrom(e, t, n) {
        if ((e.fadeOut(t), this.fadeIn(t), n)) {
            const i = this._clip.duration,
                s = e._clip.duration,
                o = s / i,
                a = i / s;
            e.warp(1, o, t), this.warp(a, 1, t);
        }
        return this;
    }
    crossFadeTo(e, t, n) {
        return e.crossFadeFrom(this, t, n);
    }
    stopFading() {
        const e = this._weightInterpolant;
        return (
            e !== null &&
                ((this._weightInterpolant = null),
                this._mixer._takeBackControlInterpolant(e)),
            this
        );
    }
    setEffectiveTimeScale(e) {
        return (
            (this.timeScale = e),
            (this._effectiveTimeScale = this.paused ? 0 : e),
            this.stopWarping()
        );
    }
    getEffectiveTimeScale() {
        return this._effectiveTimeScale;
    }
    setDuration(e) {
        return (this.timeScale = this._clip.duration / e), this.stopWarping();
    }
    syncWith(e) {
        return (
            (this.time = e.time),
            (this.timeScale = e.timeScale),
            this.stopWarping()
        );
    }
    halt(e) {
        return this.warp(this._effectiveTimeScale, 0, e);
    }
    warp(e, t, n) {
        const i = this._mixer,
            s = i.time,
            o = this.timeScale;
        let a = this._timeScaleInterpolant;
        a === null &&
            ((a = i._lendControlInterpolant()),
            (this._timeScaleInterpolant = a));
        const l = a.parameterPositions,
            u = a.sampleValues;
        return (l[0] = s), (l[1] = s + n), (u[0] = e / o), (u[1] = t / o), this;
    }
    stopWarping() {
        const e = this._timeScaleInterpolant;
        return (
            e !== null &&
                ((this._timeScaleInterpolant = null),
                this._mixer._takeBackControlInterpolant(e)),
            this
        );
    }
    getMixer() {
        return this._mixer;
    }
    getClip() {
        return this._clip;
    }
    getRoot() {
        return this._localRoot || this._mixer._root;
    }
    _update(e, t, n, i) {
        if (!this.enabled) {
            this._updateWeight(e);
            return;
        }
        const s = this._startTime;
        if (s !== null) {
            const l = (e - s) * n;
            l < 0 || n === 0
                ? (t = 0)
                : ((this._startTime = null), (t = n * l));
        }
        t *= this._updateTimeScale(e);
        const o = this._updateTime(t),
            a = this._updateWeight(e);
        if (a > 0) {
            const l = this._interpolants,
                u = this._propertyBindings;
            switch (this.blendMode) {
                case wT:
                    for (let f = 0, d = l.length; f !== d; ++f)
                        l[f].evaluate(o), u[f].accumulateAdditive(a);
                    break;
                case Bx:
                default:
                    for (let f = 0, d = l.length; f !== d; ++f)
                        l[f].evaluate(o), u[f].accumulate(i, a);
            }
        }
    }
    _updateWeight(e) {
        let t = 0;
        if (this.enabled) {
            t = this.weight;
            const n = this._weightInterpolant;
            if (n !== null) {
                const i = n.evaluate(e)[0];
                (t *= i),
                    e > n.parameterPositions[1] &&
                        (this.stopFading(), i === 0 && (this.enabled = !1));
            }
        }
        return (this._effectiveWeight = t), t;
    }
    _updateTimeScale(e) {
        let t = 0;
        if (!this.paused) {
            t = this.timeScale;
            const n = this._timeScaleInterpolant;
            if (n !== null) {
                const i = n.evaluate(e)[0];
                (t *= i),
                    e > n.parameterPositions[1] &&
                        (this.stopWarping(),
                        t === 0 ? (this.paused = !0) : (this.timeScale = t));
            }
        }
        return (this._effectiveTimeScale = t), t;
    }
    _updateTime(e) {
        const t = this._clip.duration,
            n = this.loop;
        let i = this.time + e,
            s = this._loopCount;
        const o = n === iO;
        if (e === 0) return s === -1 ? i : o && (s & 1) === 1 ? t - i : i;
        if (n === tO) {
            s === -1 && ((this._loopCount = 0), this._setEndings(!0, !0, !1));
            e: {
                if (i >= t) i = t;
                else if (i < 0) i = 0;
                else {
                    this.time = i;
                    break e;
                }
                this.clampWhenFinished
                    ? (this.paused = !0)
                    : (this.enabled = !1),
                    (this.time = i),
                    this._mixer.dispatchEvent({
                        type: 'finished',
                        action: this,
                        direction: e < 0 ? -1 : 1,
                    });
            }
        } else {
            if (
                (s === -1 &&
                    (e >= 0
                        ? ((s = 0),
                          this._setEndings(!0, this.repetitions === 0, o))
                        : this._setEndings(this.repetitions === 0, !0, o)),
                i >= t || i < 0)
            ) {
                const a = Math.floor(i / t);
                (i -= t * a), (s += Math.abs(a));
                const l = this.repetitions - s;
                if (l <= 0)
                    this.clampWhenFinished
                        ? (this.paused = !0)
                        : (this.enabled = !1),
                        (i = e > 0 ? t : 0),
                        (this.time = i),
                        this._mixer.dispatchEvent({
                            type: 'finished',
                            action: this,
                            direction: e > 0 ? 1 : -1,
                        });
                else {
                    if (l === 1) {
                        const u = e < 0;
                        this._setEndings(u, !u, o);
                    } else this._setEndings(!1, !1, o);
                    (this._loopCount = s),
                        (this.time = i),
                        this._mixer.dispatchEvent({
                            type: 'loop',
                            action: this,
                            loopDelta: a,
                        });
                }
            } else this.time = i;
            if (o && (s & 1) === 1) return t - i;
        }
        return i;
    }
    _setEndings(e, t, n) {
        const i = this._interpolantSettings;
        n
            ? ((i.endingStart = $f), (i.endingEnd = $f))
            : (e
                  ? (i.endingStart = this.zeroSlopeAtStart ? $f : Zf)
                  : (i.endingStart = v0),
              t
                  ? (i.endingEnd = this.zeroSlopeAtEnd ? $f : Zf)
                  : (i.endingEnd = v0));
    }
    _scheduleFading(e, t, n) {
        const i = this._mixer,
            s = i.time;
        let o = this._weightInterpolant;
        o === null &&
            ((o = i._lendControlInterpolant()), (this._weightInterpolant = o));
        const a = o.parameterPositions,
            l = o.sampleValues;
        return (a[0] = s), (l[0] = t), (a[1] = s + e), (l[1] = n), this;
    }
}
const sY = new Float32Array(1);
class oY extends bu {
    constructor(e) {
        super(),
            (this._root = e),
            this._initMemoryManager(),
            (this._accuIndex = 0),
            (this.time = 0),
            (this.timeScale = 1);
    }
    _bindAction(e, t) {
        const n = e._localRoot || this._root,
            i = e._clip.tracks,
            s = i.length,
            o = e._propertyBindings,
            a = e._interpolants,
            l = n.uuid,
            u = this._bindingsByRootAndName;
        let f = u[l];
        f === void 0 && ((f = {}), (u[l] = f));
        for (let d = 0; d !== s; ++d) {
            const m = i[d],
                v = m.name;
            let _ = f[v];
            if (_ !== void 0) ++_.referenceCount, (o[d] = _);
            else {
                if (((_ = o[d]), _ !== void 0)) {
                    _._cacheIndex === null &&
                        (++_.referenceCount, this._addInactiveBinding(_, l, v));
                    continue;
                }
                const S = t && t._propertyBindings[d].binding.parsedPath;
                (_ = new vU(
                    Un.create(n, v, S),
                    m.ValueTypeName,
                    m.getValueSize()
                )),
                    ++_.referenceCount,
                    this._addInactiveBinding(_, l, v),
                    (o[d] = _);
            }
            a[d].resultBuffer = _.buffer;
        }
    }
    _activateAction(e) {
        if (!this._isActiveAction(e)) {
            if (e._cacheIndex === null) {
                const n = (e._localRoot || this._root).uuid,
                    i = e._clip.uuid,
                    s = this._actionsByClip[i];
                this._bindAction(e, s && s.knownActions[0]),
                    this._addInactiveAction(e, i, n);
            }
            const t = e._propertyBindings;
            for (let n = 0, i = t.length; n !== i; ++n) {
                const s = t[n];
                s.useCount++ === 0 &&
                    (this._lendBinding(s), s.saveOriginalState());
            }
            this._lendAction(e);
        }
    }
    _deactivateAction(e) {
        if (this._isActiveAction(e)) {
            const t = e._propertyBindings;
            for (let n = 0, i = t.length; n !== i; ++n) {
                const s = t[n];
                --s.useCount === 0 &&
                    (s.restoreOriginalState(), this._takeBackBinding(s));
            }
            this._takeBackAction(e);
        }
    }
    _initMemoryManager() {
        (this._actions = []),
            (this._nActiveActions = 0),
            (this._actionsByClip = {}),
            (this._bindings = []),
            (this._nActiveBindings = 0),
            (this._bindingsByRootAndName = {}),
            (this._controlInterpolants = []),
            (this._nActiveControlInterpolants = 0);
        const e = this;
        this.stats = {
            actions: {
                get total() {
                    return e._actions.length;
                },
                get inUse() {
                    return e._nActiveActions;
                },
            },
            bindings: {
                get total() {
                    return e._bindings.length;
                },
                get inUse() {
                    return e._nActiveBindings;
                },
            },
            controlInterpolants: {
                get total() {
                    return e._controlInterpolants.length;
                },
                get inUse() {
                    return e._nActiveControlInterpolants;
                },
            },
        };
    }
    _isActiveAction(e) {
        const t = e._cacheIndex;
        return t !== null && t < this._nActiveActions;
    }
    _addInactiveAction(e, t, n) {
        const i = this._actions,
            s = this._actionsByClip;
        let o = s[t];
        if (o === void 0)
            (o = { knownActions: [e], actionByRoot: {} }),
                (e._byClipCacheIndex = 0),
                (s[t] = o);
        else {
            const a = o.knownActions;
            (e._byClipCacheIndex = a.length), a.push(e);
        }
        (e._cacheIndex = i.length), i.push(e), (o.actionByRoot[n] = e);
    }
    _removeInactiveAction(e) {
        const t = this._actions,
            n = t[t.length - 1],
            i = e._cacheIndex;
        (n._cacheIndex = i), (t[i] = n), t.pop(), (e._cacheIndex = null);
        const s = e._clip.uuid,
            o = this._actionsByClip,
            a = o[s],
            l = a.knownActions,
            u = l[l.length - 1],
            f = e._byClipCacheIndex;
        (u._byClipCacheIndex = f),
            (l[f] = u),
            l.pop(),
            (e._byClipCacheIndex = null);
        const d = a.actionByRoot,
            m = (e._localRoot || this._root).uuid;
        delete d[m],
            l.length === 0 && delete o[s],
            this._removeInactiveBindingsForAction(e);
    }
    _removeInactiveBindingsForAction(e) {
        const t = e._propertyBindings;
        for (let n = 0, i = t.length; n !== i; ++n) {
            const s = t[n];
            --s.referenceCount === 0 && this._removeInactiveBinding(s);
        }
    }
    _lendAction(e) {
        const t = this._actions,
            n = e._cacheIndex,
            i = this._nActiveActions++,
            s = t[i];
        (e._cacheIndex = i), (t[i] = e), (s._cacheIndex = n), (t[n] = s);
    }
    _takeBackAction(e) {
        const t = this._actions,
            n = e._cacheIndex,
            i = --this._nActiveActions,
            s = t[i];
        (e._cacheIndex = i), (t[i] = e), (s._cacheIndex = n), (t[n] = s);
    }
    _addInactiveBinding(e, t, n) {
        const i = this._bindingsByRootAndName,
            s = this._bindings;
        let o = i[t];
        o === void 0 && ((o = {}), (i[t] = o)),
            (o[n] = e),
            (e._cacheIndex = s.length),
            s.push(e);
    }
    _removeInactiveBinding(e) {
        const t = this._bindings,
            n = e.binding,
            i = n.rootNode.uuid,
            s = n.path,
            o = this._bindingsByRootAndName,
            a = o[i],
            l = t[t.length - 1],
            u = e._cacheIndex;
        (l._cacheIndex = u),
            (t[u] = l),
            t.pop(),
            delete a[s],
            Object.keys(a).length === 0 && delete o[i];
    }
    _lendBinding(e) {
        const t = this._bindings,
            n = e._cacheIndex,
            i = this._nActiveBindings++,
            s = t[i];
        (e._cacheIndex = i), (t[i] = e), (s._cacheIndex = n), (t[n] = s);
    }
    _takeBackBinding(e) {
        const t = this._bindings,
            n = e._cacheIndex,
            i = --this._nActiveBindings,
            s = t[i];
        (e._cacheIndex = i), (t[i] = e), (s._cacheIndex = n), (t[n] = s);
    }
    _lendControlInterpolant() {
        const e = this._controlInterpolants,
            t = this._nActiveControlInterpolants++;
        let n = e[t];
        return (
            n === void 0 &&
                ((n = new jT(new Float32Array(2), new Float32Array(2), 1, sY)),
                (n.__cacheIndex = t),
                (e[t] = n)),
            n
        );
    }
    _takeBackControlInterpolant(e) {
        const t = this._controlInterpolants,
            n = e.__cacheIndex,
            i = --this._nActiveControlInterpolants,
            s = t[i];
        (e.__cacheIndex = i), (t[i] = e), (s.__cacheIndex = n), (t[n] = s);
    }
    clipAction(e, t, n) {
        const i = t || this._root,
            s = i.uuid;
        let o = typeof e == 'string' ? P0.findByName(i, e) : e;
        const a = o !== null ? o.uuid : e,
            l = this._actionsByClip[a];
        let u = null;
        if (
            (n === void 0 && (o !== null ? (n = o.blendMode) : (n = Bx)),
            l !== void 0)
        ) {
            const d = l.actionByRoot[s];
            if (d !== void 0 && d.blendMode === n) return d;
            (u = l.knownActions[0]), o === null && (o = u._clip);
        }
        if (o === null) return null;
        const f = new yU(this, o, t, n);
        return this._bindAction(f, u), this._addInactiveAction(f, a, s), f;
    }
    existingAction(e, t) {
        const n = t || this._root,
            i = n.uuid,
            s = typeof e == 'string' ? P0.findByName(n, e) : e,
            o = s ? s.uuid : e,
            a = this._actionsByClip[o];
        return (a !== void 0 && a.actionByRoot[i]) || null;
    }
    stopAllAction() {
        const e = this._actions,
            t = this._nActiveActions;
        for (let n = t - 1; n >= 0; --n) e[n].stop();
        return this;
    }
    update(e) {
        e *= this.timeScale;
        const t = this._actions,
            n = this._nActiveActions,
            i = (this.time += e),
            s = Math.sign(e),
            o = (this._accuIndex ^= 1);
        for (let u = 0; u !== n; ++u) t[u]._update(i, e, s, o);
        const a = this._bindings,
            l = this._nActiveBindings;
        for (let u = 0; u !== l; ++u) a[u].apply(o);
        return this;
    }
    setTime(e) {
        this.time = 0;
        for (let t = 0; t < this._actions.length; t++)
            this._actions[t].time = 0;
        return this.update(e);
    }
    getRoot() {
        return this._root;
    }
    uncacheClip(e) {
        const t = this._actions,
            n = e.uuid,
            i = this._actionsByClip,
            s = i[n];
        if (s !== void 0) {
            const o = s.knownActions;
            for (let a = 0, l = o.length; a !== l; ++a) {
                const u = o[a];
                this._deactivateAction(u);
                const f = u._cacheIndex,
                    d = t[t.length - 1];
                (u._cacheIndex = null),
                    (u._byClipCacheIndex = null),
                    (d._cacheIndex = f),
                    (t[f] = d),
                    t.pop(),
                    this._removeInactiveBindingsForAction(u);
            }
            delete i[n];
        }
    }
    uncacheRoot(e) {
        const t = e.uuid,
            n = this._actionsByClip;
        for (const o in n) {
            const a = n[o].actionByRoot,
                l = a[t];
            l !== void 0 &&
                (this._deactivateAction(l), this._removeInactiveAction(l));
        }
        const i = this._bindingsByRootAndName,
            s = i[t];
        if (s !== void 0)
            for (const o in s) {
                const a = s[o];
                a.restoreOriginalState(), this._removeInactiveBinding(a);
            }
    }
    uncacheAction(e, t) {
        const n = this.existingAction(e, t);
        n !== null &&
            (this._deactivateAction(n), this._removeInactiveAction(n));
    }
}
class eA {
    constructor(e) {
        this.value = e;
    }
    clone() {
        return new eA(
            this.value.clone === void 0 ? this.value : this.value.clone()
        );
    }
}
let aY = 0;
class lY extends bu {
    constructor() {
        super(),
            (this.isUniformsGroup = !0),
            Object.defineProperty(this, 'id', { value: aY++ }),
            (this.name = ''),
            (this.usage = S0),
            (this.uniforms = []);
    }
    add(e) {
        return this.uniforms.push(e), this;
    }
    remove(e) {
        const t = this.uniforms.indexOf(e);
        return t !== -1 && this.uniforms.splice(t, 1), this;
    }
    setName(e) {
        return (this.name = e), this;
    }
    setUsage(e) {
        return (this.usage = e), this;
    }
    dispose() {
        return this.dispatchEvent({ type: 'dispose' }), this;
    }
    copy(e) {
        (this.name = e.name), (this.usage = e.usage);
        const t = e.uniforms;
        this.uniforms.length = 0;
        for (let n = 0, i = t.length; n < i; n++) {
            const s = Array.isArray(t[n]) ? t[n] : [t[n]];
            for (let o = 0; o < s.length; o++) this.uniforms.push(s[o].clone());
        }
        return this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
}
class uY extends Kx {
    constructor(e, t, n = 1) {
        super(e, t),
            (this.isInstancedInterleavedBuffer = !0),
            (this.meshPerAttribute = n);
    }
    copy(e) {
        return (
            super.copy(e), (this.meshPerAttribute = e.meshPerAttribute), this
        );
    }
    clone(e) {
        const t = super.clone(e);
        return (t.meshPerAttribute = this.meshPerAttribute), t;
    }
    toJSON(e) {
        const t = super.toJSON(e);
        return (
            (t.isInstancedInterleavedBuffer = !0),
            (t.meshPerAttribute = this.meshPerAttribute),
            t
        );
    }
}
class cY {
    constructor(e, t, n, i, s) {
        (this.isGLBufferAttribute = !0),
            (this.name = ''),
            (this.buffer = e),
            (this.type = t),
            (this.itemSize = n),
            (this.elementSize = i),
            (this.count = s),
            (this.version = 0);
    }
    set needsUpdate(e) {
        e === !0 && this.version++;
    }
    setBuffer(e) {
        return (this.buffer = e), this;
    }
    setType(e, t) {
        return (this.type = e), (this.elementSize = t), this;
    }
    setItemSize(e) {
        return (this.itemSize = e), this;
    }
    setCount(e) {
        return (this.count = e), this;
    }
}
const uR = new qt();
class d1 {
    constructor(e, t, n = 0, i = 1 / 0) {
        (this.ray = new Gp(e, t)),
            (this.near = n),
            (this.far = i),
            (this.camera = null),
            (this.layers = new fh()),
            (this.params = {
                Mesh: {},
                Line: { threshold: 1 },
                LOD: {},
                Points: { threshold: 1 },
                Sprite: {},
            });
    }
    set(e, t) {
        this.ray.set(e, t);
    }
    setFromCamera(e, t) {
        t.isPerspectiveCamera
            ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld),
              this.ray.direction
                  .set(e.x, e.y, 0.5)
                  .unproject(t)
                  .sub(this.ray.origin)
                  .normalize(),
              (this.camera = t))
            : t.isOrthographicCamera
              ? (this.ray.origin
                    .set(e.x, e.y, (t.near + t.far) / (t.near - t.far))
                    .unproject(t),
                this.ray.direction
                    .set(0, 0, -1)
                    .transformDirection(t.matrixWorld),
                (this.camera = t))
              : console.error(
                    'THREE.Raycaster: Unsupported camera type: ' + t.type
                );
    }
    setFromXRController(e) {
        return (
            uR.identity().extractRotation(e.matrixWorld),
            this.ray.origin.setFromMatrixPosition(e.matrixWorld),
            this.ray.direction.set(0, 0, -1).applyMatrix4(uR),
            this
        );
    }
    intersectObject(e, t = !0, n = []) {
        return FM(e, this, n, t), n.sort(cR), n;
    }
    intersectObjects(e, t = !0, n = []) {
        for (let i = 0, s = e.length; i < s; i++) FM(e[i], this, n, t);
        return n.sort(cR), n;
    }
}
function cR(r, e) {
    return r.distance - e.distance;
}
function FM(r, e, t, n) {
    let i = !0;
    if (
        (r.layers.test(e.layers) && r.raycast(e, t) === !1 && (i = !1),
        i === !0 && n === !0)
    ) {
        const s = r.children;
        for (let o = 0, a = s.length; o < a; o++) FM(s[o], e, t, !0);
    }
}
class tA {
    constructor(e = 1, t = 0, n = 0) {
        return (this.radius = e), (this.phi = t), (this.theta = n), this;
    }
    set(e, t, n) {
        return (this.radius = e), (this.phi = t), (this.theta = n), this;
    }
    copy(e) {
        return (
            (this.radius = e.radius),
            (this.phi = e.phi),
            (this.theta = e.theta),
            this
        );
    }
    makeSafe() {
        return (
            (this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi))),
            this
        );
    }
    setFromVector3(e) {
        return this.setFromCartesianCoords(e.x, e.y, e.z);
    }
    setFromCartesianCoords(e, t, n) {
        return (
            (this.radius = Math.sqrt(e * e + t * t + n * n)),
            this.radius === 0
                ? ((this.theta = 0), (this.phi = 0))
                : ((this.theta = Math.atan2(e, n)),
                  (this.phi = Math.acos(Vi(t / this.radius, -1, 1)))),
            this
        );
    }
    clone() {
        return new this.constructor().copy(this);
    }
}
class fY {
    constructor(e = 1, t = 0, n = 0) {
        return (this.radius = e), (this.theta = t), (this.y = n), this;
    }
    set(e, t, n) {
        return (this.radius = e), (this.theta = t), (this.y = n), this;
    }
    copy(e) {
        return (
            (this.radius = e.radius),
            (this.theta = e.theta),
            (this.y = e.y),
            this
        );
    }
    setFromVector3(e) {
        return this.setFromCartesianCoords(e.x, e.y, e.z);
    }
    setFromCartesianCoords(e, t, n) {
        return (
            (this.radius = Math.sqrt(e * e + n * n)),
            (this.theta = Math.atan2(e, n)),
            (this.y = t),
            this
        );
    }
    clone() {
        return new this.constructor().copy(this);
    }
}
const fR = new tt();
class hY {
    constructor(e = new tt(1 / 0, 1 / 0), t = new tt(-1 / 0, -1 / 0)) {
        (this.isBox2 = !0), (this.min = e), (this.max = t);
    }
    set(e, t) {
        return this.min.copy(e), this.max.copy(t), this;
    }
    setFromPoints(e) {
        this.makeEmpty();
        for (let t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
        return this;
    }
    setFromCenterAndSize(e, t) {
        const n = fR.copy(t).multiplyScalar(0.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this;
    }
    clone() {
        return new this.constructor().copy(this);
    }
    copy(e) {
        return this.min.copy(e.min), this.max.copy(e.max), this;
    }
    makeEmpty() {
        return (
            (this.min.x = this.min.y = 1 / 0),
            (this.max.x = this.max.y = -1 / 0),
            this
        );
    }
    isEmpty() {
        return this.max.x < this.min.x || this.max.y < this.min.y;
    }
    getCenter(e) {
        return this.isEmpty()
            ? e.set(0, 0)
            : e.addVectors(this.min, this.max).multiplyScalar(0.5);
    }
    getSize(e) {
        return this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min);
    }
    expandByPoint(e) {
        return this.min.min(e), this.max.max(e), this;
    }
    expandByVector(e) {
        return this.min.sub(e), this.max.add(e), this;
    }
    expandByScalar(e) {
        return this.min.addScalar(-e), this.max.addScalar(e), this;
    }
    containsPoint(e) {
        return !(
            e.x < this.min.x ||
            e.x > this.max.x ||
            e.y < this.min.y ||
            e.y > this.max.y
        );
    }
    containsBox(e) {
        return (
            this.min.x <= e.min.x &&
            e.max.x <= this.max.x &&
            this.min.y <= e.min.y &&
            e.max.y <= this.max.y
        );
    }
    getParameter(e, t) {
        return t.set(
            (e.x - this.min.x) / (this.max.x - this.min.x),
            (e.y - this.min.y) / (this.max.y - this.min.y)
        );
    }
    intersectsBox(e) {
        return !(
            e.max.x < this.min.x ||
            e.min.x > this.max.x ||
            e.max.y < this.min.y ||
            e.min.y > this.max.y
        );
    }
    clampPoint(e, t) {
        return t.copy(e).clamp(this.min, this.max);
    }
    distanceToPoint(e) {
        return this.clampPoint(e, fR).distanceTo(e);
    }
    intersect(e) {
        return (
            this.min.max(e.min),
            this.max.min(e.max),
            this.isEmpty() && this.makeEmpty(),
            this
        );
    }
    union(e) {
        return this.min.min(e.min), this.max.max(e.max), this;
    }
    translate(e) {
        return this.min.add(e), this.max.add(e), this;
    }
    equals(e) {
        return e.min.equals(this.min) && e.max.equals(this.max);
    }
}
const hR = new re(),
    Wy = new re();
class dY {
    constructor(e = new re(), t = new re()) {
        (this.start = e), (this.end = t);
    }
    set(e, t) {
        return this.start.copy(e), this.end.copy(t), this;
    }
    copy(e) {
        return this.start.copy(e.start), this.end.copy(e.end), this;
    }
    getCenter(e) {
        return e.addVectors(this.start, this.end).multiplyScalar(0.5);
    }
    delta(e) {
        return e.subVectors(this.end, this.start);
    }
    distanceSq() {
        return this.start.distanceToSquared(this.end);
    }
    distance() {
        return this.start.distanceTo(this.end);
    }
    at(e, t) {
        return this.delta(t).multiplyScalar(e).add(this.start);
    }
    closestPointToPointParameter(e, t) {
        hR.subVectors(e, this.start), Wy.subVectors(this.end, this.start);
        const n = Wy.dot(Wy);
        let s = Wy.dot(hR) / n;
        return t && (s = Vi(s, 0, 1)), s;
    }
    closestPointToPoint(e, t, n) {
        const i = this.closestPointToPointParameter(e, t);
        return this.delta(n).multiplyScalar(i).add(this.start);
    }
    applyMatrix4(e) {
        return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this;
    }
    equals(e) {
        return e.start.equals(this.start) && e.end.equals(this.end);
    }
    clone() {
        return new this.constructor().copy(this);
    }
}
const dR = new re();
class pY extends In {
    constructor(e, t) {
        super(),
            (this.light = e),
            (this.matrixAutoUpdate = !1),
            (this.color = t),
            (this.type = 'SpotLightHelper');
        const n = new xn(),
            i = [
                0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0,
                0, 1, 1, 0, 0, 0, 0, -1, 1,
            ];
        for (let o = 0, a = 1, l = 32; o < l; o++, a++) {
            const u = (o / l) * Math.PI * 2,
                f = (a / l) * Math.PI * 2;
            i.push(Math.cos(u), Math.sin(u), 1, Math.cos(f), Math.sin(f), 1);
        }
        n.setAttribute('position', new Ht(i, 3));
        const s = new ks({ fog: !1, toneMapped: !1 });
        (this.cone = new Dl(n, s)), this.add(this.cone), this.update();
    }
    dispose() {
        this.cone.geometry.dispose(), this.cone.material.dispose();
    }
    update() {
        this.light.updateWorldMatrix(!0, !1),
            this.light.target.updateWorldMatrix(!0, !1),
            this.parent
                ? (this.parent.updateWorldMatrix(!0),
                  this.matrix
                      .copy(this.parent.matrixWorld)
                      .invert()
                      .multiply(this.light.matrixWorld))
                : this.matrix.copy(this.light.matrixWorld),
            this.matrixWorld.copy(this.light.matrixWorld);
        const e = this.light.distance ? this.light.distance : 1e3,
            t = e * Math.tan(this.light.angle);
        this.cone.scale.set(t, t, e),
            dR.setFromMatrixPosition(this.light.target.matrixWorld),
            this.cone.lookAt(dR),
            this.color !== void 0
                ? this.cone.material.color.set(this.color)
                : this.cone.material.color.copy(this.light.color);
    }
}
const fc = new re(),
    jy = new qt(),
    rw = new qt();
class mY extends Dl {
    constructor(e) {
        const t = _U(e),
            n = new xn(),
            i = [],
            s = [],
            o = new Tt(0, 0, 1),
            a = new Tt(0, 1, 0);
        for (let u = 0; u < t.length; u++) {
            const f = t[u];
            f.parent &&
                f.parent.isBone &&
                (i.push(0, 0, 0),
                i.push(0, 0, 0),
                s.push(o.r, o.g, o.b),
                s.push(a.r, a.g, a.b));
        }
        n.setAttribute('position', new Ht(i, 3)),
            n.setAttribute('color', new Ht(s, 3));
        const l = new ks({
            vertexColors: !0,
            depthTest: !1,
            depthWrite: !1,
            toneMapped: !1,
            transparent: !0,
        });
        super(n, l),
            (this.isSkeletonHelper = !0),
            (this.type = 'SkeletonHelper'),
            (this.root = e),
            (this.bones = t),
            (this.matrix = e.matrixWorld),
            (this.matrixAutoUpdate = !1);
    }
    updateMatrixWorld(e) {
        const t = this.bones,
            n = this.geometry,
            i = n.getAttribute('position');
        rw.copy(this.root.matrixWorld).invert();
        for (let s = 0, o = 0; s < t.length; s++) {
            const a = t[s];
            a.parent &&
                a.parent.isBone &&
                (jy.multiplyMatrices(rw, a.matrixWorld),
                fc.setFromMatrixPosition(jy),
                i.setXYZ(o, fc.x, fc.y, fc.z),
                jy.multiplyMatrices(rw, a.parent.matrixWorld),
                fc.setFromMatrixPosition(jy),
                i.setXYZ(o + 1, fc.x, fc.y, fc.z),
                (o += 2));
        }
        (n.getAttribute('position').needsUpdate = !0),
            super.updateMatrixWorld(e);
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
}
function _U(r) {
    const e = [];
    r.isBone === !0 && e.push(r);
    for (let t = 0; t < r.children.length; t++)
        e.push.apply(e, _U(r.children[t]));
    return e;
}
class gY extends Jn {
    constructor(e, t, n) {
        const i = new Q0(t, 4, 2),
            s = new ja({ wireframe: !0, fog: !1, toneMapped: !1 });
        super(i, s),
            (this.light = e),
            (this.color = n),
            (this.type = 'PointLightHelper'),
            (this.matrix = this.light.matrixWorld),
            (this.matrixAutoUpdate = !1),
            this.update();
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
    update() {
        this.light.updateWorldMatrix(!0, !1),
            this.color !== void 0
                ? this.material.color.set(this.color)
                : this.material.color.copy(this.light.color);
    }
}
const vY = new re(),
    pR = new Tt(),
    mR = new Tt();
class yY extends In {
    constructor(e, t, n) {
        super(),
            (this.light = e),
            (this.matrix = e.matrixWorld),
            (this.matrixAutoUpdate = !1),
            (this.color = n),
            (this.type = 'HemisphereLightHelper');
        const i = new J0(t);
        i.rotateY(Math.PI * 0.5),
            (this.material = new ja({
                wireframe: !0,
                fog: !1,
                toneMapped: !1,
            })),
            this.color === void 0 && (this.material.vertexColors = !0);
        const s = i.getAttribute('position'),
            o = new Float32Array(s.count * 3);
        i.setAttribute('color', new qn(o, 3)),
            this.add(new Jn(i, this.material)),
            this.update();
    }
    dispose() {
        this.children[0].geometry.dispose(),
            this.children[0].material.dispose();
    }
    update() {
        const e = this.children[0];
        if (this.color !== void 0) this.material.color.set(this.color);
        else {
            const t = e.geometry.getAttribute('color');
            pR.copy(this.light.color), mR.copy(this.light.groundColor);
            for (let n = 0, i = t.count; n < i; n++) {
                const s = n < i / 2 ? pR : mR;
                t.setXYZ(n, s.r, s.g, s.b);
            }
            t.needsUpdate = !0;
        }
        this.light.updateWorldMatrix(!0, !1),
            e.lookAt(vY.setFromMatrixPosition(this.light.matrixWorld).negate());
    }
}
class _Y extends Dl {
    constructor(e = 10, t = 10, n = 4473924, i = 8947848) {
        (n = new Tt(n)), (i = new Tt(i));
        const s = t / 2,
            o = e / t,
            a = e / 2,
            l = [],
            u = [];
        for (let m = 0, v = 0, _ = -a; m <= t; m++, _ += o) {
            l.push(-a, 0, _, a, 0, _), l.push(_, 0, -a, _, 0, a);
            const S = m === s ? n : i;
            S.toArray(u, v),
                (v += 3),
                S.toArray(u, v),
                (v += 3),
                S.toArray(u, v),
                (v += 3),
                S.toArray(u, v),
                (v += 3);
        }
        const f = new xn();
        f.setAttribute('position', new Ht(l, 3)),
            f.setAttribute('color', new Ht(u, 3));
        const d = new ks({ vertexColors: !0, toneMapped: !1 });
        super(f, d), (this.type = 'GridHelper');
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
}
class xY extends Dl {
    constructor(e = 10, t = 16, n = 8, i = 64, s = 4473924, o = 8947848) {
        (s = new Tt(s)), (o = new Tt(o));
        const a = [],
            l = [];
        if (t > 1)
            for (let d = 0; d < t; d++) {
                const m = (d / t) * (Math.PI * 2),
                    v = Math.sin(m) * e,
                    _ = Math.cos(m) * e;
                a.push(0, 0, 0), a.push(v, 0, _);
                const S = d & 1 ? s : o;
                l.push(S.r, S.g, S.b), l.push(S.r, S.g, S.b);
            }
        for (let d = 0; d < n; d++) {
            const m = d & 1 ? s : o,
                v = e - (e / n) * d;
            for (let _ = 0; _ < i; _++) {
                let S = (_ / i) * (Math.PI * 2),
                    w = Math.sin(S) * v,
                    x = Math.cos(S) * v;
                a.push(w, 0, x),
                    l.push(m.r, m.g, m.b),
                    (S = ((_ + 1) / i) * (Math.PI * 2)),
                    (w = Math.sin(S) * v),
                    (x = Math.cos(S) * v),
                    a.push(w, 0, x),
                    l.push(m.r, m.g, m.b);
            }
        }
        const u = new xn();
        u.setAttribute('position', new Ht(a, 3)),
            u.setAttribute('color', new Ht(l, 3));
        const f = new ks({ vertexColors: !0, toneMapped: !1 });
        super(u, f), (this.type = 'PolarGridHelper');
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
}
const gR = new re(),
    Xy = new re(),
    vR = new re();
class SY extends In {
    constructor(e, t, n) {
        super(),
            (this.light = e),
            (this.matrix = e.matrixWorld),
            (this.matrixAutoUpdate = !1),
            (this.color = n),
            (this.type = 'DirectionalLightHelper'),
            t === void 0 && (t = 1);
        let i = new xn();
        i.setAttribute(
            'position',
            new Ht([-t, t, 0, t, t, 0, t, -t, 0, -t, -t, 0, -t, t, 0], 3)
        );
        const s = new ks({ fog: !1, toneMapped: !1 });
        (this.lightPlane = new Dc(i, s)),
            this.add(this.lightPlane),
            (i = new xn()),
            i.setAttribute('position', new Ht([0, 0, 0, 0, 0, 1], 3)),
            (this.targetLine = new Dc(i, s)),
            this.add(this.targetLine),
            this.update();
    }
    dispose() {
        this.lightPlane.geometry.dispose(),
            this.lightPlane.material.dispose(),
            this.targetLine.geometry.dispose(),
            this.targetLine.material.dispose();
    }
    update() {
        this.light.updateWorldMatrix(!0, !1),
            this.light.target.updateWorldMatrix(!0, !1),
            gR.setFromMatrixPosition(this.light.matrixWorld),
            Xy.setFromMatrixPosition(this.light.target.matrixWorld),
            vR.subVectors(Xy, gR),
            this.lightPlane.lookAt(Xy),
            this.color !== void 0
                ? (this.lightPlane.material.color.set(this.color),
                  this.targetLine.material.color.set(this.color))
                : (this.lightPlane.material.color.copy(this.light.color),
                  this.targetLine.material.color.copy(this.light.color)),
            this.targetLine.lookAt(Xy),
            (this.targetLine.scale.z = vR.length());
    }
}
const Yy = new re(),
    Fi = new Y0();
class wY extends Dl {
    constructor(e) {
        const t = new xn(),
            n = new ks({ color: 16777215, vertexColors: !0, toneMapped: !1 }),
            i = [],
            s = [],
            o = {};
        a('n1', 'n2'),
            a('n2', 'n4'),
            a('n4', 'n3'),
            a('n3', 'n1'),
            a('f1', 'f2'),
            a('f2', 'f4'),
            a('f4', 'f3'),
            a('f3', 'f1'),
            a('n1', 'f1'),
            a('n2', 'f2'),
            a('n3', 'f3'),
            a('n4', 'f4'),
            a('p', 'n1'),
            a('p', 'n2'),
            a('p', 'n3'),
            a('p', 'n4'),
            a('u1', 'u2'),
            a('u2', 'u3'),
            a('u3', 'u1'),
            a('c', 't'),
            a('p', 'c'),
            a('cn1', 'cn2'),
            a('cn3', 'cn4'),
            a('cf1', 'cf2'),
            a('cf3', 'cf4');
        function a(_, S) {
            l(_), l(S);
        }
        function l(_) {
            i.push(0, 0, 0),
                s.push(0, 0, 0),
                o[_] === void 0 && (o[_] = []),
                o[_].push(i.length / 3 - 1);
        }
        t.setAttribute('position', new Ht(i, 3)),
            t.setAttribute('color', new Ht(s, 3)),
            super(t, n),
            (this.type = 'CameraHelper'),
            (this.camera = e),
            this.camera.updateProjectionMatrix &&
                this.camera.updateProjectionMatrix(),
            (this.matrix = e.matrixWorld),
            (this.matrixAutoUpdate = !1),
            (this.pointMap = o),
            this.update();
        const u = new Tt(16755200),
            f = new Tt(16711680),
            d = new Tt(43775),
            m = new Tt(16777215),
            v = new Tt(3355443);
        this.setColors(u, f, d, m, v);
    }
    setColors(e, t, n, i, s) {
        const a = this.geometry.getAttribute('color');
        a.setXYZ(0, e.r, e.g, e.b),
            a.setXYZ(1, e.r, e.g, e.b),
            a.setXYZ(2, e.r, e.g, e.b),
            a.setXYZ(3, e.r, e.g, e.b),
            a.setXYZ(4, e.r, e.g, e.b),
            a.setXYZ(5, e.r, e.g, e.b),
            a.setXYZ(6, e.r, e.g, e.b),
            a.setXYZ(7, e.r, e.g, e.b),
            a.setXYZ(8, e.r, e.g, e.b),
            a.setXYZ(9, e.r, e.g, e.b),
            a.setXYZ(10, e.r, e.g, e.b),
            a.setXYZ(11, e.r, e.g, e.b),
            a.setXYZ(12, e.r, e.g, e.b),
            a.setXYZ(13, e.r, e.g, e.b),
            a.setXYZ(14, e.r, e.g, e.b),
            a.setXYZ(15, e.r, e.g, e.b),
            a.setXYZ(16, e.r, e.g, e.b),
            a.setXYZ(17, e.r, e.g, e.b),
            a.setXYZ(18, e.r, e.g, e.b),
            a.setXYZ(19, e.r, e.g, e.b),
            a.setXYZ(20, e.r, e.g, e.b),
            a.setXYZ(21, e.r, e.g, e.b),
            a.setXYZ(22, e.r, e.g, e.b),
            a.setXYZ(23, e.r, e.g, e.b),
            a.setXYZ(24, t.r, t.g, t.b),
            a.setXYZ(25, t.r, t.g, t.b),
            a.setXYZ(26, t.r, t.g, t.b),
            a.setXYZ(27, t.r, t.g, t.b),
            a.setXYZ(28, t.r, t.g, t.b),
            a.setXYZ(29, t.r, t.g, t.b),
            a.setXYZ(30, t.r, t.g, t.b),
            a.setXYZ(31, t.r, t.g, t.b),
            a.setXYZ(32, n.r, n.g, n.b),
            a.setXYZ(33, n.r, n.g, n.b),
            a.setXYZ(34, n.r, n.g, n.b),
            a.setXYZ(35, n.r, n.g, n.b),
            a.setXYZ(36, n.r, n.g, n.b),
            a.setXYZ(37, n.r, n.g, n.b),
            a.setXYZ(38, i.r, i.g, i.b),
            a.setXYZ(39, i.r, i.g, i.b),
            a.setXYZ(40, s.r, s.g, s.b),
            a.setXYZ(41, s.r, s.g, s.b),
            a.setXYZ(42, s.r, s.g, s.b),
            a.setXYZ(43, s.r, s.g, s.b),
            a.setXYZ(44, s.r, s.g, s.b),
            a.setXYZ(45, s.r, s.g, s.b),
            a.setXYZ(46, s.r, s.g, s.b),
            a.setXYZ(47, s.r, s.g, s.b),
            a.setXYZ(48, s.r, s.g, s.b),
            a.setXYZ(49, s.r, s.g, s.b),
            (a.needsUpdate = !0);
    }
    update() {
        const e = this.geometry,
            t = this.pointMap,
            n = 1,
            i = 1;
        Fi.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),
            Ki('c', t, e, Fi, 0, 0, -1),
            Ki('t', t, e, Fi, 0, 0, 1),
            Ki('n1', t, e, Fi, -1, -1, -1),
            Ki('n2', t, e, Fi, n, -1, -1),
            Ki('n3', t, e, Fi, -1, i, -1),
            Ki('n4', t, e, Fi, n, i, -1),
            Ki('f1', t, e, Fi, -1, -1, 1),
            Ki('f2', t, e, Fi, n, -1, 1),
            Ki('f3', t, e, Fi, -1, i, 1),
            Ki('f4', t, e, Fi, n, i, 1),
            Ki('u1', t, e, Fi, n * 0.7, i * 1.1, -1),
            Ki('u2', t, e, Fi, -1 * 0.7, i * 1.1, -1),
            Ki('u3', t, e, Fi, 0, i * 2, -1),
            Ki('cf1', t, e, Fi, -1, 0, 1),
            Ki('cf2', t, e, Fi, n, 0, 1),
            Ki('cf3', t, e, Fi, 0, -1, 1),
            Ki('cf4', t, e, Fi, 0, i, 1),
            Ki('cn1', t, e, Fi, -1, 0, -1),
            Ki('cn2', t, e, Fi, n, 0, -1),
            Ki('cn3', t, e, Fi, 0, -1, -1),
            Ki('cn4', t, e, Fi, 0, i, -1),
            (e.getAttribute('position').needsUpdate = !0);
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
}
function Ki(r, e, t, n, i, s, o) {
    Yy.set(i, s, o).unproject(n);
    const a = e[r];
    if (a !== void 0) {
        const l = t.getAttribute('position');
        for (let u = 0, f = a.length; u < f; u++)
            l.setXYZ(a[u], Yy.x, Yy.y, Yy.z);
    }
}
const qy = new Ar();
class MY extends Dl {
    constructor(e, t = 16776960) {
        const n = new Uint16Array([
                0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2,
                6, 3, 7,
            ]),
            i = new Float32Array(8 * 3),
            s = new xn();
        s.setIndex(new qn(n, 1)),
            s.setAttribute('position', new qn(i, 3)),
            super(s, new ks({ color: t, toneMapped: !1 })),
            (this.object = e),
            (this.type = 'BoxHelper'),
            (this.matrixAutoUpdate = !1),
            this.update();
    }
    update(e) {
        if (
            (e !== void 0 &&
                console.warn(
                    'THREE.BoxHelper: .update() has no longer arguments.'
                ),
            this.object !== void 0 && qy.setFromObject(this.object),
            qy.isEmpty())
        )
            return;
        const t = qy.min,
            n = qy.max,
            i = this.geometry.attributes.position,
            s = i.array;
        (s[0] = n.x),
            (s[1] = n.y),
            (s[2] = n.z),
            (s[3] = t.x),
            (s[4] = n.y),
            (s[5] = n.z),
            (s[6] = t.x),
            (s[7] = t.y),
            (s[8] = n.z),
            (s[9] = n.x),
            (s[10] = t.y),
            (s[11] = n.z),
            (s[12] = n.x),
            (s[13] = n.y),
            (s[14] = t.z),
            (s[15] = t.x),
            (s[16] = n.y),
            (s[17] = t.z),
            (s[18] = t.x),
            (s[19] = t.y),
            (s[20] = t.z),
            (s[21] = n.x),
            (s[22] = t.y),
            (s[23] = t.z),
            (i.needsUpdate = !0),
            this.geometry.computeBoundingSphere();
    }
    setFromObject(e) {
        return (this.object = e), this.update(), this;
    }
    copy(e, t) {
        return super.copy(e, t), (this.object = e.object), this;
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
}
class EY extends Dl {
    constructor(e, t = 16776960) {
        const n = new Uint16Array([
                0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2,
                6, 3, 7,
            ]),
            i = [
                1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1,
                -1, -1, 1, -1, -1,
            ],
            s = new xn();
        s.setIndex(new qn(n, 1)),
            s.setAttribute('position', new Ht(i, 3)),
            super(s, new ks({ color: t, toneMapped: !1 })),
            (this.box = e),
            (this.type = 'Box3Helper'),
            this.geometry.computeBoundingSphere();
    }
    updateMatrixWorld(e) {
        const t = this.box;
        t.isEmpty() ||
            (t.getCenter(this.position),
            t.getSize(this.scale),
            this.scale.multiplyScalar(0.5),
            super.updateMatrixWorld(e));
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
}
class TY extends Dc {
    constructor(e, t = 1, n = 16776960) {
        const i = n,
            s = [
                1, -1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, 1, 0, -1, -1, 0, 1,
                -1, 0, 1, 1, 0,
            ],
            o = new xn();
        o.setAttribute('position', new Ht(s, 3)),
            o.computeBoundingSphere(),
            super(o, new ks({ color: i, toneMapped: !1 })),
            (this.type = 'PlaneHelper'),
            (this.plane = e),
            (this.size = t);
        const a = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0],
            l = new xn();
        l.setAttribute('position', new Ht(a, 3)),
            l.computeBoundingSphere(),
            this.add(
                new Jn(
                    l,
                    new ja({
                        color: i,
                        opacity: 0.2,
                        transparent: !0,
                        depthWrite: !1,
                        toneMapped: !1,
                    })
                )
            );
    }
    updateMatrixWorld(e) {
        this.position.set(0, 0, 0),
            this.scale.set(0.5 * this.size, 0.5 * this.size, 1),
            this.lookAt(this.plane.normal),
            this.translateZ(-this.plane.constant),
            super.updateMatrixWorld(e);
    }
    dispose() {
        this.geometry.dispose(),
            this.material.dispose(),
            this.children[0].geometry.dispose(),
            this.children[0].material.dispose();
    }
}
const yR = new re();
let Ky, sw;
class AY extends In {
    constructor(
        e = new re(0, 0, 1),
        t = new re(0, 0, 0),
        n = 1,
        i = 16776960,
        s = n * 0.2,
        o = s * 0.2
    ) {
        super(),
            (this.type = 'ArrowHelper'),
            Ky === void 0 &&
                ((Ky = new xn()),
                Ky.setAttribute('position', new Ht([0, 0, 0, 0, 1, 0], 3)),
                (sw = new Xp(0, 0.5, 1, 5, 1)),
                sw.translate(0, -0.5, 0)),
            this.position.copy(t),
            (this.line = new Dc(Ky, new ks({ color: i, toneMapped: !1 }))),
            (this.line.matrixAutoUpdate = !1),
            this.add(this.line),
            (this.cone = new Jn(sw, new ja({ color: i, toneMapped: !1 }))),
            (this.cone.matrixAutoUpdate = !1),
            this.add(this.cone),
            this.setDirection(e),
            this.setLength(n, s, o);
    }
    setDirection(e) {
        if (e.y > 0.99999) this.quaternion.set(0, 0, 0, 1);
        else if (e.y < -0.99999) this.quaternion.set(1, 0, 0, 0);
        else {
            yR.set(e.z, 0, -e.x).normalize();
            const t = Math.acos(e.y);
            this.quaternion.setFromAxisAngle(yR, t);
        }
    }
    setLength(e, t = e * 0.2, n = t * 0.2) {
        this.line.scale.set(1, Math.max(1e-4, e - t), 1),
            this.line.updateMatrix(),
            this.cone.scale.set(n, t, n),
            (this.cone.position.y = e),
            this.cone.updateMatrix();
    }
    setColor(e) {
        this.line.material.color.set(e), this.cone.material.color.set(e);
    }
    copy(e) {
        return (
            super.copy(e, !1),
            this.line.copy(e.line),
            this.cone.copy(e.cone),
            this
        );
    }
    dispose() {
        this.line.geometry.dispose(),
            this.line.material.dispose(),
            this.cone.geometry.dispose(),
            this.cone.material.dispose();
    }
}
class bY extends Dl {
    constructor(e = 1) {
        const t = [0, 0, 0, e, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e],
            n = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1],
            i = new xn();
        i.setAttribute('position', new Ht(t, 3)),
            i.setAttribute('color', new Ht(n, 3));
        const s = new ks({ vertexColors: !0, toneMapped: !1 });
        super(i, s), (this.type = 'AxesHelper');
    }
    setColors(e, t, n) {
        const i = new Tt(),
            s = this.geometry.attributes.color.array;
        return (
            i.set(e),
            i.toArray(s, 0),
            i.toArray(s, 3),
            i.set(t),
            i.toArray(s, 6),
            i.toArray(s, 9),
            i.set(n),
            i.toArray(s, 12),
            i.toArray(s, 15),
            (this.geometry.attributes.color.needsUpdate = !0),
            this
        );
    }
    dispose() {
        this.geometry.dispose(), this.material.dispose();
    }
}
class CY {
    constructor() {
        (this.type = 'ShapePath'),
            (this.color = new Tt()),
            (this.subPaths = []),
            (this.currentPath = null);
    }
    moveTo(e, t) {
        return (
            (this.currentPath = new E0()),
            this.subPaths.push(this.currentPath),
            this.currentPath.moveTo(e, t),
            this
        );
    }
    lineTo(e, t) {
        return this.currentPath.lineTo(e, t), this;
    }
    quadraticCurveTo(e, t, n, i) {
        return this.currentPath.quadraticCurveTo(e, t, n, i), this;
    }
    bezierCurveTo(e, t, n, i, s, o) {
        return this.currentPath.bezierCurveTo(e, t, n, i, s, o), this;
    }
    splineThru(e) {
        return this.currentPath.splineThru(e), this;
    }
    toShapes(e) {
        function t(x) {
            const A = [];
            for (let T = 0, b = x.length; T < b; T++) {
                const P = x[T],
                    L = new Ac();
                (L.curves = P.curves), A.push(L);
            }
            return A;
        }
        function n(x, A) {
            const T = A.length;
            let b = !1;
            for (let P = T - 1, L = 0; L < T; P = L++) {
                let D = A[P],
                    O = A[L],
                    I = O.x - D.x,
                    U = O.y - D.y;
                if (Math.abs(U) > Number.EPSILON) {
                    if (
                        (U < 0 && ((D = A[L]), (I = -I), (O = A[P]), (U = -U)),
                        x.y < D.y || x.y > O.y)
                    )
                        continue;
                    if (x.y === D.y) {
                        if (x.x === D.x) return !0;
                    } else {
                        const H = U * (x.x - D.x) - I * (x.y - D.y);
                        if (H === 0) return !0;
                        if (H < 0) continue;
                        b = !b;
                    }
                } else {
                    if (x.y !== D.y) continue;
                    if (
                        (O.x <= x.x && x.x <= D.x) ||
                        (D.x <= x.x && x.x <= O.x)
                    )
                        return !0;
                }
            }
            return b;
        }
        const i = Cl.isClockWise,
            s = this.subPaths;
        if (s.length === 0) return [];
        let o, a, l;
        const u = [];
        if (s.length === 1)
            return (
                (a = s[0]), (l = new Ac()), (l.curves = a.curves), u.push(l), u
            );
        let f = !i(s[0].getPoints());
        f = e ? !f : f;
        const d = [],
            m = [];
        let v = [],
            _ = 0,
            S;
        (m[_] = void 0), (v[_] = []);
        for (let x = 0, A = s.length; x < A; x++)
            (a = s[x]),
                (S = a.getPoints()),
                (o = i(S)),
                (o = e ? !o : o),
                o
                    ? (!f && m[_] && _++,
                      (m[_] = { s: new Ac(), p: S }),
                      (m[_].s.curves = a.curves),
                      f && _++,
                      (v[_] = []))
                    : v[_].push({ h: a, p: S[0] });
        if (!m[0]) return t(s);
        if (m.length > 1) {
            let x = !1,
                A = 0;
            for (let T = 0, b = m.length; T < b; T++) d[T] = [];
            for (let T = 0, b = m.length; T < b; T++) {
                const P = v[T];
                for (let L = 0; L < P.length; L++) {
                    const D = P[L];
                    let O = !0;
                    for (let I = 0; I < m.length; I++)
                        n(D.p, m[I].p) &&
                            (T !== I && A++,
                            O ? ((O = !1), d[I].push(D)) : (x = !0));
                    O && d[T].push(D);
                }
            }
            A > 0 && x === !1 && (v = d);
        }
        let w;
        for (let x = 0, A = m.length; x < A; x++) {
            (l = m[x].s), u.push(l), (w = v[x]);
            for (let T = 0, b = w.length; T < b; T++) l.holes.push(w[T].h);
        }
        return u;
    }
}
class RY extends Ji {
    constructor(e = 1, t = 1, n = 1, i = {}) {
        console.warn(
            'THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the "count" parameter to enable MRT.'
        ),
            super(e, t, { ...i, count: n }),
            (this.isWebGLMultipleRenderTargets = !0);
    }
    get texture() {
        return this.textures;
    }
}
typeof __THREE_DEVTOOLS__ < 'u' &&
    __THREE_DEVTOOLS__.dispatchEvent(
        new CustomEvent('register', { detail: { revision: Vp } })
    );
typeof window < 'u' &&
    (window.__THREE__
        ? console.warn(
              'WARNING: Multiple instances of Three.js being imported.'
          )
        : (window.__THREE__ = Vp));
const PY = Object.freeze(
    Object.defineProperty(
        {
            __proto__: null,
            ACESFilmicToneMapping: dT,
            AddEquation: yc,
            AddOperation: YD,
            AdditiveAnimationBlendMode: wT,
            AdditiveBlending: MM,
            AgXToneMapping: JD,
            AlphaFormat: gT,
            AlwaysCompare: hO,
            AlwaysDepth: zD,
            AlwaysStencilFunc: CM,
            AmbientLight: fU,
            AnimationAction: yU,
            AnimationClip: P0,
            AnimationLoader: OX,
            AnimationMixer: oY,
            AnimationObjectGroup: rY,
            AnimationUtils: PX,
            ArcCurve: UO,
            ArrayCamera: AO,
            ArrowHelper: AY,
            AttachedBindMode: AM,
            Audio: gU,
            AudioAnalyser: qX,
            AudioContext: ZT,
            AudioListener: jX,
            AudioLoader: HX,
            AxesHelper: bY,
            BackSide: ps,
            BasicDepthPacking: rO,
            BasicShadowMap: xD,
            BatchedMesh: IO,
            Bone: UT,
            BooleanKeyframeTrack: Mh,
            Box2: hY,
            Box3: Ar,
            Box3Helper: EY,
            BoxGeometry: wh,
            BoxHelper: MY,
            BufferAttribute: qn,
            BufferGeometry: xn,
            BufferGeometryLoader: mU,
            ByteType: Dx,
            Cache: _u,
            Camera: Y0,
            CameraHelper: wY,
            CanvasTexture: eX,
            CapsuleGeometry: Qx,
            CatmullRomCurve3: kO,
            CineonToneMapping: ZD,
            CircleGeometry: e1,
            ClampToEdgeWrapping: pr,
            Clock: $T,
            Color: Tt,
            ColorKeyframeTrack: XT,
            ColorManagement: zn,
            CompressedArrayTexture: Jj,
            CompressedCubeTexture: Qj,
            CompressedTexture: $x,
            CompressedTextureLoader: UX,
            ConeGeometry: t1,
            ConstantAlphaFactor: ND,
            ConstantColorFactor: UD,
            CubeCamera: _O,
            CubeReflectionMapping: Pl,
            CubeRefractionMapping: Ic,
            CubeTexture: q0,
            CubeTextureLoader: oU,
            CubeUVReflectionMapping: Hp,
            CubicBezierCurve: FT,
            CubicBezierCurve3: NO,
            CubicInterpolant: nU,
            CullFaceBack: wM,
            CullFaceFront: _D,
            CullFaceFrontBack: UH,
            CullFaceNone: yD,
            Curve: Xa,
            CurvePath: BO,
            CustomBlending: SD,
            CustomToneMapping: $D,
            CylinderGeometry: Xp,
            Cylindrical: fY,
            Data3DTexture: CT,
            DataArrayTexture: Vx,
            DataTexture: Va,
            DataTextureLoader: YT,
            DataUtils: Qf,
            DecrementStencilOp: XH,
            DecrementWrapStencilOp: qH,
            DefaultLoadingManager: sU,
            DepthFormat: uh,
            DepthStencilFormat: mh,
            DepthTexture: Gx,
            DetachedBindMode: eO,
            DirectionalLight: cU,
            DirectionalLightHelper: SY,
            DiscreteInterpolant: iU,
            DisplayP3ColorSpace: zx,
            DodecahedronGeometry: n1,
            DoubleSide: To,
            DstAlphaFactor: PD,
            DstColorFactor: ID,
            DynamicCopyUsage: u8,
            DynamicDrawUsage: i8,
            DynamicReadUsage: o8,
            EdgesGeometry: zO,
            EllipseCurve: Jx,
            EqualCompare: lO,
            EqualDepth: HD,
            EqualStencilFunc: JH,
            EquirectangularReflectionMapping: Rp,
            EquirectangularRefractionMapping: d0,
            Euler: oo,
            EventDispatcher: bu,
            ExtrudeGeometry: r1,
            FileLoader: Po,
            Float16BufferAttribute: K8,
            Float32BufferAttribute: Ht,
            FloatType: ri,
            Fog: qx,
            FogExp2: Yx,
            FramebufferTexture: $j,
            FrontSide: Au,
            Frustum: K0,
            GLBufferAttribute: cY,
            GLSL1: f8,
            GLSL3: RM,
            GreaterCompare: uO,
            GreaterDepth: WD,
            GreaterEqualCompare: fO,
            GreaterEqualDepth: GD,
            GreaterEqualStencilFunc: n8,
            GreaterStencilFunc: e8,
            GridHelper: _Y,
            Group: up,
            HalfFloatType: Er,
            HemisphereLight: aU,
            HemisphereLightHelper: yY,
            IcosahedronGeometry: $0,
            ImageBitmapLoader: VX,
            ImageLoader: L0,
            ImageUtils: mO,
            IncrementStencilOp: jH,
            IncrementWrapStencilOp: YH,
            InstancedBufferAttribute: vh,
            InstancedBufferGeometry: KT,
            InstancedInterleavedBuffer: uY,
            InstancedMesh: LO,
            Int16BufferAttribute: Y8,
            Int32BufferAttribute: q8,
            Int8BufferAttribute: W8,
            IntType: W0,
            InterleavedBuffer: Kx,
            InterleavedBufferAttribute: gh,
            Interpolant: ev,
            InterpolateDiscrete: g0,
            InterpolateLinear: fx,
            InterpolateSmooth: y_,
            InvertStencilOp: KH,
            KeepStencilOp: Wf,
            KeyframeTrack: Ya,
            LOD: RO,
            LatheGeometry: Z0,
            Layers: fh,
            LessCompare: aO,
            LessDepth: VD,
            LessEqualCompare: ET,
            LessEqualDepth: h0,
            LessEqualStencilFunc: QH,
            LessStencilFunc: $H,
            Light: Hc,
            LightProbe: pU,
            Line: Dc,
            Line3: dY,
            LineBasicMaterial: ks,
            LineCurve: BT,
            LineCurve3: FO,
            LineDashedMaterial: QO,
            LineLoop: DO,
            LineSegments: Dl,
            LinearDisplayP3ColorSpace: X0,
            LinearFilter: Cn,
            LinearInterpolant: jT,
            LinearMipMapLinearFilter: bM,
            LinearMipMapNearestFilter: FH,
            LinearMipmapLinearFilter: za,
            LinearMipmapNearestFilter: kg,
            LinearSRGBColorSpace: na,
            LinearToneMapping: qD,
            LinearTransfer: y0,
            Loader: Ns,
            LoaderUtils: NM,
            LoadingManager: f1,
            LoopOnce: tO,
            LoopPingPong: iO,
            LoopRepeat: nO,
            LuminanceAlphaFormat: _T,
            LuminanceFormat: yT,
            MOUSE: DH,
            Material: gs,
            MaterialLoader: h1,
            MathUtils: AT,
            Matrix3: pn,
            Matrix4: qt,
            MaxEquation: TD,
            Mesh: Jn,
            MeshBasicMaterial: ja,
            MeshDepthMaterial: jx,
            MeshDistanceMaterial: Xx,
            MeshLambertMaterial: $O,
            MeshMatcapMaterial: JO,
            MeshNormalMaterial: ZO,
            MeshPhongMaterial: qO,
            MeshPhysicalMaterial: YO,
            MeshStandardMaterial: GT,
            MeshToonMaterial: KO,
            MinEquation: ED,
            MirroredRepeatWrapping: m0,
            MixOperation: XD,
            MultiplyBlending: TM,
            MultiplyOperation: G0,
            NearestFilter: Fn,
            NearestMipMapLinearFilter: NH,
            NearestMipMapNearestFilter: kH,
            NearestMipmapLinearFilter: op,
            NearestMipmapNearestFilter: pT,
            NeutralToneMapping: QD,
            NeverCompare: oO,
            NeverDepth: BD,
            NeverStencilFunc: ZH,
            NoBlending: Al,
            NoColorSpace: vu,
            NoToneMapping: bl,
            NormalAnimationBlendMode: Bx,
            NormalBlending: lh,
            NotEqualCompare: cO,
            NotEqualDepth: jD,
            NotEqualStencilFunc: t8,
            NumberKeyframeTrack: C0,
            Object3D: In,
            ObjectLoader: BX,
            ObjectSpaceNormalMap: sO,
            OctahedronGeometry: J0,
            OneFactor: bD,
            OneMinusConstantAlphaFactor: FD,
            OneMinusConstantColorFactor: kD,
            OneMinusDstAlphaFactor: LD,
            OneMinusDstColorFactor: DD,
            OneMinusSrcAlphaFactor: F_,
            OneMinusSrcColorFactor: RD,
            OrthographicCamera: zc,
            P3Primaries: x0,
            PCFShadowMap: Ix,
            PCFSoftShadowMap: Ug,
            PMREMGenerator: PM,
            Path: E0,
            PerspectiveCamera: Nr,
            Plane: gc,
            PlaneGeometry: ra,
            PlaneHelper: TY,
            PointLight: uU,
            PointLightHelper: gY,
            Points: OO,
            PointsMaterial: kT,
            PolarGridHelper: xY,
            PolyhedronGeometry: Vc,
            PositionalAudio: YX,
            PropertyBinding: Un,
            PropertyMixer: vU,
            QuadraticBezierCurve: zT,
            QuadraticBezierCurve3: VT,
            Quaternion: mr,
            QuaternionKeyframeTrack: tv,
            QuaternionLinearInterpolant: rU,
            RED_GREEN_RGTC2_Format: ux,
            RED_RGTC1_Format: ST,
            REVISION: Vp,
            RGBADepthPacking: MT,
            RGBAFormat: er,
            RGBAIntegerFormat: Fx,
            RGBA_ASTC_10x10_Format: ix,
            RGBA_ASTC_10x5_Format: ex,
            RGBA_ASTC_10x6_Format: tx,
            RGBA_ASTC_10x8_Format: nx,
            RGBA_ASTC_12x10_Format: rx,
            RGBA_ASTC_12x12_Format: sx,
            RGBA_ASTC_4x4_Format: X_,
            RGBA_ASTC_5x4_Format: Y_,
            RGBA_ASTC_5x5_Format: q_,
            RGBA_ASTC_6x5_Format: K_,
            RGBA_ASTC_6x6_Format: Z_,
            RGBA_ASTC_8x5_Format: $_,
            RGBA_ASTC_8x6_Format: J_,
            RGBA_ASTC_8x8_Format: Q_,
            RGBA_BPTC_Format: Vg,
            RGBA_ETC2_EAC_Format: j_,
            RGBA_PVRTC_2BPPV1_Format: H_,
            RGBA_PVRTC_4BPPV1_Format: V_,
            RGBA_S3TC_DXT1_Format: Fg,
            RGBA_S3TC_DXT3_Format: Bg,
            RGBA_S3TC_DXT5_Format: zg,
            RGBFormat: vT,
            RGBIntegerFormat: BH,
            RGB_BPTC_SIGNED_Format: ox,
            RGB_BPTC_UNSIGNED_Format: ax,
            RGB_ETC1_Format: G_,
            RGB_ETC2_Format: W_,
            RGB_PVRTC_2BPPV1_Format: z_,
            RGB_PVRTC_4BPPV1_Format: B_,
            RGB_S3TC_DXT1_Format: Ng,
            RGFormat: xT,
            RGIntegerFormat: Nx,
            RawShaderMaterial: XO,
            Ray: Gp,
            Raycaster: d1,
            Rec709Primaries: _0,
            RectAreaLight: hU,
            RedFormat: Tc,
            RedIntegerFormat: j0,
            ReinhardToneMapping: KD,
            RenderTarget: gO,
            RepeatWrapping: p0,
            ReplaceStencilOp: WH,
            ReverseSubtractEquation: MD,
            RingGeometry: s1,
            SIGNED_RED_GREEN_RGTC2_Format: cx,
            SIGNED_RED_RGTC1_Format: lx,
            SRGBColorSpace: Mo,
            SRGBTransfer: ci,
            Scene: jp,
            ShaderChunk: gn,
            ShaderLib: Ba,
            ShaderMaterial: Qi,
            ShadowMaterial: jO,
            Shape: Ac,
            ShapeGeometry: o1,
            ShapePath: CY,
            ShapeUtils: Cl,
            ShortType: Ox,
            Skeleton: Zx,
            SkeletonHelper: mY,
            SkinnedMesh: PO,
            Source: Jf,
            Sphere: Fr,
            SphereGeometry: Q0,
            Spherical: tA,
            SphericalHarmonics3: dU,
            SplineCurve: HT,
            SpotLight: lU,
            SpotLightHelper: pY,
            Sprite: CO,
            SpriteMaterial: OT,
            SrcAlphaFactor: N_,
            SrcAlphaSaturateFactor: OD,
            SrcColorFactor: CD,
            StaticCopyUsage: l8,
            StaticDrawUsage: S0,
            StaticReadUsage: s8,
            StereoCamera: GX,
            StreamCopyUsage: c8,
            StreamDrawUsage: r8,
            StreamReadUsage: a8,
            StringKeyframeTrack: Eh,
            SubtractEquation: wD,
            SubtractiveBlending: EM,
            TOUCH: OH,
            TangentSpaceNormalMap: Bc,
            TetrahedronGeometry: a1,
            Texture: Vn,
            TextureLoader: nv,
            TextureUtils: Pj,
            TorusGeometry: l1,
            TorusKnotGeometry: u1,
            Triangle: Ao,
            TriangleFanDrawMode: HH,
            TriangleStripDrawMode: VH,
            TrianglesDrawMode: zH,
            TubeGeometry: c1,
            UVMapping: Lc,
            Uint16BufferAttribute: RT,
            Uint32BufferAttribute: PT,
            Uint8BufferAttribute: j8,
            Uint8ClampedBufferAttribute: X8,
            Uniform: eA,
            UniformsGroup: lY,
            UniformsLib: bt,
            UniformsUtils: Hx,
            UnsignedByteType: so,
            UnsignedInt248Type: ph,
            UnsignedInt5999Type: mT,
            UnsignedIntType: Ll,
            UnsignedShort4444Type: Ux,
            UnsignedShort5551Type: kx,
            UnsignedShortType: Pp,
            VSMShadowMap: Fa,
            Vector2: tt,
            Vector3: re,
            Vector4: En,
            VectorKeyframeTrack: R0,
            VideoTexture: Zj,
            WebGL3DRenderTarget: O8,
            WebGLArrayRenderTarget: D8,
            WebGLCoordinateSystem: xl,
            WebGLCubeRenderTarget: LT,
            WebGLMultipleRenderTargets: RY,
            WebGLRenderTarget: Ji,
            WebGLRenderer: DT,
            WebGLUtils: TO,
            WebGPUCoordinateSystem: w0,
            WireframeGeometry: WO,
            WrapAroundEnding: v0,
            ZeroCurvatureEnding: Zf,
            ZeroFactor: AD,
            ZeroSlopeEnding: $f,
            ZeroStencilOp: GH,
            createCanvasElement: pO,
        },
        Symbol.toStringTag,
        { value: 'Module' }
    )
);
var ow = { exports: {} },
    hc = {};
/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var _R;
function LY() {
    return (
        _R ||
            ((_R = 1),
            (hc.ConcurrentRoot = 1),
            (hc.ContinuousEventPriority = 4),
            (hc.DefaultEventPriority = 16),
            (hc.DiscreteEventPriority = 1),
            (hc.IdleEventPriority = 536870912),
            (hc.LegacyRoot = 0)),
        hc
    );
}
var xR;
function IY() {
    return xR || ((xR = 1), (ow.exports = LY())), ow.exports;
}
var fp = IY();
function DY(r) {
    let e;
    const t = new Set(),
        n = (u, f) => {
            const d = typeof u == 'function' ? u(e) : u;
            if (d !== e) {
                const m = e;
                (e = f ? d : Object.assign({}, e, d)),
                    t.forEach((v) => v(e, m));
            }
        },
        i = () => e,
        s = (u, f = i, d = Object.is) => {
            console.warn(
                '[DEPRECATED] Please use `subscribeWithSelector` middleware'
            );
            let m = f(e);
            function v() {
                const _ = f(e);
                if (!d(m, _)) {
                    const S = m;
                    u((m = _), S);
                }
            }
            return t.add(v), () => t.delete(v);
        },
        l = {
            setState: n,
            getState: i,
            subscribe: (u, f, d) =>
                f || d ? s(u, f, d) : (t.add(u), () => t.delete(u)),
            destroy: () => t.clear(),
        };
    return (e = r(n, i, l)), l;
}
const OY =
        typeof window > 'u' ||
        !window.navigator ||
        /ServerSideRendering|^Deno\//.test(window.navigator.userAgent),
    SR = OY ? Y.useEffect : Y.useLayoutEffect;
function xU(r) {
    const e = typeof r == 'function' ? DY(r) : r,
        t = (n = e.getState, i = Object.is) => {
            const [, s] = Y.useReducer((w) => w + 1, 0),
                o = e.getState(),
                a = Y.useRef(o),
                l = Y.useRef(n),
                u = Y.useRef(i),
                f = Y.useRef(!1),
                d = Y.useRef();
            d.current === void 0 && (d.current = n(o));
            let m,
                v = !1;
            (a.current !== o ||
                l.current !== n ||
                u.current !== i ||
                f.current) &&
                ((m = n(o)), (v = !i(d.current, m))),
                SR(() => {
                    v && (d.current = m),
                        (a.current = o),
                        (l.current = n),
                        (u.current = i),
                        (f.current = !1);
                });
            const _ = Y.useRef(o);
            SR(() => {
                const w = () => {
                        try {
                            const A = e.getState(),
                                T = l.current(A);
                            u.current(d.current, T) ||
                                ((a.current = A), (d.current = T), s());
                        } catch {
                            (f.current = !0), s();
                        }
                    },
                    x = e.subscribe(w);
                return e.getState() !== _.current && w(), x;
            }, []);
            const S = v ? m : d.current;
            return Y.useDebugValue(S), S;
        };
    return (
        Object.assign(t, e),
        (t[Symbol.iterator] = function () {
            console.warn(
                '[useStore, api] = create() is deprecated and will be removed in v4'
            );
            const n = [t, e];
            return {
                next() {
                    const i = n.length <= 0;
                    return { value: n.shift(), done: i };
                },
            };
        }),
        t
    );
}
const UY = (r) => typeof r == 'object' && typeof r.then == 'function',
    th = [];
function SU(r, e, t = (n, i) => n === i) {
    if (r === e) return !0;
    if (!r || !e) return !1;
    const n = r.length;
    if (e.length !== n) return !1;
    for (let i = 0; i < n; i++) if (!t(r[i], e[i])) return !1;
    return !0;
}
function wU(r, e = null, t = !1, n = {}) {
    e === null && (e = [r]);
    for (const s of th)
        if (SU(e, s.keys, s.equal)) {
            if (t) return;
            if (Object.prototype.hasOwnProperty.call(s, 'error')) throw s.error;
            if (Object.prototype.hasOwnProperty.call(s, 'response'))
                return (
                    n.lifespan &&
                        n.lifespan > 0 &&
                        (s.timeout && clearTimeout(s.timeout),
                        (s.timeout = setTimeout(s.remove, n.lifespan))),
                    s.response
                );
            if (!t) throw s.promise;
        }
    const i = {
        keys: e,
        equal: n.equal,
        remove: () => {
            const s = th.indexOf(i);
            s !== -1 && th.splice(s, 1);
        },
        promise: (UY(r) ? r : r(...e))
            .then((s) => {
                (i.response = s),
                    n.lifespan &&
                        n.lifespan > 0 &&
                        (i.timeout = setTimeout(i.remove, n.lifespan));
            })
            .catch((s) => (i.error = s)),
    };
    if ((th.push(i), !t)) throw i.promise;
}
const MU = (r, e, t) => wU(r, e, !1, t),
    kY = (r, e, t) => void wU(r, e, !0, t),
    NY = (r) => {
        if (r === void 0 || r.length === 0) th.splice(0, th.length);
        else {
            const e = th.find((t) => SU(r, t.keys, t.equal));
            e && e.remove();
        }
    };
var aw = { exports: {} },
    lw = { exports: {} },
    uw = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var wR;
function FY() {
    return (
        wR ||
            ((wR = 1),
            (function (r) {
                function e(Z, se) {
                    var J = Z.length;
                    Z.push(se);
                    e: for (; 0 < J; ) {
                        var F = (J - 1) >>> 1,
                            $ = Z[F];
                        if (0 < i($, se)) (Z[F] = se), (Z[J] = $), (J = F);
                        else break e;
                    }
                }
                function t(Z) {
                    return Z.length === 0 ? null : Z[0];
                }
                function n(Z) {
                    if (Z.length === 0) return null;
                    var se = Z[0],
                        J = Z.pop();
                    if (J !== se) {
                        Z[0] = J;
                        e: for (
                            var F = 0, $ = Z.length, fe = $ >>> 1;
                            F < fe;

                        ) {
                            var ne = 2 * (F + 1) - 1,
                                ae = Z[ne],
                                me = ne + 1,
                                ge = Z[me];
                            if (0 > i(ae, J))
                                me < $ && 0 > i(ge, ae)
                                    ? ((Z[F] = ge), (Z[me] = J), (F = me))
                                    : ((Z[F] = ae), (Z[ne] = J), (F = ne));
                            else if (me < $ && 0 > i(ge, J))
                                (Z[F] = ge), (Z[me] = J), (F = me);
                            else break e;
                        }
                    }
                    return se;
                }
                function i(Z, se) {
                    var J = Z.sortIndex - se.sortIndex;
                    return J !== 0 ? J : Z.id - se.id;
                }
                if (
                    typeof performance == 'object' &&
                    typeof performance.now == 'function'
                ) {
                    var s = performance;
                    r.unstable_now = function () {
                        return s.now();
                    };
                } else {
                    var o = Date,
                        a = o.now();
                    r.unstable_now = function () {
                        return o.now() - a;
                    };
                }
                var l = [],
                    u = [],
                    f = 1,
                    d = null,
                    m = 3,
                    v = !1,
                    _ = !1,
                    S = !1,
                    w = typeof setTimeout == 'function' ? setTimeout : null,
                    x = typeof clearTimeout == 'function' ? clearTimeout : null,
                    A = typeof setImmediate < 'u' ? setImmediate : null;
                typeof navigator < 'u' &&
                    navigator.scheduling !== void 0 &&
                    navigator.scheduling.isInputPending !== void 0 &&
                    navigator.scheduling.isInputPending.bind(
                        navigator.scheduling
                    );
                function T(Z) {
                    for (var se = t(u); se !== null; ) {
                        if (se.callback === null) n(u);
                        else if (se.startTime <= Z)
                            n(u), (se.sortIndex = se.expirationTime), e(l, se);
                        else break;
                        se = t(u);
                    }
                }
                function b(Z) {
                    if (((S = !1), T(Z), !_))
                        if (t(l) !== null) (_ = !0), ee(P);
                        else {
                            var se = t(u);
                            se !== null && de(b, se.startTime - Z);
                        }
                }
                function P(Z, se) {
                    (_ = !1), S && ((S = !1), x(O), (O = -1)), (v = !0);
                    var J = m;
                    try {
                        for (
                            T(se), d = t(l);
                            d !== null &&
                            (!(d.expirationTime > se) || (Z && !H()));

                        ) {
                            var F = d.callback;
                            if (typeof F == 'function') {
                                (d.callback = null), (m = d.priorityLevel);
                                var $ = F(d.expirationTime <= se);
                                (se = r.unstable_now()),
                                    typeof $ == 'function'
                                        ? (d.callback = $)
                                        : d === t(l) && n(l),
                                    T(se);
                            } else n(l);
                            d = t(l);
                        }
                        if (d !== null) var fe = !0;
                        else {
                            var ne = t(u);
                            ne !== null && de(b, ne.startTime - se), (fe = !1);
                        }
                        return fe;
                    } finally {
                        (d = null), (m = J), (v = !1);
                    }
                }
                var L = !1,
                    D = null,
                    O = -1,
                    I = 5,
                    U = -1;
                function H() {
                    return !(r.unstable_now() - U < I);
                }
                function W() {
                    if (D !== null) {
                        var Z = r.unstable_now();
                        U = Z;
                        var se = !0;
                        try {
                            se = D(!0, Z);
                        } finally {
                            se ? q() : ((L = !1), (D = null));
                        }
                    } else L = !1;
                }
                var q;
                if (typeof A == 'function')
                    q = function () {
                        A(W);
                    };
                else if (typeof MessageChannel < 'u') {
                    var K = new MessageChannel(),
                        le = K.port2;
                    (K.port1.onmessage = W),
                        (q = function () {
                            le.postMessage(null);
                        });
                } else
                    q = function () {
                        w(W, 0);
                    };
                function ee(Z) {
                    (D = Z), L || ((L = !0), q());
                }
                function de(Z, se) {
                    O = w(function () {
                        Z(r.unstable_now());
                    }, se);
                }
                (r.unstable_IdlePriority = 5),
                    (r.unstable_ImmediatePriority = 1),
                    (r.unstable_LowPriority = 4),
                    (r.unstable_NormalPriority = 3),
                    (r.unstable_Profiling = null),
                    (r.unstable_UserBlockingPriority = 2),
                    (r.unstable_cancelCallback = function (Z) {
                        Z.callback = null;
                    }),
                    (r.unstable_continueExecution = function () {
                        _ || v || ((_ = !0), ee(P));
                    }),
                    (r.unstable_forceFrameRate = function (Z) {
                        0 > Z || 125 < Z
                            ? console.error(
                                  'forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported'
                              )
                            : (I = 0 < Z ? Math.floor(1e3 / Z) : 5);
                    }),
                    (r.unstable_getCurrentPriorityLevel = function () {
                        return m;
                    }),
                    (r.unstable_getFirstCallbackNode = function () {
                        return t(l);
                    }),
                    (r.unstable_next = function (Z) {
                        switch (m) {
                            case 1:
                            case 2:
                            case 3:
                                var se = 3;
                                break;
                            default:
                                se = m;
                        }
                        var J = m;
                        m = se;
                        try {
                            return Z();
                        } finally {
                            m = J;
                        }
                    }),
                    (r.unstable_pauseExecution = function () {}),
                    (r.unstable_requestPaint = function () {}),
                    (r.unstable_runWithPriority = function (Z, se) {
                        switch (Z) {
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                                break;
                            default:
                                Z = 3;
                        }
                        var J = m;
                        m = Z;
                        try {
                            return se();
                        } finally {
                            m = J;
                        }
                    }),
                    (r.unstable_scheduleCallback = function (Z, se, J) {
                        var F = r.unstable_now();
                        switch (
                            (typeof J == 'object' && J !== null
                                ? ((J = J.delay),
                                  (J =
                                      typeof J == 'number' && 0 < J
                                          ? F + J
                                          : F))
                                : (J = F),
                            Z)
                        ) {
                            case 1:
                                var $ = -1;
                                break;
                            case 2:
                                $ = 250;
                                break;
                            case 5:
                                $ = 1073741823;
                                break;
                            case 4:
                                $ = 1e4;
                                break;
                            default:
                                $ = 5e3;
                        }
                        return (
                            ($ = J + $),
                            (Z = {
                                id: f++,
                                callback: se,
                                priorityLevel: Z,
                                startTime: J,
                                expirationTime: $,
                                sortIndex: -1,
                            }),
                            J > F
                                ? ((Z.sortIndex = J),
                                  e(u, Z),
                                  t(l) === null &&
                                      Z === t(u) &&
                                      (S ? (x(O), (O = -1)) : (S = !0),
                                      de(b, J - F)))
                                : ((Z.sortIndex = $),
                                  e(l, Z),
                                  _ || v || ((_ = !0), ee(P))),
                            Z
                        );
                    }),
                    (r.unstable_shouldYield = H),
                    (r.unstable_wrapCallback = function (Z) {
                        var se = m;
                        return function () {
                            var J = m;
                            m = se;
                            try {
                                return Z.apply(this, arguments);
                            } finally {
                                m = J;
                            }
                        };
                    });
            })(uw)),
        uw
    );
}
var MR;
function EU() {
    return MR || ((MR = 1), (lw.exports = FY())), lw.exports;
}
/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var cw, ER;
function BY() {
    return (
        ER ||
            ((ER = 1),
            (cw = function (e) {
                var t = {},
                    n = wx(),
                    i = EU(),
                    s = Object.assign;
                function o(p) {
                    for (
                        var g =
                                'https://reactjs.org/docs/error-decoder.html?invariant=' +
                                p,
                            M = 1;
                        M < arguments.length;
                        M++
                    )
                        g += '&args[]=' + encodeURIComponent(arguments[M]);
                    return (
                        'Minified React error #' +
                        p +
                        '; visit ' +
                        g +
                        ' for the full message or use the non-minified dev environment for full errors and additional helpful warnings.'
                    );
                }
                var a = n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
                    l = Symbol.for('react.element'),
                    u = Symbol.for('react.portal'),
                    f = Symbol.for('react.fragment'),
                    d = Symbol.for('react.strict_mode'),
                    m = Symbol.for('react.profiler'),
                    v = Symbol.for('react.provider'),
                    _ = Symbol.for('react.context'),
                    S = Symbol.for('react.forward_ref'),
                    w = Symbol.for('react.suspense'),
                    x = Symbol.for('react.suspense_list'),
                    A = Symbol.for('react.memo'),
                    T = Symbol.for('react.lazy'),
                    b = Symbol.for('react.offscreen'),
                    P = Symbol.iterator;
                function L(p) {
                    return p === null || typeof p != 'object'
                        ? null
                        : ((p = (P && p[P]) || p['@@iterator']),
                          typeof p == 'function' ? p : null);
                }
                function D(p) {
                    if (p == null) return null;
                    if (typeof p == 'function')
                        return p.displayName || p.name || null;
                    if (typeof p == 'string') return p;
                    switch (p) {
                        case f:
                            return 'Fragment';
                        case u:
                            return 'Portal';
                        case m:
                            return 'Profiler';
                        case d:
                            return 'StrictMode';
                        case w:
                            return 'Suspense';
                        case x:
                            return 'SuspenseList';
                    }
                    if (typeof p == 'object')
                        switch (p.$$typeof) {
                            case _:
                                return (
                                    (p.displayName || 'Context') + '.Consumer'
                                );
                            case v:
                                return (
                                    (p._context.displayName || 'Context') +
                                    '.Provider'
                                );
                            case S:
                                var g = p.render;
                                return (
                                    (p = p.displayName),
                                    p ||
                                        ((p = g.displayName || g.name || ''),
                                        (p =
                                            p !== ''
                                                ? 'ForwardRef(' + p + ')'
                                                : 'ForwardRef')),
                                    p
                                );
                            case A:
                                return (
                                    (g = p.displayName || null),
                                    g !== null ? g : D(p.type) || 'Memo'
                                );
                            case T:
                                (g = p._payload), (p = p._init);
                                try {
                                    return D(p(g));
                                } catch {}
                        }
                    return null;
                }
                function O(p) {
                    var g = p.type;
                    switch (p.tag) {
                        case 24:
                            return 'Cache';
                        case 9:
                            return (g.displayName || 'Context') + '.Consumer';
                        case 10:
                            return (
                                (g._context.displayName || 'Context') +
                                '.Provider'
                            );
                        case 18:
                            return 'DehydratedFragment';
                        case 11:
                            return (
                                (p = g.render),
                                (p = p.displayName || p.name || ''),
                                g.displayName ||
                                    (p !== ''
                                        ? 'ForwardRef(' + p + ')'
                                        : 'ForwardRef')
                            );
                        case 7:
                            return 'Fragment';
                        case 5:
                            return g;
                        case 4:
                            return 'Portal';
                        case 3:
                            return 'Root';
                        case 6:
                            return 'Text';
                        case 16:
                            return D(g);
                        case 8:
                            return g === d ? 'StrictMode' : 'Mode';
                        case 22:
                            return 'Offscreen';
                        case 12:
                            return 'Profiler';
                        case 21:
                            return 'Scope';
                        case 13:
                            return 'Suspense';
                        case 19:
                            return 'SuspenseList';
                        case 25:
                            return 'TracingMarker';
                        case 1:
                        case 0:
                        case 17:
                        case 2:
                        case 14:
                        case 15:
                            if (typeof g == 'function')
                                return g.displayName || g.name || null;
                            if (typeof g == 'string') return g;
                    }
                    return null;
                }
                function I(p) {
                    var g = p,
                        M = p;
                    if (p.alternate) for (; g.return; ) g = g.return;
                    else {
                        p = g;
                        do
                            (g = p),
                                (g.flags & 4098) !== 0 && (M = g.return),
                                (p = g.return);
                        while (p);
                    }
                    return g.tag === 3 ? M : null;
                }
                function U(p) {
                    if (I(p) !== p) throw Error(o(188));
                }
                function H(p) {
                    var g = p.alternate;
                    if (!g) {
                        if (((g = I(p)), g === null)) throw Error(o(188));
                        return g !== p ? null : p;
                    }
                    for (var M = p, C = g; ; ) {
                        var k = M.return;
                        if (k === null) break;
                        var B = k.alternate;
                        if (B === null) {
                            if (((C = k.return), C !== null)) {
                                M = C;
                                continue;
                            }
                            break;
                        }
                        if (k.child === B.child) {
                            for (B = k.child; B; ) {
                                if (B === M) return U(k), p;
                                if (B === C) return U(k), g;
                                B = B.sibling;
                            }
                            throw Error(o(188));
                        }
                        if (M.return !== C.return) (M = k), (C = B);
                        else {
                            for (var ce = !1, Te = k.child; Te; ) {
                                if (Te === M) {
                                    (ce = !0), (M = k), (C = B);
                                    break;
                                }
                                if (Te === C) {
                                    (ce = !0), (C = k), (M = B);
                                    break;
                                }
                                Te = Te.sibling;
                            }
                            if (!ce) {
                                for (Te = B.child; Te; ) {
                                    if (Te === M) {
                                        (ce = !0), (M = B), (C = k);
                                        break;
                                    }
                                    if (Te === C) {
                                        (ce = !0), (C = B), (M = k);
                                        break;
                                    }
                                    Te = Te.sibling;
                                }
                                if (!ce) throw Error(o(189));
                            }
                        }
                        if (M.alternate !== C) throw Error(o(190));
                    }
                    if (M.tag !== 3) throw Error(o(188));
                    return M.stateNode.current === M ? p : g;
                }
                function W(p) {
                    return (p = H(p)), p !== null ? q(p) : null;
                }
                function q(p) {
                    if (p.tag === 5 || p.tag === 6) return p;
                    for (p = p.child; p !== null; ) {
                        var g = q(p);
                        if (g !== null) return g;
                        p = p.sibling;
                    }
                    return null;
                }
                function K(p) {
                    if (p.tag === 5 || p.tag === 6) return p;
                    for (p = p.child; p !== null; ) {
                        if (p.tag !== 4) {
                            var g = K(p);
                            if (g !== null) return g;
                        }
                        p = p.sibling;
                    }
                    return null;
                }
                var le = Array.isArray,
                    ee = e.getPublicInstance,
                    de = e.getRootHostContext,
                    Z = e.getChildHostContext,
                    se = e.prepareForCommit,
                    J = e.resetAfterCommit,
                    F = e.createInstance,
                    $ = e.appendInitialChild,
                    fe = e.finalizeInitialChildren,
                    ne = e.prepareUpdate,
                    ae = e.shouldSetTextContent,
                    me = e.createTextInstance,
                    ge = e.scheduleTimeout,
                    Ae = e.cancelTimeout,
                    je = e.noTimeout,
                    Qe = e.isPrimaryRenderer,
                    Ke = e.supportsMutation,
                    X = e.supportsPersistence,
                    He = e.supportsHydration,
                    Fe = e.getInstanceFromNode,
                    We = e.preparePortalMount,
                    Re = e.getCurrentEventPriority,
                    st = e.detachDeletedInstance,
                    De = e.supportsMicrotasks,
                    Je = e.scheduleMicrotask,
                    te = e.supportsTestSelectors,
                    V = e.findFiberRoot,
                    Me = e.getBoundingRect,
                    Le = e.getTextContent,
                    Ie = e.isHiddenSubtree,
                    Ce = e.matchAccessibilityRole,
                    gt = e.setFocusIfFocusable,
                    Xe = e.setupIntersectionObserver,
                    Ze = e.appendChild,
                    at = e.appendChildToContainer,
                    Ye = e.commitTextUpdate,
                    ot = e.commitMount,
                    kt = e.commitUpdate,
                    pt = e.insertBefore,
                    et = e.insertInContainerBefore,
                    lt = e.removeChild,
                    Ct = e.removeChildFromContainer,
                    Dt = e.resetTextContent,
                    _e = e.hideInstance,
                    nt = e.hideTextInstance,
                    ve = e.unhideInstance,
                    Be = e.unhideTextInstance,
                    ht = e.clearContainer,
                    wt = e.cloneInstance,
                    Et = e.createContainerChildSet,
                    Qt = e.appendChildToContainerChildSet,
                    en = e.finalizeContainerChildren,
                    Mt = e.replaceContainerChildren,
                    hn = e.cloneHiddenInstance,
                    Pn = e.cloneHiddenTextInstance,
                    jn = e.canHydrateInstance,
                    An = e.canHydrateTextInstance,
                    di = e.canHydrateSuspenseInstance,
                    Gi = e.isSuspenseInstancePending,
                    _i = e.isSuspenseInstanceFallback,
                    si = e.registerSuspenseInstanceRetry,
                    Qn = e.getNextHydratableSibling,
                    Xt = e.getFirstHydratableChild,
                    pi = e.getFirstHydratableChildWithinContainer,
                    $r = e.getFirstHydratableChildWithinSuspenseInstance,
                    G = e.hydrateInstance,
                    Q = e.hydrateTextInstance,
                    xe = e.hydrateSuspenseInstance,
                    z = e.getNextHydratableInstanceAfterSuspenseInstance,
                    ie = e.commitHydratedContainer,
                    oe = e.commitHydratedSuspenseInstance,
                    pe = e.clearSuspenseBoundary,
                    ue = e.clearSuspenseBoundaryFromContainer,
                    Pe = e.shouldDeleteUnhydratedTailInstances,
                    Ue = e.didNotMatchHydratedContainerTextInstance,
                    Ve = e.didNotMatchHydratedTextInstance,
                    ye;
                function _t(p) {
                    if (ye === void 0)
                        try {
                            throw Error();
                        } catch (M) {
                            var g = M.stack.trim().match(/\n( *(at )?)/);
                            ye = (g && g[1]) || '';
                        }
                    return (
                        `
` +
                        ye +
                        p
                    );
                }
                var rt = !1;
                function it(p, g) {
                    if (!p || rt) return '';
                    rt = !0;
                    var M = Error.prepareStackTrace;
                    Error.prepareStackTrace = void 0;
                    try {
                        if (g)
                            if (
                                ((g = function () {
                                    throw Error();
                                }),
                                Object.defineProperty(g.prototype, 'props', {
                                    set: function () {
                                        throw Error();
                                    },
                                }),
                                typeof Reflect == 'object' && Reflect.construct)
                            ) {
                                try {
                                    Reflect.construct(g, []);
                                } catch (vt) {
                                    var C = vt;
                                }
                                Reflect.construct(p, [], g);
                            } else {
                                try {
                                    g.call();
                                } catch (vt) {
                                    C = vt;
                                }
                                p.call(g.prototype);
                            }
                        else {
                            try {
                                throw Error();
                            } catch (vt) {
                                C = vt;
                            }
                            p();
                        }
                    } catch (vt) {
                        if (vt && C && typeof vt.stack == 'string') {
                            for (
                                var k = vt.stack.split(`
`),
                                    B = C.stack.split(`
`),
                                    ce = k.length - 1,
                                    Te = B.length - 1;
                                1 <= ce && 0 <= Te && k[ce] !== B[Te];

                            )
                                Te--;
                            for (; 1 <= ce && 0 <= Te; ce--, Te--)
                                if (k[ce] !== B[Te]) {
                                    if (ce !== 1 || Te !== 1)
                                        do
                                            if (
                                                (ce--,
                                                Te--,
                                                0 > Te || k[ce] !== B[Te])
                                            ) {
                                                var $e =
                                                    `
` + k[ce].replace(' at new ', ' at ');
                                                return (
                                                    p.displayName &&
                                                        $e.includes(
                                                            '<anonymous>'
                                                        ) &&
                                                        ($e = $e.replace(
                                                            '<anonymous>',
                                                            p.displayName
                                                        )),
                                                    $e
                                                );
                                            }
                                        while (1 <= ce && 0 <= Te);
                                    break;
                                }
                        }
                    } finally {
                        (rt = !1), (Error.prepareStackTrace = M);
                    }
                    return (p = p ? p.displayName || p.name : '') ? _t(p) : '';
                }
                var xt = Object.prototype.hasOwnProperty,
                    Pt = [],
                    Nt = -1;
                function Wt(p) {
                    return { current: p };
                }
                function mt(p) {
                    0 > Nt || ((p.current = Pt[Nt]), (Pt[Nt] = null), Nt--);
                }
                function ut(p, g) {
                    Nt++, (Pt[Nt] = p.current), (p.current = g);
                }
                var Lt = {},
                    Bt = Wt(Lt),
                    jt = Wt(!1),
                    wn = Lt;
                function yn(p, g) {
                    var M = p.type.contextTypes;
                    if (!M) return Lt;
                    var C = p.stateNode;
                    if (
                        C &&
                        C.__reactInternalMemoizedUnmaskedChildContext === g
                    )
                        return C.__reactInternalMemoizedMaskedChildContext;
                    var k = {},
                        B;
                    for (B in M) k[B] = g[B];
                    return (
                        C &&
                            ((p = p.stateNode),
                            (p.__reactInternalMemoizedUnmaskedChildContext = g),
                            (p.__reactInternalMemoizedMaskedChildContext = k)),
                        k
                    );
                }
                function Dn(p) {
                    return (p = p.childContextTypes), p != null;
                }
                function $t() {
                    mt(jt), mt(Bt);
                }
                function tn(p, g, M) {
                    if (Bt.current !== Lt) throw Error(o(168));
                    ut(Bt, g), ut(jt, M);
                }
                function Xn(p, g, M) {
                    var C = p.stateNode;
                    if (
                        ((g = g.childContextTypes),
                        typeof C.getChildContext != 'function')
                    )
                        return M;
                    C = C.getChildContext();
                    for (var k in C)
                        if (!(k in g))
                            throw Error(o(108, O(p) || 'Unknown', k));
                    return s({}, M, C);
                }
                function nn(p) {
                    return (
                        (p =
                            ((p = p.stateNode) &&
                                p.__reactInternalMemoizedMergedChildContext) ||
                            Lt),
                        (wn = Bt.current),
                        ut(Bt, p),
                        ut(jt, jt.current),
                        !0
                    );
                }
                function Jt(p, g, M) {
                    var C = p.stateNode;
                    if (!C) throw Error(o(169));
                    M
                        ? ((p = Xn(p, g, wn)),
                          (C.__reactInternalMemoizedMergedChildContext = p),
                          mt(jt),
                          mt(Bt),
                          ut(Bt, p))
                        : mt(jt),
                        ut(jt, M);
                }
                var Bn = Math.clz32 ? Math.clz32 : ys,
                    Wi = Math.log,
                    ei = Math.LN2;
                function ys(p) {
                    return (
                        (p >>>= 0), p === 0 ? 32 : (31 - ((Wi(p) / ei) | 0)) | 0
                    );
                }
                var ao = 64,
                    Sn = 4194304;
                function Oo(p) {
                    switch (p & -p) {
                        case 1:
                            return 1;
                        case 2:
                            return 2;
                        case 4:
                            return 4;
                        case 8:
                            return 8;
                        case 16:
                            return 16;
                        case 32:
                            return 32;
                        case 64:
                        case 128:
                        case 256:
                        case 512:
                        case 1024:
                        case 2048:
                        case 4096:
                        case 8192:
                        case 16384:
                        case 32768:
                        case 65536:
                        case 131072:
                        case 262144:
                        case 524288:
                        case 1048576:
                        case 2097152:
                            return p & 4194240;
                        case 4194304:
                        case 8388608:
                        case 16777216:
                        case 33554432:
                        case 67108864:
                            return p & 130023424;
                        case 134217728:
                            return 134217728;
                        case 268435456:
                            return 268435456;
                        case 536870912:
                            return 536870912;
                        case 1073741824:
                            return 1073741824;
                        default:
                            return p;
                    }
                }
                function Za(p, g) {
                    var M = p.pendingLanes;
                    if (M === 0) return 0;
                    var C = 0,
                        k = p.suspendedLanes,
                        B = p.pingedLanes,
                        ce = M & 268435455;
                    if (ce !== 0) {
                        var Te = ce & ~k;
                        Te !== 0
                            ? (C = Oo(Te))
                            : ((B &= ce), B !== 0 && (C = Oo(B)));
                    } else
                        (ce = M & ~k),
                            ce !== 0 ? (C = Oo(ce)) : B !== 0 && (C = Oo(B));
                    if (C === 0) return 0;
                    if (
                        g !== 0 &&
                        g !== C &&
                        (g & k) === 0 &&
                        ((k = C & -C),
                        (B = g & -g),
                        k >= B || (k === 16 && (B & 4194240) !== 0))
                    )
                        return g;
                    if (
                        ((C & 4) !== 0 && (C |= M & 16),
                        (g = p.entangledLanes),
                        g !== 0)
                    )
                        for (p = p.entanglements, g &= C; 0 < g; )
                            (M = 31 - Bn(g)),
                                (k = 1 << M),
                                (C |= p[M]),
                                (g &= ~k);
                    return C;
                }
                function Cu(p, g) {
                    switch (p) {
                        case 1:
                        case 2:
                        case 4:
                            return g + 250;
                        case 8:
                        case 16:
                        case 32:
                        case 64:
                        case 128:
                        case 256:
                        case 512:
                        case 1024:
                        case 2048:
                        case 4096:
                        case 8192:
                        case 16384:
                        case 32768:
                        case 65536:
                        case 131072:
                        case 262144:
                        case 524288:
                        case 1048576:
                        case 2097152:
                            return g + 5e3;
                        case 4194304:
                        case 8388608:
                        case 16777216:
                        case 33554432:
                        case 67108864:
                            return -1;
                        case 134217728:
                        case 268435456:
                        case 536870912:
                        case 1073741824:
                            return -1;
                        default:
                            return -1;
                    }
                }
                function Ru(p, g) {
                    for (
                        var M = p.suspendedLanes,
                            C = p.pingedLanes,
                            k = p.expirationTimes,
                            B = p.pendingLanes;
                        0 < B;

                    ) {
                        var ce = 31 - Bn(B),
                            Te = 1 << ce,
                            $e = k[ce];
                        $e === -1
                            ? ((Te & M) === 0 || (Te & C) !== 0) &&
                              (k[ce] = Cu(Te, g))
                            : $e <= g && (p.expiredLanes |= Te),
                            (B &= ~Te);
                    }
                }
                function Uo(p) {
                    return (
                        (p = p.pendingLanes & -1073741825),
                        p !== 0 ? p : p & 1073741824 ? 1073741824 : 0
                    );
                }
                function Ol(p) {
                    for (var g = [], M = 0; 31 > M; M++) g.push(p);
                    return g;
                }
                function Fs(p, g, M) {
                    (p.pendingLanes |= g),
                        g !== 536870912 &&
                            ((p.suspendedLanes = 0), (p.pingedLanes = 0)),
                        (p = p.eventTimes),
                        (g = 31 - Bn(g)),
                        (p[g] = M);
                }
                function lo(p, g) {
                    var M = p.pendingLanes & ~g;
                    (p.pendingLanes = g),
                        (p.suspendedLanes = 0),
                        (p.pingedLanes = 0),
                        (p.expiredLanes &= g),
                        (p.mutableReadLanes &= g),
                        (p.entangledLanes &= g),
                        (g = p.entanglements);
                    var C = p.eventTimes;
                    for (p = p.expirationTimes; 0 < M; ) {
                        var k = 31 - Bn(M),
                            B = 1 << k;
                        (g[k] = 0), (C[k] = -1), (p[k] = -1), (M &= ~B);
                    }
                }
                function gr(p, g) {
                    var M = (p.entangledLanes |= g);
                    for (p = p.entanglements; M; ) {
                        var C = 31 - Bn(M),
                            k = 1 << C;
                        (k & g) | (p[C] & g) && (p[C] |= g), (M &= ~k);
                    }
                }
                var sn = 0;
                function Bs(p) {
                    return (
                        (p &= -p),
                        1 < p
                            ? 4 < p
                                ? (p & 268435455) !== 0
                                    ? 16
                                    : 536870912
                                : 4
                            : 1
                    );
                }
                var _s = i.unstable_scheduleCallback,
                    ko = i.unstable_cancelCallback,
                    zs = i.unstable_shouldYield,
                    Th = i.unstable_requestPaint,
                    oi = i.unstable_now,
                    uo = i.unstable_ImmediatePriority,
                    Ah = i.unstable_UserBlockingPriority,
                    Rr = i.unstable_NormalPriority,
                    $a = i.unstable_IdlePriority,
                    Ja = null,
                    xs = null;
                function sa(p) {
                    if (xs && typeof xs.onCommitFiberRoot == 'function')
                        try {
                            xs.onCommitFiberRoot(
                                Ja,
                                p,
                                void 0,
                                (p.current.flags & 128) === 128
                            );
                        } catch {}
                }
                function Qa(p, g) {
                    return (
                        (p === g && (p !== 0 || 1 / p === 1 / g)) ||
                        (p !== p && g !== g)
                    );
                }
                var tr = typeof Object.is == 'function' ? Object.is : Qa,
                    nr = null,
                    No = !1,
                    Vs = !1;
                function Ul(p) {
                    nr === null ? (nr = [p]) : nr.push(p);
                }
                function el(p) {
                    (No = !0), Ul(p);
                }
                function Pr() {
                    if (!Vs && nr !== null) {
                        Vs = !0;
                        var p = 0,
                            g = sn;
                        try {
                            var M = nr;
                            for (sn = 1; p < M.length; p++) {
                                var C = M[p];
                                do C = C(!0);
                                while (C !== null);
                            }
                            (nr = null), (No = !1);
                        } catch (k) {
                            throw (
                                (nr !== null && (nr = nr.slice(p + 1)),
                                _s(uo, Pr),
                                k)
                            );
                        } finally {
                            (sn = g), (Vs = !1);
                        }
                    }
                    return null;
                }
                var tl = a.ReactCurrentBatchConfig;
                function Jr(p, g) {
                    if (tr(p, g)) return !0;
                    if (
                        typeof p != 'object' ||
                        p === null ||
                        typeof g != 'object' ||
                        g === null
                    )
                        return !1;
                    var M = Object.keys(p),
                        C = Object.keys(g);
                    if (M.length !== C.length) return !1;
                    for (C = 0; C < M.length; C++) {
                        var k = M[C];
                        if (!xt.call(g, k) || !tr(p[k], g[k])) return !1;
                    }
                    return !0;
                }
                function oa(p) {
                    switch (p.tag) {
                        case 5:
                            return _t(p.type);
                        case 16:
                            return _t('Lazy');
                        case 13:
                            return _t('Suspense');
                        case 19:
                            return _t('SuspenseList');
                        case 0:
                        case 2:
                        case 15:
                            return (p = it(p.type, !1)), p;
                        case 11:
                            return (p = it(p.type.render, !1)), p;
                        case 1:
                            return (p = it(p.type, !0)), p;
                        default:
                            return '';
                    }
                }
                function ir(p, g) {
                    if (p && p.defaultProps) {
                        (g = s({}, g)), (p = p.defaultProps);
                        for (var M in p) g[M] === void 0 && (g[M] = p[M]);
                        return g;
                    }
                    return g;
                }
                var ji = Wt(null),
                    aa = null,
                    Qr = null,
                    la = null;
                function rr() {
                    la = Qr = aa = null;
                }
                function ua(p, g, M) {
                    Qe
                        ? (ut(ji, g._currentValue), (g._currentValue = M))
                        : (ut(ji, g._currentValue2), (g._currentValue2 = M));
                }
                function Oi(p) {
                    var g = ji.current;
                    mt(ji), Qe ? (p._currentValue = g) : (p._currentValue2 = g);
                }
                function Xi(p, g, M) {
                    for (; p !== null; ) {
                        var C = p.alternate;
                        if (
                            ((p.childLanes & g) !== g
                                ? ((p.childLanes |= g),
                                  C !== null && (C.childLanes |= g))
                                : C !== null &&
                                  (C.childLanes & g) !== g &&
                                  (C.childLanes |= g),
                            p === M)
                        )
                            break;
                        p = p.return;
                    }
                }
                function Ti(p, g) {
                    (aa = p),
                        (la = Qr = null),
                        (p = p.dependencies),
                        p !== null &&
                            p.firstContext !== null &&
                            ((p.lanes & g) !== 0 && (lr = !0),
                            (p.firstContext = null));
                }
                function mi(p) {
                    var g = Qe ? p._currentValue : p._currentValue2;
                    if (la !== p)
                        if (
                            ((p = { context: p, memoizedValue: g, next: null }),
                            Qr === null)
                        ) {
                            if (aa === null) throw Error(o(308));
                            (Qr = p),
                                (aa.dependencies = {
                                    lanes: 0,
                                    firstContext: p,
                                });
                        } else Qr = Qr.next = p;
                    return g;
                }
                var zr = null,
                    Hs = !1;
                function Pu(p) {
                    p.updateQueue = {
                        baseState: p.memoizedState,
                        firstBaseUpdate: null,
                        lastBaseUpdate: null,
                        shared: { pending: null, interleaved: null, lanes: 0 },
                        effects: null,
                    };
                }
                function Kp(p, g) {
                    (p = p.updateQueue),
                        g.updateQueue === p &&
                            (g.updateQueue = {
                                baseState: p.baseState,
                                firstBaseUpdate: p.firstBaseUpdate,
                                lastBaseUpdate: p.lastBaseUpdate,
                                shared: p.shared,
                                effects: p.effects,
                            });
                }
                function ca(p, g) {
                    return {
                        eventTime: p,
                        lane: g,
                        tag: 0,
                        payload: null,
                        callback: null,
                        next: null,
                    };
                }
                function nl(p, g) {
                    var M = p.updateQueue;
                    M !== null &&
                        ((M = M.shared),
                        bi !== null && (p.mode & 1) !== 0 && (dn & 2) === 0
                            ? ((p = M.interleaved),
                              p === null
                                  ? ((g.next = g),
                                    zr === null ? (zr = [M]) : zr.push(M))
                                  : ((g.next = p.next), (p.next = g)),
                              (M.interleaved = g))
                            : ((p = M.pending),
                              p === null
                                  ? (g.next = g)
                                  : ((g.next = p.next), (p.next = g)),
                              (M.pending = g)));
                }
                function bh(p, g, M) {
                    if (
                        ((g = g.updateQueue),
                        g !== null && ((g = g.shared), (M & 4194240) !== 0))
                    ) {
                        var C = g.lanes;
                        (C &= p.pendingLanes),
                            (M |= C),
                            (g.lanes = M),
                            gr(p, M);
                    }
                }
                function Ch(p, g) {
                    var M = p.updateQueue,
                        C = p.alternate;
                    if (C !== null && ((C = C.updateQueue), M === C)) {
                        var k = null,
                            B = null;
                        if (((M = M.firstBaseUpdate), M !== null)) {
                            do {
                                var ce = {
                                    eventTime: M.eventTime,
                                    lane: M.lane,
                                    tag: M.tag,
                                    payload: M.payload,
                                    callback: M.callback,
                                    next: null,
                                };
                                B === null ? (k = B = ce) : (B = B.next = ce),
                                    (M = M.next);
                            } while (M !== null);
                            B === null ? (k = B = g) : (B = B.next = g);
                        } else k = B = g;
                        (M = {
                            baseState: C.baseState,
                            firstBaseUpdate: k,
                            lastBaseUpdate: B,
                            shared: C.shared,
                            effects: C.effects,
                        }),
                            (p.updateQueue = M);
                        return;
                    }
                    (p = M.lastBaseUpdate),
                        p === null ? (M.firstBaseUpdate = g) : (p.next = g),
                        (M.lastBaseUpdate = g);
                }
                function Rh(p, g, M, C) {
                    var k = p.updateQueue;
                    Hs = !1;
                    var B = k.firstBaseUpdate,
                        ce = k.lastBaseUpdate,
                        Te = k.shared.pending;
                    if (Te !== null) {
                        k.shared.pending = null;
                        var $e = Te,
                            vt = $e.next;
                        ($e.next = null),
                            ce === null ? (B = vt) : (ce.next = vt),
                            (ce = $e);
                        var Ot = p.alternate;
                        Ot !== null &&
                            ((Ot = Ot.updateQueue),
                            (Te = Ot.lastBaseUpdate),
                            Te !== ce &&
                                (Te === null
                                    ? (Ot.firstBaseUpdate = vt)
                                    : (Te.next = vt),
                                (Ot.lastBaseUpdate = $e)));
                    }
                    if (B !== null) {
                        var ln = k.baseState;
                        (ce = 0), (Ot = vt = $e = null), (Te = B);
                        do {
                            var Yt = Te.lane,
                                mn = Te.eventTime;
                            if ((C & Yt) === Yt) {
                                Ot !== null &&
                                    (Ot = Ot.next =
                                        {
                                            eventTime: mn,
                                            lane: 0,
                                            tag: Te.tag,
                                            payload: Te.payload,
                                            callback: Te.callback,
                                            next: null,
                                        });
                                e: {
                                    var Rt = p,
                                        wr = Te;
                                    switch (((Yt = g), (mn = M), wr.tag)) {
                                        case 1:
                                            if (
                                                ((Rt = wr.payload),
                                                typeof Rt == 'function')
                                            ) {
                                                ln = Rt.call(mn, ln, Yt);
                                                break e;
                                            }
                                            ln = Rt;
                                            break e;
                                        case 3:
                                            Rt.flags =
                                                (Rt.flags & -65537) | 128;
                                        case 0:
                                            if (
                                                ((Rt = wr.payload),
                                                (Yt =
                                                    typeof Rt == 'function'
                                                        ? Rt.call(mn, ln, Yt)
                                                        : Rt),
                                                Yt == null)
                                            )
                                                break e;
                                            ln = s({}, ln, Yt);
                                            break e;
                                        case 2:
                                            Hs = !0;
                                    }
                                }
                                Te.callback !== null &&
                                    Te.lane !== 0 &&
                                    ((p.flags |= 64),
                                    (Yt = k.effects),
                                    Yt === null
                                        ? (k.effects = [Te])
                                        : Yt.push(Te));
                            } else
                                (mn = {
                                    eventTime: mn,
                                    lane: Yt,
                                    tag: Te.tag,
                                    payload: Te.payload,
                                    callback: Te.callback,
                                    next: null,
                                }),
                                    Ot === null
                                        ? ((vt = Ot = mn), ($e = ln))
                                        : (Ot = Ot.next = mn),
                                    (ce |= Yt);
                            if (((Te = Te.next), Te === null)) {
                                if (((Te = k.shared.pending), Te === null))
                                    break;
                                (Yt = Te),
                                    (Te = Yt.next),
                                    (Yt.next = null),
                                    (k.lastBaseUpdate = Yt),
                                    (k.shared.pending = null);
                            }
                        } while (!0);
                        if (
                            (Ot === null && ($e = ln),
                            (k.baseState = $e),
                            (k.firstBaseUpdate = vt),
                            (k.lastBaseUpdate = Ot),
                            (g = k.shared.interleaved),
                            g !== null)
                        ) {
                            k = g;
                            do (ce |= k.lane), (k = k.next);
                            while (k !== g);
                        } else B === null && (k.shared.lanes = 0);
                        (Vo |= ce), (p.lanes = ce), (p.memoizedState = ln);
                    }
                }
                function av(p, g, M) {
                    if (((p = g.effects), (g.effects = null), p !== null))
                        for (g = 0; g < p.length; g++) {
                            var C = p[g],
                                k = C.callback;
                            if (k !== null) {
                                if (
                                    ((C.callback = null),
                                    (C = M),
                                    typeof k != 'function')
                                )
                                    throw Error(o(191, k));
                                k.call(C);
                            }
                        }
                }
                var lv = new n.Component().refs;
                function Zp(p, g, M, C) {
                    (g = p.memoizedState),
                        (M = M(C, g)),
                        (M = M == null ? g : s({}, g, M)),
                        (p.memoizedState = M),
                        p.lanes === 0 && (p.updateQueue.baseState = M);
                }
                var Ph = {
                    isMounted: function (p) {
                        return (p = p._reactInternals) ? I(p) === p : !1;
                    },
                    enqueueSetState: function (p, g, M) {
                        p = p._reactInternals;
                        var C = Ln(),
                            k = vo(p),
                            B = ca(C, k);
                        (B.payload = g),
                            M != null && (B.callback = M),
                            nl(p, B),
                            (g = Dr(p, k, C)),
                            g !== null && bh(g, p, k);
                    },
                    enqueueReplaceState: function (p, g, M) {
                        p = p._reactInternals;
                        var C = Ln(),
                            k = vo(p),
                            B = ca(C, k);
                        (B.tag = 1),
                            (B.payload = g),
                            M != null && (B.callback = M),
                            nl(p, B),
                            (g = Dr(p, k, C)),
                            g !== null && bh(g, p, k);
                    },
                    enqueueForceUpdate: function (p, g) {
                        p = p._reactInternals;
                        var M = Ln(),
                            C = vo(p),
                            k = ca(M, C);
                        (k.tag = 2),
                            g != null && (k.callback = g),
                            nl(p, k),
                            (g = Dr(p, C, M)),
                            g !== null && bh(g, p, C);
                    },
                };
                function $p(p, g, M, C, k, B, ce) {
                    return (
                        (p = p.stateNode),
                        typeof p.shouldComponentUpdate == 'function'
                            ? p.shouldComponentUpdate(C, B, ce)
                            : g.prototype && g.prototype.isPureReactComponent
                              ? !Jr(M, C) || !Jr(k, B)
                              : !0
                    );
                }
                function uv(p, g, M) {
                    var C = !1,
                        k = Lt,
                        B = g.contextType;
                    return (
                        typeof B == 'object' && B !== null
                            ? (B = mi(B))
                            : ((k = Dn(g) ? wn : Bt.current),
                              (C = g.contextTypes),
                              (B = (C = C != null) ? yn(p, k) : Lt)),
                        (g = new g(M, B)),
                        (p.memoizedState =
                            g.state !== null && g.state !== void 0
                                ? g.state
                                : null),
                        (g.updater = Ph),
                        (p.stateNode = g),
                        (g._reactInternals = p),
                        C &&
                            ((p = p.stateNode),
                            (p.__reactInternalMemoizedUnmaskedChildContext = k),
                            (p.__reactInternalMemoizedMaskedChildContext = B)),
                        g
                    );
                }
                function cv(p, g, M, C) {
                    (p = g.state),
                        typeof g.componentWillReceiveProps == 'function' &&
                            g.componentWillReceiveProps(M, C),
                        typeof g.UNSAFE_componentWillReceiveProps ==
                            'function' &&
                            g.UNSAFE_componentWillReceiveProps(M, C),
                        g.state !== p &&
                            Ph.enqueueReplaceState(g, g.state, null);
                }
                function Jp(p, g, M, C) {
                    var k = p.stateNode;
                    (k.props = M),
                        (k.state = p.memoizedState),
                        (k.refs = lv),
                        Pu(p);
                    var B = g.contextType;
                    typeof B == 'object' && B !== null
                        ? (k.context = mi(B))
                        : ((B = Dn(g) ? wn : Bt.current),
                          (k.context = yn(p, B))),
                        (k.state = p.memoizedState),
                        (B = g.getDerivedStateFromProps),
                        typeof B == 'function' &&
                            (Zp(p, g, B, M), (k.state = p.memoizedState)),
                        typeof g.getDerivedStateFromProps == 'function' ||
                            typeof k.getSnapshotBeforeUpdate == 'function' ||
                            (typeof k.UNSAFE_componentWillMount != 'function' &&
                                typeof k.componentWillMount != 'function') ||
                            ((g = k.state),
                            typeof k.componentWillMount == 'function' &&
                                k.componentWillMount(),
                            typeof k.UNSAFE_componentWillMount == 'function' &&
                                k.UNSAFE_componentWillMount(),
                            g !== k.state &&
                                Ph.enqueueReplaceState(k, k.state, null),
                            Rh(p, M, k, C),
                            (k.state = p.memoizedState)),
                        typeof k.componentDidMount == 'function' &&
                            (p.flags |= 4194308);
                }
                var Lu = [],
                    il = 0,
                    Lh = null,
                    Ih = 0,
                    Gs = [],
                    Ss = 0,
                    kl = null,
                    fa = 1,
                    ha = '';
                function Nl(p, g) {
                    (Lu[il++] = Ih), (Lu[il++] = Lh), (Lh = p), (Ih = g);
                }
                function fv(p, g, M) {
                    (Gs[Ss++] = fa), (Gs[Ss++] = ha), (Gs[Ss++] = kl), (kl = p);
                    var C = fa;
                    p = ha;
                    var k = 32 - Bn(C) - 1;
                    (C &= ~(1 << k)), (M += 1);
                    var B = 32 - Bn(g) + k;
                    if (30 < B) {
                        var ce = k - (k % 5);
                        (B = (C & ((1 << ce) - 1)).toString(32)),
                            (C >>= ce),
                            (k -= ce),
                            (fa = (1 << (32 - Bn(g) + k)) | (M << k) | C),
                            (ha = B + p);
                    } else (fa = (1 << B) | (M << k) | C), (ha = p);
                }
                function Qp(p) {
                    p.return !== null && (Nl(p, 1), fv(p, 1, 0));
                }
                function em(p) {
                    for (; p === Lh; )
                        (Lh = Lu[--il]),
                            (Lu[il] = null),
                            (Ih = Lu[--il]),
                            (Lu[il] = null);
                    for (; p === kl; )
                        (kl = Gs[--Ss]),
                            (Gs[Ss] = null),
                            (ha = Gs[--Ss]),
                            (Gs[Ss] = null),
                            (fa = Gs[--Ss]),
                            (Gs[Ss] = null);
                }
                var Vr = null,
                    vr = null,
                    ai = !1,
                    Iu = !1,
                    Ws = null;
                function tm(p, g) {
                    var M = Cs(5, null, null, 0);
                    (M.elementType = 'DELETED'),
                        (M.stateNode = g),
                        (M.return = p),
                        (g = p.deletions),
                        g === null
                            ? ((p.deletions = [M]), (p.flags |= 16))
                            : g.push(M);
                }
                function nm(p, g) {
                    switch (p.tag) {
                        case 5:
                            return (
                                (g = jn(g, p.type, p.pendingProps)),
                                g !== null
                                    ? ((p.stateNode = g),
                                      (Vr = p),
                                      (vr = Xt(g)),
                                      !0)
                                    : !1
                            );
                        case 6:
                            return (
                                (g = An(g, p.pendingProps)),
                                g !== null
                                    ? ((p.stateNode = g),
                                      (Vr = p),
                                      (vr = null),
                                      !0)
                                    : !1
                            );
                        case 13:
                            if (((g = di(g)), g !== null)) {
                                var M =
                                    kl !== null
                                        ? { id: fa, overflow: ha }
                                        : null;
                                return (
                                    (p.memoizedState = {
                                        dehydrated: g,
                                        treeContext: M,
                                        retryLane: 1073741824,
                                    }),
                                    (M = Cs(18, null, null, 0)),
                                    (M.stateNode = g),
                                    (M.return = p),
                                    (p.child = M),
                                    (Vr = p),
                                    (vr = null),
                                    !0
                                );
                            }
                            return !1;
                        default:
                            return !1;
                    }
                }
                function Dh(p) {
                    return (p.mode & 1) !== 0 && (p.flags & 128) === 0;
                }
                function rl(p) {
                    if (ai) {
                        var g = vr;
                        if (g) {
                            var M = g;
                            if (!nm(p, g)) {
                                if (Dh(p)) throw Error(o(418));
                                g = Qn(M);
                                var C = Vr;
                                g && nm(p, g)
                                    ? tm(C, M)
                                    : ((p.flags = (p.flags & -4097) | 2),
                                      (ai = !1),
                                      (Vr = p));
                            }
                        } else {
                            if (Dh(p)) throw Error(o(418));
                            (p.flags = (p.flags & -4097) | 2),
                                (ai = !1),
                                (Vr = p);
                        }
                    }
                }
                function hv(p) {
                    for (
                        p = p.return;
                        p !== null &&
                        p.tag !== 5 &&
                        p.tag !== 3 &&
                        p.tag !== 13;

                    )
                        p = p.return;
                    Vr = p;
                }
                function Gc(p) {
                    if (!He || p !== Vr) return !1;
                    if (!ai) return hv(p), (ai = !0), !1;
                    if (
                        p.tag !== 3 &&
                        (p.tag !== 5 ||
                            (Pe(p.type) && !ae(p.type, p.memoizedProps)))
                    ) {
                        var g = vr;
                        if (g) {
                            if (Dh(p)) {
                                for (p = vr; p; ) p = Qn(p);
                                throw Error(o(418));
                            }
                            for (; g; ) tm(p, g), (g = Qn(g));
                        }
                    }
                    if ((hv(p), p.tag === 13)) {
                        if (!He) throw Error(o(316));
                        if (
                            ((p = p.memoizedState),
                            (p = p !== null ? p.dehydrated : null),
                            !p)
                        )
                            throw Error(o(317));
                        vr = z(p);
                    } else vr = Vr ? Qn(p.stateNode) : null;
                    return !0;
                }
                function Du() {
                    He && ((vr = Vr = null), (Iu = ai = !1));
                }
                function Oh(p) {
                    Ws === null ? (Ws = [p]) : Ws.push(p);
                }
                function Ou(p, g, M) {
                    if (
                        ((p = M.ref),
                        p !== null &&
                            typeof p != 'function' &&
                            typeof p != 'object')
                    ) {
                        if (M._owner) {
                            if (((M = M._owner), M)) {
                                if (M.tag !== 1) throw Error(o(309));
                                var C = M.stateNode;
                            }
                            if (!C) throw Error(o(147, p));
                            var k = C,
                                B = '' + p;
                            return g !== null &&
                                g.ref !== null &&
                                typeof g.ref == 'function' &&
                                g.ref._stringRef === B
                                ? g.ref
                                : ((g = function (ce) {
                                      var Te = k.refs;
                                      Te === lv && (Te = k.refs = {}),
                                          ce === null
                                              ? delete Te[B]
                                              : (Te[B] = ce);
                                  }),
                                  (g._stringRef = B),
                                  g);
                        }
                        if (typeof p != 'string') throw Error(o(284));
                        if (!M._owner) throw Error(o(290, p));
                    }
                    return p;
                }
                function sl(p, g) {
                    throw (
                        ((p = Object.prototype.toString.call(g)),
                        Error(
                            o(
                                31,
                                p === '[object Object]'
                                    ? 'object with keys {' +
                                          Object.keys(g).join(', ') +
                                          '}'
                                    : p
                            )
                        ))
                    );
                }
                function Uu(p) {
                    var g = p._init;
                    return g(p._payload);
                }
                function dv(p) {
                    function g(Ne, be) {
                        if (p) {
                            var qe = Ne.deletions;
                            qe === null
                                ? ((Ne.deletions = [be]), (Ne.flags |= 16))
                                : qe.push(be);
                        }
                    }
                    function M(Ne, be) {
                        if (!p) return null;
                        for (; be !== null; ) g(Ne, be), (be = be.sibling);
                        return null;
                    }
                    function C(Ne, be) {
                        for (Ne = new Map(); be !== null; )
                            be.key !== null
                                ? Ne.set(be.key, be)
                                : Ne.set(be.index, be),
                                (be = be.sibling);
                        return Ne;
                    }
                    function k(Ne, be) {
                        return (
                            (Ne = Aa(Ne, be)),
                            (Ne.index = 0),
                            (Ne.sibling = null),
                            Ne
                        );
                    }
                    function B(Ne, be, qe) {
                        return (
                            (Ne.index = qe),
                            p
                                ? ((qe = Ne.alternate),
                                  qe !== null
                                      ? ((qe = qe.index),
                                        qe < be ? ((Ne.flags |= 2), be) : qe)
                                      : ((Ne.flags |= 2), be))
                                : ((Ne.flags |= 1048576), be)
                        );
                    }
                    function ce(Ne) {
                        return (
                            p && Ne.alternate === null && (Ne.flags |= 2), Ne
                        );
                    }
                    function Te(Ne, be, qe, At) {
                        return be === null || be.tag !== 6
                            ? ((be = ad(qe, Ne.mode, At)), (be.return = Ne), be)
                            : ((be = k(be, qe)), (be.return = Ne), be);
                    }
                    function $e(Ne, be, qe, At) {
                        var Vt = qe.type;
                        return Vt === f
                            ? Ot(Ne, be, qe.props.children, At, qe.key)
                            : be !== null &&
                                (be.elementType === Vt ||
                                    (typeof Vt == 'object' &&
                                        Vt !== null &&
                                        Vt.$$typeof === T &&
                                        Uu(Vt) === be.type))
                              ? ((At = k(be, qe.props)),
                                (At.ref = Ou(Ne, be, qe)),
                                (At.return = Ne),
                                At)
                              : ((At = od(
                                    qe.type,
                                    qe.key,
                                    qe.props,
                                    null,
                                    Ne.mode,
                                    At
                                )),
                                (At.ref = Ou(Ne, be, qe)),
                                (At.return = Ne),
                                At);
                    }
                    function vt(Ne, be, qe, At) {
                        return be === null ||
                            be.tag !== 4 ||
                            be.stateNode.containerInfo !== qe.containerInfo ||
                            be.stateNode.implementation !== qe.implementation
                            ? ((be = ld(qe, Ne.mode, At)), (be.return = Ne), be)
                            : ((be = k(be, qe.children || [])),
                              (be.return = Ne),
                              be);
                    }
                    function Ot(Ne, be, qe, At, Vt) {
                        return be === null || be.tag !== 7
                            ? ((be = su(qe, Ne.mode, At, Vt)),
                              (be.return = Ne),
                              be)
                            : ((be = k(be, qe)), (be.return = Ne), be);
                    }
                    function ln(Ne, be, qe) {
                        if (
                            (typeof be == 'string' && be !== '') ||
                            typeof be == 'number'
                        )
                            return (
                                (be = ad('' + be, Ne.mode, qe)),
                                (be.return = Ne),
                                be
                            );
                        if (typeof be == 'object' && be !== null) {
                            switch (be.$$typeof) {
                                case l:
                                    return (
                                        (qe = od(
                                            be.type,
                                            be.key,
                                            be.props,
                                            null,
                                            Ne.mode,
                                            qe
                                        )),
                                        (qe.ref = Ou(Ne, null, be)),
                                        (qe.return = Ne),
                                        qe
                                    );
                                case u:
                                    return (
                                        (be = ld(be, Ne.mode, qe)),
                                        (be.return = Ne),
                                        be
                                    );
                                case T:
                                    var At = be._init;
                                    return ln(Ne, At(be._payload), qe);
                            }
                            if (le(be) || L(be))
                                return (
                                    (be = su(be, Ne.mode, qe, null)),
                                    (be.return = Ne),
                                    be
                                );
                            sl(Ne, be);
                        }
                        return null;
                    }
                    function Yt(Ne, be, qe, At) {
                        var Vt = be !== null ? be.key : null;
                        if (
                            (typeof qe == 'string' && qe !== '') ||
                            typeof qe == 'number'
                        )
                            return Vt !== null ? null : Te(Ne, be, '' + qe, At);
                        if (typeof qe == 'object' && qe !== null) {
                            switch (qe.$$typeof) {
                                case l:
                                    return qe.key === Vt
                                        ? $e(Ne, be, qe, At)
                                        : null;
                                case u:
                                    return qe.key === Vt
                                        ? vt(Ne, be, qe, At)
                                        : null;
                                case T:
                                    return (
                                        (Vt = qe._init),
                                        Yt(Ne, be, Vt(qe._payload), At)
                                    );
                            }
                            if (le(qe) || L(qe))
                                return Vt !== null
                                    ? null
                                    : Ot(Ne, be, qe, At, null);
                            sl(Ne, qe);
                        }
                        return null;
                    }
                    function mn(Ne, be, qe, At, Vt) {
                        if (
                            (typeof At == 'string' && At !== '') ||
                            typeof At == 'number'
                        )
                            return (
                                (Ne = Ne.get(qe) || null),
                                Te(be, Ne, '' + At, Vt)
                            );
                        if (typeof At == 'object' && At !== null) {
                            switch (At.$$typeof) {
                                case l:
                                    return (
                                        (Ne =
                                            Ne.get(
                                                At.key === null ? qe : At.key
                                            ) || null),
                                        $e(be, Ne, At, Vt)
                                    );
                                case u:
                                    return (
                                        (Ne =
                                            Ne.get(
                                                At.key === null ? qe : At.key
                                            ) || null),
                                        vt(be, Ne, At, Vt)
                                    );
                                case T:
                                    var fn = At._init;
                                    return mn(Ne, be, qe, fn(At._payload), Vt);
                            }
                            if (le(At) || L(At))
                                return (
                                    (Ne = Ne.get(qe) || null),
                                    Ot(be, Ne, At, Vt, null)
                                );
                            sl(be, At);
                        }
                        return null;
                    }
                    function Rt(Ne, be, qe, At) {
                        for (
                            var Vt = null,
                                fn = null,
                                un = be,
                                bn = (be = 0),
                                ki = null;
                            un !== null && bn < qe.length;
                            bn++
                        ) {
                            un.index > bn
                                ? ((ki = un), (un = null))
                                : (ki = un.sibling);
                            var Tn = Yt(Ne, un, qe[bn], At);
                            if (Tn === null) {
                                un === null && (un = ki);
                                break;
                            }
                            p && un && Tn.alternate === null && g(Ne, un),
                                (be = B(Tn, be, bn)),
                                fn === null ? (Vt = Tn) : (fn.sibling = Tn),
                                (fn = Tn),
                                (un = ki);
                        }
                        if (bn === qe.length)
                            return M(Ne, un), ai && Nl(Ne, bn), Vt;
                        if (un === null) {
                            for (; bn < qe.length; bn++)
                                (un = ln(Ne, qe[bn], At)),
                                    un !== null &&
                                        ((be = B(un, be, bn)),
                                        fn === null
                                            ? (Vt = un)
                                            : (fn.sibling = un),
                                        (fn = un));
                            return ai && Nl(Ne, bn), Vt;
                        }
                        for (un = C(Ne, un); bn < qe.length; bn++)
                            (ki = mn(un, Ne, bn, qe[bn], At)),
                                ki !== null &&
                                    (p &&
                                        ki.alternate !== null &&
                                        un.delete(
                                            ki.key === null ? bn : ki.key
                                        ),
                                    (be = B(ki, be, bn)),
                                    fn === null ? (Vt = ki) : (fn.sibling = ki),
                                    (fn = ki));
                        return (
                            p &&
                                un.forEach(function (ba) {
                                    return g(Ne, ba);
                                }),
                            ai && Nl(Ne, bn),
                            Vt
                        );
                    }
                    function wr(Ne, be, qe, At) {
                        var Vt = L(qe);
                        if (typeof Vt != 'function') throw Error(o(150));
                        if (((qe = Vt.call(qe)), qe == null))
                            throw Error(o(151));
                        for (
                            var fn = (Vt = null),
                                un = be,
                                bn = (be = 0),
                                ki = null,
                                Tn = qe.next();
                            un !== null && !Tn.done;
                            bn++, Tn = qe.next()
                        ) {
                            un.index > bn
                                ? ((ki = un), (un = null))
                                : (ki = un.sibling);
                            var ba = Yt(Ne, un, Tn.value, At);
                            if (ba === null) {
                                un === null && (un = ki);
                                break;
                            }
                            p && un && ba.alternate === null && g(Ne, un),
                                (be = B(ba, be, bn)),
                                fn === null ? (Vt = ba) : (fn.sibling = ba),
                                (fn = ba),
                                (un = ki);
                        }
                        if (Tn.done) return M(Ne, un), ai && Nl(Ne, bn), Vt;
                        if (un === null) {
                            for (; !Tn.done; bn++, Tn = qe.next())
                                (Tn = ln(Ne, Tn.value, At)),
                                    Tn !== null &&
                                        ((be = B(Tn, be, bn)),
                                        fn === null
                                            ? (Vt = Tn)
                                            : (fn.sibling = Tn),
                                        (fn = Tn));
                            return ai && Nl(Ne, bn), Vt;
                        }
                        for (un = C(Ne, un); !Tn.done; bn++, Tn = qe.next())
                            (Tn = mn(un, Ne, bn, Tn.value, At)),
                                Tn !== null &&
                                    (p &&
                                        Tn.alternate !== null &&
                                        un.delete(
                                            Tn.key === null ? bn : Tn.key
                                        ),
                                    (be = B(Tn, be, bn)),
                                    fn === null ? (Vt = Tn) : (fn.sibling = Tn),
                                    (fn = Tn));
                        return (
                            p &&
                                un.forEach(function (Dm) {
                                    return g(Ne, Dm);
                                }),
                            ai && Nl(Ne, bn),
                            Vt
                        );
                    }
                    function Rs(Ne, be, qe, At) {
                        if (
                            (typeof qe == 'object' &&
                                qe !== null &&
                                qe.type === f &&
                                qe.key === null &&
                                (qe = qe.props.children),
                            typeof qe == 'object' && qe !== null)
                        ) {
                            switch (qe.$$typeof) {
                                case l:
                                    e: {
                                        for (
                                            var Vt = qe.key, fn = be;
                                            fn !== null;

                                        ) {
                                            if (fn.key === Vt) {
                                                if (
                                                    ((Vt = qe.type), Vt === f)
                                                ) {
                                                    if (fn.tag === 7) {
                                                        M(Ne, fn.sibling),
                                                            (be = k(
                                                                fn,
                                                                qe.props
                                                                    .children
                                                            )),
                                                            (be.return = Ne),
                                                            (Ne = be);
                                                        break e;
                                                    }
                                                } else if (
                                                    fn.elementType === Vt ||
                                                    (typeof Vt == 'object' &&
                                                        Vt !== null &&
                                                        Vt.$$typeof === T &&
                                                        Uu(Vt) === fn.type)
                                                ) {
                                                    M(Ne, fn.sibling),
                                                        (be = k(fn, qe.props)),
                                                        (be.ref = Ou(
                                                            Ne,
                                                            fn,
                                                            qe
                                                        )),
                                                        (be.return = Ne),
                                                        (Ne = be);
                                                    break e;
                                                }
                                                M(Ne, fn);
                                                break;
                                            } else g(Ne, fn);
                                            fn = fn.sibling;
                                        }
                                        qe.type === f
                                            ? ((be = su(
                                                  qe.props.children,
                                                  Ne.mode,
                                                  At,
                                                  qe.key
                                              )),
                                              (be.return = Ne),
                                              (Ne = be))
                                            : ((At = od(
                                                  qe.type,
                                                  qe.key,
                                                  qe.props,
                                                  null,
                                                  Ne.mode,
                                                  At
                                              )),
                                              (At.ref = Ou(Ne, be, qe)),
                                              (At.return = Ne),
                                              (Ne = At));
                                    }
                                    return ce(Ne);
                                case u:
                                    e: {
                                        for (fn = qe.key; be !== null; ) {
                                            if (be.key === fn)
                                                if (
                                                    be.tag === 4 &&
                                                    be.stateNode
                                                        .containerInfo ===
                                                        qe.containerInfo &&
                                                    be.stateNode
                                                        .implementation ===
                                                        qe.implementation
                                                ) {
                                                    M(Ne, be.sibling),
                                                        (be = k(
                                                            be,
                                                            qe.children || []
                                                        )),
                                                        (be.return = Ne),
                                                        (Ne = be);
                                                    break e;
                                                } else {
                                                    M(Ne, be);
                                                    break;
                                                }
                                            else g(Ne, be);
                                            be = be.sibling;
                                        }
                                        (be = ld(qe, Ne.mode, At)),
                                            (be.return = Ne),
                                            (Ne = be);
                                    }
                                    return ce(Ne);
                                case T:
                                    return (
                                        (fn = qe._init),
                                        Rs(Ne, be, fn(qe._payload), At)
                                    );
                            }
                            if (le(qe)) return Rt(Ne, be, qe, At);
                            if (L(qe)) return wr(Ne, be, qe, At);
                            sl(Ne, qe);
                        }
                        return (typeof qe == 'string' && qe !== '') ||
                            typeof qe == 'number'
                            ? ((qe = '' + qe),
                              be !== null && be.tag === 6
                                  ? (M(Ne, be.sibling),
                                    (be = k(be, qe)),
                                    (be.return = Ne),
                                    (Ne = be))
                                  : (M(Ne, be),
                                    (be = ad(qe, Ne.mode, At)),
                                    (be.return = Ne),
                                    (Ne = be)),
                              ce(Ne))
                            : M(Ne, be);
                    }
                    return Rs;
                }
                var da = dv(!0),
                    pv = dv(!1),
                    ku = {},
                    es = Wt(ku),
                    Fl = Wt(ku),
                    Bl = Wt(ku);
                function co(p) {
                    if (p === ku) throw Error(o(174));
                    return p;
                }
                function Uh(p, g) {
                    ut(Bl, g),
                        ut(Fl, p),
                        ut(es, ku),
                        (p = de(g)),
                        mt(es),
                        ut(es, p);
                }
                function Nu() {
                    mt(es), mt(Fl), mt(Bl);
                }
                function mv(p) {
                    var g = co(Bl.current),
                        M = co(es.current);
                    (g = Z(M, p.type, g)), M !== g && (ut(Fl, p), ut(es, g));
                }
                function im(p) {
                    Fl.current === p && (mt(es), mt(Fl));
                }
                var gi = Wt(0);
                function kh(p) {
                    for (var g = p; g !== null; ) {
                        if (g.tag === 13) {
                            var M = g.memoizedState;
                            if (
                                M !== null &&
                                ((M = M.dehydrated),
                                M === null || Gi(M) || _i(M))
                            )
                                return g;
                        } else if (
                            g.tag === 19 &&
                            g.memoizedProps.revealOrder !== void 0
                        ) {
                            if ((g.flags & 128) !== 0) return g;
                        } else if (g.child !== null) {
                            (g.child.return = g), (g = g.child);
                            continue;
                        }
                        if (g === p) break;
                        for (; g.sibling === null; ) {
                            if (g.return === null || g.return === p)
                                return null;
                            g = g.return;
                        }
                        (g.sibling.return = g.return), (g = g.sibling);
                    }
                    return null;
                }
                var ws = [];
                function zl() {
                    for (var p = 0; p < ws.length; p++) {
                        var g = ws[p];
                        Qe
                            ? (g._workInProgressVersionPrimary = null)
                            : (g._workInProgressVersionSecondary = null);
                    }
                    ws.length = 0;
                }
                var Wc = a.ReactCurrentDispatcher,
                    Ms = a.ReactCurrentBatchConfig,
                    Vl = 0,
                    vi = null,
                    sr = null,
                    or = null,
                    Nh = !1,
                    Fo = !1,
                    Hl = 0,
                    jc = 0;
                function ar() {
                    throw Error(o(321));
                }
                function Fh(p, g) {
                    if (g === null) return !1;
                    for (var M = 0; M < g.length && M < p.length; M++)
                        if (!tr(p[M], g[M])) return !1;
                    return !0;
                }
                function Fu(p, g, M, C, k, B) {
                    if (
                        ((Vl = B),
                        (vi = g),
                        (g.memoizedState = null),
                        (g.updateQueue = null),
                        (g.lanes = 0),
                        (Wc.current =
                            p === null || p.memoizedState === null ? um : cm),
                        (p = M(C, k)),
                        Fo)
                    ) {
                        B = 0;
                        do {
                            if (((Fo = !1), (Hl = 0), 25 <= B))
                                throw Error(o(301));
                            (B += 1),
                                (or = sr = null),
                                (g.updateQueue = null),
                                (Wc.current = fm),
                                (p = M(C, k));
                        } while (Fo);
                    }
                    if (
                        ((Wc.current = Hu),
                        (g = sr !== null && sr.next !== null),
                        (Vl = 0),
                        (or = sr = vi = null),
                        (Nh = !1),
                        g)
                    )
                        throw Error(o(300));
                    return p;
                }
                function ol() {
                    var p = Hl !== 0;
                    return (Hl = 0), p;
                }
                function fo() {
                    var p = {
                        memoizedState: null,
                        baseState: null,
                        baseQueue: null,
                        queue: null,
                        next: null,
                    };
                    return (
                        or === null
                            ? (vi.memoizedState = or = p)
                            : (or = or.next = p),
                        or
                    );
                }
                function ho() {
                    if (sr === null) {
                        var p = vi.alternate;
                        p = p !== null ? p.memoizedState : null;
                    } else p = sr.next;
                    var g = or === null ? vi.memoizedState : or.next;
                    if (g !== null) (or = g), (sr = p);
                    else {
                        if (p === null) throw Error(o(310));
                        (sr = p),
                            (p = {
                                memoizedState: sr.memoizedState,
                                baseState: sr.baseState,
                                baseQueue: sr.baseQueue,
                                queue: sr.queue,
                                next: null,
                            }),
                            or === null
                                ? (vi.memoizedState = or = p)
                                : (or = or.next = p);
                    }
                    return or;
                }
                function Bo(p, g) {
                    return typeof g == 'function' ? g(p) : g;
                }
                function Xc(p) {
                    var g = ho(),
                        M = g.queue;
                    if (M === null) throw Error(o(311));
                    M.lastRenderedReducer = p;
                    var C = sr,
                        k = C.baseQueue,
                        B = M.pending;
                    if (B !== null) {
                        if (k !== null) {
                            var ce = k.next;
                            (k.next = B.next), (B.next = ce);
                        }
                        (C.baseQueue = k = B), (M.pending = null);
                    }
                    if (k !== null) {
                        (B = k.next), (C = C.baseState);
                        var Te = (ce = null),
                            $e = null,
                            vt = B;
                        do {
                            var Ot = vt.lane;
                            if ((Vl & Ot) === Ot)
                                $e !== null &&
                                    ($e = $e.next =
                                        {
                                            lane: 0,
                                            action: vt.action,
                                            hasEagerState: vt.hasEagerState,
                                            eagerState: vt.eagerState,
                                            next: null,
                                        }),
                                    (C = vt.hasEagerState
                                        ? vt.eagerState
                                        : p(C, vt.action));
                            else {
                                var ln = {
                                    lane: Ot,
                                    action: vt.action,
                                    hasEagerState: vt.hasEagerState,
                                    eagerState: vt.eagerState,
                                    next: null,
                                };
                                $e === null
                                    ? ((Te = $e = ln), (ce = C))
                                    : ($e = $e.next = ln),
                                    (vi.lanes |= Ot),
                                    (Vo |= Ot);
                            }
                            vt = vt.next;
                        } while (vt !== null && vt !== B);
                        $e === null ? (ce = C) : ($e.next = Te),
                            tr(C, g.memoizedState) || (lr = !0),
                            (g.memoizedState = C),
                            (g.baseState = ce),
                            (g.baseQueue = $e),
                            (M.lastRenderedState = C);
                    }
                    if (((p = M.interleaved), p !== null)) {
                        k = p;
                        do
                            (B = k.lane),
                                (vi.lanes |= B),
                                (Vo |= B),
                                (k = k.next);
                        while (k !== p);
                    } else k === null && (M.lanes = 0);
                    return [g.memoizedState, M.dispatch];
                }
                function Yc(p) {
                    var g = ho(),
                        M = g.queue;
                    if (M === null) throw Error(o(311));
                    M.lastRenderedReducer = p;
                    var C = M.dispatch,
                        k = M.pending,
                        B = g.memoizedState;
                    if (k !== null) {
                        M.pending = null;
                        var ce = (k = k.next);
                        do (B = p(B, ce.action)), (ce = ce.next);
                        while (ce !== k);
                        tr(B, g.memoizedState) || (lr = !0),
                            (g.memoizedState = B),
                            g.baseQueue === null && (g.baseState = B),
                            (M.lastRenderedState = B);
                    }
                    return [B, C];
                }
                function rm() {}
                function sm(p, g) {
                    var M = vi,
                        C = ho(),
                        k = g(),
                        B = !tr(C.memoizedState, k);
                    if (
                        (B && ((C.memoizedState = k), (lr = !0)),
                        (C = C.queue),
                        Bu(pa.bind(null, M, C, p), [p]),
                        C.getSnapshot !== g ||
                            B ||
                            (or !== null && or.memoizedState.tag & 1))
                    ) {
                        if (
                            ((M.flags |= 2048),
                            Kc(9, am.bind(null, M, C, k, g), void 0, null),
                            bi === null)
                        )
                            throw Error(o(349));
                        (Vl & 30) !== 0 || om(M, g, k);
                    }
                    return k;
                }
                function om(p, g, M) {
                    (p.flags |= 16384),
                        (p = { getSnapshot: g, value: M }),
                        (g = vi.updateQueue),
                        g === null
                            ? ((g = { lastEffect: null, stores: null }),
                              (vi.updateQueue = g),
                              (g.stores = [p]))
                            : ((M = g.stores),
                              M === null ? (g.stores = [p]) : M.push(p));
                }
                function am(p, g, M, C) {
                    (g.value = M), (g.getSnapshot = C), Bh(g) && Dr(p, 1, -1);
                }
                function pa(p, g, M) {
                    return M(function () {
                        Bh(g) && Dr(p, 1, -1);
                    });
                }
                function Bh(p) {
                    var g = p.getSnapshot;
                    p = p.value;
                    try {
                        var M = g();
                        return !tr(p, M);
                    } catch {
                        return !0;
                    }
                }
                function qc(p) {
                    var g = fo();
                    return (
                        typeof p == 'function' && (p = p()),
                        (g.memoizedState = g.baseState = p),
                        (p = {
                            pending: null,
                            interleaved: null,
                            lanes: 0,
                            dispatch: null,
                            lastRenderedReducer: Bo,
                            lastRenderedState: p,
                        }),
                        (g.queue = p),
                        (p = p.dispatch = x1.bind(null, vi, p)),
                        [g.memoizedState, p]
                    );
                }
                function Kc(p, g, M, C) {
                    return (
                        (p = {
                            tag: p,
                            create: g,
                            destroy: M,
                            deps: C,
                            next: null,
                        }),
                        (g = vi.updateQueue),
                        g === null
                            ? ((g = { lastEffect: null, stores: null }),
                              (vi.updateQueue = g),
                              (g.lastEffect = p.next = p))
                            : ((M = g.lastEffect),
                              M === null
                                  ? (g.lastEffect = p.next = p)
                                  : ((C = M.next),
                                    (M.next = p),
                                    (p.next = C),
                                    (g.lastEffect = p))),
                        p
                    );
                }
                function gv() {
                    return ho().memoizedState;
                }
                function al(p, g, M, C) {
                    var k = fo();
                    (vi.flags |= p),
                        (k.memoizedState = Kc(
                            1 | g,
                            M,
                            void 0,
                            C === void 0 ? null : C
                        ));
                }
                function zh(p, g, M, C) {
                    var k = ho();
                    C = C === void 0 ? null : C;
                    var B = void 0;
                    if (sr !== null) {
                        var ce = sr.memoizedState;
                        if (((B = ce.destroy), C !== null && Fh(C, ce.deps))) {
                            k.memoizedState = Kc(g, M, B, C);
                            return;
                        }
                    }
                    (vi.flags |= p), (k.memoizedState = Kc(1 | g, M, B, C));
                }
                function Vh(p, g) {
                    return al(8390656, 8, p, g);
                }
                function Bu(p, g) {
                    return zh(2048, 8, p, g);
                }
                function Kn(p, g) {
                    return zh(4, 2, p, g);
                }
                function Hh(p, g) {
                    return zh(4, 4, p, g);
                }
                function Zc(p, g) {
                    if (typeof g == 'function')
                        return (
                            (p = p()),
                            g(p),
                            function () {
                                g(null);
                            }
                        );
                    if (g != null)
                        return (
                            (p = p()),
                            (g.current = p),
                            function () {
                                g.current = null;
                            }
                        );
                }
                function zu(p, g, M) {
                    return (
                        (M = M != null ? M.concat([p]) : null),
                        zh(4, 4, Zc.bind(null, g, p), M)
                    );
                }
                function Gh() {}
                function Wh(p, g) {
                    var M = ho();
                    g = g === void 0 ? null : g;
                    var C = M.memoizedState;
                    return C !== null && g !== null && Fh(g, C[1])
                        ? C[0]
                        : ((M.memoizedState = [p, g]), p);
                }
                function Vu(p, g) {
                    var M = ho();
                    g = g === void 0 ? null : g;
                    var C = M.memoizedState;
                    return C !== null && g !== null && Fh(g, C[1])
                        ? C[0]
                        : ((p = p()), (M.memoizedState = [p, g]), p);
                }
                function jh(p, g) {
                    var M = sn;
                    (sn = M !== 0 && 4 > M ? M : 4), p(!0);
                    var C = Ms.transition;
                    Ms.transition = {};
                    try {
                        p(!1), g();
                    } finally {
                        (sn = M), (Ms.transition = C);
                    }
                }
                function Gl() {
                    return ho().memoizedState;
                }
                function vv(p, g, M) {
                    var C = vo(p);
                    (M = {
                        lane: C,
                        action: M,
                        hasEagerState: !1,
                        eagerState: null,
                        next: null,
                    }),
                        yv(p)
                            ? lm(g, M)
                            : ($c(p, g, M),
                              (M = Ln()),
                              (p = Dr(p, C, M)),
                              p !== null && Jc(p, g, C));
                }
                function x1(p, g, M) {
                    var C = vo(p),
                        k = {
                            lane: C,
                            action: M,
                            hasEagerState: !1,
                            eagerState: null,
                            next: null,
                        };
                    if (yv(p)) lm(g, k);
                    else {
                        $c(p, g, k);
                        var B = p.alternate;
                        if (
                            p.lanes === 0 &&
                            (B === null || B.lanes === 0) &&
                            ((B = g.lastRenderedReducer), B !== null)
                        )
                            try {
                                var ce = g.lastRenderedState,
                                    Te = B(ce, M);
                                if (
                                    ((k.hasEagerState = !0),
                                    (k.eagerState = Te),
                                    tr(Te, ce))
                                )
                                    return;
                            } catch {
                            } finally {
                            }
                        (M = Ln()),
                            (p = Dr(p, C, M)),
                            p !== null && Jc(p, g, C);
                    }
                }
                function yv(p) {
                    var g = p.alternate;
                    return p === vi || (g !== null && g === vi);
                }
                function lm(p, g) {
                    Fo = Nh = !0;
                    var M = p.pending;
                    M === null
                        ? (g.next = g)
                        : ((g.next = M.next), (M.next = g)),
                        (p.pending = g);
                }
                function $c(p, g, M) {
                    bi !== null && (p.mode & 1) !== 0 && (dn & 2) === 0
                        ? ((p = g.interleaved),
                          p === null
                              ? ((M.next = M),
                                zr === null ? (zr = [g]) : zr.push(g))
                              : ((M.next = p.next), (p.next = M)),
                          (g.interleaved = M))
                        : ((p = g.pending),
                          p === null
                              ? (M.next = M)
                              : ((M.next = p.next), (p.next = M)),
                          (g.pending = M));
                }
                function Jc(p, g, M) {
                    if ((M & 4194240) !== 0) {
                        var C = g.lanes;
                        (C &= p.pendingLanes),
                            (M |= C),
                            (g.lanes = M),
                            gr(p, M);
                    }
                }
                var Hu = {
                        readContext: mi,
                        useCallback: ar,
                        useContext: ar,
                        useEffect: ar,
                        useImperativeHandle: ar,
                        useInsertionEffect: ar,
                        useLayoutEffect: ar,
                        useMemo: ar,
                        useReducer: ar,
                        useRef: ar,
                        useState: ar,
                        useDebugValue: ar,
                        useDeferredValue: ar,
                        useTransition: ar,
                        useMutableSource: ar,
                        useSyncExternalStore: ar,
                        useId: ar,
                        unstable_isNewReconciler: !1,
                    },
                    um = {
                        readContext: mi,
                        useCallback: function (p, g) {
                            return (
                                (fo().memoizedState = [
                                    p,
                                    g === void 0 ? null : g,
                                ]),
                                p
                            );
                        },
                        useContext: mi,
                        useEffect: Vh,
                        useImperativeHandle: function (p, g, M) {
                            return (
                                (M = M != null ? M.concat([p]) : null),
                                al(4194308, 4, Zc.bind(null, g, p), M)
                            );
                        },
                        useLayoutEffect: function (p, g) {
                            return al(4194308, 4, p, g);
                        },
                        useInsertionEffect: function (p, g) {
                            return al(4, 2, p, g);
                        },
                        useMemo: function (p, g) {
                            var M = fo();
                            return (
                                (g = g === void 0 ? null : g),
                                (p = p()),
                                (M.memoizedState = [p, g]),
                                p
                            );
                        },
                        useReducer: function (p, g, M) {
                            var C = fo();
                            return (
                                (g = M !== void 0 ? M(g) : g),
                                (C.memoizedState = C.baseState = g),
                                (p = {
                                    pending: null,
                                    interleaved: null,
                                    lanes: 0,
                                    dispatch: null,
                                    lastRenderedReducer: p,
                                    lastRenderedState: g,
                                }),
                                (C.queue = p),
                                (p = p.dispatch = vv.bind(null, vi, p)),
                                [C.memoizedState, p]
                            );
                        },
                        useRef: function (p) {
                            var g = fo();
                            return (p = { current: p }), (g.memoizedState = p);
                        },
                        useState: qc,
                        useDebugValue: Gh,
                        useDeferredValue: function (p) {
                            var g = qc(p),
                                M = g[0],
                                C = g[1];
                            return (
                                Vh(
                                    function () {
                                        var k = Ms.transition;
                                        Ms.transition = {};
                                        try {
                                            C(p);
                                        } finally {
                                            Ms.transition = k;
                                        }
                                    },
                                    [p]
                                ),
                                M
                            );
                        },
                        useTransition: function () {
                            var p = qc(!1),
                                g = p[0];
                            return (
                                (p = jh.bind(null, p[1])),
                                (fo().memoizedState = p),
                                [g, p]
                            );
                        },
                        useMutableSource: function () {},
                        useSyncExternalStore: function (p, g, M) {
                            var C = vi,
                                k = fo();
                            if (ai) {
                                if (M === void 0) throw Error(o(407));
                                M = M();
                            } else {
                                if (((M = g()), bi === null))
                                    throw Error(o(349));
                                (Vl & 30) !== 0 || om(C, g, M);
                            }
                            k.memoizedState = M;
                            var B = { value: M, getSnapshot: g };
                            return (
                                (k.queue = B),
                                Vh(pa.bind(null, C, B, p), [p]),
                                (C.flags |= 2048),
                                Kc(9, am.bind(null, C, B, M, g), void 0, null),
                                M
                            );
                        },
                        useId: function () {
                            var p = fo(),
                                g = bi.identifierPrefix;
                            if (ai) {
                                var M = ha,
                                    C = fa;
                                (M =
                                    (C & ~(1 << (32 - Bn(C) - 1))).toString(
                                        32
                                    ) + M),
                                    (g = ':' + g + 'R' + M),
                                    (M = Hl++),
                                    0 < M && (g += 'H' + M.toString(32)),
                                    (g += ':');
                            } else
                                (M = jc++),
                                    (g = ':' + g + 'r' + M.toString(32) + ':');
                            return (p.memoizedState = g);
                        },
                        unstable_isNewReconciler: !1,
                    },
                    cm = {
                        readContext: mi,
                        useCallback: Wh,
                        useContext: mi,
                        useEffect: Bu,
                        useImperativeHandle: zu,
                        useInsertionEffect: Kn,
                        useLayoutEffect: Hh,
                        useMemo: Vu,
                        useReducer: Xc,
                        useRef: gv,
                        useState: function () {
                            return Xc(Bo);
                        },
                        useDebugValue: Gh,
                        useDeferredValue: function (p) {
                            var g = Xc(Bo),
                                M = g[0],
                                C = g[1];
                            return (
                                Bu(
                                    function () {
                                        var k = Ms.transition;
                                        Ms.transition = {};
                                        try {
                                            C(p);
                                        } finally {
                                            Ms.transition = k;
                                        }
                                    },
                                    [p]
                                ),
                                M
                            );
                        },
                        useTransition: function () {
                            var p = Xc(Bo)[0],
                                g = ho().memoizedState;
                            return [p, g];
                        },
                        useMutableSource: rm,
                        useSyncExternalStore: sm,
                        useId: Gl,
                        unstable_isNewReconciler: !1,
                    },
                    fm = {
                        readContext: mi,
                        useCallback: Wh,
                        useContext: mi,
                        useEffect: Bu,
                        useImperativeHandle: zu,
                        useInsertionEffect: Kn,
                        useLayoutEffect: Hh,
                        useMemo: Vu,
                        useReducer: Yc,
                        useRef: gv,
                        useState: function () {
                            return Yc(Bo);
                        },
                        useDebugValue: Gh,
                        useDeferredValue: function (p) {
                            var g = Yc(Bo),
                                M = g[0],
                                C = g[1];
                            return (
                                Bu(
                                    function () {
                                        var k = Ms.transition;
                                        Ms.transition = {};
                                        try {
                                            C(p);
                                        } finally {
                                            Ms.transition = k;
                                        }
                                    },
                                    [p]
                                ),
                                M
                            );
                        },
                        useTransition: function () {
                            var p = Yc(Bo)[0],
                                g = ho().memoizedState;
                            return [p, g];
                        },
                        useMutableSource: rm,
                        useSyncExternalStore: sm,
                        useId: Gl,
                        unstable_isNewReconciler: !1,
                    };
                function hm(p, g) {
                    try {
                        var M = '',
                            C = g;
                        do (M += oa(C)), (C = C.return);
                        while (C);
                        var k = M;
                    } catch (B) {
                        k =
                            `
Error generating stack: ` +
                            B.message +
                            `
` +
                            B.stack;
                    }
                    return { value: p, source: g, stack: k };
                }
                function Xh(p, g) {
                    try {
                        console.error(g.value);
                    } catch (M) {
                        setTimeout(function () {
                            throw M;
                        });
                    }
                }
                var S1 = typeof WeakMap == 'function' ? WeakMap : Map;
                function _v(p, g, M) {
                    (M = ca(-1, M)),
                        (M.tag = 3),
                        (M.payload = { element: null });
                    var C = g.value;
                    return (
                        (M.callback = function () {
                            qu || ((qu = !0), (ni = C)), Xh(p, g);
                        }),
                        M
                    );
                }
                function Yh(p, g, M) {
                    (M = ca(-1, M)), (M.tag = 3);
                    var C = p.type.getDerivedStateFromError;
                    if (typeof C == 'function') {
                        var k = g.value;
                        (M.payload = function () {
                            return C(k);
                        }),
                            (M.callback = function () {
                                Xh(p, g);
                            });
                    }
                    var B = p.stateNode;
                    return (
                        B !== null &&
                            typeof B.componentDidCatch == 'function' &&
                            (M.callback = function () {
                                Xh(p, g),
                                    typeof C != 'function' &&
                                        (go === null
                                            ? (go = new Set([this]))
                                            : go.add(this));
                                var ce = g.stack;
                                this.componentDidCatch(g.value, {
                                    componentStack: ce !== null ? ce : '',
                                });
                            }),
                        M
                    );
                }
                function ma(p, g, M) {
                    var C = p.pingCache;
                    if (C === null) {
                        C = p.pingCache = new S1();
                        var k = new Set();
                        C.set(g, k);
                    } else
                        (k = C.get(g)),
                            k === void 0 && ((k = new Set()), C.set(g, k));
                    k.has(M) ||
                        (k.add(M), (p = Pm.bind(null, p, g, M)), g.then(p, p));
                }
                function dm(p) {
                    do {
                        var g;
                        if (
                            ((g = p.tag === 13) &&
                                ((g = p.memoizedState),
                                (g = g !== null ? g.dehydrated !== null : !0)),
                            g)
                        )
                            return p;
                        p = p.return;
                    } while (p !== null);
                    return null;
                }
                function Wl(p, g, M, C, k) {
                    return (p.mode & 1) === 0
                        ? (p === g
                              ? (p.flags |= 65536)
                              : ((p.flags |= 128),
                                (M.flags |= 131072),
                                (M.flags &= -52805),
                                M.tag === 1 &&
                                    (M.alternate === null
                                        ? (M.tag = 17)
                                        : ((g = ca(-1, 1)),
                                          (g.tag = 2),
                                          nl(M, g))),
                                (M.lanes |= 1)),
                          p)
                        : ((p.flags |= 65536), (p.lanes = k), p);
                }
                function Yi(p) {
                    p.flags |= 4;
                }
                function Gu(p, g) {
                    if (p !== null && p.child === g.child) return !0;
                    if ((g.flags & 16) !== 0) return !1;
                    for (p = g.child; p !== null; ) {
                        if (
                            (p.flags & 12854) !== 0 ||
                            (p.subtreeFlags & 12854) !== 0
                        )
                            return !1;
                        p = p.sibling;
                    }
                    return !0;
                }
                var Es, jl, qh, Kh;
                if (Ke)
                    (Es = function (p, g) {
                        for (var M = g.child; M !== null; ) {
                            if (M.tag === 5 || M.tag === 6) $(p, M.stateNode);
                            else if (M.tag !== 4 && M.child !== null) {
                                (M.child.return = M), (M = M.child);
                                continue;
                            }
                            if (M === g) break;
                            for (; M.sibling === null; ) {
                                if (M.return === null || M.return === g) return;
                                M = M.return;
                            }
                            (M.sibling.return = M.return), (M = M.sibling);
                        }
                    }),
                        (jl = function () {}),
                        (qh = function (p, g, M, C, k) {
                            if (((p = p.memoizedProps), p !== C)) {
                                var B = g.stateNode,
                                    ce = co(es.current);
                                (M = ne(B, M, p, C, k, ce)),
                                    (g.updateQueue = M) && Yi(g);
                            }
                        }),
                        (Kh = function (p, g, M, C) {
                            M !== C && Yi(g);
                        });
                else if (X) {
                    Es = function (p, g, M, C) {
                        for (var k = g.child; k !== null; ) {
                            if (k.tag === 5) {
                                var B = k.stateNode;
                                M &&
                                    C &&
                                    (B = hn(B, k.type, k.memoizedProps, k)),
                                    $(p, B);
                            } else if (k.tag === 6)
                                (B = k.stateNode),
                                    M && C && (B = Pn(B, k.memoizedProps, k)),
                                    $(p, B);
                            else if (k.tag !== 4) {
                                if (k.tag === 22 && k.memoizedState !== null)
                                    (B = k.child),
                                        B !== null && (B.return = k),
                                        Es(p, k, !0, !0);
                                else if (k.child !== null) {
                                    (k.child.return = k), (k = k.child);
                                    continue;
                                }
                            }
                            if (k === g) break;
                            for (; k.sibling === null; ) {
                                if (k.return === null || k.return === g) return;
                                k = k.return;
                            }
                            (k.sibling.return = k.return), (k = k.sibling);
                        }
                    };
                    var ll = function (p, g, M, C) {
                        for (var k = g.child; k !== null; ) {
                            if (k.tag === 5) {
                                var B = k.stateNode;
                                M &&
                                    C &&
                                    (B = hn(B, k.type, k.memoizedProps, k)),
                                    Qt(p, B);
                            } else if (k.tag === 6)
                                (B = k.stateNode),
                                    M && C && (B = Pn(B, k.memoizedProps, k)),
                                    Qt(p, B);
                            else if (k.tag !== 4) {
                                if (k.tag === 22 && k.memoizedState !== null)
                                    (B = k.child),
                                        B !== null && (B.return = k),
                                        ll(p, k, !0, !0);
                                else if (k.child !== null) {
                                    (k.child.return = k), (k = k.child);
                                    continue;
                                }
                            }
                            if (k === g) break;
                            for (; k.sibling === null; ) {
                                if (k.return === null || k.return === g) return;
                                k = k.return;
                            }
                            (k.sibling.return = k.return), (k = k.sibling);
                        }
                    };
                    (jl = function (p, g) {
                        var M = g.stateNode;
                        if (!Gu(p, g)) {
                            p = M.containerInfo;
                            var C = Et(p);
                            ll(C, g, !1, !1),
                                (M.pendingChildren = C),
                                Yi(g),
                                en(p, C);
                        }
                    }),
                        (qh = function (p, g, M, C, k) {
                            var B = p.stateNode,
                                ce = p.memoizedProps;
                            if ((p = Gu(p, g)) && ce === C) g.stateNode = B;
                            else {
                                var Te = g.stateNode,
                                    $e = co(es.current),
                                    vt = null;
                                ce !== C && (vt = ne(Te, M, ce, C, k, $e)),
                                    p && vt === null
                                        ? (g.stateNode = B)
                                        : ((B = wt(B, vt, M, ce, C, g, p, Te)),
                                          fe(B, M, C, k, $e) && Yi(g),
                                          (g.stateNode = B),
                                          p ? Yi(g) : Es(B, g, !1, !1));
                            }
                        }),
                        (Kh = function (p, g, M, C) {
                            M !== C
                                ? ((p = co(Bl.current)),
                                  (M = co(es.current)),
                                  (g.stateNode = me(C, p, M, g)),
                                  Yi(g))
                                : (g.stateNode = p.stateNode);
                        });
                } else
                    (jl = function () {}),
                        (qh = function () {}),
                        (Kh = function () {});
                function ga(p, g) {
                    if (!ai)
                        switch (p.tailMode) {
                            case 'hidden':
                                g = p.tail;
                                for (var M = null; g !== null; )
                                    g.alternate !== null && (M = g),
                                        (g = g.sibling);
                                M === null
                                    ? (p.tail = null)
                                    : (M.sibling = null);
                                break;
                            case 'collapsed':
                                M = p.tail;
                                for (var C = null; M !== null; )
                                    M.alternate !== null && (C = M),
                                        (M = M.sibling);
                                C === null
                                    ? g || p.tail === null
                                        ? (p.tail = null)
                                        : (p.tail.sibling = null)
                                    : (C.sibling = null);
                        }
                }
                function Ai(p) {
                    var g =
                            p.alternate !== null &&
                            p.alternate.child === p.child,
                        M = 0,
                        C = 0;
                    if (g)
                        for (var k = p.child; k !== null; )
                            (M |= k.lanes | k.childLanes),
                                (C |= k.subtreeFlags & 14680064),
                                (C |= k.flags & 14680064),
                                (k.return = p),
                                (k = k.sibling);
                    else
                        for (k = p.child; k !== null; )
                            (M |= k.lanes | k.childLanes),
                                (C |= k.subtreeFlags),
                                (C |= k.flags),
                                (k.return = p),
                                (k = k.sibling);
                    return (p.subtreeFlags |= C), (p.childLanes = M), g;
                }
                function Zh(p, g, M) {
                    var C = g.pendingProps;
                    switch ((em(g), g.tag)) {
                        case 2:
                        case 16:
                        case 15:
                        case 0:
                        case 11:
                        case 7:
                        case 8:
                        case 12:
                        case 9:
                        case 14:
                            return Ai(g), null;
                        case 1:
                            return Dn(g.type) && $t(), Ai(g), null;
                        case 3:
                            return (
                                (C = g.stateNode),
                                Nu(),
                                mt(jt),
                                mt(Bt),
                                zl(),
                                C.pendingContext &&
                                    ((C.context = C.pendingContext),
                                    (C.pendingContext = null)),
                                (p === null || p.child === null) &&
                                    (Gc(g)
                                        ? Yi(g)
                                        : p === null ||
                                          (p.memoizedState.isDehydrated &&
                                              (g.flags & 256) === 0) ||
                                          ((g.flags |= 1024),
                                          Ws !== null &&
                                              (hf(Ws), (Ws = null)))),
                                jl(p, g),
                                Ai(g),
                                null
                            );
                        case 5:
                            im(g), (M = co(Bl.current));
                            var k = g.type;
                            if (p !== null && g.stateNode != null)
                                qh(p, g, k, C, M),
                                    p.ref !== g.ref &&
                                        ((g.flags |= 512),
                                        (g.flags |= 2097152));
                            else {
                                if (!C) {
                                    if (g.stateNode === null)
                                        throw Error(o(166));
                                    return Ai(g), null;
                                }
                                if (((p = co(es.current)), Gc(g))) {
                                    if (!He) throw Error(o(175));
                                    (p = G(
                                        g.stateNode,
                                        g.type,
                                        g.memoizedProps,
                                        M,
                                        p,
                                        g,
                                        !Iu
                                    )),
                                        (g.updateQueue = p),
                                        p !== null && Yi(g);
                                } else {
                                    var B = F(k, C, M, p, g);
                                    Es(B, g, !1, !1),
                                        (g.stateNode = B),
                                        fe(B, k, C, M, p) && Yi(g);
                                }
                                g.ref !== null &&
                                    ((g.flags |= 512), (g.flags |= 2097152));
                            }
                            return Ai(g), null;
                        case 6:
                            if (p && g.stateNode != null)
                                Kh(p, g, p.memoizedProps, C);
                            else {
                                if (
                                    typeof C != 'string' &&
                                    g.stateNode === null
                                )
                                    throw Error(o(166));
                                if (
                                    ((p = co(Bl.current)),
                                    (M = co(es.current)),
                                    Gc(g))
                                ) {
                                    if (!He) throw Error(o(176));
                                    if (
                                        ((p = g.stateNode),
                                        (C = g.memoizedProps),
                                        (M = Q(p, C, g, !Iu)) &&
                                            ((k = Vr), k !== null))
                                    )
                                        switch (
                                            ((B = (k.mode & 1) !== 0), k.tag)
                                        ) {
                                            case 3:
                                                Ue(
                                                    k.stateNode.containerInfo,
                                                    p,
                                                    C,
                                                    B
                                                );
                                                break;
                                            case 5:
                                                Ve(
                                                    k.type,
                                                    k.memoizedProps,
                                                    k.stateNode,
                                                    p,
                                                    C,
                                                    B
                                                );
                                        }
                                    M && Yi(g);
                                } else g.stateNode = me(C, p, M, g);
                            }
                            return Ai(g), null;
                        case 13:
                            if (
                                (mt(gi),
                                (C = g.memoizedState),
                                ai &&
                                    vr !== null &&
                                    (g.mode & 1) !== 0 &&
                                    (g.flags & 128) === 0)
                            ) {
                                for (p = vr; p; ) p = Qn(p);
                                return Du(), (g.flags |= 98560), g;
                            }
                            if (C !== null && C.dehydrated !== null) {
                                if (((C = Gc(g)), p === null)) {
                                    if (!C) throw Error(o(318));
                                    if (!He) throw Error(o(344));
                                    if (
                                        ((p = g.memoizedState),
                                        (p = p !== null ? p.dehydrated : null),
                                        !p)
                                    )
                                        throw Error(o(317));
                                    xe(p, g);
                                } else
                                    Du(),
                                        (g.flags & 128) === 0 &&
                                            (g.memoizedState = null),
                                        (g.flags |= 4);
                                return Ai(g), null;
                            }
                            return (
                                Ws !== null && (hf(Ws), (Ws = null)),
                                (g.flags & 128) !== 0
                                    ? ((g.lanes = M), g)
                                    : ((C = C !== null),
                                      (M = !1),
                                      p === null
                                          ? Gc(g)
                                          : (M = p.memoizedState !== null),
                                      C &&
                                          !M &&
                                          ((g.child.flags |= 8192),
                                          (g.mode & 1) !== 0 &&
                                              (p === null ||
                                              (gi.current & 1) !== 0
                                                  ? Si === 0 && (Si = 3)
                                                  : id())),
                                      g.updateQueue !== null && (g.flags |= 4),
                                      Ai(g),
                                      null)
                            );
                        case 4:
                            return (
                                Nu(),
                                jl(p, g),
                                p === null && We(g.stateNode.containerInfo),
                                Ai(g),
                                null
                            );
                        case 10:
                            return Oi(g.type._context), Ai(g), null;
                        case 17:
                            return Dn(g.type) && $t(), Ai(g), null;
                        case 19:
                            if ((mt(gi), (k = g.memoizedState), k === null))
                                return Ai(g), null;
                            if (
                                ((C = (g.flags & 128) !== 0),
                                (B = k.rendering),
                                B === null)
                            )
                                if (C) ga(k, !1);
                                else {
                                    if (
                                        Si !== 0 ||
                                        (p !== null && (p.flags & 128) !== 0)
                                    )
                                        for (p = g.child; p !== null; ) {
                                            if (((B = kh(p)), B !== null)) {
                                                for (
                                                    g.flags |= 128,
                                                        ga(k, !1),
                                                        p = B.updateQueue,
                                                        p !== null &&
                                                            ((g.updateQueue =
                                                                p),
                                                            (g.flags |= 4)),
                                                        g.subtreeFlags = 0,
                                                        p = M,
                                                        C = g.child;
                                                    C !== null;

                                                )
                                                    (M = C),
                                                        (k = p),
                                                        (M.flags &= 14680066),
                                                        (B = M.alternate),
                                                        B === null
                                                            ? ((M.childLanes = 0),
                                                              (M.lanes = k),
                                                              (M.child = null),
                                                              (M.subtreeFlags = 0),
                                                              (M.memoizedProps =
                                                                  null),
                                                              (M.memoizedState =
                                                                  null),
                                                              (M.updateQueue =
                                                                  null),
                                                              (M.dependencies =
                                                                  null),
                                                              (M.stateNode =
                                                                  null))
                                                            : ((M.childLanes =
                                                                  B.childLanes),
                                                              (M.lanes =
                                                                  B.lanes),
                                                              (M.child =
                                                                  B.child),
                                                              (M.subtreeFlags = 0),
                                                              (M.deletions =
                                                                  null),
                                                              (M.memoizedProps =
                                                                  B.memoizedProps),
                                                              (M.memoizedState =
                                                                  B.memoizedState),
                                                              (M.updateQueue =
                                                                  B.updateQueue),
                                                              (M.type = B.type),
                                                              (k =
                                                                  B.dependencies),
                                                              (M.dependencies =
                                                                  k === null
                                                                      ? null
                                                                      : {
                                                                            lanes: k.lanes,
                                                                            firstContext:
                                                                                k.firstContext,
                                                                        })),
                                                        (C = C.sibling);
                                                return (
                                                    ut(
                                                        gi,
                                                        (gi.current & 1) | 2
                                                    ),
                                                    g.child
                                                );
                                            }
                                            p = p.sibling;
                                        }
                                    k.tail !== null &&
                                        oi() > fl &&
                                        ((g.flags |= 128),
                                        (C = !0),
                                        ga(k, !1),
                                        (g.lanes = 4194304));
                                }
                            else {
                                if (!C)
                                    if (((p = kh(B)), p !== null)) {
                                        if (
                                            ((g.flags |= 128),
                                            (C = !0),
                                            (p = p.updateQueue),
                                            p !== null &&
                                                ((g.updateQueue = p),
                                                (g.flags |= 4)),
                                            ga(k, !0),
                                            k.tail === null &&
                                                k.tailMode === 'hidden' &&
                                                !B.alternate &&
                                                !ai)
                                        )
                                            return Ai(g), null;
                                    } else
                                        2 * oi() - k.renderingStartTime > fl &&
                                            M !== 1073741824 &&
                                            ((g.flags |= 128),
                                            (C = !0),
                                            ga(k, !1),
                                            (g.lanes = 4194304));
                                k.isBackwards
                                    ? ((B.sibling = g.child), (g.child = B))
                                    : ((p = k.last),
                                      p !== null
                                          ? (p.sibling = B)
                                          : (g.child = B),
                                      (k.last = B));
                            }
                            return k.tail !== null
                                ? ((g = k.tail),
                                  (k.rendering = g),
                                  (k.tail = g.sibling),
                                  (k.renderingStartTime = oi()),
                                  (g.sibling = null),
                                  (p = gi.current),
                                  ut(gi, C ? (p & 1) | 2 : p & 1),
                                  g)
                                : (Ai(g), null);
                        case 22:
                        case 23:
                            return (
                                df(),
                                (C = g.memoizedState !== null),
                                p !== null &&
                                    (p.memoizedState !== null) !== C &&
                                    (g.flags |= 8192),
                                C && (g.mode & 1) !== 0
                                    ? (Ir & 1073741824) !== 0 &&
                                      (Ai(g),
                                      Ke &&
                                          g.subtreeFlags & 6 &&
                                          (g.flags |= 8192))
                                    : Ai(g),
                                null
                            );
                        case 24:
                            return null;
                        case 25:
                            return null;
                    }
                    throw Error(o(156, g.tag));
                }
                var pm = a.ReactCurrentOwner,
                    lr = !1;
                function xi(p, g, M, C) {
                    g.child =
                        p === null ? pv(g, null, M, C) : da(g, p.child, M, C);
                }
                function Zn(p, g, M, C, k) {
                    M = M.render;
                    var B = g.ref;
                    return (
                        Ti(g, k),
                        (C = Fu(p, g, M, C, B, k)),
                        (M = ol()),
                        p !== null && !lr
                            ? ((g.updateQueue = p.updateQueue),
                              (g.flags &= -2053),
                              (p.lanes &= ~k),
                              ts(p, g, k))
                            : (ai && M && Qp(g),
                              (g.flags |= 1),
                              xi(p, g, C, k),
                              g.child)
                    );
                }
                function Yn(p, g, M, C, k) {
                    if (p === null) {
                        var B = M.type;
                        return typeof B == 'function' &&
                            !sd(B) &&
                            B.defaultProps === void 0 &&
                            M.compare === null &&
                            M.defaultProps === void 0
                            ? ((g.tag = 15), (g.type = B), va(p, g, B, C, k))
                            : ((p = od(M.type, null, C, g, g.mode, k)),
                              (p.ref = g.ref),
                              (p.return = g),
                              (g.child = p));
                    }
                    if (((B = p.child), (p.lanes & k) === 0)) {
                        var ce = B.memoizedProps;
                        if (
                            ((M = M.compare),
                            (M = M !== null ? M : Jr),
                            M(ce, C) && p.ref === g.ref)
                        )
                            return ts(p, g, k);
                    }
                    return (
                        (g.flags |= 1),
                        (p = Aa(B, C)),
                        (p.ref = g.ref),
                        (p.return = g),
                        (g.child = p)
                    );
                }
                function va(p, g, M, C, k) {
                    if (p !== null && Jr(p.memoizedProps, C) && p.ref === g.ref)
                        if (((lr = !1), (p.lanes & k) !== 0))
                            (p.flags & 131072) !== 0 && (lr = !0);
                        else return (g.lanes = p.lanes), ts(p, g, k);
                    return ya(p, g, M, C, k);
                }
                function yr(p, g, M) {
                    var C = g.pendingProps,
                        k = C.children,
                        B = p !== null ? p.memoizedState : null;
                    if (C.mode === 'hidden')
                        if ((g.mode & 1) === 0)
                            (g.memoizedState = {
                                baseLanes: 0,
                                cachePool: null,
                            }),
                                ut(eu, Ir),
                                (Ir |= M);
                        else if ((M & 1073741824) !== 0)
                            (g.memoizedState = {
                                baseLanes: 0,
                                cachePool: null,
                            }),
                                (C = B !== null ? B.baseLanes : M),
                                ut(eu, Ir),
                                (Ir |= C);
                        else
                            return (
                                (p = B !== null ? B.baseLanes | M : M),
                                (g.lanes = g.childLanes = 1073741824),
                                (g.memoizedState = {
                                    baseLanes: p,
                                    cachePool: null,
                                }),
                                (g.updateQueue = null),
                                ut(eu, Ir),
                                (Ir |= p),
                                null
                            );
                    else
                        B !== null
                            ? ((C = B.baseLanes | M), (g.memoizedState = null))
                            : (C = M),
                            ut(eu, Ir),
                            (Ir |= C);
                    return xi(p, g, k, M), g.child;
                }
                function Hr(p, g) {
                    var M = g.ref;
                    ((p === null && M !== null) ||
                        (p !== null && p.ref !== M)) &&
                        ((g.flags |= 512), (g.flags |= 2097152));
                }
                function ya(p, g, M, C, k) {
                    var B = Dn(M) ? wn : Bt.current;
                    return (
                        (B = yn(g, B)),
                        Ti(g, k),
                        (M = Fu(p, g, M, C, B, k)),
                        (C = ol()),
                        p !== null && !lr
                            ? ((g.updateQueue = p.updateQueue),
                              (g.flags &= -2053),
                              (p.lanes &= ~k),
                              ts(p, g, k))
                            : (ai && C && Qp(g),
                              (g.flags |= 1),
                              xi(p, g, M, k),
                              g.child)
                    );
                }
                function Xl(p, g, M, C, k) {
                    if (Dn(M)) {
                        var B = !0;
                        nn(g);
                    } else B = !1;
                    if ((Ti(g, k), g.stateNode === null))
                        p !== null &&
                            ((p.alternate = null),
                            (g.alternate = null),
                            (g.flags |= 2)),
                            uv(g, M, C),
                            Jp(g, M, C, k),
                            (C = !0);
                    else if (p === null) {
                        var ce = g.stateNode,
                            Te = g.memoizedProps;
                        ce.props = Te;
                        var $e = ce.context,
                            vt = M.contextType;
                        typeof vt == 'object' && vt !== null
                            ? (vt = mi(vt))
                            : ((vt = Dn(M) ? wn : Bt.current),
                              (vt = yn(g, vt)));
                        var Ot = M.getDerivedStateFromProps,
                            ln =
                                typeof Ot == 'function' ||
                                typeof ce.getSnapshotBeforeUpdate == 'function';
                        ln ||
                            (typeof ce.UNSAFE_componentWillReceiveProps !=
                                'function' &&
                                typeof ce.componentWillReceiveProps !=
                                    'function') ||
                            ((Te !== C || $e !== vt) && cv(g, ce, C, vt)),
                            (Hs = !1);
                        var Yt = g.memoizedState;
                        (ce.state = Yt),
                            Rh(g, C, ce, k),
                            ($e = g.memoizedState),
                            Te !== C || Yt !== $e || jt.current || Hs
                                ? (typeof Ot == 'function' &&
                                      (Zp(g, M, Ot, C), ($e = g.memoizedState)),
                                  (Te = Hs || $p(g, M, Te, C, Yt, $e, vt))
                                      ? (ln ||
                                            (typeof ce.UNSAFE_componentWillMount !=
                                                'function' &&
                                                typeof ce.componentWillMount !=
                                                    'function') ||
                                            (typeof ce.componentWillMount ==
                                                'function' &&
                                                ce.componentWillMount(),
                                            typeof ce.UNSAFE_componentWillMount ==
                                                'function' &&
                                                ce.UNSAFE_componentWillMount()),
                                        typeof ce.componentDidMount ==
                                            'function' && (g.flags |= 4194308))
                                      : (typeof ce.componentDidMount ==
                                            'function' && (g.flags |= 4194308),
                                        (g.memoizedProps = C),
                                        (g.memoizedState = $e)),
                                  (ce.props = C),
                                  (ce.state = $e),
                                  (ce.context = vt),
                                  (C = Te))
                                : (typeof ce.componentDidMount == 'function' &&
                                      (g.flags |= 4194308),
                                  (C = !1));
                    } else {
                        (ce = g.stateNode),
                            Kp(p, g),
                            (Te = g.memoizedProps),
                            (vt =
                                g.type === g.elementType ? Te : ir(g.type, Te)),
                            (ce.props = vt),
                            (ln = g.pendingProps),
                            (Yt = ce.context),
                            ($e = M.contextType),
                            typeof $e == 'object' && $e !== null
                                ? ($e = mi($e))
                                : (($e = Dn(M) ? wn : Bt.current),
                                  ($e = yn(g, $e)));
                        var mn = M.getDerivedStateFromProps;
                        (Ot =
                            typeof mn == 'function' ||
                            typeof ce.getSnapshotBeforeUpdate == 'function') ||
                            (typeof ce.UNSAFE_componentWillReceiveProps !=
                                'function' &&
                                typeof ce.componentWillReceiveProps !=
                                    'function') ||
                            ((Te !== ln || Yt !== $e) && cv(g, ce, C, $e)),
                            (Hs = !1),
                            (Yt = g.memoizedState),
                            (ce.state = Yt),
                            Rh(g, C, ce, k);
                        var Rt = g.memoizedState;
                        Te !== ln || Yt !== Rt || jt.current || Hs
                            ? (typeof mn == 'function' &&
                                  (Zp(g, M, mn, C), (Rt = g.memoizedState)),
                              (vt = Hs || $p(g, M, vt, C, Yt, Rt, $e) || !1)
                                  ? (Ot ||
                                        (typeof ce.UNSAFE_componentWillUpdate !=
                                            'function' &&
                                            typeof ce.componentWillUpdate !=
                                                'function') ||
                                        (typeof ce.componentWillUpdate ==
                                            'function' &&
                                            ce.componentWillUpdate(C, Rt, $e),
                                        typeof ce.UNSAFE_componentWillUpdate ==
                                            'function' &&
                                            ce.UNSAFE_componentWillUpdate(
                                                C,
                                                Rt,
                                                $e
                                            )),
                                    typeof ce.componentDidUpdate ==
                                        'function' && (g.flags |= 4),
                                    typeof ce.getSnapshotBeforeUpdate ==
                                        'function' && (g.flags |= 1024))
                                  : (typeof ce.componentDidUpdate !=
                                        'function' ||
                                        (Te === p.memoizedProps &&
                                            Yt === p.memoizedState) ||
                                        (g.flags |= 4),
                                    typeof ce.getSnapshotBeforeUpdate !=
                                        'function' ||
                                        (Te === p.memoizedProps &&
                                            Yt === p.memoizedState) ||
                                        (g.flags |= 1024),
                                    (g.memoizedProps = C),
                                    (g.memoizedState = Rt)),
                              (ce.props = C),
                              (ce.state = Rt),
                              (ce.context = $e),
                              (C = vt))
                            : (typeof ce.componentDidUpdate != 'function' ||
                                  (Te === p.memoizedProps &&
                                      Yt === p.memoizedState) ||
                                  (g.flags |= 4),
                              typeof ce.getSnapshotBeforeUpdate != 'function' ||
                                  (Te === p.memoizedProps &&
                                      Yt === p.memoizedState) ||
                                  (g.flags |= 1024),
                              (C = !1));
                    }
                    return Lr(p, g, M, C, B, k);
                }
                function Lr(p, g, M, C, k, B) {
                    Hr(p, g);
                    var ce = (g.flags & 128) !== 0;
                    if (!C && !ce) return k && Jt(g, M, !1), ts(p, g, B);
                    (C = g.stateNode), (pm.current = g);
                    var Te =
                        ce && typeof M.getDerivedStateFromError != 'function'
                            ? null
                            : C.render();
                    return (
                        (g.flags |= 1),
                        p !== null && ce
                            ? ((g.child = da(g, p.child, null, B)),
                              (g.child = da(g, null, Te, B)))
                            : xi(p, g, Te, B),
                        (g.memoizedState = C.state),
                        k && Jt(g, M, !0),
                        g.child
                    );
                }
                function Qc(p) {
                    var g = p.stateNode;
                    g.pendingContext
                        ? tn(
                              p,
                              g.pendingContext,
                              g.pendingContext !== g.context
                          )
                        : g.context && tn(p, g.context, !1),
                        Uh(p, g.containerInfo);
                }
                function mm(p, g, M, C, k) {
                    return (
                        Du(), Oh(k), (g.flags |= 256), xi(p, g, M, C), g.child
                    );
                }
                var ef = { dehydrated: null, treeContext: null, retryLane: 0 };
                function Yl(p) {
                    return { baseLanes: p, cachePool: null };
                }
                function gm(p, g, M) {
                    var C = g.pendingProps,
                        k = gi.current,
                        B = !1,
                        ce = (g.flags & 128) !== 0,
                        Te;
                    if (
                        ((Te = ce) ||
                            (Te =
                                p !== null && p.memoizedState === null
                                    ? !1
                                    : (k & 2) !== 0),
                        Te
                            ? ((B = !0), (g.flags &= -129))
                            : (p === null || p.memoizedState !== null) &&
                              (k |= 1),
                        ut(gi, k & 1),
                        p === null)
                    )
                        return (
                            rl(g),
                            (p = g.memoizedState),
                            p !== null && ((p = p.dehydrated), p !== null)
                                ? ((g.mode & 1) === 0
                                      ? (g.lanes = 1)
                                      : _i(p)
                                        ? (g.lanes = 8)
                                        : (g.lanes = 1073741824),
                                  null)
                                : ((k = C.children),
                                  (p = C.fallback),
                                  B
                                      ? ((C = g.mode),
                                        (B = g.child),
                                        (k = { mode: 'hidden', children: k }),
                                        (C & 1) === 0 && B !== null
                                            ? ((B.childLanes = 0),
                                              (B.pendingProps = k))
                                            : (B = gf(k, C, 0, null)),
                                        (p = su(p, C, M, null)),
                                        (B.return = g),
                                        (p.return = g),
                                        (B.sibling = p),
                                        (g.child = B),
                                        (g.child.memoizedState = Yl(M)),
                                        (g.memoizedState = ef),
                                        p)
                                      : po(g, k))
                        );
                    if (((k = p.memoizedState), k !== null)) {
                        if (((Te = k.dehydrated), Te !== null)) {
                            if (ce)
                                return g.flags & 256
                                    ? ((g.flags &= -257),
                                      nf(p, g, M, Error(o(422))))
                                    : g.memoizedState !== null
                                      ? ((g.child = p.child),
                                        (g.flags |= 128),
                                        null)
                                      : ((B = C.fallback),
                                        (k = g.mode),
                                        (C = gf(
                                            {
                                                mode: 'visible',
                                                children: C.children,
                                            },
                                            k,
                                            0,
                                            null
                                        )),
                                        (B = su(B, k, M, null)),
                                        (B.flags |= 2),
                                        (C.return = g),
                                        (B.return = g),
                                        (C.sibling = B),
                                        (g.child = C),
                                        (g.mode & 1) !== 0 &&
                                            da(g, p.child, null, M),
                                        (g.child.memoizedState = Yl(M)),
                                        (g.memoizedState = ef),
                                        B);
                            if ((g.mode & 1) === 0) g = nf(p, g, M, null);
                            else if (_i(Te)) g = nf(p, g, M, Error(o(419)));
                            else if (
                                ((C = (M & p.childLanes) !== 0), lr || C)
                            ) {
                                if (((C = bi), C !== null)) {
                                    switch (M & -M) {
                                        case 4:
                                            B = 2;
                                            break;
                                        case 16:
                                            B = 8;
                                            break;
                                        case 64:
                                        case 128:
                                        case 256:
                                        case 512:
                                        case 1024:
                                        case 2048:
                                        case 4096:
                                        case 8192:
                                        case 16384:
                                        case 32768:
                                        case 65536:
                                        case 131072:
                                        case 262144:
                                        case 524288:
                                        case 1048576:
                                        case 2097152:
                                        case 4194304:
                                        case 8388608:
                                        case 16777216:
                                        case 33554432:
                                        case 67108864:
                                            B = 32;
                                            break;
                                        case 536870912:
                                            B = 268435456;
                                            break;
                                        default:
                                            B = 0;
                                    }
                                    (C =
                                        (B & (C.suspendedLanes | M)) !== 0
                                            ? 0
                                            : B),
                                        C !== 0 &&
                                            C !== k.retryLane &&
                                            ((k.retryLane = C), Dr(p, C, -1));
                                }
                                id(), (g = nf(p, g, M, Error(o(421))));
                            } else
                                Gi(Te)
                                    ? ((g.flags |= 128),
                                      (g.child = p.child),
                                      (g = Ev.bind(null, p)),
                                      si(Te, g),
                                      (g = null))
                                    : ((M = k.treeContext),
                                      He &&
                                          ((vr = $r(Te)),
                                          (Vr = g),
                                          (ai = !0),
                                          (Ws = null),
                                          (Iu = !1),
                                          M !== null &&
                                              ((Gs[Ss++] = fa),
                                              (Gs[Ss++] = ha),
                                              (Gs[Ss++] = kl),
                                              (fa = M.id),
                                              (ha = M.overflow),
                                              (kl = g))),
                                      (g = po(g, g.pendingProps.children)),
                                      (g.flags |= 4096));
                            return g;
                        }
                        return B
                            ? ((C = $h(p, g, C.children, C.fallback, M)),
                              (B = g.child),
                              (k = p.child.memoizedState),
                              (B.memoizedState =
                                  k === null
                                      ? Yl(M)
                                      : {
                                            baseLanes: k.baseLanes | M,
                                            cachePool: null,
                                        }),
                              (B.childLanes = p.childLanes & ~M),
                              (g.memoizedState = ef),
                              C)
                            : ((M = tf(p, g, C.children, M)),
                              (g.memoizedState = null),
                              M);
                    }
                    return B
                        ? ((C = $h(p, g, C.children, C.fallback, M)),
                          (B = g.child),
                          (k = p.child.memoizedState),
                          (B.memoizedState =
                              k === null
                                  ? Yl(M)
                                  : {
                                        baseLanes: k.baseLanes | M,
                                        cachePool: null,
                                    }),
                          (B.childLanes = p.childLanes & ~M),
                          (g.memoizedState = ef),
                          C)
                        : ((M = tf(p, g, C.children, M)),
                          (g.memoizedState = null),
                          M);
                }
                function po(p, g) {
                    return (
                        (g = gf(
                            { mode: 'visible', children: g },
                            p.mode,
                            0,
                            null
                        )),
                        (g.return = p),
                        (p.child = g)
                    );
                }
                function tf(p, g, M, C) {
                    var k = p.child;
                    return (
                        (p = k.sibling),
                        (M = Aa(k, { mode: 'visible', children: M })),
                        (g.mode & 1) === 0 && (M.lanes = C),
                        (M.return = g),
                        (M.sibling = null),
                        p !== null &&
                            ((C = g.deletions),
                            C === null
                                ? ((g.deletions = [p]), (g.flags |= 16))
                                : C.push(p)),
                        (g.child = M)
                    );
                }
                function $h(p, g, M, C, k) {
                    var B = g.mode;
                    p = p.child;
                    var ce = p.sibling,
                        Te = { mode: 'hidden', children: M };
                    return (
                        (B & 1) === 0 && g.child !== p
                            ? ((M = g.child),
                              (M.childLanes = 0),
                              (M.pendingProps = Te),
                              (g.deletions = null))
                            : ((M = Aa(p, Te)),
                              (M.subtreeFlags = p.subtreeFlags & 14680064)),
                        ce !== null
                            ? (C = Aa(ce, C))
                            : ((C = su(C, B, k, null)), (C.flags |= 2)),
                        (C.return = g),
                        (M.return = g),
                        (M.sibling = C),
                        (g.child = M),
                        C
                    );
                }
                function nf(p, g, M, C) {
                    return (
                        C !== null && Oh(C),
                        da(g, p.child, null, M),
                        (p = po(g, g.pendingProps.children)),
                        (p.flags |= 2),
                        (g.memoizedState = null),
                        p
                    );
                }
                function xv(p, g, M) {
                    p.lanes |= g;
                    var C = p.alternate;
                    C !== null && (C.lanes |= g), Xi(p.return, g, M);
                }
                function zo(p, g, M, C, k) {
                    var B = p.memoizedState;
                    B === null
                        ? (p.memoizedState = {
                              isBackwards: g,
                              rendering: null,
                              renderingStartTime: 0,
                              last: C,
                              tail: M,
                              tailMode: k,
                          })
                        : ((B.isBackwards = g),
                          (B.rendering = null),
                          (B.renderingStartTime = 0),
                          (B.last = C),
                          (B.tail = M),
                          (B.tailMode = k));
                }
                function ql(p, g, M) {
                    var C = g.pendingProps,
                        k = C.revealOrder,
                        B = C.tail;
                    if (
                        (xi(p, g, C.children, M),
                        (C = gi.current),
                        (C & 2) !== 0)
                    )
                        (C = (C & 1) | 2), (g.flags |= 128);
                    else {
                        if (p !== null && (p.flags & 128) !== 0)
                            e: for (p = g.child; p !== null; ) {
                                if (p.tag === 13)
                                    p.memoizedState !== null && xv(p, M, g);
                                else if (p.tag === 19) xv(p, M, g);
                                else if (p.child !== null) {
                                    (p.child.return = p), (p = p.child);
                                    continue;
                                }
                                if (p === g) break e;
                                for (; p.sibling === null; ) {
                                    if (p.return === null || p.return === g)
                                        break e;
                                    p = p.return;
                                }
                                (p.sibling.return = p.return), (p = p.sibling);
                            }
                        C &= 1;
                    }
                    if ((ut(gi, C), (g.mode & 1) === 0)) g.memoizedState = null;
                    else
                        switch (k) {
                            case 'forwards':
                                for (M = g.child, k = null; M !== null; )
                                    (p = M.alternate),
                                        p !== null && kh(p) === null && (k = M),
                                        (M = M.sibling);
                                (M = k),
                                    M === null
                                        ? ((k = g.child), (g.child = null))
                                        : ((k = M.sibling), (M.sibling = null)),
                                    zo(g, !1, k, M, B);
                                break;
                            case 'backwards':
                                for (
                                    M = null, k = g.child, g.child = null;
                                    k !== null;

                                ) {
                                    if (
                                        ((p = k.alternate),
                                        p !== null && kh(p) === null)
                                    ) {
                                        g.child = k;
                                        break;
                                    }
                                    (p = k.sibling),
                                        (k.sibling = M),
                                        (M = k),
                                        (k = p);
                                }
                                zo(g, !0, M, null, B);
                                break;
                            case 'together':
                                zo(g, !1, null, null, void 0);
                                break;
                            default:
                                g.memoizedState = null;
                        }
                    return g.child;
                }
                function ts(p, g, M) {
                    if (
                        (p !== null && (g.dependencies = p.dependencies),
                        (Vo |= g.lanes),
                        (M & g.childLanes) === 0)
                    )
                        return null;
                    if (p !== null && g.child !== p.child) throw Error(o(153));
                    if (g.child !== null) {
                        for (
                            p = g.child,
                                M = Aa(p, p.pendingProps),
                                g.child = M,
                                M.return = g;
                            p.sibling !== null;

                        )
                            (p = p.sibling),
                                (M = M.sibling = Aa(p, p.pendingProps)),
                                (M.return = g);
                        M.sibling = null;
                    }
                    return g.child;
                }
                function Jh(p, g, M) {
                    switch (g.tag) {
                        case 3:
                            Qc(g), Du();
                            break;
                        case 5:
                            mv(g);
                            break;
                        case 1:
                            Dn(g.type) && nn(g);
                            break;
                        case 4:
                            Uh(g, g.stateNode.containerInfo);
                            break;
                        case 10:
                            ua(g, g.type._context, g.memoizedProps.value);
                            break;
                        case 13:
                            var C = g.memoizedState;
                            if (C !== null)
                                return C.dehydrated !== null
                                    ? (ut(gi, gi.current & 1),
                                      (g.flags |= 128),
                                      null)
                                    : (M & g.child.childLanes) !== 0
                                      ? gm(p, g, M)
                                      : (ut(gi, gi.current & 1),
                                        (p = ts(p, g, M)),
                                        p !== null ? p.sibling : null);
                            ut(gi, gi.current & 1);
                            break;
                        case 19:
                            if (
                                ((C = (M & g.childLanes) !== 0),
                                (p.flags & 128) !== 0)
                            ) {
                                if (C) return ql(p, g, M);
                                g.flags |= 128;
                            }
                            var k = g.memoizedState;
                            if (
                                (k !== null &&
                                    ((k.rendering = null),
                                    (k.tail = null),
                                    (k.lastEffect = null)),
                                ut(gi, gi.current),
                                C)
                            )
                                break;
                            return null;
                        case 22:
                        case 23:
                            return (g.lanes = 0), yr(p, g, M);
                    }
                    return ts(p, g, M);
                }
                function Qh(p, g) {
                    switch ((em(g), g.tag)) {
                        case 1:
                            return (
                                Dn(g.type) && $t(),
                                (p = g.flags),
                                p & 65536
                                    ? ((g.flags = (p & -65537) | 128), g)
                                    : null
                            );
                        case 3:
                            return (
                                Nu(),
                                mt(jt),
                                mt(Bt),
                                zl(),
                                (p = g.flags),
                                (p & 65536) !== 0 && (p & 128) === 0
                                    ? ((g.flags = (p & -65537) | 128), g)
                                    : null
                            );
                        case 5:
                            return im(g), null;
                        case 13:
                            if (
                                (mt(gi),
                                (p = g.memoizedState),
                                p !== null && p.dehydrated !== null)
                            ) {
                                if (g.alternate === null) throw Error(o(340));
                                Du();
                            }
                            return (
                                (p = g.flags),
                                p & 65536
                                    ? ((g.flags = (p & -65537) | 128), g)
                                    : null
                            );
                        case 19:
                            return mt(gi), null;
                        case 4:
                            return Nu(), null;
                        case 10:
                            return Oi(g.type._context), null;
                        case 22:
                        case 23:
                            return df(), null;
                        case 24:
                            return null;
                        default:
                            return null;
                    }
                }
                var Gr = !1,
                    ur = !1,
                    Kl = typeof WeakSet == 'function' ? WeakSet : Set,
                    St = null;
                function js(p, g) {
                    var M = p.ref;
                    if (M !== null)
                        if (typeof M == 'function')
                            try {
                                M(null);
                            } catch (C) {
                                jr(p, g, C);
                            }
                        else M.current = null;
                }
                function _a(p, g, M) {
                    try {
                        M();
                    } catch (C) {
                        jr(p, g, C);
                    }
                }
                var vm = !1;
                function ym(p, g) {
                    for (se(p.containerInfo), St = g; St !== null; )
                        if (
                            ((p = St),
                            (g = p.child),
                            (p.subtreeFlags & 1028) !== 0 && g !== null)
                        )
                            (g.return = p), (St = g);
                        else
                            for (; St !== null; ) {
                                p = St;
                                try {
                                    var M = p.alternate;
                                    if ((p.flags & 1024) !== 0)
                                        switch (p.tag) {
                                            case 0:
                                            case 11:
                                            case 15:
                                                break;
                                            case 1:
                                                if (M !== null) {
                                                    var C = M.memoizedProps,
                                                        k = M.memoizedState,
                                                        B = p.stateNode,
                                                        ce =
                                                            B.getSnapshotBeforeUpdate(
                                                                p.elementType ===
                                                                    p.type
                                                                    ? C
                                                                    : ir(
                                                                          p.type,
                                                                          C
                                                                      ),
                                                                k
                                                            );
                                                    B.__reactInternalSnapshotBeforeUpdate =
                                                        ce;
                                                }
                                                break;
                                            case 3:
                                                Ke &&
                                                    ht(
                                                        p.stateNode
                                                            .containerInfo
                                                    );
                                                break;
                                            case 5:
                                            case 6:
                                            case 4:
                                            case 17:
                                                break;
                                            default:
                                                throw Error(o(163));
                                        }
                                } catch (Te) {
                                    jr(p, p.return, Te);
                                }
                                if (((g = p.sibling), g !== null)) {
                                    (g.return = p.return), (St = g);
                                    break;
                                }
                                St = p.return;
                            }
                    return (M = vm), (vm = !1), M;
                }
                function xa(p, g, M) {
                    var C = g.updateQueue;
                    if (((C = C !== null ? C.lastEffect : null), C !== null)) {
                        var k = (C = C.next);
                        do {
                            if ((k.tag & p) === p) {
                                var B = k.destroy;
                                (k.destroy = void 0),
                                    B !== void 0 && _a(g, M, B);
                            }
                            k = k.next;
                        } while (k !== C);
                    }
                }
                function _r(p, g) {
                    if (
                        ((g = g.updateQueue),
                        (g = g !== null ? g.lastEffect : null),
                        g !== null)
                    ) {
                        var M = (g = g.next);
                        do {
                            if ((M.tag & p) === p) {
                                var C = M.create;
                                M.destroy = C();
                            }
                            M = M.next;
                        } while (M !== g);
                    }
                }
                function Wr(p) {
                    var g = p.ref;
                    if (g !== null) {
                        var M = p.stateNode;
                        switch (p.tag) {
                            case 5:
                                p = ee(M);
                                break;
                            default:
                                p = M;
                        }
                        typeof g == 'function' ? g(p) : (g.current = p);
                    }
                }
                function ti(p, g, M) {
                    if (xs && typeof xs.onCommitFiberUnmount == 'function')
                        try {
                            xs.onCommitFiberUnmount(Ja, g);
                        } catch {}
                    switch (g.tag) {
                        case 0:
                        case 11:
                        case 14:
                        case 15:
                            if (
                                ((p = g.updateQueue),
                                p !== null && ((p = p.lastEffect), p !== null))
                            ) {
                                var C = (p = p.next);
                                do {
                                    var k = C,
                                        B = k.destroy;
                                    (k = k.tag),
                                        B !== void 0 &&
                                            ((k & 2) !== 0 || (k & 4) !== 0) &&
                                            _a(g, M, B),
                                        (C = C.next);
                                } while (C !== p);
                            }
                            break;
                        case 1:
                            if (
                                (js(g, M),
                                (p = g.stateNode),
                                typeof p.componentWillUnmount == 'function')
                            )
                                try {
                                    (p.props = g.memoizedProps),
                                        (p.state = g.memoizedState),
                                        p.componentWillUnmount();
                                } catch (ce) {
                                    jr(g, M, ce);
                                }
                            break;
                        case 5:
                            js(g, M);
                            break;
                        case 4:
                            Ke
                                ? Sm(p, g, M)
                                : X &&
                                  X &&
                                  ((g = g.stateNode.containerInfo),
                                  (M = Et(g)),
                                  Mt(g, M));
                    }
                }
                function Xs(p, g, M) {
                    for (var C = g; ; )
                        if (
                            (ti(p, C, M),
                            C.child === null || (Ke && C.tag === 4))
                        ) {
                            if (C === g) break;
                            for (; C.sibling === null; ) {
                                if (C.return === null || C.return === g) return;
                                C = C.return;
                            }
                            (C.sibling.return = C.return), (C = C.sibling);
                        } else (C.child.return = C), (C = C.child);
                }
                function _m(p) {
                    var g = p.alternate;
                    g !== null && ((p.alternate = null), _m(g)),
                        (p.child = null),
                        (p.deletions = null),
                        (p.sibling = null),
                        p.tag === 5 && ((g = p.stateNode), g !== null && st(g)),
                        (p.stateNode = null),
                        (p.return = null),
                        (p.dependencies = null),
                        (p.memoizedProps = null),
                        (p.memoizedState = null),
                        (p.pendingProps = null),
                        (p.stateNode = null),
                        (p.updateQueue = null);
                }
                function xm(p) {
                    return p.tag === 5 || p.tag === 3 || p.tag === 4;
                }
                function ed(p) {
                    e: for (;;) {
                        for (; p.sibling === null; ) {
                            if (p.return === null || xm(p.return)) return null;
                            p = p.return;
                        }
                        for (
                            p.sibling.return = p.return, p = p.sibling;
                            p.tag !== 5 && p.tag !== 6 && p.tag !== 18;

                        ) {
                            if (p.flags & 2 || p.child === null || p.tag === 4)
                                continue e;
                            (p.child.return = p), (p = p.child);
                        }
                        if (!(p.flags & 2)) return p.stateNode;
                    }
                }
                function td(p) {
                    if (Ke) {
                        e: {
                            for (var g = p.return; g !== null; ) {
                                if (xm(g)) break e;
                                g = g.return;
                            }
                            throw Error(o(160));
                        }
                        var M = g;
                        switch (M.tag) {
                            case 5:
                                (g = M.stateNode),
                                    M.flags & 32 && (Dt(g), (M.flags &= -33)),
                                    (M = ed(p)),
                                    Wu(p, M, g);
                                break;
                            case 3:
                            case 4:
                                (g = M.stateNode.containerInfo),
                                    (M = ed(p)),
                                    nd(p, M, g);
                                break;
                            default:
                                throw Error(o(161));
                        }
                    }
                }
                function nd(p, g, M) {
                    var C = p.tag;
                    if (C === 5 || C === 6)
                        (p = p.stateNode), g ? et(M, p, g) : at(M, p);
                    else if (C !== 4 && ((p = p.child), p !== null))
                        for (nd(p, g, M), p = p.sibling; p !== null; )
                            nd(p, g, M), (p = p.sibling);
                }
                function Wu(p, g, M) {
                    var C = p.tag;
                    if (C === 5 || C === 6)
                        (p = p.stateNode), g ? pt(M, p, g) : Ze(M, p);
                    else if (C !== 4 && ((p = p.child), p !== null))
                        for (Wu(p, g, M), p = p.sibling; p !== null; )
                            Wu(p, g, M), (p = p.sibling);
                }
                function Sm(p, g, M) {
                    for (var C = g, k = !1, B, ce; ; ) {
                        if (!k) {
                            k = C.return;
                            e: for (;;) {
                                if (k === null) throw Error(o(160));
                                switch (((B = k.stateNode), k.tag)) {
                                    case 5:
                                        ce = !1;
                                        break e;
                                    case 3:
                                        (B = B.containerInfo), (ce = !0);
                                        break e;
                                    case 4:
                                        (B = B.containerInfo), (ce = !0);
                                        break e;
                                }
                                k = k.return;
                            }
                            k = !0;
                        }
                        if (C.tag === 5 || C.tag === 6)
                            Xs(p, C, M),
                                ce ? Ct(B, C.stateNode) : lt(B, C.stateNode);
                        else if (C.tag === 18)
                            ce ? ue(B, C.stateNode) : pe(B, C.stateNode);
                        else if (C.tag === 4) {
                            if (C.child !== null) {
                                (B = C.stateNode.containerInfo),
                                    (ce = !0),
                                    (C.child.return = C),
                                    (C = C.child);
                                continue;
                            }
                        } else if ((ti(p, C, M), C.child !== null)) {
                            (C.child.return = C), (C = C.child);
                            continue;
                        }
                        if (C === g) break;
                        for (; C.sibling === null; ) {
                            if (C.return === null || C.return === g) return;
                            (C = C.return), C.tag === 4 && (k = !1);
                        }
                        (C.sibling.return = C.return), (C = C.sibling);
                    }
                }
                function ul(p, g) {
                    if (Ke) {
                        switch (g.tag) {
                            case 0:
                            case 11:
                            case 14:
                            case 15:
                                xa(3, g, g.return),
                                    _r(3, g),
                                    xa(5, g, g.return);
                                return;
                            case 1:
                                return;
                            case 5:
                                var M = g.stateNode;
                                if (M != null) {
                                    var C = g.memoizedProps;
                                    p = p !== null ? p.memoizedProps : C;
                                    var k = g.type,
                                        B = g.updateQueue;
                                    (g.updateQueue = null),
                                        B !== null && kt(M, B, k, p, C, g);
                                }
                                return;
                            case 6:
                                if (g.stateNode === null) throw Error(o(162));
                                (M = g.memoizedProps),
                                    Ye(
                                        g.stateNode,
                                        p !== null ? p.memoizedProps : M,
                                        M
                                    );
                                return;
                            case 3:
                                He &&
                                    p !== null &&
                                    p.memoizedState.isDehydrated &&
                                    ie(g.stateNode.containerInfo);
                                return;
                            case 12:
                                return;
                            case 13:
                                ju(g);
                                return;
                            case 19:
                                ju(g);
                                return;
                            case 17:
                                return;
                        }
                        throw Error(o(163));
                    }
                    switch (g.tag) {
                        case 0:
                        case 11:
                        case 14:
                        case 15:
                            xa(3, g, g.return), _r(3, g), xa(5, g, g.return);
                            return;
                        case 12:
                            return;
                        case 13:
                            ju(g);
                            return;
                        case 19:
                            ju(g);
                            return;
                        case 3:
                            He &&
                                p !== null &&
                                p.memoizedState.isDehydrated &&
                                ie(g.stateNode.containerInfo);
                            break;
                        case 22:
                        case 23:
                            return;
                    }
                    e: if (X) {
                        switch (g.tag) {
                            case 1:
                            case 5:
                            case 6:
                                break e;
                            case 3:
                            case 4:
                                (g = g.stateNode),
                                    Mt(g.containerInfo, g.pendingChildren);
                                break e;
                        }
                        throw Error(o(163));
                    }
                }
                function ju(p) {
                    var g = p.updateQueue;
                    if (g !== null) {
                        p.updateQueue = null;
                        var M = p.stateNode;
                        M === null && (M = p.stateNode = new Kl()),
                            g.forEach(function (C) {
                                var k = Tv.bind(null, p, C);
                                M.has(C) || (M.add(C), C.then(k, k));
                            });
                    }
                }
                function w1(p, g) {
                    for (St = g; St !== null; ) {
                        g = St;
                        var M = g.deletions;
                        if (M !== null)
                            for (var C = 0; C < M.length; C++) {
                                var k = M[C];
                                try {
                                    var B = p;
                                    Ke ? Sm(B, k, g) : Xs(B, k, g);
                                    var ce = k.alternate;
                                    ce !== null && (ce.return = null),
                                        (k.return = null);
                                } catch (Vt) {
                                    jr(k, g, Vt);
                                }
                            }
                        if (
                            ((M = g.child),
                            (g.subtreeFlags & 12854) !== 0 && M !== null)
                        )
                            (M.return = g), (St = M);
                        else
                            for (; St !== null; ) {
                                g = St;
                                try {
                                    var Te = g.flags;
                                    if (
                                        (Te & 32 && Ke && Dt(g.stateNode),
                                        Te & 512)
                                    ) {
                                        var $e = g.alternate;
                                        if ($e !== null) {
                                            var vt = $e.ref;
                                            vt !== null &&
                                                (typeof vt == 'function'
                                                    ? vt(null)
                                                    : (vt.current = null));
                                        }
                                    }
                                    if (Te & 8192)
                                        switch (g.tag) {
                                            case 13:
                                                if (g.memoizedState !== null) {
                                                    var Ot = g.alternate;
                                                    (Ot === null ||
                                                        Ot.memoizedState ===
                                                            null) &&
                                                        (cf = oi());
                                                }
                                                break;
                                            case 22:
                                                var ln =
                                                        g.memoizedState !==
                                                        null,
                                                    Yt = g.alternate,
                                                    mn =
                                                        Yt !== null &&
                                                        Yt.memoizedState !==
                                                            null;
                                                if (((M = g), Ke)) {
                                                    e: if (
                                                        ((C = M),
                                                        (k = ln),
                                                        (B = null),
                                                        Ke)
                                                    )
                                                        for (var Rt = C; ; ) {
                                                            if (Rt.tag === 5) {
                                                                if (
                                                                    B === null
                                                                ) {
                                                                    B = Rt;
                                                                    var wr =
                                                                        Rt.stateNode;
                                                                    k
                                                                        ? _e(wr)
                                                                        : ve(
                                                                              Rt.stateNode,
                                                                              Rt.memoizedProps
                                                                          );
                                                                }
                                                            } else if (
                                                                Rt.tag === 6
                                                            ) {
                                                                if (
                                                                    B === null
                                                                ) {
                                                                    var Rs =
                                                                        Rt.stateNode;
                                                                    k
                                                                        ? nt(Rs)
                                                                        : Be(
                                                                              Rs,
                                                                              Rt.memoizedProps
                                                                          );
                                                                }
                                                            } else if (
                                                                ((Rt.tag !==
                                                                    22 &&
                                                                    Rt.tag !==
                                                                        23) ||
                                                                    Rt.memoizedState ===
                                                                        null ||
                                                                    Rt === C) &&
                                                                Rt.child !==
                                                                    null
                                                            ) {
                                                                (Rt.child.return =
                                                                    Rt),
                                                                    (Rt =
                                                                        Rt.child);
                                                                continue;
                                                            }
                                                            if (Rt === C) break;
                                                            for (
                                                                ;
                                                                Rt.sibling ===
                                                                null;

                                                            ) {
                                                                if (
                                                                    Rt.return ===
                                                                        null ||
                                                                    Rt.return ===
                                                                        C
                                                                )
                                                                    break e;
                                                                B === Rt &&
                                                                    (B = null),
                                                                    (Rt =
                                                                        Rt.return);
                                                            }
                                                            B === Rt &&
                                                                (B = null),
                                                                (Rt.sibling.return =
                                                                    Rt.return),
                                                                (Rt =
                                                                    Rt.sibling);
                                                        }
                                                }
                                                if (
                                                    ln &&
                                                    !mn &&
                                                    (M.mode & 1) !== 0
                                                ) {
                                                    St = M;
                                                    for (
                                                        var Ne = M.child;
                                                        Ne !== null;

                                                    ) {
                                                        for (
                                                            M = St = Ne;
                                                            St !== null;

                                                        ) {
                                                            C = St;
                                                            var be = C.child;
                                                            switch (C.tag) {
                                                                case 0:
                                                                case 11:
                                                                case 14:
                                                                case 15:
                                                                    xa(
                                                                        4,
                                                                        C,
                                                                        C.return
                                                                    );
                                                                    break;
                                                                case 1:
                                                                    js(
                                                                        C,
                                                                        C.return
                                                                    );
                                                                    var qe =
                                                                        C.stateNode;
                                                                    if (
                                                                        typeof qe.componentWillUnmount ==
                                                                        'function'
                                                                    ) {
                                                                        var At =
                                                                            C.return;
                                                                        try {
                                                                            (qe.props =
                                                                                C.memoizedProps),
                                                                                (qe.state =
                                                                                    C.memoizedState),
                                                                                qe.componentWillUnmount();
                                                                        } catch (Vt) {
                                                                            jr(
                                                                                C,
                                                                                At,
                                                                                Vt
                                                                            );
                                                                        }
                                                                    }
                                                                    break;
                                                                case 5:
                                                                    js(
                                                                        C,
                                                                        C.return
                                                                    );
                                                                    break;
                                                                case 22:
                                                                    if (
                                                                        C.memoizedState !==
                                                                        null
                                                                    ) {
                                                                        Mm(M);
                                                                        continue;
                                                                    }
                                                            }
                                                            be !== null
                                                                ? ((be.return =
                                                                      C),
                                                                  (St = be))
                                                                : Mm(M);
                                                        }
                                                        Ne = Ne.sibling;
                                                    }
                                                }
                                        }
                                    switch (Te & 4102) {
                                        case 2:
                                            td(g), (g.flags &= -3);
                                            break;
                                        case 6:
                                            td(g),
                                                (g.flags &= -3),
                                                ul(g.alternate, g);
                                            break;
                                        case 4096:
                                            g.flags &= -4097;
                                            break;
                                        case 4100:
                                            (g.flags &= -4097),
                                                ul(g.alternate, g);
                                            break;
                                        case 4:
                                            ul(g.alternate, g);
                                    }
                                } catch (Vt) {
                                    jr(g, g.return, Vt);
                                }
                                if (((M = g.sibling), M !== null)) {
                                    (M.return = g.return), (St = M);
                                    break;
                                }
                                St = g.return;
                            }
                    }
                }
                function rf(p, g, M) {
                    (St = p), sf(p);
                }
                function sf(p, g, M) {
                    for (var C = (p.mode & 1) !== 0; St !== null; ) {
                        var k = St,
                            B = k.child;
                        if (k.tag === 22 && C) {
                            var ce = k.memoizedState !== null || Gr;
                            if (!ce) {
                                var Te = k.alternate,
                                    $e =
                                        (Te !== null &&
                                            Te.memoizedState !== null) ||
                                        ur;
                                Te = Gr;
                                var vt = ur;
                                if (((Gr = ce), (ur = $e) && !vt))
                                    for (St = k; St !== null; )
                                        (ce = St),
                                            ($e = ce.child),
                                            ce.tag === 22 &&
                                            ce.memoizedState !== null
                                                ? Zl(k)
                                                : $e !== null
                                                  ? (($e.return = ce),
                                                    (St = $e))
                                                  : Zl(k);
                                for (; B !== null; )
                                    (St = B), sf(B), (B = B.sibling);
                                (St = k), (Gr = Te), (ur = vt);
                            }
                            wm(p);
                        } else
                            (k.subtreeFlags & 8772) !== 0 && B !== null
                                ? ((B.return = k), (St = B))
                                : wm(p);
                    }
                }
                function wm(p) {
                    for (; St !== null; ) {
                        var g = St;
                        if ((g.flags & 8772) !== 0) {
                            var M = g.alternate;
                            try {
                                if ((g.flags & 8772) !== 0)
                                    switch (g.tag) {
                                        case 0:
                                        case 11:
                                        case 15:
                                            ur || _r(5, g);
                                            break;
                                        case 1:
                                            var C = g.stateNode;
                                            if (g.flags & 4 && !ur)
                                                if (M === null)
                                                    C.componentDidMount();
                                                else {
                                                    var k =
                                                        g.elementType === g.type
                                                            ? M.memoizedProps
                                                            : ir(
                                                                  g.type,
                                                                  M.memoizedProps
                                                              );
                                                    C.componentDidUpdate(
                                                        k,
                                                        M.memoizedState,
                                                        C.__reactInternalSnapshotBeforeUpdate
                                                    );
                                                }
                                            var B = g.updateQueue;
                                            B !== null && av(g, B, C);
                                            break;
                                        case 3:
                                            var ce = g.updateQueue;
                                            if (ce !== null) {
                                                if (
                                                    ((M = null),
                                                    g.child !== null)
                                                )
                                                    switch (g.child.tag) {
                                                        case 5:
                                                            M = ee(
                                                                g.child
                                                                    .stateNode
                                                            );
                                                            break;
                                                        case 1:
                                                            M =
                                                                g.child
                                                                    .stateNode;
                                                    }
                                                av(g, ce, M);
                                            }
                                            break;
                                        case 5:
                                            var Te = g.stateNode;
                                            M === null &&
                                                g.flags & 4 &&
                                                ot(
                                                    Te,
                                                    g.type,
                                                    g.memoizedProps,
                                                    g
                                                );
                                            break;
                                        case 6:
                                            break;
                                        case 4:
                                            break;
                                        case 12:
                                            break;
                                        case 13:
                                            if (
                                                He &&
                                                g.memoizedState === null
                                            ) {
                                                var $e = g.alternate;
                                                if ($e !== null) {
                                                    var vt = $e.memoizedState;
                                                    if (vt !== null) {
                                                        var Ot = vt.dehydrated;
                                                        Ot !== null && oe(Ot);
                                                    }
                                                }
                                            }
                                            break;
                                        case 19:
                                        case 17:
                                        case 21:
                                        case 22:
                                        case 23:
                                            break;
                                        default:
                                            throw Error(o(163));
                                    }
                                ur || (g.flags & 512 && Wr(g));
                            } catch (ln) {
                                jr(g, g.return, ln);
                            }
                        }
                        if (g === p) {
                            St = null;
                            break;
                        }
                        if (((M = g.sibling), M !== null)) {
                            (M.return = g.return), (St = M);
                            break;
                        }
                        St = g.return;
                    }
                }
                function Mm(p) {
                    for (; St !== null; ) {
                        var g = St;
                        if (g === p) {
                            St = null;
                            break;
                        }
                        var M = g.sibling;
                        if (M !== null) {
                            (M.return = g.return), (St = M);
                            break;
                        }
                        St = g.return;
                    }
                }
                function Zl(p) {
                    for (; St !== null; ) {
                        var g = St;
                        try {
                            switch (g.tag) {
                                case 0:
                                case 11:
                                case 15:
                                    var M = g.return;
                                    try {
                                        _r(4, g);
                                    } catch ($e) {
                                        jr(g, M, $e);
                                    }
                                    break;
                                case 1:
                                    var C = g.stateNode;
                                    if (
                                        typeof C.componentDidMount == 'function'
                                    ) {
                                        var k = g.return;
                                        try {
                                            C.componentDidMount();
                                        } catch ($e) {
                                            jr(g, k, $e);
                                        }
                                    }
                                    var B = g.return;
                                    try {
                                        Wr(g);
                                    } catch ($e) {
                                        jr(g, B, $e);
                                    }
                                    break;
                                case 5:
                                    var ce = g.return;
                                    try {
                                        Wr(g);
                                    } catch ($e) {
                                        jr(g, ce, $e);
                                    }
                            }
                        } catch ($e) {
                            jr(g, g.return, $e);
                        }
                        if (g === p) {
                            St = null;
                            break;
                        }
                        var Te = g.sibling;
                        if (Te !== null) {
                            (Te.return = g.return), (St = Te);
                            break;
                        }
                        St = g.return;
                    }
                }
                var of = 0,
                    $l = 1,
                    Jl = 2,
                    Sa = 3,
                    Xu = 4;
                if (typeof Symbol == 'function' && Symbol.for) {
                    var Ql = Symbol.for;
                    (of = Ql('selector.component')),
                        ($l = Ql('selector.has_pseudo_class')),
                        (Jl = Ql('selector.role')),
                        (Sa = Ql('selector.test_id')),
                        (Xu = Ql('selector.text'));
                }
                function af(p) {
                    var g = Fe(p);
                    if (g != null) {
                        if (typeof g.memoizedProps['data-testname'] != 'string')
                            throw Error(o(364));
                        return g;
                    }
                    if (((p = V(p)), p === null)) throw Error(o(362));
                    return p.stateNode.current;
                }
                function lf(p, g) {
                    switch (g.$$typeof) {
                        case of:
                            if (p.type === g.value) return !0;
                            break;
                        case $l:
                            e: {
                                (g = g.value), (p = [p, 0]);
                                for (var M = 0; M < p.length; ) {
                                    var C = p[M++],
                                        k = p[M++],
                                        B = g[k];
                                    if (C.tag !== 5 || !Ie(C)) {
                                        for (; B != null && lf(C, B); )
                                            k++, (B = g[k]);
                                        if (k === g.length) {
                                            g = !0;
                                            break e;
                                        } else
                                            for (C = C.child; C !== null; )
                                                p.push(C, k), (C = C.sibling);
                                    }
                                }
                                g = !1;
                            }
                            return g;
                        case Jl:
                            if (p.tag === 5 && Ce(p.stateNode, g.value))
                                return !0;
                            break;
                        case Xu:
                            if (
                                (p.tag === 5 || p.tag === 6) &&
                                ((p = Le(p)),
                                p !== null && 0 <= p.indexOf(g.value))
                            )
                                return !0;
                            break;
                        case Sa:
                            if (
                                p.tag === 5 &&
                                ((p = p.memoizedProps['data-testname']),
                                typeof p == 'string' &&
                                    p.toLowerCase() === g.value.toLowerCase())
                            )
                                return !0;
                            break;
                        default:
                            throw Error(o(365));
                    }
                    return !1;
                }
                function cl(p) {
                    switch (p.$$typeof) {
                        case of:
                            return '<' + (D(p.value) || 'Unknown') + '>';
                        case $l:
                            return ':has(' + (cl(p) || '') + ')';
                        case Jl:
                            return '[role="' + p.value + '"]';
                        case Xu:
                            return '"' + p.value + '"';
                        case Sa:
                            return '[data-testname="' + p.value + '"]';
                        default:
                            throw Error(o(365));
                    }
                }
                function Ts(p, g) {
                    var M = [];
                    p = [p, 0];
                    for (var C = 0; C < p.length; ) {
                        var k = p[C++],
                            B = p[C++],
                            ce = g[B];
                        if (k.tag !== 5 || !Ie(k)) {
                            for (; ce != null && lf(k, ce); ) B++, (ce = g[B]);
                            if (B === g.length) M.push(k);
                            else
                                for (k = k.child; k !== null; )
                                    p.push(k, B), (k = k.sibling);
                        }
                    }
                    return M;
                }
                function wa(p, g) {
                    if (!te) throw Error(o(363));
                    (p = af(p)), (p = Ts(p, g)), (g = []), (p = Array.from(p));
                    for (var M = 0; M < p.length; ) {
                        var C = p[M++];
                        if (C.tag === 5) Ie(C) || g.push(C.stateNode);
                        else
                            for (C = C.child; C !== null; )
                                p.push(C), (C = C.sibling);
                    }
                    return g;
                }
                var Em = Math.ceil,
                    uf = a.ReactCurrentDispatcher,
                    mo = a.ReactCurrentOwner,
                    Hn = a.ReactCurrentBatchConfig,
                    dn = 0,
                    bi = null,
                    Gn = null,
                    li = 0,
                    Ir = 0,
                    eu = Wt(0),
                    Si = 0,
                    Yu = null,
                    Vo = 0,
                    As = 0,
                    tu = 0,
                    Ma = null,
                    Ui = null,
                    cf = 0,
                    fl = 1 / 0;
                function nu() {
                    fl = oi() + 500;
                }
                var qu = !1,
                    ni = null,
                    go = null,
                    Ku = !1,
                    Ho = null,
                    iu = 0,
                    ru = 0,
                    Ea = null,
                    $n = -1,
                    wi = 0;
                function Ln() {
                    return (dn & 6) !== 0 ? oi() : $n !== -1 ? $n : ($n = oi());
                }
                function vo(p) {
                    return (p.mode & 1) === 0
                        ? 1
                        : (dn & 2) !== 0 && li !== 0
                          ? li & -li
                          : tl.transition !== null
                            ? (wi === 0 &&
                                  ((p = ao),
                                  (ao <<= 1),
                                  (ao & 4194240) === 0 && (ao = 64),
                                  (wi = p)),
                              wi)
                            : ((p = sn), p !== 0 ? p : Re());
                }
                function Dr(p, g, M) {
                    if (50 < ru) throw ((ru = 0), (Ea = null), Error(o(185)));
                    var C = hl(p, g);
                    return C === null
                        ? null
                        : (Fs(C, g, M),
                          ((dn & 2) === 0 || C !== bi) &&
                              (C === bi &&
                                  ((dn & 2) === 0 && (As |= g),
                                  Si === 4 && Sr(C, li)),
                              ns(C, M),
                              g === 1 &&
                                  dn === 0 &&
                                  (p.mode & 1) === 0 &&
                                  (nu(), No && Pr())),
                          C);
                }
                function hl(p, g) {
                    p.lanes |= g;
                    var M = p.alternate;
                    for (
                        M !== null && (M.lanes |= g), M = p, p = p.return;
                        p !== null;

                    )
                        (p.childLanes |= g),
                            (M = p.alternate),
                            M !== null && (M.childLanes |= g),
                            (M = p),
                            (p = p.return);
                    return M.tag === 3 ? M.stateNode : null;
                }
                function ns(p, g) {
                    var M = p.callbackNode;
                    Ru(p, g);
                    var C = Za(p, p === bi ? li : 0);
                    if (C === 0)
                        M !== null && ko(M),
                            (p.callbackNode = null),
                            (p.callbackPriority = 0);
                    else if (((g = C & -C), p.callbackPriority !== g)) {
                        if ((M != null && ko(M), g === 1))
                            p.tag === 0
                                ? el(bs.bind(null, p))
                                : Ul(bs.bind(null, p)),
                                De
                                    ? Je(function () {
                                          dn === 0 && Pr();
                                      })
                                    : _s(uo, Pr),
                                (M = null);
                        else {
                            switch (Bs(C)) {
                                case 1:
                                    M = uo;
                                    break;
                                case 4:
                                    M = Ah;
                                    break;
                                case 16:
                                    M = Rr;
                                    break;
                                case 536870912:
                                    M = $a;
                                    break;
                                default:
                                    M = Rr;
                            }
                            M = rd(M, xr.bind(null, p));
                        }
                        (p.callbackPriority = g), (p.callbackNode = M);
                    }
                }
                function xr(p, g) {
                    if ((($n = -1), (wi = 0), (dn & 6) !== 0))
                        throw Error(o(327));
                    var M = p.callbackNode;
                    if (Go() && p.callbackNode !== M) return null;
                    var C = Za(p, p === bi ? li : 0);
                    if (C === 0) return null;
                    if ((C & 30) !== 0 || (C & p.expiredLanes) !== 0 || g)
                        g = pf(p, C);
                    else {
                        g = C;
                        var k = dn;
                        dn |= 2;
                        var B = bm();
                        (bi !== p || li !== g) && (nu(), Ta(p, g));
                        do
                            try {
                                wv();
                                break;
                            } catch (Te) {
                                Am(p, Te);
                            }
                        while (!0);
                        rr(),
                            (uf.current = B),
                            (dn = k),
                            Gn !== null
                                ? (g = 0)
                                : ((bi = null), (li = 0), (g = Si));
                    }
                    if (g !== 0) {
                        if (
                            (g === 2 &&
                                ((k = Uo(p)),
                                k !== 0 && ((C = k), (g = ff(p, k)))),
                            g === 1)
                        )
                            throw (
                                ((M = Yu), Ta(p, 0), Sr(p, C), ns(p, oi()), M)
                            );
                        if (g === 6) Sr(p, C);
                        else {
                            if (
                                ((k = p.current.alternate),
                                (C & 30) === 0 &&
                                    !Tm(k) &&
                                    ((g = pf(p, C)),
                                    g === 2 &&
                                        ((B = Uo(p)),
                                        B !== 0 && ((C = B), (g = ff(p, B)))),
                                    g === 1))
                            )
                                throw (
                                    ((M = Yu),
                                    Ta(p, 0),
                                    Sr(p, C),
                                    ns(p, oi()),
                                    M)
                                );
                            switch (
                                ((p.finishedWork = k), (p.finishedLanes = C), g)
                            ) {
                                case 0:
                                case 1:
                                    throw Error(o(345));
                                case 2:
                                    yo(p, Ui);
                                    break;
                                case 3:
                                    if (
                                        (Sr(p, C),
                                        (C & 130023424) === C &&
                                            ((g = cf + 500 - oi()), 10 < g))
                                    ) {
                                        if (Za(p, 0) !== 0) break;
                                        if (
                                            ((k = p.suspendedLanes),
                                            (k & C) !== C)
                                        ) {
                                            Ln(),
                                                (p.pingedLanes |=
                                                    p.suspendedLanes & k);
                                            break;
                                        }
                                        p.timeoutHandle = ge(
                                            yo.bind(null, p, Ui),
                                            g
                                        );
                                        break;
                                    }
                                    yo(p, Ui);
                                    break;
                                case 4:
                                    if ((Sr(p, C), (C & 4194240) === C)) break;
                                    for (g = p.eventTimes, k = -1; 0 < C; ) {
                                        var ce = 31 - Bn(C);
                                        (B = 1 << ce),
                                            (ce = g[ce]),
                                            ce > k && (k = ce),
                                            (C &= ~B);
                                    }
                                    if (
                                        ((C = k),
                                        (C = oi() - C),
                                        (C =
                                            (120 > C
                                                ? 120
                                                : 480 > C
                                                  ? 480
                                                  : 1080 > C
                                                    ? 1080
                                                    : 1920 > C
                                                      ? 1920
                                                      : 3e3 > C
                                                        ? 3e3
                                                        : 4320 > C
                                                          ? 4320
                                                          : 1960 *
                                                            Em(C / 1960)) - C),
                                        10 < C)
                                    ) {
                                        p.timeoutHandle = ge(
                                            yo.bind(null, p, Ui),
                                            C
                                        );
                                        break;
                                    }
                                    yo(p, Ui);
                                    break;
                                case 5:
                                    yo(p, Ui);
                                    break;
                                default:
                                    throw Error(o(329));
                            }
                        }
                    }
                    return (
                        ns(p, oi()),
                        p.callbackNode === M ? xr.bind(null, p) : null
                    );
                }
                function ff(p, g) {
                    var M = Ma;
                    return (
                        p.current.memoizedState.isDehydrated &&
                            (Ta(p, g).flags |= 256),
                        (p = pf(p, g)),
                        p !== 2 && ((g = Ui), (Ui = M), g !== null && hf(g)),
                        p
                    );
                }
                function hf(p) {
                    Ui === null ? (Ui = p) : Ui.push.apply(Ui, p);
                }
                function Tm(p) {
                    for (var g = p; ; ) {
                        if (g.flags & 16384) {
                            var M = g.updateQueue;
                            if (M !== null && ((M = M.stores), M !== null))
                                for (var C = 0; C < M.length; C++) {
                                    var k = M[C],
                                        B = k.getSnapshot;
                                    k = k.value;
                                    try {
                                        if (!tr(B(), k)) return !1;
                                    } catch {
                                        return !1;
                                    }
                                }
                        }
                        if (
                            ((M = g.child),
                            g.subtreeFlags & 16384 && M !== null)
                        )
                            (M.return = g), (g = M);
                        else {
                            if (g === p) break;
                            for (; g.sibling === null; ) {
                                if (g.return === null || g.return === p)
                                    return !0;
                                g = g.return;
                            }
                            (g.sibling.return = g.return), (g = g.sibling);
                        }
                    }
                    return !0;
                }
                function Sr(p, g) {
                    for (
                        g &= ~tu,
                            g &= ~As,
                            p.suspendedLanes |= g,
                            p.pingedLanes &= ~g,
                            p = p.expirationTimes;
                        0 < g;

                    ) {
                        var M = 31 - Bn(g),
                            C = 1 << M;
                        (p[M] = -1), (g &= ~C);
                    }
                }
                function bs(p) {
                    if ((dn & 6) !== 0) throw Error(o(327));
                    Go();
                    var g = Za(p, 0);
                    if ((g & 1) === 0) return ns(p, oi()), null;
                    var M = pf(p, g);
                    if (p.tag !== 0 && M === 2) {
                        var C = Uo(p);
                        C !== 0 && ((g = C), (M = ff(p, C)));
                    }
                    if (M === 1)
                        throw ((M = Yu), Ta(p, 0), Sr(p, g), ns(p, oi()), M);
                    if (M === 6) throw Error(o(345));
                    return (
                        (p.finishedWork = p.current.alternate),
                        (p.finishedLanes = g),
                        yo(p, Ui),
                        ns(p, oi()),
                        null
                    );
                }
                function Zu(p) {
                    Ho !== null && Ho.tag === 0 && (dn & 6) === 0 && Go();
                    var g = dn;
                    dn |= 1;
                    var M = Hn.transition,
                        C = sn;
                    try {
                        if (((Hn.transition = null), (sn = 1), p)) return p();
                    } finally {
                        (sn = C),
                            (Hn.transition = M),
                            (dn = g),
                            (dn & 6) === 0 && Pr();
                    }
                }
                function df() {
                    (Ir = eu.current), mt(eu);
                }
                function Ta(p, g) {
                    (p.finishedWork = null), (p.finishedLanes = 0);
                    var M = p.timeoutHandle;
                    if (
                        (M !== je && ((p.timeoutHandle = je), Ae(M)),
                        Gn !== null)
                    )
                        for (M = Gn.return; M !== null; ) {
                            var C = M;
                            switch ((em(C), C.tag)) {
                                case 1:
                                    (C = C.type.childContextTypes),
                                        C != null && $t();
                                    break;
                                case 3:
                                    Nu(), mt(jt), mt(Bt), zl();
                                    break;
                                case 5:
                                    im(C);
                                    break;
                                case 4:
                                    Nu();
                                    break;
                                case 13:
                                    mt(gi);
                                    break;
                                case 19:
                                    mt(gi);
                                    break;
                                case 10:
                                    Oi(C.type._context);
                                    break;
                                case 22:
                                case 23:
                                    df();
                            }
                            M = M.return;
                        }
                    if (
                        ((bi = p),
                        (Gn = p = Aa(p.current, null)),
                        (li = Ir = g),
                        (Si = 0),
                        (Yu = null),
                        (tu = As = Vo = 0),
                        (Ui = Ma = null),
                        zr !== null)
                    ) {
                        for (g = 0; g < zr.length; g++)
                            if (
                                ((M = zr[g]), (C = M.interleaved), C !== null)
                            ) {
                                M.interleaved = null;
                                var k = C.next,
                                    B = M.pending;
                                if (B !== null) {
                                    var ce = B.next;
                                    (B.next = k), (C.next = ce);
                                }
                                M.pending = C;
                            }
                        zr = null;
                    }
                    return p;
                }
                function Am(p, g) {
                    do {
                        var M = Gn;
                        try {
                            if ((rr(), (Wc.current = Hu), Nh)) {
                                for (var C = vi.memoizedState; C !== null; ) {
                                    var k = C.queue;
                                    k !== null && (k.pending = null),
                                        (C = C.next);
                                }
                                Nh = !1;
                            }
                            if (
                                ((Vl = 0),
                                (or = sr = vi = null),
                                (Fo = !1),
                                (Hl = 0),
                                (mo.current = null),
                                M === null || M.return === null)
                            ) {
                                (Si = 1), (Yu = g), (Gn = null);
                                break;
                            }
                            e: {
                                var B = p,
                                    ce = M.return,
                                    Te = M,
                                    $e = g;
                                if (
                                    ((g = li),
                                    (Te.flags |= 32768),
                                    $e !== null &&
                                        typeof $e == 'object' &&
                                        typeof $e.then == 'function')
                                ) {
                                    var vt = $e,
                                        Ot = Te,
                                        ln = Ot.tag;
                                    if (
                                        (Ot.mode & 1) === 0 &&
                                        (ln === 0 || ln === 11 || ln === 15)
                                    ) {
                                        var Yt = Ot.alternate;
                                        Yt
                                            ? ((Ot.updateQueue =
                                                  Yt.updateQueue),
                                              (Ot.memoizedState =
                                                  Yt.memoizedState),
                                              (Ot.lanes = Yt.lanes))
                                            : ((Ot.updateQueue = null),
                                              (Ot.memoizedState = null));
                                    }
                                    var mn = dm(ce);
                                    if (mn !== null) {
                                        (mn.flags &= -257),
                                            Wl(mn, ce, Te, B, g),
                                            mn.mode & 1 && ma(B, vt, g),
                                            (g = mn),
                                            ($e = vt);
                                        var Rt = g.updateQueue;
                                        if (Rt === null) {
                                            var wr = new Set();
                                            wr.add($e), (g.updateQueue = wr);
                                        } else Rt.add($e);
                                        break e;
                                    } else {
                                        if ((g & 1) === 0) {
                                            ma(B, vt, g), id();
                                            break e;
                                        }
                                        $e = Error(o(426));
                                    }
                                } else if (ai && Te.mode & 1) {
                                    var Rs = dm(ce);
                                    if (Rs !== null) {
                                        (Rs.flags & 65536) === 0 &&
                                            (Rs.flags |= 256),
                                            Wl(Rs, ce, Te, B, g),
                                            Oh($e);
                                        break e;
                                    }
                                }
                                (B = $e),
                                    Si !== 4 && (Si = 2),
                                    Ma === null ? (Ma = [B]) : Ma.push(B),
                                    ($e = hm($e, Te)),
                                    (Te = ce);
                                do {
                                    switch (Te.tag) {
                                        case 3:
                                            (Te.flags |= 65536),
                                                (g &= -g),
                                                (Te.lanes |= g);
                                            var Ne = _v(Te, $e, g);
                                            Ch(Te, Ne);
                                            break e;
                                        case 1:
                                            B = $e;
                                            var be = Te.type,
                                                qe = Te.stateNode;
                                            if (
                                                (Te.flags & 128) === 0 &&
                                                (typeof be.getDerivedStateFromError ==
                                                    'function' ||
                                                    (qe !== null &&
                                                        typeof qe.componentDidCatch ==
                                                            'function' &&
                                                        (go === null ||
                                                            !go.has(qe))))
                                            ) {
                                                (Te.flags |= 65536),
                                                    (g &= -g),
                                                    (Te.lanes |= g);
                                                var At = Yh(Te, B, g);
                                                Ch(Te, At);
                                                break e;
                                            }
                                    }
                                    Te = Te.return;
                                } while (Te !== null);
                            }
                            Rm(M);
                        } catch (Vt) {
                            (g = Vt),
                                Gn === M && M !== null && (Gn = M = M.return);
                            continue;
                        }
                        break;
                    } while (!0);
                }
                function bm() {
                    var p = uf.current;
                    return (uf.current = Hu), p === null ? Hu : p;
                }
                function id() {
                    (Si === 0 || Si === 3 || Si === 2) && (Si = 4),
                        bi === null ||
                            ((Vo & 268435455) === 0 &&
                                (As & 268435455) === 0) ||
                            Sr(bi, li);
                }
                function pf(p, g) {
                    var M = dn;
                    dn |= 2;
                    var C = bm();
                    (bi === p && li === g) || Ta(p, g);
                    do
                        try {
                            Sv();
                            break;
                        } catch (k) {
                            Am(p, k);
                        }
                    while (!0);
                    if ((rr(), (dn = M), (uf.current = C), Gn !== null))
                        throw Error(o(261));
                    return (bi = null), (li = 0), Si;
                }
                function Sv() {
                    for (; Gn !== null; ) Cm(Gn);
                }
                function wv() {
                    for (; Gn !== null && !zs(); ) Cm(Gn);
                }
                function Cm(p) {
                    var g = Im(p.alternate, p, Ir);
                    (p.memoizedProps = p.pendingProps),
                        g === null ? Rm(p) : (Gn = g),
                        (mo.current = null);
                }
                function Rm(p) {
                    var g = p;
                    do {
                        var M = g.alternate;
                        if (((p = g.return), (g.flags & 32768) === 0)) {
                            if (((M = Zh(M, g, Ir)), M !== null)) {
                                Gn = M;
                                return;
                            }
                        } else {
                            if (((M = Qh(M, g)), M !== null)) {
                                (M.flags &= 32767), (Gn = M);
                                return;
                            }
                            if (p !== null)
                                (p.flags |= 32768),
                                    (p.subtreeFlags = 0),
                                    (p.deletions = null);
                            else {
                                (Si = 6), (Gn = null);
                                return;
                            }
                        }
                        if (((g = g.sibling), g !== null)) {
                            Gn = g;
                            return;
                        }
                        Gn = g = p;
                    } while (g !== null);
                    Si === 0 && (Si = 5);
                }
                function yo(p, g) {
                    var M = sn,
                        C = Hn.transition;
                    try {
                        (Hn.transition = null), (sn = 1), Mv(p, g, M);
                    } finally {
                        (Hn.transition = C), (sn = M);
                    }
                    return null;
                }
                function Mv(p, g, M) {
                    do Go();
                    while (Ho !== null);
                    if ((dn & 6) !== 0) throw Error(o(327));
                    var C = p.finishedWork,
                        k = p.finishedLanes;
                    if (C === null) return null;
                    if (
                        ((p.finishedWork = null),
                        (p.finishedLanes = 0),
                        C === p.current)
                    )
                        throw Error(o(177));
                    (p.callbackNode = null), (p.callbackPriority = 0);
                    var B = C.lanes | C.childLanes;
                    if (
                        (lo(p, B),
                        p === bi && ((Gn = bi = null), (li = 0)),
                        ((C.subtreeFlags & 2064) === 0 &&
                            (C.flags & 2064) === 0) ||
                            Ku ||
                            ((Ku = !0),
                            rd(Rr, function () {
                                return Go(), null;
                            })),
                        (B = (C.flags & 15990) !== 0),
                        (C.subtreeFlags & 15990) !== 0 || B)
                    ) {
                        (B = Hn.transition), (Hn.transition = null);
                        var ce = sn;
                        sn = 1;
                        var Te = dn;
                        (dn |= 4),
                            (mo.current = null),
                            ym(p, C),
                            w1(p, C),
                            J(p.containerInfo),
                            (p.current = C),
                            rf(C),
                            Th(),
                            (dn = Te),
                            (sn = ce),
                            (Hn.transition = B);
                    } else p.current = C;
                    if (
                        (Ku && ((Ku = !1), (Ho = p), (iu = k)),
                        (B = p.pendingLanes),
                        B === 0 && (go = null),
                        sa(C.stateNode),
                        ns(p, oi()),
                        g !== null)
                    )
                        for (M = p.onRecoverableError, C = 0; C < g.length; C++)
                            M(g[C]);
                    if (qu) throw ((qu = !1), (p = ni), (ni = null), p);
                    return (
                        (iu & 1) !== 0 && p.tag !== 0 && Go(),
                        (B = p.pendingLanes),
                        (B & 1) !== 0
                            ? p === Ea
                                ? ru++
                                : ((ru = 0), (Ea = p))
                            : (ru = 0),
                        Pr(),
                        null
                    );
                }
                function Go() {
                    if (Ho !== null) {
                        var p = Bs(iu),
                            g = Hn.transition,
                            M = sn;
                        try {
                            if (
                                ((Hn.transition = null),
                                (sn = 16 > p ? 16 : p),
                                Ho === null)
                            )
                                var C = !1;
                            else {
                                if (
                                    ((p = Ho),
                                    (Ho = null),
                                    (iu = 0),
                                    (dn & 6) !== 0)
                                )
                                    throw Error(o(331));
                                var k = dn;
                                for (dn |= 4, St = p.current; St !== null; ) {
                                    var B = St,
                                        ce = B.child;
                                    if ((St.flags & 16) !== 0) {
                                        var Te = B.deletions;
                                        if (Te !== null) {
                                            for (
                                                var $e = 0;
                                                $e < Te.length;
                                                $e++
                                            ) {
                                                var vt = Te[$e];
                                                for (St = vt; St !== null; ) {
                                                    var Ot = St;
                                                    switch (Ot.tag) {
                                                        case 0:
                                                        case 11:
                                                        case 15:
                                                            xa(8, Ot, B);
                                                    }
                                                    var ln = Ot.child;
                                                    if (ln !== null)
                                                        (ln.return = Ot),
                                                            (St = ln);
                                                    else
                                                        for (; St !== null; ) {
                                                            Ot = St;
                                                            var Yt = Ot.sibling,
                                                                mn = Ot.return;
                                                            if (
                                                                (_m(Ot),
                                                                Ot === vt)
                                                            ) {
                                                                St = null;
                                                                break;
                                                            }
                                                            if (Yt !== null) {
                                                                (Yt.return =
                                                                    mn),
                                                                    (St = Yt);
                                                                break;
                                                            }
                                                            St = mn;
                                                        }
                                                }
                                            }
                                            var Rt = B.alternate;
                                            if (Rt !== null) {
                                                var wr = Rt.child;
                                                if (wr !== null) {
                                                    Rt.child = null;
                                                    do {
                                                        var Rs = wr.sibling;
                                                        (wr.sibling = null),
                                                            (wr = Rs);
                                                    } while (wr !== null);
                                                }
                                            }
                                            St = B;
                                        }
                                    }
                                    if (
                                        (B.subtreeFlags & 2064) !== 0 &&
                                        ce !== null
                                    )
                                        (ce.return = B), (St = ce);
                                    else
                                        e: for (; St !== null; ) {
                                            if (
                                                ((B = St),
                                                (B.flags & 2048) !== 0)
                                            )
                                                switch (B.tag) {
                                                    case 0:
                                                    case 11:
                                                    case 15:
                                                        xa(9, B, B.return);
                                                }
                                            var Ne = B.sibling;
                                            if (Ne !== null) {
                                                (Ne.return = B.return),
                                                    (St = Ne);
                                                break e;
                                            }
                                            St = B.return;
                                        }
                                }
                                var be = p.current;
                                for (St = be; St !== null; ) {
                                    ce = St;
                                    var qe = ce.child;
                                    if (
                                        (ce.subtreeFlags & 2064) !== 0 &&
                                        qe !== null
                                    )
                                        (qe.return = ce), (St = qe);
                                    else
                                        e: for (ce = be; St !== null; ) {
                                            if (
                                                ((Te = St),
                                                (Te.flags & 2048) !== 0)
                                            )
                                                try {
                                                    switch (Te.tag) {
                                                        case 0:
                                                        case 11:
                                                        case 15:
                                                            _r(9, Te);
                                                    }
                                                } catch (Vt) {
                                                    jr(Te, Te.return, Vt);
                                                }
                                            if (Te === ce) {
                                                St = null;
                                                break e;
                                            }
                                            var At = Te.sibling;
                                            if (At !== null) {
                                                (At.return = Te.return),
                                                    (St = At);
                                                break e;
                                            }
                                            St = Te.return;
                                        }
                                }
                                if (
                                    ((dn = k),
                                    Pr(),
                                    xs &&
                                        typeof xs.onPostCommitFiberRoot ==
                                            'function')
                                )
                                    try {
                                        xs.onPostCommitFiberRoot(Ja, p);
                                    } catch {}
                                C = !0;
                            }
                            return C;
                        } finally {
                            (sn = M), (Hn.transition = g);
                        }
                    }
                    return !1;
                }
                function mf(p, g, M) {
                    (g = hm(M, g)),
                        (g = _v(p, g, 1)),
                        nl(p, g),
                        (g = Ln()),
                        (p = hl(p, 1)),
                        p !== null && (Fs(p, 1, g), ns(p, g));
                }
                function jr(p, g, M) {
                    if (p.tag === 3) mf(p, p, M);
                    else
                        for (; g !== null; ) {
                            if (g.tag === 3) {
                                mf(g, p, M);
                                break;
                            } else if (g.tag === 1) {
                                var C = g.stateNode;
                                if (
                                    typeof g.type.getDerivedStateFromError ==
                                        'function' ||
                                    (typeof C.componentDidCatch == 'function' &&
                                        (go === null || !go.has(C)))
                                ) {
                                    (p = hm(M, p)),
                                        (p = Yh(g, p, 1)),
                                        nl(g, p),
                                        (p = Ln()),
                                        (g = hl(g, 1)),
                                        g !== null && (Fs(g, 1, p), ns(g, p));
                                    break;
                                }
                            }
                            g = g.return;
                        }
                }
                function Pm(p, g, M) {
                    var C = p.pingCache;
                    C !== null && C.delete(g),
                        (g = Ln()),
                        (p.pingedLanes |= p.suspendedLanes & M),
                        bi === p &&
                            (li & M) === M &&
                            (Si === 4 ||
                            (Si === 3 &&
                                (li & 130023424) === li &&
                                500 > oi() - cf)
                                ? Ta(p, 0)
                                : (tu |= M)),
                        ns(p, g);
                }
                function Lm(p, g) {
                    g === 0 &&
                        ((p.mode & 1) === 0
                            ? (g = 1)
                            : ((g = Sn),
                              (Sn <<= 1),
                              (Sn & 130023424) === 0 && (Sn = 4194304)));
                    var M = Ln();
                    (p = hl(p, g)), p !== null && (Fs(p, g, M), ns(p, M));
                }
                function Ev(p) {
                    var g = p.memoizedState,
                        M = 0;
                    g !== null && (M = g.retryLane), Lm(p, M);
                }
                function Tv(p, g) {
                    var M = 0;
                    switch (p.tag) {
                        case 13:
                            var C = p.stateNode,
                                k = p.memoizedState;
                            k !== null && (M = k.retryLane);
                            break;
                        case 19:
                            C = p.stateNode;
                            break;
                        default:
                            throw Error(o(314));
                    }
                    C !== null && C.delete(g), Lm(p, M);
                }
                var Im;
                Im = function (p, g, M) {
                    if (p !== null)
                        if (p.memoizedProps !== g.pendingProps || jt.current)
                            lr = !0;
                        else {
                            if ((p.lanes & M) === 0 && (g.flags & 128) === 0)
                                return (lr = !1), Jh(p, g, M);
                            lr = (p.flags & 131072) !== 0;
                        }
                    else
                        (lr = !1),
                            ai &&
                                (g.flags & 1048576) !== 0 &&
                                fv(g, Ih, g.index);
                    switch (((g.lanes = 0), g.tag)) {
                        case 2:
                            var C = g.type;
                            p !== null &&
                                ((p.alternate = null),
                                (g.alternate = null),
                                (g.flags |= 2)),
                                (p = g.pendingProps);
                            var k = yn(g, Bt.current);
                            Ti(g, M), (k = Fu(null, g, C, p, k, M));
                            var B = ol();
                            return (
                                (g.flags |= 1),
                                typeof k == 'object' &&
                                k !== null &&
                                typeof k.render == 'function' &&
                                k.$$typeof === void 0
                                    ? ((g.tag = 1),
                                      (g.memoizedState = null),
                                      (g.updateQueue = null),
                                      Dn(C) ? ((B = !0), nn(g)) : (B = !1),
                                      (g.memoizedState =
                                          k.state !== null && k.state !== void 0
                                              ? k.state
                                              : null),
                                      Pu(g),
                                      (k.updater = Ph),
                                      (g.stateNode = k),
                                      (k._reactInternals = g),
                                      Jp(g, C, p, M),
                                      (g = Lr(null, g, C, !0, B, M)))
                                    : ((g.tag = 0),
                                      ai && B && Qp(g),
                                      xi(null, g, k, M),
                                      (g = g.child)),
                                g
                            );
                        case 16:
                            C = g.elementType;
                            e: {
                                switch (
                                    (p !== null &&
                                        ((p.alternate = null),
                                        (g.alternate = null),
                                        (g.flags |= 2)),
                                    (p = g.pendingProps),
                                    (k = C._init),
                                    (C = k(C._payload)),
                                    (g.type = C),
                                    (k = g.tag = M1(C)),
                                    (p = ir(C, p)),
                                    k)
                                ) {
                                    case 0:
                                        g = ya(null, g, C, p, M);
                                        break e;
                                    case 1:
                                        g = Xl(null, g, C, p, M);
                                        break e;
                                    case 11:
                                        g = Zn(null, g, C, p, M);
                                        break e;
                                    case 14:
                                        g = Yn(null, g, C, ir(C.type, p), M);
                                        break e;
                                }
                                throw Error(o(306, C, ''));
                            }
                            return g;
                        case 0:
                            return (
                                (C = g.type),
                                (k = g.pendingProps),
                                (k = g.elementType === C ? k : ir(C, k)),
                                ya(p, g, C, k, M)
                            );
                        case 1:
                            return (
                                (C = g.type),
                                (k = g.pendingProps),
                                (k = g.elementType === C ? k : ir(C, k)),
                                Xl(p, g, C, k, M)
                            );
                        case 3:
                            e: {
                                if ((Qc(g), p === null)) throw Error(o(387));
                                (C = g.pendingProps),
                                    (B = g.memoizedState),
                                    (k = B.element),
                                    Kp(p, g),
                                    Rh(g, C, null, M);
                                var ce = g.memoizedState;
                                if (((C = ce.element), He && B.isDehydrated))
                                    if (
                                        ((B = {
                                            element: C,
                                            isDehydrated: !1,
                                            cache: ce.cache,
                                            transitions: ce.transitions,
                                        }),
                                        (g.updateQueue.baseState = B),
                                        (g.memoizedState = B),
                                        g.flags & 256)
                                    ) {
                                        (k = Error(o(423))),
                                            (g = mm(p, g, C, M, k));
                                        break e;
                                    } else if (C !== k) {
                                        (k = Error(o(424))),
                                            (g = mm(p, g, C, M, k));
                                        break e;
                                    } else
                                        for (
                                            He &&
                                                ((vr = pi(
                                                    g.stateNode.containerInfo
                                                )),
                                                (Vr = g),
                                                (ai = !0),
                                                (Ws = null),
                                                (Iu = !1)),
                                                M = pv(g, null, C, M),
                                                g.child = M;
                                            M;

                                        )
                                            (M.flags = (M.flags & -3) | 4096),
                                                (M = M.sibling);
                                else {
                                    if ((Du(), C === k)) {
                                        g = ts(p, g, M);
                                        break e;
                                    }
                                    xi(p, g, C, M);
                                }
                                g = g.child;
                            }
                            return g;
                        case 5:
                            return (
                                mv(g),
                                p === null && rl(g),
                                (C = g.type),
                                (k = g.pendingProps),
                                (B = p !== null ? p.memoizedProps : null),
                                (ce = k.children),
                                ae(C, k)
                                    ? (ce = null)
                                    : B !== null && ae(C, B) && (g.flags |= 32),
                                Hr(p, g),
                                xi(p, g, ce, M),
                                g.child
                            );
                        case 6:
                            return p === null && rl(g), null;
                        case 13:
                            return gm(p, g, M);
                        case 4:
                            return (
                                Uh(g, g.stateNode.containerInfo),
                                (C = g.pendingProps),
                                p === null
                                    ? (g.child = da(g, null, C, M))
                                    : xi(p, g, C, M),
                                g.child
                            );
                        case 11:
                            return (
                                (C = g.type),
                                (k = g.pendingProps),
                                (k = g.elementType === C ? k : ir(C, k)),
                                Zn(p, g, C, k, M)
                            );
                        case 7:
                            return xi(p, g, g.pendingProps, M), g.child;
                        case 8:
                            return (
                                xi(p, g, g.pendingProps.children, M), g.child
                            );
                        case 12:
                            return (
                                xi(p, g, g.pendingProps.children, M), g.child
                            );
                        case 10:
                            e: {
                                if (
                                    ((C = g.type._context),
                                    (k = g.pendingProps),
                                    (B = g.memoizedProps),
                                    (ce = k.value),
                                    ua(g, C, ce),
                                    B !== null)
                                )
                                    if (tr(B.value, ce)) {
                                        if (
                                            B.children === k.children &&
                                            !jt.current
                                        ) {
                                            g = ts(p, g, M);
                                            break e;
                                        }
                                    } else
                                        for (
                                            B = g.child,
                                                B !== null && (B.return = g);
                                            B !== null;

                                        ) {
                                            var Te = B.dependencies;
                                            if (Te !== null) {
                                                ce = B.child;
                                                for (
                                                    var $e = Te.firstContext;
                                                    $e !== null;

                                                ) {
                                                    if ($e.context === C) {
                                                        if (B.tag === 1) {
                                                            ($e = ca(
                                                                -1,
                                                                M & -M
                                                            )),
                                                                ($e.tag = 2);
                                                            var vt =
                                                                B.updateQueue;
                                                            if (vt !== null) {
                                                                vt = vt.shared;
                                                                var Ot =
                                                                    vt.pending;
                                                                Ot === null
                                                                    ? ($e.next =
                                                                          $e)
                                                                    : (($e.next =
                                                                          Ot.next),
                                                                      (Ot.next =
                                                                          $e)),
                                                                    (vt.pending =
                                                                        $e);
                                                            }
                                                        }
                                                        (B.lanes |= M),
                                                            ($e = B.alternate),
                                                            $e !== null &&
                                                                ($e.lanes |= M),
                                                            Xi(B.return, M, g),
                                                            (Te.lanes |= M);
                                                        break;
                                                    }
                                                    $e = $e.next;
                                                }
                                            } else if (B.tag === 10)
                                                ce =
                                                    B.type === g.type
                                                        ? null
                                                        : B.child;
                                            else if (B.tag === 18) {
                                                if (
                                                    ((ce = B.return),
                                                    ce === null)
                                                )
                                                    throw Error(o(341));
                                                (ce.lanes |= M),
                                                    (Te = ce.alternate),
                                                    Te !== null &&
                                                        (Te.lanes |= M),
                                                    Xi(ce, M, g),
                                                    (ce = B.sibling);
                                            } else ce = B.child;
                                            if (ce !== null) ce.return = B;
                                            else
                                                for (ce = B; ce !== null; ) {
                                                    if (ce === g) {
                                                        ce = null;
                                                        break;
                                                    }
                                                    if (
                                                        ((B = ce.sibling),
                                                        B !== null)
                                                    ) {
                                                        (B.return = ce.return),
                                                            (ce = B);
                                                        break;
                                                    }
                                                    ce = ce.return;
                                                }
                                            B = ce;
                                        }
                                xi(p, g, k.children, M), (g = g.child);
                            }
                            return g;
                        case 9:
                            return (
                                (k = g.type),
                                (C = g.pendingProps.children),
                                Ti(g, M),
                                (k = mi(k)),
                                (C = C(k)),
                                (g.flags |= 1),
                                xi(p, g, C, M),
                                g.child
                            );
                        case 14:
                            return (
                                (C = g.type),
                                (k = ir(C, g.pendingProps)),
                                (k = ir(C.type, k)),
                                Yn(p, g, C, k, M)
                            );
                        case 15:
                            return va(p, g, g.type, g.pendingProps, M);
                        case 17:
                            return (
                                (C = g.type),
                                (k = g.pendingProps),
                                (k = g.elementType === C ? k : ir(C, k)),
                                p !== null &&
                                    ((p.alternate = null),
                                    (g.alternate = null),
                                    (g.flags |= 2)),
                                (g.tag = 1),
                                Dn(C) ? ((p = !0), nn(g)) : (p = !1),
                                Ti(g, M),
                                uv(g, C, k),
                                Jp(g, C, k, M),
                                Lr(null, g, C, !0, p, M)
                            );
                        case 19:
                            return ql(p, g, M);
                        case 22:
                            return yr(p, g, M);
                    }
                    throw Error(o(156, g.tag));
                };
                function rd(p, g) {
                    return _s(p, g);
                }
                function Av(p, g, M, C) {
                    (this.tag = p),
                        (this.key = M),
                        (this.sibling =
                            this.child =
                            this.return =
                            this.stateNode =
                            this.type =
                            this.elementType =
                                null),
                        (this.index = 0),
                        (this.ref = null),
                        (this.pendingProps = g),
                        (this.dependencies =
                            this.memoizedState =
                            this.updateQueue =
                            this.memoizedProps =
                                null),
                        (this.mode = C),
                        (this.subtreeFlags = this.flags = 0),
                        (this.deletions = null),
                        (this.childLanes = this.lanes = 0),
                        (this.alternate = null);
                }
                function Cs(p, g, M, C) {
                    return new Av(p, g, M, C);
                }
                function sd(p) {
                    return (p = p.prototype), !(!p || !p.isReactComponent);
                }
                function M1(p) {
                    if (typeof p == 'function') return sd(p) ? 1 : 0;
                    if (p != null) {
                        if (((p = p.$$typeof), p === S)) return 11;
                        if (p === A) return 14;
                    }
                    return 2;
                }
                function Aa(p, g) {
                    var M = p.alternate;
                    return (
                        M === null
                            ? ((M = Cs(p.tag, g, p.key, p.mode)),
                              (M.elementType = p.elementType),
                              (M.type = p.type),
                              (M.stateNode = p.stateNode),
                              (M.alternate = p),
                              (p.alternate = M))
                            : ((M.pendingProps = g),
                              (M.type = p.type),
                              (M.flags = 0),
                              (M.subtreeFlags = 0),
                              (M.deletions = null)),
                        (M.flags = p.flags & 14680064),
                        (M.childLanes = p.childLanes),
                        (M.lanes = p.lanes),
                        (M.child = p.child),
                        (M.memoizedProps = p.memoizedProps),
                        (M.memoizedState = p.memoizedState),
                        (M.updateQueue = p.updateQueue),
                        (g = p.dependencies),
                        (M.dependencies =
                            g === null
                                ? null
                                : {
                                      lanes: g.lanes,
                                      firstContext: g.firstContext,
                                  }),
                        (M.sibling = p.sibling),
                        (M.index = p.index),
                        (M.ref = p.ref),
                        M
                    );
                }
                function od(p, g, M, C, k, B) {
                    var ce = 2;
                    if (((C = p), typeof p == 'function')) sd(p) && (ce = 1);
                    else if (typeof p == 'string') ce = 5;
                    else
                        e: switch (p) {
                            case f:
                                return su(M.children, k, B, g);
                            case d:
                                (ce = 8), (k |= 8);
                                break;
                            case m:
                                return (
                                    (p = Cs(12, M, g, k | 2)),
                                    (p.elementType = m),
                                    (p.lanes = B),
                                    p
                                );
                            case w:
                                return (
                                    (p = Cs(13, M, g, k)),
                                    (p.elementType = w),
                                    (p.lanes = B),
                                    p
                                );
                            case x:
                                return (
                                    (p = Cs(19, M, g, k)),
                                    (p.elementType = x),
                                    (p.lanes = B),
                                    p
                                );
                            case b:
                                return gf(M, k, B, g);
                            default:
                                if (typeof p == 'object' && p !== null)
                                    switch (p.$$typeof) {
                                        case v:
                                            ce = 10;
                                            break e;
                                        case _:
                                            ce = 9;
                                            break e;
                                        case S:
                                            ce = 11;
                                            break e;
                                        case A:
                                            ce = 14;
                                            break e;
                                        case T:
                                            (ce = 16), (C = null);
                                            break e;
                                    }
                                throw Error(
                                    o(130, p == null ? p : typeof p, '')
                                );
                        }
                    return (
                        (g = Cs(ce, M, g, k)),
                        (g.elementType = p),
                        (g.type = C),
                        (g.lanes = B),
                        g
                    );
                }
                function su(p, g, M, C) {
                    return (p = Cs(7, p, C, g)), (p.lanes = M), p;
                }
                function gf(p, g, M, C) {
                    return (
                        (p = Cs(22, p, C, g)),
                        (p.elementType = b),
                        (p.lanes = M),
                        (p.stateNode = {}),
                        p
                    );
                }
                function ad(p, g, M) {
                    return (p = Cs(6, p, null, g)), (p.lanes = M), p;
                }
                function ld(p, g, M) {
                    return (
                        (g = Cs(
                            4,
                            p.children !== null ? p.children : [],
                            p.key,
                            g
                        )),
                        (g.lanes = M),
                        (g.stateNode = {
                            containerInfo: p.containerInfo,
                            pendingChildren: null,
                            implementation: p.implementation,
                        }),
                        g
                    );
                }
                function ud(p, g, M, C, k) {
                    (this.tag = g),
                        (this.containerInfo = p),
                        (this.finishedWork =
                            this.pingCache =
                            this.current =
                            this.pendingChildren =
                                null),
                        (this.timeoutHandle = je),
                        (this.callbackNode =
                            this.pendingContext =
                            this.context =
                                null),
                        (this.callbackPriority = 0),
                        (this.eventTimes = Ol(0)),
                        (this.expirationTimes = Ol(-1)),
                        (this.entangledLanes =
                            this.finishedLanes =
                            this.mutableReadLanes =
                            this.expiredLanes =
                            this.pingedLanes =
                            this.suspendedLanes =
                            this.pendingLanes =
                                0),
                        (this.entanglements = Ol(0)),
                        (this.identifierPrefix = C),
                        (this.onRecoverableError = k),
                        He && (this.mutableSourceEagerHydrationData = null);
                }
                function bv(p, g, M, C, k, B, ce, Te, $e) {
                    return (
                        (p = new ud(p, g, M, Te, $e)),
                        g === 1 ? ((g = 1), B === !0 && (g |= 8)) : (g = 0),
                        (B = Cs(3, null, null, g)),
                        (p.current = B),
                        (B.stateNode = p),
                        (B.memoizedState = {
                            element: C,
                            isDehydrated: M,
                            cache: null,
                            transitions: null,
                        }),
                        Pu(B),
                        p
                    );
                }
                function Cv(p) {
                    if (!p) return Lt;
                    p = p._reactInternals;
                    e: {
                        if (I(p) !== p || p.tag !== 1) throw Error(o(170));
                        var g = p;
                        do {
                            switch (g.tag) {
                                case 3:
                                    g = g.stateNode.context;
                                    break e;
                                case 1:
                                    if (Dn(g.type)) {
                                        g =
                                            g.stateNode
                                                .__reactInternalMemoizedMergedChildContext;
                                        break e;
                                    }
                            }
                            g = g.return;
                        } while (g !== null);
                        throw Error(o(171));
                    }
                    if (p.tag === 1) {
                        var M = p.type;
                        if (Dn(M)) return Xn(p, M, g);
                    }
                    return g;
                }
                function Rv(p) {
                    var g = p._reactInternals;
                    if (g === void 0)
                        throw typeof p.render == 'function'
                            ? Error(o(188))
                            : ((p = Object.keys(p).join(',')),
                              Error(o(268, p)));
                    return (p = W(g)), p === null ? null : p.stateNode;
                }
                function Ys(p, g) {
                    if (
                        ((p = p.memoizedState),
                        p !== null && p.dehydrated !== null)
                    ) {
                        var M = p.retryLane;
                        p.retryLane = M !== 0 && M < g ? M : g;
                    }
                }
                function vf(p, g) {
                    Ys(p, g), (p = p.alternate) && Ys(p, g);
                }
                function cd(p) {
                    return (p = W(p)), p === null ? null : p.stateNode;
                }
                function Pv() {
                    return null;
                }
                return (
                    (t.attemptContinuousHydration = function (p) {
                        if (p.tag === 13) {
                            var g = Ln();
                            Dr(p, 134217728, g), vf(p, 134217728);
                        }
                    }),
                    (t.attemptHydrationAtCurrentPriority = function (p) {
                        if (p.tag === 13) {
                            var g = Ln(),
                                M = vo(p);
                            Dr(p, M, g), vf(p, M);
                        }
                    }),
                    (t.attemptSynchronousHydration = function (p) {
                        switch (p.tag) {
                            case 3:
                                var g = p.stateNode;
                                if (g.current.memoizedState.isDehydrated) {
                                    var M = Oo(g.pendingLanes);
                                    M !== 0 &&
                                        (gr(g, M | 1),
                                        ns(g, oi()),
                                        (dn & 6) === 0 && (nu(), Pr()));
                                }
                                break;
                            case 13:
                                var C = Ln();
                                Zu(function () {
                                    return Dr(p, 1, C);
                                }),
                                    vf(p, 1);
                        }
                    }),
                    (t.batchedUpdates = function (p, g) {
                        var M = dn;
                        dn |= 1;
                        try {
                            return p(g);
                        } finally {
                            (dn = M), dn === 0 && (nu(), No && Pr());
                        }
                    }),
                    (t.createComponentSelector = function (p) {
                        return { $$typeof: of, value: p };
                    }),
                    (t.createContainer = function (p, g, M, C, k, B, ce) {
                        return bv(p, g, !1, null, M, C, k, B, ce);
                    }),
                    (t.createHasPseudoClassSelector = function (p) {
                        return { $$typeof: $l, value: p };
                    }),
                    (t.createHydrationContainer = function (
                        p,
                        g,
                        M,
                        C,
                        k,
                        B,
                        ce,
                        Te,
                        $e
                    ) {
                        return (
                            (p = bv(M, C, !0, p, k, B, ce, Te, $e)),
                            (p.context = Cv(null)),
                            (M = p.current),
                            (C = Ln()),
                            (k = vo(M)),
                            (B = ca(C, k)),
                            (B.callback = g ?? null),
                            nl(M, B),
                            (p.current.lanes = k),
                            Fs(p, k, C),
                            ns(p, C),
                            p
                        );
                    }),
                    (t.createPortal = function (p, g, M) {
                        var C =
                            3 < arguments.length && arguments[3] !== void 0
                                ? arguments[3]
                                : null;
                        return {
                            $$typeof: u,
                            key: C == null ? null : '' + C,
                            children: p,
                            containerInfo: g,
                            implementation: M,
                        };
                    }),
                    (t.createRoleSelector = function (p) {
                        return { $$typeof: Jl, value: p };
                    }),
                    (t.createTestNameSelector = function (p) {
                        return { $$typeof: Sa, value: p };
                    }),
                    (t.createTextSelector = function (p) {
                        return { $$typeof: Xu, value: p };
                    }),
                    (t.deferredUpdates = function (p) {
                        var g = sn,
                            M = Hn.transition;
                        try {
                            return (Hn.transition = null), (sn = 16), p();
                        } finally {
                            (sn = g), (Hn.transition = M);
                        }
                    }),
                    (t.discreteUpdates = function (p, g, M, C, k) {
                        var B = sn,
                            ce = Hn.transition;
                        try {
                            return (
                                (Hn.transition = null), (sn = 1), p(g, M, C, k)
                            );
                        } finally {
                            (sn = B), (Hn.transition = ce), dn === 0 && nu();
                        }
                    }),
                    (t.findAllNodes = wa),
                    (t.findBoundingRects = function (p, g) {
                        if (!te) throw Error(o(363));
                        (g = wa(p, g)), (p = []);
                        for (var M = 0; M < g.length; M++) p.push(Me(g[M]));
                        for (g = p.length - 1; 0 < g; g--) {
                            M = p[g];
                            for (
                                var C = M.x,
                                    k = C + M.width,
                                    B = M.y,
                                    ce = B + M.height,
                                    Te = g - 1;
                                0 <= Te;
                                Te--
                            )
                                if (g !== Te) {
                                    var $e = p[Te],
                                        vt = $e.x,
                                        Ot = vt + $e.width,
                                        ln = $e.y,
                                        Yt = ln + $e.height;
                                    if (
                                        C >= vt &&
                                        B >= ln &&
                                        k <= Ot &&
                                        ce <= Yt
                                    ) {
                                        p.splice(g, 1);
                                        break;
                                    } else if (
                                        C !== vt ||
                                        M.width !== $e.width ||
                                        Yt < B ||
                                        ln > ce
                                    ) {
                                        if (
                                            !(
                                                B !== ln ||
                                                M.height !== $e.height ||
                                                Ot < C ||
                                                vt > k
                                            )
                                        ) {
                                            vt > C &&
                                                (($e.width += vt - C),
                                                ($e.x = C)),
                                                Ot < k && ($e.width = k - vt),
                                                p.splice(g, 1);
                                            break;
                                        }
                                    } else {
                                        ln > B &&
                                            (($e.height += ln - B), ($e.y = B)),
                                            Yt < ce && ($e.height = ce - ln),
                                            p.splice(g, 1);
                                        break;
                                    }
                                }
                        }
                        return p;
                    }),
                    (t.findHostInstance = Rv),
                    (t.findHostInstanceWithNoPortals = function (p) {
                        return (
                            (p = H(p)),
                            (p = p !== null ? K(p) : null),
                            p === null ? null : p.stateNode
                        );
                    }),
                    (t.findHostInstanceWithWarning = function (p) {
                        return Rv(p);
                    }),
                    (t.flushControlled = function (p) {
                        var g = dn;
                        dn |= 1;
                        var M = Hn.transition,
                            C = sn;
                        try {
                            (Hn.transition = null), (sn = 1), p();
                        } finally {
                            (sn = C),
                                (Hn.transition = M),
                                (dn = g),
                                dn === 0 && (nu(), Pr());
                        }
                    }),
                    (t.flushPassiveEffects = Go),
                    (t.flushSync = Zu),
                    (t.focusWithin = function (p, g) {
                        if (!te) throw Error(o(363));
                        for (
                            p = af(p), g = Ts(p, g), g = Array.from(g), p = 0;
                            p < g.length;

                        ) {
                            var M = g[p++];
                            if (!Ie(M)) {
                                if (M.tag === 5 && gt(M.stateNode)) return !0;
                                for (M = M.child; M !== null; )
                                    g.push(M), (M = M.sibling);
                            }
                        }
                        return !1;
                    }),
                    (t.getCurrentUpdatePriority = function () {
                        return sn;
                    }),
                    (t.getFindAllNodesFailureDescription = function (p, g) {
                        if (!te) throw Error(o(363));
                        var M = 0,
                            C = [];
                        p = [af(p), 0];
                        for (var k = 0; k < p.length; ) {
                            var B = p[k++],
                                ce = p[k++],
                                Te = g[ce];
                            if (
                                (B.tag !== 5 || !Ie(B)) &&
                                (lf(B, Te) &&
                                    (C.push(cl(Te)), ce++, ce > M && (M = ce)),
                                ce < g.length)
                            )
                                for (B = B.child; B !== null; )
                                    p.push(B, ce), (B = B.sibling);
                        }
                        if (M < g.length) {
                            for (p = []; M < g.length; M++) p.push(cl(g[M]));
                            return (
                                `findAllNodes was able to match part of the selector:
  ` +
                                (C.join(' > ') +
                                    `

No matching component was found for:
  `) +
                                p.join(' > ')
                            );
                        }
                        return null;
                    }),
                    (t.getPublicRootInstance = function (p) {
                        if (((p = p.current), !p.child)) return null;
                        switch (p.child.tag) {
                            case 5:
                                return ee(p.child.stateNode);
                            default:
                                return p.child.stateNode;
                        }
                    }),
                    (t.injectIntoDevTools = function (p) {
                        if (
                            ((p = {
                                bundleType: p.bundleType,
                                version: p.version,
                                rendererPackageName: p.rendererPackageName,
                                rendererConfig: p.rendererConfig,
                                overrideHookState: null,
                                overrideHookStateDeletePath: null,
                                overrideHookStateRenamePath: null,
                                overrideProps: null,
                                overridePropsDeletePath: null,
                                overridePropsRenamePath: null,
                                setErrorHandler: null,
                                setSuspenseHandler: null,
                                scheduleUpdate: null,
                                currentDispatcherRef: a.ReactCurrentDispatcher,
                                findHostInstanceByFiber: cd,
                                findFiberByHostInstance:
                                    p.findFiberByHostInstance || Pv,
                                findHostInstancesForRefresh: null,
                                scheduleRefresh: null,
                                scheduleRoot: null,
                                setRefreshHandler: null,
                                getCurrentFiber: null,
                                reconcilerVersion: '18.0.0-fc46dba67-20220329',
                            }),
                            typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > 'u')
                        )
                            p = !1;
                        else {
                            var g = __REACT_DEVTOOLS_GLOBAL_HOOK__;
                            if (g.isDisabled || !g.supportsFiber) p = !0;
                            else {
                                try {
                                    (Ja = g.inject(p)), (xs = g);
                                } catch {}
                                p = !!g.checkDCE;
                            }
                        }
                        return p;
                    }),
                    (t.isAlreadyRendering = function () {
                        return !1;
                    }),
                    (t.observeVisibleRects = function (p, g, M, C) {
                        if (!te) throw Error(o(363));
                        p = wa(p, g);
                        var k = Xe(p, M, C).disconnect;
                        return {
                            disconnect: function () {
                                k();
                            },
                        };
                    }),
                    (t.registerMutableSourceForHydration = function (p, g) {
                        var M = g._getVersion;
                        (M = M(g._source)),
                            p.mutableSourceEagerHydrationData == null
                                ? (p.mutableSourceEagerHydrationData = [g, M])
                                : p.mutableSourceEagerHydrationData.push(g, M);
                    }),
                    (t.runWithPriority = function (p, g) {
                        var M = sn;
                        try {
                            return (sn = p), g();
                        } finally {
                            sn = M;
                        }
                    }),
                    (t.shouldError = function () {
                        return null;
                    }),
                    (t.shouldSuspend = function () {
                        return !1;
                    }),
                    (t.updateContainer = function (p, g, M, C) {
                        var k = g.current,
                            B = Ln(),
                            ce = vo(k);
                        return (
                            (M = Cv(M)),
                            g.context === null
                                ? (g.context = M)
                                : (g.pendingContext = M),
                            (g = ca(B, ce)),
                            (g.payload = { element: p }),
                            (C = C === void 0 ? null : C),
                            C !== null && (g.callback = C),
                            nl(k, g),
                            (p = Dr(k, ce, B)),
                            p !== null && bh(p, k, ce),
                            ce
                        );
                    }),
                    t
                );
            })),
        cw
    );
}
var TR;
function zY() {
    return TR || ((TR = 1), (aw.exports = BY())), aw.exports;
}
var VY = zY();
const HY = rE(VY);
var AR = EU();
const nA = {},
    iv = (r) => void Object.assign(nA, r);
function GY(r, e) {
    function t(f, { args: d = [], attach: m, ...v }, _) {
        let S = `${f[0].toUpperCase()}${f.slice(1)}`,
            w;
        if (f === 'primitive') {
            if (v.object === void 0)
                throw new Error(
                    "R3F: Primitives without 'object' are invalid!"
                );
            const x = v.object;
            w = Kd(x, { type: f, root: _, attach: m, primitive: !0 });
        } else {
            const x = nA[S];
            if (!x)
                throw new Error(
                    `R3F: ${S} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`
                );
            if (!Array.isArray(d))
                throw new Error('R3F: The args prop must be an array!');
            w = Kd(new x(...d), {
                type: f,
                root: _,
                attach: m,
                memoizedProps: { args: d },
            });
        }
        return (
            w.__r3f.attach === void 0 &&
                (w.isBufferGeometry
                    ? (w.__r3f.attach = 'geometry')
                    : w.isMaterial && (w.__r3f.attach = 'material')),
            S !== 'inject' && dw(w, v),
            w
        );
    }
    function n(f, d) {
        let m = !1;
        if (d) {
            var v, _;
            (v = d.__r3f) != null && v.attach
                ? hw(f, d, d.__r3f.attach)
                : d.isObject3D && f.isObject3D && (f.add(d), (m = !0)),
                m || (_ = f.__r3f) == null || _.objects.push(d),
                d.__r3f || Kd(d, {}),
                (d.__r3f.parent = f),
                zM(d),
                Zd(d);
        }
    }
    function i(f, d, m) {
        let v = !1;
        if (d) {
            var _, S;
            if ((_ = d.__r3f) != null && _.attach) hw(f, d, d.__r3f.attach);
            else if (d.isObject3D && f.isObject3D) {
                (d.parent = f),
                    d.dispatchEvent({ type: 'added' }),
                    f.dispatchEvent({ type: 'childadded', child: d });
                const w = f.children.filter((A) => A !== d),
                    x = w.indexOf(m);
                (f.children = [...w.slice(0, x), d, ...w.slice(x)]), (v = !0);
            }
            v || (S = f.__r3f) == null || S.objects.push(d),
                d.__r3f || Kd(d, {}),
                (d.__r3f.parent = f),
                zM(d),
                Zd(d);
        }
    }
    function s(f, d, m = !1) {
        f && [...f].forEach((v) => o(d, v, m));
    }
    function o(f, d, m) {
        if (d) {
            var v, _, S;
            if (
                (d.__r3f && (d.__r3f.parent = null),
                (v = f.__r3f) != null &&
                    v.objects &&
                    (f.__r3f.objects = f.__r3f.objects.filter((b) => b !== d)),
                (_ = d.__r3f) != null && _.attach)
            )
                LR(f, d, d.__r3f.attach);
            else if (d.isObject3D && f.isObject3D) {
                var w;
                f.remove(d), (w = d.__r3f) != null && w.root && ZY(x_(d), d);
            }
            const A = (S = d.__r3f) == null ? void 0 : S.primitive,
                T = !A && (m === void 0 ? d.dispose !== null : m);
            if (!A) {
                var x;
                s((x = d.__r3f) == null ? void 0 : x.objects, d, T),
                    s(d.children, d, T);
            }
            if ((delete d.__r3f, T && d.dispose && d.type !== 'Scene')) {
                const b = () => {
                    try {
                        d.dispose();
                    } catch {}
                };
                typeof IS_REACT_ACT_ENVIRONMENT > 'u'
                    ? AR.unstable_scheduleCallback(AR.unstable_IdlePriority, b)
                    : b();
            }
            Zd(f);
        }
    }
    function a(f, d, m, v) {
        var _;
        const S = (_ = f.__r3f) == null ? void 0 : _.parent;
        if (!S) return;
        const w = t(d, m, f.__r3f.root);
        if (f.children) {
            for (const x of f.children) x.__r3f && n(w, x);
            f.children = f.children.filter((x) => !x.__r3f);
        }
        f.__r3f.objects.forEach((x) => n(w, x)),
            (f.__r3f.objects = []),
            f.__r3f.autoRemovedBeforeAppend || o(S, f),
            w.parent && (w.__r3f.autoRemovedBeforeAppend = !0),
            n(S, w),
            w.raycast &&
                w.__r3f.eventCount &&
                x_(w).getState().internal.interaction.push(w),
            [v, v.alternate].forEach((x) => {
                x !== null &&
                    ((x.stateNode = w),
                    x.ref &&
                        (typeof x.ref == 'function'
                            ? x.ref(w)
                            : (x.ref.current = w)));
            });
    }
    const l = () => {};
    return {
        reconciler: HY({
            createInstance: t,
            removeChild: o,
            appendChild: n,
            appendInitialChild: n,
            insertBefore: i,
            supportsMutation: !0,
            isPrimaryRenderer: !1,
            supportsPersistence: !1,
            supportsHydration: !1,
            noTimeout: -1,
            appendChildToContainer: (f, d) => {
                if (!d) return;
                const m = f.getState().scene;
                m.__r3f && ((m.__r3f.root = f), n(m, d));
            },
            removeChildFromContainer: (f, d) => {
                d && o(f.getState().scene, d);
            },
            insertInContainerBefore: (f, d, m) => {
                if (!d || !m) return;
                const v = f.getState().scene;
                v.__r3f && i(v, d, m);
            },
            getRootHostContext: () => null,
            getChildHostContext: (f) => f,
            finalizeInitialChildren(f) {
                var d;
                return !!((d = f == null ? void 0 : f.__r3f) != null ? d : {})
                    .handlers;
            },
            prepareUpdate(f, d, m, v) {
                var _;
                if (
                    ((_ = f == null ? void 0 : f.__r3f) != null ? _ : {})
                        .primitive &&
                    v.object &&
                    v.object !== f
                )
                    return [!0];
                {
                    const { args: w = [], children: x, ...A } = v,
                        { args: T = [], children: b, ...P } = m;
                    if (!Array.isArray(w))
                        throw new Error('R3F: the args prop must be an array!');
                    if (w.some((D, O) => D !== T[O])) return [!0];
                    const L = LU(f, A, P, !0);
                    return L.changes.length ? [!1, L] : null;
                }
            },
            commitUpdate(f, [d, m], v, _, S, w) {
                d ? a(f, v, S, w) : dw(f, m);
            },
            commitMount(f, d, m, v) {
                var _;
                const S = (_ = f.__r3f) != null ? _ : {};
                f.raycast &&
                    S.handlers &&
                    S.eventCount &&
                    x_(f).getState().internal.interaction.push(f);
            },
            getPublicInstance: (f) => f,
            prepareForCommit: () => null,
            preparePortalMount: (f) => Kd(f.getState().scene),
            resetAfterCommit: () => {},
            shouldSetTextContent: () => !1,
            clearContainer: () => !1,
            hideInstance(f) {
                var d;
                const { attach: m, parent: v } = (d = f.__r3f) != null ? d : {};
                m && v && LR(v, f, m), f.isObject3D && (f.visible = !1), Zd(f);
            },
            unhideInstance(f, d) {
                var m;
                const { attach: v, parent: _ } = (m = f.__r3f) != null ? m : {};
                v && _ && hw(_, f, v),
                    ((f.isObject3D && d.visible == null) || d.visible) &&
                        (f.visible = !0),
                    Zd(f);
            },
            createTextInstance: l,
            hideTextInstance: l,
            unhideTextInstance: l,
            getCurrentEventPriority: () => (e ? e() : fp.DefaultEventPriority),
            beforeActiveInstanceBlur: () => {},
            afterActiveInstanceBlur: () => {},
            detachDeletedInstance: () => {},
            now:
                typeof performance < 'u' && fi.fun(performance.now)
                    ? performance.now
                    : fi.fun(Date.now)
                      ? Date.now
                      : () => 0,
            scheduleTimeout: fi.fun(setTimeout) ? setTimeout : void 0,
            cancelTimeout: fi.fun(clearTimeout) ? clearTimeout : void 0,
        }),
        applyProps: dw,
    };
}
var bR, CR;
const fw = (r) => 'colorSpace' in r || 'outputColorSpace' in r,
    TU = () => {
        var r;
        return (r = nA.ColorManagement) != null ? r : null;
    },
    AU = (r) => r && r.isOrthographicCamera,
    WY = (r) => r && r.hasOwnProperty('current'),
    rv =
        typeof window < 'u' &&
        (((bR = window.document) != null && bR.createElement) ||
            ((CR = window.navigator) == null ? void 0 : CR.product) ===
                'ReactNative')
            ? Y.useLayoutEffect
            : Y.useEffect;
function bU(r) {
    const e = Y.useRef(r);
    return rv(() => void (e.current = r), [r]), e;
}
function jY({ set: r }) {
    return rv(() => (r(new Promise(() => null)), () => r(!1)), [r]), null;
}
class CU extends Y.Component {
    constructor(...e) {
        super(...e), (this.state = { error: !1 });
    }
    componentDidCatch(e) {
        this.props.set(e);
    }
    render() {
        return this.state.error ? null : this.props.children;
    }
}
CU.getDerivedStateFromError = () => ({ error: !0 });
const RU = '__default',
    RR = new Map(),
    XY = (r) => r && !!r.memoized && !!r.changes;
function PU(r) {
    var e;
    const t =
        typeof window < 'u'
            ? (e = window.devicePixelRatio) != null
                ? e
                : 2
            : 1;
    return Array.isArray(r) ? Math.min(Math.max(r[0], t), r[1]) : r;
}
const ig = (r) => {
    var e;
    return (e = r.__r3f) == null ? void 0 : e.root.getState();
};
function x_(r) {
    let e = r.__r3f.root;
    for (; e.getState().previousRoot; ) e = e.getState().previousRoot;
    return e;
}
const fi = {
    obj: (r) => r === Object(r) && !fi.arr(r) && typeof r != 'function',
    fun: (r) => typeof r == 'function',
    str: (r) => typeof r == 'string',
    num: (r) => typeof r == 'number',
    boo: (r) => typeof r == 'boolean',
    und: (r) => r === void 0,
    arr: (r) => Array.isArray(r),
    equ(
        r,
        e,
        { arrays: t = 'shallow', objects: n = 'reference', strict: i = !0 } = {}
    ) {
        if (typeof r != typeof e || !!r != !!e) return !1;
        if (fi.str(r) || fi.num(r) || fi.boo(r)) return r === e;
        const s = fi.obj(r);
        if (s && n === 'reference') return r === e;
        const o = fi.arr(r);
        if (o && t === 'reference') return r === e;
        if ((o || s) && r === e) return !0;
        let a;
        for (a in r) if (!(a in e)) return !1;
        if (s && t === 'shallow' && n === 'shallow') {
            for (a in i ? e : r)
                if (!fi.equ(r[a], e[a], { strict: i, objects: 'reference' }))
                    return !1;
        } else for (a in i ? e : r) if (r[a] !== e[a]) return !1;
        if (fi.und(a)) {
            if (
                (o && r.length === 0 && e.length === 0) ||
                (s &&
                    Object.keys(r).length === 0 &&
                    Object.keys(e).length === 0)
            )
                return !0;
            if (r !== e) return !1;
        }
        return !0;
    },
};
function YY(r) {
    const e = { nodes: {}, materials: {} };
    return (
        r &&
            r.traverse((t) => {
                t.name && (e.nodes[t.name] = t),
                    t.material &&
                        !e.materials[t.material.name] &&
                        (e.materials[t.material.name] = t.material);
            }),
        e
    );
}
function qY(r) {
    r.dispose && r.type !== 'Scene' && r.dispose();
    for (const e in r) e.dispose == null || e.dispose(), delete r[e];
}
function Kd(r, e) {
    const t = r;
    return (
        (t.__r3f = {
            type: '',
            root: null,
            previousAttach: null,
            memoizedProps: {},
            eventCount: 0,
            handlers: {},
            objects: [],
            parent: null,
            ...e,
        }),
        r
    );
}
function BM(r, e) {
    let t = r;
    if (e.includes('-')) {
        const n = e.split('-'),
            i = n.pop();
        return (t = n.reduce((s, o) => s[o], r)), { target: t, key: i };
    } else return { target: t, key: e };
}
const PR = /-\d+$/;
function hw(r, e, t) {
    if (fi.str(t)) {
        if (PR.test(t)) {
            const s = t.replace(PR, ''),
                { target: o, key: a } = BM(r, s);
            Array.isArray(o[a]) || (o[a] = []);
        }
        const { target: n, key: i } = BM(r, t);
        (e.__r3f.previousAttach = n[i]), (n[i] = e);
    } else e.__r3f.previousAttach = t(r, e);
}
function LR(r, e, t) {
    var n, i;
    if (fi.str(t)) {
        const { target: s, key: o } = BM(r, t),
            a = e.__r3f.previousAttach;
        a === void 0 ? delete s[o] : (s[o] = a);
    } else
        (n = e.__r3f) == null ||
            n.previousAttach == null ||
            n.previousAttach(r, e);
    (i = e.__r3f) == null || delete i.previousAttach;
}
function LU(
    r,
    { children: e, key: t, ref: n, ...i },
    { children: s, key: o, ref: a, ...l } = {},
    u = !1
) {
    const f = r.__r3f,
        d = Object.entries(i),
        m = [];
    if (u) {
        const _ = Object.keys(l);
        for (let S = 0; S < _.length; S++)
            i.hasOwnProperty(_[S]) || d.unshift([_[S], RU + 'remove']);
    }
    d.forEach(([_, S]) => {
        var w;
        if (
            ((w = r.__r3f) != null && w.primitive && _ === 'object') ||
            fi.equ(S, l[_])
        )
            return;
        if (/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(_))
            return m.push([_, S, !0, []]);
        let x = [];
        _.includes('-') && (x = _.split('-')), m.push([_, S, !1, x]);
        for (const A in i) {
            const T = i[A];
            A.startsWith(`${_}-`) && m.push([A, T, !1, A.split('-')]);
        }
    });
    const v = { ...i };
    return (
        f != null &&
            f.memoizedProps &&
            f != null &&
            f.memoizedProps.args &&
            (v.args = f.memoizedProps.args),
        f != null &&
            f.memoizedProps &&
            f != null &&
            f.memoizedProps.attach &&
            (v.attach = f.memoizedProps.attach),
        { memoized: v, changes: m }
    );
}
function dw(r, e) {
    var t;
    const n = r.__r3f,
        i = n == null ? void 0 : n.root,
        s = i == null || i.getState == null ? void 0 : i.getState(),
        { memoized: o, changes: a } = XY(e) ? e : LU(r, e),
        l = n == null ? void 0 : n.eventCount;
    r.__r3f && (r.__r3f.memoizedProps = o);
    for (let m = 0; m < a.length; m++) {
        let [v, _, S, w] = a[m];
        if (fw(r)) {
            const b = 'srgb',
                P = 'srgb-linear';
            v === 'encoding'
                ? ((v = 'colorSpace'), (_ = _ === 3001 ? b : P))
                : v === 'outputEncoding' &&
                  ((v = 'outputColorSpace'), (_ = _ === 3001 ? b : P));
        }
        let x = r,
            A = x[v];
        if (w.length && ((A = w.reduce((T, b) => T[b], r)), !(A && A.set))) {
            const [T, ...b] = w.reverse();
            (x = b.reverse().reduce((P, L) => P[L], r)), (v = T);
        }
        if (_ === RU + 'remove')
            if (x.constructor) {
                let T = RR.get(x.constructor);
                T || ((T = new x.constructor()), RR.set(x.constructor, T)),
                    (_ = T[v]);
            } else _ = 0;
        if (S && n)
            _ ? (n.handlers[v] = _) : delete n.handlers[v],
                (n.eventCount = Object.keys(n.handlers).length);
        else if (A && A.set && (A.copy || A instanceof fh)) {
            if (Array.isArray(_)) A.fromArray ? A.fromArray(_) : A.set(..._);
            else if (
                A.copy &&
                _ &&
                _.constructor &&
                A.constructor === _.constructor
            )
                A.copy(_);
            else if (_ !== void 0) {
                var u;
                const T = (u = A) == null ? void 0 : u.isColor;
                !T && A.setScalar
                    ? A.setScalar(_)
                    : A instanceof fh && _ instanceof fh
                      ? (A.mask = _.mask)
                      : A.set(_),
                    !TU() && s && !s.linear && T && A.convertSRGBToLinear();
            }
        } else {
            var f;
            if (
                ((x[v] = _),
                (f = x[v]) != null &&
                    f.isTexture &&
                    x[v].format === er &&
                    x[v].type === so &&
                    s)
            ) {
                const T = x[v];
                fw(T) && fw(s.gl)
                    ? (T.colorSpace = s.gl.outputColorSpace)
                    : (T.encoding = s.gl.outputEncoding);
            }
        }
        Zd(r);
    }
    if (n && n.parent && r.raycast && l !== n.eventCount) {
        const m = x_(r).getState().internal,
            v = m.interaction.indexOf(r);
        v > -1 && m.interaction.splice(v, 1),
            n.eventCount && m.interaction.push(r);
    }
    return (
        !(a.length === 1 && a[0][0] === 'onUpdate') &&
            a.length &&
            (t = r.__r3f) != null &&
            t.parent &&
            zM(r),
        r
    );
}
function Zd(r) {
    var e, t;
    const n =
        (e = r.__r3f) == null || (t = e.root) == null || t.getState == null
            ? void 0
            : t.getState();
    n && n.internal.frames === 0 && n.invalidate();
}
function zM(r) {
    r.onUpdate == null || r.onUpdate(r);
}
function IU(r, e) {
    r.manual ||
        (AU(r)
            ? ((r.left = e.width / -2),
              (r.right = e.width / 2),
              (r.top = e.height / 2),
              (r.bottom = e.height / -2))
            : (r.aspect = e.width / e.height),
        r.updateProjectionMatrix(),
        r.updateMatrixWorld());
}
function Zy(r) {
    return (r.eventObject || r.object).uuid + '/' + r.index + r.instanceId;
}
function KY() {
    var r;
    const e = (typeof self < 'u' && self) || (typeof window < 'u' && window);
    if (!e) return fp.DefaultEventPriority;
    switch ((r = e.event) == null ? void 0 : r.type) {
        case 'click':
        case 'contextmenu':
        case 'dblclick':
        case 'pointercancel':
        case 'pointerdown':
        case 'pointerup':
            return fp.DiscreteEventPriority;
        case 'pointermove':
        case 'pointerout':
        case 'pointerover':
        case 'pointerenter':
        case 'pointerleave':
        case 'wheel':
            return fp.ContinuousEventPriority;
        default:
            return fp.DefaultEventPriority;
    }
}
function DU(r, e, t, n) {
    const i = t.get(e);
    i &&
        (t.delete(e),
        t.size === 0 && (r.delete(n), i.target.releasePointerCapture(n)));
}
function ZY(r, e) {
    const { internal: t } = r.getState();
    (t.interaction = t.interaction.filter((n) => n !== e)),
        (t.initialHits = t.initialHits.filter((n) => n !== e)),
        t.hovered.forEach((n, i) => {
            (n.eventObject === e || n.object === e) && t.hovered.delete(i);
        }),
        t.capturedMap.forEach((n, i) => {
            DU(t.capturedMap, e, n, i);
        });
}
function $Y(r) {
    function e(l) {
        const { internal: u } = r.getState(),
            f = l.offsetX - u.initialClick[0],
            d = l.offsetY - u.initialClick[1];
        return Math.round(Math.sqrt(f * f + d * d));
    }
    function t(l) {
        return l.filter((u) =>
            ['Move', 'Over', 'Enter', 'Out', 'Leave'].some((f) => {
                var d;
                return (d = u.__r3f) == null
                    ? void 0
                    : d.handlers['onPointer' + f];
            })
        );
    }
    function n(l, u) {
        const f = r.getState(),
            d = new Set(),
            m = [],
            v = u ? u(f.internal.interaction) : f.internal.interaction;
        for (let x = 0; x < v.length; x++) {
            const A = ig(v[x]);
            A && (A.raycaster.camera = void 0);
        }
        f.previousRoot || f.events.compute == null || f.events.compute(l, f);
        function _(x) {
            const A = ig(x);
            if (!A || !A.events.enabled || A.raycaster.camera === null)
                return [];
            if (A.raycaster.camera === void 0) {
                var T;
                A.events.compute == null ||
                    A.events.compute(
                        l,
                        A,
                        (T = A.previousRoot) == null ? void 0 : T.getState()
                    ),
                    A.raycaster.camera === void 0 &&
                        (A.raycaster.camera = null);
            }
            return A.raycaster.camera ? A.raycaster.intersectObject(x, !0) : [];
        }
        let S = v
            .flatMap(_)
            .sort((x, A) => {
                const T = ig(x.object),
                    b = ig(A.object);
                return !T || !b
                    ? x.distance - A.distance
                    : b.events.priority - T.events.priority ||
                          x.distance - A.distance;
            })
            .filter((x) => {
                const A = Zy(x);
                return d.has(A) ? !1 : (d.add(A), !0);
            });
        f.events.filter && (S = f.events.filter(S, f));
        for (const x of S) {
            let A = x.object;
            for (; A; ) {
                var w;
                (w = A.__r3f) != null &&
                    w.eventCount &&
                    m.push({ ...x, eventObject: A }),
                    (A = A.parent);
            }
        }
        if ('pointerId' in l && f.internal.capturedMap.has(l.pointerId))
            for (let x of f.internal.capturedMap.get(l.pointerId).values())
                d.has(Zy(x.intersection)) || m.push(x.intersection);
        return m;
    }
    function i(l, u, f, d) {
        const m = r.getState();
        if (l.length) {
            const v = { stopped: !1 };
            for (const _ of l) {
                const S = ig(_.object) || m,
                    { raycaster: w, pointer: x, camera: A, internal: T } = S,
                    b = new re(x.x, x.y, 0).unproject(A),
                    P = (U) => {
                        var H, W;
                        return (H =
                            (W = T.capturedMap.get(U)) == null
                                ? void 0
                                : W.has(_.eventObject)) != null
                            ? H
                            : !1;
                    },
                    L = (U) => {
                        const H = { intersection: _, target: u.target };
                        T.capturedMap.has(U)
                            ? T.capturedMap.get(U).set(_.eventObject, H)
                            : T.capturedMap.set(
                                  U,
                                  new Map([[_.eventObject, H]])
                              ),
                            u.target.setPointerCapture(U);
                    },
                    D = (U) => {
                        const H = T.capturedMap.get(U);
                        H && DU(T.capturedMap, _.eventObject, H, U);
                    };
                let O = {};
                for (let U in u) {
                    let H = u[U];
                    typeof H != 'function' && (O[U] = H);
                }
                let I = {
                    ..._,
                    ...O,
                    pointer: x,
                    intersections: l,
                    stopped: v.stopped,
                    delta: f,
                    unprojectedPoint: b,
                    ray: w.ray,
                    camera: A,
                    stopPropagation() {
                        const U =
                            'pointerId' in u && T.capturedMap.get(u.pointerId);
                        if (
                            (!U || U.has(_.eventObject)) &&
                            ((I.stopped = v.stopped = !0),
                            T.hovered.size &&
                                Array.from(T.hovered.values()).find(
                                    (H) => H.eventObject === _.eventObject
                                ))
                        ) {
                            const H = l.slice(0, l.indexOf(_));
                            s([...H, _]);
                        }
                    },
                    target: {
                        hasPointerCapture: P,
                        setPointerCapture: L,
                        releasePointerCapture: D,
                    },
                    currentTarget: {
                        hasPointerCapture: P,
                        setPointerCapture: L,
                        releasePointerCapture: D,
                    },
                    nativeEvent: u,
                };
                if ((d(I), v.stopped === !0)) break;
            }
        }
        return l;
    }
    function s(l) {
        const { internal: u } = r.getState();
        for (const f of u.hovered.values())
            if (
                !l.length ||
                !l.find(
                    (d) =>
                        d.object === f.object &&
                        d.index === f.index &&
                        d.instanceId === f.instanceId
                )
            ) {
                const m = f.eventObject.__r3f,
                    v = m == null ? void 0 : m.handlers;
                if ((u.hovered.delete(Zy(f)), m != null && m.eventCount)) {
                    const _ = { ...f, intersections: l };
                    v.onPointerOut == null || v.onPointerOut(_),
                        v.onPointerLeave == null || v.onPointerLeave(_);
                }
            }
    }
    function o(l, u) {
        for (let f = 0; f < u.length; f++) {
            const d = u[f].__r3f;
            d == null ||
                d.handlers.onPointerMissed == null ||
                d.handlers.onPointerMissed(l);
        }
    }
    function a(l) {
        switch (l) {
            case 'onPointerLeave':
            case 'onPointerCancel':
                return () => s([]);
            case 'onLostPointerCapture':
                return (u) => {
                    const { internal: f } = r.getState();
                    'pointerId' in u &&
                        f.capturedMap.has(u.pointerId) &&
                        requestAnimationFrame(() => {
                            f.capturedMap.has(u.pointerId) &&
                                (f.capturedMap.delete(u.pointerId), s([]));
                        });
                };
        }
        return function (f) {
            const { onPointerMissed: d, internal: m } = r.getState();
            m.lastEvent.current = f;
            const v = l === 'onPointerMove',
                _ =
                    l === 'onClick' ||
                    l === 'onContextMenu' ||
                    l === 'onDoubleClick',
                w = n(f, v ? t : void 0),
                x = _ ? e(f) : 0;
            l === 'onPointerDown' &&
                ((m.initialClick = [f.offsetX, f.offsetY]),
                (m.initialHits = w.map((T) => T.eventObject))),
                _ && !w.length && x <= 2 && (o(f, m.interaction), d && d(f)),
                v && s(w);
            function A(T) {
                const b = T.eventObject,
                    P = b.__r3f,
                    L = P == null ? void 0 : P.handlers;
                if (P != null && P.eventCount)
                    if (v) {
                        if (
                            L.onPointerOver ||
                            L.onPointerEnter ||
                            L.onPointerOut ||
                            L.onPointerLeave
                        ) {
                            const D = Zy(T),
                                O = m.hovered.get(D);
                            O
                                ? O.stopped && T.stopPropagation()
                                : (m.hovered.set(D, T),
                                  L.onPointerOver == null || L.onPointerOver(T),
                                  L.onPointerEnter == null ||
                                      L.onPointerEnter(T));
                        }
                        L.onPointerMove == null || L.onPointerMove(T);
                    } else {
                        const D = L[l];
                        D
                            ? (!_ || m.initialHits.includes(b)) &&
                              (o(
                                  f,
                                  m.interaction.filter(
                                      (O) => !m.initialHits.includes(O)
                                  )
                              ),
                              D(T))
                            : _ &&
                              m.initialHits.includes(b) &&
                              o(
                                  f,
                                  m.interaction.filter(
                                      (O) => !m.initialHits.includes(O)
                                  )
                              );
                    }
            }
            i(w, f, x, A);
        };
    }
    return { handlePointer: a };
}
const JY = [
        'set',
        'get',
        'setSize',
        'setFrameloop',
        'setDpr',
        'events',
        'invalidate',
        'advance',
        'size',
        'viewport',
    ],
    OU = (r) => !!(r != null && r.render),
    iA = Y.createContext(null),
    QY = (r, e) => {
        const t = xU((a, l) => {
                const u = new re(),
                    f = new re(),
                    d = new re();
                function m(x = l().camera, A = f, T = l().size) {
                    const { width: b, height: P, top: L, left: D } = T,
                        O = b / P;
                    A.isVector3 ? d.copy(A) : d.set(...A);
                    const I = x.getWorldPosition(u).distanceTo(d);
                    if (AU(x))
                        return {
                            width: b / x.zoom,
                            height: P / x.zoom,
                            top: L,
                            left: D,
                            factor: 1,
                            distance: I,
                            aspect: O,
                        };
                    {
                        const U = (x.fov * Math.PI) / 180,
                            H = 2 * Math.tan(U / 2) * I,
                            W = H * (b / P);
                        return {
                            width: W,
                            height: H,
                            top: L,
                            left: D,
                            factor: b / W,
                            distance: I,
                            aspect: O,
                        };
                    }
                }
                let v;
                const _ = (x) =>
                        a((A) => ({
                            performance: { ...A.performance, current: x },
                        })),
                    S = new tt();
                return {
                    set: a,
                    get: l,
                    gl: null,
                    camera: null,
                    raycaster: null,
                    events: { priority: 1, enabled: !0, connected: !1 },
                    xr: null,
                    scene: null,
                    invalidate: (x = 1) => r(l(), x),
                    advance: (x, A) => e(x, A, l()),
                    legacy: !1,
                    linear: !1,
                    flat: !1,
                    controls: null,
                    clock: new $T(),
                    pointer: S,
                    mouse: S,
                    frameloop: 'always',
                    onPointerMissed: void 0,
                    performance: {
                        current: 1,
                        min: 0.5,
                        max: 1,
                        debounce: 200,
                        regress: () => {
                            const x = l();
                            v && clearTimeout(v),
                                x.performance.current !== x.performance.min &&
                                    _(x.performance.min),
                                (v = setTimeout(
                                    () => _(l().performance.max),
                                    x.performance.debounce
                                ));
                        },
                    },
                    size: {
                        width: 0,
                        height: 0,
                        top: 0,
                        left: 0,
                        updateStyle: !1,
                    },
                    viewport: {
                        initialDpr: 0,
                        dpr: 0,
                        width: 0,
                        height: 0,
                        top: 0,
                        left: 0,
                        aspect: 0,
                        distance: 0,
                        factor: 0,
                        getCurrentViewport: m,
                    },
                    setEvents: (x) =>
                        a((A) => ({ ...A, events: { ...A.events, ...x } })),
                    setSize: (x, A, T, b, P) => {
                        const L = l().camera,
                            D = {
                                width: x,
                                height: A,
                                top: b || 0,
                                left: P || 0,
                                updateStyle: T,
                            };
                        a((O) => ({
                            size: D,
                            viewport: { ...O.viewport, ...m(L, f, D) },
                        }));
                    },
                    setDpr: (x) =>
                        a((A) => {
                            const T = PU(x);
                            return {
                                viewport: {
                                    ...A.viewport,
                                    dpr: T,
                                    initialDpr: A.viewport.initialDpr || T,
                                },
                            };
                        }),
                    setFrameloop: (x = 'always') => {
                        const A = l().clock;
                        A.stop(),
                            (A.elapsedTime = 0),
                            x !== 'never' && (A.start(), (A.elapsedTime = 0)),
                            a(() => ({ frameloop: x }));
                    },
                    previousRoot: void 0,
                    internal: {
                        active: !1,
                        priority: 0,
                        frames: 0,
                        lastEvent: Y.createRef(),
                        interaction: [],
                        hovered: new Map(),
                        subscribers: [],
                        initialClick: [0, 0],
                        initialHits: [],
                        capturedMap: new Map(),
                        subscribe: (x, A, T) => {
                            const b = l().internal;
                            return (
                                (b.priority = b.priority + (A > 0 ? 1 : 0)),
                                b.subscribers.push({
                                    ref: x,
                                    priority: A,
                                    store: T,
                                }),
                                (b.subscribers = b.subscribers.sort(
                                    (P, L) => P.priority - L.priority
                                )),
                                () => {
                                    const P = l().internal;
                                    P != null &&
                                        P.subscribers &&
                                        ((P.priority =
                                            P.priority - (A > 0 ? 1 : 0)),
                                        (P.subscribers = P.subscribers.filter(
                                            (L) => L.ref !== x
                                        )));
                                }
                            );
                        },
                    },
                };
            }),
            n = t.getState();
        let i = n.size,
            s = n.viewport.dpr,
            o = n.camera;
        return (
            t.subscribe(() => {
                const {
                    camera: a,
                    size: l,
                    viewport: u,
                    gl: f,
                    set: d,
                } = t.getState();
                if (
                    l.width !== i.width ||
                    l.height !== i.height ||
                    u.dpr !== s
                ) {
                    var m;
                    (i = l), (s = u.dpr), IU(a, l), f.setPixelRatio(u.dpr);
                    const v =
                        (m = l.updateStyle) != null
                            ? m
                            : typeof HTMLCanvasElement < 'u' &&
                              f.domElement instanceof HTMLCanvasElement;
                    f.setSize(l.width, l.height, v);
                }
                a !== o &&
                    ((o = a),
                    d((v) => ({
                        viewport: {
                            ...v.viewport,
                            ...v.viewport.getCurrentViewport(a),
                        },
                    })));
            }),
            t.subscribe((a) => r(a)),
            t
        );
    };
function UU(r, e) {
    const t = { callback: r };
    return e.add(t), () => void e.delete(t);
}
let $y,
    kU = new Set(),
    NU = new Set(),
    eq = new Set();
const tq = (r) => UU(r, kU),
    nq = (r) => UU(r, NU);
function pw(r, e) {
    if (r.size) for (const { callback: t } of r.values()) t(e);
}
function rg(r, e) {
    switch (r) {
        case 'before':
            return pw(kU, e);
        case 'after':
            return pw(NU, e);
        case 'tail':
            return pw(eq, e);
    }
}
let mw, gw;
function vw(r, e, t) {
    let n = e.clock.getDelta();
    for (
        e.frameloop === 'never' &&
            typeof r == 'number' &&
            ((n = r - e.clock.elapsedTime),
            (e.clock.oldTime = e.clock.elapsedTime),
            (e.clock.elapsedTime = r)),
            mw = e.internal.subscribers,
            $y = 0;
        $y < mw.length;
        $y++
    )
        (gw = mw[$y]), gw.ref.current(gw.store.getState(), n, t);
    return (
        !e.internal.priority && e.gl.render && e.gl.render(e.scene, e.camera),
        (e.internal.frames = Math.max(0, e.internal.frames - 1)),
        e.frameloop === 'always' ? 1 : e.internal.frames
    );
}
function iq(r) {
    let e = !1,
        t = !1,
        n,
        i,
        s;
    function o(u) {
        (i = requestAnimationFrame(o)),
            (e = !0),
            (n = 0),
            rg('before', u),
            (t = !0);
        for (const d of r.values()) {
            var f;
            (s = d.store.getState()),
                s.internal.active &&
                    (s.frameloop === 'always' || s.internal.frames > 0) &&
                    !((f = s.gl.xr) != null && f.isPresenting) &&
                    (n += vw(u, s));
        }
        if (((t = !1), rg('after', u), n === 0))
            return rg('tail', u), (e = !1), cancelAnimationFrame(i);
    }
    function a(u, f = 1) {
        var d;
        if (!u) return r.forEach((m) => a(m.store.getState(), f));
        ((d = u.gl.xr) != null && d.isPresenting) ||
            !u.internal.active ||
            u.frameloop === 'never' ||
            (f > 1
                ? (u.internal.frames = Math.min(60, u.internal.frames + f))
                : t
                  ? (u.internal.frames = 2)
                  : (u.internal.frames = 1),
            e || ((e = !0), requestAnimationFrame(o)));
    }
    function l(u, f = !0, d, m) {
        if ((f && rg('before', u), d)) vw(u, d, m);
        else for (const v of r.values()) vw(u, v.store.getState());
        f && rg('after', u);
    }
    return { loop: o, invalidate: a, advance: l };
}
function rA() {
    const r = Y.useContext(iA);
    if (!r)
        throw new Error(
            'R3F: Hooks can only be used within the Canvas component!'
        );
    return r;
}
function zi(r = (t) => t, e) {
    return rA()(r, e);
}
function Yp(r, e = 0) {
    const t = rA(),
        n = t.getState().internal.subscribe,
        i = bU(r);
    return rv(() => n(i, e, t), [e, n, t]), null;
}
const IR = new WeakMap();
function FU(r, e) {
    return function (t, ...n) {
        let i = IR.get(t);
        return (
            i || ((i = new t()), IR.set(t, i)),
            r && r(i),
            Promise.all(
                n.map(
                    (s) =>
                        new Promise((o, a) =>
                            i.load(
                                s,
                                (l) => {
                                    l.scene && Object.assign(l, YY(l.scene)),
                                        o(l);
                                },
                                e,
                                (l) =>
                                    a(
                                        new Error(
                                            `Could not load ${s}: ${l == null ? void 0 : l.message}`
                                        )
                                    )
                            )
                        )
                )
            )
        );
    };
}
function Il(r, e, t, n) {
    const i = Array.isArray(e) ? e : [e],
        s = MU(FU(t, n), [r, ...i], { equal: fi.equ });
    return Array.isArray(e) ? s : s[0];
}
Il.preload = function (r, e, t) {
    const n = Array.isArray(e) ? e : [e];
    return kY(FU(t), [r, ...n]);
};
Il.clear = function (r, e) {
    const t = Array.isArray(e) ? e : [e];
    return NY([r, ...t]);
};
const Dp = new Map(),
    { invalidate: DR, advance: OR } = iq(Dp),
    { reconciler: I0, applyProps: vc } = GY(Dp, KY),
    Nd = { objects: 'shallow', strict: !1 },
    rq = (r, e) => {
        const t = typeof r == 'function' ? r(e) : r;
        return OU(t)
            ? t
            : new DT({
                  powerPreference: 'high-performance',
                  canvas: e,
                  antialias: !0,
                  alpha: !0,
                  ...r,
              });
    };
function sq(r, e) {
    const t = typeof HTMLCanvasElement < 'u' && r instanceof HTMLCanvasElement;
    if (e) {
        const { width: n, height: i, top: s, left: o, updateStyle: a = t } = e;
        return { width: n, height: i, top: s, left: o, updateStyle: a };
    } else if (
        typeof HTMLCanvasElement < 'u' &&
        r instanceof HTMLCanvasElement &&
        r.parentElement
    ) {
        const {
            width: n,
            height: i,
            top: s,
            left: o,
        } = r.parentElement.getBoundingClientRect();
        return { width: n, height: i, top: s, left: o, updateStyle: t };
    } else if (typeof OffscreenCanvas < 'u' && r instanceof OffscreenCanvas)
        return {
            width: r.width,
            height: r.height,
            top: 0,
            left: 0,
            updateStyle: t,
        };
    return { width: 0, height: 0, top: 0, left: 0 };
}
function oq(r) {
    const e = Dp.get(r),
        t = e == null ? void 0 : e.fiber,
        n = e == null ? void 0 : e.store;
    e && console.warn('R3F.createRoot should only be called once!');
    const i = typeof reportError == 'function' ? reportError : console.error,
        s = n || QY(DR, OR),
        o =
            t ||
            I0.createContainer(
                s,
                fp.ConcurrentRoot,
                null,
                !1,
                null,
                '',
                i,
                null
            );
    e || Dp.set(r, { fiber: o, store: s });
    let a,
        l = !1,
        u;
    return {
        configure(f = {}) {
            let {
                    gl: d,
                    size: m,
                    scene: v,
                    events: _,
                    onCreated: S,
                    shadows: w = !1,
                    linear: x = !1,
                    flat: A = !1,
                    legacy: T = !1,
                    orthographic: b = !1,
                    frameloop: P = 'always',
                    dpr: L = [1, 2],
                    performance: D,
                    raycaster: O,
                    camera: I,
                    onPointerMissed: U,
                } = f,
                H = s.getState(),
                W = H.gl;
            H.gl || H.set({ gl: (W = rq(d, r)) });
            let q = H.raycaster;
            q || H.set({ raycaster: (q = new d1()) });
            const { params: K, ...le } = O || {};
            if (
                (fi.equ(le, q, Nd) || vc(q, { ...le }),
                fi.equ(K, q.params, Nd) ||
                    vc(q, { params: { ...q.params, ...K } }),
                !H.camera || (H.camera === u && !fi.equ(u, I, Nd)))
            ) {
                u = I;
                const J = I instanceof Y0,
                    F = J
                        ? I
                        : b
                          ? new zc(0, 0, 0, 0, 0.1, 1e3)
                          : new Nr(75, 0, 0.1, 1e3);
                J ||
                    ((F.position.z = 5),
                    I &&
                        (vc(F, I),
                        ('aspect' in I ||
                            'left' in I ||
                            'right' in I ||
                            'bottom' in I ||
                            'top' in I) &&
                            ((F.manual = !0), F.updateProjectionMatrix())),
                    !H.camera &&
                        !(I != null && I.rotation) &&
                        F.lookAt(0, 0, 0)),
                    H.set({ camera: F }),
                    (q.camera = F);
            }
            if (!H.scene) {
                let J;
                v != null && v.isScene
                    ? (J = v)
                    : ((J = new jp()), v && vc(J, v)),
                    H.set({ scene: Kd(J) });
            }
            if (!H.xr) {
                var ee;
                const J = (fe, ne) => {
                        const ae = s.getState();
                        ae.frameloop !== 'never' && OR(fe, !0, ae, ne);
                    },
                    F = () => {
                        const fe = s.getState();
                        (fe.gl.xr.enabled = fe.gl.xr.isPresenting),
                            fe.gl.xr.setAnimationLoop(
                                fe.gl.xr.isPresenting ? J : null
                            ),
                            fe.gl.xr.isPresenting || DR(fe);
                    },
                    $ = {
                        connect() {
                            const fe = s.getState().gl;
                            fe.xr.addEventListener('sessionstart', F),
                                fe.xr.addEventListener('sessionend', F);
                        },
                        disconnect() {
                            const fe = s.getState().gl;
                            fe.xr.removeEventListener('sessionstart', F),
                                fe.xr.removeEventListener('sessionend', F);
                        },
                    };
                typeof ((ee = W.xr) == null ? void 0 : ee.addEventListener) ==
                    'function' && $.connect(),
                    H.set({ xr: $ });
            }
            if (W.shadowMap) {
                const J = W.shadowMap.enabled,
                    F = W.shadowMap.type;
                if (((W.shadowMap.enabled = !!w), fi.boo(w)))
                    W.shadowMap.type = Ug;
                else if (fi.str(w)) {
                    var de;
                    const $ = {
                        basic: xD,
                        percentage: Ix,
                        soft: Ug,
                        variance: Fa,
                    };
                    W.shadowMap.type = (de = $[w]) != null ? de : Ug;
                } else fi.obj(w) && Object.assign(W.shadowMap, w);
                (J !== W.shadowMap.enabled || F !== W.shadowMap.type) &&
                    (W.shadowMap.needsUpdate = !0);
            }
            const Z = TU();
            Z &&
                ('enabled' in Z
                    ? (Z.enabled = !T)
                    : 'legacyMode' in Z && (Z.legacyMode = T)),
                l ||
                    vc(W, {
                        outputEncoding: x ? 3e3 : 3001,
                        toneMapping: A ? bl : dT,
                    }),
                H.legacy !== T && H.set(() => ({ legacy: T })),
                H.linear !== x && H.set(() => ({ linear: x })),
                H.flat !== A && H.set(() => ({ flat: A })),
                d && !fi.fun(d) && !OU(d) && !fi.equ(d, W, Nd) && vc(W, d),
                _ && !H.events.handlers && H.set({ events: _(s) });
            const se = sq(r, m);
            return (
                fi.equ(se, H.size, Nd) ||
                    H.setSize(
                        se.width,
                        se.height,
                        se.updateStyle,
                        se.top,
                        se.left
                    ),
                L && H.viewport.dpr !== PU(L) && H.setDpr(L),
                H.frameloop !== P && H.setFrameloop(P),
                H.onPointerMissed || H.set({ onPointerMissed: U }),
                D &&
                    !fi.equ(D, H.performance, Nd) &&
                    H.set((J) => ({ performance: { ...J.performance, ...D } })),
                (a = S),
                (l = !0),
                this
            );
        },
        render(f) {
            return (
                l || this.configure(),
                I0.updateContainer(
                    we.jsx(aq, {
                        store: s,
                        children: f,
                        onCreated: a,
                        rootElement: r,
                    }),
                    o,
                    null,
                    () => {}
                ),
                s
            );
        },
        unmount() {
            BU(r);
        },
    };
}
function aq({ store: r, children: e, onCreated: t, rootElement: n }) {
    return (
        rv(() => {
            const i = r.getState();
            i.set((s) => ({ internal: { ...s.internal, active: !0 } })),
                t && t(i),
                r.getState().events.connected ||
                    i.events.connect == null ||
                    i.events.connect(n);
        }, []),
        we.jsx(iA.Provider, { value: r, children: e })
    );
}
function BU(r, e) {
    const t = Dp.get(r),
        n = t == null ? void 0 : t.fiber;
    if (n) {
        const i = t == null ? void 0 : t.store.getState();
        i && (i.internal.active = !1),
            I0.updateContainer(null, n, null, () => {
                i &&
                    setTimeout(() => {
                        try {
                            var s, o, a, l;
                            i.events.disconnect == null ||
                                i.events.disconnect(),
                                (s = i.gl) == null ||
                                    (o = s.renderLists) == null ||
                                    o.dispose == null ||
                                    o.dispose(),
                                (a = i.gl) == null ||
                                    a.forceContextLoss == null ||
                                    a.forceContextLoss(),
                                (l = i.gl) != null && l.xr && i.xr.disconnect(),
                                qY(i),
                                Dp.delete(r);
                        } catch {}
                    }, 500);
            });
    }
}
function zU(r, e, t) {
    return we.jsx(lq, { children: r, container: e, state: t }, e.uuid);
}
function lq({ state: r = {}, children: e, container: t }) {
    const { events: n, size: i, ...s } = r,
        o = rA(),
        [a] = Y.useState(() => new d1()),
        [l] = Y.useState(() => new tt()),
        u = Y.useCallback(
            (d, m) => {
                const v = { ...d };
                Object.keys(d).forEach((S) => {
                    (JY.includes(S) || (d[S] !== m[S] && m[S])) && delete v[S];
                });
                let _;
                if (m && i) {
                    const S = m.camera;
                    (_ = d.viewport.getCurrentViewport(S, new re(), i)),
                        S !== d.camera && IU(S, i);
                }
                return {
                    ...v,
                    scene: t,
                    raycaster: a,
                    pointer: l,
                    mouse: l,
                    previousRoot: o,
                    events: {
                        ...d.events,
                        ...(m == null ? void 0 : m.events),
                        ...n,
                    },
                    size: { ...d.size, ...i },
                    viewport: { ...d.viewport, ..._ },
                    ...s,
                };
            },
            [r]
        ),
        [f] = Y.useState(() => {
            const d = o.getState();
            return xU((v, _) => ({
                ...d,
                scene: t,
                raycaster: a,
                pointer: l,
                mouse: l,
                previousRoot: o,
                events: { ...d.events, ...n },
                size: { ...d.size, ...i },
                ...s,
                set: v,
                get: _,
                setEvents: (S) =>
                    v((w) => ({ ...w, events: { ...w.events, ...S } })),
            }));
        });
    return (
        Y.useEffect(() => {
            const d = o.subscribe((m) => f.setState((v) => u(m, v)));
            return () => {
                d();
            };
        }, [u]),
        Y.useEffect(() => {
            f.setState((d) => u(o.getState(), d));
        }, [u]),
        Y.useEffect(
            () => () => {
                f.destroy();
            },
            []
        ),
        we.jsx(we.Fragment, {
            children: I0.createPortal(
                we.jsx(iA.Provider, { value: f, children: e }),
                f,
                null
            ),
        })
    );
}
I0.injectIntoDevTools({
    bundleType: 0,
    rendererPackageName: '@react-three/fiber',
    version: Y.version,
});
const yw = {
    onClick: ['click', !1],
    onContextMenu: ['contextmenu', !1],
    onDoubleClick: ['dblclick', !1],
    onWheel: ['wheel', !0],
    onPointerDown: ['pointerdown', !0],
    onPointerUp: ['pointerup', !0],
    onPointerLeave: ['pointerleave', !0],
    onPointerMove: ['pointermove', !0],
    onPointerCancel: ['pointercancel', !0],
    onLostPointerCapture: ['lostpointercapture', !0],
};
function uq(r) {
    const { handlePointer: e } = $Y(r);
    return {
        priority: 1,
        enabled: !0,
        compute(t, n, i) {
            n.pointer.set(
                (t.offsetX / n.size.width) * 2 - 1,
                -(t.offsetY / n.size.height) * 2 + 1
            ),
                n.raycaster.setFromCamera(n.pointer, n.camera);
        },
        connected: void 0,
        handlers: Object.keys(yw).reduce((t, n) => ({ ...t, [n]: e(n) }), {}),
        update: () => {
            var t;
            const { events: n, internal: i } = r.getState();
            (t = i.lastEvent) != null &&
                t.current &&
                n.handlers &&
                n.handlers.onPointerMove(i.lastEvent.current);
        },
        connect: (t) => {
            var n;
            const { set: i, events: s } = r.getState();
            s.disconnect == null || s.disconnect(),
                i((o) => ({ events: { ...o.events, connected: t } })),
                Object.entries((n = s.handlers) != null ? n : []).forEach(
                    ([o, a]) => {
                        const [l, u] = yw[o];
                        t.addEventListener(l, a, { passive: u });
                    }
                );
        },
        disconnect: () => {
            const { set: t, events: n } = r.getState();
            if (n.connected) {
                var i;
                Object.entries((i = n.handlers) != null ? i : []).forEach(
                    ([s, o]) => {
                        if (n && n.connected instanceof HTMLElement) {
                            const [a] = yw[s];
                            n.connected.removeEventListener(a, o);
                        }
                    }
                ),
                    t((s) => ({ events: { ...s.events, connected: void 0 } }));
            }
        },
    };
}
function UR(r, e) {
    let t;
    return (...n) => {
        window.clearTimeout(t), (t = window.setTimeout(() => r(...n), e));
    };
}
function cq(
    { debounce: r, scroll: e, polyfill: t, offsetSize: n } = {
        debounce: 0,
        scroll: !1,
        offsetSize: !1,
    }
) {
    const i = t || (typeof window > 'u' ? class {} : window.ResizeObserver);
    if (!i)
        throw new Error(
            'This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills'
        );
    const [s, o] = Y.useState({
            left: 0,
            top: 0,
            width: 0,
            height: 0,
            bottom: 0,
            right: 0,
            x: 0,
            y: 0,
        }),
        a = Y.useRef({
            element: null,
            scrollContainers: null,
            resizeObserver: null,
            lastBounds: s,
            orientationHandler: null,
        }),
        l = r ? (typeof r == 'number' ? r : r.scroll) : null,
        u = r ? (typeof r == 'number' ? r : r.resize) : null,
        f = Y.useRef(!1);
    Y.useEffect(() => ((f.current = !0), () => void (f.current = !1)));
    const [d, m, v] = Y.useMemo(() => {
        const x = () => {
            if (!a.current.element) return;
            const {
                    left: A,
                    top: T,
                    width: b,
                    height: P,
                    bottom: L,
                    right: D,
                    x: O,
                    y: I,
                } = a.current.element.getBoundingClientRect(),
                U = {
                    left: A,
                    top: T,
                    width: b,
                    height: P,
                    bottom: L,
                    right: D,
                    x: O,
                    y: I,
                };
            a.current.element instanceof HTMLElement &&
                n &&
                ((U.height = a.current.element.offsetHeight),
                (U.width = a.current.element.offsetWidth)),
                Object.freeze(U),
                f.current &&
                    !pq(a.current.lastBounds, U) &&
                    o((a.current.lastBounds = U));
        };
        return [x, u ? UR(x, u) : x, l ? UR(x, l) : x];
    }, [o, n, l, u]);
    function _() {
        a.current.scrollContainers &&
            (a.current.scrollContainers.forEach((x) =>
                x.removeEventListener('scroll', v, !0)
            ),
            (a.current.scrollContainers = null)),
            a.current.resizeObserver &&
                (a.current.resizeObserver.disconnect(),
                (a.current.resizeObserver = null)),
            a.current.orientationHandler &&
                ('orientation' in screen &&
                'removeEventListener' in screen.orientation
                    ? screen.orientation.removeEventListener(
                          'change',
                          a.current.orientationHandler
                      )
                    : 'onorientationchange' in window &&
                      window.removeEventListener(
                          'orientationchange',
                          a.current.orientationHandler
                      ));
    }
    function S() {
        a.current.element &&
            ((a.current.resizeObserver = new i(v)),
            a.current.resizeObserver.observe(a.current.element),
            e &&
                a.current.scrollContainers &&
                a.current.scrollContainers.forEach((x) =>
                    x.addEventListener('scroll', v, {
                        capture: !0,
                        passive: !0,
                    })
                ),
            (a.current.orientationHandler = () => {
                v();
            }),
            'orientation' in screen && 'addEventListener' in screen.orientation
                ? screen.orientation.addEventListener(
                      'change',
                      a.current.orientationHandler
                  )
                : 'onorientationchange' in window &&
                  window.addEventListener(
                      'orientationchange',
                      a.current.orientationHandler
                  ));
    }
    const w = (x) => {
        !x ||
            x === a.current.element ||
            (_(),
            (a.current.element = x),
            (a.current.scrollContainers = VU(x)),
            S());
    };
    return (
        hq(v, !!e),
        fq(m),
        Y.useEffect(() => {
            _(), S();
        }, [e, v, m]),
        Y.useEffect(() => _, []),
        [w, s, d]
    );
}
function fq(r) {
    Y.useEffect(() => {
        const e = r;
        return (
            window.addEventListener('resize', e),
            () => void window.removeEventListener('resize', e)
        );
    }, [r]);
}
function hq(r, e) {
    Y.useEffect(() => {
        if (e) {
            const t = r;
            return (
                window.addEventListener('scroll', t, {
                    capture: !0,
                    passive: !0,
                }),
                () => void window.removeEventListener('scroll', t, !0)
            );
        }
    }, [r, e]);
}
function VU(r) {
    const e = [];
    if (!r || r === document.body) return e;
    const {
        overflow: t,
        overflowX: n,
        overflowY: i,
    } = window.getComputedStyle(r);
    return (
        [t, n, i].some((s) => s === 'auto' || s === 'scroll') && e.push(r),
        [...e, ...VU(r.parentElement)]
    );
}
const dq = ['x', 'y', 'top', 'bottom', 'left', 'right', 'width', 'height'],
    pq = (r, e) => dq.every((t) => r[t] === e[t]);
var mq = Object.defineProperty,
    gq = Object.defineProperties,
    vq = Object.getOwnPropertyDescriptors,
    kR = Object.getOwnPropertySymbols,
    yq = Object.prototype.hasOwnProperty,
    _q = Object.prototype.propertyIsEnumerable,
    NR = (r, e, t) =>
        e in r
            ? mq(r, e, {
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                  value: t,
              })
            : (r[e] = t),
    FR = (r, e) => {
        for (var t in e || (e = {})) yq.call(e, t) && NR(r, t, e[t]);
        if (kR) for (var t of kR(e)) _q.call(e, t) && NR(r, t, e[t]);
        return r;
    },
    xq = (r, e) => gq(r, vq(e)),
    BR,
    zR;
typeof window < 'u' &&
(((BR = window.document) != null && BR.createElement) ||
    ((zR = window.navigator) == null ? void 0 : zR.product) === 'ReactNative')
    ? Y.useLayoutEffect
    : Y.useEffect;
function HU(r, e, t) {
    if (!r) return;
    if (t(r) === !0) return r;
    let n = r.child;
    for (; n; ) {
        const i = HU(n, e, t);
        if (i) return i;
        n = n.sibling;
    }
}
function GU(r) {
    try {
        return Object.defineProperties(r, {
            _currentRenderer: {
                get() {
                    return null;
                },
                set() {},
            },
            _currentRenderer2: {
                get() {
                    return null;
                },
                set() {},
            },
        });
    } catch {
        return r;
    }
}
const VR = console.error;
console.error = function () {
    const r = [...arguments].join('');
    if (r != null && r.startsWith('Warning:') && r.includes('useContext')) {
        console.error = VR;
        return;
    }
    return VR.apply(this, arguments);
};
const sA = GU(Y.createContext(null));
class WU extends Y.Component {
    render() {
        return Y.createElement(
            sA.Provider,
            { value: this._reactInternals },
            this.props.children
        );
    }
}
function Sq() {
    const r = Y.useContext(sA);
    if (r === null)
        throw new Error(
            'its-fine: useFiber must be called within a <FiberProvider />!'
        );
    const e = Y.useId();
    return Y.useMemo(() => {
        for (const n of [r, r == null ? void 0 : r.alternate]) {
            if (!n) continue;
            const i = HU(n, !1, (s) => {
                let o = s.memoizedState;
                for (; o; ) {
                    if (o.memoizedState === e) return !0;
                    o = o.next;
                }
            });
            if (i) return i;
        }
    }, [r, e]);
}
function wq() {
    const r = Sq(),
        [e] = Y.useState(() => new Map());
    e.clear();
    let t = r;
    for (; t; ) {
        if (t.type && typeof t.type == 'object') {
            const i =
                t.type._context === void 0 && t.type.Provider === t.type
                    ? t.type
                    : t.type._context;
            i && i !== sA && !e.has(i) && e.set(i, Y.useContext(GU(i)));
        }
        t = t.return;
    }
    return e;
}
function Mq() {
    const r = wq();
    return Y.useMemo(
        () =>
            Array.from(r.keys()).reduce(
                (e, t) => (n) =>
                    Y.createElement(
                        e,
                        null,
                        Y.createElement(
                            t.Provider,
                            xq(FR({}, n), { value: r.get(t) })
                        )
                    ),
                (e) => Y.createElement(WU, FR({}, e))
            ),
        [r]
    );
}
const Eq = Y.forwardRef(function (
        {
            children: e,
            fallback: t,
            resize: n,
            style: i,
            gl: s,
            events: o = uq,
            eventSource: a,
            eventPrefix: l,
            shadows: u,
            linear: f,
            flat: d,
            legacy: m,
            orthographic: v,
            frameloop: _,
            dpr: S,
            performance: w,
            raycaster: x,
            camera: A,
            scene: T,
            onPointerMissed: b,
            onCreated: P,
            ...L
        },
        D
    ) {
        Y.useMemo(() => iv(PY), []);
        const O = Mq(),
            [I, U] = cq({
                scroll: !0,
                debounce: { scroll: 50, resize: 0 },
                ...n,
            }),
            H = Y.useRef(null),
            W = Y.useRef(null);
        Y.useImperativeHandle(D, () => H.current);
        const q = bU(b),
            [K, le] = Y.useState(!1),
            [ee, de] = Y.useState(!1);
        if (K) throw K;
        if (ee) throw ee;
        const Z = Y.useRef(null);
        rv(() => {
            const J = H.current;
            U.width > 0 &&
                U.height > 0 &&
                J &&
                (Z.current || (Z.current = oq(J)),
                Z.current.configure({
                    gl: s,
                    events: o,
                    shadows: u,
                    linear: f,
                    flat: d,
                    legacy: m,
                    orthographic: v,
                    frameloop: _,
                    dpr: S,
                    performance: w,
                    raycaster: x,
                    camera: A,
                    scene: T,
                    size: U,
                    onPointerMissed: (...F) =>
                        q.current == null ? void 0 : q.current(...F),
                    onCreated: (F) => {
                        F.events.connect == null ||
                            F.events.connect(
                                a ? (WY(a) ? a.current : a) : W.current
                            ),
                            l &&
                                F.setEvents({
                                    compute: ($, fe) => {
                                        const ne = $[l + 'X'],
                                            ae = $[l + 'Y'];
                                        fe.pointer.set(
                                            (ne / fe.size.width) * 2 - 1,
                                            -(ae / fe.size.height) * 2 + 1
                                        ),
                                            fe.raycaster.setFromCamera(
                                                fe.pointer,
                                                fe.camera
                                            );
                                    },
                                }),
                            P == null || P(F);
                    },
                }),
                Z.current.render(
                    we.jsx(O, {
                        children: we.jsx(CU, {
                            set: de,
                            children: we.jsx(Y.Suspense, {
                                fallback: we.jsx(jY, { set: le }),
                                children: e ?? null,
                            }),
                        }),
                    })
                ));
        }),
            Y.useEffect(() => {
                const J = H.current;
                if (J) return () => BU(J);
            }, []);
        const se = a ? 'none' : 'auto';
        return we.jsx('div', {
            ref: W,
            style: {
                position: 'relative',
                width: '100%',
                height: '100%',
                overflow: 'hidden',
                pointerEvents: se,
                ...i,
            },
            ...L,
            children: we.jsx('div', {
                ref: I,
                style: { width: '100%', height: '100%' },
                children: we.jsx('canvas', {
                    ref: H,
                    style: { display: 'block' },
                    children: t,
                }),
            }),
        });
    }),
    Tq = Y.forwardRef(function (e, t) {
        return we.jsx(WU, { children: we.jsx(Eq, { ...e, ref: t }) });
    });
function Oc() {
    return (
        (Oc = Object.assign
            ? Object.assign.bind()
            : function (r) {
                  for (var e = 1; e < arguments.length; e++) {
                      var t = arguments[e];
                      for (var n in t)
                          ({}).hasOwnProperty.call(t, n) && (r[n] = t[n]);
                  }
                  return r;
              }),
        Oc.apply(null, arguments)
    );
}
function Aq(r, e = 'pointer', t = 'auto', n = document.body) {
    Y.useEffect(() => {
        if (r) return (n.style.cursor = e), () => void (n.style.cursor = t);
    }, [r]);
}
function jg(r, e, t) {
    return (
        e in r
            ? Object.defineProperty(r, e, {
                  value: t,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (r[e] = t),
        r
    );
}
function VM(r, e) {
    (e == null || e > r.length) && (e = r.length);
    for (var t = 0, n = new Array(e); t < e; t++) n[t] = r[t];
    return n;
}
function bq(r, e) {
    if (r) {
        if (typeof r == 'string') return VM(r, e);
        var t = Object.prototype.toString.call(r).slice(8, -1);
        if (
            (t === 'Object' && r.constructor && (t = r.constructor.name),
            t === 'Map' || t === 'Set')
        )
            return Array.from(r);
        if (
            t === 'Arguments' ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)
        )
            return VM(r, e);
    }
}
function Cq(r) {
    if (Array.isArray(r)) return VM(r);
}
function Rq(r) {
    if (
        (typeof Symbol < 'u' && r[Symbol.iterator] != null) ||
        r['@@iterator'] != null
    )
        return Array.from(r);
}
function Pq() {
    throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Lq(r) {
    return Cq(r) || Rq(r) || bq(r) || Pq();
}
new tt();
new tt();
function Iq(r, e, t) {
    return Math.max(e, Math.min(t, r));
}
function Dq(r, e) {
    return Iq(r - Math.floor(r / e) * e, 0, e);
}
function Oq(r, e) {
    var t = Dq(e - r, Math.PI * 2);
    return t > Math.PI && (t -= Math.PI * 2), t;
}
function jU(r, e) {
    if (!(r instanceof e))
        throw new TypeError('Cannot call a class as a function');
}
var qo = function r(e, t, n) {
        var i = this;
        jU(this, r),
            jg(this, 'dot2', function (s, o) {
                return i.x * s + i.y * o;
            }),
            jg(this, 'dot3', function (s, o, a) {
                return i.x * s + i.y * o + i.z * a;
            }),
            (this.x = e),
            (this.y = t),
            (this.z = n);
    },
    Uq = [
        new qo(1, 1, 0),
        new qo(-1, 1, 0),
        new qo(1, -1, 0),
        new qo(-1, -1, 0),
        new qo(1, 0, 1),
        new qo(-1, 0, 1),
        new qo(1, 0, -1),
        new qo(-1, 0, -1),
        new qo(0, 1, 1),
        new qo(0, -1, 1),
        new qo(0, 1, -1),
        new qo(0, -1, -1),
    ],
    HR = [
        151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225,
        140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247,
        120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57,
        177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74,
        165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122,
        60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54,
        65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169,
        200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3,
        64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85,
        212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170,
        213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43,
        172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185,
        112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191,
        179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31,
        181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150,
        254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195,
        78, 66, 215, 61, 156, 180,
    ],
    GR = new Array(512),
    WR = new Array(512),
    kq = function (e) {
        e > 0 && e < 1 && (e *= 65536),
            (e = Math.floor(e)),
            e < 256 && (e |= e << 8);
        for (var t = 0; t < 256; t++) {
            var n;
            t & 1 ? (n = HR[t] ^ (e & 255)) : (n = HR[t] ^ ((e >> 8) & 255)),
                (GR[t] = GR[t + 256] = n),
                (WR[t] = WR[t + 256] = Uq[n % 12]);
        }
    };
kq(0);
function Nq(r) {
    if (typeof r == 'number') r = Math.abs(r);
    else if (typeof r == 'string') {
        var e = r;
        r = 0;
        for (var t = 0; t < e.length; t++)
            r = (r + (t + 1) * (e.charCodeAt(t) % 96)) % 2147483647;
    }
    return r === 0 && (r = 311), r;
}
function jR(r) {
    var e = Nq(r);
    return function () {
        var t = (e * 48271) % 2147483647;
        return (e = t), t / 2147483647;
    };
}
var Fq = function r(e) {
    var t = this;
    jU(this, r),
        jg(this, 'seed', 0),
        jg(this, 'init', function (n) {
            (t.seed = n), (t.value = jR(n));
        }),
        jg(this, 'value', jR(this.seed)),
        this.init(e);
};
new Fq(Math.random());
var Bq = function (e) {
        var t =
                arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : 0.01,
            n =
                arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : 1,
            i =
                arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : 1 / (2 * Math.PI);
        return (
            (n / Math.atan(1 / t)) *
            Math.atan(Math.sin(2 * Math.PI * e * i) / t)
        );
    },
    XU = function (e) {
        return 1 / (1 + e + 0.48 * e * e + 0.235 * e * e * e);
    },
    zq = function (e) {
        return e;
    },
    Vq = {
        in: function (e) {
            return 1 - Math.cos((e * Math.PI) / 2);
        },
        out: function (e) {
            return Math.sin((e * Math.PI) / 2);
        },
        inOut: function (e) {
            return -(Math.cos(Math.PI * e) - 1) / 2;
        },
    },
    Hq = {
        in: function (e) {
            return e * e * e;
        },
        out: function (e) {
            return 1 - Math.pow(1 - e, 3);
        },
        inOut: function (e) {
            return e < 0.5 ? 4 * e * e * e : 1 - Math.pow(-2 * e + 2, 3) / 2;
        },
    },
    Gq = {
        in: function (e) {
            return e * e * e * e * e;
        },
        out: function (e) {
            return 1 - Math.pow(1 - e, 5);
        },
        inOut: function (e) {
            return e < 0.5
                ? 16 * e * e * e * e * e
                : 1 - Math.pow(-2 * e + 2, 5) / 2;
        },
    },
    Wq = {
        in: function (e) {
            return 1 - Math.sqrt(1 - Math.pow(e, 2));
        },
        out: function (e) {
            return Math.sqrt(1 - Math.pow(e - 1, 2));
        },
        inOut: function (e) {
            return e < 0.5
                ? (1 - Math.sqrt(1 - Math.pow(2 * e, 2))) / 2
                : (Math.sqrt(1 - Math.pow(-2 * e + 2, 2)) + 1) / 2;
        },
    },
    jq = {
        in: function (e) {
            return e * e * e * e;
        },
        out: function (e) {
            return 1 - --e * e * e * e;
        },
        inOut: function (e) {
            return e < 0.5 ? 8 * e * e * e * e : 1 - 8 * --e * e * e * e;
        },
    },
    Xq = {
        in: function (e) {
            return e === 0 ? 0 : Math.pow(2, 10 * e - 10);
        },
        out: function (e) {
            return e === 1 ? 1 : 1 - Math.pow(2, -10 * e);
        },
        inOut: function (e) {
            return e === 0
                ? 0
                : e === 1
                  ? 1
                  : e < 0.5
                    ? Math.pow(2, 20 * e - 10) / 2
                    : (2 - Math.pow(2, -20 * e + 10)) / 2;
        },
    };
function Tr(r, e, t) {
    var n =
            arguments.length > 3 && arguments[3] !== void 0
                ? arguments[3]
                : 0.25,
        i =
            arguments.length > 4 && arguments[4] !== void 0
                ? arguments[4]
                : 0.01,
        s =
            arguments.length > 5 && arguments[5] !== void 0
                ? arguments[5]
                : 1 / 0,
        o = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : XU,
        a =
            arguments.length > 7 && arguments[7] !== void 0
                ? arguments[7]
                : 0.001,
        l = 'velocity_' + e;
    if (
        (r.__damp === void 0 && (r.__damp = {}),
        r.__damp[l] === void 0 && (r.__damp[l] = 0),
        Math.abs(r[e] - t) <= a)
    )
        return (r[e] = t), !1;
    n = Math.max(1e-4, n);
    var u = 2 / n,
        f = o(u * i),
        d = r[e] - t,
        m = t,
        v = s * n;
    (d = Math.min(Math.max(d, -v), v)), (t = r[e] - d);
    var _ = (r.__damp[l] + u * d) * i;
    r.__damp[l] = (r.__damp[l] - u * _) * f;
    var S = t + (d + _) * f;
    return (
        m - r[e] > 0 == S > m && ((S = m), (r.__damp[l] = (S - m) / i)),
        (r[e] = S),
        !0
    );
}
var Yq = function (e) {
        return e && e.isCamera;
    },
    qq = function (e) {
        return e && e.isLight;
    },
    sg = new re(),
    XR = new mr(),
    YR = new mr(),
    og = new qt(),
    _w = new re();
function Kq(r, e, t, n, i, s, o) {
    typeof e == 'number'
        ? sg.setScalar(e)
        : Array.isArray(e)
          ? sg.set(e[0], e[1], e[2])
          : sg.copy(e);
    var a = r.parent;
    r.updateWorldMatrix(!0, !1),
        _w.setFromMatrixPosition(r.matrixWorld),
        Yq(r) || qq(r) ? og.lookAt(_w, sg, r.up) : og.lookAt(sg, _w, r.up),
        mx(r.quaternion, YR.setFromRotationMatrix(og), t, n, i, s, o),
        a &&
            (og.extractRotation(a.matrixWorld),
            XR.setFromRotationMatrix(og),
            mx(
                r.quaternion,
                YR.copy(r.quaternion).premultiply(XR.invert()),
                t,
                n,
                i,
                s,
                o
            ));
}
function vp(r, e, t, n, i, s, o, a) {
    return Tr(r, e, r[e] + Oq(r[e], t), n, i, s, o, a);
}
var ag = new tt(),
    qR,
    KR;
function Zq(r, e, t, n, i, s, o) {
    return (
        typeof e == 'number'
            ? ag.setScalar(e)
            : Array.isArray(e)
              ? ag.set(e[0], e[1])
              : ag.copy(e),
        (qR = Tr(r, 'x', ag.x, t, n, i, s, o)),
        (KR = Tr(r, 'y', ag.y, t, n, i, s, o)),
        qR || KR
    );
}
var Fd = new re(),
    ZR,
    $R,
    JR;
function HM(r, e, t, n, i, s, o) {
    return (
        typeof e == 'number'
            ? Fd.setScalar(e)
            : Array.isArray(e)
              ? Fd.set(e[0], e[1], e[2])
              : Fd.copy(e),
        (ZR = Tr(r, 'x', Fd.x, t, n, i, s, o)),
        ($R = Tr(r, 'y', Fd.y, t, n, i, s, o)),
        (JR = Tr(r, 'z', Fd.z, t, n, i, s, o)),
        ZR || $R || JR
    );
}
var Ff = new En(),
    QR,
    eP,
    tP,
    nP;
function $q(r, e, t, n, i, s, o) {
    return (
        typeof e == 'number'
            ? Ff.setScalar(e)
            : Array.isArray(e)
              ? Ff.set(e[0], e[1], e[2], e[3])
              : Ff.copy(e),
        (QR = Tr(r, 'x', Ff.x, t, n, i, s, o)),
        (eP = Tr(r, 'y', Ff.y, t, n, i, s, o)),
        (tP = Tr(r, 'z', Ff.z, t, n, i, s, o)),
        (nP = Tr(r, 'w', Ff.w, t, n, i, s, o)),
        QR || eP || tP || nP
    );
}
var lg = new oo(),
    iP,
    rP,
    sP;
function Jq(r, e, t, n, i, s, o) {
    return (
        Array.isArray(e) ? lg.set(e[0], e[1], e[2], e[3]) : lg.copy(e),
        (iP = vp(r, 'x', lg.x, t, n, i, s, o)),
        (rP = vp(r, 'y', lg.y, t, n, i, s, o)),
        (sP = vp(r, 'z', lg.z, t, n, i, s, o)),
        iP || rP || sP
    );
}
var Bd = new Tt(),
    oP,
    aP,
    lP;
function Qq(r, e, t, n, i, s, o) {
    return (
        e instanceof Tt
            ? Bd.copy(e)
            : Array.isArray(e)
              ? Bd.setRGB(e[0], e[1], e[2])
              : Bd.set(e),
        (oP = Tr(r, 'r', Bd.r, t, n, i, s, o)),
        (aP = Tr(r, 'g', Bd.g, t, n, i, s, o)),
        (lP = Tr(r, 'b', Bd.b, t, n, i, s, o)),
        oP || aP || lP
    );
}
var Oa = new mr(),
    pu = new En(),
    uP = new En(),
    ug = new En(),
    cP,
    fP,
    hP,
    dP;
function mx(r, e, t, n, i, s, o) {
    var a = r;
    Array.isArray(e) ? Oa.set(e[0], e[1], e[2], e[3]) : Oa.copy(e);
    var l = r.dot(Oa) > 0 ? 1 : -1;
    return (
        (Oa.x *= l),
        (Oa.y *= l),
        (Oa.z *= l),
        (Oa.w *= l),
        (cP = Tr(r, 'x', Oa.x, t, n, i, s, o)),
        (fP = Tr(r, 'y', Oa.y, t, n, i, s, o)),
        (hP = Tr(r, 'z', Oa.z, t, n, i, s, o)),
        (dP = Tr(r, 'w', Oa.w, t, n, i, s, o)),
        pu.set(r.x, r.y, r.z, r.w).normalize(),
        uP.set(
            a.__damp.velocity_x,
            a.__damp.velocity_y,
            a.__damp.velocity_z,
            a.__damp.velocity_w
        ),
        ug.copy(pu).multiplyScalar(uP.dot(pu) / pu.dot(pu)),
        (a.__damp.velocity_x -= ug.x),
        (a.__damp.velocity_y -= ug.y),
        (a.__damp.velocity_z -= ug.z),
        (a.__damp.velocity_w -= ug.w),
        r.set(pu.x, pu.y, pu.z, pu.w),
        cP || fP || hP || dP
    );
}
var cg = new tA(),
    pP,
    mP,
    gP;
function eK(r, e, t, n, i, s, o) {
    return (
        Array.isArray(e) ? cg.set(e[0], e[1], e[2]) : cg.copy(e),
        (pP = Tr(r, 'radius', cg.radius, t, n, i, s, o)),
        (mP = vp(r, 'phi', cg.phi, t, n, i, s, o)),
        (gP = vp(r, 'theta', cg.theta, t, n, i, s, o)),
        pP || mP || gP
    );
}
var Jy = new qt(),
    vP = new re(),
    yP = new mr(),
    _P = new re(),
    xP,
    SP,
    wP;
function tK(r, e, t, n, i, s, o) {
    var a = r;
    return (
        a.__damp === void 0 &&
            ((a.__damp = {
                position: new re(),
                rotation: new mr(),
                scale: new re(),
            }),
            r.decompose(a.__damp.position, a.__damp.rotation, a.__damp.scale)),
        Array.isArray(e) ? Jy.set.apply(Jy, Lq(e)) : Jy.copy(e),
        Jy.decompose(vP, yP, _P),
        (xP = HM(a.__damp.position, vP, t, n, i, s, o)),
        (SP = mx(a.__damp.rotation, yP, t, n, i, s, o)),
        (wP = HM(a.__damp.scale, _P, t, n, i, s, o)),
        r.compose(a.__damp.position, a.__damp.rotation, a.__damp.scale),
        xP || SP || wP
    );
}
var nK = Object.freeze({
    __proto__: null,
    rsqw: Bq,
    exp: XU,
    linear: zq,
    sine: Vq,
    cubic: Hq,
    quint: Gq,
    circ: Wq,
    quart: jq,
    expo: Xq,
    damp: Tr,
    dampLookAt: Kq,
    dampAngle: vp,
    damp2: Zq,
    damp3: HM,
    damp4: $q,
    dampE: Jq,
    dampC: Qq,
    dampQ: mx,
    dampS: eK,
    dampM: tK,
});
const YU = parseInt(Vp.replace(/\D+/g, ''));
function iK(r, e = Math.PI / 3) {
    const t = Math.cos(e),
        n = (1 + 1e-10) * 100,
        i = [new re(), new re(), new re()],
        s = new re(),
        o = new re(),
        a = new re(),
        l = new re();
    function u(S) {
        const w = ~~(S.x * n),
            x = ~~(S.y * n),
            A = ~~(S.z * n);
        return `${w},${x},${A}`;
    }
    const f = r.index ? r.toNonIndexed() : r,
        d = f.attributes.position,
        m = {};
    for (let S = 0, w = d.count / 3; S < w; S++) {
        const x = 3 * S,
            A = i[0].fromBufferAttribute(d, x + 0),
            T = i[1].fromBufferAttribute(d, x + 1),
            b = i[2].fromBufferAttribute(d, x + 2);
        s.subVectors(b, T), o.subVectors(A, T);
        const P = new re().crossVectors(s, o).normalize();
        for (let L = 0; L < 3; L++) {
            const D = i[L],
                O = u(D);
            O in m || (m[O] = []), m[O].push(P);
        }
    }
    const v = new Float32Array(d.count * 3),
        _ = new qn(v, 3, !1);
    for (let S = 0, w = d.count / 3; S < w; S++) {
        const x = 3 * S,
            A = i[0].fromBufferAttribute(d, x + 0),
            T = i[1].fromBufferAttribute(d, x + 1),
            b = i[2].fromBufferAttribute(d, x + 2);
        s.subVectors(b, T),
            o.subVectors(A, T),
            a.crossVectors(s, o).normalize();
        for (let P = 0; P < 3; P++) {
            const L = i[P],
                D = u(L),
                O = m[D];
            l.set(0, 0, 0);
            for (let I = 0, U = O.length; I < U; I++) {
                const H = O[I];
                a.dot(H) > t && l.add(H);
            }
            l.normalize(), _.setXYZ(x + P, l.x, l.y, l.z);
        }
    }
    return f.setAttribute('normal', _), f;
}
var Jo = Uint8Array,
    wc = Uint16Array,
    GM = Uint32Array,
    qU = new Jo([
        0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
        5, 5, 5, 5, 0, 0, 0, 0,
    ]),
    KU = new Jo([
        0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10,
        10, 11, 11, 12, 12, 13, 13, 0, 0,
    ]),
    rK = new Jo([
        16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15,
    ]),
    ZU = function (r, e) {
        for (var t = new wc(31), n = 0; n < 31; ++n) t[n] = e += 1 << r[n - 1];
        for (var i = new GM(t[30]), n = 1; n < 30; ++n)
            for (var s = t[n]; s < t[n + 1]; ++s) i[s] = ((s - t[n]) << 5) | n;
        return [t, i];
    },
    $U = ZU(qU, 2),
    JU = $U[0],
    sK = $U[1];
(JU[28] = 258), (sK[258] = 28);
var oK = ZU(KU, 0),
    aK = oK[0],
    WM = new wc(32768);
for (var yi = 0; yi < 32768; ++yi) {
    var dc = ((yi & 43690) >>> 1) | ((yi & 21845) << 1);
    (dc = ((dc & 52428) >>> 2) | ((dc & 13107) << 2)),
        (dc = ((dc & 61680) >>> 4) | ((dc & 3855) << 4)),
        (WM[yi] = (((dc & 65280) >>> 8) | ((dc & 255) << 8)) >>> 1);
}
var Xg = function (r, e, t) {
        for (var n = r.length, i = 0, s = new wc(e); i < n; ++i) ++s[r[i] - 1];
        var o = new wc(e);
        for (i = 0; i < e; ++i) o[i] = (o[i - 1] + s[i - 1]) << 1;
        var a;
        if (t) {
            a = new wc(1 << e);
            var l = 15 - e;
            for (i = 0; i < n; ++i)
                if (r[i])
                    for (
                        var u = (i << 4) | r[i],
                            f = e - r[i],
                            d = o[r[i] - 1]++ << f,
                            m = d | ((1 << f) - 1);
                        d <= m;
                        ++d
                    )
                        a[WM[d] >>> l] = u;
        } else
            for (a = new wc(n), i = 0; i < n; ++i)
                r[i] && (a[i] = WM[o[r[i] - 1]++] >>> (15 - r[i]));
        return a;
    },
    sv = new Jo(288);
for (var yi = 0; yi < 144; ++yi) sv[yi] = 8;
for (var yi = 144; yi < 256; ++yi) sv[yi] = 9;
for (var yi = 256; yi < 280; ++yi) sv[yi] = 7;
for (var yi = 280; yi < 288; ++yi) sv[yi] = 8;
var QU = new Jo(32);
for (var yi = 0; yi < 32; ++yi) QU[yi] = 5;
var lK = Xg(sv, 9, 1),
    uK = Xg(QU, 5, 1),
    xw = function (r) {
        for (var e = r[0], t = 1; t < r.length; ++t) r[t] > e && (e = r[t]);
        return e;
    },
    Ua = function (r, e, t) {
        var n = (e / 8) | 0;
        return ((r[n] | (r[n + 1] << 8)) >> (e & 7)) & t;
    },
    Sw = function (r, e) {
        var t = (e / 8) | 0;
        return (r[t] | (r[t + 1] << 8) | (r[t + 2] << 16)) >> (e & 7);
    },
    cK = function (r) {
        return ((r / 8) | 0) + (r & 7 && 1);
    },
    fK = function (r, e, t) {
        (t == null || t > r.length) && (t = r.length);
        var n = new (r instanceof wc ? wc : r instanceof GM ? GM : Jo)(t - e);
        return n.set(r.subarray(e, t)), n;
    },
    hK = function (r, e, t) {
        var n = r.length;
        if (!n || (t && !t.l && n < 5)) return e || new Jo(0);
        var i = !e || t,
            s = !t || t.i;
        t || (t = {}), e || (e = new Jo(n * 3));
        var o = function (me) {
                var ge = e.length;
                if (me > ge) {
                    var Ae = new Jo(Math.max(ge * 2, me));
                    Ae.set(e), (e = Ae);
                }
            },
            a = t.f || 0,
            l = t.p || 0,
            u = t.b || 0,
            f = t.l,
            d = t.d,
            m = t.m,
            v = t.n,
            _ = n * 8;
        do {
            if (!f) {
                t.f = a = Ua(r, l, 1);
                var S = Ua(r, l + 1, 3);
                if (((l += 3), S))
                    if (S == 1) (f = lK), (d = uK), (m = 9), (v = 5);
                    else if (S == 2) {
                        var T = Ua(r, l, 31) + 257,
                            b = Ua(r, l + 10, 15) + 4,
                            P = T + Ua(r, l + 5, 31) + 1;
                        l += 14;
                        for (
                            var L = new Jo(P), D = new Jo(19), O = 0;
                            O < b;
                            ++O
                        )
                            D[rK[O]] = Ua(r, l + O * 3, 7);
                        l += b * 3;
                        for (
                            var I = xw(D),
                                U = (1 << I) - 1,
                                H = Xg(D, I, 1),
                                O = 0;
                            O < P;

                        ) {
                            var W = H[Ua(r, l, U)];
                            l += W & 15;
                            var w = W >>> 4;
                            if (w < 16) L[O++] = w;
                            else {
                                var q = 0,
                                    K = 0;
                                for (
                                    w == 16
                                        ? ((K = 3 + Ua(r, l, 3)),
                                          (l += 2),
                                          (q = L[O - 1]))
                                        : w == 17
                                          ? ((K = 3 + Ua(r, l, 7)), (l += 3))
                                          : w == 18 &&
                                            ((K = 11 + Ua(r, l, 127)),
                                            (l += 7));
                                    K--;

                                )
                                    L[O++] = q;
                            }
                        }
                        var le = L.subarray(0, T),
                            ee = L.subarray(T);
                        (m = xw(le)),
                            (v = xw(ee)),
                            (f = Xg(le, m, 1)),
                            (d = Xg(ee, v, 1));
                    } else throw 'invalid block type';
                else {
                    var w = cK(l) + 4,
                        x = r[w - 4] | (r[w - 3] << 8),
                        A = w + x;
                    if (A > n) {
                        if (s) throw 'unexpected EOF';
                        break;
                    }
                    i && o(u + x),
                        e.set(r.subarray(w, A), u),
                        (t.b = u += x),
                        (t.p = l = A * 8);
                    continue;
                }
                if (l > _) {
                    if (s) throw 'unexpected EOF';
                    break;
                }
            }
            i && o(u + 131072);
            for (var de = (1 << m) - 1, Z = (1 << v) - 1, se = l; ; se = l) {
                var q = f[Sw(r, l) & de],
                    J = q >>> 4;
                if (((l += q & 15), l > _)) {
                    if (s) throw 'unexpected EOF';
                    break;
                }
                if (!q) throw 'invalid length/literal';
                if (J < 256) e[u++] = J;
                else if (J == 256) {
                    (se = l), (f = null);
                    break;
                } else {
                    var F = J - 254;
                    if (J > 264) {
                        var O = J - 257,
                            $ = qU[O];
                        (F = Ua(r, l, (1 << $) - 1) + JU[O]), (l += $);
                    }
                    var fe = d[Sw(r, l) & Z],
                        ne = fe >>> 4;
                    if (!fe) throw 'invalid distance';
                    l += fe & 15;
                    var ee = aK[ne];
                    if (ne > 3) {
                        var $ = KU[ne];
                        (ee += Sw(r, l) & ((1 << $) - 1)), (l += $);
                    }
                    if (l > _) {
                        if (s) throw 'unexpected EOF';
                        break;
                    }
                    i && o(u + 131072);
                    for (var ae = u + F; u < ae; u += 4)
                        (e[u] = e[u - ee]),
                            (e[u + 1] = e[u + 1 - ee]),
                            (e[u + 2] = e[u + 2 - ee]),
                            (e[u + 3] = e[u + 3 - ee]);
                    u = ae;
                }
            }
            (t.l = f),
                (t.p = se),
                (t.b = u),
                f && ((a = 1), (t.m = m), (t.d = d), (t.n = v));
        } while (!a);
        return u == e.length ? e : fK(e, 0, u);
    },
    dK = new Jo(0),
    pK = function (r) {
        if ((r[0] & 15) != 8 || r[0] >>> 4 > 7 || ((r[0] << 8) | r[1]) % 31)
            throw 'invalid zlib data';
        if (r[1] & 32)
            throw 'invalid zlib data: preset dictionaries not supported';
    };
function Qy(r, e) {
    return hK((pK(r), r.subarray(2, -4)), e);
}
var mK = typeof TextDecoder < 'u' && new TextDecoder(),
    gK = 0;
try {
    mK.decode(dK, { stream: !0 }), (gK = 1);
} catch {}
const vK = (r) => r && r.isCubeTexture;
class yK extends Jn {
    constructor(e, t) {
        var n, i;
        const s = vK(e),
            a =
                ((i = s
                    ? (n = e.image[0]) == null
                        ? void 0
                        : n.width
                    : e.image.width) != null
                    ? i
                    : 1024) / 4,
            l = Math.floor(Math.log2(a)),
            u = Math.pow(2, l),
            f = 3 * Math.max(u, 16 * 7),
            d = 4 * u,
            m = [
                s ? '#define ENVMAP_TYPE_CUBE' : '',
                `#define CUBEUV_TEXEL_WIDTH ${1 / f}`,
                `#define CUBEUV_TEXEL_HEIGHT ${1 / d}`,
                `#define CUBEUV_MAX_MIP ${l}.0`,
            ],
            v = `
        varying vec3 vWorldPosition;
        void main() 
        {
            vec4 worldPosition = ( modelMatrix * vec4( position, 1.0 ) );
            vWorldPosition = worldPosition.xyz;
            
            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        }
        `,
            _ =
                m.join(`
`) +
                `
        #define ENVMAP_TYPE_CUBE_UV
        varying vec3 vWorldPosition;
        uniform float radius;
        uniform float height;
        uniform float angle;
        #ifdef ENVMAP_TYPE_CUBE
            uniform samplerCube map;
        #else
            uniform sampler2D map;
        #endif
        // From: https://www.shadertoy.com/view/4tsBD7
        float diskIntersectWithBackFaceCulling( vec3 ro, vec3 rd, vec3 c, vec3 n, float r ) 
        {
            float d = dot ( rd, n );
            
            if( d > 0.0 ) { return 1e6; }
            
            vec3  o = ro - c;
            float t = - dot( n, o ) / d;
            vec3  q = o + rd * t;
            
            return ( dot( q, q ) < r * r ) ? t : 1e6;
        }
        // From: https://www.iquilezles.org/www/articles/intersectors/intersectors.htm
        float sphereIntersect( vec3 ro, vec3 rd, vec3 ce, float ra ) 
        {
            vec3 oc = ro - ce;
            float b = dot( oc, rd );
            float c = dot( oc, oc ) - ra * ra;
            float h = b * b - c;
            
            if( h < 0.0 ) { return -1.0; }
            
            h = sqrt( h );
            
            return - b + h;
        }
        vec3 project() 
        {
            vec3 p = normalize( vWorldPosition );
            vec3 camPos = cameraPosition;
            camPos.y -= height;
            float intersection = sphereIntersect( camPos, p, vec3( 0.0 ), radius );
            if( intersection > 0.0 ) {
                
                vec3 h = vec3( 0.0, - height, 0.0 );
                float intersection2 = diskIntersectWithBackFaceCulling( camPos, p, h, vec3( 0.0, 1.0, 0.0 ), radius );
                p = ( camPos + min( intersection, intersection2 ) * p ) / radius;
            } else {
                p = vec3( 0.0, 1.0, 0.0 );
            }
            return p;
        }
        #include <common>
        #include <cube_uv_reflection_fragment>
        void main() 
        {
            vec3 projectedWorldPosition = project();
            
            #ifdef ENVMAP_TYPE_CUBE
                vec3 outcolor = textureCube( map, projectedWorldPosition ).rgb;
            #else
                vec3 direction = normalize( projectedWorldPosition );
                vec2 uv = equirectUv( direction );
                vec3 outcolor = texture2D( map, uv ).rgb;
            #endif
            gl_FragColor = vec4( outcolor, 1.0 );
            #include <tonemapping_fragment>
            #include <${YU >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>
        }
        `,
            S = {
                map: { value: e },
                height: { value: (t == null ? void 0 : t.height) || 15 },
                radius: { value: (t == null ? void 0 : t.radius) || 100 },
            },
            w = new $0(1, 16),
            x = new Qi({
                uniforms: S,
                fragmentShader: _,
                vertexShader: v,
                side: To,
            });
        super(w, x);
    }
    set radius(e) {
        this.material.uniforms.radius.value = e;
    }
    get radius() {
        return this.material.uniforms.radius.value;
    }
    set height(e) {
        this.material.uniforms.height.value = e;
    }
    get height() {
        return this.material.uniforms.height.value;
    }
}
var _K = Object.defineProperty,
    xK = (r, e, t) =>
        e in r
            ? _K(r, e, {
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                  value: t,
              })
            : (r[e] = t),
    ww = (r, e, t) => (xK(r, typeof e != 'symbol' ? e + '' : e, t), t);
class $d {
    constructor(e) {
        ww(this, 'camera', new zc(-1, 1, 1, -1, 0, 1)),
            ww(this, 'geometry', new ra(2, 2)),
            ww(this, 'mesh'),
            (this.mesh = new Jn(this.geometry, e));
    }
    get material() {
        return this.mesh.material;
    }
    set material(e) {
        this.mesh.material = e;
    }
    dispose() {
        this.mesh.geometry.dispose();
    }
    render(e) {
        e.render(this.mesh, this.camera);
    }
}
class SK extends YT {
    constructor(e) {
        super(e), (this.type = Er);
    }
    parse(e) {
        const o = function (O, I) {
                switch (O) {
                    case 1:
                        throw new Error(
                            'THREE.RGBELoader: Read Error: ' + (I || '')
                        );
                    case 2:
                        throw new Error(
                            'THREE.RGBELoader: Write Error: ' + (I || '')
                        );
                    case 3:
                        throw new Error(
                            'THREE.RGBELoader: Bad File Format: ' + (I || '')
                        );
                    default:
                    case 4:
                        throw new Error(
                            'THREE.RGBELoader: Memory Error: ' + (I || '')
                        );
                }
            },
            f = `
`,
            d = function (O, I, U) {
                I = I || 1024;
                let W = O.pos,
                    q = -1,
                    K = 0,
                    le = '',
                    ee = String.fromCharCode.apply(
                        null,
                        new Uint16Array(O.subarray(W, W + 128))
                    );
                for (; 0 > (q = ee.indexOf(f)) && K < I && W < O.byteLength; )
                    (le += ee),
                        (K += ee.length),
                        (W += 128),
                        (ee += String.fromCharCode.apply(
                            null,
                            new Uint16Array(O.subarray(W, W + 128))
                        ));
                return -1 < q
                    ? ((O.pos += K + q + 1), le + ee.slice(0, q))
                    : !1;
            },
            m = function (O) {
                const I = /^#\?(\S+)/,
                    U = /^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,
                    H = /^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,
                    W = /^\s*FORMAT=(\S+)\s*$/,
                    q = /^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,
                    K = {
                        valid: 0,
                        string: '',
                        comments: '',
                        programtype: 'RGBE',
                        format: '',
                        gamma: 1,
                        exposure: 1,
                        width: 0,
                        height: 0,
                    };
                let le, ee;
                for (
                    (O.pos >= O.byteLength || !(le = d(O))) &&
                        o(1, 'no header found'),
                        (ee = le.match(I)) || o(3, 'bad initial token'),
                        K.valid |= 1,
                        K.programtype = ee[1],
                        K.string +=
                            le +
                            `
`;
                    (le = d(O)), le !== !1;

                ) {
                    if (
                        ((K.string +=
                            le +
                            `
`),
                        le.charAt(0) === '#')
                    ) {
                        K.comments +=
                            le +
                            `
`;
                        continue;
                    }
                    if (
                        ((ee = le.match(U)) && (K.gamma = parseFloat(ee[1])),
                        (ee = le.match(H)) && (K.exposure = parseFloat(ee[1])),
                        (ee = le.match(W)) &&
                            ((K.valid |= 2), (K.format = ee[1])),
                        (ee = le.match(q)) &&
                            ((K.valid |= 4),
                            (K.height = parseInt(ee[1], 10)),
                            (K.width = parseInt(ee[2], 10))),
                        K.valid & 2 && K.valid & 4)
                    )
                        break;
                }
                return (
                    K.valid & 2 || o(3, 'missing format specifier'),
                    K.valid & 4 || o(3, 'missing image size specifier'),
                    K
                );
            },
            v = function (O, I, U) {
                const H = I;
                if (
                    H < 8 ||
                    H > 32767 ||
                    O[0] !== 2 ||
                    O[1] !== 2 ||
                    O[2] & 128
                )
                    return new Uint8Array(O);
                H !== ((O[2] << 8) | O[3]) && o(3, 'wrong scanline width');
                const W = new Uint8Array(4 * I * U);
                W.length || o(4, 'unable to allocate buffer space');
                let q = 0,
                    K = 0;
                const le = 4 * H,
                    ee = new Uint8Array(4),
                    de = new Uint8Array(le);
                let Z = U;
                for (; Z > 0 && K < O.byteLength; ) {
                    K + 4 > O.byteLength && o(1),
                        (ee[0] = O[K++]),
                        (ee[1] = O[K++]),
                        (ee[2] = O[K++]),
                        (ee[3] = O[K++]),
                        (ee[0] != 2 ||
                            ee[1] != 2 ||
                            ((ee[2] << 8) | ee[3]) != H) &&
                            o(3, 'bad rgbe scanline format');
                    let se = 0,
                        J;
                    for (; se < le && K < O.byteLength; ) {
                        J = O[K++];
                        const $ = J > 128;
                        if (
                            ($ && (J -= 128),
                            (J === 0 || se + J > le) &&
                                o(3, 'bad scanline data'),
                            $)
                        ) {
                            const fe = O[K++];
                            for (let ne = 0; ne < J; ne++) de[se++] = fe;
                        } else
                            de.set(O.subarray(K, K + J), se),
                                (se += J),
                                (K += J);
                    }
                    const F = H;
                    for (let $ = 0; $ < F; $++) {
                        let fe = 0;
                        (W[q] = de[$ + fe]),
                            (fe += H),
                            (W[q + 1] = de[$ + fe]),
                            (fe += H),
                            (W[q + 2] = de[$ + fe]),
                            (fe += H),
                            (W[q + 3] = de[$ + fe]),
                            (q += 4);
                    }
                    Z--;
                }
                return W;
            },
            _ = function (O, I, U, H) {
                const W = O[I + 3],
                    q = Math.pow(2, W - 128) / 255;
                (U[H + 0] = O[I + 0] * q),
                    (U[H + 1] = O[I + 1] * q),
                    (U[H + 2] = O[I + 2] * q),
                    (U[H + 3] = 1);
            },
            S = function (O, I, U, H) {
                const W = O[I + 3],
                    q = Math.pow(2, W - 128) / 255;
                (U[H + 0] = Qf.toHalfFloat(Math.min(O[I + 0] * q, 65504))),
                    (U[H + 1] = Qf.toHalfFloat(Math.min(O[I + 1] * q, 65504))),
                    (U[H + 2] = Qf.toHalfFloat(Math.min(O[I + 2] * q, 65504))),
                    (U[H + 3] = Qf.toHalfFloat(1));
            },
            w = new Uint8Array(e);
        w.pos = 0;
        const x = m(w),
            A = x.width,
            T = x.height,
            b = v(w.subarray(w.pos), A, T);
        let P, L, D;
        switch (this.type) {
            case ri:
                D = b.length / 4;
                const O = new Float32Array(D * 4);
                for (let U = 0; U < D; U++) _(b, U * 4, O, U * 4);
                (P = O), (L = ri);
                break;
            case Er:
                D = b.length / 4;
                const I = new Uint16Array(D * 4);
                for (let U = 0; U < D; U++) S(b, U * 4, I, U * 4);
                (P = I), (L = Er);
                break;
            default:
                throw new Error(
                    'THREE.RGBELoader: Unsupported type: ' + this.type
                );
        }
        return {
            width: A,
            height: T,
            data: P,
            header: x.string,
            gamma: x.gamma,
            exposure: x.exposure,
            type: L,
        };
    }
    setDataType(e) {
        return (this.type = e), this;
    }
    load(e, t, n, i) {
        function s(o, a) {
            switch (o.type) {
                case ri:
                case Er:
                    'colorSpace' in o
                        ? (o.colorSpace = 'srgb-linear')
                        : (o.encoding = 3e3),
                        (o.minFilter = Cn),
                        (o.magFilter = Cn),
                        (o.generateMipmaps = !1),
                        (o.flipY = !0);
                    break;
            }
            t && t(o, a);
        }
        return super.load(e, s, n, i);
    }
}
const fg = YU >= 152;
class wK extends YT {
    constructor(e) {
        super(e), (this.type = Er);
    }
    parse(e) {
        const I = Math.pow(2.7182818, 2.2);
        function U(G, Q) {
            for (var xe = 0, z = 0; z < 65536; ++z)
                (z == 0 || G[z >> 3] & (1 << (z & 7))) && (Q[xe++] = z);
            for (var ie = xe - 1; xe < 65536; ) Q[xe++] = 0;
            return ie;
        }
        function H(G) {
            for (var Q = 0; Q < 16384; Q++)
                (G[Q] = {}), (G[Q].len = 0), (G[Q].lit = 0), (G[Q].p = null);
        }
        const W = { l: 0, c: 0, lc: 0 };
        function q(G, Q, xe, z, ie) {
            for (; xe < G; ) (Q = (Q << 8) | lt(z, ie)), (xe += 8);
            (xe -= G),
                (W.l = (Q >> xe) & ((1 << G) - 1)),
                (W.c = Q),
                (W.lc = xe);
        }
        const K = new Array(59);
        function le(G) {
            for (var Q = 0; Q <= 58; ++Q) K[Q] = 0;
            for (var Q = 0; Q < 65537; ++Q) K[G[Q]] += 1;
            for (var xe = 0, Q = 58; Q > 0; --Q) {
                var z = (xe + K[Q]) >> 1;
                (K[Q] = xe), (xe = z);
            }
            for (var Q = 0; Q < 65537; ++Q) {
                var ie = G[Q];
                ie > 0 && (G[Q] = ie | (K[ie]++ << 6));
            }
        }
        function ee(G, Q, xe, z, ie, oe, pe) {
            for (var ue = xe, Pe = 0, Ue = 0; ie <= oe; ie++) {
                if (ue.value - xe.value > z) return !1;
                q(6, Pe, Ue, G, ue);
                var Ve = W.l;
                if (((Pe = W.c), (Ue = W.lc), (pe[ie] = Ve), Ve == 63)) {
                    if (ue.value - xe.value > z)
                        throw 'Something wrong with hufUnpackEncTable';
                    q(8, Pe, Ue, G, ue);
                    var ye = W.l + 6;
                    if (((Pe = W.c), (Ue = W.lc), ie + ye > oe + 1))
                        throw 'Something wrong with hufUnpackEncTable';
                    for (; ye--; ) pe[ie++] = 0;
                    ie--;
                } else if (Ve >= 59) {
                    var ye = Ve - 59 + 2;
                    if (ie + ye > oe + 1)
                        throw 'Something wrong with hufUnpackEncTable';
                    for (; ye--; ) pe[ie++] = 0;
                    ie--;
                }
            }
            le(pe);
        }
        function de(G) {
            return G & 63;
        }
        function Z(G) {
            return G >> 6;
        }
        function se(G, Q, xe, z) {
            for (; Q <= xe; Q++) {
                var ie = Z(G[Q]),
                    oe = de(G[Q]);
                if (ie >> oe) throw 'Invalid table entry';
                if (oe > 14) {
                    var pe = z[ie >> (oe - 14)];
                    if (pe.len) throw 'Invalid table entry';
                    if ((pe.lit++, pe.p)) {
                        var ue = pe.p;
                        pe.p = new Array(pe.lit);
                        for (var Pe = 0; Pe < pe.lit - 1; ++Pe)
                            pe.p[Pe] = ue[Pe];
                    } else pe.p = new Array(1);
                    pe.p[pe.lit - 1] = Q;
                } else if (oe)
                    for (var Ue = 0, Pe = 1 << (14 - oe); Pe > 0; Pe--) {
                        var pe = z[(ie << (14 - oe)) + Ue];
                        if (pe.len || pe.p) throw 'Invalid table entry';
                        (pe.len = oe), (pe.lit = Q), Ue++;
                    }
            }
            return !0;
        }
        const J = { c: 0, lc: 0 };
        function F(G, Q, xe, z) {
            (G = (G << 8) | lt(xe, z)), (Q += 8), (J.c = G), (J.lc = Q);
        }
        const $ = { c: 0, lc: 0 };
        function fe(G, Q, xe, z, ie, oe, pe, ue, Pe, Ue) {
            if (G == Q) {
                z < 8 && (F(xe, z, ie, pe), (xe = J.c), (z = J.lc)), (z -= 8);
                var Ve = xe >> z,
                    Ve = new Uint8Array([Ve])[0];
                if (Pe.value + Ve > Ue) return !1;
                for (var ye = ue[Pe.value - 1]; Ve-- > 0; ) ue[Pe.value++] = ye;
            } else if (Pe.value < Ue) ue[Pe.value++] = G;
            else return !1;
            ($.c = xe), ($.lc = z);
        }
        function ne(G) {
            return G & 65535;
        }
        function ae(G) {
            var Q = ne(G);
            return Q > 32767 ? Q - 65536 : Q;
        }
        const me = { a: 0, b: 0 };
        function ge(G, Q) {
            var xe = ae(G),
                z = ae(Q),
                ie = z,
                oe = xe + (ie & 1) + (ie >> 1),
                pe = oe,
                ue = oe - ie;
            (me.a = pe), (me.b = ue);
        }
        function Ae(G, Q) {
            var xe = ne(G),
                z = ne(Q),
                ie = (xe - (z >> 1)) & 65535,
                oe = (z + ie - 32768) & 65535;
            (me.a = oe), (me.b = ie);
        }
        function je(G, Q, xe, z, ie, oe, pe) {
            for (
                var ue = pe < 16384, Pe = xe > ie ? ie : xe, Ue = 1, Ve;
                Ue <= Pe;

            )
                Ue <<= 1;
            for (Ue >>= 1, Ve = Ue, Ue >>= 1; Ue >= 1; ) {
                for (
                    var ye = 0,
                        _t = ye + oe * (ie - Ve),
                        rt = oe * Ue,
                        it = oe * Ve,
                        xt = z * Ue,
                        Pt = z * Ve,
                        Nt,
                        Wt,
                        mt,
                        ut;
                    ye <= _t;
                    ye += it
                ) {
                    for (
                        var Lt = ye, Bt = ye + z * (xe - Ve);
                        Lt <= Bt;
                        Lt += Pt
                    ) {
                        var jt = Lt + xt,
                            wn = Lt + rt,
                            yn = wn + xt;
                        ue
                            ? (ge(G[Lt + Q], G[wn + Q]),
                              (Nt = me.a),
                              (mt = me.b),
                              ge(G[jt + Q], G[yn + Q]),
                              (Wt = me.a),
                              (ut = me.b),
                              ge(Nt, Wt),
                              (G[Lt + Q] = me.a),
                              (G[jt + Q] = me.b),
                              ge(mt, ut),
                              (G[wn + Q] = me.a),
                              (G[yn + Q] = me.b))
                            : (Ae(G[Lt + Q], G[wn + Q]),
                              (Nt = me.a),
                              (mt = me.b),
                              Ae(G[jt + Q], G[yn + Q]),
                              (Wt = me.a),
                              (ut = me.b),
                              Ae(Nt, Wt),
                              (G[Lt + Q] = me.a),
                              (G[jt + Q] = me.b),
                              Ae(mt, ut),
                              (G[wn + Q] = me.a),
                              (G[yn + Q] = me.b));
                    }
                    if (xe & Ue) {
                        var wn = Lt + rt;
                        ue
                            ? ge(G[Lt + Q], G[wn + Q])
                            : Ae(G[Lt + Q], G[wn + Q]),
                            (Nt = me.a),
                            (G[wn + Q] = me.b),
                            (G[Lt + Q] = Nt);
                    }
                }
                if (ie & Ue)
                    for (
                        var Lt = ye, Bt = ye + z * (xe - Ve);
                        Lt <= Bt;
                        Lt += Pt
                    ) {
                        var jt = Lt + xt;
                        ue
                            ? ge(G[Lt + Q], G[jt + Q])
                            : Ae(G[Lt + Q], G[jt + Q]),
                            (Nt = me.a),
                            (G[jt + Q] = me.b),
                            (G[Lt + Q] = Nt);
                    }
                (Ve = Ue), (Ue >>= 1);
            }
            return ye;
        }
        function Qe(G, Q, xe, z, ie, oe, pe, ue, Pe, Ue) {
            for (
                var Ve = 0,
                    ye = 0,
                    _t = ue,
                    rt = Math.trunc(ie.value + (oe + 7) / 8);
                ie.value < rt;

            )
                for (F(Ve, ye, xe, ie), Ve = J.c, ye = J.lc; ye >= 14; ) {
                    var it = (Ve >> (ye - 14)) & 16383,
                        xt = Q[it];
                    if (xt.len)
                        (ye -= xt.len),
                            fe(xt.lit, pe, Ve, ye, xe, z, ie, Pe, Ue, _t),
                            (Ve = $.c),
                            (ye = $.lc);
                    else {
                        if (!xt.p) throw 'hufDecode issues';
                        var Pt;
                        for (Pt = 0; Pt < xt.lit; Pt++) {
                            for (
                                var Nt = de(G[xt.p[Pt]]);
                                ye < Nt && ie.value < rt;

                            )
                                F(Ve, ye, xe, ie), (Ve = J.c), (ye = J.lc);
                            if (
                                ye >= Nt &&
                                Z(G[xt.p[Pt]]) ==
                                    ((Ve >> (ye - Nt)) & ((1 << Nt) - 1))
                            ) {
                                (ye -= Nt),
                                    fe(
                                        xt.p[Pt],
                                        pe,
                                        Ve,
                                        ye,
                                        xe,
                                        z,
                                        ie,
                                        Pe,
                                        Ue,
                                        _t
                                    ),
                                    (Ve = $.c),
                                    (ye = $.lc);
                                break;
                            }
                        }
                        if (Pt == xt.lit) throw 'hufDecode issues';
                    }
                }
            var Wt = (8 - oe) & 7;
            for (Ve >>= Wt, ye -= Wt; ye > 0; ) {
                var xt = Q[(Ve << (14 - ye)) & 16383];
                if (xt.len)
                    (ye -= xt.len),
                        fe(xt.lit, pe, Ve, ye, xe, z, ie, Pe, Ue, _t),
                        (Ve = $.c),
                        (ye = $.lc);
                else throw 'hufDecode issues';
            }
            return !0;
        }
        function Ke(G, Q, xe, z, ie, oe) {
            var pe = { value: 0 },
                ue = xe.value,
                Pe = et(Q, xe),
                Ue = et(Q, xe);
            xe.value += 4;
            var Ve = et(Q, xe);
            if (
                ((xe.value += 4),
                Pe < 0 || Pe >= 65537 || Ue < 0 || Ue >= 65537)
            )
                throw 'Something wrong with HUF_ENCSIZE';
            var ye = new Array(65537),
                _t = new Array(16384);
            H(_t);
            var rt = z - (xe.value - ue);
            if ((ee(G, Q, xe, rt, Pe, Ue, ye), Ve > 8 * (z - (xe.value - ue))))
                throw 'Something wrong with hufUncompress';
            se(ye, Pe, Ue, _t), Qe(ye, _t, G, Q, xe, Ve, Ue, oe, ie, pe);
        }
        function X(G, Q, xe) {
            for (var z = 0; z < xe; ++z) Q[z] = G[Q[z]];
        }
        function He(G) {
            for (var Q = 1; Q < G.length; Q++) {
                var xe = G[Q - 1] + G[Q] - 128;
                G[Q] = xe;
            }
        }
        function Fe(G, Q) {
            for (
                var xe = 0,
                    z = Math.floor((G.length + 1) / 2),
                    ie = 0,
                    oe = G.length - 1;
                !(ie > oe || ((Q[ie++] = G[xe++]), ie > oe));

            )
                Q[ie++] = G[z++];
        }
        function We(G) {
            for (
                var Q = G.byteLength,
                    xe = new Array(),
                    z = 0,
                    ie = new DataView(G);
                Q > 0;

            ) {
                var oe = ie.getInt8(z++);
                if (oe < 0) {
                    var pe = -oe;
                    Q -= pe + 1;
                    for (var ue = 0; ue < pe; ue++) xe.push(ie.getUint8(z++));
                } else {
                    var pe = oe;
                    Q -= 2;
                    for (var Pe = ie.getUint8(z++), ue = 0; ue < pe + 1; ue++)
                        xe.push(Pe);
                }
            }
            return xe;
        }
        function Re(G, Q, xe, z, ie, oe) {
            var jt = new DataView(oe.buffer),
                pe = xe[G.idx[0]].width,
                ue = xe[G.idx[0]].height,
                Pe = 3,
                Ue = Math.floor(pe / 8),
                Ve = Math.ceil(pe / 8),
                ye = Math.ceil(ue / 8),
                _t = pe - (Ve - 1) * 8,
                rt = ue - (ye - 1) * 8,
                it = { value: 0 },
                xt = new Array(Pe),
                Pt = new Array(Pe),
                Nt = new Array(Pe),
                Wt = new Array(Pe),
                mt = new Array(Pe);
            for (let tn = 0; tn < Pe; ++tn)
                (mt[tn] = Q[G.idx[tn]]),
                    (xt[tn] = tn < 1 ? 0 : xt[tn - 1] + Ve * ye),
                    (Pt[tn] = new Float32Array(64)),
                    (Nt[tn] = new Uint16Array(64)),
                    (Wt[tn] = new Uint16Array(Ve * 64));
            for (let tn = 0; tn < ye; ++tn) {
                var ut = 8;
                tn == ye - 1 && (ut = rt);
                var Lt = 8;
                for (let nn = 0; nn < Ve; ++nn) {
                    nn == Ve - 1 && (Lt = _t);
                    for (let Jt = 0; Jt < Pe; ++Jt)
                        Nt[Jt].fill(0),
                            (Nt[Jt][0] = ie[xt[Jt]++]),
                            st(it, z, Nt[Jt]),
                            De(Nt[Jt], Pt[Jt]),
                            Je(Pt[Jt]);
                    te(Pt);
                    for (let Jt = 0; Jt < Pe; ++Jt) V(Pt[Jt], Wt[Jt], nn * 64);
                }
                let Xn = 0;
                for (let nn = 0; nn < Pe; ++nn) {
                    const Jt = xe[G.idx[nn]].type;
                    for (let Bn = 8 * tn; Bn < 8 * tn + ut; ++Bn) {
                        Xn = mt[nn][Bn];
                        for (let Wi = 0; Wi < Ue; ++Wi) {
                            const ei = Wi * 64 + (Bn & 7) * 8;
                            jt.setUint16(Xn + 0 * 2 * Jt, Wt[nn][ei + 0], !0),
                                jt.setUint16(
                                    Xn + 1 * 2 * Jt,
                                    Wt[nn][ei + 1],
                                    !0
                                ),
                                jt.setUint16(
                                    Xn + 2 * 2 * Jt,
                                    Wt[nn][ei + 2],
                                    !0
                                ),
                                jt.setUint16(
                                    Xn + 3 * 2 * Jt,
                                    Wt[nn][ei + 3],
                                    !0
                                ),
                                jt.setUint16(
                                    Xn + 4 * 2 * Jt,
                                    Wt[nn][ei + 4],
                                    !0
                                ),
                                jt.setUint16(
                                    Xn + 5 * 2 * Jt,
                                    Wt[nn][ei + 5],
                                    !0
                                ),
                                jt.setUint16(
                                    Xn + 6 * 2 * Jt,
                                    Wt[nn][ei + 6],
                                    !0
                                ),
                                jt.setUint16(
                                    Xn + 7 * 2 * Jt,
                                    Wt[nn][ei + 7],
                                    !0
                                ),
                                (Xn += 8 * 2 * Jt);
                        }
                    }
                    if (Ue != Ve)
                        for (let Bn = 8 * tn; Bn < 8 * tn + ut; ++Bn) {
                            const Wi = mt[nn][Bn] + 8 * Ue * 2 * Jt,
                                ei = Ue * 64 + (Bn & 7) * 8;
                            for (let ys = 0; ys < Lt; ++ys)
                                jt.setUint16(
                                    Wi + ys * 2 * Jt,
                                    Wt[nn][ei + ys],
                                    !0
                                );
                        }
                }
            }
            for (
                var Bt = new Uint16Array(pe),
                    jt = new DataView(oe.buffer),
                    wn = 0;
                wn < Pe;
                ++wn
            ) {
                xe[G.idx[wn]].decoded = !0;
                var yn = xe[G.idx[wn]].type;
                if (xe[wn].type == 2)
                    for (var Dn = 0; Dn < ue; ++Dn) {
                        const tn = mt[wn][Dn];
                        for (var $t = 0; $t < pe; ++$t)
                            Bt[$t] = jt.getUint16(tn + $t * 2 * yn, !0);
                        for (var $t = 0; $t < pe; ++$t)
                            jt.setFloat32(tn + $t * 2 * yn, ve(Bt[$t]), !0);
                    }
            }
        }
        function st(G, Q, xe) {
            for (var z, ie = 1; ie < 64; )
                (z = Q[G.value]),
                    z == 65280
                        ? (ie = 64)
                        : z >> 8 == 255
                          ? (ie += z & 255)
                          : ((xe[ie] = z), ie++),
                    G.value++;
        }
        function De(G, Q) {
            (Q[0] = ve(G[0])),
                (Q[1] = ve(G[1])),
                (Q[2] = ve(G[5])),
                (Q[3] = ve(G[6])),
                (Q[4] = ve(G[14])),
                (Q[5] = ve(G[15])),
                (Q[6] = ve(G[27])),
                (Q[7] = ve(G[28])),
                (Q[8] = ve(G[2])),
                (Q[9] = ve(G[4])),
                (Q[10] = ve(G[7])),
                (Q[11] = ve(G[13])),
                (Q[12] = ve(G[16])),
                (Q[13] = ve(G[26])),
                (Q[14] = ve(G[29])),
                (Q[15] = ve(G[42])),
                (Q[16] = ve(G[3])),
                (Q[17] = ve(G[8])),
                (Q[18] = ve(G[12])),
                (Q[19] = ve(G[17])),
                (Q[20] = ve(G[25])),
                (Q[21] = ve(G[30])),
                (Q[22] = ve(G[41])),
                (Q[23] = ve(G[43])),
                (Q[24] = ve(G[9])),
                (Q[25] = ve(G[11])),
                (Q[26] = ve(G[18])),
                (Q[27] = ve(G[24])),
                (Q[28] = ve(G[31])),
                (Q[29] = ve(G[40])),
                (Q[30] = ve(G[44])),
                (Q[31] = ve(G[53])),
                (Q[32] = ve(G[10])),
                (Q[33] = ve(G[19])),
                (Q[34] = ve(G[23])),
                (Q[35] = ve(G[32])),
                (Q[36] = ve(G[39])),
                (Q[37] = ve(G[45])),
                (Q[38] = ve(G[52])),
                (Q[39] = ve(G[54])),
                (Q[40] = ve(G[20])),
                (Q[41] = ve(G[22])),
                (Q[42] = ve(G[33])),
                (Q[43] = ve(G[38])),
                (Q[44] = ve(G[46])),
                (Q[45] = ve(G[51])),
                (Q[46] = ve(G[55])),
                (Q[47] = ve(G[60])),
                (Q[48] = ve(G[21])),
                (Q[49] = ve(G[34])),
                (Q[50] = ve(G[37])),
                (Q[51] = ve(G[47])),
                (Q[52] = ve(G[50])),
                (Q[53] = ve(G[56])),
                (Q[54] = ve(G[59])),
                (Q[55] = ve(G[61])),
                (Q[56] = ve(G[35])),
                (Q[57] = ve(G[36])),
                (Q[58] = ve(G[48])),
                (Q[59] = ve(G[49])),
                (Q[60] = ve(G[57])),
                (Q[61] = ve(G[58])),
                (Q[62] = ve(G[62])),
                (Q[63] = ve(G[63]));
        }
        function Je(G) {
            const Q = 0.5 * Math.cos(0.7853975),
                xe = 0.5 * Math.cos(3.14159 / 16),
                z = 0.5 * Math.cos(3.14159 / 8),
                ie = 0.5 * Math.cos((3 * 3.14159) / 16),
                oe = 0.5 * Math.cos((5 * 3.14159) / 16),
                pe = 0.5 * Math.cos((3 * 3.14159) / 8),
                ue = 0.5 * Math.cos((7 * 3.14159) / 16);
            for (
                var Pe = new Array(4),
                    Ue = new Array(4),
                    Ve = new Array(4),
                    ye = new Array(4),
                    _t = 0;
                _t < 8;
                ++_t
            ) {
                var rt = _t * 8;
                (Pe[0] = z * G[rt + 2]),
                    (Pe[1] = pe * G[rt + 2]),
                    (Pe[2] = z * G[rt + 6]),
                    (Pe[3] = pe * G[rt + 6]),
                    (Ue[0] =
                        xe * G[rt + 1] +
                        ie * G[rt + 3] +
                        oe * G[rt + 5] +
                        ue * G[rt + 7]),
                    (Ue[1] =
                        ie * G[rt + 1] -
                        ue * G[rt + 3] -
                        xe * G[rt + 5] -
                        oe * G[rt + 7]),
                    (Ue[2] =
                        oe * G[rt + 1] -
                        xe * G[rt + 3] +
                        ue * G[rt + 5] +
                        ie * G[rt + 7]),
                    (Ue[3] =
                        ue * G[rt + 1] -
                        oe * G[rt + 3] +
                        ie * G[rt + 5] -
                        xe * G[rt + 7]),
                    (Ve[0] = Q * (G[rt + 0] + G[rt + 4])),
                    (Ve[3] = Q * (G[rt + 0] - G[rt + 4])),
                    (Ve[1] = Pe[0] + Pe[3]),
                    (Ve[2] = Pe[1] - Pe[2]),
                    (ye[0] = Ve[0] + Ve[1]),
                    (ye[1] = Ve[3] + Ve[2]),
                    (ye[2] = Ve[3] - Ve[2]),
                    (ye[3] = Ve[0] - Ve[1]),
                    (G[rt + 0] = ye[0] + Ue[0]),
                    (G[rt + 1] = ye[1] + Ue[1]),
                    (G[rt + 2] = ye[2] + Ue[2]),
                    (G[rt + 3] = ye[3] + Ue[3]),
                    (G[rt + 4] = ye[3] - Ue[3]),
                    (G[rt + 5] = ye[2] - Ue[2]),
                    (G[rt + 6] = ye[1] - Ue[1]),
                    (G[rt + 7] = ye[0] - Ue[0]);
            }
            for (var it = 0; it < 8; ++it)
                (Pe[0] = z * G[16 + it]),
                    (Pe[1] = pe * G[16 + it]),
                    (Pe[2] = z * G[48 + it]),
                    (Pe[3] = pe * G[48 + it]),
                    (Ue[0] =
                        xe * G[8 + it] +
                        ie * G[24 + it] +
                        oe * G[40 + it] +
                        ue * G[56 + it]),
                    (Ue[1] =
                        ie * G[8 + it] -
                        ue * G[24 + it] -
                        xe * G[40 + it] -
                        oe * G[56 + it]),
                    (Ue[2] =
                        oe * G[8 + it] -
                        xe * G[24 + it] +
                        ue * G[40 + it] +
                        ie * G[56 + it]),
                    (Ue[3] =
                        ue * G[8 + it] -
                        oe * G[24 + it] +
                        ie * G[40 + it] -
                        xe * G[56 + it]),
                    (Ve[0] = Q * (G[it] + G[32 + it])),
                    (Ve[3] = Q * (G[it] - G[32 + it])),
                    (Ve[1] = Pe[0] + Pe[3]),
                    (Ve[2] = Pe[1] - Pe[2]),
                    (ye[0] = Ve[0] + Ve[1]),
                    (ye[1] = Ve[3] + Ve[2]),
                    (ye[2] = Ve[3] - Ve[2]),
                    (ye[3] = Ve[0] - Ve[1]),
                    (G[0 + it] = ye[0] + Ue[0]),
                    (G[8 + it] = ye[1] + Ue[1]),
                    (G[16 + it] = ye[2] + Ue[2]),
                    (G[24 + it] = ye[3] + Ue[3]),
                    (G[32 + it] = ye[3] - Ue[3]),
                    (G[40 + it] = ye[2] - Ue[2]),
                    (G[48 + it] = ye[1] - Ue[1]),
                    (G[56 + it] = ye[0] - Ue[0]);
        }
        function te(G) {
            for (var Q = 0; Q < 64; ++Q) {
                var xe = G[0][Q],
                    z = G[1][Q],
                    ie = G[2][Q];
                (G[0][Q] = xe + 1.5747 * ie),
                    (G[1][Q] = xe - 0.1873 * z - 0.4682 * ie),
                    (G[2][Q] = xe + 1.8556 * z);
            }
        }
        function V(G, Q, xe) {
            for (var z = 0; z < 64; ++z) Q[xe + z] = Qf.toHalfFloat(Me(G[z]));
        }
        function Me(G) {
            return G <= 1
                ? Math.sign(G) * Math.pow(Math.abs(G), 2.2)
                : Math.sign(G) * Math.pow(I, Math.abs(G) - 1);
        }
        function Le(G) {
            return new DataView(G.array.buffer, G.offset.value, G.size);
        }
        function Ie(G) {
            var Q = G.viewer.buffer.slice(
                    G.offset.value,
                    G.offset.value + G.size
                ),
                xe = new Uint8Array(We(Q)),
                z = new Uint8Array(xe.length);
            return He(xe), Fe(xe, z), new DataView(z.buffer);
        }
        function Ce(G) {
            var Q = G.array.slice(G.offset.value, G.offset.value + G.size),
                xe = Qy(Q),
                z = new Uint8Array(xe.length);
            return He(xe), Fe(xe, z), new DataView(z.buffer);
        }
        function gt(G) {
            for (
                var Q = G.viewer,
                    xe = { value: G.offset.value },
                    z = new Uint16Array(
                        G.width * G.scanlineBlockSize * (G.channels * G.type)
                    ),
                    ie = new Uint8Array(8192),
                    oe = 0,
                    pe = new Array(G.channels),
                    ue = 0;
                ue < G.channels;
                ue++
            )
                (pe[ue] = {}),
                    (pe[ue].start = oe),
                    (pe[ue].end = pe[ue].start),
                    (pe[ue].nx = G.width),
                    (pe[ue].ny = G.lines),
                    (pe[ue].size = G.type),
                    (oe += pe[ue].nx * pe[ue].ny * pe[ue].size);
            var Pe = Be(Q, xe),
                Ue = Be(Q, xe);
            if (Ue >= 8192)
                throw 'Something is wrong with PIZ_COMPRESSION BITMAP_SIZE';
            if (Pe <= Ue)
                for (var ue = 0; ue < Ue - Pe + 1; ue++)
                    ie[ue + Pe] = Ct(Q, xe);
            var Ve = new Uint16Array(65536),
                ye = U(ie, Ve),
                _t = et(Q, xe);
            Ke(G.array, Q, xe, _t, z, oe);
            for (var ue = 0; ue < G.channels; ++ue)
                for (var rt = pe[ue], it = 0; it < pe[ue].size; ++it)
                    je(
                        z,
                        rt.start + it,
                        rt.nx,
                        rt.size,
                        rt.ny,
                        rt.nx * rt.size,
                        ye
                    );
            X(Ve, z, oe);
            for (
                var xt = 0, Pt = new Uint8Array(z.buffer.byteLength), Nt = 0;
                Nt < G.lines;
                Nt++
            )
                for (var Wt = 0; Wt < G.channels; Wt++) {
                    var rt = pe[Wt],
                        mt = rt.nx * rt.size,
                        ut = new Uint8Array(z.buffer, rt.end * 2, mt * 2);
                    Pt.set(ut, xt), (xt += mt * 2), (rt.end += mt);
                }
            return new DataView(Pt.buffer);
        }
        function Xe(G) {
            var Q = G.array.slice(G.offset.value, G.offset.value + G.size),
                xe = Qy(Q);
            const z = G.lines * G.channels * G.width,
                ie = G.type == 1 ? new Uint16Array(z) : new Uint32Array(z);
            let oe = 0,
                pe = 0;
            const ue = new Array(4);
            for (let Pe = 0; Pe < G.lines; Pe++)
                for (let Ue = 0; Ue < G.channels; Ue++) {
                    let Ve = 0;
                    switch (G.type) {
                        case 1:
                            (ue[0] = oe),
                                (ue[1] = ue[0] + G.width),
                                (oe = ue[1] + G.width);
                            for (let ye = 0; ye < G.width; ++ye) {
                                const _t = (xe[ue[0]++] << 8) | xe[ue[1]++];
                                (Ve += _t), (ie[pe] = Ve), pe++;
                            }
                            break;
                        case 2:
                            (ue[0] = oe),
                                (ue[1] = ue[0] + G.width),
                                (ue[2] = ue[1] + G.width),
                                (oe = ue[2] + G.width);
                            for (let ye = 0; ye < G.width; ++ye) {
                                const _t =
                                    (xe[ue[0]++] << 24) |
                                    (xe[ue[1]++] << 16) |
                                    (xe[ue[2]++] << 8);
                                (Ve += _t), (ie[pe] = Ve), pe++;
                            }
                            break;
                    }
                }
            return new DataView(ie.buffer);
        }
        function Ze(G) {
            var Q = G.viewer,
                xe = { value: G.offset.value },
                z = new Uint8Array(
                    G.width * G.lines * (G.channels * G.type * 2)
                ),
                ie = {
                    version: Dt(Q, xe),
                    unknownUncompressedSize: Dt(Q, xe),
                    unknownCompressedSize: Dt(Q, xe),
                    acCompressedSize: Dt(Q, xe),
                    dcCompressedSize: Dt(Q, xe),
                    rleCompressedSize: Dt(Q, xe),
                    rleUncompressedSize: Dt(Q, xe),
                    rleRawSize: Dt(Q, xe),
                    totalAcUncompressedCount: Dt(Q, xe),
                    totalDcUncompressedCount: Dt(Q, xe),
                    acCompression: Dt(Q, xe),
                };
            if (ie.version < 2)
                throw (
                    'EXRLoader.parse: ' +
                    Qn.compression +
                    ' version ' +
                    ie.version +
                    ' is unsupported'
                );
            for (var oe = new Array(), pe = Be(Q, xe) - 2; pe > 0; ) {
                var ue = at(Q.buffer, xe),
                    Pe = Ct(Q, xe),
                    Ue = (Pe >> 2) & 3,
                    Ve = (Pe >> 4) - 1,
                    ye = new Int8Array([Ve])[0],
                    _t = Ct(Q, xe);
                oe.push({ name: ue, index: ye, type: _t, compression: Ue }),
                    (pe -= ue.length + 3);
            }
            for (
                var rt = Qn.channels, it = new Array(G.channels), xt = 0;
                xt < G.channels;
                ++xt
            ) {
                var Pt = (it[xt] = {}),
                    Nt = rt[xt];
                (Pt.name = Nt.name),
                    (Pt.compression = 0),
                    (Pt.decoded = !1),
                    (Pt.type = Nt.pixelType),
                    (Pt.pLinear = Nt.pLinear),
                    (Pt.width = G.width),
                    (Pt.height = G.lines);
            }
            for (var Wt = { idx: new Array(3) }, mt = 0; mt < G.channels; ++mt)
                for (var Pt = it[mt], xt = 0; xt < oe.length; ++xt) {
                    var ut = oe[xt];
                    Pt.name == ut.name &&
                        ((Pt.compression = ut.compression),
                        ut.index >= 0 && (Wt.idx[ut.index] = mt),
                        (Pt.offset = mt));
                }
            if (ie.acCompressedSize > 0)
                switch (ie.acCompression) {
                    case 0:
                        var jt = new Uint16Array(ie.totalAcUncompressedCount);
                        Ke(
                            G.array,
                            Q,
                            xe,
                            ie.acCompressedSize,
                            jt,
                            ie.totalAcUncompressedCount
                        );
                        break;
                    case 1:
                        var Lt = G.array.slice(
                                xe.value,
                                xe.value + ie.totalAcUncompressedCount
                            ),
                            Bt = Qy(Lt),
                            jt = new Uint16Array(Bt.buffer);
                        xe.value += ie.totalAcUncompressedCount;
                        break;
                }
            if (ie.dcCompressedSize > 0) {
                var wn = {
                        array: G.array,
                        offset: xe,
                        size: ie.dcCompressedSize,
                    },
                    yn = new Uint16Array(Ce(wn).buffer);
                xe.value += ie.dcCompressedSize;
            }
            if (ie.rleRawSize > 0) {
                var Lt = G.array.slice(
                        xe.value,
                        xe.value + ie.rleCompressedSize
                    ),
                    Bt = Qy(Lt),
                    Dn = We(Bt.buffer);
                xe.value += ie.rleCompressedSize;
            }
            for (
                var $t = 0, tn = new Array(it.length), xt = 0;
                xt < tn.length;
                ++xt
            )
                tn[xt] = new Array();
            for (var Xn = 0; Xn < G.lines; ++Xn)
                for (var nn = 0; nn < it.length; ++nn)
                    tn[nn].push($t), ($t += it[nn].width * G.type * 2);
            Re(Wt, tn, it, jt, yn, z);
            for (var xt = 0; xt < it.length; ++xt) {
                var Pt = it[xt];
                if (!Pt.decoded)
                    switch (Pt.compression) {
                        case 2:
                            for (
                                var Jt = 0, Bn = 0, Xn = 0;
                                Xn < G.lines;
                                ++Xn
                            ) {
                                for (
                                    var Wi = tn[xt][Jt], ei = 0;
                                    ei < Pt.width;
                                    ++ei
                                ) {
                                    for (var ys = 0; ys < 2 * Pt.type; ++ys)
                                        z[Wi++] =
                                            Dn[Bn + ys * Pt.width * Pt.height];
                                    Bn++;
                                }
                                Jt++;
                            }
                            break;
                        case 1:
                        default:
                            throw 'EXRLoader.parse: unsupported channel compression';
                    }
            }
            return new DataView(z.buffer);
        }
        function at(G, Q) {
            for (var xe = new Uint8Array(G), z = 0; xe[Q.value + z] != 0; )
                z += 1;
            var ie = new TextDecoder().decode(xe.slice(Q.value, Q.value + z));
            return (Q.value = Q.value + z + 1), ie;
        }
        function Ye(G, Q, xe) {
            var z = new TextDecoder().decode(
                new Uint8Array(G).slice(Q.value, Q.value + xe)
            );
            return (Q.value = Q.value + xe), z;
        }
        function ot(G, Q) {
            var xe = pt(G, Q),
                z = et(G, Q);
            return [xe, z];
        }
        function kt(G, Q) {
            var xe = et(G, Q),
                z = et(G, Q);
            return [xe, z];
        }
        function pt(G, Q) {
            var xe = G.getInt32(Q.value, !0);
            return (Q.value = Q.value + 4), xe;
        }
        function et(G, Q) {
            var xe = G.getUint32(Q.value, !0);
            return (Q.value = Q.value + 4), xe;
        }
        function lt(G, Q) {
            var xe = G[Q.value];
            return (Q.value = Q.value + 1), xe;
        }
        function Ct(G, Q) {
            var xe = G.getUint8(Q.value);
            return (Q.value = Q.value + 1), xe;
        }
        const Dt = function (G, Q) {
            let xe;
            return (
                'getBigInt64' in DataView.prototype
                    ? (xe = Number(G.getBigInt64(Q.value, !0)))
                    : (xe =
                          G.getUint32(Q.value + 4, !0) +
                          Number(G.getUint32(Q.value, !0) << 32)),
                (Q.value += 8),
                xe
            );
        };
        function _e(G, Q) {
            var xe = G.getFloat32(Q.value, !0);
            return (Q.value += 4), xe;
        }
        function nt(G, Q) {
            return Qf.toHalfFloat(_e(G, Q));
        }
        function ve(G) {
            var Q = (G & 31744) >> 10,
                xe = G & 1023;
            return (
                (G >> 15 ? -1 : 1) *
                (Q
                    ? Q === 31
                        ? xe
                            ? NaN
                            : 1 / 0
                        : Math.pow(2, Q - 15) * (1 + xe / 1024)
                    : 6103515625e-14 * (xe / 1024))
            );
        }
        function Be(G, Q) {
            var xe = G.getUint16(Q.value, !0);
            return (Q.value += 2), xe;
        }
        function ht(G, Q) {
            return ve(Be(G, Q));
        }
        function wt(G, Q, xe, z) {
            for (var ie = xe.value, oe = []; xe.value < ie + z - 1; ) {
                var pe = at(Q, xe),
                    ue = pt(G, xe),
                    Pe = Ct(G, xe);
                xe.value += 3;
                var Ue = pt(G, xe),
                    Ve = pt(G, xe);
                oe.push({
                    name: pe,
                    pixelType: ue,
                    pLinear: Pe,
                    xSampling: Ue,
                    ySampling: Ve,
                });
            }
            return (xe.value += 1), oe;
        }
        function Et(G, Q) {
            var xe = _e(G, Q),
                z = _e(G, Q),
                ie = _e(G, Q),
                oe = _e(G, Q),
                pe = _e(G, Q),
                ue = _e(G, Q),
                Pe = _e(G, Q),
                Ue = _e(G, Q);
            return {
                redX: xe,
                redY: z,
                greenX: ie,
                greenY: oe,
                blueX: pe,
                blueY: ue,
                whiteX: Pe,
                whiteY: Ue,
            };
        }
        function Qt(G, Q) {
            var xe = [
                    'NO_COMPRESSION',
                    'RLE_COMPRESSION',
                    'ZIPS_COMPRESSION',
                    'ZIP_COMPRESSION',
                    'PIZ_COMPRESSION',
                    'PXR24_COMPRESSION',
                    'B44_COMPRESSION',
                    'B44A_COMPRESSION',
                    'DWAA_COMPRESSION',
                    'DWAB_COMPRESSION',
                ],
                z = Ct(G, Q);
            return xe[z];
        }
        function en(G, Q) {
            var xe = et(G, Q),
                z = et(G, Q),
                ie = et(G, Q),
                oe = et(G, Q);
            return { xMin: xe, yMin: z, xMax: ie, yMax: oe };
        }
        function Mt(G, Q) {
            var xe = ['INCREASING_Y'],
                z = Ct(G, Q);
            return xe[z];
        }
        function hn(G, Q) {
            var xe = _e(G, Q),
                z = _e(G, Q);
            return [xe, z];
        }
        function Pn(G, Q) {
            var xe = _e(G, Q),
                z = _e(G, Q),
                ie = _e(G, Q);
            return [xe, z, ie];
        }
        function jn(G, Q, xe, z, ie) {
            if (z === 'string' || z === 'stringvector' || z === 'iccProfile')
                return Ye(Q, xe, ie);
            if (z === 'chlist') return wt(G, Q, xe, ie);
            if (z === 'chromaticities') return Et(G, xe);
            if (z === 'compression') return Qt(G, xe);
            if (z === 'box2i') return en(G, xe);
            if (z === 'lineOrder') return Mt(G, xe);
            if (z === 'float') return _e(G, xe);
            if (z === 'v2f') return hn(G, xe);
            if (z === 'v3f') return Pn(G, xe);
            if (z === 'int') return pt(G, xe);
            if (z === 'rational') return ot(G, xe);
            if (z === 'timecode') return kt(G, xe);
            if (z === 'preview') return (xe.value += ie), 'skipped';
            xe.value += ie;
        }
        function An(G, Q, xe) {
            const z = {};
            if (G.getUint32(0, !0) != 20000630)
                throw "THREE.EXRLoader: provided file doesn't appear to be in OpenEXR format.";
            z.version = G.getUint8(4);
            const ie = G.getUint8(5);
            (z.spec = {
                singleTile: !!(ie & 2),
                longName: !!(ie & 4),
                deepFormat: !!(ie & 8),
                multiPart: !!(ie & 16),
            }),
                (xe.value = 8);
            for (var oe = !0; oe; ) {
                var pe = at(Q, xe);
                if (pe == 0) oe = !1;
                else {
                    var ue = at(Q, xe),
                        Pe = et(G, xe),
                        Ue = jn(G, Q, xe, ue, Pe);
                    Ue === void 0
                        ? console.warn(
                              `EXRLoader.parse: skipped unknown header attribute type '${ue}'.`
                          )
                        : (z[pe] = Ue);
                }
            }
            if ((ie & -5) != 0)
                throw (
                    (console.error('EXRHeader:', z),
                    'THREE.EXRLoader: provided file is currently unsupported.')
                );
            return z;
        }
        function di(G, Q, xe, z, ie) {
            const oe = {
                size: 0,
                viewer: Q,
                array: xe,
                offset: z,
                width: G.dataWindow.xMax - G.dataWindow.xMin + 1,
                height: G.dataWindow.yMax - G.dataWindow.yMin + 1,
                channels: G.channels.length,
                bytesPerLine: null,
                lines: null,
                inputSize: null,
                type: G.channels[0].pixelType,
                uncompress: null,
                getter: null,
                format: null,
                [fg ? 'colorSpace' : 'encoding']: null,
            };
            switch (G.compression) {
                case 'NO_COMPRESSION':
                    (oe.lines = 1), (oe.uncompress = Le);
                    break;
                case 'RLE_COMPRESSION':
                    (oe.lines = 1), (oe.uncompress = Ie);
                    break;
                case 'ZIPS_COMPRESSION':
                    (oe.lines = 1), (oe.uncompress = Ce);
                    break;
                case 'ZIP_COMPRESSION':
                    (oe.lines = 16), (oe.uncompress = Ce);
                    break;
                case 'PIZ_COMPRESSION':
                    (oe.lines = 32), (oe.uncompress = gt);
                    break;
                case 'PXR24_COMPRESSION':
                    (oe.lines = 16), (oe.uncompress = Xe);
                    break;
                case 'DWAA_COMPRESSION':
                    (oe.lines = 32), (oe.uncompress = Ze);
                    break;
                case 'DWAB_COMPRESSION':
                    (oe.lines = 256), (oe.uncompress = Ze);
                    break;
                default:
                    throw (
                        'EXRLoader.parse: ' + G.compression + ' is unsupported'
                    );
            }
            if (((oe.scanlineBlockSize = oe.lines), oe.type == 1))
                switch (ie) {
                    case ri:
                        (oe.getter = ht), (oe.inputSize = 2);
                        break;
                    case Er:
                        (oe.getter = Be), (oe.inputSize = 2);
                        break;
                }
            else if (oe.type == 2)
                switch (ie) {
                    case ri:
                        (oe.getter = _e), (oe.inputSize = 4);
                        break;
                    case Er:
                        (oe.getter = nt), (oe.inputSize = 4);
                }
            else
                throw (
                    'EXRLoader.parse: unsupported pixelType ' +
                    oe.type +
                    ' for ' +
                    G.compression +
                    '.'
                );
            oe.blockCount = (G.dataWindow.yMax + 1) / oe.scanlineBlockSize;
            for (var pe = 0; pe < oe.blockCount; pe++) Dt(Q, z);
            oe.outputChannels = oe.channels == 3 ? 4 : oe.channels;
            const ue = oe.width * oe.height * oe.outputChannels;
            switch (ie) {
                case ri:
                    (oe.byteArray = new Float32Array(ue)),
                        oe.channels < oe.outputChannels &&
                            oe.byteArray.fill(1, 0, ue);
                    break;
                case Er:
                    (oe.byteArray = new Uint16Array(ue)),
                        oe.channels < oe.outputChannels &&
                            oe.byteArray.fill(15360, 0, ue);
                    break;
                default:
                    console.error('THREE.EXRLoader: unsupported type: ', ie);
                    break;
            }
            return (
                (oe.bytesPerLine = oe.width * oe.inputSize * oe.channels),
                oe.outputChannels == 4 ? (oe.format = er) : (oe.format = Tc),
                fg ? (oe.colorSpace = 'srgb-linear') : (oe.encoding = 3e3),
                oe
            );
        }
        const Gi = new DataView(e),
            _i = new Uint8Array(e),
            si = { value: 0 },
            Qn = An(Gi, e, si),
            Xt = di(Qn, Gi, _i, si, this.type),
            pi = { value: 0 },
            $r = { R: 0, G: 1, B: 2, A: 3, Y: 0 };
        for (let G = 0; G < Xt.height / Xt.scanlineBlockSize; G++) {
            const Q = et(Gi, si);
            (Xt.size = et(Gi, si)),
                (Xt.lines =
                    Q + Xt.scanlineBlockSize > Xt.height
                        ? Xt.height - Q
                        : Xt.scanlineBlockSize);
            const z =
                Xt.size < Xt.lines * Xt.bytesPerLine
                    ? Xt.uncompress(Xt)
                    : Le(Xt);
            si.value += Xt.size;
            for (let ie = 0; ie < Xt.scanlineBlockSize; ie++) {
                const oe = ie + G * Xt.scanlineBlockSize;
                if (oe >= Xt.height) break;
                for (let pe = 0; pe < Xt.channels; pe++) {
                    const ue = $r[Qn.channels[pe].name];
                    for (let Pe = 0; Pe < Xt.width; Pe++) {
                        pi.value =
                            (ie * (Xt.channels * Xt.width) +
                                pe * Xt.width +
                                Pe) *
                            Xt.inputSize;
                        const Ue =
                            (Xt.height - 1 - oe) *
                                (Xt.width * Xt.outputChannels) +
                            Pe * Xt.outputChannels +
                            ue;
                        Xt.byteArray[Ue] = Xt.getter(z, pi);
                    }
                }
            }
        }
        return {
            header: Qn,
            width: Xt.width,
            height: Xt.height,
            data: Xt.byteArray,
            format: Xt.format,
            [fg ? 'colorSpace' : 'encoding']:
                Xt[fg ? 'colorSpace' : 'encoding'],
            type: this.type,
        };
    }
    setDataType(e) {
        return (this.type = e), this;
    }
    load(e, t, n, i) {
        function s(o, a) {
            fg ? (o.colorSpace = a.colorSpace) : (o.encoding = a.encoding),
                (o.minFilter = Cn),
                (o.magFilter = Cn),
                (o.generateMipmaps = !1),
                (o.flipY = !1),
                t && t(o, a);
        }
        return super.load(e, s, n, i);
    }
}
function MK() {
    var r = Object.create(null);
    function e(i, s) {
        var o = i.id,
            a = i.name,
            l = i.dependencies;
        l === void 0 && (l = []);
        var u = i.init;
        u === void 0 && (u = function () {});
        var f = i.getTransferables;
        if ((f === void 0 && (f = null), !r[o]))
            try {
                (l = l.map(function (m) {
                    return (
                        m &&
                            m.isWorkerModule &&
                            (e(m, function (v) {
                                if (v instanceof Error) throw v;
                            }),
                            (m = r[m.id].value)),
                        m
                    );
                })),
                    (u = n('<' + a + '>.init', u)),
                    f && (f = n('<' + a + '>.getTransferables', f));
                var d = null;
                typeof u == 'function'
                    ? (d = u.apply(void 0, l))
                    : console.error(
                          'worker module init function failed to rehydrate'
                      ),
                    (r[o] = { id: o, value: d, getTransferables: f }),
                    s(d);
            } catch (m) {
                (m && m.noLog) || console.error(m), s(m);
            }
    }
    function t(i, s) {
        var o,
            a = i.id,
            l = i.args;
        (!r[a] || typeof r[a].value != 'function') &&
            s(
                new Error(
                    'Worker module ' +
                        a +
                        ": not found or its 'init' did not return a function"
                )
            );
        try {
            var u = (o = r[a]).value.apply(o, l);
            u && typeof u.then == 'function'
                ? u.then(f, function (d) {
                      return s(d instanceof Error ? d : new Error('' + d));
                  })
                : f(u);
        } catch (d) {
            s(d);
        }
        function f(d) {
            try {
                var m = r[a].getTransferables && r[a].getTransferables(d);
                (!m || !Array.isArray(m) || !m.length) && (m = void 0), s(d, m);
            } catch (v) {
                console.error(v), s(v);
            }
        }
    }
    function n(i, s) {
        var o = void 0;
        self.troikaDefine = function (l) {
            return (o = l);
        };
        var a = URL.createObjectURL(
            new Blob(
                [
                    '/** ' +
                        i.replace(/\*/g, '') +
                        ` **/

troikaDefine(
` +
                        s +
                        `
)`,
                ],
                { type: 'application/javascript' }
            )
        );
        try {
            importScripts(a);
        } catch (l) {
            console.error(l);
        }
        return URL.revokeObjectURL(a), delete self.troikaDefine, o;
    }
    self.addEventListener('message', function (i) {
        var s = i.data,
            o = s.messageId,
            a = s.action,
            l = s.data;
        try {
            a === 'registerModule' &&
                e(l, function (u) {
                    u instanceof Error
                        ? postMessage({
                              messageId: o,
                              success: !1,
                              error: u.message,
                          })
                        : postMessage({
                              messageId: o,
                              success: !0,
                              result: { isCallable: typeof u == 'function' },
                          });
                }),
                a === 'callModule' &&
                    t(l, function (u, f) {
                        u instanceof Error
                            ? postMessage({
                                  messageId: o,
                                  success: !1,
                                  error: u.message,
                              })
                            : postMessage(
                                  { messageId: o, success: !0, result: u },
                                  f || void 0
                              );
                    });
        } catch (u) {
            postMessage({ messageId: o, success: !1, error: u.stack });
        }
    });
}
function EK(r) {
    var e = function () {
        for (var t = [], n = arguments.length; n--; ) t[n] = arguments[n];
        return e._getInitResult().then(function (i) {
            if (typeof i == 'function') return i.apply(void 0, t);
            throw new Error(
                'Worker module function was called but `init` did not return a callable function'
            );
        });
    };
    return (
        (e._getInitResult = function () {
            var t = r.dependencies,
                n = r.init;
            t = Array.isArray(t)
                ? t.map(function (s) {
                      return (
                          s &&
                              ((s = s.onMainThread || s),
                              s._getInitResult && (s = s._getInitResult())),
                          s
                      );
                  })
                : [];
            var i = Promise.all(t).then(function (s) {
                return n.apply(null, s);
            });
            return (
                (e._getInitResult = function () {
                    return i;
                }),
                i
            );
        }),
        e
    );
}
var ek = function () {
        var r = !1;
        if (typeof window < 'u' && typeof window.document < 'u')
            try {
                var e = new Worker(
                    URL.createObjectURL(
                        new Blob([''], { type: 'application/javascript' })
                    )
                );
                e.terminate(), (r = !0);
            } catch (t) {
                console.log(
                    'Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: [' +
                        t.message +
                        ']'
                );
            }
        return (
            (ek = function () {
                return r;
            }),
            r
        );
    },
    TK = 0,
    AK = 0,
    Mw = !1,
    Yg = Object.create(null),
    qg = Object.create(null),
    jM = Object.create(null);
function qp(r) {
    if ((!r || typeof r.init != 'function') && !Mw)
        throw new Error('requires `options.init` function');
    var e = r.dependencies,
        t = r.init,
        n = r.getTransferables,
        i = r.workerId,
        s = EK(r);
    i == null && (i = '#default');
    var o = 'workerModule' + ++TK,
        a = r.name || o,
        l = null;
    e =
        e &&
        e.map(function (f) {
            return (
                typeof f == 'function' &&
                    !f.workerModuleData &&
                    ((Mw = !0),
                    (f = qp({
                        workerId: i,
                        name: '<' + a + '> function dependency: ' + f.name,
                        init:
                            `function(){return (
` +
                            S_(f) +
                            `
)}`,
                    })),
                    (Mw = !1)),
                f && f.workerModuleData && (f = f.workerModuleData),
                f
            );
        });
    function u() {
        for (var f = [], d = arguments.length; d--; ) f[d] = arguments[d];
        if (!ek()) return s.apply(void 0, f);
        if (!l) {
            l = MP(i, 'registerModule', u.workerModuleData);
            var m = function () {
                (l = null), qg[i].delete(m);
            };
            (qg[i] || (qg[i] = new Set())).add(m);
        }
        return l.then(function (v) {
            var _ = v.isCallable;
            if (_) return MP(i, 'callModule', { id: o, args: f });
            throw new Error(
                'Worker module function was called but `init` did not return a callable function'
            );
        });
    }
    return (
        (u.workerModuleData = {
            isWorkerModule: !0,
            id: o,
            name: a,
            dependencies: e,
            init: S_(t),
            getTransferables: n && S_(n),
        }),
        (u.onMainThread = s),
        u
    );
}
function bK(r) {
    qg[r] &&
        qg[r].forEach(function (e) {
            e();
        }),
        Yg[r] && (Yg[r].terminate(), delete Yg[r]);
}
function S_(r) {
    var e = r.toString();
    return (
        !/^function/.test(e) && /^\w+\s*\(/.test(e) && (e = 'function ' + e), e
    );
}
function CK(r) {
    var e = Yg[r];
    if (!e) {
        var t = S_(MK);
        (e = Yg[r] =
            new Worker(
                URL.createObjectURL(
                    new Blob(
                        [
                            '/** Worker Module Bootstrap: ' +
                                r.replace(/\*/g, '') +
                                ` **/

;(` +
                                t +
                                ')()',
                        ],
                        { type: 'application/javascript' }
                    )
                )
            )),
            (e.onmessage = function (n) {
                var i = n.data,
                    s = i.messageId,
                    o = jM[s];
                if (!o)
                    throw new Error(
                        'WorkerModule response with empty or unknown messageId'
                    );
                delete jM[s], o(i);
            });
    }
    return e;
}
function MP(r, e, t) {
    return new Promise(function (n, i) {
        var s = ++AK;
        (jM[s] = function (o) {
            o.success
                ? n(o.result)
                : i(new Error('Error in worker ' + e + ' call: ' + o.error));
        }),
            CK(r).postMessage({ messageId: s, action: e, data: t });
    });
}
function tk() {
    var r = (function (e) {
        function t(se, J, F, $, fe, ne, ae, me) {
            var ge = 1 - ae;
            (me.x = ge * ge * se + 2 * ge * ae * F + ae * ae * fe),
                (me.y = ge * ge * J + 2 * ge * ae * $ + ae * ae * ne);
        }
        function n(se, J, F, $, fe, ne, ae, me, ge, Ae) {
            var je = 1 - ge;
            (Ae.x =
                je * je * je * se +
                3 * je * je * ge * F +
                3 * je * ge * ge * fe +
                ge * ge * ge * ae),
                (Ae.y =
                    je * je * je * J +
                    3 * je * je * ge * $ +
                    3 * je * ge * ge * ne +
                    ge * ge * ge * me);
        }
        function i(se, J) {
            for (
                var F = /([MLQCZ])([^MLQCZ]*)/g, $, fe, ne, ae, me;
                ($ = F.exec(se));

            ) {
                var ge = $[2]
                    .replace(/^\s*|\s*$/g, '')
                    .split(/[,\s]+/)
                    .map(function (Ae) {
                        return parseFloat(Ae);
                    });
                switch ($[1]) {
                    case 'M':
                        (ae = fe = ge[0]), (me = ne = ge[1]);
                        break;
                    case 'L':
                        (ge[0] !== ae || ge[1] !== me) &&
                            J('L', ae, me, (ae = ge[0]), (me = ge[1]));
                        break;
                    case 'Q': {
                        J(
                            'Q',
                            ae,
                            me,
                            (ae = ge[2]),
                            (me = ge[3]),
                            ge[0],
                            ge[1]
                        );
                        break;
                    }
                    case 'C': {
                        J(
                            'C',
                            ae,
                            me,
                            (ae = ge[4]),
                            (me = ge[5]),
                            ge[0],
                            ge[1],
                            ge[2],
                            ge[3]
                        );
                        break;
                    }
                    case 'Z':
                        (ae !== fe || me !== ne) && J('L', ae, me, fe, ne);
                        break;
                }
            }
        }
        function s(se, J, F) {
            F === void 0 && (F = 16);
            var $ = { x: 0, y: 0 };
            i(se, function (fe, ne, ae, me, ge, Ae, je, Qe, Ke) {
                switch (fe) {
                    case 'L':
                        J(ne, ae, me, ge);
                        break;
                    case 'Q': {
                        for (var X = ne, He = ae, Fe = 1; Fe < F; Fe++)
                            t(ne, ae, Ae, je, me, ge, Fe / (F - 1), $),
                                J(X, He, $.x, $.y),
                                (X = $.x),
                                (He = $.y);
                        break;
                    }
                    case 'C': {
                        for (var We = ne, Re = ae, st = 1; st < F; st++)
                            n(ne, ae, Ae, je, Qe, Ke, me, ge, st / (F - 1), $),
                                J(We, Re, $.x, $.y),
                                (We = $.x),
                                (Re = $.y);
                        break;
                    }
                }
            });
        }
        var o =
                'precision highp float;attribute vec2 aUV;varying vec2 vUV;void main(){vUV=aUV;gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}',
            a =
                'precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){gl_FragColor=texture2D(tex,vUV);}',
            l = new WeakMap(),
            u = {
                premultipliedAlpha: !1,
                preserveDrawingBuffer: !0,
                antialias: !1,
                depth: !1,
            };
        function f(se, J) {
            var F = se.getContext ? se.getContext('webgl', u) : se,
                $ = l.get(F);
            if (!$) {
                let je = function (We) {
                        var Re = ne[We];
                        if (!Re && ((Re = ne[We] = F.getExtension(We)), !Re))
                            throw new Error(We + ' not supported');
                        return Re;
                    },
                    Qe = function (We, Re) {
                        var st = F.createShader(Re);
                        return F.shaderSource(st, We), F.compileShader(st), st;
                    },
                    Ke = function (We, Re, st, De) {
                        if (!ae[We]) {
                            var Je = {},
                                te = {},
                                V = F.createProgram();
                            F.attachShader(V, Qe(Re, F.VERTEX_SHADER)),
                                F.attachShader(V, Qe(st, F.FRAGMENT_SHADER)),
                                F.linkProgram(V),
                                (ae[We] = {
                                    program: V,
                                    transaction: function (Le) {
                                        F.useProgram(V),
                                            Le({
                                                setUniform: function (Ce, gt) {
                                                    for (
                                                        var Xe = [],
                                                            Ze =
                                                                arguments.length -
                                                                2;
                                                        Ze-- > 0;

                                                    )
                                                        Xe[Ze] =
                                                            arguments[Ze + 2];
                                                    var at =
                                                        te[gt] ||
                                                        (te[gt] =
                                                            F.getUniformLocation(
                                                                V,
                                                                gt
                                                            ));
                                                    F['uniform' + Ce].apply(
                                                        F,
                                                        [at].concat(Xe)
                                                    );
                                                },
                                                setAttribute: function (
                                                    Ce,
                                                    gt,
                                                    Xe,
                                                    Ze,
                                                    at
                                                ) {
                                                    var Ye = Je[Ce];
                                                    Ye ||
                                                        (Ye = Je[Ce] =
                                                            {
                                                                buf: F.createBuffer(),
                                                                loc: F.getAttribLocation(
                                                                    V,
                                                                    Ce
                                                                ),
                                                                data: null,
                                                            }),
                                                        F.bindBuffer(
                                                            F.ARRAY_BUFFER,
                                                            Ye.buf
                                                        ),
                                                        F.vertexAttribPointer(
                                                            Ye.loc,
                                                            gt,
                                                            F.FLOAT,
                                                            !1,
                                                            0,
                                                            0
                                                        ),
                                                        F.enableVertexAttribArray(
                                                            Ye.loc
                                                        ),
                                                        fe
                                                            ? F.vertexAttribDivisor(
                                                                  Ye.loc,
                                                                  Ze
                                                              )
                                                            : je(
                                                                  'ANGLE_instanced_arrays'
                                                              ).vertexAttribDivisorANGLE(
                                                                  Ye.loc,
                                                                  Ze
                                                              ),
                                                        at !== Ye.data &&
                                                            (F.bufferData(
                                                                F.ARRAY_BUFFER,
                                                                at,
                                                                Xe
                                                            ),
                                                            (Ye.data = at));
                                                },
                                            });
                                    },
                                });
                        }
                        ae[We].transaction(De);
                    },
                    X = function (We, Re) {
                        ge++;
                        try {
                            F.activeTexture(F.TEXTURE0 + ge);
                            var st = me[We];
                            st ||
                                ((st = me[We] = F.createTexture()),
                                F.bindTexture(F.TEXTURE_2D, st),
                                F.texParameteri(
                                    F.TEXTURE_2D,
                                    F.TEXTURE_MIN_FILTER,
                                    F.NEAREST
                                ),
                                F.texParameteri(
                                    F.TEXTURE_2D,
                                    F.TEXTURE_MAG_FILTER,
                                    F.NEAREST
                                )),
                                F.bindTexture(F.TEXTURE_2D, st),
                                Re(st, ge);
                        } finally {
                            ge--;
                        }
                    },
                    He = function (We, Re, st) {
                        var De = F.createFramebuffer();
                        Ae.push(De),
                            F.bindFramebuffer(F.FRAMEBUFFER, De),
                            F.activeTexture(F.TEXTURE0 + Re),
                            F.bindTexture(F.TEXTURE_2D, We),
                            F.framebufferTexture2D(
                                F.FRAMEBUFFER,
                                F.COLOR_ATTACHMENT0,
                                F.TEXTURE_2D,
                                We,
                                0
                            );
                        try {
                            st(De);
                        } finally {
                            F.deleteFramebuffer(De),
                                F.bindFramebuffer(
                                    F.FRAMEBUFFER,
                                    Ae[--Ae.length - 1] || null
                                );
                        }
                    },
                    Fe = function () {
                        (ne = {}),
                            (ae = {}),
                            (me = {}),
                            (ge = -1),
                            (Ae.length = 0);
                    };
                var fe =
                        typeof WebGL2RenderingContext < 'u' &&
                        F instanceof WebGL2RenderingContext,
                    ne = {},
                    ae = {},
                    me = {},
                    ge = -1,
                    Ae = [];
                F.canvas.addEventListener(
                    'webglcontextlost',
                    function (We) {
                        Fe(), We.preventDefault();
                    },
                    !1
                ),
                    l.set(
                        F,
                        ($ = {
                            gl: F,
                            isWebGL2: fe,
                            getExtension: je,
                            withProgram: Ke,
                            withTexture: X,
                            withTextureFramebuffer: He,
                            handleContextLoss: Fe,
                        })
                    );
            }
            J($);
        }
        function d(se, J, F, $, fe, ne, ae, me) {
            ae === void 0 && (ae = 15),
                me === void 0 && (me = null),
                f(se, function (ge) {
                    var Ae = ge.gl,
                        je = ge.withProgram,
                        Qe = ge.withTexture;
                    Qe('copy', function (Ke, X) {
                        Ae.texImage2D(
                            Ae.TEXTURE_2D,
                            0,
                            Ae.RGBA,
                            fe,
                            ne,
                            0,
                            Ae.RGBA,
                            Ae.UNSIGNED_BYTE,
                            J
                        ),
                            je('copy', o, a, function (He) {
                                var Fe = He.setUniform,
                                    We = He.setAttribute;
                                We(
                                    'aUV',
                                    2,
                                    Ae.STATIC_DRAW,
                                    0,
                                    new Float32Array([0, 0, 2, 0, 0, 2])
                                ),
                                    Fe('1i', 'image', X),
                                    Ae.bindFramebuffer(
                                        Ae.FRAMEBUFFER,
                                        me || null
                                    ),
                                    Ae.disable(Ae.BLEND),
                                    Ae.colorMask(
                                        ae & 8,
                                        ae & 4,
                                        ae & 2,
                                        ae & 1
                                    ),
                                    Ae.viewport(F, $, fe, ne),
                                    Ae.scissor(F, $, fe, ne),
                                    Ae.drawArrays(Ae.TRIANGLES, 0, 3);
                            });
                    });
                });
        }
        function m(se, J, F) {
            var $ = se.width,
                fe = se.height;
            f(se, function (ne) {
                var ae = ne.gl,
                    me = new Uint8Array($ * fe * 4);
                ae.readPixels(0, 0, $, fe, ae.RGBA, ae.UNSIGNED_BYTE, me),
                    (se.width = J),
                    (se.height = F),
                    d(ae, me, 0, 0, $, fe);
            });
        }
        var v = Object.freeze({
            __proto__: null,
            withWebGLContext: f,
            renderImageData: d,
            resizeWebGLCanvasWithoutClearing: m,
        });
        function _(se, J, F, $, fe, ne) {
            ne === void 0 && (ne = 1);
            var ae = new Uint8Array(se * J),
                me = $[2] - $[0],
                ge = $[3] - $[1],
                Ae = [];
            s(F, function (We, Re, st, De) {
                Ae.push({
                    x1: We,
                    y1: Re,
                    x2: st,
                    y2: De,
                    minX: Math.min(We, st),
                    minY: Math.min(Re, De),
                    maxX: Math.max(We, st),
                    maxY: Math.max(Re, De),
                });
            }),
                Ae.sort(function (We, Re) {
                    return We.maxX - Re.maxX;
                });
            for (var je = 0; je < se; je++)
                for (var Qe = 0; Qe < J; Qe++) {
                    var Ke = He(
                            $[0] + (me * (je + 0.5)) / se,
                            $[1] + (ge * (Qe + 0.5)) / J
                        ),
                        X = Math.pow(1 - Math.abs(Ke) / fe, ne) / 2;
                    Ke < 0 && (X = 1 - X),
                        (X = Math.max(0, Math.min(255, Math.round(X * 255)))),
                        (ae[Qe * se + je] = X);
                }
            return ae;
            function He(We, Re) {
                for (var st = 1 / 0, De = 1 / 0, Je = Ae.length; Je--; ) {
                    var te = Ae[Je];
                    if (te.maxX + De <= We) break;
                    if (
                        We + De > te.minX &&
                        Re - De < te.maxY &&
                        Re + De > te.minY
                    ) {
                        var V = x(We, Re, te.x1, te.y1, te.x2, te.y2);
                        V < st && ((st = V), (De = Math.sqrt(st)));
                    }
                }
                return Fe(We, Re) && (De = -De), De;
            }
            function Fe(We, Re) {
                for (var st = 0, De = Ae.length; De--; ) {
                    var Je = Ae[De];
                    if (Je.maxX <= We) break;
                    var te =
                        Je.y1 > Re != Je.y2 > Re &&
                        We <
                            ((Je.x2 - Je.x1) * (Re - Je.y1)) / (Je.y2 - Je.y1) +
                                Je.x1;
                    te && (st += Je.y1 < Je.y2 ? 1 : -1);
                }
                return st !== 0;
            }
        }
        function S(se, J, F, $, fe, ne, ae, me, ge, Ae) {
            ne === void 0 && (ne = 1),
                me === void 0 && (me = 0),
                ge === void 0 && (ge = 0),
                Ae === void 0 && (Ae = 0),
                w(se, J, F, $, fe, ne, ae, null, me, ge, Ae);
        }
        function w(se, J, F, $, fe, ne, ae, me, ge, Ae, je) {
            ne === void 0 && (ne = 1),
                ge === void 0 && (ge = 0),
                Ae === void 0 && (Ae = 0),
                je === void 0 && (je = 0);
            for (
                var Qe = _(se, J, F, $, fe, ne),
                    Ke = new Uint8Array(Qe.length * 4),
                    X = 0;
                X < Qe.length;
                X++
            )
                Ke[X * 4 + je] = Qe[X];
            d(ae, Ke, ge, Ae, se, J, 1 << (3 - je), me);
        }
        function x(se, J, F, $, fe, ne) {
            var ae = fe - F,
                me = ne - $,
                ge = ae * ae + me * me,
                Ae = ge
                    ? Math.max(
                          0,
                          Math.min(1, ((se - F) * ae + (J - $) * me) / ge)
                      )
                    : 0,
                je = se - (F + Ae * ae),
                Qe = J - ($ + Ae * me);
            return je * je + Qe * Qe;
        }
        var A = Object.freeze({
                __proto__: null,
                generate: _,
                generateIntoCanvas: S,
                generateIntoFramebuffer: w,
            }),
            T =
                'precision highp float;uniform vec4 uGlyphBounds;attribute vec2 aUV;attribute vec4 aLineSegment;varying vec4 vLineSegment;varying vec2 vGlyphXY;void main(){vLineSegment=aLineSegment;vGlyphXY=mix(uGlyphBounds.xy,uGlyphBounds.zw,aUV);gl_Position=vec4(mix(vec2(-1.0),vec2(1.0),aUV),0.0,1.0);}',
            b =
                'precision highp float;uniform vec4 uGlyphBounds;uniform float uMaxDistance;uniform float uExponent;varying vec4 vLineSegment;varying vec2 vGlyphXY;float absDistToSegment(vec2 point,vec2 lineA,vec2 lineB){vec2 lineDir=lineB-lineA;float lenSq=dot(lineDir,lineDir);float t=lenSq==0.0 ? 0.0 : clamp(dot(point-lineA,lineDir)/lenSq,0.0,1.0);vec2 linePt=lineA+t*lineDir;return distance(point,linePt);}void main(){vec4 seg=vLineSegment;vec2 p=vGlyphXY;float dist=absDistToSegment(p,seg.xy,seg.zw);float val=pow(1.0-clamp(dist/uMaxDistance,0.0,1.0),uExponent)*0.5;bool crossing=(seg.y>p.y!=seg.w>p.y)&&(p.x<(seg.z-seg.x)*(p.y-seg.y)/(seg.w-seg.y)+seg.x);bool crossingUp=crossing&&vLineSegment.y<vLineSegment.w;gl_FragColor=vec4(crossingUp ? 1.0/255.0 : 0.0,crossing&&!crossingUp ? 1.0/255.0 : 0.0,0.0,val);}',
            P =
                'precision highp float;uniform sampler2D tex;varying vec2 vUV;void main(){vec4 color=texture2D(tex,vUV);bool inside=color.r!=color.g;float val=inside ? 1.0-color.a : color.a;gl_FragColor=vec4(val);}',
            L = new Float32Array([0, 0, 2, 0, 0, 2]),
            D = null,
            O = !1,
            I = {},
            U = new WeakMap();
        function H(se) {
            if (!O && !le(se))
                throw new Error('WebGL generation not supported');
        }
        function W(se, J, F, $, fe, ne, ae) {
            if (
                (ne === void 0 && (ne = 1),
                ae === void 0 && (ae = null),
                !ae && ((ae = D), !ae))
            ) {
                var me =
                    typeof OffscreenCanvas == 'function'
                        ? new OffscreenCanvas(1, 1)
                        : typeof document < 'u'
                          ? document.createElement('canvas')
                          : null;
                if (!me)
                    throw new Error(
                        'OffscreenCanvas or DOM canvas not supported'
                    );
                ae = D = me.getContext('webgl', { depth: !1 });
            }
            H(ae);
            var ge = new Uint8Array(se * J * 4);
            f(ae, function (Ke) {
                var X = Ke.gl,
                    He = Ke.withTexture,
                    Fe = Ke.withTextureFramebuffer;
                He('readable', function (We, Re) {
                    X.texImage2D(
                        X.TEXTURE_2D,
                        0,
                        X.RGBA,
                        se,
                        J,
                        0,
                        X.RGBA,
                        X.UNSIGNED_BYTE,
                        null
                    ),
                        Fe(We, Re, function (st) {
                            K(se, J, F, $, fe, ne, X, st, 0, 0, 0),
                                X.readPixels(
                                    0,
                                    0,
                                    se,
                                    J,
                                    X.RGBA,
                                    X.UNSIGNED_BYTE,
                                    ge
                                );
                        });
                });
            });
            for (
                var Ae = new Uint8Array(se * J), je = 0, Qe = 0;
                je < ge.length;
                je += 4
            )
                Ae[Qe++] = ge[je];
            return Ae;
        }
        function q(se, J, F, $, fe, ne, ae, me, ge, Ae) {
            ne === void 0 && (ne = 1),
                me === void 0 && (me = 0),
                ge === void 0 && (ge = 0),
                Ae === void 0 && (Ae = 0),
                K(se, J, F, $, fe, ne, ae, null, me, ge, Ae);
        }
        function K(se, J, F, $, fe, ne, ae, me, ge, Ae, je) {
            ne === void 0 && (ne = 1),
                ge === void 0 && (ge = 0),
                Ae === void 0 && (Ae = 0),
                je === void 0 && (je = 0),
                H(ae);
            var Qe = [];
            s(F, function (Ke, X, He, Fe) {
                Qe.push(Ke, X, He, Fe);
            }),
                (Qe = new Float32Array(Qe)),
                f(ae, function (Ke) {
                    var X = Ke.gl,
                        He = Ke.isWebGL2,
                        Fe = Ke.getExtension,
                        We = Ke.withProgram,
                        Re = Ke.withTexture,
                        st = Ke.withTextureFramebuffer,
                        De = Ke.handleContextLoss;
                    if (
                        (Re('rawDistances', function (Je, te) {
                            (se !== Je._lastWidth || J !== Je._lastHeight) &&
                                X.texImage2D(
                                    X.TEXTURE_2D,
                                    0,
                                    X.RGBA,
                                    (Je._lastWidth = se),
                                    (Je._lastHeight = J),
                                    0,
                                    X.RGBA,
                                    X.UNSIGNED_BYTE,
                                    null
                                ),
                                We('main', T, b, function (V) {
                                    var Me = V.setAttribute,
                                        Le = V.setUniform,
                                        Ie =
                                            !He && Fe('ANGLE_instanced_arrays'),
                                        Ce = !He && Fe('EXT_blend_minmax');
                                    Me('aUV', 2, X.STATIC_DRAW, 0, L),
                                        Me(
                                            'aLineSegment',
                                            4,
                                            X.DYNAMIC_DRAW,
                                            1,
                                            Qe
                                        ),
                                        Le.apply(
                                            void 0,
                                            ['4f', 'uGlyphBounds'].concat($)
                                        ),
                                        Le('1f', 'uMaxDistance', fe),
                                        Le('1f', 'uExponent', ne),
                                        st(Je, te, function (gt) {
                                            X.enable(X.BLEND),
                                                X.colorMask(!0, !0, !0, !0),
                                                X.viewport(0, 0, se, J),
                                                X.scissor(0, 0, se, J),
                                                X.blendFunc(X.ONE, X.ONE),
                                                X.blendEquationSeparate(
                                                    X.FUNC_ADD,
                                                    He ? X.MAX : Ce.MAX_EXT
                                                ),
                                                X.clear(X.COLOR_BUFFER_BIT),
                                                He
                                                    ? X.drawArraysInstanced(
                                                          X.TRIANGLES,
                                                          0,
                                                          3,
                                                          Qe.length / 4
                                                      )
                                                    : Ie.drawArraysInstancedANGLE(
                                                          X.TRIANGLES,
                                                          0,
                                                          3,
                                                          Qe.length / 4
                                                      );
                                        });
                                }),
                                We('post', o, P, function (V) {
                                    V.setAttribute(
                                        'aUV',
                                        2,
                                        X.STATIC_DRAW,
                                        0,
                                        L
                                    ),
                                        V.setUniform('1i', 'tex', te),
                                        X.bindFramebuffer(X.FRAMEBUFFER, me),
                                        X.disable(X.BLEND),
                                        X.colorMask(
                                            je === 0,
                                            je === 1,
                                            je === 2,
                                            je === 3
                                        ),
                                        X.viewport(ge, Ae, se, J),
                                        X.scissor(ge, Ae, se, J),
                                        X.drawArrays(X.TRIANGLES, 0, 3);
                                });
                        }),
                        X.isContextLost())
                    )
                        throw (De(), new Error('webgl context lost'));
                });
        }
        function le(se) {
            var J = !se || se === D ? I : se.canvas || se,
                F = U.get(J);
            if (F === void 0) {
                O = !0;
                var $ = null;
                try {
                    var fe = [
                            97, 106, 97, 61, 99, 137, 118, 80, 80, 118, 137, 99,
                            61, 97, 106, 97,
                        ],
                        ne = W(
                            4,
                            4,
                            'M8,8L16,8L24,24L16,24Z',
                            [0, 0, 32, 32],
                            24,
                            1,
                            se
                        );
                    (F =
                        ne &&
                        fe.length === ne.length &&
                        ne.every(function (ae, me) {
                            return ae === fe[me];
                        })),
                        F ||
                            (($ = 'bad trial run results'),
                            console.info(fe, ne));
                } catch (ae) {
                    (F = !1), ($ = ae.message);
                }
                $ && console.warn('WebGL SDF generation not supported:', $),
                    (O = !1),
                    U.set(J, F);
            }
            return F;
        }
        var ee = Object.freeze({
            __proto__: null,
            generate: W,
            generateIntoCanvas: q,
            generateIntoFramebuffer: K,
            isSupported: le,
        });
        function de(se, J, F, $, fe, ne) {
            fe === void 0 && (fe = Math.max($[2] - $[0], $[3] - $[1]) / 2),
                ne === void 0 && (ne = 1);
            try {
                return W.apply(ee, arguments);
            } catch (ae) {
                return (
                    console.info(
                        'WebGL SDF generation failed, falling back to JS',
                        ae
                    ),
                    _.apply(A, arguments)
                );
            }
        }
        function Z(se, J, F, $, fe, ne, ae, me, ge, Ae) {
            fe === void 0 && (fe = Math.max($[2] - $[0], $[3] - $[1]) / 2),
                ne === void 0 && (ne = 1),
                me === void 0 && (me = 0),
                ge === void 0 && (ge = 0),
                Ae === void 0 && (Ae = 0);
            try {
                return q.apply(ee, arguments);
            } catch (je) {
                return (
                    console.info(
                        'WebGL SDF generation failed, falling back to JS',
                        je
                    ),
                    S.apply(A, arguments)
                );
            }
        }
        return (
            (e.forEachPathCommand = i),
            (e.generate = de),
            (e.generateIntoCanvas = Z),
            (e.javascript = A),
            (e.pathToLineSegments = s),
            (e.webgl = ee),
            (e.webglUtils = v),
            Object.defineProperty(e, '__esModule', { value: !0 }),
            e
        );
    })({});
    return r;
}
function RK() {
    var r = (function (e) {
        var t = {
                R: '13k,1a,2,3,3,2+1j,ch+16,a+1,5+2,2+n,5,a,4,6+16,4+3,h+1b,4mo,179q,2+9,2+11,2i9+7y,2+68,4,3+4,5+13,4+3,2+4k,3+29,8+cf,1t+7z,w+17,3+3m,1t+3z,16o1+5r,8+30,8+mc,29+1r,29+4v,75+73',
                EN: '1c+9,3d+1,6,187+9,513,4+5,7+9,sf+j,175h+9,qw+q,161f+1d,4xt+a,25i+9',
                ES: '17,2,6dp+1,f+1,av,16vr,mx+1,4o,2',
                ET: 'z+2,3h+3,b+1,ym,3e+1,2o,p4+1,8,6u,7c,g6,1wc,1n9+4,30+1b,2n,6d,qhx+1,h0m,a+1,49+2,63+1,4+1,6bb+3,12jj',
                AN: '16o+5,2j+9,2+1,35,ed,1ff2+9,87+u',
                CS: '18,2+1,b,2u,12k,55v,l,17v0,2,3,53,2+1,b',
                B: 'a,3,f+2,2v,690',
                S: '9,2,k',
                WS: 'c,k,4f4,1vk+a,u,1j,335',
                ON: 'x+1,4+4,h+5,r+5,r+3,z,5+3,2+1,2+1,5,2+2,3+4,o,w,ci+1,8+d,3+d,6+8,2+g,39+1,9,6+1,2,33,b8,3+1,3c+1,7+1,5r,b,7h+3,sa+5,2,3i+6,jg+3,ur+9,2v,ij+1,9g+9,7+a,8m,4+1,49+x,14u,2+2,c+2,e+2,e+2,e+1,i+n,e+e,2+p,u+2,e+2,36+1,2+3,2+1,b,2+2,6+5,2,2,2,h+1,5+4,6+3,3+f,16+2,5+3l,3+81,1y+p,2+40,q+a,m+13,2r+ch,2+9e,75+hf,3+v,2+2w,6e+5,f+6,75+2a,1a+p,2+2g,d+5x,r+b,6+3,4+o,g,6+1,6+2,2k+1,4,2j,5h+z,1m+1,1e+f,t+2,1f+e,d+3,4o+3,2s+1,w,535+1r,h3l+1i,93+2,2s,b+1,3l+x,2v,4g+3,21+3,kz+1,g5v+1,5a,j+9,n+v,2,3,2+8,2+1,3+2,2,3,46+1,4+4,h+5,r+5,r+a,3h+2,4+6,b+4,78,1r+24,4+c,4,1hb,ey+6,103+j,16j+c,1ux+7,5+g,fsh,jdq+1t,4,57+2e,p1,1m,1m,1m,1m,4kt+1,7j+17,5+2r,d+e,3+e,2+e,2+10,m+4,w,1n+5,1q,4z+5,4b+rb,9+c,4+c,4+37,d+2g,8+b,l+b,5+1j,9+9,7+13,9+t,3+1,27+3c,2+29,2+3q,d+d,3+4,4+2,6+6,a+o,8+6,a+2,e+6,16+42,2+1i',
                BN: '0+8,6+d,2s+5,2+p,e,4m9,1kt+2,2b+5,5+5,17q9+v,7k,6p+8,6+1,119d+3,440+7,96s+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+1,1ekf+75,6p+2rz,1ben+1,1ekf+1,1ekf+1',
                NSM: 'lc+33,7o+6,7c+18,2,2+1,2+1,2,21+a,1d+k,h,2u+6,3+5,3+1,2+3,10,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,g+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+g,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,k1+w,2db+2,3y,2p+v,ff+3,30+1,n9x+3,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,r2,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+5,3+1,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2d+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,f0c+4,1o+6,t5,1s+3,2a,f5l+1,43t+2,i+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,gzhy+6n',
                AL: '16w,3,2,e+1b,z+2,2+2s,g+1,8+1,b+m,2+t,s+2i,c+e,4h+f,1d+1e,1bwe+dp,3+3z,x+c,2+1,35+3y,2rm+z,5+7,b+5,dt+l,c+u,17nl+27,1t+27,4x+6n,3+d',
                LRO: '6ct',
                RLO: '6cu',
                LRE: '6cq',
                RLE: '6cr',
                PDF: '6cs',
                LRI: '6ee',
                RLI: '6ef',
                FSI: '6eg',
                PDI: '6eh',
            },
            n = {},
            i = {};
        (n.L = 1),
            (i[1] = 'L'),
            Object.keys(t).forEach(function (De, Je) {
                (n[De] = 1 << (Je + 1)), (i[n[De]] = De);
            }),
            Object.freeze(n);
        var s = n.LRI | n.RLI | n.FSI,
            o = n.L | n.R | n.AL,
            a = n.B | n.S | n.WS | n.ON | n.FSI | n.LRI | n.RLI | n.PDI,
            l = n.BN | n.RLE | n.LRE | n.RLO | n.LRO | n.PDF,
            u = n.S | n.WS | n.B | s | n.PDI | l,
            f = null;
        function d() {
            if (!f) {
                f = new Map();
                var De = function (te) {
                    if (t.hasOwnProperty(te)) {
                        var V = 0;
                        t[te].split(',').forEach(function (Me) {
                            var Le = Me.split('+'),
                                Ie = Le[0],
                                Ce = Le[1];
                            (Ie = parseInt(Ie, 36)),
                                (Ce = Ce ? parseInt(Ce, 36) : 0),
                                f.set((V += Ie), n[te]);
                            for (var gt = 0; gt < Ce; gt++) f.set(++V, n[te]);
                        });
                    }
                };
                for (var Je in t) De(Je);
            }
        }
        function m(De) {
            return d(), f.get(De.codePointAt(0)) || n.L;
        }
        function v(De) {
            return i[m(De)];
        }
        var _ = {
            pairs: '14>1,1e>2,u>2,2wt>1,1>1,1ge>1,1wp>1,1j>1,f>1,hm>1,1>1,u>1,u6>1,1>1,+5,28>1,w>1,1>1,+3,b8>1,1>1,+3,1>3,-1>-1,3>1,1>1,+2,1s>1,1>1,x>1,th>1,1>1,+2,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,4q>1,1e>2,u>2,2>1,+1',
            canonical:
                '6f1>-6dx,6dy>-6dx,6ec>-6ed,6ee>-6ed,6ww>2jj,-2ji>2jj,14r4>-1e7l,1e7m>-1e7l,1e7m>-1e5c,1e5d>-1e5b,1e5c>-14qx,14qy>-14qx,14vn>-1ecg,1ech>-1ecg,1edu>-1ecg,1eci>-1ecg,1eda>-1ecg,1eci>-1ecg,1eci>-168q,168r>-168q,168s>-14ye,14yf>-14ye',
        };
        function S(De, Je) {
            var te = 36,
                V = 0,
                Me = new Map(),
                Le = Je && new Map(),
                Ie;
            return (
                De.split(',').forEach(function Ce(gt) {
                    if (gt.indexOf('+') !== -1)
                        for (var Xe = +gt; Xe--; ) Ce(Ie);
                    else {
                        Ie = gt;
                        var Ze = gt.split('>'),
                            at = Ze[0],
                            Ye = Ze[1];
                        (at = String.fromCodePoint((V += parseInt(at, te)))),
                            (Ye = String.fromCodePoint(
                                (V += parseInt(Ye, te))
                            )),
                            Me.set(at, Ye),
                            Je && Le.set(Ye, at);
                    }
                }),
                { map: Me, reverseMap: Le }
            );
        }
        var w, x, A;
        function T() {
            if (!w) {
                var De = S(_.pairs, !0),
                    Je = De.map,
                    te = De.reverseMap;
                (w = Je), (x = te), (A = S(_.canonical, !1).map);
            }
        }
        function b(De) {
            return T(), w.get(De) || null;
        }
        function P(De) {
            return T(), x.get(De) || null;
        }
        function L(De) {
            return T(), A.get(De) || null;
        }
        var D = n.L,
            O = n.R,
            I = n.EN,
            U = n.ES,
            H = n.ET,
            W = n.AN,
            q = n.CS,
            K = n.B,
            le = n.S,
            ee = n.ON,
            de = n.BN,
            Z = n.NSM,
            se = n.AL,
            J = n.LRO,
            F = n.RLO,
            $ = n.LRE,
            fe = n.RLE,
            ne = n.PDF,
            ae = n.LRI,
            me = n.RLI,
            ge = n.FSI,
            Ae = n.PDI;
        function je(De, Je) {
            for (
                var te = 125, V = new Uint32Array(De.length), Me = 0;
                Me < De.length;
                Me++
            )
                V[Me] = m(De[Me]);
            var Le = new Map();
            function Ie(Oi, Xi) {
                var Ti = V[Oi];
                (V[Oi] = Xi),
                    Le.set(Ti, Le.get(Ti) - 1),
                    Ti & a && Le.set(a, Le.get(a) - 1),
                    Le.set(Xi, (Le.get(Xi) || 0) + 1),
                    Xi & a && Le.set(a, (Le.get(a) || 0) + 1);
            }
            for (
                var Ce = new Uint8Array(De.length),
                    gt = new Map(),
                    Xe = [],
                    Ze = null,
                    at = 0;
                at < De.length;
                at++
            )
                Ze ||
                    Xe.push(
                        (Ze = {
                            start: at,
                            end: De.length - 1,
                            level:
                                Je === 'rtl'
                                    ? 1
                                    : Je === 'ltr'
                                      ? 0
                                      : rr(at, !1),
                        })
                    ),
                    V[at] & K && ((Ze.end = at), (Ze = null));
            for (
                var Ye = fe | $ | F | J | s | Ae | ne | K,
                    ot = function (Oi) {
                        return Oi + (Oi & 1 ? 1 : 2);
                    },
                    kt = function (Oi) {
                        return Oi + (Oi & 1 ? 2 : 1);
                    },
                    pt = 0;
                pt < Xe.length;
                pt++
            ) {
                Ze = Xe[pt];
                var et = [{ _level: Ze.level, _override: 0, _isolate: 0 }],
                    lt = void 0,
                    Ct = 0,
                    Dt = 0,
                    _e = 0;
                Le.clear();
                for (var nt = Ze.start; nt <= Ze.end; nt++) {
                    var ve = V[nt];
                    if (
                        ((lt = et[et.length - 1]),
                        Le.set(ve, (Le.get(ve) || 0) + 1),
                        ve & a && Le.set(a, (Le.get(a) || 0) + 1),
                        ve & Ye)
                    )
                        if (ve & (fe | $)) {
                            Ce[nt] = lt._level;
                            var Be = (ve === fe ? kt : ot)(lt._level);
                            Be <= te && !Ct && !Dt
                                ? et.push({
                                      _level: Be,
                                      _override: 0,
                                      _isolate: 0,
                                  })
                                : Ct || Dt++;
                        } else if (ve & (F | J)) {
                            Ce[nt] = lt._level;
                            var ht = (ve === F ? kt : ot)(lt._level);
                            ht <= te && !Ct && !Dt
                                ? et.push({
                                      _level: ht,
                                      _override: ve & F ? O : D,
                                      _isolate: 0,
                                  })
                                : Ct || Dt++;
                        } else if (ve & s) {
                            ve & ge && (ve = rr(nt + 1, !0) === 1 ? me : ae),
                                (Ce[nt] = lt._level),
                                lt._override && Ie(nt, lt._override);
                            var wt = (ve === me ? kt : ot)(lt._level);
                            wt <= te && Ct === 0 && Dt === 0
                                ? (_e++,
                                  et.push({
                                      _level: wt,
                                      _override: 0,
                                      _isolate: 1,
                                      _isolInitIndex: nt,
                                  }))
                                : Ct++;
                        } else if (ve & Ae) {
                            if (Ct > 0) Ct--;
                            else if (_e > 0) {
                                for (Dt = 0; !et[et.length - 1]._isolate; )
                                    et.pop();
                                var Et = et[et.length - 1]._isolInitIndex;
                                Et != null && (gt.set(Et, nt), gt.set(nt, Et)),
                                    et.pop(),
                                    _e--;
                            }
                            (lt = et[et.length - 1]),
                                (Ce[nt] = lt._level),
                                lt._override && Ie(nt, lt._override);
                        } else
                            ve & ne
                                ? (Ct === 0 &&
                                      (Dt > 0
                                          ? Dt--
                                          : !lt._isolate &&
                                            et.length > 1 &&
                                            (et.pop(),
                                            (lt = et[et.length - 1]))),
                                  (Ce[nt] = lt._level))
                                : ve & K && (Ce[nt] = Ze.level);
                    else
                        (Ce[nt] = lt._level),
                            lt._override && ve !== de && Ie(nt, lt._override);
                }
                for (
                    var Qt = [], en = null, Mt = Ze.start;
                    Mt <= Ze.end;
                    Mt++
                ) {
                    var hn = V[Mt];
                    if (!(hn & l)) {
                        var Pn = Ce[Mt],
                            jn = hn & s,
                            An = hn === Ae;
                        en && Pn === en._level
                            ? ((en._end = Mt), (en._endsWithIsolInit = jn))
                            : Qt.push(
                                  (en = {
                                      _start: Mt,
                                      _end: Mt,
                                      _level: Pn,
                                      _startsWithPDI: An,
                                      _endsWithIsolInit: jn,
                                  })
                              );
                    }
                }
                for (var di = [], Gi = 0; Gi < Qt.length; Gi++) {
                    var _i = Qt[Gi];
                    if (
                        !_i._startsWithPDI ||
                        (_i._startsWithPDI && !gt.has(_i._start))
                    ) {
                        for (
                            var si = [(en = _i)], Qn = void 0;
                            en &&
                            en._endsWithIsolInit &&
                            (Qn = gt.get(en._end)) != null;

                        )
                            for (var Xt = Gi + 1; Xt < Qt.length; Xt++)
                                if (Qt[Xt]._start === Qn) {
                                    si.push((en = Qt[Xt]));
                                    break;
                                }
                        for (var pi = [], $r = 0; $r < si.length; $r++)
                            for (var G = si[$r], Q = G._start; Q <= G._end; Q++)
                                pi.push(Q);
                        for (
                            var xe = Ce[pi[0]], z = Ze.level, ie = pi[0] - 1;
                            ie >= 0;
                            ie--
                        )
                            if (!(V[ie] & l)) {
                                z = Ce[ie];
                                break;
                            }
                        var oe = pi[pi.length - 1],
                            pe = Ce[oe],
                            ue = Ze.level;
                        if (!(V[oe] & s)) {
                            for (var Pe = oe + 1; Pe <= Ze.end; Pe++)
                                if (!(V[Pe] & l)) {
                                    ue = Ce[Pe];
                                    break;
                                }
                        }
                        di.push({
                            _seqIndices: pi,
                            _sosType: Math.max(z, xe) % 2 ? O : D,
                            _eosType: Math.max(ue, pe) % 2 ? O : D,
                        });
                    }
                }
                for (var Ue = 0; Ue < di.length; Ue++) {
                    var Ve = di[Ue],
                        ye = Ve._seqIndices,
                        _t = Ve._sosType,
                        rt = Ve._eosType,
                        it = Ce[ye[0]] & 1 ? O : D;
                    if (Le.get(Z))
                        for (var xt = 0; xt < ye.length; xt++) {
                            var Pt = ye[xt];
                            if (V[Pt] & Z) {
                                for (var Nt = _t, Wt = xt - 1; Wt >= 0; Wt--)
                                    if (!(V[ye[Wt]] & l)) {
                                        Nt = V[ye[Wt]];
                                        break;
                                    }
                                Ie(Pt, Nt & (s | Ae) ? ee : Nt);
                            }
                        }
                    if (Le.get(I))
                        for (var mt = 0; mt < ye.length; mt++) {
                            var ut = ye[mt];
                            if (V[ut] & I)
                                for (var Lt = mt - 1; Lt >= -1; Lt--) {
                                    var Bt = Lt === -1 ? _t : V[ye[Lt]];
                                    if (Bt & o) {
                                        Bt === se && Ie(ut, W);
                                        break;
                                    }
                                }
                        }
                    if (Le.get(se))
                        for (var jt = 0; jt < ye.length; jt++) {
                            var wn = ye[jt];
                            V[wn] & se && Ie(wn, O);
                        }
                    if (Le.get(U) || Le.get(q))
                        for (var yn = 1; yn < ye.length - 1; yn++) {
                            var Dn = ye[yn];
                            if (V[Dn] & (U | q)) {
                                for (
                                    var $t = 0, tn = 0, Xn = yn - 1;
                                    Xn >= 0 && (($t = V[ye[Xn]]), !!($t & l));
                                    Xn--
                                );
                                for (
                                    var nn = yn + 1;
                                    nn < ye.length &&
                                    ((tn = V[ye[nn]]), !!(tn & l));
                                    nn++
                                );
                                $t === tn &&
                                    (V[Dn] === U ? $t === I : $t & (I | W)) &&
                                    Ie(Dn, $t);
                            }
                        }
                    if (Le.get(I))
                        for (var Jt = 0; Jt < ye.length; Jt++) {
                            var Bn = ye[Jt];
                            if (V[Bn] & I) {
                                for (
                                    var Wi = Jt - 1;
                                    Wi >= 0 && V[ye[Wi]] & (H | l);
                                    Wi--
                                )
                                    Ie(ye[Wi], I);
                                for (
                                    Jt++;
                                    Jt < ye.length && V[ye[Jt]] & (H | l | I);
                                    Jt++
                                )
                                    V[ye[Jt]] !== I && Ie(ye[Jt], I);
                            }
                        }
                    if (Le.get(H) || Le.get(U) || Le.get(q))
                        for (var ei = 0; ei < ye.length; ei++) {
                            var ys = ye[ei];
                            if (V[ys] & (H | U | q)) {
                                Ie(ys, ee);
                                for (
                                    var ao = ei - 1;
                                    ao >= 0 && V[ye[ao]] & l;
                                    ao--
                                )
                                    Ie(ye[ao], ee);
                                for (
                                    var Sn = ei + 1;
                                    Sn < ye.length && V[ye[Sn]] & l;
                                    Sn++
                                )
                                    Ie(ye[Sn], ee);
                            }
                        }
                    if (Le.get(I))
                        for (var Oo = 0, Za = _t; Oo < ye.length; Oo++) {
                            var Cu = ye[Oo],
                                Ru = V[Cu];
                            Ru & I
                                ? Za === D && Ie(Cu, D)
                                : Ru & o && (Za = Ru);
                        }
                    if (Le.get(a)) {
                        var Uo = O | I | W,
                            Ol = Uo | D,
                            Fs = [];
                        {
                            for (var lo = [], gr = 0; gr < ye.length; gr++)
                                if (V[ye[gr]] & a) {
                                    var sn = De[ye[gr]],
                                        Bs = void 0;
                                    if (b(sn) !== null)
                                        if (lo.length < 63)
                                            lo.push({ char: sn, seqIndex: gr });
                                        else break;
                                    else if ((Bs = P(sn)) !== null)
                                        for (
                                            var _s = lo.length - 1;
                                            _s >= 0;
                                            _s--
                                        ) {
                                            var ko = lo[_s].char;
                                            if (
                                                ko === Bs ||
                                                ko === P(L(sn)) ||
                                                b(L(ko)) === sn
                                            ) {
                                                Fs.push([lo[_s].seqIndex, gr]),
                                                    (lo.length = _s);
                                                break;
                                            }
                                        }
                                }
                            Fs.sort(function (Oi, Xi) {
                                return Oi[0] - Xi[0];
                            });
                        }
                        for (var zs = 0; zs < Fs.length; zs++) {
                            for (
                                var Th = Fs[zs],
                                    oi = Th[0],
                                    uo = Th[1],
                                    Ah = !1,
                                    Rr = 0,
                                    $a = oi + 1;
                                $a < uo;
                                $a++
                            ) {
                                var Ja = ye[$a];
                                if (V[Ja] & Ol) {
                                    Ah = !0;
                                    var xs = V[Ja] & Uo ? O : D;
                                    if (xs === it) {
                                        Rr = xs;
                                        break;
                                    }
                                }
                            }
                            if (Ah && !Rr) {
                                Rr = _t;
                                for (var sa = oi - 1; sa >= 0; sa--) {
                                    var Qa = ye[sa];
                                    if (V[Qa] & Ol) {
                                        var tr = V[Qa] & Uo ? O : D;
                                        tr !== it ? (Rr = tr) : (Rr = it);
                                        break;
                                    }
                                }
                            }
                            if (Rr) {
                                if (((V[ye[oi]] = V[ye[uo]] = Rr), Rr !== it)) {
                                    for (var nr = oi + 1; nr < ye.length; nr++)
                                        if (!(V[ye[nr]] & l)) {
                                            m(De[ye[nr]]) & Z &&
                                                (V[ye[nr]] = Rr);
                                            break;
                                        }
                                }
                                if (Rr !== it) {
                                    for (var No = uo + 1; No < ye.length; No++)
                                        if (!(V[ye[No]] & l)) {
                                            m(De[ye[No]]) & Z &&
                                                (V[ye[No]] = Rr);
                                            break;
                                        }
                                }
                            }
                        }
                        for (var Vs = 0; Vs < ye.length; Vs++)
                            if (V[ye[Vs]] & a) {
                                for (
                                    var Ul = Vs, el = Vs, Pr = _t, tl = Vs - 1;
                                    tl >= 0;
                                    tl--
                                )
                                    if (V[ye[tl]] & l) Ul = tl;
                                    else {
                                        Pr = V[ye[tl]] & Uo ? O : D;
                                        break;
                                    }
                                for (
                                    var Jr = rt, oa = Vs + 1;
                                    oa < ye.length;
                                    oa++
                                )
                                    if (V[ye[oa]] & (a | l)) el = oa;
                                    else {
                                        Jr = V[ye[oa]] & Uo ? O : D;
                                        break;
                                    }
                                for (var ir = Ul; ir <= el; ir++)
                                    V[ye[ir]] = Pr === Jr ? Pr : it;
                                Vs = el;
                            }
                    }
                }
                for (var ji = Ze.start; ji <= Ze.end; ji++) {
                    var aa = Ce[ji],
                        Qr = V[ji];
                    if (
                        (aa & 1
                            ? Qr & (D | I | W) && Ce[ji]++
                            : Qr & O
                              ? Ce[ji]++
                              : Qr & (W | I) && (Ce[ji] += 2),
                        Qr & l && (Ce[ji] = ji === 0 ? Ze.level : Ce[ji - 1]),
                        ji === Ze.end || m(De[ji]) & (le | K))
                    )
                        for (var la = ji; la >= 0 && m(De[la]) & u; la--)
                            Ce[la] = Ze.level;
                }
            }
            return { levels: Ce, paragraphs: Xe };
            function rr(Oi, Xi) {
                for (var Ti = Oi; Ti < De.length; Ti++) {
                    var mi = V[Ti];
                    if (mi & (O | se)) return 1;
                    if (mi & (K | D) || (Xi && mi === Ae)) return 0;
                    if (mi & s) {
                        var zr = ua(Ti);
                        Ti = zr === -1 ? De.length : zr;
                    }
                }
                return 0;
            }
            function ua(Oi) {
                for (var Xi = 1, Ti = Oi + 1; Ti < De.length; Ti++) {
                    var mi = V[Ti];
                    if (mi & K) break;
                    if (mi & Ae) {
                        if (--Xi === 0) return Ti;
                    } else mi & s && Xi++;
                }
                return -1;
            }
        }
        var Qe =
                '14>1,j>2,t>2,u>2,1a>g,2v3>1,1>1,1ge>1,1wd>1,b>1,1j>1,f>1,ai>3,-2>3,+1,8>1k0,-1jq>1y7,-1y6>1hf,-1he>1h6,-1h5>1ha,-1h8>1qi,-1pu>1,6>3u,-3s>7,6>1,1>1,f>1,1>1,+2,3>1,1>1,+13,4>1,1>1,6>1eo,-1ee>1,3>1mg,-1me>1mk,-1mj>1mi,-1mg>1mi,-1md>1,1>1,+2,1>10k,-103>1,1>1,4>1,5>1,1>1,+10,3>1,1>8,-7>8,+1,-6>7,+1,a>1,1>1,u>1,u6>1,1>1,+5,26>1,1>1,2>1,2>2,8>1,7>1,4>1,1>1,+5,b8>1,1>1,+3,1>3,-2>1,2>1,1>1,+2,c>1,3>1,1>1,+2,h>1,3>1,a>1,1>1,2>1,3>1,1>1,d>1,f>1,3>1,1a>1,1>1,6>1,7>1,13>1,k>1,1>1,+19,4>1,1>1,+2,2>1,1>1,+18,m>1,a>1,1>1,lk>1,1>1,4>1,2>1,f>1,3>1,1>1,+3,db>1,1>1,+3,3>1,1>1,+2,14qm>1,1>1,+1,6>1,4j>1,j>2,t>2,u>2,2>1,+1',
            Ke;
        function X() {
            if (!Ke) {
                var De = S(Qe, !0),
                    Je = De.map,
                    te = De.reverseMap;
                te.forEach(function (V, Me) {
                    Je.set(Me, V);
                }),
                    (Ke = Je);
            }
        }
        function He(De) {
            return X(), Ke.get(De) || null;
        }
        function Fe(De, Je, te, V) {
            var Me = De.length;
            (te = Math.max(0, te == null ? 0 : +te)),
                (V = Math.min(Me - 1, V == null ? Me - 1 : +V));
            for (var Le = new Map(), Ie = te; Ie <= V; Ie++)
                if (Je[Ie] & 1) {
                    var Ce = He(De[Ie]);
                    Ce !== null && Le.set(Ie, Ce);
                }
            return Le;
        }
        function We(De, Je, te, V) {
            var Me = De.length;
            (te = Math.max(0, te == null ? 0 : +te)),
                (V = Math.min(Me - 1, V == null ? Me - 1 : +V));
            var Le = [];
            return (
                Je.paragraphs.forEach(function (Ie) {
                    var Ce = Math.max(te, Ie.start),
                        gt = Math.min(V, Ie.end);
                    if (Ce < gt) {
                        for (
                            var Xe = Je.levels.slice(Ce, gt + 1), Ze = gt;
                            Ze >= Ce && m(De[Ze]) & u;
                            Ze--
                        )
                            Xe[Ze] = Ie.level;
                        for (
                            var at = Ie.level, Ye = 1 / 0, ot = 0;
                            ot < Xe.length;
                            ot++
                        ) {
                            var kt = Xe[ot];
                            kt > at && (at = kt), kt < Ye && (Ye = kt | 1);
                        }
                        for (var pt = at; pt >= Ye; pt--)
                            for (var et = 0; et < Xe.length; et++)
                                if (Xe[et] >= pt) {
                                    for (
                                        var lt = et;
                                        et + 1 < Xe.length && Xe[et + 1] >= pt;

                                    )
                                        et++;
                                    et > lt && Le.push([lt + Ce, et + Ce]);
                                }
                    }
                }),
                Le
            );
        }
        function Re(De, Je, te, V) {
            var Me = st(De, Je, te, V),
                Le = [].concat(De);
            return (
                Me.forEach(function (Ie, Ce) {
                    Le[Ce] = (Je.levels[Ie] & 1 ? He(De[Ie]) : null) || De[Ie];
                }),
                Le.join('')
            );
        }
        function st(De, Je, te, V) {
            for (
                var Me = We(De, Je, te, V), Le = [], Ie = 0;
                Ie < De.length;
                Ie++
            )
                Le[Ie] = Ie;
            return (
                Me.forEach(function (Ce) {
                    for (
                        var gt = Ce[0],
                            Xe = Ce[1],
                            Ze = Le.slice(gt, Xe + 1),
                            at = Ze.length;
                        at--;

                    )
                        Le[Xe - at] = Ze[at];
                }),
                Le
            );
        }
        return (
            (e.closingToOpeningBracket = P),
            (e.getBidiCharType = m),
            (e.getBidiCharTypeName = v),
            (e.getCanonicalBracket = L),
            (e.getEmbeddingLevels = je),
            (e.getMirroredCharacter = He),
            (e.getMirroredCharactersMap = Fe),
            (e.getReorderSegments = We),
            (e.getReorderedIndices = st),
            (e.getReorderedString = Re),
            (e.openingToClosingBracket = b),
            Object.defineProperty(e, '__esModule', { value: !0 }),
            e
        );
    })({});
    return r;
}
const nk = /\bvoid\s+main\s*\(\s*\)\s*{/g;
function XM(r) {
    const e = /^[ \t]*#include +<([\w\d./]+)>/gm;
    function t(n, i) {
        let s = gn[i];
        return s ? XM(s) : n;
    }
    return r.replace(e, t);
}
const qr = [];
for (let r = 0; r < 256; r++) qr[r] = (r < 16 ? '0' : '') + r.toString(16);
function PK() {
    const r = (Math.random() * 4294967295) | 0,
        e = (Math.random() * 4294967295) | 0,
        t = (Math.random() * 4294967295) | 0,
        n = (Math.random() * 4294967295) | 0;
    return (
        qr[r & 255] +
        qr[(r >> 8) & 255] +
        qr[(r >> 16) & 255] +
        qr[(r >> 24) & 255] +
        '-' +
        qr[e & 255] +
        qr[(e >> 8) & 255] +
        '-' +
        qr[((e >> 16) & 15) | 64] +
        qr[(e >> 24) & 255] +
        '-' +
        qr[(t & 63) | 128] +
        qr[(t >> 8) & 255] +
        '-' +
        qr[(t >> 16) & 255] +
        qr[(t >> 24) & 255] +
        qr[n & 255] +
        qr[(n >> 8) & 255] +
        qr[(n >> 16) & 255] +
        qr[(n >> 24) & 255]
    ).toUpperCase();
}
const Bf =
        Object.assign ||
        function () {
            let r = arguments[0];
            for (let e = 1, t = arguments.length; e < t; e++) {
                let n = arguments[e];
                if (n)
                    for (let i in n)
                        Object.prototype.hasOwnProperty.call(n, i) &&
                            (r[i] = n[i]);
            }
            return r;
        },
    LK = Date.now(),
    EP = new WeakMap(),
    TP = new Map();
let IK = 1e10;
function YM(r, e) {
    const t = kK(e);
    let n = EP.get(r);
    if ((n || EP.set(r, (n = Object.create(null))), n[t])) return new n[t]();
    const i = `_onBeforeCompile${t}`,
        s = function (u, f) {
            r.onBeforeCompile.call(this, u, f);
            const d =
                this.customProgramCacheKey() +
                '|' +
                u.vertexShader +
                '|' +
                u.fragmentShader;
            let m = TP[d];
            if (!m) {
                const v = DK(this, u, e, t);
                m = TP[d] = v;
            }
            (u.vertexShader = m.vertexShader),
                (u.fragmentShader = m.fragmentShader),
                Bf(u.uniforms, this.uniforms),
                e.timeUniform &&
                    (u.uniforms[e.timeUniform] = {
                        get value() {
                            return Date.now() - LK;
                        },
                    }),
                this[i] && this[i](u);
        },
        o = function () {
            return a(e.chained ? r : r.clone());
        },
        a = function (u) {
            const f = Object.create(u, l);
            return (
                Object.defineProperty(f, 'baseMaterial', { value: r }),
                Object.defineProperty(f, 'id', { value: IK++ }),
                (f.uuid = PK()),
                (f.uniforms = Bf({}, u.uniforms, e.uniforms)),
                (f.defines = Bf({}, u.defines, e.defines)),
                (f.defines[`TROIKA_DERIVED_MATERIAL_${t}`] = ''),
                (f.extensions = Bf({}, u.extensions, e.extensions)),
                (f._listeners = void 0),
                f
            );
        },
        l = {
            constructor: { value: o },
            isDerivedMaterial: { value: !0 },
            type: {
                get: () => r.type,
                set: (u) => {
                    r.type = u;
                },
            },
            isDerivedFrom: {
                writable: !0,
                configurable: !0,
                value: function (u) {
                    const f = this.baseMaterial;
                    return (
                        u === f ||
                        (f.isDerivedMaterial && f.isDerivedFrom(u)) ||
                        !1
                    );
                },
            },
            customProgramCacheKey: {
                writable: !0,
                configurable: !0,
                value: function () {
                    return r.customProgramCacheKey() + '|' + t;
                },
            },
            onBeforeCompile: {
                get() {
                    return s;
                },
                set(u) {
                    this[i] = u;
                },
            },
            copy: {
                writable: !0,
                configurable: !0,
                value: function (u) {
                    return (
                        r.copy.call(this, u),
                        !r.isShaderMaterial &&
                            !r.isDerivedMaterial &&
                            (Bf(this.extensions, u.extensions),
                            Bf(this.defines, u.defines),
                            Bf(this.uniforms, Hx.clone(u.uniforms))),
                        this
                    );
                },
            },
            clone: {
                writable: !0,
                configurable: !0,
                value: function () {
                    const u = new r.constructor();
                    return a(u).copy(this);
                },
            },
            getDepthMaterial: {
                writable: !0,
                configurable: !0,
                value: function () {
                    let u = this._depthMaterial;
                    return (
                        u ||
                            ((u = this._depthMaterial =
                                YM(
                                    r.isDerivedMaterial
                                        ? r.getDepthMaterial()
                                        : new jx({ depthPacking: MT }),
                                    e
                                )),
                            (u.defines.IS_DEPTH_MATERIAL = ''),
                            (u.uniforms = this.uniforms)),
                        u
                    );
                },
            },
            getDistanceMaterial: {
                writable: !0,
                configurable: !0,
                value: function () {
                    let u = this._distanceMaterial;
                    return (
                        u ||
                            ((u = this._distanceMaterial =
                                YM(
                                    r.isDerivedMaterial
                                        ? r.getDistanceMaterial()
                                        : new Xx(),
                                    e
                                )),
                            (u.defines.IS_DISTANCE_MATERIAL = ''),
                            (u.uniforms = this.uniforms)),
                        u
                    );
                },
            },
            dispose: {
                writable: !0,
                configurable: !0,
                value() {
                    const { _depthMaterial: u, _distanceMaterial: f } = this;
                    u && u.dispose(), f && f.dispose(), r.dispose.call(this);
                },
            },
        };
    return (n[t] = o), new o();
}
function DK(r, { vertexShader: e, fragmentShader: t }, n, i) {
    let {
        vertexDefs: s,
        vertexMainIntro: o,
        vertexMainOutro: a,
        vertexTransform: l,
        fragmentDefs: u,
        fragmentMainIntro: f,
        fragmentMainOutro: d,
        fragmentColorTransform: m,
        customRewriter: v,
        timeUniform: _,
    } = n;
    if (
        ((s = s || ''),
        (o = o || ''),
        (a = a || ''),
        (u = u || ''),
        (f = f || ''),
        (d = d || ''),
        (l || v) && (e = XM(e)),
        (m || v) &&
            ((t = t.replace(
                /^[ \t]*#include <((?:tonemapping|encodings|colorspace|fog|premultiplied_alpha|dithering)_fragment)>/gm,
                `
//!BEGIN_POST_CHUNK $1
$&
//!END_POST_CHUNK
`
            )),
            (t = XM(t))),
        v)
    ) {
        let S = v({ vertexShader: e, fragmentShader: t });
        (e = S.vertexShader), (t = S.fragmentShader);
    }
    if (m) {
        let S = [];
        (t = t.replace(
            /^\/\/!BEGIN_POST_CHUNK[^]+?^\/\/!END_POST_CHUNK/gm,
            (w) => (S.push(w), '')
        )),
            (d = `${m}
${S.join(`
`)}
${d}`);
    }
    if (_) {
        const S = `
uniform float ${_};
`;
        (s = S + s), (u = S + u);
    }
    return (
        l &&
            ((e = `vec3 troika_position_${i};
vec3 troika_normal_${i};
vec2 troika_uv_${i};
${e}
`),
            (s = `${s}
void troikaVertexTransform${i}(inout vec3 position, inout vec3 normal, inout vec2 uv) {
  ${l}
}
`),
            (o = `
troika_position_${i} = vec3(position);
troika_normal_${i} = vec3(normal);
troika_uv_${i} = vec2(uv);
troikaVertexTransform${i}(troika_position_${i}, troika_normal_${i}, troika_uv_${i});
${o}
`),
            (e = e.replace(/\b(position|normal|uv)\b/g, (S, w, x, A) =>
                /\battribute\s+vec[23]\s+$/.test(A.substr(0, x))
                    ? w
                    : `troika_${w}_${i}`
            )),
            (r.map && r.map.channel > 0) ||
                (e = e.replace(/\bMAP_UV\b/g, `troika_uv_${i}`))),
        (e = AP(e, i, s, o, a)),
        (t = AP(t, i, u, f, d)),
        { vertexShader: e, fragmentShader: t }
    );
}
function AP(r, e, t, n, i) {
    return (
        (n || i || t) &&
            ((r = r.replace(
                nk,
                `
${t}
void troikaOrigMain${e}() {`
            )),
            (r += `
void main() {
  ${n}
  troikaOrigMain${e}();
  ${i}
}`)),
        r
    );
}
function OK(r, e) {
    return r === 'uniforms'
        ? void 0
        : typeof e == 'function'
          ? e.toString()
          : e;
}
let UK = 0;
const bP = new Map();
function kK(r) {
    const e = JSON.stringify(r, OK);
    let t = bP.get(e);
    return t == null && bP.set(e, (t = ++UK)), t;
}
/*!
Custom build of Typr.ts (https://github.com/fredli74/Typr.ts) for use in Troika text rendering.
Original MIT license applies: https://github.com/fredli74/Typr.ts/blob/master/LICENSE
*/ function NK() {
    return (
        typeof window > 'u' && (self.window = self),
        (function (r) {
            var e = {
                parse: function (i) {
                    var s = e._bin,
                        o = new Uint8Array(i);
                    if (s.readASCII(o, 0, 4) == 'ttcf') {
                        var a = 4;
                        s.readUshort(o, a),
                            (a += 2),
                            s.readUshort(o, a),
                            (a += 2);
                        var l = s.readUint(o, a);
                        a += 4;
                        for (var u = [], f = 0; f < l; f++) {
                            var d = s.readUint(o, a);
                            (a += 4), u.push(e._readFont(o, d));
                        }
                        return u;
                    }
                    return [e._readFont(o, 0)];
                },
                _readFont: function (i, s) {
                    var o = e._bin,
                        a = s;
                    o.readFixed(i, s), (s += 4);
                    var l = o.readUshort(i, s);
                    (s += 2),
                        o.readUshort(i, s),
                        (s += 2),
                        o.readUshort(i, s),
                        (s += 2),
                        o.readUshort(i, s),
                        (s += 2);
                    for (
                        var u = [
                                'cmap',
                                'head',
                                'hhea',
                                'maxp',
                                'hmtx',
                                'name',
                                'OS/2',
                                'post',
                                'loca',
                                'glyf',
                                'kern',
                                'CFF ',
                                'GDEF',
                                'GPOS',
                                'GSUB',
                                'SVG ',
                            ],
                            f = { _data: i, _offset: a },
                            d = {},
                            m = 0;
                        m < l;
                        m++
                    ) {
                        var v = o.readASCII(i, s, 4);
                        (s += 4), o.readUint(i, s), (s += 4);
                        var _ = o.readUint(i, s);
                        s += 4;
                        var S = o.readUint(i, s);
                        (s += 4), (d[v] = { offset: _, length: S });
                    }
                    for (m = 0; m < u.length; m++) {
                        var w = u[m];
                        d[w] &&
                            (f[w.trim()] = e[w.trim()].parse(
                                i,
                                d[w].offset,
                                d[w].length,
                                f
                            ));
                    }
                    return f;
                },
                _tabOffset: function (i, s, o) {
                    for (
                        var a = e._bin,
                            l = a.readUshort(i, o + 4),
                            u = o + 12,
                            f = 0;
                        f < l;
                        f++
                    ) {
                        var d = a.readASCII(i, u, 4);
                        (u += 4), a.readUint(i, u), (u += 4);
                        var m = a.readUint(i, u);
                        if (((u += 4), a.readUint(i, u), (u += 4), d == s))
                            return m;
                    }
                    return 0;
                },
            };
            (e._bin = {
                readFixed: function (i, s) {
                    return (
                        ((i[s] << 8) | i[s + 1]) +
                        ((i[s + 2] << 8) | i[s + 3]) / 65540
                    );
                },
                readF2dot14: function (i, s) {
                    return e._bin.readShort(i, s) / 16384;
                },
                readInt: function (i, s) {
                    return e._bin._view(i).getInt32(s);
                },
                readInt8: function (i, s) {
                    return e._bin._view(i).getInt8(s);
                },
                readShort: function (i, s) {
                    return e._bin._view(i).getInt16(s);
                },
                readUshort: function (i, s) {
                    return e._bin._view(i).getUint16(s);
                },
                readUshorts: function (i, s, o) {
                    for (var a = [], l = 0; l < o; l++)
                        a.push(e._bin.readUshort(i, s + 2 * l));
                    return a;
                },
                readUint: function (i, s) {
                    return e._bin._view(i).getUint32(s);
                },
                readUint64: function (i, s) {
                    return (
                        4294967296 * e._bin.readUint(i, s) +
                        e._bin.readUint(i, s + 4)
                    );
                },
                readASCII: function (i, s, o) {
                    for (var a = '', l = 0; l < o; l++)
                        a += String.fromCharCode(i[s + l]);
                    return a;
                },
                readUnicode: function (i, s, o) {
                    for (var a = '', l = 0; l < o; l++) {
                        var u = (i[s++] << 8) | i[s++];
                        a += String.fromCharCode(u);
                    }
                    return a;
                },
                _tdec:
                    typeof window < 'u' && window.TextDecoder
                        ? new window.TextDecoder()
                        : null,
                readUTF8: function (i, s, o) {
                    var a = e._bin._tdec;
                    return a && s == 0 && o == i.length
                        ? a.decode(i)
                        : e._bin.readASCII(i, s, o);
                },
                readBytes: function (i, s, o) {
                    for (var a = [], l = 0; l < o; l++) a.push(i[s + l]);
                    return a;
                },
                readASCIIArray: function (i, s, o) {
                    for (var a = [], l = 0; l < o; l++)
                        a.push(String.fromCharCode(i[s + l]));
                    return a;
                },
                _view: function (i) {
                    return (
                        i._dataView ||
                        (i._dataView = i.buffer
                            ? new DataView(i.buffer, i.byteOffset, i.byteLength)
                            : new DataView(new Uint8Array(i).buffer))
                    );
                },
            }),
                (e._lctf = {}),
                (e._lctf.parse = function (i, s, o, a, l) {
                    var u = e._bin,
                        f = {},
                        d = s;
                    u.readFixed(i, s), (s += 4);
                    var m = u.readUshort(i, s);
                    s += 2;
                    var v = u.readUshort(i, s);
                    s += 2;
                    var _ = u.readUshort(i, s);
                    return (
                        (s += 2),
                        (f.scriptList = e._lctf.readScriptList(i, d + m)),
                        (f.featureList = e._lctf.readFeatureList(i, d + v)),
                        (f.lookupList = e._lctf.readLookupList(i, d + _, l)),
                        f
                    );
                }),
                (e._lctf.readLookupList = function (i, s, o) {
                    var a = e._bin,
                        l = s,
                        u = [],
                        f = a.readUshort(i, s);
                    s += 2;
                    for (var d = 0; d < f; d++) {
                        var m = a.readUshort(i, s);
                        s += 2;
                        var v = e._lctf.readLookupTable(i, l + m, o);
                        u.push(v);
                    }
                    return u;
                }),
                (e._lctf.readLookupTable = function (i, s, o) {
                    var a = e._bin,
                        l = s,
                        u = { tabs: [] };
                    (u.ltype = a.readUshort(i, s)),
                        (s += 2),
                        (u.flag = a.readUshort(i, s)),
                        (s += 2);
                    var f = a.readUshort(i, s);
                    s += 2;
                    for (var d = u.ltype, m = 0; m < f; m++) {
                        var v = a.readUshort(i, s);
                        s += 2;
                        var _ = o(i, d, l + v, u);
                        u.tabs.push(_);
                    }
                    return u;
                }),
                (e._lctf.numOfOnes = function (i) {
                    for (var s = 0, o = 0; o < 32; o++)
                        ((i >>> o) & 1) != 0 && s++;
                    return s;
                }),
                (e._lctf.readClassDef = function (i, s) {
                    var o = e._bin,
                        a = [],
                        l = o.readUshort(i, s);
                    if (((s += 2), l == 1)) {
                        var u = o.readUshort(i, s);
                        s += 2;
                        var f = o.readUshort(i, s);
                        s += 2;
                        for (var d = 0; d < f; d++)
                            a.push(u + d),
                                a.push(u + d),
                                a.push(o.readUshort(i, s)),
                                (s += 2);
                    }
                    if (l == 2) {
                        var m = o.readUshort(i, s);
                        for (s += 2, d = 0; d < m; d++)
                            a.push(o.readUshort(i, s)),
                                (s += 2),
                                a.push(o.readUshort(i, s)),
                                (s += 2),
                                a.push(o.readUshort(i, s)),
                                (s += 2);
                    }
                    return a;
                }),
                (e._lctf.getInterval = function (i, s) {
                    for (var o = 0; o < i.length; o += 3) {
                        var a = i[o],
                            l = i[o + 1];
                        if ((i[o + 2], a <= s && s <= l)) return o;
                    }
                    return -1;
                }),
                (e._lctf.readCoverage = function (i, s) {
                    var o = e._bin,
                        a = {};
                    (a.fmt = o.readUshort(i, s)), (s += 2);
                    var l = o.readUshort(i, s);
                    return (
                        (s += 2),
                        a.fmt == 1 && (a.tab = o.readUshorts(i, s, l)),
                        a.fmt == 2 && (a.tab = o.readUshorts(i, s, 3 * l)),
                        a
                    );
                }),
                (e._lctf.coverageIndex = function (i, s) {
                    var o = i.tab;
                    if (i.fmt == 1) return o.indexOf(s);
                    if (i.fmt == 2) {
                        var a = e._lctf.getInterval(o, s);
                        if (a != -1) return o[a + 2] + (s - o[a]);
                    }
                    return -1;
                }),
                (e._lctf.readFeatureList = function (i, s) {
                    var o = e._bin,
                        a = s,
                        l = [],
                        u = o.readUshort(i, s);
                    s += 2;
                    for (var f = 0; f < u; f++) {
                        var d = o.readASCII(i, s, 4);
                        s += 4;
                        var m = o.readUshort(i, s);
                        s += 2;
                        var v = e._lctf.readFeatureTable(i, a + m);
                        (v.tag = d.trim()), l.push(v);
                    }
                    return l;
                }),
                (e._lctf.readFeatureTable = function (i, s) {
                    var o = e._bin,
                        a = s,
                        l = {},
                        u = o.readUshort(i, s);
                    (s += 2), u > 0 && (l.featureParams = a + u);
                    var f = o.readUshort(i, s);
                    (s += 2), (l.tab = []);
                    for (var d = 0; d < f; d++)
                        l.tab.push(o.readUshort(i, s + 2 * d));
                    return l;
                }),
                (e._lctf.readScriptList = function (i, s) {
                    var o = e._bin,
                        a = s,
                        l = {},
                        u = o.readUshort(i, s);
                    s += 2;
                    for (var f = 0; f < u; f++) {
                        var d = o.readASCII(i, s, 4);
                        s += 4;
                        var m = o.readUshort(i, s);
                        (s += 2),
                            (l[d.trim()] = e._lctf.readScriptTable(i, a + m));
                    }
                    return l;
                }),
                (e._lctf.readScriptTable = function (i, s) {
                    var o = e._bin,
                        a = s,
                        l = {},
                        u = o.readUshort(i, s);
                    (s += 2),
                        u > 0 &&
                            (l.default = e._lctf.readLangSysTable(i, a + u));
                    var f = o.readUshort(i, s);
                    s += 2;
                    for (var d = 0; d < f; d++) {
                        var m = o.readASCII(i, s, 4);
                        s += 4;
                        var v = o.readUshort(i, s);
                        (s += 2),
                            (l[m.trim()] = e._lctf.readLangSysTable(i, a + v));
                    }
                    return l;
                }),
                (e._lctf.readLangSysTable = function (i, s) {
                    var o = e._bin,
                        a = {};
                    o.readUshort(i, s),
                        (s += 2),
                        (a.reqFeature = o.readUshort(i, s)),
                        (s += 2);
                    var l = o.readUshort(i, s);
                    return (s += 2), (a.features = o.readUshorts(i, s, l)), a;
                }),
                (e.CFF = {}),
                (e.CFF.parse = function (i, s, o) {
                    var a = e._bin;
                    (i = new Uint8Array(i.buffer, s, o))[(s = 0)],
                        i[++s],
                        i[++s],
                        i[++s],
                        s++;
                    var l = [];
                    s = e.CFF.readIndex(i, s, l);
                    for (var u = [], f = 0; f < l.length - 1; f++)
                        u.push(a.readASCII(i, s + l[f], l[f + 1] - l[f]));
                    s += l[l.length - 1];
                    var d = [];
                    s = e.CFF.readIndex(i, s, d);
                    var m = [];
                    for (f = 0; f < d.length - 1; f++)
                        m.push(e.CFF.readDict(i, s + d[f], s + d[f + 1]));
                    s += d[d.length - 1];
                    var v = m[0],
                        _ = [];
                    s = e.CFF.readIndex(i, s, _);
                    var S = [];
                    for (f = 0; f < _.length - 1; f++)
                        S.push(a.readASCII(i, s + _[f], _[f + 1] - _[f]));
                    if (
                        ((s += _[_.length - 1]),
                        e.CFF.readSubrs(i, s, v),
                        v.CharStrings)
                    ) {
                        (s = v.CharStrings),
                            (_ = []),
                            (s = e.CFF.readIndex(i, s, _));
                        var w = [];
                        for (f = 0; f < _.length - 1; f++)
                            w.push(a.readBytes(i, s + _[f], _[f + 1] - _[f]));
                        v.CharStrings = w;
                    }
                    if (v.ROS) {
                        s = v.FDArray;
                        var x = [];
                        for (
                            s = e.CFF.readIndex(i, s, x), v.FDArray = [], f = 0;
                            f < x.length - 1;
                            f++
                        ) {
                            var A = e.CFF.readDict(i, s + x[f], s + x[f + 1]);
                            e.CFF._readFDict(i, A, S), v.FDArray.push(A);
                        }
                        (s += x[x.length - 1]),
                            (s = v.FDSelect),
                            (v.FDSelect = []);
                        var T = i[s];
                        if ((s++, T != 3)) throw T;
                        var b = a.readUshort(i, s);
                        for (s += 2, f = 0; f < b + 1; f++)
                            v.FDSelect.push(a.readUshort(i, s), i[s + 2]),
                                (s += 3);
                    }
                    return (
                        v.Encoding &&
                            (v.Encoding = e.CFF.readEncoding(
                                i,
                                v.Encoding,
                                v.CharStrings.length
                            )),
                        v.charset &&
                            (v.charset = e.CFF.readCharset(
                                i,
                                v.charset,
                                v.CharStrings.length
                            )),
                        e.CFF._readFDict(i, v, S),
                        v
                    );
                }),
                (e.CFF._readFDict = function (i, s, o) {
                    var a;
                    for (var l in (s.Private &&
                        ((a = s.Private[1]),
                        (s.Private = e.CFF.readDict(i, a, a + s.Private[0])),
                        s.Private.Subrs &&
                            e.CFF.readSubrs(i, a + s.Private.Subrs, s.Private)),
                    s))
                        [
                            'FamilyName',
                            'FontName',
                            'FullName',
                            'Notice',
                            'version',
                            'Copyright',
                        ].indexOf(l) != -1 && (s[l] = o[s[l] - 426 + 35]);
                }),
                (e.CFF.readSubrs = function (i, s, o) {
                    var a = e._bin,
                        l = [];
                    s = e.CFF.readIndex(i, s, l);
                    var u,
                        f = l.length;
                    (u = f < 1240 ? 107 : f < 33900 ? 1131 : 32768),
                        (o.Bias = u),
                        (o.Subrs = []);
                    for (var d = 0; d < l.length - 1; d++)
                        o.Subrs.push(a.readBytes(i, s + l[d], l[d + 1] - l[d]));
                }),
                (e.CFF.tableSE = [
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8,
                    9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
                    24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
                    39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
                    54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
                    69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83,
                    84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 97, 98, 99, 100, 101, 102,
                    103, 104, 105, 106, 107, 108, 109, 110, 0, 111, 112, 113,
                    114, 0, 115, 116, 117, 118, 119, 120, 121, 122, 0, 123, 0,
                    124, 125, 126, 127, 128, 129, 130, 131, 0, 132, 133, 0, 134,
                    135, 136, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 138, 0, 139, 0, 0, 0, 0, 140, 141, 142, 143, 0, 0, 0, 0,
                    0, 144, 0, 0, 0, 145, 0, 0, 146, 147, 148, 149, 0, 0, 0, 0,
                ]),
                (e.CFF.glyphByUnicode = function (i, s) {
                    for (var o = 0; o < i.charset.length; o++)
                        if (i.charset[o] == s) return o;
                    return -1;
                }),
                (e.CFF.glyphBySE = function (i, s) {
                    return s < 0 || s > 255
                        ? -1
                        : e.CFF.glyphByUnicode(i, e.CFF.tableSE[s]);
                }),
                (e.CFF.readEncoding = function (i, s, o) {
                    e._bin;
                    var a = ['.notdef'],
                        l = i[s];
                    if ((s++, l != 0))
                        throw 'error: unknown encoding format: ' + l;
                    var u = i[s];
                    s++;
                    for (var f = 0; f < u; f++) a.push(i[s + f]);
                    return a;
                }),
                (e.CFF.readCharset = function (i, s, o) {
                    var a = e._bin,
                        l = ['.notdef'],
                        u = i[s];
                    if ((s++, u == 0))
                        for (var f = 0; f < o; f++) {
                            var d = a.readUshort(i, s);
                            (s += 2), l.push(d);
                        }
                    else {
                        if (u != 1 && u != 2) throw 'error: format: ' + u;
                        for (; l.length < o; ) {
                            (d = a.readUshort(i, s)), (s += 2);
                            var m = 0;
                            for (
                                u == 1
                                    ? ((m = i[s]), s++)
                                    : ((m = a.readUshort(i, s)), (s += 2)),
                                    f = 0;
                                f <= m;
                                f++
                            )
                                l.push(d), d++;
                        }
                    }
                    return l;
                }),
                (e.CFF.readIndex = function (i, s, o) {
                    var a = e._bin,
                        l = a.readUshort(i, s) + 1,
                        u = i[(s += 2)];
                    if ((s++, u == 1))
                        for (var f = 0; f < l; f++) o.push(i[s + f]);
                    else if (u == 2)
                        for (f = 0; f < l; f++)
                            o.push(a.readUshort(i, s + 2 * f));
                    else if (u == 3)
                        for (f = 0; f < l; f++)
                            o.push(16777215 & a.readUint(i, s + 3 * f - 1));
                    else if (l != 1)
                        throw 'unsupported offset size: ' + u + ', count: ' + l;
                    return (s += l * u) - 1;
                }),
                (e.CFF.getCharString = function (i, s, o) {
                    var a = e._bin,
                        l = i[s],
                        u = i[s + 1];
                    i[s + 2], i[s + 3], i[s + 4];
                    var f = 1,
                        d = null,
                        m = null;
                    l <= 20 && ((d = l), (f = 1)),
                        l == 12 && ((d = 100 * l + u), (f = 2)),
                        21 <= l && l <= 27 && ((d = l), (f = 1)),
                        l == 28 && ((m = a.readShort(i, s + 1)), (f = 3)),
                        29 <= l && l <= 31 && ((d = l), (f = 1)),
                        32 <= l && l <= 246 && ((m = l - 139), (f = 1)),
                        247 <= l &&
                            l <= 250 &&
                            ((m = 256 * (l - 247) + u + 108), (f = 2)),
                        251 <= l &&
                            l <= 254 &&
                            ((m = 256 * -(l - 251) - u - 108), (f = 2)),
                        l == 255 &&
                            ((m = a.readInt(i, s + 1) / 65535), (f = 5)),
                        (o.val = m ?? 'o' + d),
                        (o.size = f);
                }),
                (e.CFF.readCharString = function (i, s, o) {
                    for (var a = s + o, l = e._bin, u = []; s < a; ) {
                        var f = i[s],
                            d = i[s + 1];
                        i[s + 2], i[s + 3], i[s + 4];
                        var m = 1,
                            v = null,
                            _ = null;
                        f <= 20 && ((v = f), (m = 1)),
                            f == 12 && ((v = 100 * f + d), (m = 2)),
                            (f != 19 && f != 20) || ((v = f), (m = 2)),
                            21 <= f && f <= 27 && ((v = f), (m = 1)),
                            f == 28 && ((_ = l.readShort(i, s + 1)), (m = 3)),
                            29 <= f && f <= 31 && ((v = f), (m = 1)),
                            32 <= f && f <= 246 && ((_ = f - 139), (m = 1)),
                            247 <= f &&
                                f <= 250 &&
                                ((_ = 256 * (f - 247) + d + 108), (m = 2)),
                            251 <= f &&
                                f <= 254 &&
                                ((_ = 256 * -(f - 251) - d - 108), (m = 2)),
                            f == 255 &&
                                ((_ = l.readInt(i, s + 1) / 65535), (m = 5)),
                            u.push(_ ?? 'o' + v),
                            (s += m);
                    }
                    return u;
                }),
                (e.CFF.readDict = function (i, s, o) {
                    for (var a = e._bin, l = {}, u = []; s < o; ) {
                        var f = i[s],
                            d = i[s + 1];
                        i[s + 2], i[s + 3], i[s + 4];
                        var m = 1,
                            v = null,
                            _ = null;
                        if (
                            (f == 28 && ((_ = a.readShort(i, s + 1)), (m = 3)),
                            f == 29 && ((_ = a.readInt(i, s + 1)), (m = 5)),
                            32 <= f && f <= 246 && ((_ = f - 139), (m = 1)),
                            247 <= f &&
                                f <= 250 &&
                                ((_ = 256 * (f - 247) + d + 108), (m = 2)),
                            251 <= f &&
                                f <= 254 &&
                                ((_ = 256 * -(f - 251) - d - 108), (m = 2)),
                            f == 255)
                        )
                            throw (
                                ((_ = a.readInt(i, s + 1) / 65535),
                                (m = 5),
                                'unknown number')
                            );
                        if (f == 30) {
                            var S = [];
                            for (m = 1; ; ) {
                                var w = i[s + m];
                                m++;
                                var x = w >> 4,
                                    A = 15 & w;
                                if (
                                    (x != 15 && S.push(x),
                                    A != 15 && S.push(A),
                                    A == 15)
                                )
                                    break;
                            }
                            for (
                                var T = '',
                                    b = [
                                        0,
                                        1,
                                        2,
                                        3,
                                        4,
                                        5,
                                        6,
                                        7,
                                        8,
                                        9,
                                        '.',
                                        'e',
                                        'e-',
                                        'reserved',
                                        '-',
                                        'endOfNumber',
                                    ],
                                    P = 0;
                                P < S.length;
                                P++
                            )
                                T += b[S[P]];
                            _ = parseFloat(T);
                        }
                        f <= 21 &&
                            ((v = [
                                'version',
                                'Notice',
                                'FullName',
                                'FamilyName',
                                'Weight',
                                'FontBBox',
                                'BlueValues',
                                'OtherBlues',
                                'FamilyBlues',
                                'FamilyOtherBlues',
                                'StdHW',
                                'StdVW',
                                'escape',
                                'UniqueID',
                                'XUID',
                                'charset',
                                'Encoding',
                                'CharStrings',
                                'Private',
                                'Subrs',
                                'defaultWidthX',
                                'nominalWidthX',
                            ][f]),
                            (m = 1),
                            f == 12 &&
                                ((v = [
                                    'Copyright',
                                    'isFixedPitch',
                                    'ItalicAngle',
                                    'UnderlinePosition',
                                    'UnderlineThickness',
                                    'PaintType',
                                    'CharstringType',
                                    'FontMatrix',
                                    'StrokeWidth',
                                    'BlueScale',
                                    'BlueShift',
                                    'BlueFuzz',
                                    'StemSnapH',
                                    'StemSnapV',
                                    'ForceBold',
                                    0,
                                    0,
                                    'LanguageGroup',
                                    'ExpansionFactor',
                                    'initialRandomSeed',
                                    'SyntheticBase',
                                    'PostScript',
                                    'BaseFontName',
                                    'BaseFontBlend',
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    0,
                                    'ROS',
                                    'CIDFontVersion',
                                    'CIDFontRevision',
                                    'CIDFontType',
                                    'CIDCount',
                                    'UIDBase',
                                    'FDArray',
                                    'FDSelect',
                                    'FontName',
                                ][d]),
                                (m = 2))),
                            v != null
                                ? ((l[v] = u.length == 1 ? u[0] : u), (u = []))
                                : u.push(_),
                            (s += m);
                    }
                    return l;
                }),
                (e.cmap = {}),
                (e.cmap.parse = function (i, s, o) {
                    (i = new Uint8Array(i.buffer, s, o)), (s = 0);
                    var a = e._bin,
                        l = {};
                    a.readUshort(i, s), (s += 2);
                    var u = a.readUshort(i, s);
                    s += 2;
                    var f = [];
                    l.tables = [];
                    for (var d = 0; d < u; d++) {
                        var m = a.readUshort(i, s);
                        s += 2;
                        var v = a.readUshort(i, s);
                        s += 2;
                        var _ = a.readUint(i, s);
                        s += 4;
                        var S = 'p' + m + 'e' + v,
                            w = f.indexOf(_);
                        if (w == -1) {
                            var x;
                            (w = l.tables.length), f.push(_);
                            var A = a.readUshort(i, _);
                            A == 0
                                ? (x = e.cmap.parse0(i, _))
                                : A == 4
                                  ? (x = e.cmap.parse4(i, _))
                                  : A == 6
                                    ? (x = e.cmap.parse6(i, _))
                                    : A == 12
                                      ? (x = e.cmap.parse12(i, _))
                                      : console.debug(
                                            'unknown format: ' + A,
                                            m,
                                            v,
                                            _
                                        ),
                                l.tables.push(x);
                        }
                        if (l[S] != null)
                            throw 'multiple tables for one platform+encoding';
                        l[S] = w;
                    }
                    return l;
                }),
                (e.cmap.parse0 = function (i, s) {
                    var o = e._bin,
                        a = {};
                    (a.format = o.readUshort(i, s)), (s += 2);
                    var l = o.readUshort(i, s);
                    (s += 2), o.readUshort(i, s), (s += 2), (a.map = []);
                    for (var u = 0; u < l - 6; u++) a.map.push(i[s + u]);
                    return a;
                }),
                (e.cmap.parse4 = function (i, s) {
                    var o = e._bin,
                        a = s,
                        l = {};
                    (l.format = o.readUshort(i, s)), (s += 2);
                    var u = o.readUshort(i, s);
                    (s += 2), o.readUshort(i, s), (s += 2);
                    var f = o.readUshort(i, s);
                    s += 2;
                    var d = f / 2;
                    (l.searchRange = o.readUshort(i, s)),
                        (s += 2),
                        (l.entrySelector = o.readUshort(i, s)),
                        (s += 2),
                        (l.rangeShift = o.readUshort(i, s)),
                        (s += 2),
                        (l.endCount = o.readUshorts(i, s, d)),
                        (s += 2 * d),
                        (s += 2),
                        (l.startCount = o.readUshorts(i, s, d)),
                        (s += 2 * d),
                        (l.idDelta = []);
                    for (var m = 0; m < d; m++)
                        l.idDelta.push(o.readShort(i, s)), (s += 2);
                    for (
                        l.idRangeOffset = o.readUshorts(i, s, d),
                            s += 2 * d,
                            l.glyphIdArray = [];
                        s < a + u;

                    )
                        l.glyphIdArray.push(o.readUshort(i, s)), (s += 2);
                    return l;
                }),
                (e.cmap.parse6 = function (i, s) {
                    var o = e._bin,
                        a = {};
                    (a.format = o.readUshort(i, s)),
                        (s += 2),
                        o.readUshort(i, s),
                        (s += 2),
                        o.readUshort(i, s),
                        (s += 2),
                        (a.firstCode = o.readUshort(i, s)),
                        (s += 2);
                    var l = o.readUshort(i, s);
                    (s += 2), (a.glyphIdArray = []);
                    for (var u = 0; u < l; u++)
                        a.glyphIdArray.push(o.readUshort(i, s)), (s += 2);
                    return a;
                }),
                (e.cmap.parse12 = function (i, s) {
                    var o = e._bin,
                        a = {};
                    (a.format = o.readUshort(i, s)),
                        (s += 2),
                        (s += 2),
                        o.readUint(i, s),
                        (s += 4),
                        o.readUint(i, s),
                        (s += 4);
                    var l = o.readUint(i, s);
                    (s += 4), (a.groups = []);
                    for (var u = 0; u < l; u++) {
                        var f = s + 12 * u,
                            d = o.readUint(i, f + 0),
                            m = o.readUint(i, f + 4),
                            v = o.readUint(i, f + 8);
                        a.groups.push([d, m, v]);
                    }
                    return a;
                }),
                (e.glyf = {}),
                (e.glyf.parse = function (i, s, o, a) {
                    for (var l = [], u = 0; u < a.maxp.numGlyphs; u++)
                        l.push(null);
                    return l;
                }),
                (e.glyf._parseGlyf = function (i, s) {
                    var o = e._bin,
                        a = i._data,
                        l = e._tabOffset(a, 'glyf', i._offset) + i.loca[s];
                    if (i.loca[s] == i.loca[s + 1]) return null;
                    var u = {};
                    if (
                        ((u.noc = o.readShort(a, l)),
                        (l += 2),
                        (u.xMin = o.readShort(a, l)),
                        (l += 2),
                        (u.yMin = o.readShort(a, l)),
                        (l += 2),
                        (u.xMax = o.readShort(a, l)),
                        (l += 2),
                        (u.yMax = o.readShort(a, l)),
                        (l += 2),
                        u.xMin >= u.xMax || u.yMin >= u.yMax)
                    )
                        return null;
                    if (u.noc > 0) {
                        u.endPts = [];
                        for (var f = 0; f < u.noc; f++)
                            u.endPts.push(o.readUshort(a, l)), (l += 2);
                        var d = o.readUshort(a, l);
                        if (((l += 2), a.length - l < d)) return null;
                        (u.instructions = o.readBytes(a, l, d)), (l += d);
                        var m = u.endPts[u.noc - 1] + 1;
                        for (u.flags = [], f = 0; f < m; f++) {
                            var v = a[l];
                            if ((l++, u.flags.push(v), (8 & v) != 0)) {
                                var _ = a[l];
                                l++;
                                for (var S = 0; S < _; S++)
                                    u.flags.push(v), f++;
                            }
                        }
                        for (u.xs = [], f = 0; f < m; f++) {
                            var w = (2 & u.flags[f]) != 0,
                                x = (16 & u.flags[f]) != 0;
                            w
                                ? (u.xs.push(x ? a[l] : -a[l]), l++)
                                : x
                                  ? u.xs.push(0)
                                  : (u.xs.push(o.readShort(a, l)), (l += 2));
                        }
                        for (u.ys = [], f = 0; f < m; f++)
                            (w = (4 & u.flags[f]) != 0),
                                (x = (32 & u.flags[f]) != 0),
                                w
                                    ? (u.ys.push(x ? a[l] : -a[l]), l++)
                                    : x
                                      ? u.ys.push(0)
                                      : (u.ys.push(o.readShort(a, l)),
                                        (l += 2));
                        var A = 0,
                            T = 0;
                        for (f = 0; f < m; f++)
                            (A += u.xs[f]),
                                (T += u.ys[f]),
                                (u.xs[f] = A),
                                (u.ys[f] = T);
                    } else {
                        var b;
                        u.parts = [];
                        do {
                            (b = o.readUshort(a, l)), (l += 2);
                            var P = {
                                m: { a: 1, b: 0, c: 0, d: 1, tx: 0, ty: 0 },
                                p1: -1,
                                p2: -1,
                            };
                            if (
                                (u.parts.push(P),
                                (P.glyphIndex = o.readUshort(a, l)),
                                (l += 2),
                                1 & b)
                            ) {
                                var L = o.readShort(a, l);
                                l += 2;
                                var D = o.readShort(a, l);
                                l += 2;
                            } else
                                (L = o.readInt8(a, l)),
                                    l++,
                                    (D = o.readInt8(a, l)),
                                    l++;
                            2 & b
                                ? ((P.m.tx = L), (P.m.ty = D))
                                : ((P.p1 = L), (P.p2 = D)),
                                8 & b
                                    ? ((P.m.a = P.m.d = o.readF2dot14(a, l)),
                                      (l += 2))
                                    : 64 & b
                                      ? ((P.m.a = o.readF2dot14(a, l)),
                                        (l += 2),
                                        (P.m.d = o.readF2dot14(a, l)),
                                        (l += 2))
                                      : 128 & b &&
                                        ((P.m.a = o.readF2dot14(a, l)),
                                        (l += 2),
                                        (P.m.b = o.readF2dot14(a, l)),
                                        (l += 2),
                                        (P.m.c = o.readF2dot14(a, l)),
                                        (l += 2),
                                        (P.m.d = o.readF2dot14(a, l)),
                                        (l += 2));
                        } while (32 & b);
                        if (256 & b) {
                            var O = o.readUshort(a, l);
                            for (l += 2, u.instr = [], f = 0; f < O; f++)
                                u.instr.push(a[l]), l++;
                        }
                    }
                    return u;
                }),
                (e.GDEF = {}),
                (e.GDEF.parse = function (i, s, o, a) {
                    var l = s;
                    s += 4;
                    var u = e._bin.readUshort(i, s);
                    return {
                        glyphClassDef:
                            u === 0 ? null : e._lctf.readClassDef(i, l + u),
                    };
                }),
                (e.GPOS = {}),
                (e.GPOS.parse = function (i, s, o, a) {
                    return e._lctf.parse(i, s, o, a, e.GPOS.subt);
                }),
                (e.GPOS.subt = function (i, s, o, a) {
                    var l = e._bin,
                        u = o,
                        f = {};
                    if (
                        ((f.fmt = l.readUshort(i, o)),
                        (o += 2),
                        s == 1 ||
                            s == 2 ||
                            s == 3 ||
                            s == 7 ||
                            (s == 8 && f.fmt <= 2))
                    ) {
                        var d = l.readUshort(i, o);
                        (o += 2), (f.coverage = e._lctf.readCoverage(i, d + u));
                    }
                    if (s == 1 && f.fmt == 1) {
                        var m = l.readUshort(i, o);
                        (o += 2),
                            m != 0 && (f.pos = e.GPOS.readValueRecord(i, o, m));
                    } else if (s == 2 && f.fmt >= 1 && f.fmt <= 2) {
                        (m = l.readUshort(i, o)), (o += 2);
                        var v = l.readUshort(i, o);
                        o += 2;
                        var _ = e._lctf.numOfOnes(m),
                            S = e._lctf.numOfOnes(v);
                        if (f.fmt == 1) {
                            f.pairsets = [];
                            var w = l.readUshort(i, o);
                            o += 2;
                            for (var x = 0; x < w; x++) {
                                var A = u + l.readUshort(i, o);
                                o += 2;
                                var T = l.readUshort(i, A);
                                A += 2;
                                for (var b = [], P = 0; P < T; P++) {
                                    var L = l.readUshort(i, A);
                                    (A += 2),
                                        m != 0 &&
                                            ((W = e.GPOS.readValueRecord(
                                                i,
                                                A,
                                                m
                                            )),
                                            (A += 2 * _)),
                                        v != 0 &&
                                            ((q = e.GPOS.readValueRecord(
                                                i,
                                                A,
                                                v
                                            )),
                                            (A += 2 * S)),
                                        b.push({ gid2: L, val1: W, val2: q });
                                }
                                f.pairsets.push(b);
                            }
                        }
                        if (f.fmt == 2) {
                            var D = l.readUshort(i, o);
                            o += 2;
                            var O = l.readUshort(i, o);
                            o += 2;
                            var I = l.readUshort(i, o);
                            o += 2;
                            var U = l.readUshort(i, o);
                            for (
                                o += 2,
                                    f.classDef1 = e._lctf.readClassDef(
                                        i,
                                        u + D
                                    ),
                                    f.classDef2 = e._lctf.readClassDef(
                                        i,
                                        u + O
                                    ),
                                    f.matrix = [],
                                    x = 0;
                                x < I;
                                x++
                            ) {
                                var H = [];
                                for (P = 0; P < U; P++) {
                                    var W = null,
                                        q = null;
                                    m != 0 &&
                                        ((W = e.GPOS.readValueRecord(i, o, m)),
                                        (o += 2 * _)),
                                        v != 0 &&
                                            ((q = e.GPOS.readValueRecord(
                                                i,
                                                o,
                                                v
                                            )),
                                            (o += 2 * S)),
                                        H.push({ val1: W, val2: q });
                                }
                                f.matrix.push(H);
                            }
                        }
                    } else if (s == 4 && f.fmt == 1)
                        (f.markCoverage = e._lctf.readCoverage(
                            i,
                            l.readUshort(i, o) + u
                        )),
                            (f.baseCoverage = e._lctf.readCoverage(
                                i,
                                l.readUshort(i, o + 2) + u
                            )),
                            (f.markClassCount = l.readUshort(i, o + 4)),
                            (f.markArray = e.GPOS.readMarkArray(
                                i,
                                l.readUshort(i, o + 6) + u
                            )),
                            (f.baseArray = e.GPOS.readBaseArray(
                                i,
                                l.readUshort(i, o + 8) + u,
                                f.markClassCount
                            ));
                    else if (s == 6 && f.fmt == 1)
                        (f.mark1Coverage = e._lctf.readCoverage(
                            i,
                            l.readUshort(i, o) + u
                        )),
                            (f.mark2Coverage = e._lctf.readCoverage(
                                i,
                                l.readUshort(i, o + 2) + u
                            )),
                            (f.markClassCount = l.readUshort(i, o + 4)),
                            (f.mark1Array = e.GPOS.readMarkArray(
                                i,
                                l.readUshort(i, o + 6) + u
                            )),
                            (f.mark2Array = e.GPOS.readBaseArray(
                                i,
                                l.readUshort(i, o + 8) + u,
                                f.markClassCount
                            ));
                    else {
                        if (s == 9 && f.fmt == 1) {
                            var K = l.readUshort(i, o);
                            o += 2;
                            var le = l.readUint(i, o);
                            if (((o += 4), a.ltype == 9)) a.ltype = K;
                            else if (a.ltype != K)
                                throw 'invalid extension substitution';
                            return e.GPOS.subt(i, a.ltype, u + le);
                        }
                        console.debug(
                            'unsupported GPOS table LookupType',
                            s,
                            'format',
                            f.fmt
                        );
                    }
                    return f;
                }),
                (e.GPOS.readValueRecord = function (i, s, o) {
                    var a = e._bin,
                        l = [];
                    return (
                        l.push(1 & o ? a.readShort(i, s) : 0),
                        (s += 1 & o ? 2 : 0),
                        l.push(2 & o ? a.readShort(i, s) : 0),
                        (s += 2 & o ? 2 : 0),
                        l.push(4 & o ? a.readShort(i, s) : 0),
                        (s += 4 & o ? 2 : 0),
                        l.push(8 & o ? a.readShort(i, s) : 0),
                        (s += 8 & o ? 2 : 0),
                        l
                    );
                }),
                (e.GPOS.readBaseArray = function (i, s, o) {
                    var a = e._bin,
                        l = [],
                        u = s,
                        f = a.readUshort(i, s);
                    s += 2;
                    for (var d = 0; d < f; d++) {
                        for (var m = [], v = 0; v < o; v++)
                            m.push(
                                e.GPOS.readAnchorRecord(
                                    i,
                                    u + a.readUshort(i, s)
                                )
                            ),
                                (s += 2);
                        l.push(m);
                    }
                    return l;
                }),
                (e.GPOS.readMarkArray = function (i, s) {
                    var o = e._bin,
                        a = [],
                        l = s,
                        u = o.readUshort(i, s);
                    s += 2;
                    for (var f = 0; f < u; f++) {
                        var d = e.GPOS.readAnchorRecord(
                            i,
                            o.readUshort(i, s + 2) + l
                        );
                        (d.markClass = o.readUshort(i, s)), a.push(d), (s += 4);
                    }
                    return a;
                }),
                (e.GPOS.readAnchorRecord = function (i, s) {
                    var o = e._bin,
                        a = {};
                    return (
                        (a.fmt = o.readUshort(i, s)),
                        (a.x = o.readShort(i, s + 2)),
                        (a.y = o.readShort(i, s + 4)),
                        a
                    );
                }),
                (e.GSUB = {}),
                (e.GSUB.parse = function (i, s, o, a) {
                    return e._lctf.parse(i, s, o, a, e.GSUB.subt);
                }),
                (e.GSUB.subt = function (i, s, o, a) {
                    var l = e._bin,
                        u = o,
                        f = {};
                    if (
                        ((f.fmt = l.readUshort(i, o)),
                        (o += 2),
                        s != 1 && s != 2 && s != 4 && s != 5 && s != 6)
                    )
                        return null;
                    if (
                        s == 1 ||
                        s == 2 ||
                        s == 4 ||
                        (s == 5 && f.fmt <= 2) ||
                        (s == 6 && f.fmt <= 2)
                    ) {
                        var d = l.readUshort(i, o);
                        (o += 2), (f.coverage = e._lctf.readCoverage(i, u + d));
                    }
                    if (s == 1 && f.fmt >= 1 && f.fmt <= 2) {
                        if (f.fmt == 1) (f.delta = l.readShort(i, o)), (o += 2);
                        else if (f.fmt == 2) {
                            var m = l.readUshort(i, o);
                            (o += 2),
                                (f.newg = l.readUshorts(i, o, m)),
                                (o += 2 * f.newg.length);
                        }
                    } else if (s == 2 && f.fmt == 1) {
                        (m = l.readUshort(i, o)), (o += 2), (f.seqs = []);
                        for (var v = 0; v < m; v++) {
                            var _ = l.readUshort(i, o) + u;
                            o += 2;
                            var S = l.readUshort(i, _);
                            f.seqs.push(l.readUshorts(i, _ + 2, S));
                        }
                    } else if (s == 4)
                        for (
                            f.vals = [], m = l.readUshort(i, o), o += 2, v = 0;
                            v < m;
                            v++
                        ) {
                            var w = l.readUshort(i, o);
                            (o += 2),
                                f.vals.push(e.GSUB.readLigatureSet(i, u + w));
                        }
                    else if (s == 5 && f.fmt == 2) {
                        if (f.fmt == 2) {
                            var x = l.readUshort(i, o);
                            (o += 2),
                                (f.cDef = e._lctf.readClassDef(i, u + x)),
                                (f.scset = []);
                            var A = l.readUshort(i, o);
                            for (o += 2, v = 0; v < A; v++) {
                                var T = l.readUshort(i, o);
                                (o += 2),
                                    f.scset.push(
                                        T == 0
                                            ? null
                                            : e.GSUB.readSubClassSet(i, u + T)
                                    );
                            }
                        }
                    } else if (s == 6 && f.fmt == 3) {
                        if (f.fmt == 3) {
                            for (v = 0; v < 3; v++) {
                                (m = l.readUshort(i, o)), (o += 2);
                                for (var b = [], P = 0; P < m; P++)
                                    b.push(
                                        e._lctf.readCoverage(
                                            i,
                                            u + l.readUshort(i, o + 2 * P)
                                        )
                                    );
                                (o += 2 * m),
                                    v == 0 && (f.backCvg = b),
                                    v == 1 && (f.inptCvg = b),
                                    v == 2 && (f.ahedCvg = b);
                            }
                            (m = l.readUshort(i, o)),
                                (o += 2),
                                (f.lookupRec = e.GSUB.readSubstLookupRecords(
                                    i,
                                    o,
                                    m
                                ));
                        }
                    } else {
                        if (s == 7 && f.fmt == 1) {
                            var L = l.readUshort(i, o);
                            o += 2;
                            var D = l.readUint(i, o);
                            if (((o += 4), a.ltype == 9)) a.ltype = L;
                            else if (a.ltype != L)
                                throw 'invalid extension substitution';
                            return e.GSUB.subt(i, a.ltype, u + D);
                        }
                        console.debug(
                            'unsupported GSUB table LookupType',
                            s,
                            'format',
                            f.fmt
                        );
                    }
                    return f;
                }),
                (e.GSUB.readSubClassSet = function (i, s) {
                    var o = e._bin.readUshort,
                        a = s,
                        l = [],
                        u = o(i, s);
                    s += 2;
                    for (var f = 0; f < u; f++) {
                        var d = o(i, s);
                        (s += 2), l.push(e.GSUB.readSubClassRule(i, a + d));
                    }
                    return l;
                }),
                (e.GSUB.readSubClassRule = function (i, s) {
                    var o = e._bin.readUshort,
                        a = {},
                        l = o(i, s),
                        u = o(i, (s += 2));
                    (s += 2), (a.input = []);
                    for (var f = 0; f < l - 1; f++)
                        a.input.push(o(i, s)), (s += 2);
                    return (
                        (a.substLookupRecords = e.GSUB.readSubstLookupRecords(
                            i,
                            s,
                            u
                        )),
                        a
                    );
                }),
                (e.GSUB.readSubstLookupRecords = function (i, s, o) {
                    for (var a = e._bin.readUshort, l = [], u = 0; u < o; u++)
                        l.push(a(i, s), a(i, s + 2)), (s += 4);
                    return l;
                }),
                (e.GSUB.readChainSubClassSet = function (i, s) {
                    var o = e._bin,
                        a = s,
                        l = [],
                        u = o.readUshort(i, s);
                    s += 2;
                    for (var f = 0; f < u; f++) {
                        var d = o.readUshort(i, s);
                        (s += 2),
                            l.push(e.GSUB.readChainSubClassRule(i, a + d));
                    }
                    return l;
                }),
                (e.GSUB.readChainSubClassRule = function (i, s) {
                    for (
                        var o = e._bin,
                            a = {},
                            l = ['backtrack', 'input', 'lookahead'],
                            u = 0;
                        u < l.length;
                        u++
                    ) {
                        var f = o.readUshort(i, s);
                        (s += 2),
                            u == 1 && f--,
                            (a[l[u]] = o.readUshorts(i, s, f)),
                            (s += 2 * a[l[u]].length);
                    }
                    return (
                        (f = o.readUshort(i, s)),
                        (s += 2),
                        (a.subst = o.readUshorts(i, s, 2 * f)),
                        (s += 2 * a.subst.length),
                        a
                    );
                }),
                (e.GSUB.readLigatureSet = function (i, s) {
                    var o = e._bin,
                        a = s,
                        l = [],
                        u = o.readUshort(i, s);
                    s += 2;
                    for (var f = 0; f < u; f++) {
                        var d = o.readUshort(i, s);
                        (s += 2), l.push(e.GSUB.readLigature(i, a + d));
                    }
                    return l;
                }),
                (e.GSUB.readLigature = function (i, s) {
                    var o = e._bin,
                        a = { chain: [] };
                    (a.nglyph = o.readUshort(i, s)), (s += 2);
                    var l = o.readUshort(i, s);
                    s += 2;
                    for (var u = 0; u < l - 1; u++)
                        a.chain.push(o.readUshort(i, s)), (s += 2);
                    return a;
                }),
                (e.head = {}),
                (e.head.parse = function (i, s, o) {
                    var a = e._bin,
                        l = {};
                    return (
                        a.readFixed(i, s),
                        (s += 4),
                        (l.fontRevision = a.readFixed(i, s)),
                        (s += 4),
                        a.readUint(i, s),
                        (s += 4),
                        a.readUint(i, s),
                        (s += 4),
                        (l.flags = a.readUshort(i, s)),
                        (s += 2),
                        (l.unitsPerEm = a.readUshort(i, s)),
                        (s += 2),
                        (l.created = a.readUint64(i, s)),
                        (s += 8),
                        (l.modified = a.readUint64(i, s)),
                        (s += 8),
                        (l.xMin = a.readShort(i, s)),
                        (s += 2),
                        (l.yMin = a.readShort(i, s)),
                        (s += 2),
                        (l.xMax = a.readShort(i, s)),
                        (s += 2),
                        (l.yMax = a.readShort(i, s)),
                        (s += 2),
                        (l.macStyle = a.readUshort(i, s)),
                        (s += 2),
                        (l.lowestRecPPEM = a.readUshort(i, s)),
                        (s += 2),
                        (l.fontDirectionHint = a.readShort(i, s)),
                        (s += 2),
                        (l.indexToLocFormat = a.readShort(i, s)),
                        (s += 2),
                        (l.glyphDataFormat = a.readShort(i, s)),
                        (s += 2),
                        l
                    );
                }),
                (e.hhea = {}),
                (e.hhea.parse = function (i, s, o) {
                    var a = e._bin,
                        l = {};
                    return (
                        a.readFixed(i, s),
                        (s += 4),
                        (l.ascender = a.readShort(i, s)),
                        (s += 2),
                        (l.descender = a.readShort(i, s)),
                        (s += 2),
                        (l.lineGap = a.readShort(i, s)),
                        (s += 2),
                        (l.advanceWidthMax = a.readUshort(i, s)),
                        (s += 2),
                        (l.minLeftSideBearing = a.readShort(i, s)),
                        (s += 2),
                        (l.minRightSideBearing = a.readShort(i, s)),
                        (s += 2),
                        (l.xMaxExtent = a.readShort(i, s)),
                        (s += 2),
                        (l.caretSlopeRise = a.readShort(i, s)),
                        (s += 2),
                        (l.caretSlopeRun = a.readShort(i, s)),
                        (s += 2),
                        (l.caretOffset = a.readShort(i, s)),
                        (s += 2),
                        (s += 8),
                        (l.metricDataFormat = a.readShort(i, s)),
                        (s += 2),
                        (l.numberOfHMetrics = a.readUshort(i, s)),
                        (s += 2),
                        l
                    );
                }),
                (e.hmtx = {}),
                (e.hmtx.parse = function (i, s, o, a) {
                    for (
                        var l = e._bin,
                            u = { aWidth: [], lsBearing: [] },
                            f = 0,
                            d = 0,
                            m = 0;
                        m < a.maxp.numGlyphs;
                        m++
                    )
                        m < a.hhea.numberOfHMetrics &&
                            ((f = l.readUshort(i, s)),
                            (s += 2),
                            (d = l.readShort(i, s)),
                            (s += 2)),
                            u.aWidth.push(f),
                            u.lsBearing.push(d);
                    return u;
                }),
                (e.kern = {}),
                (e.kern.parse = function (i, s, o, a) {
                    var l = e._bin,
                        u = l.readUshort(i, s);
                    if (((s += 2), u == 1))
                        return e.kern.parseV1(i, s - 2, o, a);
                    var f = l.readUshort(i, s);
                    s += 2;
                    for (var d = { glyph1: [], rval: [] }, m = 0; m < f; m++) {
                        (s += 2), (o = l.readUshort(i, s)), (s += 2);
                        var v = l.readUshort(i, s);
                        s += 2;
                        var _ = v >>> 8;
                        if ((_ &= 15) != 0)
                            throw 'unknown kern table format: ' + _;
                        s = e.kern.readFormat0(i, s, d);
                    }
                    return d;
                }),
                (e.kern.parseV1 = function (i, s, o, a) {
                    var l = e._bin;
                    l.readFixed(i, s), (s += 4);
                    var u = l.readUint(i, s);
                    s += 4;
                    for (var f = { glyph1: [], rval: [] }, d = 0; d < u; d++) {
                        l.readUint(i, s), (s += 4);
                        var m = l.readUshort(i, s);
                        (s += 2), l.readUshort(i, s), (s += 2);
                        var v = m >>> 8;
                        if ((v &= 15) != 0)
                            throw 'unknown kern table format: ' + v;
                        s = e.kern.readFormat0(i, s, f);
                    }
                    return f;
                }),
                (e.kern.readFormat0 = function (i, s, o) {
                    var a = e._bin,
                        l = -1,
                        u = a.readUshort(i, s);
                    (s += 2),
                        a.readUshort(i, s),
                        (s += 2),
                        a.readUshort(i, s),
                        (s += 2),
                        a.readUshort(i, s),
                        (s += 2);
                    for (var f = 0; f < u; f++) {
                        var d = a.readUshort(i, s);
                        s += 2;
                        var m = a.readUshort(i, s);
                        s += 2;
                        var v = a.readShort(i, s);
                        (s += 2),
                            d != l &&
                                (o.glyph1.push(d),
                                o.rval.push({ glyph2: [], vals: [] }));
                        var _ = o.rval[o.rval.length - 1];
                        _.glyph2.push(m), _.vals.push(v), (l = d);
                    }
                    return s;
                }),
                (e.loca = {}),
                (e.loca.parse = function (i, s, o, a) {
                    var l = e._bin,
                        u = [],
                        f = a.head.indexToLocFormat,
                        d = a.maxp.numGlyphs + 1;
                    if (f == 0)
                        for (var m = 0; m < d; m++)
                            u.push(l.readUshort(i, s + (m << 1)) << 1);
                    if (f == 1)
                        for (m = 0; m < d; m++)
                            u.push(l.readUint(i, s + (m << 2)));
                    return u;
                }),
                (e.maxp = {}),
                (e.maxp.parse = function (i, s, o) {
                    var a = e._bin,
                        l = {},
                        u = a.readUint(i, s);
                    return (
                        (s += 4),
                        (l.numGlyphs = a.readUshort(i, s)),
                        (s += 2),
                        u == 65536 &&
                            ((l.maxPoints = a.readUshort(i, s)),
                            (s += 2),
                            (l.maxContours = a.readUshort(i, s)),
                            (s += 2),
                            (l.maxCompositePoints = a.readUshort(i, s)),
                            (s += 2),
                            (l.maxCompositeContours = a.readUshort(i, s)),
                            (s += 2),
                            (l.maxZones = a.readUshort(i, s)),
                            (s += 2),
                            (l.maxTwilightPoints = a.readUshort(i, s)),
                            (s += 2),
                            (l.maxStorage = a.readUshort(i, s)),
                            (s += 2),
                            (l.maxFunctionDefs = a.readUshort(i, s)),
                            (s += 2),
                            (l.maxInstructionDefs = a.readUshort(i, s)),
                            (s += 2),
                            (l.maxStackElements = a.readUshort(i, s)),
                            (s += 2),
                            (l.maxSizeOfInstructions = a.readUshort(i, s)),
                            (s += 2),
                            (l.maxComponentElements = a.readUshort(i, s)),
                            (s += 2),
                            (l.maxComponentDepth = a.readUshort(i, s)),
                            (s += 2)),
                        l
                    );
                }),
                (e.name = {}),
                (e.name.parse = function (i, s, o) {
                    var a = e._bin,
                        l = {};
                    a.readUshort(i, s), (s += 2);
                    var u = a.readUshort(i, s);
                    (s += 2), a.readUshort(i, s);
                    for (
                        var f,
                            d = [
                                'copyright',
                                'fontFamily',
                                'fontSubfamily',
                                'ID',
                                'fullName',
                                'version',
                                'postScriptName',
                                'trademark',
                                'manufacturer',
                                'designer',
                                'description',
                                'urlVendor',
                                'urlDesigner',
                                'licence',
                                'licenceURL',
                                '---',
                                'typoFamilyName',
                                'typoSubfamilyName',
                                'compatibleFull',
                                'sampleText',
                                'postScriptCID',
                                'wwsFamilyName',
                                'wwsSubfamilyName',
                                'lightPalette',
                                'darkPalette',
                            ],
                            m = (s += 2),
                            v = 0;
                        v < u;
                        v++
                    ) {
                        var _ = a.readUshort(i, s);
                        s += 2;
                        var S = a.readUshort(i, s);
                        s += 2;
                        var w = a.readUshort(i, s);
                        s += 2;
                        var x = a.readUshort(i, s);
                        s += 2;
                        var A = a.readUshort(i, s);
                        s += 2;
                        var T = a.readUshort(i, s);
                        s += 2;
                        var b,
                            P = d[x],
                            L = m + 12 * u + T;
                        if (_ == 0) b = a.readUnicode(i, L, A / 2);
                        else if (_ == 3 && S == 0)
                            b = a.readUnicode(i, L, A / 2);
                        else if (S == 0) b = a.readASCII(i, L, A);
                        else if (S == 1) b = a.readUnicode(i, L, A / 2);
                        else if (S == 3) b = a.readUnicode(i, L, A / 2);
                        else {
                            if (_ != 1)
                                throw (
                                    'unknown encoding ' +
                                    S +
                                    ', platformID: ' +
                                    _
                                );
                            (b = a.readASCII(i, L, A)),
                                console.debug(
                                    'reading unknown MAC encoding ' +
                                        S +
                                        ' as ASCII'
                                );
                        }
                        var D = 'p' + _ + ',' + w.toString(16);
                        l[D] == null && (l[D] = {}),
                            (l[D][P !== void 0 ? P : x] = b),
                            (l[D]._lang = w);
                    }
                    for (var O in l)
                        if (l[O].postScriptName != null && l[O]._lang == 1033)
                            return l[O];
                    for (var O in l)
                        if (l[O].postScriptName != null && l[O]._lang == 0)
                            return l[O];
                    for (var O in l)
                        if (l[O].postScriptName != null && l[O]._lang == 3084)
                            return l[O];
                    for (var O in l)
                        if (l[O].postScriptName != null) return l[O];
                    for (var O in l) {
                        f = O;
                        break;
                    }
                    return (
                        console.debug(
                            'returning name table with languageID ' + l[f]._lang
                        ),
                        l[f]
                    );
                }),
                (e['OS/2'] = {}),
                (e['OS/2'].parse = function (i, s, o) {
                    var a = e._bin.readUshort(i, s);
                    s += 2;
                    var l = {};
                    if (a == 0) e['OS/2'].version0(i, s, l);
                    else if (a == 1) e['OS/2'].version1(i, s, l);
                    else if (a == 2 || a == 3 || a == 4)
                        e['OS/2'].version2(i, s, l);
                    else {
                        if (a != 5) throw 'unknown OS/2 table version: ' + a;
                        e['OS/2'].version5(i, s, l);
                    }
                    return l;
                }),
                (e['OS/2'].version0 = function (i, s, o) {
                    var a = e._bin;
                    return (
                        (o.xAvgCharWidth = a.readShort(i, s)),
                        (s += 2),
                        (o.usWeightClass = a.readUshort(i, s)),
                        (s += 2),
                        (o.usWidthClass = a.readUshort(i, s)),
                        (s += 2),
                        (o.fsType = a.readUshort(i, s)),
                        (s += 2),
                        (o.ySubscriptXSize = a.readShort(i, s)),
                        (s += 2),
                        (o.ySubscriptYSize = a.readShort(i, s)),
                        (s += 2),
                        (o.ySubscriptXOffset = a.readShort(i, s)),
                        (s += 2),
                        (o.ySubscriptYOffset = a.readShort(i, s)),
                        (s += 2),
                        (o.ySuperscriptXSize = a.readShort(i, s)),
                        (s += 2),
                        (o.ySuperscriptYSize = a.readShort(i, s)),
                        (s += 2),
                        (o.ySuperscriptXOffset = a.readShort(i, s)),
                        (s += 2),
                        (o.ySuperscriptYOffset = a.readShort(i, s)),
                        (s += 2),
                        (o.yStrikeoutSize = a.readShort(i, s)),
                        (s += 2),
                        (o.yStrikeoutPosition = a.readShort(i, s)),
                        (s += 2),
                        (o.sFamilyClass = a.readShort(i, s)),
                        (s += 2),
                        (o.panose = a.readBytes(i, s, 10)),
                        (s += 10),
                        (o.ulUnicodeRange1 = a.readUint(i, s)),
                        (s += 4),
                        (o.ulUnicodeRange2 = a.readUint(i, s)),
                        (s += 4),
                        (o.ulUnicodeRange3 = a.readUint(i, s)),
                        (s += 4),
                        (o.ulUnicodeRange4 = a.readUint(i, s)),
                        (s += 4),
                        (o.achVendID = [
                            a.readInt8(i, s),
                            a.readInt8(i, s + 1),
                            a.readInt8(i, s + 2),
                            a.readInt8(i, s + 3),
                        ]),
                        (s += 4),
                        (o.fsSelection = a.readUshort(i, s)),
                        (s += 2),
                        (o.usFirstCharIndex = a.readUshort(i, s)),
                        (s += 2),
                        (o.usLastCharIndex = a.readUshort(i, s)),
                        (s += 2),
                        (o.sTypoAscender = a.readShort(i, s)),
                        (s += 2),
                        (o.sTypoDescender = a.readShort(i, s)),
                        (s += 2),
                        (o.sTypoLineGap = a.readShort(i, s)),
                        (s += 2),
                        (o.usWinAscent = a.readUshort(i, s)),
                        (s += 2),
                        (o.usWinDescent = a.readUshort(i, s)),
                        (s += 2)
                    );
                }),
                (e['OS/2'].version1 = function (i, s, o) {
                    var a = e._bin;
                    return (
                        (s = e['OS/2'].version0(i, s, o)),
                        (o.ulCodePageRange1 = a.readUint(i, s)),
                        (s += 4),
                        (o.ulCodePageRange2 = a.readUint(i, s)),
                        (s += 4)
                    );
                }),
                (e['OS/2'].version2 = function (i, s, o) {
                    var a = e._bin;
                    return (
                        (s = e['OS/2'].version1(i, s, o)),
                        (o.sxHeight = a.readShort(i, s)),
                        (s += 2),
                        (o.sCapHeight = a.readShort(i, s)),
                        (s += 2),
                        (o.usDefault = a.readUshort(i, s)),
                        (s += 2),
                        (o.usBreak = a.readUshort(i, s)),
                        (s += 2),
                        (o.usMaxContext = a.readUshort(i, s)),
                        (s += 2)
                    );
                }),
                (e['OS/2'].version5 = function (i, s, o) {
                    var a = e._bin;
                    return (
                        (s = e['OS/2'].version2(i, s, o)),
                        (o.usLowerOpticalPointSize = a.readUshort(i, s)),
                        (s += 2),
                        (o.usUpperOpticalPointSize = a.readUshort(i, s)),
                        (s += 2)
                    );
                }),
                (e.post = {}),
                (e.post.parse = function (i, s, o) {
                    var a = e._bin,
                        l = {};
                    return (
                        (l.version = a.readFixed(i, s)),
                        (s += 4),
                        (l.italicAngle = a.readFixed(i, s)),
                        (s += 4),
                        (l.underlinePosition = a.readShort(i, s)),
                        (s += 2),
                        (l.underlineThickness = a.readShort(i, s)),
                        (s += 2),
                        l
                    );
                }),
                e == null && (e = {}),
                e.U == null && (e.U = {}),
                (e.U.codeToGlyph = function (i, s) {
                    var o = i.cmap,
                        a = -1;
                    if (
                        (o.p0e4 != null
                            ? (a = o.p0e4)
                            : o.p3e1 != null
                              ? (a = o.p3e1)
                              : o.p1e0 != null
                                ? (a = o.p1e0)
                                : o.p0e3 != null && (a = o.p0e3),
                        a == -1)
                    )
                        throw 'no familiar platform and encoding!';
                    var l = o.tables[a];
                    if (l.format == 0) return s >= l.map.length ? 0 : l.map[s];
                    if (l.format == 4) {
                        for (var u = -1, f = 0; f < l.endCount.length; f++)
                            if (s <= l.endCount[f]) {
                                u = f;
                                break;
                            }
                        return u == -1 || l.startCount[u] > s
                            ? 0
                            : 65535 &
                                  (l.idRangeOffset[u] != 0
                                      ? l.glyphIdArray[
                                            s -
                                                l.startCount[u] +
                                                (l.idRangeOffset[u] >> 1) -
                                                (l.idRangeOffset.length - u)
                                        ]
                                      : s + l.idDelta[u]);
                    }
                    if (l.format == 12) {
                        if (s > l.groups[l.groups.length - 1][1]) return 0;
                        for (f = 0; f < l.groups.length; f++) {
                            var d = l.groups[f];
                            if (d[0] <= s && s <= d[1])
                                return d[2] + (s - d[0]);
                        }
                        return 0;
                    }
                    throw 'unknown cmap table format ' + l.format;
                }),
                (e.U.glyphToPath = function (i, s) {
                    var o = { cmds: [], crds: [] };
                    if (i.SVG && i.SVG.entries[s]) {
                        var a = i.SVG.entries[s];
                        return a == null
                            ? o
                            : (typeof a == 'string' &&
                                  ((a = e.SVG.toPath(a)),
                                  (i.SVG.entries[s] = a)),
                              a);
                    }
                    if (i.CFF) {
                        var l = {
                                x: 0,
                                y: 0,
                                stack: [],
                                nStems: 0,
                                haveWidth: !1,
                                width: i.CFF.Private
                                    ? i.CFF.Private.defaultWidthX
                                    : 0,
                                open: !1,
                            },
                            u = i.CFF,
                            f = i.CFF.Private;
                        if (u.ROS) {
                            for (var d = 0; u.FDSelect[d + 2] <= s; ) d += 2;
                            f = u.FDArray[u.FDSelect[d + 1]].Private;
                        }
                        e.U._drawCFF(i.CFF.CharStrings[s], l, u, f, o);
                    } else i.glyf && e.U._drawGlyf(s, i, o);
                    return o;
                }),
                (e.U._drawGlyf = function (i, s, o) {
                    var a = s.glyf[i];
                    a == null && (a = s.glyf[i] = e.glyf._parseGlyf(s, i)),
                        a != null &&
                            (a.noc > -1
                                ? e.U._simpleGlyph(a, o)
                                : e.U._compoGlyph(a, s, o));
                }),
                (e.U._simpleGlyph = function (i, s) {
                    for (var o = 0; o < i.noc; o++) {
                        for (
                            var a = o == 0 ? 0 : i.endPts[o - 1] + 1,
                                l = i.endPts[o],
                                u = a;
                            u <= l;
                            u++
                        ) {
                            var f = u == a ? l : u - 1,
                                d = u == l ? a : u + 1,
                                m = 1 & i.flags[u],
                                v = 1 & i.flags[f],
                                _ = 1 & i.flags[d],
                                S = i.xs[u],
                                w = i.ys[u];
                            if (u == a)
                                if (m) {
                                    if (!v) {
                                        e.U.P.moveTo(s, S, w);
                                        continue;
                                    }
                                    e.U.P.moveTo(s, i.xs[f], i.ys[f]);
                                } else
                                    v
                                        ? e.U.P.moveTo(s, i.xs[f], i.ys[f])
                                        : e.U.P.moveTo(
                                              s,
                                              (i.xs[f] + S) / 2,
                                              (i.ys[f] + w) / 2
                                          );
                            m
                                ? v && e.U.P.lineTo(s, S, w)
                                : _
                                  ? e.U.P.qcurveTo(s, S, w, i.xs[d], i.ys[d])
                                  : e.U.P.qcurveTo(
                                        s,
                                        S,
                                        w,
                                        (S + i.xs[d]) / 2,
                                        (w + i.ys[d]) / 2
                                    );
                        }
                        e.U.P.closePath(s);
                    }
                }),
                (e.U._compoGlyph = function (i, s, o) {
                    for (var a = 0; a < i.parts.length; a++) {
                        var l = { cmds: [], crds: [] },
                            u = i.parts[a];
                        e.U._drawGlyf(u.glyphIndex, s, l);
                        for (var f = u.m, d = 0; d < l.crds.length; d += 2) {
                            var m = l.crds[d],
                                v = l.crds[d + 1];
                            o.crds.push(m * f.a + v * f.b + f.tx),
                                o.crds.push(m * f.c + v * f.d + f.ty);
                        }
                        for (d = 0; d < l.cmds.length; d++)
                            o.cmds.push(l.cmds[d]);
                    }
                }),
                (e.U._getGlyphClass = function (i, s) {
                    var o = e._lctf.getInterval(s, i);
                    return o == -1 ? 0 : s[o + 2];
                }),
                (e.U._applySubs = function (i, s, o, a) {
                    for (
                        var l = i.length - s - 1, u = 0;
                        u < o.tabs.length;
                        u++
                    )
                        if (o.tabs[u] != null) {
                            var f,
                                d = o.tabs[u];
                            if (
                                !d.coverage ||
                                (f = e._lctf.coverageIndex(d.coverage, i[s])) !=
                                    -1
                            ) {
                                if (o.ltype == 1)
                                    i[s],
                                        d.fmt == 1
                                            ? (i[s] = i[s] + d.delta)
                                            : (i[s] = d.newg[f]);
                                else if (o.ltype == 4)
                                    for (
                                        var m = d.vals[f], v = 0;
                                        v < m.length;
                                        v++
                                    ) {
                                        var _ = m[v],
                                            S = _.chain.length;
                                        if (!(S > l)) {
                                            for (
                                                var w = !0, x = 0, A = 0;
                                                A < S;
                                                A++
                                            ) {
                                                for (
                                                    ;
                                                    i[s + x + (1 + A)] == -1;

                                                )
                                                    x++;
                                                _.chain[A] !=
                                                    i[s + x + (1 + A)] &&
                                                    (w = !1);
                                            }
                                            if (w) {
                                                for (
                                                    i[s] = _.nglyph, A = 0;
                                                    A < S + x;
                                                    A++
                                                )
                                                    i[s + A + 1] = -1;
                                                break;
                                            }
                                        }
                                    }
                                else if (o.ltype == 5 && d.fmt == 2)
                                    for (
                                        var T = e._lctf.getInterval(
                                                d.cDef,
                                                i[s]
                                            ),
                                            b = d.cDef[T + 2],
                                            P = d.scset[b],
                                            L = 0;
                                        L < P.length;
                                        L++
                                    ) {
                                        var D = P[L],
                                            O = D.input;
                                        if (!(O.length > l)) {
                                            for (
                                                w = !0, A = 0;
                                                A < O.length;
                                                A++
                                            ) {
                                                var I = e._lctf.getInterval(
                                                    d.cDef,
                                                    i[s + 1 + A]
                                                );
                                                if (
                                                    T == -1 &&
                                                    d.cDef[I + 2] != O[A]
                                                ) {
                                                    w = !1;
                                                    break;
                                                }
                                            }
                                            if (w) {
                                                var U = D.substLookupRecords;
                                                for (
                                                    v = 0;
                                                    v < U.length;
                                                    v += 2
                                                )
                                                    U[v], U[v + 1];
                                            }
                                        }
                                    }
                                else if (o.ltype == 6 && d.fmt == 3) {
                                    if (
                                        !e.U._glsCovered(
                                            i,
                                            d.backCvg,
                                            s - d.backCvg.length
                                        ) ||
                                        !e.U._glsCovered(i, d.inptCvg, s) ||
                                        !e.U._glsCovered(
                                            i,
                                            d.ahedCvg,
                                            s + d.inptCvg.length
                                        )
                                    )
                                        continue;
                                    var H = d.lookupRec;
                                    for (L = 0; L < H.length; L += 2) {
                                        T = H[L];
                                        var W = a[H[L + 1]];
                                        e.U._applySubs(i, s + T, W, a);
                                    }
                                }
                            }
                        }
                }),
                (e.U._glsCovered = function (i, s, o) {
                    for (var a = 0; a < s.length; a++)
                        if (e._lctf.coverageIndex(s[a], i[o + a]) == -1)
                            return !1;
                    return !0;
                }),
                (e.U.glyphsToPath = function (i, s, o) {
                    for (
                        var a = { cmds: [], crds: [] }, l = 0, u = 0;
                        u < s.length;
                        u++
                    ) {
                        var f = s[u];
                        if (f != -1) {
                            for (
                                var d =
                                        u < s.length - 1 && s[u + 1] != -1
                                            ? s[u + 1]
                                            : 0,
                                    m = e.U.glyphToPath(i, f),
                                    v = 0;
                                v < m.crds.length;
                                v += 2
                            )
                                a.crds.push(m.crds[v] + l),
                                    a.crds.push(m.crds[v + 1]);
                            for (
                                o && a.cmds.push(o), v = 0;
                                v < m.cmds.length;
                                v++
                            )
                                a.cmds.push(m.cmds[v]);
                            o && a.cmds.push('X'),
                                (l += i.hmtx.aWidth[f]),
                                u < s.length - 1 &&
                                    (l += e.U.getPairAdjustment(i, f, d));
                        }
                    }
                    return a;
                }),
                (e.U.P = {}),
                (e.U.P.moveTo = function (i, s, o) {
                    i.cmds.push('M'), i.crds.push(s, o);
                }),
                (e.U.P.lineTo = function (i, s, o) {
                    i.cmds.push('L'), i.crds.push(s, o);
                }),
                (e.U.P.curveTo = function (i, s, o, a, l, u, f) {
                    i.cmds.push('C'), i.crds.push(s, o, a, l, u, f);
                }),
                (e.U.P.qcurveTo = function (i, s, o, a, l) {
                    i.cmds.push('Q'), i.crds.push(s, o, a, l);
                }),
                (e.U.P.closePath = function (i) {
                    i.cmds.push('Z');
                }),
                (e.U._drawCFF = function (i, s, o, a, l) {
                    for (
                        var u = s.stack,
                            f = s.nStems,
                            d = s.haveWidth,
                            m = s.width,
                            v = s.open,
                            _ = 0,
                            S = s.x,
                            w = s.y,
                            x = 0,
                            A = 0,
                            T = 0,
                            b = 0,
                            P = 0,
                            L = 0,
                            D = 0,
                            O = 0,
                            I = 0,
                            U = 0,
                            H = { val: 0, size: 0 };
                        _ < i.length;

                    ) {
                        e.CFF.getCharString(i, _, H);
                        var W = H.val;
                        if (((_ += H.size), W == 'o1' || W == 'o18'))
                            u.length % 2 != 0 &&
                                !d &&
                                (m = u.shift() + a.nominalWidthX),
                                (f += u.length >> 1),
                                (u.length = 0),
                                (d = !0);
                        else if (W == 'o3' || W == 'o23')
                            u.length % 2 != 0 &&
                                !d &&
                                (m = u.shift() + a.nominalWidthX),
                                (f += u.length >> 1),
                                (u.length = 0),
                                (d = !0);
                        else if (W == 'o4')
                            u.length > 1 &&
                                !d &&
                                ((m = u.shift() + a.nominalWidthX), (d = !0)),
                                v && e.U.P.closePath(l),
                                (w += u.pop()),
                                e.U.P.moveTo(l, S, w),
                                (v = !0);
                        else if (W == 'o5')
                            for (; u.length > 0; )
                                (S += u.shift()),
                                    (w += u.shift()),
                                    e.U.P.lineTo(l, S, w);
                        else if (W == 'o6' || W == 'o7')
                            for (
                                var q = u.length, K = W == 'o6', le = 0;
                                le < q;
                                le++
                            ) {
                                var ee = u.shift();
                                K ? (S += ee) : (w += ee),
                                    (K = !K),
                                    e.U.P.lineTo(l, S, w);
                            }
                        else if (W == 'o8' || W == 'o24') {
                            q = u.length;
                            for (var de = 0; de + 6 <= q; )
                                (x = S + u.shift()),
                                    (A = w + u.shift()),
                                    (T = x + u.shift()),
                                    (b = A + u.shift()),
                                    (S = T + u.shift()),
                                    (w = b + u.shift()),
                                    e.U.P.curveTo(l, x, A, T, b, S, w),
                                    (de += 6);
                            W == 'o24' &&
                                ((S += u.shift()),
                                (w += u.shift()),
                                e.U.P.lineTo(l, S, w));
                        } else {
                            if (W == 'o11') break;
                            if (
                                W == 'o1234' ||
                                W == 'o1235' ||
                                W == 'o1236' ||
                                W == 'o1237'
                            )
                                W == 'o1234' &&
                                    ((A = w),
                                    (T = (x = S + u.shift()) + u.shift()),
                                    (U = b = A + u.shift()),
                                    (L = b),
                                    (O = w),
                                    (S =
                                        (D =
                                            (P =
                                                (I = T + u.shift()) +
                                                u.shift()) + u.shift()) +
                                        u.shift()),
                                    e.U.P.curveTo(l, x, A, T, b, I, U),
                                    e.U.P.curveTo(l, P, L, D, O, S, w)),
                                    W == 'o1235' &&
                                        ((x = S + u.shift()),
                                        (A = w + u.shift()),
                                        (T = x + u.shift()),
                                        (b = A + u.shift()),
                                        (I = T + u.shift()),
                                        (U = b + u.shift()),
                                        (P = I + u.shift()),
                                        (L = U + u.shift()),
                                        (D = P + u.shift()),
                                        (O = L + u.shift()),
                                        (S = D + u.shift()),
                                        (w = O + u.shift()),
                                        u.shift(),
                                        e.U.P.curveTo(l, x, A, T, b, I, U),
                                        e.U.P.curveTo(l, P, L, D, O, S, w)),
                                    W == 'o1236' &&
                                        ((x = S + u.shift()),
                                        (A = w + u.shift()),
                                        (T = x + u.shift()),
                                        (U = b = A + u.shift()),
                                        (L = b),
                                        (D =
                                            (P =
                                                (I = T + u.shift()) +
                                                u.shift()) + u.shift()),
                                        (O = L + u.shift()),
                                        (S = D + u.shift()),
                                        e.U.P.curveTo(l, x, A, T, b, I, U),
                                        e.U.P.curveTo(l, P, L, D, O, S, w)),
                                    W == 'o1237' &&
                                        ((x = S + u.shift()),
                                        (A = w + u.shift()),
                                        (T = x + u.shift()),
                                        (b = A + u.shift()),
                                        (I = T + u.shift()),
                                        (U = b + u.shift()),
                                        (P = I + u.shift()),
                                        (L = U + u.shift()),
                                        (D = P + u.shift()),
                                        (O = L + u.shift()),
                                        Math.abs(D - S) > Math.abs(O - w)
                                            ? (S = D + u.shift())
                                            : (w = O + u.shift()),
                                        e.U.P.curveTo(l, x, A, T, b, I, U),
                                        e.U.P.curveTo(l, P, L, D, O, S, w));
                            else if (W == 'o14') {
                                if (
                                    (u.length > 0 &&
                                        !d &&
                                        ((m = u.shift() + o.nominalWidthX),
                                        (d = !0)),
                                    u.length == 4)
                                ) {
                                    var Z = u.shift(),
                                        se = u.shift(),
                                        J = u.shift(),
                                        F = u.shift(),
                                        $ = e.CFF.glyphBySE(o, J),
                                        fe = e.CFF.glyphBySE(o, F);
                                    e.U._drawCFF(o.CharStrings[$], s, o, a, l),
                                        (s.x = Z),
                                        (s.y = se),
                                        e.U._drawCFF(
                                            o.CharStrings[fe],
                                            s,
                                            o,
                                            a,
                                            l
                                        );
                                }
                                v && (e.U.P.closePath(l), (v = !1));
                            } else if (W == 'o19' || W == 'o20')
                                u.length % 2 != 0 &&
                                    !d &&
                                    (m = u.shift() + a.nominalWidthX),
                                    (f += u.length >> 1),
                                    (u.length = 0),
                                    (d = !0),
                                    (_ += (f + 7) >> 3);
                            else if (W == 'o21')
                                u.length > 2 &&
                                    !d &&
                                    ((m = u.shift() + a.nominalWidthX),
                                    (d = !0)),
                                    (w += u.pop()),
                                    (S += u.pop()),
                                    v && e.U.P.closePath(l),
                                    e.U.P.moveTo(l, S, w),
                                    (v = !0);
                            else if (W == 'o22')
                                u.length > 1 &&
                                    !d &&
                                    ((m = u.shift() + a.nominalWidthX),
                                    (d = !0)),
                                    (S += u.pop()),
                                    v && e.U.P.closePath(l),
                                    e.U.P.moveTo(l, S, w),
                                    (v = !0);
                            else if (W == 'o25') {
                                for (; u.length > 6; )
                                    (S += u.shift()),
                                        (w += u.shift()),
                                        e.U.P.lineTo(l, S, w);
                                (x = S + u.shift()),
                                    (A = w + u.shift()),
                                    (T = x + u.shift()),
                                    (b = A + u.shift()),
                                    (S = T + u.shift()),
                                    (w = b + u.shift()),
                                    e.U.P.curveTo(l, x, A, T, b, S, w);
                            } else if (W == 'o26')
                                for (
                                    u.length % 2 && (S += u.shift());
                                    u.length > 0;

                                )
                                    (x = S),
                                        (A = w + u.shift()),
                                        (S = T = x + u.shift()),
                                        (w = (b = A + u.shift()) + u.shift()),
                                        e.U.P.curveTo(l, x, A, T, b, S, w);
                            else if (W == 'o27')
                                for (
                                    u.length % 2 && (w += u.shift());
                                    u.length > 0;

                                )
                                    (A = w),
                                        (T = (x = S + u.shift()) + u.shift()),
                                        (b = A + u.shift()),
                                        (S = T + u.shift()),
                                        (w = b),
                                        e.U.P.curveTo(l, x, A, T, b, S, w);
                            else if (W == 'o10' || W == 'o29') {
                                var ne = W == 'o10' ? a : o;
                                if (u.length == 0)
                                    console.debug('error: empty stack');
                                else {
                                    var ae = u.pop(),
                                        me = ne.Subrs[ae + ne.Bias];
                                    (s.x = S),
                                        (s.y = w),
                                        (s.nStems = f),
                                        (s.haveWidth = d),
                                        (s.width = m),
                                        (s.open = v),
                                        e.U._drawCFF(me, s, o, a, l),
                                        (S = s.x),
                                        (w = s.y),
                                        (f = s.nStems),
                                        (d = s.haveWidth),
                                        (m = s.width),
                                        (v = s.open);
                                }
                            } else if (W == 'o30' || W == 'o31') {
                                var ge = u.length,
                                    Ae = ((de = 0), W == 'o31');
                                for (de += ge - (q = -3 & ge); de < q; )
                                    Ae
                                        ? ((A = w),
                                          (T = (x = S + u.shift()) + u.shift()),
                                          (w = (b = A + u.shift()) + u.shift()),
                                          q - de == 5
                                              ? ((S = T + u.shift()), de++)
                                              : (S = T),
                                          (Ae = !1))
                                        : ((x = S),
                                          (A = w + u.shift()),
                                          (T = x + u.shift()),
                                          (b = A + u.shift()),
                                          (S = T + u.shift()),
                                          q - de == 5
                                              ? ((w = b + u.shift()), de++)
                                              : (w = b),
                                          (Ae = !0)),
                                        e.U.P.curveTo(l, x, A, T, b, S, w),
                                        (de += 4);
                            } else {
                                if ((W + '').charAt(0) == 'o')
                                    throw (
                                        (console.debug(
                                            'Unknown operation: ' + W,
                                            i
                                        ),
                                        W)
                                    );
                                u.push(W);
                            }
                        }
                    }
                    (s.x = S),
                        (s.y = w),
                        (s.nStems = f),
                        (s.haveWidth = d),
                        (s.width = m),
                        (s.open = v);
                });
            var t = e,
                n = { Typr: t };
            return (
                (r.Typr = t),
                (r.default = n),
                Object.defineProperty(r, '__esModule', { value: !0 }),
                r
            );
        })({}).Typr
    );
}
/*!
Custom bundle of woff2otf (https://github.com/arty-name/woff2otf) with fflate
(https://github.com/101arrowz/fflate) for use in Troika text rendering. 
Original licenses apply: 
- fflate: https://github.com/101arrowz/fflate/blob/master/LICENSE (MIT)
- woff2otf.js: https://github.com/arty-name/woff2otf/blob/master/woff2otf.js (Apache2)
*/ function FK() {
    return (function (r) {
        var e = Uint8Array,
            t = Uint16Array,
            n = Uint32Array,
            i = new e([
                0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4,
                4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0,
            ]),
            s = new e([
                0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9,
                9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0,
            ]),
            o = new e([
                16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1,
                15,
            ]),
            a = function (W, q) {
                for (var K = new t(31), le = 0; le < 31; ++le)
                    K[le] = q += 1 << W[le - 1];
                var ee = new n(K[30]);
                for (le = 1; le < 30; ++le)
                    for (var de = K[le]; de < K[le + 1]; ++de)
                        ee[de] = ((de - K[le]) << 5) | le;
                return [K, ee];
            },
            l = a(i, 2),
            u = l[0],
            f = l[1];
        (u[28] = 258), (f[258] = 28);
        for (var d = a(s, 0)[0], m = new t(32768), v = 0; v < 32768; ++v) {
            var _ = ((43690 & v) >>> 1) | ((21845 & v) << 1);
            (_ =
                ((61680 & (_ = ((52428 & _) >>> 2) | ((13107 & _) << 2))) >>>
                    4) |
                ((3855 & _) << 4)),
                (m[v] = (((65280 & _) >>> 8) | ((255 & _) << 8)) >>> 1);
        }
        var S = function (W, q, K) {
                for (var le = W.length, ee = 0, de = new t(q); ee < le; ++ee)
                    ++de[W[ee] - 1];
                var Z,
                    se = new t(q);
                for (ee = 0; ee < q; ++ee)
                    se[ee] = (se[ee - 1] + de[ee - 1]) << 1;
                {
                    Z = new t(1 << q);
                    var J = 15 - q;
                    for (ee = 0; ee < le; ++ee)
                        if (W[ee])
                            for (
                                var F = (ee << 4) | W[ee],
                                    $ = q - W[ee],
                                    fe = se[W[ee] - 1]++ << $,
                                    ne = fe | ((1 << $) - 1);
                                fe <= ne;
                                ++fe
                            )
                                Z[m[fe] >>> J] = F;
                }
                return Z;
            },
            w = new e(288);
        for (v = 0; v < 144; ++v) w[v] = 8;
        for (v = 144; v < 256; ++v) w[v] = 9;
        for (v = 256; v < 280; ++v) w[v] = 7;
        for (v = 280; v < 288; ++v) w[v] = 8;
        var x = new e(32);
        for (v = 0; v < 32; ++v) x[v] = 5;
        var A = S(w, 9),
            T = S(x, 5),
            b = function (W) {
                for (var q = W[0], K = 1; K < W.length; ++K)
                    W[K] > q && (q = W[K]);
                return q;
            },
            P = function (W, q, K) {
                var le = (q / 8) | 0;
                return ((W[le] | (W[le + 1] << 8)) >> (7 & q)) & K;
            },
            L = function (W, q) {
                var K = (q / 8) | 0;
                return (W[K] | (W[K + 1] << 8) | (W[K + 2] << 16)) >> (7 & q);
            },
            D = [
                'unexpected EOF',
                'invalid block type',
                'invalid length/literal',
                'invalid distance',
                'stream finished',
                'no stream handler',
                ,
                'no callback',
                'invalid UTF-8 data',
                'extra field too long',
                'date not in range 1980-2099',
                'filename too long',
                'stream finishing',
                'invalid zip data',
            ],
            O = function (W, q, K) {
                var le = new Error(q || D[W]);
                if (
                    ((le.code = W),
                    Error.captureStackTrace && Error.captureStackTrace(le, O),
                    !K)
                )
                    throw le;
                return le;
            },
            I = function (W, q, K) {
                var le = W.length;
                if (!le || (K && !K.l && le < 5)) return q || new e(0);
                var ee = !q || K,
                    de = !K || K.i;
                K || (K = {}), q || (q = new e(3 * le));
                var Z,
                    se = function (lt) {
                        var Ct = q.length;
                        if (lt > Ct) {
                            var Dt = new e(Math.max(2 * Ct, lt));
                            Dt.set(q), (q = Dt);
                        }
                    },
                    J = K.f || 0,
                    F = K.p || 0,
                    $ = K.b || 0,
                    fe = K.l,
                    ne = K.d,
                    ae = K.m,
                    me = K.n,
                    ge = 8 * le;
                do {
                    if (!fe) {
                        K.f = J = P(W, F, 1);
                        var Ae = P(W, F + 1, 3);
                        if (((F += 3), !Ae)) {
                            var je =
                                    W[
                                        (te =
                                            (((Z = F) / 8) | 0) +
                                            (7 & Z && 1) +
                                            4) - 4
                                    ] |
                                    (W[te - 3] << 8),
                                Qe = te + je;
                            if (Qe > le) {
                                de && O(0);
                                break;
                            }
                            ee && se($ + je),
                                q.set(W.subarray(te, Qe), $),
                                (K.b = $ += je),
                                (K.p = F = 8 * Qe);
                            continue;
                        }
                        if (Ae == 1) (fe = A), (ne = T), (ae = 9), (me = 5);
                        else if (Ae == 2) {
                            var Ke = P(W, F, 31) + 257,
                                X = P(W, F + 10, 15) + 4,
                                He = Ke + P(W, F + 5, 31) + 1;
                            F += 14;
                            for (
                                var Fe = new e(He), We = new e(19), Re = 0;
                                Re < X;
                                ++Re
                            )
                                We[o[Re]] = P(W, F + 3 * Re, 7);
                            F += 3 * X;
                            var st = b(We),
                                De = (1 << st) - 1,
                                Je = S(We, st);
                            for (Re = 0; Re < He; ) {
                                var te,
                                    V = Je[P(W, F, De)];
                                if (((F += 15 & V), (te = V >>> 4) < 16))
                                    Fe[Re++] = te;
                                else {
                                    var Me = 0,
                                        Le = 0;
                                    for (
                                        te == 16
                                            ? ((Le = 3 + P(W, F, 3)),
                                              (F += 2),
                                              (Me = Fe[Re - 1]))
                                            : te == 17
                                              ? ((Le = 3 + P(W, F, 7)),
                                                (F += 3))
                                              : te == 18 &&
                                                ((Le = 11 + P(W, F, 127)),
                                                (F += 7));
                                        Le--;

                                    )
                                        Fe[Re++] = Me;
                                }
                            }
                            var Ie = Fe.subarray(0, Ke),
                                Ce = Fe.subarray(Ke);
                            (ae = b(Ie)),
                                (me = b(Ce)),
                                (fe = S(Ie, ae)),
                                (ne = S(Ce, me));
                        } else O(1);
                        if (F > ge) {
                            de && O(0);
                            break;
                        }
                    }
                    ee && se($ + 131072);
                    for (
                        var gt = (1 << ae) - 1, Xe = (1 << me) - 1, Ze = F;
                        ;
                        Ze = F
                    ) {
                        var at = (Me = fe[L(W, F) & gt]) >>> 4;
                        if ((F += 15 & Me) > ge) {
                            de && O(0);
                            break;
                        }
                        if ((Me || O(2), at < 256)) q[$++] = at;
                        else {
                            if (at == 256) {
                                (Ze = F), (fe = null);
                                break;
                            }
                            var Ye = at - 254;
                            if (at > 264) {
                                var ot = i[(Re = at - 257)];
                                (Ye = P(W, F, (1 << ot) - 1) + u[Re]),
                                    (F += ot);
                            }
                            var kt = ne[L(W, F) & Xe],
                                pt = kt >>> 4;
                            if (
                                (kt || O(3),
                                (F += 15 & kt),
                                (Ce = d[pt]),
                                pt > 3 &&
                                    ((ot = s[pt]),
                                    (Ce += L(W, F) & ((1 << ot) - 1)),
                                    (F += ot)),
                                F > ge)
                            ) {
                                de && O(0);
                                break;
                            }
                            ee && se($ + 131072);
                            for (var et = $ + Ye; $ < et; $ += 4)
                                (q[$] = q[$ - Ce]),
                                    (q[$ + 1] = q[$ + 1 - Ce]),
                                    (q[$ + 2] = q[$ + 2 - Ce]),
                                    (q[$ + 3] = q[$ + 3 - Ce]);
                            $ = et;
                        }
                    }
                    (K.l = fe),
                        (K.p = Ze),
                        (K.b = $),
                        fe && ((J = 1), (K.m = ae), (K.d = ne), (K.n = me));
                } while (!J);
                return $ == q.length
                    ? q
                    : (function (lt, Ct, Dt) {
                          (Dt == null || Dt > lt.length) && (Dt = lt.length);
                          var _e = new (
                              lt instanceof t ? t : lt instanceof n ? n : e
                          )(Dt - Ct);
                          return _e.set(lt.subarray(Ct, Dt)), _e;
                      })(q, 0, $);
            },
            U = new e(0),
            H = typeof TextDecoder < 'u' && new TextDecoder();
        try {
            H.decode(U, { stream: !0 });
        } catch {}
        return (
            (r.convert_streams = function (W) {
                var q = new DataView(W),
                    K = 0;
                function le() {
                    var Ke = q.getUint16(K);
                    return (K += 2), Ke;
                }
                function ee() {
                    var Ke = q.getUint32(K);
                    return (K += 4), Ke;
                }
                function de(Ke) {
                    je.setUint16(Qe, Ke), (Qe += 2);
                }
                function Z(Ke) {
                    je.setUint32(Qe, Ke), (Qe += 4);
                }
                for (
                    var se = {
                            signature: ee(),
                            flavor: ee(),
                            length: ee(),
                            numTables: le(),
                            reserved: le(),
                            totalSfntSize: ee(),
                            majorVersion: le(),
                            minorVersion: le(),
                            metaOffset: ee(),
                            metaLength: ee(),
                            metaOrigLength: ee(),
                            privOffset: ee(),
                            privLength: ee(),
                        },
                        J = 0;
                    Math.pow(2, J) <= se.numTables;

                )
                    J++;
                J--;
                for (
                    var F = 16 * Math.pow(2, J),
                        $ = 16 * se.numTables - F,
                        fe = 12,
                        ne = [],
                        ae = 0;
                    ae < se.numTables;
                    ae++
                )
                    ne.push({
                        tag: ee(),
                        offset: ee(),
                        compLength: ee(),
                        origLength: ee(),
                        origChecksum: ee(),
                    }),
                        (fe += 16);
                var me,
                    ge = new Uint8Array(
                        12 +
                            16 * ne.length +
                            ne.reduce(function (Ke, X) {
                                return Ke + X.origLength + 4;
                            }, 0)
                    ),
                    Ae = ge.buffer,
                    je = new DataView(Ae),
                    Qe = 0;
                return (
                    Z(se.flavor),
                    de(se.numTables),
                    de(F),
                    de(J),
                    de($),
                    ne.forEach(function (Ke) {
                        Z(Ke.tag),
                            Z(Ke.origChecksum),
                            Z(fe),
                            Z(Ke.origLength),
                            (Ke.outOffset = fe),
                            (fe += Ke.origLength) % 4 != 0 &&
                                (fe += 4 - (fe % 4));
                    }),
                    ne.forEach(function (Ke) {
                        var X,
                            He = W.slice(Ke.offset, Ke.offset + Ke.compLength);
                        if (Ke.compLength != Ke.origLength) {
                            var Fe = new Uint8Array(Ke.origLength);
                            (X = new Uint8Array(He, 2)), I(X, Fe);
                        } else Fe = new Uint8Array(He);
                        ge.set(Fe, Ke.outOffset);
                        var We = 0;
                        (fe = Ke.outOffset + Ke.origLength) % 4 != 0 &&
                            (We = 4 - (fe % 4)),
                            ge.set(
                                new Uint8Array(We).buffer,
                                Ke.outOffset + Ke.origLength
                            ),
                            (me = fe + We);
                    }),
                    Ae.slice(0, me)
                );
            }),
            Object.defineProperty(r, '__esModule', { value: !0 }),
            r
        );
    })({}).convert_streams;
}
function BK(r, e) {
    const t = { M: 2, L: 2, Q: 4, C: 6, Z: 0 },
        n = {
            C: '18g,ca,368,1kz',
            D: '17k,6,2,2+4,5+c,2+6,2+1,10+1,9+f,j+11,2+1,a,2,2+1,15+2,3,j+2,6+3,2+8,2,2,2+1,w+a,4+e,3+3,2,3+2,3+5,23+w,2f+4,3,2+9,2,b,2+3,3,1k+9,6+1,3+1,2+2,2+d,30g,p+y,1,1+1g,f+x,2,sd2+1d,jf3+4,f+3,2+4,2+2,b+3,42,2,4+2,2+1,2,3,t+1,9f+w,2,el+2,2+g,d+2,2l,2+1,5,3+1,2+1,2,3,6,16wm+1v',
            R: '17m+3,2,2,6+3,m,15+2,2+2,h+h,13,3+8,2,2,3+1,2,p+1,x,5+4,5,a,2,2,3,u,c+2,g+1,5,2+1,4+1,5j,6+1,2,b,2+2,f,2+1,1s+2,2,3+1,7,1ez0,2,2+1,4+4,b,4,3,b,42,2+2,4,3,2+1,2,o+3,ae,ep,x,2o+2,3+1,3,5+1,6',
            L: 'x9u,jff,a,fd,jv',
            T: '4t,gj+33,7o+4,1+1,7c+18,2,2+1,2+1,2,21+a,2,1b+k,h,2u+6,3+5,3+1,2+3,y,2,v+q,2k+a,1n+8,a,p+3,2+8,2+2,2+4,18+2,3c+e,2+v,1k,2,5+7,5,4+6,b+1,u,1n,5+3,9,l+1,r,3+1,1m,5+1,5+1,3+2,4,v+1,4,c+1,1m,5+4,2+1,5,l+1,n+5,2,1n,3,2+3,9,8+1,c+1,v,1q,d,1f,4,1m+2,6+2,2+3,8+1,c+1,u,1n,3,7,6+1,l+1,t+1,1m+1,5+3,9,l+1,u,21,8+2,2,2j,3+6,d+7,2r,3+8,c+5,23+1,s,2,2,1k+d,2+4,2+1,6+a,2+z,a,2v+3,2+5,2+1,3+1,q+1,5+2,h+3,e,3+1,7,g,jk+2,qb+2,u+2,u+1,v+1,1t+1,2+6,9,3+a,a,1a+2,3c+1,z,3b+2,5+1,a,7+2,64+1,3,1n,2+6,2,2,3+7,7+9,3,1d+d,1,1+1,1s+3,1d,2+4,2,6,15+8,d+1,x+3,3+1,2+2,1l,2+1,4,2+2,1n+7,3+1,49+2,2+c,2+6,5,7,4+1,5j+1l,2+4,ek,3+1,r+4,1e+4,6+5,2p+c,1+3,1,1+2,1+b,2db+2,3y,2p+v,ff+3,30+1,n9x,1+2,2+9,x+1,29+1,7l,4,5,q+1,6,48+1,r+h,e,13+7,q+a,1b+2,1d,3+3,3+1,14,1w+5,3+1,3+1,d,9,1c,1g,2+2,3+1,6+1,2,17+1,9,6n,3,5,fn5,ki+f,h+f,5s,6y+2,ea,6b,46+4,1af+2,2+1,6+3,15+2,5,4m+1,fy+3,as+1,4a+a,4x,1j+e,1l+2,1e+3,3+1,1y+2,11+4,2+7,1r,d+1,1h+8,b+3,3,2o+2,3,2+1,7,4h,4+7,m+1,1m+1,4,12+6,4+4,5g+7,3+2,2,o,2d+5,2,5+1,2+1,6n+3,7+1,2+1,s+1,2e+7,3,2+1,2z,2,3+5,2,2u+2,3+3,2+4,78+8,2+1,75+1,2,5,41+3,3+1,5,x+9,15+5,3+3,9,a+5,3+2,1b+c,2+1,bb+6,2+5,2,2b+l,3+6,2+1,2+1,3f+5,4,2+1,2+6,2,21+1,4,2,9o+1,470+8,at4+4,1o+6,t5,1s+3,2a,f5l+1,2+3,43o+2,a+7,1+7,3+6,v+3,45+2,1j0+1i,5+1d,9,f,n+4,2+e,11t+6,2+g,3+6,2+1,2+4,7a+6,c6+3,15t+6,32+6,1,gzau,v+2n,3l+6n',
        },
        i = 1,
        s = 2,
        o = 4,
        a = 8,
        l = 16,
        u = 32;
    let f;
    function d(D) {
        if (!f) {
            const O = { R: s, L: i, D: o, C: l, U: u, T: a };
            f = new Map();
            for (let I in n) {
                let U = 0;
                n[I].split(',').forEach((H) => {
                    let [W, q] = H.split('+');
                    (W = parseInt(W, 36)),
                        (q = q ? parseInt(q, 36) : 0),
                        f.set((U += W), O[I]);
                    for (let K = q; K--; ) f.set(++U, O[I]);
                });
            }
        }
        return f.get(D) || u;
    }
    const m = 1,
        v = 2,
        _ = 3,
        S = 4,
        w = [null, 'isol', 'init', 'fina', 'medi'];
    function x(D) {
        const O = new Uint8Array(D.length);
        let I = u,
            U = m,
            H = -1;
        for (let W = 0; W < D.length; W++) {
            const q = D.codePointAt(W);
            let K = d(q) | 0,
                le = m;
            K & a ||
                (I & (i | o | l)
                    ? K & (s | o | l)
                        ? ((le = _), (U === m || U === _) && O[H]++)
                        : K & (i | u) && (U === v || U === S) && O[H]--
                    : I & (s | u) && (U === v || U === S) && O[H]--,
                (U = O[W] = le),
                (I = K),
                (H = W),
                q > 65535 && W++);
        }
        return O;
    }
    function A(D, O) {
        const I = [];
        for (let H = 0; H < O.length; H++) {
            const W = O.codePointAt(H);
            W > 65535 && H++, I.push(r.U.codeToGlyph(D, W));
        }
        const U = D.GSUB;
        if (U) {
            const { lookupList: H, featureList: W } = U;
            let q;
            const K =
                    /^(rlig|liga|mset|isol|init|fina|medi|half|pres|blws|ccmp)$/,
                le = [];
            W.forEach((ee) => {
                if (K.test(ee.tag))
                    for (let de = 0; de < ee.tab.length; de++) {
                        if (le[ee.tab[de]]) continue;
                        le[ee.tab[de]] = !0;
                        const Z = H[ee.tab[de]],
                            se = /^(isol|init|fina|medi)$/.test(ee.tag);
                        se && !q && (q = x(O));
                        for (let J = 0; J < I.length; J++)
                            (!q || !se || w[q[J]] === ee.tag) &&
                                r.U._applySubs(I, J, Z, H);
                    }
            });
        }
        return I;
    }
    function T(D, O) {
        const I = new Int16Array(O.length * 3);
        let U = 0;
        for (; U < O.length; U++) {
            const K = O[U];
            if (K === -1) continue;
            I[U * 3 + 2] = D.hmtx.aWidth[K];
            const le = D.GPOS;
            if (le) {
                const ee = le.lookupList;
                for (let de = 0; de < ee.length; de++) {
                    const Z = ee[de];
                    for (let se = 0; se < Z.tabs.length; se++) {
                        const J = Z.tabs[se];
                        if (Z.ltype === 1) {
                            if (
                                r._lctf.coverageIndex(J.coverage, K) !== -1 &&
                                J.pos
                            ) {
                                q(J.pos, U);
                                break;
                            }
                        } else if (Z.ltype === 2) {
                            let F = null,
                                $ = H();
                            if ($ !== -1) {
                                const fe = r._lctf.coverageIndex(
                                    J.coverage,
                                    O[$]
                                );
                                if (fe !== -1) {
                                    if (J.fmt === 1) {
                                        const ne = J.pairsets[fe];
                                        for (let ae = 0; ae < ne.length; ae++)
                                            ne[ae].gid2 === K && (F = ne[ae]);
                                    } else if (J.fmt === 2) {
                                        const ne = r.U._getGlyphClass(
                                                O[$],
                                                J.classDef1
                                            ),
                                            ae = r.U._getGlyphClass(
                                                K,
                                                J.classDef2
                                            );
                                        F = J.matrix[ne][ae];
                                    }
                                    if (F) {
                                        F.val1 && q(F.val1, $),
                                            F.val2 && q(F.val2, U);
                                        break;
                                    }
                                }
                            }
                        } else if (Z.ltype === 4) {
                            const F = r._lctf.coverageIndex(J.markCoverage, K);
                            if (F !== -1) {
                                const $ = H(W),
                                    fe =
                                        $ === -1
                                            ? -1
                                            : r._lctf.coverageIndex(
                                                  J.baseCoverage,
                                                  O[$]
                                              );
                                if (fe !== -1) {
                                    const ne = J.markArray[F],
                                        ae = J.baseArray[fe][ne.markClass];
                                    (I[U * 3] =
                                        ae.x - ne.x + I[$ * 3] - I[$ * 3 + 2]),
                                        (I[U * 3 + 1] =
                                            ae.y - ne.y + I[$ * 3 + 1]);
                                    break;
                                }
                            }
                        } else if (Z.ltype === 6) {
                            const F = r._lctf.coverageIndex(J.mark1Coverage, K);
                            if (F !== -1) {
                                const $ = H();
                                if ($ !== -1) {
                                    const fe = O[$];
                                    if (b(D, fe) === 3) {
                                        const ne = r._lctf.coverageIndex(
                                            J.mark2Coverage,
                                            fe
                                        );
                                        if (ne !== -1) {
                                            const ae = J.mark1Array[F],
                                                me =
                                                    J.mark2Array[ne][
                                                        ae.markClass
                                                    ];
                                            (I[U * 3] =
                                                me.x -
                                                ae.x +
                                                I[$ * 3] -
                                                I[$ * 3 + 2]),
                                                (I[U * 3 + 1] =
                                                    me.y - ae.y + I[$ * 3 + 1]);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            } else if (D.kern && !D.cff) {
                const ee = H();
                if (ee !== -1) {
                    const de = D.kern.glyph1.indexOf(O[ee]);
                    if (de !== -1) {
                        const Z = D.kern.rval[de].glyph2.indexOf(K);
                        Z !== -1 && (I[ee * 3 + 2] += D.kern.rval[de].vals[Z]);
                    }
                }
            }
        }
        return I;
        function H(K) {
            for (let le = U - 1; le >= 0; le--)
                if (O[le] !== -1 && (!K || K(O[le]))) return le;
            return -1;
        }
        function W(K) {
            return b(D, K) === 1;
        }
        function q(K, le) {
            for (let ee = 0; ee < 3; ee++) I[le * 3 + ee] += K[ee] || 0;
        }
    }
    function b(D, O) {
        const I = D.GDEF && D.GDEF.glyphClassDef;
        return I ? r.U._getGlyphClass(O, I) : 0;
    }
    function P(...D) {
        for (let O = 0; O < D.length; O++)
            if (typeof D[O] == 'number') return D[O];
    }
    function L(D) {
        const O = Object.create(null),
            I = D['OS/2'],
            U = D.hhea,
            H = D.head.unitsPerEm,
            W = P(I && I.sTypoAscender, U && U.ascender, H),
            q = {
                unitsPerEm: H,
                ascender: W,
                descender: P(I && I.sTypoDescender, U && U.descender, 0),
                capHeight: P(I && I.sCapHeight, W),
                xHeight: P(I && I.sxHeight, W),
                lineGap: P(I && I.sTypoLineGap, U && U.lineGap),
                supportsCodePoint(K) {
                    return r.U.codeToGlyph(D, K) > 0;
                },
                forEachGlyph(K, le, ee, de) {
                    let Z = 0;
                    const se = (1 / q.unitsPerEm) * le,
                        J = A(D, K);
                    let F = 0;
                    const $ = T(D, J);
                    return (
                        J.forEach((fe, ne) => {
                            if (fe !== -1) {
                                let ae = O[fe];
                                if (!ae) {
                                    const { cmds: me, crds: ge } =
                                        r.U.glyphToPath(D, fe);
                                    let Ae = '',
                                        je = 0;
                                    for (
                                        let Fe = 0, We = me.length;
                                        Fe < We;
                                        Fe++
                                    ) {
                                        const Re = t[me[Fe]];
                                        Ae += me[Fe];
                                        for (let st = 1; st <= Re; st++)
                                            Ae +=
                                                (st > 1 ? ',' : '') + ge[je++];
                                    }
                                    let Qe, Ke, X, He;
                                    if (ge.length) {
                                        (Qe = Ke = 1 / 0), (X = He = -1 / 0);
                                        for (
                                            let Fe = 0, We = ge.length;
                                            Fe < We;
                                            Fe += 2
                                        ) {
                                            let Re = ge[Fe],
                                                st = ge[Fe + 1];
                                            Re < Qe && (Qe = Re),
                                                st < Ke && (Ke = st),
                                                Re > X && (X = Re),
                                                st > He && (He = st);
                                        }
                                    } else Qe = X = Ke = He = 0;
                                    ae = O[fe] = {
                                        index: fe,
                                        advanceWidth: D.hmtx.aWidth[fe],
                                        xMin: Qe,
                                        yMin: Ke,
                                        xMax: X,
                                        yMax: He,
                                        path: Ae,
                                    };
                                }
                                de.call(
                                    null,
                                    ae,
                                    Z + $[ne * 3] * se,
                                    $[ne * 3 + 1] * se,
                                    F
                                ),
                                    (Z += $[ne * 3 + 2] * se),
                                    ee && (Z += ee * le);
                            }
                            F += K.codePointAt(F) > 65535 ? 2 : 1;
                        }),
                        Z
                    );
                },
            };
        return q;
    }
    return function (O) {
        const I = new Uint8Array(O, 0, 4),
            U = r._bin.readASCII(I, 0, 4);
        if (U === 'wOFF') O = e(O);
        else if (U === 'wOF2') throw new Error('woff2 fonts not supported');
        return L(r.parse(O)[0]);
    };
}
const zK = qp({
    name: 'Typr Font Parser',
    dependencies: [NK, FK, BK],
    init(r, e, t) {
        const n = r(),
            i = e();
        return t(n, i);
    },
});
/*!
Custom bundle of @unicode-font-resolver/client v1.0.2 (https://github.com/lojjic/unicode-font-resolver)
for use in Troika text rendering. 
Original MIT license applies
*/ function VK() {
    return (function (r) {
        var e = function () {
            this.buckets = new Map();
        };
        (e.prototype.add = function (T) {
            var b = T >> 5;
            this.buckets.set(b, (this.buckets.get(b) || 0) | (1 << (31 & T)));
        }),
            (e.prototype.has = function (T) {
                var b = this.buckets.get(T >> 5);
                return b !== void 0 && (b & (1 << (31 & T))) != 0;
            }),
            (e.prototype.serialize = function () {
                var T = [];
                return (
                    this.buckets.forEach(function (b, P) {
                        T.push((+P).toString(36) + ':' + b.toString(36));
                    }),
                    T.join(',')
                );
            }),
            (e.prototype.deserialize = function (T) {
                var b = this;
                this.buckets.clear(),
                    T.split(',').forEach(function (P) {
                        var L = P.split(':');
                        b.buckets.set(parseInt(L[0], 36), parseInt(L[1], 36));
                    });
            });
        var t = Math.pow(2, 8),
            n = t - 1,
            i = ~n;
        function s(T) {
            var b = (function (L) {
                    return L & i;
                })(T).toString(16),
                P = (function (L) {
                    return (L & i) + t - 1;
                })(T).toString(16);
            return (
                'codepoint-index/plane' +
                (T >> 16) +
                '/' +
                b +
                '-' +
                P +
                '.json'
            );
        }
        function o(T, b) {
            var P = T & n,
                L = b.codePointAt((P / 6) | 0);
            return ((L = (L || 48) - 48) & (1 << P % 6)) != 0;
        }
        function a(T, b) {
            var P;
            ((P = T),
            P.replace(/U\+/gi, '')
                .replace(/^,+|,+$/g, '')
                .split(/,+/)
                .map(function (L) {
                    return L.split('-').map(function (D) {
                        return parseInt(D.trim(), 16);
                    });
                })).forEach(function (L) {
                var D = L[0],
                    O = L[1];
                O === void 0 && (O = D), b(D, O);
            });
        }
        function l(T, b) {
            a(T, function (P, L) {
                for (var D = P; D <= L; D++) b(D);
            });
        }
        var u = {},
            f = {},
            d = new WeakMap(),
            m =
                'https://cdn.jsdelivr.net/gh/lojjic/unicode-font-resolver@v1.0.1/packages/data';
        function v(T) {
            var b = d.get(T);
            return (
                b ||
                    ((b = new e()),
                    l(T.ranges, function (P) {
                        return b.add(P);
                    }),
                    d.set(T, b)),
                b
            );
        }
        var _,
            S = new Map();
        function w(T, b, P) {
            return T[b]
                ? b
                : T[P]
                  ? P
                  : (function (L) {
                        for (var D in L) return D;
                    })(T);
        }
        function x(T, b) {
            var P = b;
            if (!T.includes(P)) {
                P = 1 / 0;
                for (var L = 0; L < T.length; L++)
                    Math.abs(T[L] - b) < Math.abs(P - b) && (P = T[L]);
            }
            return P;
        }
        function A(T) {
            return (
                _ ||
                    ((_ = new Set()),
                    l(
                        '9-D,20,85,A0,1680,2000-200A,2028-202F,205F,3000',
                        function (b) {
                            _.add(b);
                        }
                    )),
                _.has(T)
            );
        }
        return (
            (r.CodePointSet = e),
            (r.clearCache = function () {
                (u = {}), (f = {});
            }),
            (r.getFontsForString = function (T, b) {
                b === void 0 && (b = {});
                var P,
                    L = b.lang;
                L === void 0 &&
                    (L = new RegExp('\\p{Script=Hangul}', 'u').test((P = T))
                        ? 'ko'
                        : new RegExp(
                                '\\p{Script=Hiragana}|\\p{Script=Katakana}',
                                'u'
                            ).test(P)
                          ? 'ja'
                          : 'en');
                var D = b.category;
                D === void 0 && (D = 'sans-serif');
                var O = b.style;
                O === void 0 && (O = 'normal');
                var I = b.weight;
                I === void 0 && (I = 400);
                var U = (b.dataUrl || m).replace(/\/$/g, ''),
                    H = new Map(),
                    W = new Uint8Array(T.length),
                    q = {},
                    K = {},
                    le = new Array(T.length),
                    ee = new Map(),
                    de = !1;
                function Z(F) {
                    var $ = S.get(F);
                    return (
                        $ ||
                            (($ = fetch(U + '/' + F)
                                .then(function (fe) {
                                    if (!fe.ok) throw new Error(fe.statusText);
                                    return fe.json().then(function (ne) {
                                        if (!Array.isArray(ne) || ne[0] !== 1)
                                            throw new Error(
                                                'Incorrect schema version; need 1, got ' +
                                                    ne[0]
                                            );
                                        return ne[1];
                                    });
                                })
                                .catch(function (fe) {
                                    if (U !== m)
                                        return (
                                            de ||
                                                (console.error(
                                                    'unicode-font-resolver: Failed loading from dataUrl "' +
                                                        U +
                                                        '", trying default CDN. ' +
                                                        fe.message
                                                ),
                                                (de = !0)),
                                            (U = m),
                                            S.delete(F),
                                            Z(F)
                                        );
                                    throw fe;
                                })),
                            S.set(F, $)),
                        $
                    );
                }
                for (
                    var se = function (F) {
                            var $ = T.codePointAt(F),
                                fe = s($);
                            (le[F] = fe),
                                u[fe] ||
                                    ee.has(fe) ||
                                    ee.set(
                                        fe,
                                        Z(fe).then(function (ne) {
                                            u[fe] = ne;
                                        })
                                    ),
                                $ > 65535 && (F++, (J = F));
                        },
                        J = 0;
                    J < T.length;
                    J++
                )
                    se(J);
                return Promise.all(ee.values())
                    .then(function () {
                        ee.clear();
                        for (
                            var F = function (fe) {
                                    var ne = T.codePointAt(fe),
                                        ae = null,
                                        me = u[le[fe]],
                                        ge = void 0;
                                    for (var Ae in me) {
                                        var je = K[Ae];
                                        if (
                                            (je === void 0 &&
                                                (je = K[Ae] =
                                                    new RegExp(Ae).test(
                                                        L || 'en'
                                                    )),
                                            je)
                                        ) {
                                            for (var Qe in ((ge = Ae), me[Ae]))
                                                if (o(ne, me[Ae][Qe])) {
                                                    ae = Qe;
                                                    break;
                                                }
                                            break;
                                        }
                                    }
                                    if (!ae) {
                                        e: for (var Ke in me)
                                            if (Ke !== ge) {
                                                for (var X in me[Ke])
                                                    if (o(ne, me[Ke][X])) {
                                                        ae = X;
                                                        break e;
                                                    }
                                            }
                                    }
                                    ae ||
                                        (console.debug(
                                            'No font coverage for U+' +
                                                ne.toString(16)
                                        ),
                                        (ae = 'latin')),
                                        (le[fe] = ae),
                                        f[ae] ||
                                            ee.has(ae) ||
                                            ee.set(
                                                ae,
                                                Z(
                                                    'font-meta/' + ae + '.json'
                                                ).then(function (He) {
                                                    f[ae] = He;
                                                })
                                            ),
                                        ne > 65535 && (fe++, ($ = fe));
                                },
                                $ = 0;
                            $ < T.length;
                            $++
                        )
                            F($);
                        return Promise.all(ee.values());
                    })
                    .then(function () {
                        for (var F, $ = null, fe = 0; fe < T.length; fe++) {
                            var ne = T.codePointAt(fe);
                            if ($ && (A(ne) || v($).has(ne))) W[fe] = W[fe - 1];
                            else {
                                $ = f[le[fe]];
                                var ae = q[$.id];
                                if (!ae) {
                                    var me = $.typeforms,
                                        ge = w(me, D, 'sans-serif'),
                                        Ae = w(me[ge], O, 'normal'),
                                        je = x(
                                            (F = me[ge]) === null ||
                                                F === void 0
                                                ? void 0
                                                : F[Ae],
                                            I
                                        );
                                    ae = q[$.id] =
                                        U +
                                        '/font-files/' +
                                        $.id +
                                        '/' +
                                        ge +
                                        '.' +
                                        Ae +
                                        '.' +
                                        je +
                                        '.woff';
                                }
                                var Qe = H.get(ae);
                                Qe == null && ((Qe = H.size), H.set(ae, Qe)),
                                    (W[fe] = Qe);
                            }
                            ne > 65535 && (fe++, (W[fe] = W[fe - 1]));
                        }
                        return { fontUrls: Array.from(H.keys()), chars: W };
                    });
            }),
            Object.defineProperty(r, '__esModule', { value: !0 }),
            r
        );
    })({});
}
function HK(r, e) {
    const t = Object.create(null),
        n = Object.create(null);
    function i(o, a) {
        const l = (u) => {
            console.error(`Failure loading font ${o}`, u);
        };
        try {
            const u = new XMLHttpRequest();
            u.open('get', o, !0),
                (u.responseType = 'arraybuffer'),
                (u.onload = function () {
                    if (u.status >= 400) l(new Error(u.statusText));
                    else if (u.status > 0)
                        try {
                            const f = r(u.response);
                            (f.src = o), a(f);
                        } catch (f) {
                            l(f);
                        }
                }),
                (u.onerror = l),
                u.send();
        } catch (u) {
            l(u);
        }
    }
    function s(o, a) {
        let l = t[o];
        l
            ? a(l)
            : n[o]
              ? n[o].push(a)
              : ((n[o] = [a]),
                i(o, (u) => {
                    (u.src = o),
                        (t[o] = u),
                        n[o].forEach((f) => f(u)),
                        delete n[o];
                }));
    }
    return function (
        o,
        a,
        {
            lang: l,
            fonts: u = [],
            style: f = 'normal',
            weight: d = 'normal',
            unicodeFontsURL: m,
        } = {}
    ) {
        const v = new Uint8Array(o.length),
            _ = [];
        o.length || A();
        const S = new Map(),
            w = [];
        if (
            (f !== 'italic' && (f = 'normal'),
            typeof d != 'number' && (d = d === 'bold' ? 700 : 400),
            u && !Array.isArray(u) && (u = [u]),
            (u = u
                .slice()
                .filter((b) => !b.lang || b.lang.test(l))
                .reverse()),
            u.length)
        ) {
            let D = 0;
            (function O(I = 0) {
                for (let U = I, H = o.length; U < H; U++) {
                    const W = o.codePointAt(U);
                    if (
                        (D === 1 && _[v[U - 1]].supportsCodePoint(W)) ||
                        (U > 0 && /\s/.test(o[U]))
                    )
                        (v[U] = v[U - 1]), D === 2 && (w[w.length - 1][1] = U);
                    else
                        for (let q = v[U], K = u.length; q <= K; q++)
                            if (q === K) {
                                const le =
                                    D === 2
                                        ? w[w.length - 1]
                                        : (w[w.length] = [U, U]);
                                (le[1] = U), (D = 2);
                            } else {
                                v[U] = q;
                                const { src: le, unicodeRange: ee } = u[q];
                                if (!ee || T(W, ee)) {
                                    const de = t[le];
                                    if (!de) {
                                        s(le, () => {
                                            O(U);
                                        });
                                        return;
                                    }
                                    if (de.supportsCodePoint(W)) {
                                        let Z = S.get(de);
                                        typeof Z != 'number' &&
                                            ((Z = _.length),
                                            _.push(de),
                                            S.set(de, Z)),
                                            (v[U] = Z),
                                            (D = 1);
                                        break;
                                    }
                                }
                            }
                    W > 65535 &&
                        U + 1 < H &&
                        ((v[U + 1] = v[U]),
                        U++,
                        D === 2 && (w[w.length - 1][1] = U));
                }
                x();
            })();
        } else w.push([0, o.length - 1]), x();
        function x() {
            if (w.length) {
                const b = w.map((P) => o.substring(P[0], P[1] + 1)).join(`
`);
                e.getFontsForString(b, {
                    lang: l || void 0,
                    style: f,
                    weight: d,
                    dataUrl: m,
                }).then(({ fontUrls: P, chars: L }) => {
                    const D = _.length;
                    let O = 0;
                    w.forEach((U) => {
                        for (let H = 0, W = U[1] - U[0]; H <= W; H++)
                            v[U[0] + H] = L[O++] + D;
                        O++;
                    });
                    let I = 0;
                    P.forEach((U, H) => {
                        s(U, (W) => {
                            (_[H + D] = W), ++I === P.length && A();
                        });
                    });
                });
            } else A();
        }
        function A() {
            a({ chars: v, fonts: _ });
        }
        function T(b, P) {
            for (let L = 0; L < P.length; L++) {
                const [D, O = D] = P[L];
                if (D <= b && b <= O) return !0;
            }
            return !1;
        }
    };
}
const GK = qp({
    name: 'FontResolver',
    dependencies: [HK, zK, VK],
    init(r, e, t) {
        return r(e, t());
    },
});
function WK(r, e) {
    const n =
            /[\u00AD\u034F\u061C\u115F-\u1160\u17B4-\u17B5\u180B-\u180E\u200B-\u200F\u202A-\u202E\u2060-\u206F\u3164\uFE00-\uFE0F\uFEFF\uFFA0\uFFF0-\uFFF8]/,
        i = '[^\\S\\u00A0]',
        s = new RegExp(
            `${i}|[\\-\\u007C\\u00AD\\u2010\\u2012-\\u2014\\u2027\\u2056\\u2E17\\u2E40]`
        );
    function o(
        {
            text: _,
            lang: S,
            fonts: w,
            style: x,
            weight: A,
            preResolvedFonts: T,
            unicodeFontsURL: b,
        },
        P
    ) {
        const L = ({ chars: D, fonts: O }) => {
            let I, U;
            const H = [];
            for (let W = 0; W < D.length; W++)
                D[W] !== U
                    ? ((U = D[W]),
                      H.push((I = { start: W, end: W, fontObj: O[D[W]] })))
                    : (I.end = W);
            P(H);
        };
        T
            ? L(T)
            : r(_, L, {
                  lang: S,
                  fonts: w,
                  style: x,
                  weight: A,
                  unicodeFontsURL: b,
              });
    }
    function a(
        {
            text: _ = '',
            font: S,
            lang: w,
            sdfGlyphSize: x = 64,
            fontSize: A = 400,
            fontWeight: T = 1,
            fontStyle: b = 'normal',
            letterSpacing: P = 0,
            lineHeight: L = 'normal',
            maxWidth: D = 1 / 0,
            direction: O,
            textAlign: I = 'left',
            textIndent: U = 0,
            whiteSpace: H = 'normal',
            overflowWrap: W = 'normal',
            anchorX: q = 0,
            anchorY: K = 0,
            metricsOnly: le = !1,
            unicodeFontsURL: ee,
            preResolvedFonts: de = null,
            includeCaretPositions: Z = !1,
            chunkedBoundsSize: se = 8192,
            colorRanges: J = null,
        },
        F
    ) {
        const $ = d(),
            fe = { fontLoad: 0, typesetting: 0 };
        _.indexOf('\r') > -1 &&
            (console.info(
                'Typesetter: got text with \\r chars; normalizing to \\n'
            ),
            (_ = _.replace(
                /\r\n/g,
                `
`
            ).replace(
                /\r/g,
                `
`
            ))),
            (A = +A),
            (P = +P),
            (D = +D),
            (L = L || 'normal'),
            (U = +U),
            o(
                {
                    text: _,
                    lang: w,
                    style: b,
                    weight: T,
                    fonts: typeof S == 'string' ? [{ src: S }] : S,
                    unicodeFontsURL: ee,
                    preResolvedFonts: de,
                },
                (ne) => {
                    fe.fontLoad = d() - $;
                    const ae = isFinite(D);
                    let me = null,
                        ge = null,
                        Ae = null,
                        je = null,
                        Qe = null,
                        Ke = null,
                        X = null,
                        He = null,
                        Fe = 0,
                        We = 0,
                        Re = H !== 'nowrap';
                    const st = new Map(),
                        De = d();
                    let Je = U,
                        te = 0,
                        V = new m();
                    const Me = [V];
                    ne.forEach((Xe) => {
                        const { fontObj: Ze } = Xe,
                            {
                                ascender: at,
                                descender: Ye,
                                unitsPerEm: ot,
                                lineGap: kt,
                                capHeight: pt,
                                xHeight: et,
                            } = Ze;
                        let lt = st.get(Ze);
                        if (!lt) {
                            const ve = A / ot,
                                Be =
                                    L === 'normal'
                                        ? (at - Ye + kt) * ve
                                        : L * A,
                                ht = (Be - (at - Ye) * ve) / 2,
                                wt = Math.min(Be, (at - Ye) * ve),
                                Et = ((at + Ye) / 2) * ve + wt / 2;
                            (lt = {
                                index: st.size,
                                src: Ze.src,
                                fontObj: Ze,
                                fontSizeMult: ve,
                                unitsPerEm: ot,
                                ascender: at * ve,
                                descender: Ye * ve,
                                capHeight: pt * ve,
                                xHeight: et * ve,
                                lineHeight: Be,
                                baseline: -ht - at * ve,
                                caretTop: Et,
                                caretBottom: Et - wt,
                            }),
                                st.set(Ze, lt);
                        }
                        const { fontSizeMult: Ct } = lt,
                            Dt = _.slice(Xe.start, Xe.end + 1);
                        let _e, nt;
                        Ze.forEachGlyph(Dt, A, P, (ve, Be, ht, wt) => {
                            (Be += te), (wt += Xe.start), (_e = Be), (nt = ve);
                            const Et = _.charAt(wt),
                                Qt = ve.advanceWidth * Ct,
                                en = V.count;
                            let Mt;
                            if (
                                ('isEmpty' in ve ||
                                    ((ve.isWhitespace =
                                        !!Et && new RegExp(i).test(Et)),
                                    (ve.canBreakAfter = !!Et && s.test(Et)),
                                    (ve.isEmpty =
                                        ve.xMin === ve.xMax ||
                                        ve.yMin === ve.yMax ||
                                        n.test(Et))),
                                !ve.isWhitespace && !ve.isEmpty && We++,
                                Re &&
                                    ae &&
                                    !ve.isWhitespace &&
                                    Be + Qt + Je > D &&
                                    en)
                            ) {
                                if (V.glyphAt(en - 1).glyphObj.canBreakAfter)
                                    (Mt = new m()), (Je = -Be);
                                else
                                    for (let Pn = en; Pn--; )
                                        if (Pn === 0 && W === 'break-word') {
                                            (Mt = new m()), (Je = -Be);
                                            break;
                                        } else if (
                                            V.glyphAt(Pn).glyphObj.canBreakAfter
                                        ) {
                                            Mt = V.splitAt(Pn + 1);
                                            const jn = Mt.glyphAt(0).x;
                                            Je -= jn;
                                            for (let An = Mt.count; An--; )
                                                Mt.glyphAt(An).x -= jn;
                                            break;
                                        }
                                Mt &&
                                    ((V.isSoftWrapped = !0),
                                    (V = Mt),
                                    Me.push(V),
                                    (Fe = D));
                            }
                            let hn = V.glyphAt(V.count);
                            (hn.glyphObj = ve),
                                (hn.x = Be + Je),
                                (hn.y = ht),
                                (hn.width = Qt),
                                (hn.charIndex = wt),
                                (hn.fontData = lt),
                                Et ===
                                    `
` && ((V = new m()), Me.push(V), (Je = -(Be + Qt + P * A) + U));
                        }),
                            (te = _e + nt.advanceWidth * Ct + P * A);
                    });
                    let Le = 0;
                    Me.forEach((Xe) => {
                        let Ze = !0;
                        for (let at = Xe.count; at--; ) {
                            const Ye = Xe.glyphAt(at);
                            Ze &&
                                !Ye.glyphObj.isWhitespace &&
                                ((Xe.width = Ye.x + Ye.width),
                                Xe.width > Fe && (Fe = Xe.width),
                                (Ze = !1));
                            let {
                                lineHeight: ot,
                                capHeight: kt,
                                xHeight: pt,
                                baseline: et,
                            } = Ye.fontData;
                            ot > Xe.lineHeight && (Xe.lineHeight = ot);
                            const lt = et - Xe.baseline;
                            lt < 0 &&
                                ((Xe.baseline += lt),
                                (Xe.cap += lt),
                                (Xe.ex += lt)),
                                (Xe.cap = Math.max(Xe.cap, Xe.baseline + kt)),
                                (Xe.ex = Math.max(Xe.ex, Xe.baseline + pt));
                        }
                        (Xe.baseline -= Le),
                            (Xe.cap -= Le),
                            (Xe.ex -= Le),
                            (Le += Xe.lineHeight);
                    });
                    let Ie = 0,
                        Ce = 0;
                    if (
                        (q &&
                            (typeof q == 'number'
                                ? (Ie = -q)
                                : typeof q == 'string' &&
                                  (Ie =
                                      -Fe *
                                      (q === 'left'
                                          ? 0
                                          : q === 'center'
                                            ? 0.5
                                            : q === 'right'
                                              ? 1
                                              : u(q)))),
                        K &&
                            (typeof K == 'number'
                                ? (Ce = -K)
                                : typeof K == 'string' &&
                                  (Ce =
                                      K === 'top'
                                          ? 0
                                          : K === 'top-baseline'
                                            ? -Me[0].baseline
                                            : K === 'top-cap'
                                              ? -Me[0].cap
                                              : K === 'top-ex'
                                                ? -Me[0].ex
                                                : K === 'middle'
                                                  ? Le / 2
                                                  : K === 'bottom'
                                                    ? Le
                                                    : K === 'bottom-baseline'
                                                      ? -Me[Me.length - 1]
                                                            .baseline
                                                      : u(K) * Le)),
                        !le)
                    ) {
                        const Xe = e.getEmbeddingLevels(_, O);
                        (me = new Uint16Array(We)),
                            (ge = new Uint8Array(We)),
                            (Ae = new Float32Array(We * 2)),
                            (je = {}),
                            (X = [1 / 0, 1 / 0, -1 / 0, -1 / 0]),
                            (He = []),
                            Z && (Ke = new Float32Array(_.length * 4)),
                            J && (Qe = new Uint8Array(We * 3));
                        let Ze = 0,
                            at = -1,
                            Ye = -1,
                            ot,
                            kt;
                        if (
                            (Me.forEach((pt, et) => {
                                let { count: lt, width: Ct } = pt;
                                if (lt > 0) {
                                    let Dt = 0;
                                    for (
                                        let wt = lt;
                                        wt-- &&
                                        pt.glyphAt(wt).glyphObj.isWhitespace;

                                    )
                                        Dt++;
                                    let _e = 0,
                                        nt = 0;
                                    if (I === 'center') _e = (Fe - Ct) / 2;
                                    else if (I === 'right') _e = Fe - Ct;
                                    else if (
                                        I === 'justify' &&
                                        pt.isSoftWrapped
                                    ) {
                                        let wt = 0;
                                        for (let Et = lt - Dt; Et--; )
                                            pt.glyphAt(Et).glyphObj
                                                .isWhitespace && wt++;
                                        nt = (Fe - Ct) / wt;
                                    }
                                    if (nt || _e) {
                                        let wt = 0;
                                        for (let Et = 0; Et < lt; Et++) {
                                            let Qt = pt.glyphAt(Et);
                                            const en = Qt.glyphObj;
                                            (Qt.x += _e + wt),
                                                nt !== 0 &&
                                                    en.isWhitespace &&
                                                    Et < lt - Dt &&
                                                    ((wt += nt),
                                                    (Qt.width += nt));
                                        }
                                    }
                                    const ve = e.getReorderSegments(
                                        _,
                                        Xe,
                                        pt.glyphAt(0).charIndex,
                                        pt.glyphAt(pt.count - 1).charIndex
                                    );
                                    for (let wt = 0; wt < ve.length; wt++) {
                                        const [Et, Qt] = ve[wt];
                                        let en = 1 / 0,
                                            Mt = -1 / 0;
                                        for (let hn = 0; hn < lt; hn++)
                                            if (
                                                pt.glyphAt(hn).charIndex >= Et
                                            ) {
                                                let Pn = hn,
                                                    jn = hn;
                                                for (; jn < lt; jn++) {
                                                    let An = pt.glyphAt(jn);
                                                    if (An.charIndex > Qt)
                                                        break;
                                                    jn < lt - Dt &&
                                                        ((en = Math.min(
                                                            en,
                                                            An.x
                                                        )),
                                                        (Mt = Math.max(
                                                            Mt,
                                                            An.x + An.width
                                                        )));
                                                }
                                                for (
                                                    let An = Pn;
                                                    An < jn;
                                                    An++
                                                ) {
                                                    const di = pt.glyphAt(An);
                                                    di.x =
                                                        Mt -
                                                        (di.x + di.width - en);
                                                }
                                                break;
                                            }
                                    }
                                    let Be;
                                    const ht = (wt) => (Be = wt);
                                    for (let wt = 0; wt < lt; wt++) {
                                        const Et = pt.glyphAt(wt);
                                        Be = Et.glyphObj;
                                        const Qt = Be.index,
                                            en = Xe.levels[Et.charIndex] & 1;
                                        if (en) {
                                            const Mt = e.getMirroredCharacter(
                                                _[Et.charIndex]
                                            );
                                            Mt &&
                                                Et.fontData.fontObj.forEachGlyph(
                                                    Mt,
                                                    0,
                                                    0,
                                                    ht
                                                );
                                        }
                                        if (Z) {
                                            const {
                                                    charIndex: Mt,
                                                    fontData: hn,
                                                } = Et,
                                                Pn = Et.x + Ie,
                                                jn = Et.x + Et.width + Ie;
                                            (Ke[Mt * 4] = en ? jn : Pn),
                                                (Ke[Mt * 4 + 1] = en ? Pn : jn),
                                                (Ke[Mt * 4 + 2] =
                                                    pt.baseline +
                                                    hn.caretBottom +
                                                    Ce),
                                                (Ke[Mt * 4 + 3] =
                                                    pt.baseline +
                                                    hn.caretTop +
                                                    Ce);
                                            const An = Mt - at;
                                            An > 1 && f(Ke, at, An), (at = Mt);
                                        }
                                        if (J) {
                                            const { charIndex: Mt } = Et;
                                            for (; Mt > Ye; )
                                                Ye++,
                                                    J.hasOwnProperty(Ye) &&
                                                        (kt = J[Ye]);
                                        }
                                        if (!Be.isWhitespace && !Be.isEmpty) {
                                            const Mt = Ze++,
                                                {
                                                    fontSizeMult: hn,
                                                    src: Pn,
                                                    index: jn,
                                                } = Et.fontData,
                                                An = je[Pn] || (je[Pn] = {});
                                            An[Qt] ||
                                                (An[Qt] = {
                                                    path: Be.path,
                                                    pathBounds: [
                                                        Be.xMin,
                                                        Be.yMin,
                                                        Be.xMax,
                                                        Be.yMax,
                                                    ],
                                                });
                                            const di = Et.x + Ie,
                                                Gi = Et.y + pt.baseline + Ce;
                                            (Ae[Mt * 2] = di),
                                                (Ae[Mt * 2 + 1] = Gi);
                                            const _i = di + Be.xMin * hn,
                                                si = Gi + Be.yMin * hn,
                                                Qn = di + Be.xMax * hn,
                                                Xt = Gi + Be.yMax * hn;
                                            _i < X[0] && (X[0] = _i),
                                                si < X[1] && (X[1] = si),
                                                Qn > X[2] && (X[2] = Qn),
                                                Xt > X[3] && (X[3] = Xt),
                                                Mt % se === 0 &&
                                                    ((ot = {
                                                        start: Mt,
                                                        end: Mt,
                                                        rect: [
                                                            1 / 0,
                                                            1 / 0,
                                                            -1 / 0,
                                                            -1 / 0,
                                                        ],
                                                    }),
                                                    He.push(ot)),
                                                ot.end++;
                                            const pi = ot.rect;
                                            if (
                                                (_i < pi[0] && (pi[0] = _i),
                                                si < pi[1] && (pi[1] = si),
                                                Qn > pi[2] && (pi[2] = Qn),
                                                Xt > pi[3] && (pi[3] = Xt),
                                                (me[Mt] = Qt),
                                                (ge[Mt] = jn),
                                                J)
                                            ) {
                                                const $r = Mt * 3;
                                                (Qe[$r] = (kt >> 16) & 255),
                                                    (Qe[$r + 1] =
                                                        (kt >> 8) & 255),
                                                    (Qe[$r + 2] = kt & 255);
                                            }
                                        }
                                    }
                                }
                            }),
                            Ke)
                        ) {
                            const pt = _.length - at;
                            pt > 1 && f(Ke, at, pt);
                        }
                    }
                    const gt = [];
                    st.forEach(
                        ({
                            index: Xe,
                            src: Ze,
                            unitsPerEm: at,
                            ascender: Ye,
                            descender: ot,
                            lineHeight: kt,
                            capHeight: pt,
                            xHeight: et,
                        }) => {
                            gt[Xe] = {
                                src: Ze,
                                unitsPerEm: at,
                                ascender: Ye,
                                descender: ot,
                                lineHeight: kt,
                                capHeight: pt,
                                xHeight: et,
                            };
                        }
                    ),
                        (fe.typesetting = d() - De),
                        F({
                            glyphIds: me,
                            glyphFontIndices: ge,
                            glyphPositions: Ae,
                            glyphData: je,
                            fontData: gt,
                            caretPositions: Ke,
                            glyphColors: Qe,
                            chunkedBounds: He,
                            fontSize: A,
                            topBaseline: Ce + Me[0].baseline,
                            blockBounds: [Ie, Ce - Le, Ie + Fe, Ce],
                            visibleBounds: X,
                            timings: fe,
                        });
                }
            );
    }
    function l(_, S) {
        a({ ..._, metricsOnly: !0 }, (w) => {
            const [x, A, T, b] = w.blockBounds;
            S({ width: T - x, height: b - A });
        });
    }
    function u(_) {
        let S = _.match(/^([\d.]+)%$/),
            w = S ? parseFloat(S[1]) : NaN;
        return isNaN(w) ? 0 : w / 100;
    }
    function f(_, S, w) {
        const x = _[S * 4],
            A = _[S * 4 + 1],
            T = _[S * 4 + 2],
            b = _[S * 4 + 3],
            P = (A - x) / w;
        for (let L = 0; L < w; L++) {
            const D = (S + L) * 4;
            (_[D] = x + P * L),
                (_[D + 1] = x + P * (L + 1)),
                (_[D + 2] = T),
                (_[D + 3] = b);
        }
    }
    function d() {
        return (self.performance || Date).now();
    }
    function m() {
        this.data = [];
    }
    const v = ['glyphObj', 'x', 'y', 'width', 'charIndex', 'fontData'];
    return (
        (m.prototype = {
            width: 0,
            lineHeight: 0,
            baseline: 0,
            cap: 0,
            ex: 0,
            isSoftWrapped: !1,
            get count() {
                return Math.ceil(this.data.length / v.length);
            },
            glyphAt(_) {
                let S = m.flyweight;
                return (S.data = this.data), (S.index = _), S;
            },
            splitAt(_) {
                let S = new m();
                return (S.data = this.data.splice(_ * v.length)), S;
            },
        }),
        (m.flyweight = v.reduce(
            (_, S, w, x) => (
                Object.defineProperty(_, S, {
                    get() {
                        return this.data[this.index * v.length + w];
                    },
                    set(A) {
                        this.data[this.index * v.length + w] = A;
                    },
                }),
                _
            ),
            { data: null, index: 0 }
        )),
        { typeset: a, measure: l }
    );
}
const hh = () => (self.performance || Date).now(),
    p1 = tk();
let CP;
function jK(r, e, t, n, i, s, o, a, l, u, f = !0) {
    return f
        ? YK(r, e, t, n, i, s, o, a, l, u).then(
              null,
              (d) => (
                  CP ||
                      (console.warn(
                          'WebGL SDF generation failed, falling back to JS',
                          d
                      ),
                      (CP = !0)),
                  PP(r, e, t, n, i, s, o, a, l, u)
              )
          )
        : PP(r, e, t, n, i, s, o, a, l, u);
}
const w_ = [],
    XK = 5;
let qM = 0;
function ik() {
    const r = hh();
    for (; w_.length && hh() - r < XK; ) w_.shift()();
    qM = w_.length ? setTimeout(ik, 0) : 0;
}
const YK = (...r) =>
        new Promise((e, t) => {
            w_.push(() => {
                const n = hh();
                try {
                    p1.webgl.generateIntoCanvas(...r), e({ timing: hh() - n });
                } catch (i) {
                    t(i);
                }
            }),
                qM || (qM = setTimeout(ik, 0));
        }),
    qK = 4,
    KK = 2e3,
    RP = {};
let ZK = 0;
function PP(r, e, t, n, i, s, o, a, l, u) {
    const f = 'TroikaTextSDFGenerator_JS_' + (ZK++ % qK);
    let d = RP[f];
    return (
        d ||
            (d = RP[f] =
                {
                    workerModule: qp({
                        name: f,
                        workerId: f,
                        dependencies: [tk, hh],
                        init(m, v) {
                            const _ = m().javascript.generate;
                            return function (...S) {
                                const w = v();
                                return {
                                    textureData: _(...S),
                                    timing: v() - w,
                                };
                            };
                        },
                        getTransferables(m) {
                            return [m.textureData.buffer];
                        },
                    }),
                    requests: 0,
                    idleTimer: null,
                }),
        d.requests++,
        clearTimeout(d.idleTimer),
        d
            .workerModule(r, e, t, n, i, s)
            .then(({ textureData: m, timing: v }) => {
                const _ = hh(),
                    S = new Uint8Array(m.length * 4);
                for (let w = 0; w < m.length; w++) S[w * 4 + u] = m[w];
                return (
                    p1.webglUtils.renderImageData(
                        o,
                        S,
                        a,
                        l,
                        r,
                        e,
                        1 << (3 - u)
                    ),
                    (v += hh() - _),
                    --d.requests === 0 &&
                        (d.idleTimer = setTimeout(() => {
                            bK(f);
                        }, KK)),
                    { timing: v }
                );
            })
    );
}
function $K(r) {
    r._warm || (p1.webgl.isSupported(r), (r._warm = !0));
}
const JK = p1.webglUtils.resizeWebGLCanvasWithoutClearing,
    Ag = {
        unicodeFontsURL: null,
        sdfGlyphSize: 64,
        sdfMargin: 1 / 16,
        sdfExponent: 9,
        textureWidth: 2048,
    },
    QK = new Tt();
function zd() {
    return (self.performance || Date).now();
}
const LP = Object.create(null);
function rk(r, e) {
    r = nZ({}, r);
    const t = zd(),
        n = [];
    if (
        (r.font && n.push({ label: 'user', src: iZ(r.font) }),
        (r.font = n),
        (r.text = '' + r.text),
        (r.sdfGlyphSize = r.sdfGlyphSize || Ag.sdfGlyphSize),
        (r.unicodeFontsURL = r.unicodeFontsURL || Ag.unicodeFontsURL),
        r.colorRanges != null)
    ) {
        let m = {};
        for (let v in r.colorRanges)
            if (r.colorRanges.hasOwnProperty(v)) {
                let _ = r.colorRanges[v];
                typeof _ != 'number' && (_ = QK.set(_).getHex()), (m[v] = _);
            }
        r.colorRanges = m;
    }
    Object.freeze(r);
    const { textureWidth: i, sdfExponent: s } = Ag,
        { sdfGlyphSize: o } = r,
        a = (i / o) * 4;
    let l = LP[o];
    if (!l) {
        const m = document.createElement('canvas');
        (m.width = i),
            (m.height = (o * 256) / a),
            (l = LP[o] =
                {
                    glyphCount: 0,
                    sdfGlyphSize: o,
                    sdfCanvas: m,
                    sdfTexture: new Vn(m, void 0, void 0, void 0, Cn, Cn),
                    contextLost: !1,
                    glyphsByFont: new Map(),
                }),
            (l.sdfTexture.generateMipmaps = !1),
            eZ(l);
    }
    const { sdfTexture: u, sdfCanvas: f } = l;
    ak(r).then((m) => {
        const {
                glyphIds: v,
                glyphFontIndices: _,
                fontData: S,
                glyphPositions: w,
                fontSize: x,
                timings: A,
            } = m,
            T = [],
            b = new Float32Array(v.length * 4);
        let P = 0,
            L = 0;
        const D = zd(),
            O = S.map((q) => {
                let K = l.glyphsByFont.get(q.src);
                return K || l.glyphsByFont.set(q.src, (K = new Map())), K;
            });
        v.forEach((q, K) => {
            const le = _[K],
                { src: ee, unitsPerEm: de } = S[le];
            let Z = O[le].get(q);
            if (!Z) {
                const { path: fe, pathBounds: ne } = m.glyphData[ee][q],
                    ae =
                        (Math.max(ne[2] - ne[0], ne[3] - ne[1]) / o) *
                        (Ag.sdfMargin * o + 0.5),
                    me = l.glyphCount++,
                    ge = [ne[0] - ae, ne[1] - ae, ne[2] + ae, ne[3] + ae];
                O[le].set(
                    q,
                    (Z = { path: fe, atlasIndex: me, sdfViewBox: ge })
                ),
                    T.push(Z);
            }
            const { sdfViewBox: se } = Z,
                J = w[L++],
                F = w[L++],
                $ = x / de;
            (b[P++] = J + se[0] * $),
                (b[P++] = F + se[1] * $),
                (b[P++] = J + se[2] * $),
                (b[P++] = F + se[3] * $),
                (v[K] = Z.atlasIndex);
        }),
            (A.quads = (A.quads || 0) + (zd() - D));
        const I = zd();
        A.sdf = {};
        const U = f.height,
            H = Math.ceil(l.glyphCount / a),
            W = Math.pow(2, Math.ceil(Math.log2(H * o)));
        W > U &&
            (console.info(`Increasing SDF texture size ${U}->${W}`),
            JK(f, i, W),
            u.dispose()),
            Promise.all(
                T.map((q) =>
                    sk(q, l, r.gpuAccelerateSDF).then(({ timing: K }) => {
                        A.sdf[q.atlasIndex] = K;
                    })
                )
            ).then(() => {
                T.length && !l.contextLost && (ok(l), (u.needsUpdate = !0)),
                    (A.sdfTotal = zd() - I),
                    (A.total = zd() - t),
                    e(
                        Object.freeze({
                            parameters: r,
                            sdfTexture: u,
                            sdfGlyphSize: o,
                            sdfExponent: s,
                            glyphBounds: b,
                            glyphAtlasIndices: v,
                            glyphColors: m.glyphColors,
                            caretPositions: m.caretPositions,
                            chunkedBounds: m.chunkedBounds,
                            ascender: m.ascender,
                            descender: m.descender,
                            lineHeight: m.lineHeight,
                            capHeight: m.capHeight,
                            xHeight: m.xHeight,
                            topBaseline: m.topBaseline,
                            blockBounds: m.blockBounds,
                            visibleBounds: m.visibleBounds,
                            timings: m.timings,
                        })
                    );
            });
    }),
        Promise.resolve().then(() => {
            l.contextLost || $K(f);
        });
}
function sk(
    { path: r, atlasIndex: e, sdfViewBox: t },
    { sdfGlyphSize: n, sdfCanvas: i, contextLost: s },
    o
) {
    if (s) return Promise.resolve({ timing: -1 });
    const { textureWidth: a, sdfExponent: l } = Ag,
        u = Math.max(t[2] - t[0], t[3] - t[1]),
        f = Math.floor(e / 4),
        d = (f % (a / n)) * n,
        m = Math.floor(f / (a / n)) * n,
        v = e % 4;
    return jK(n, n, r, t, u, l, i, d, m, v, o);
}
function eZ(r) {
    const e = r.sdfCanvas;
    e.addEventListener('webglcontextlost', (t) => {
        console.log('Context Lost', t),
            t.preventDefault(),
            (r.contextLost = !0);
    }),
        e.addEventListener('webglcontextrestored', (t) => {
            console.log('Context Restored', t), (r.contextLost = !1);
            const n = [];
            r.glyphsByFont.forEach((i) => {
                i.forEach((s) => {
                    n.push(sk(s, r, !0));
                });
            }),
                Promise.all(n).then(() => {
                    ok(r), (r.sdfTexture.needsUpdate = !0);
                });
        });
}
function tZ({ font: r, characters: e, sdfGlyphSize: t }, n) {
    let i = Array.isArray(e)
        ? e.join(`
`)
        : '' + e;
    rk({ font: r, sdfGlyphSize: t, text: i }, n);
}
function nZ(r, e) {
    for (let t in e) e.hasOwnProperty(t) && (r[t] = e[t]);
    return r;
}
let e_;
function iZ(r) {
    return (
        e_ || (e_ = typeof document > 'u' ? {} : document.createElement('a')),
        (e_.href = r),
        e_.href
    );
}
function ok(r) {
    if (typeof createImageBitmap != 'function') {
        console.info('Safari<15: applying SDF canvas workaround');
        const { sdfCanvas: e, sdfTexture: t } = r,
            { width: n, height: i } = e,
            s = r.sdfCanvas.getContext('webgl');
        let o = t.image.data;
        (!o || o.length !== n * i * 4) &&
            ((o = new Uint8Array(n * i * 4)),
            (t.image = { width: n, height: i, data: o }),
            (t.flipY = !1),
            (t.isDataTexture = !0)),
            s.readPixels(0, 0, n, i, s.RGBA, s.UNSIGNED_BYTE, o);
    }
}
const rZ = qp({
        name: 'Typesetter',
        dependencies: [WK, GK, RK],
        init(r, e, t) {
            return r(e, t());
        },
    }),
    ak = qp({
        name: 'Typesetter',
        dependencies: [rZ],
        init(r) {
            return function (e) {
                return new Promise((t) => {
                    r.typeset(e, t);
                });
            };
        },
        getTransferables(r) {
            const e = [];
            for (let t in r) r[t] && r[t].buffer && e.push(r[t].buffer);
            return e;
        },
    });
ak.onMainThread;
const IP = {};
function sZ(r) {
    let e = IP[r];
    return e || (e = IP[r] = new ra(1, 1, r, r).translate(0.5, 0.5, 0)), e;
}
const oZ = 'aTroikaGlyphBounds',
    DP = 'aTroikaGlyphIndex',
    aZ = 'aTroikaGlyphColor';
class lZ extends KT {
    constructor() {
        super(),
            (this.detail = 1),
            (this.curveRadius = 0),
            (this.groups = [
                { start: 0, count: 1 / 0, materialIndex: 0 },
                { start: 0, count: 1 / 0, materialIndex: 1 },
            ]),
            (this.boundingSphere = new Fr()),
            (this.boundingBox = new Ar());
    }
    computeBoundingSphere() {}
    computeBoundingBox() {}
    set detail(e) {
        if (e !== this._detail) {
            (this._detail = e), (typeof e != 'number' || e < 1) && (e = 1);
            let t = sZ(e);
            ['position', 'normal', 'uv'].forEach((n) => {
                this.attributes[n] = t.attributes[n].clone();
            }),
                this.setIndex(t.getIndex().clone());
        }
    }
    get detail() {
        return this._detail;
    }
    set curveRadius(e) {
        e !== this._curveRadius &&
            ((this._curveRadius = e), this._updateBounds());
    }
    get curveRadius() {
        return this._curveRadius;
    }
    updateGlyphs(e, t, n, i, s) {
        this.updateAttributeData(oZ, e, 4),
            this.updateAttributeData(DP, t, 1),
            this.updateAttributeData(aZ, s, 3),
            (this._blockBounds = n),
            (this._chunkedBounds = i),
            (this.instanceCount = t.length),
            this._updateBounds();
    }
    _updateBounds() {
        const e = this._blockBounds;
        if (e) {
            const { curveRadius: t, boundingBox: n } = this;
            if (t) {
                const {
                        PI: i,
                        floor: s,
                        min: o,
                        max: a,
                        sin: l,
                        cos: u,
                    } = Math,
                    f = i / 2,
                    d = i * 2,
                    m = Math.abs(t),
                    v = e[0] / m,
                    _ = e[2] / m,
                    S =
                        s((v + f) / d) !== s((_ + f) / d)
                            ? -m
                            : o(l(v) * m, l(_) * m),
                    w =
                        s((v - f) / d) !== s((_ - f) / d)
                            ? m
                            : a(l(v) * m, l(_) * m),
                    x =
                        s((v + i) / d) !== s((_ + i) / d)
                            ? m * 2
                            : a(m - u(v) * m, m - u(_) * m);
                n.min.set(S, e[1], t < 0 ? -x : 0),
                    n.max.set(w, e[3], t < 0 ? 0 : x);
            } else n.min.set(e[0], e[1], 0), n.max.set(e[2], e[3], 0);
            n.getBoundingSphere(this.boundingSphere);
        }
    }
    applyClipRect(e) {
        let t = this.getAttribute(DP).count,
            n = this._chunkedBounds;
        if (n)
            for (let i = n.length; i--; ) {
                t = n[i].end;
                let s = n[i].rect;
                if (s[1] < e.w && s[3] > e.y && s[0] < e.z && s[2] > e.x) break;
            }
        this.instanceCount = t;
    }
    updateAttributeData(e, t, n) {
        const i = this.getAttribute(e);
        t
            ? i && i.array.length === t.length
                ? (i.array.set(t), (i.needsUpdate = !0))
                : (this.setAttribute(e, new vh(t, n)),
                  delete this._maxInstanceCount,
                  this.dispose())
            : i && this.deleteAttribute(e);
    }
}
const uZ = `
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform vec4 uTroikaTotalBounds;
uniform vec4 uTroikaClipRect;
uniform mat3 uTroikaOrient;
uniform bool uTroikaUseGlyphColors;
uniform float uTroikaEdgeOffset;
uniform float uTroikaBlurRadius;
uniform vec2 uTroikaPositionOffset;
uniform float uTroikaCurveRadius;
attribute vec4 aTroikaGlyphBounds;
attribute float aTroikaGlyphIndex;
attribute vec3 aTroikaGlyphColor;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec3 vTroikaGlyphColor;
varying vec2 vTroikaGlyphDimensions;
`,
    cZ = `
vec4 bounds = aTroikaGlyphBounds;
bounds.xz += uTroikaPositionOffset.x;
bounds.yw -= uTroikaPositionOffset.y;

vec4 outlineBounds = vec4(
  bounds.xy - uTroikaEdgeOffset - uTroikaBlurRadius,
  bounds.zw + uTroikaEdgeOffset + uTroikaBlurRadius
);
vec4 clippedBounds = vec4(
  clamp(outlineBounds.xy, uTroikaClipRect.xy, uTroikaClipRect.zw),
  clamp(outlineBounds.zw, uTroikaClipRect.xy, uTroikaClipRect.zw)
);

vec2 clippedXY = (mix(clippedBounds.xy, clippedBounds.zw, position.xy) - bounds.xy) / (bounds.zw - bounds.xy);

position.xy = mix(bounds.xy, bounds.zw, clippedXY);

uv = (position.xy - uTroikaTotalBounds.xy) / (uTroikaTotalBounds.zw - uTroikaTotalBounds.xy);

float rad = uTroikaCurveRadius;
if (rad != 0.0) {
  float angle = position.x / rad;
  position.xz = vec2(sin(angle) * rad, rad - cos(angle) * rad);
  normal.xz = vec2(sin(angle), cos(angle));
}
  
position = uTroikaOrient * position;
normal = uTroikaOrient * normal;

vTroikaGlyphUV = clippedXY.xy;
vTroikaGlyphDimensions = vec2(bounds[2] - bounds[0], bounds[3] - bounds[1]);


float txCols = uTroikaSDFTextureSize.x / uTroikaSDFGlyphSize;
vec2 txUvPerSquare = uTroikaSDFGlyphSize / uTroikaSDFTextureSize;
vec2 txStartUV = txUvPerSquare * vec2(
  mod(floor(aTroikaGlyphIndex / 4.0), txCols),
  floor(floor(aTroikaGlyphIndex / 4.0) / txCols)
);
vTroikaTextureUVBounds = vec4(txStartUV, vec2(txStartUV) + txUvPerSquare);
vTroikaTextureChannel = mod(aTroikaGlyphIndex, 4.0);
`,
    fZ = `
uniform sampler2D uTroikaSDFTexture;
uniform vec2 uTroikaSDFTextureSize;
uniform float uTroikaSDFGlyphSize;
uniform float uTroikaSDFExponent;
uniform float uTroikaEdgeOffset;
uniform float uTroikaFillOpacity;
uniform float uTroikaBlurRadius;
uniform vec3 uTroikaStrokeColor;
uniform float uTroikaStrokeWidth;
uniform float uTroikaStrokeOpacity;
uniform bool uTroikaSDFDebug;
varying vec2 vTroikaGlyphUV;
varying vec4 vTroikaTextureUVBounds;
varying float vTroikaTextureChannel;
varying vec2 vTroikaGlyphDimensions;

float troikaSdfValueToSignedDistance(float alpha) {
  // Inverse of exponential encoding in webgl-sdf-generator
  
  float maxDimension = max(vTroikaGlyphDimensions.x, vTroikaGlyphDimensions.y);
  float absDist = (1.0 - pow(2.0 * (alpha > 0.5 ? 1.0 - alpha : alpha), 1.0 / uTroikaSDFExponent)) * maxDimension;
  float signedDist = absDist * (alpha > 0.5 ? -1.0 : 1.0);
  return signedDist;
}

float troikaGlyphUvToSdfValue(vec2 glyphUV) {
  vec2 textureUV = mix(vTroikaTextureUVBounds.xy, vTroikaTextureUVBounds.zw, glyphUV);
  vec4 rgba = texture2D(uTroikaSDFTexture, textureUV);
  float ch = floor(vTroikaTextureChannel + 0.5); //NOTE: can't use round() in WebGL1
  return ch == 0.0 ? rgba.r : ch == 1.0 ? rgba.g : ch == 2.0 ? rgba.b : rgba.a;
}

float troikaGlyphUvToDistance(vec2 uv) {
  return troikaSdfValueToSignedDistance(troikaGlyphUvToSdfValue(uv));
}

float troikaGetAADist() {
  
  #if defined(GL_OES_standard_derivatives) || __VERSION__ >= 300
  return length(fwidth(vTroikaGlyphUV * vTroikaGlyphDimensions)) * 0.5;
  #else
  return vTroikaGlyphDimensions.x / 64.0;
  #endif
}

float troikaGetFragDistValue() {
  vec2 clampedGlyphUV = clamp(vTroikaGlyphUV, 0.5 / uTroikaSDFGlyphSize, 1.0 - 0.5 / uTroikaSDFGlyphSize);
  float distance = troikaGlyphUvToDistance(clampedGlyphUV);
 
  // Extrapolate distance when outside bounds:
  distance += clampedGlyphUV == vTroikaGlyphUV ? 0.0 : 
    length((vTroikaGlyphUV - clampedGlyphUV) * vTroikaGlyphDimensions);

  

  return distance;
}

float troikaGetEdgeAlpha(float distance, float distanceOffset, float aaDist) {
  #if defined(IS_DEPTH_MATERIAL) || defined(IS_DISTANCE_MATERIAL)
  float alpha = step(-distanceOffset, -distance);
  #else

  float alpha = smoothstep(
    distanceOffset + aaDist,
    distanceOffset - aaDist,
    distance
  );
  #endif

  return alpha;
}
`,
    hZ = `
float aaDist = troikaGetAADist();
float fragDistance = troikaGetFragDistValue();
float edgeAlpha = uTroikaSDFDebug ?
  troikaGlyphUvToSdfValue(vTroikaGlyphUV) :
  troikaGetEdgeAlpha(fragDistance, uTroikaEdgeOffset, max(aaDist, uTroikaBlurRadius));

#if !defined(IS_DEPTH_MATERIAL) && !defined(IS_DISTANCE_MATERIAL)
vec4 fillRGBA = gl_FragColor;
fillRGBA.a *= uTroikaFillOpacity;
vec4 strokeRGBA = uTroikaStrokeWidth == 0.0 ? fillRGBA : vec4(uTroikaStrokeColor, uTroikaStrokeOpacity);
if (fillRGBA.a == 0.0) fillRGBA.rgb = strokeRGBA.rgb;
gl_FragColor = mix(fillRGBA, strokeRGBA, smoothstep(
  -uTroikaStrokeWidth - aaDist,
  -uTroikaStrokeWidth + aaDist,
  fragDistance
));
gl_FragColor.a *= edgeAlpha;
#endif

if (edgeAlpha == 0.0) {
  discard;
}
`;
function dZ(r) {
    const e = YM(r, {
        chained: !0,
        extensions: { derivatives: !0 },
        uniforms: {
            uTroikaSDFTexture: { value: null },
            uTroikaSDFTextureSize: { value: new tt() },
            uTroikaSDFGlyphSize: { value: 0 },
            uTroikaSDFExponent: { value: 0 },
            uTroikaTotalBounds: { value: new En(0, 0, 0, 0) },
            uTroikaClipRect: { value: new En(0, 0, 0, 0) },
            uTroikaEdgeOffset: { value: 0 },
            uTroikaFillOpacity: { value: 1 },
            uTroikaPositionOffset: { value: new tt() },
            uTroikaCurveRadius: { value: 0 },
            uTroikaBlurRadius: { value: 0 },
            uTroikaStrokeWidth: { value: 0 },
            uTroikaStrokeColor: { value: new Tt() },
            uTroikaStrokeOpacity: { value: 1 },
            uTroikaOrient: { value: new pn() },
            uTroikaUseGlyphColors: { value: !0 },
            uTroikaSDFDebug: { value: !1 },
        },
        vertexDefs: uZ,
        vertexTransform: cZ,
        fragmentDefs: fZ,
        fragmentColorTransform: hZ,
        customRewriter({ vertexShader: t, fragmentShader: n }) {
            let i = /\buniform\s+vec3\s+diffuse\b/;
            return (
                i.test(n) &&
                    ((n = n
                        .replace(i, 'varying vec3 vTroikaGlyphColor')
                        .replace(/\bdiffuse\b/g, 'vTroikaGlyphColor')),
                    i.test(t) ||
                        (t = t.replace(
                            nk,
                            `uniform vec3 diffuse;
$&
vTroikaGlyphColor = uTroikaUseGlyphColors ? aTroikaGlyphColor / 255.0 : diffuse;
`
                        ))),
                { vertexShader: t, fragmentShader: n }
            );
        },
    });
    return (
        (e.transparent = !0),
        (e.forceSinglePass = !0),
        Object.defineProperties(e, {
            isTroikaTextMaterial: { value: !0 },
            shadowSide: {
                get() {
                    return this.side;
                },
                set() {},
            },
        }),
        e
    );
}
const oA = new ja({ color: 16777215, side: To, transparent: !0 }),
    OP = 8421504,
    UP = new qt(),
    t_ = new re(),
    Ew = new re(),
    hg = [],
    pZ = new re(),
    Tw = '+x+y';
function kP(r) {
    return Array.isArray(r) ? r[0] : r;
}
let lk = () => {
        const r = new Jn(new ra(1, 1), oA);
        return (lk = () => r), r;
    },
    uk = () => {
        const r = new Jn(new ra(1, 1, 32, 1), oA);
        return (uk = () => r), r;
    };
const mZ = { type: 'syncstart' },
    gZ = { type: 'synccomplete' },
    ck = [
        'font',
        'fontSize',
        'fontStyle',
        'fontWeight',
        'lang',
        'letterSpacing',
        'lineHeight',
        'maxWidth',
        'overflowWrap',
        'text',
        'direction',
        'textAlign',
        'textIndent',
        'whiteSpace',
        'anchorX',
        'anchorY',
        'colorRanges',
        'sdfGlyphSize',
    ],
    vZ = ck.concat(
        'material',
        'color',
        'depthOffset',
        'clipRect',
        'curveRadius',
        'orientation',
        'glyphGeometryDetail'
    );
let fk = class extends Jn {
    constructor() {
        const e = new lZ();
        super(e, null),
            (this.text = ''),
            (this.anchorX = 0),
            (this.anchorY = 0),
            (this.curveRadius = 0),
            (this.direction = 'auto'),
            (this.font = null),
            (this.unicodeFontsURL = null),
            (this.fontSize = 0.1),
            (this.fontWeight = 'normal'),
            (this.fontStyle = 'normal'),
            (this.lang = null),
            (this.letterSpacing = 0),
            (this.lineHeight = 'normal'),
            (this.maxWidth = 1 / 0),
            (this.overflowWrap = 'normal'),
            (this.textAlign = 'left'),
            (this.textIndent = 0),
            (this.whiteSpace = 'normal'),
            (this.material = null),
            (this.color = null),
            (this.colorRanges = null),
            (this.outlineWidth = 0),
            (this.outlineColor = 0),
            (this.outlineOpacity = 1),
            (this.outlineBlur = 0),
            (this.outlineOffsetX = 0),
            (this.outlineOffsetY = 0),
            (this.strokeWidth = 0),
            (this.strokeColor = OP),
            (this.strokeOpacity = 1),
            (this.fillOpacity = 1),
            (this.depthOffset = 0),
            (this.clipRect = null),
            (this.orientation = Tw),
            (this.glyphGeometryDetail = 1),
            (this.sdfGlyphSize = null),
            (this.gpuAccelerateSDF = !0),
            (this.debugSDF = !1);
    }
    sync(e) {
        this._needsSync &&
            ((this._needsSync = !1),
            this._isSyncing
                ? (this._queuedSyncs || (this._queuedSyncs = [])).push(e)
                : ((this._isSyncing = !0),
                  this.dispatchEvent(mZ),
                  rk(
                      {
                          text: this.text,
                          font: this.font,
                          lang: this.lang,
                          fontSize: this.fontSize || 0.1,
                          fontWeight: this.fontWeight || 'normal',
                          fontStyle: this.fontStyle || 'normal',
                          letterSpacing: this.letterSpacing || 0,
                          lineHeight: this.lineHeight || 'normal',
                          maxWidth: this.maxWidth,
                          direction: this.direction || 'auto',
                          textAlign: this.textAlign,
                          textIndent: this.textIndent,
                          whiteSpace: this.whiteSpace,
                          overflowWrap: this.overflowWrap,
                          anchorX: this.anchorX,
                          anchorY: this.anchorY,
                          colorRanges: this.colorRanges,
                          includeCaretPositions: !0,
                          sdfGlyphSize: this.sdfGlyphSize,
                          gpuAccelerateSDF: this.gpuAccelerateSDF,
                          unicodeFontsURL: this.unicodeFontsURL,
                      },
                      (t) => {
                          (this._isSyncing = !1),
                              (this._textRenderInfo = t),
                              this.geometry.updateGlyphs(
                                  t.glyphBounds,
                                  t.glyphAtlasIndices,
                                  t.blockBounds,
                                  t.chunkedBounds,
                                  t.glyphColors
                              );
                          const n = this._queuedSyncs;
                          n &&
                              ((this._queuedSyncs = null),
                              (this._needsSync = !0),
                              this.sync(() => {
                                  n.forEach((i) => i && i());
                              })),
                              this.dispatchEvent(gZ),
                              e && e();
                      }
                  )));
    }
    onBeforeRender(e, t, n, i, s, o) {
        this.sync(), s.isTroikaTextMaterial && this._prepareForRender(s);
    }
    dispose() {
        this.geometry.dispose();
    }
    get textRenderInfo() {
        return this._textRenderInfo || null;
    }
    createDerivedMaterial(e) {
        return dZ(e);
    }
    get material() {
        let e = this._derivedMaterial;
        const t =
            this._baseMaterial ||
            this._defaultMaterial ||
            (this._defaultMaterial = oA.clone());
        if (
            ((!e || !e.isDerivedFrom(t)) &&
                ((e = this._derivedMaterial = this.createDerivedMaterial(t)),
                t.addEventListener('dispose', function n() {
                    t.removeEventListener('dispose', n), e.dispose();
                })),
            this.hasOutline())
        ) {
            let n = e._outlineMtl;
            return (
                n ||
                    ((n = e._outlineMtl =
                        Object.create(e, { id: { value: e.id + 0.1 } })),
                    (n.isTextOutlineMaterial = !0),
                    (n.depthWrite = !1),
                    (n.map = null),
                    e.addEventListener('dispose', function i() {
                        e.removeEventListener('dispose', i), n.dispose();
                    })),
                [n, e]
            );
        } else return e;
    }
    set material(e) {
        e && e.isTroikaTextMaterial
            ? ((this._derivedMaterial = e),
              (this._baseMaterial = e.baseMaterial))
            : (this._baseMaterial = e);
    }
    hasOutline() {
        return !!(
            this.outlineWidth ||
            this.outlineBlur ||
            this.outlineOffsetX ||
            this.outlineOffsetY
        );
    }
    get glyphGeometryDetail() {
        return this.geometry.detail;
    }
    set glyphGeometryDetail(e) {
        this.geometry.detail = e;
    }
    get curveRadius() {
        return this.geometry.curveRadius;
    }
    set curveRadius(e) {
        this.geometry.curveRadius = e;
    }
    get customDepthMaterial() {
        return kP(this.material).getDepthMaterial();
    }
    set customDepthMaterial(e) {}
    get customDistanceMaterial() {
        return kP(this.material).getDistanceMaterial();
    }
    set customDistanceMaterial(e) {}
    _prepareForRender(e) {
        const t = e.isTextOutlineMaterial,
            n = e.uniforms,
            i = this.textRenderInfo;
        if (i) {
            const { sdfTexture: a, blockBounds: l } = i;
            (n.uTroikaSDFTexture.value = a),
                n.uTroikaSDFTextureSize.value.set(
                    a.image.width,
                    a.image.height
                ),
                (n.uTroikaSDFGlyphSize.value = i.sdfGlyphSize),
                (n.uTroikaSDFExponent.value = i.sdfExponent),
                n.uTroikaTotalBounds.value.fromArray(l),
                (n.uTroikaUseGlyphColors.value = !t && !!i.glyphColors);
            let u = 0,
                f = 0,
                d = 0,
                m,
                v,
                _,
                S = 0,
                w = 0;
            if (t) {
                let {
                    outlineWidth: A,
                    outlineOffsetX: T,
                    outlineOffsetY: b,
                    outlineBlur: P,
                    outlineOpacity: L,
                } = this;
                (u = this._parsePercent(A) || 0),
                    (f = Math.max(0, this._parsePercent(P) || 0)),
                    (m = L),
                    (S = this._parsePercent(T) || 0),
                    (w = this._parsePercent(b) || 0);
            } else
                (d = Math.max(0, this._parsePercent(this.strokeWidth) || 0)),
                    d &&
                        ((_ = this.strokeColor),
                        n.uTroikaStrokeColor.value.set(_ ?? OP),
                        (v = this.strokeOpacity),
                        v == null && (v = 1)),
                    (m = this.fillOpacity);
            (n.uTroikaEdgeOffset.value = u),
                n.uTroikaPositionOffset.value.set(S, w),
                (n.uTroikaBlurRadius.value = f),
                (n.uTroikaStrokeWidth.value = d),
                (n.uTroikaStrokeOpacity.value = v),
                (n.uTroikaFillOpacity.value = m ?? 1),
                (n.uTroikaCurveRadius.value = this.curveRadius || 0);
            let x = this.clipRect;
            if (x && Array.isArray(x) && x.length === 4)
                n.uTroikaClipRect.value.fromArray(x);
            else {
                const A = (this.fontSize || 0.1) * 100;
                n.uTroikaClipRect.value.set(
                    l[0] - A,
                    l[1] - A,
                    l[2] + A,
                    l[3] + A
                );
            }
            this.geometry.applyClipRect(n.uTroikaClipRect.value);
        }
        (n.uTroikaSDFDebug.value = !!this.debugSDF),
            (e.polygonOffset = !!this.depthOffset),
            (e.polygonOffsetFactor = e.polygonOffsetUnits =
                this.depthOffset || 0);
        const s = t ? this.outlineColor || 0 : this.color;
        if (s == null) delete e.color;
        else {
            const a = e.hasOwnProperty('color')
                ? e.color
                : (e.color = new Tt());
            (s !== a._input || typeof s == 'object') && a.set((a._input = s));
        }
        let o = this.orientation || Tw;
        if (o !== e._orientation) {
            let a = n.uTroikaOrient.value;
            o = o.replace(/[^-+xyz]/g, '');
            let l = o !== Tw && o.match(/^([-+])([xyz])([-+])([xyz])$/);
            if (l) {
                let [, u, f, d, m] = l;
                (t_.set(0, 0, 0)[f] = u === '-' ? 1 : -1),
                    (Ew.set(0, 0, 0)[m] = d === '-' ? -1 : 1),
                    UP.lookAt(pZ, t_.cross(Ew), Ew),
                    a.setFromMatrix4(UP);
            } else a.identity();
            e._orientation = o;
        }
    }
    _parsePercent(e) {
        if (typeof e == 'string') {
            let t = e.match(/^(-?[\d.]+)%$/),
                n = t ? parseFloat(t[1]) : NaN;
            e = (isNaN(n) ? 0 : n / 100) * this.fontSize;
        }
        return e;
    }
    localPositionToTextCoords(e, t = new tt()) {
        t.copy(e);
        const n = this.curveRadius;
        return (
            n &&
                (t.x =
                    Math.atan2(e.x, Math.abs(n) - Math.abs(e.z)) * Math.abs(n)),
            t
        );
    }
    worldPositionToTextCoords(e, t = new tt()) {
        return (
            t_.copy(e), this.localPositionToTextCoords(this.worldToLocal(t_), t)
        );
    }
    raycast(e, t) {
        const { textRenderInfo: n, curveRadius: i } = this;
        if (n) {
            const s = n.blockBounds,
                o = i ? uk() : lk(),
                a = o.geometry,
                { position: l, uv: u } = a.attributes;
            for (let f = 0; f < u.count; f++) {
                let d = s[0] + u.getX(f) * (s[2] - s[0]);
                const m = s[1] + u.getY(f) * (s[3] - s[1]);
                let v = 0;
                i && ((v = i - Math.cos(d / i) * i), (d = Math.sin(d / i) * i)),
                    l.setXYZ(f, d, m, v);
            }
            (a.boundingSphere = this.geometry.boundingSphere),
                (a.boundingBox = this.geometry.boundingBox),
                (o.matrixWorld = this.matrixWorld),
                (o.material.side = this.material.side),
                (hg.length = 0),
                o.raycast(e, hg);
            for (let f = 0; f < hg.length; f++)
                (hg[f].object = this), t.push(hg[f]);
        }
    }
    copy(e) {
        const t = this.geometry;
        return (
            super.copy(e),
            (this.geometry = t),
            vZ.forEach((n) => {
                this[n] = e[n];
            }),
            this
        );
    }
    clone() {
        return new this.constructor().copy(this);
    }
};
ck.forEach((r) => {
    const e = '_private_' + r;
    Object.defineProperty(fk.prototype, r, {
        get() {
            return this[e];
        },
        set(t) {
            t !== this[e] && ((this[e] = t), (this._needsSync = !0));
        },
    });
});
new Ar();
new Tt();
const hk = Y.forwardRef(
    (
        {
            sdfGlyphSize: r = 64,
            anchorX: e = 'center',
            anchorY: t = 'middle',
            font: n,
            fontSize: i = 1,
            children: s,
            characters: o,
            onSync: a,
            ...l
        },
        u
    ) => {
        const f = zi(({ invalidate: _ }) => _),
            [d] = Y.useState(() => new fk()),
            [m, v] = Y.useMemo(() => {
                const _ = [];
                let S = '';
                return (
                    Y.Children.forEach(s, (w) => {
                        typeof w == 'string' || typeof w == 'number'
                            ? (S += w)
                            : _.push(w);
                    }),
                    [_, S]
                );
            }, [s]);
        return (
            MU(
                () => new Promise((_) => tZ({ font: n, characters: o }, _)),
                ['troika-text', n, o]
            ),
            Y.useLayoutEffect(
                () =>
                    void d.sync(() => {
                        f(), a && a(d);
                    })
            ),
            Y.useEffect(() => () => d.dispose(), [d]),
            Y.createElement(
                'primitive',
                Oc(
                    {
                        object: d,
                        ref: u,
                        font: n,
                        text: v,
                        anchorX: e,
                        anchorY: t,
                        fontSize: i,
                        sdfGlyphSize: r,
                    },
                    l
                ),
                m
            )
        );
    }
);
function dk(r, e, t, n) {
    const i = class extends Qi {
        constructor(o = {}) {
            const a = Object.entries(r);
            super({
                uniforms: a.reduce((l, [u, f]) => {
                    const d = Hx.clone({ [u]: { value: f } });
                    return { ...l, ...d };
                }, {}),
                vertexShader: e,
                fragmentShader: t,
            }),
                (this.key = ''),
                a.forEach(([l]) =>
                    Object.defineProperty(this, l, {
                        get: () => this.uniforms[l].value,
                        set: (u) => (this.uniforms[l].value = u),
                    })
                ),
                Object.assign(this, o);
        }
    };
    return (i.key = AT.generateUUID()), i;
}
const Aw = (r) =>
    r === Object(r) && !Array.isArray(r) && typeof r != 'function';
function aA(r, e) {
    const t = zi((s) => s.gl),
        n = Il(nv, Aw(r) ? Object.values(r) : r);
    return (
        Y.useLayoutEffect(() => {
            e == null || e(n);
        }, [e]),
        Y.useEffect(() => {
            if ('initTexture' in t) {
                let s = [];
                Array.isArray(n)
                    ? (s = n)
                    : n instanceof Vn
                      ? (s = [n])
                      : Aw(n) && (s = Object.values(n)),
                    s.forEach((o) => {
                        o instanceof Vn && t.initTexture(o);
                    });
            }
        }, [t, n]),
        Y.useMemo(() => {
            if (Aw(r)) {
                const s = {};
                let o = 0;
                for (const a in r) s[a] = n[o++];
                return s;
            } else return n;
        }, [r, n])
    );
}
aA.preload = (r) => Il.preload(nv, r);
aA.clear = (r) => Il.clear(nv, r);
const yZ = () => parseInt(Vp.replace(/\D+/g, '')),
    pk = yZ();
function gx(r, e, t) {
    const n = zi((m) => m.size),
        i = zi((m) => m.viewport),
        s = typeof r == 'number' ? r : n.width * i.dpr,
        o = typeof e == 'number' ? e : n.height * i.dpr,
        a = (typeof r == 'number' ? t : r) || {},
        { samples: l = 0, depth: u, ...f } = a,
        d = Y.useMemo(() => {
            const m = new Ji(s, o, {
                minFilter: Cn,
                magFilter: Cn,
                type: Er,
                ...f,
            });
            return u && (m.depthTexture = new Gx(s, o, ri)), (m.samples = l), m;
        }, []);
    return (
        Y.useLayoutEffect(() => {
            d.setSize(s, o), l && (d.samples = l);
        }, [l, d, s, o]),
        Y.useEffect(() => () => d.dispose(), []),
        d
    );
}
/*!
 * camera-controls
 * https://github.com/yomotsu/camera-controls
 * (c) 2017 @yomotsu
 * Released under the MIT License.
 */ const Ci = { LEFT: 1, RIGHT: 2, MIDDLE: 4 },
    ze = Object.freeze({
        NONE: 0,
        ROTATE: 1,
        TRUCK: 2,
        SCREEN_PAN: 4,
        OFFSET: 8,
        DOLLY: 16,
        ZOOM: 32,
        TOUCH_ROTATE: 64,
        TOUCH_TRUCK: 128,
        TOUCH_SCREEN_PAN: 256,
        TOUCH_OFFSET: 512,
        TOUCH_DOLLY: 1024,
        TOUCH_ZOOM: 2048,
        TOUCH_DOLLY_TRUCK: 4096,
        TOUCH_DOLLY_SCREEN_PAN: 8192,
        TOUCH_DOLLY_OFFSET: 16384,
        TOUCH_DOLLY_ROTATE: 32768,
        TOUCH_ZOOM_TRUCK: 65536,
        TOUCH_ZOOM_OFFSET: 131072,
        TOUCH_ZOOM_SCREEN_PAN: 262144,
        TOUCH_ZOOM_ROTATE: 524288,
    }),
    Vd = { NONE: 0, IN: 1, OUT: -1 };
function zf(r) {
    return r.isPerspectiveCamera;
}
function mc(r) {
    return r.isOrthographicCamera;
}
const Hd = Math.PI * 2,
    NP = Math.PI / 2,
    mk = 1e-5,
    dg = Math.PI / 180;
function ka(r, e, t) {
    return Math.max(e, Math.min(t, r));
}
function ui(r, e = mk) {
    return Math.abs(r) < e;
}
function Wn(r, e, t = mk) {
    return ui(r - e, t);
}
function FP(r, e) {
    return Math.round(r / e) * e;
}
function pg(r) {
    return isFinite(r) ? r : r < 0 ? -Number.MAX_VALUE : Number.MAX_VALUE;
}
function mg(r) {
    return Math.abs(r) < Number.MAX_VALUE ? r : r * (1 / 0);
}
function n_(r, e, t, n, i = 1 / 0, s) {
    n = Math.max(1e-4, n);
    const o = 2 / n,
        a = o * s,
        l = 1 / (1 + a + 0.48 * a * a + 0.235 * a * a * a);
    let u = r - e;
    const f = e,
        d = i * n;
    (u = ka(u, -d, d)), (e = r - u);
    const m = (t.value + o * u) * s;
    t.value = (t.value - o * m) * l;
    let v = e + (u + m) * l;
    return f - r > 0 == v > f && ((v = f), (t.value = (v - f) / s)), v;
}
function BP(r, e, t, n, i = 1 / 0, s, o) {
    n = Math.max(1e-4, n);
    const a = 2 / n,
        l = a * s,
        u = 1 / (1 + l + 0.48 * l * l + 0.235 * l * l * l);
    let f = e.x,
        d = e.y,
        m = e.z,
        v = r.x - f,
        _ = r.y - d,
        S = r.z - m;
    const w = f,
        x = d,
        A = m,
        T = i * n,
        b = T * T,
        P = v * v + _ * _ + S * S;
    if (P > b) {
        const le = Math.sqrt(P);
        (v = (v / le) * T), (_ = (_ / le) * T), (S = (S / le) * T);
    }
    (f = r.x - v), (d = r.y - _), (m = r.z - S);
    const L = (t.x + a * v) * s,
        D = (t.y + a * _) * s,
        O = (t.z + a * S) * s;
    (t.x = (t.x - a * L) * u),
        (t.y = (t.y - a * D) * u),
        (t.z = (t.z - a * O) * u),
        (o.x = f + (v + L) * u),
        (o.y = d + (_ + D) * u),
        (o.z = m + (S + O) * u);
    const I = w - r.x,
        U = x - r.y,
        H = A - r.z,
        W = o.x - w,
        q = o.y - x,
        K = o.z - A;
    return (
        I * W + U * q + H * K > 0 &&
            ((o.x = w),
            (o.y = x),
            (o.z = A),
            (t.x = (o.x - w) / s),
            (t.y = (o.y - x) / s),
            (t.z = (o.z - A) / s)),
        o
    );
}
function bw(r, e) {
    e.set(0, 0),
        r.forEach((t) => {
            (e.x += t.clientX), (e.y += t.clientY);
        }),
        (e.x /= r.length),
        (e.y /= r.length);
}
function Cw(r, e) {
    return mc(r)
        ? (console.warn(`${e} is not supported in OrthographicCamera`), !0)
        : !1;
}
class _Z {
    constructor() {
        this._listeners = {};
    }
    addEventListener(e, t) {
        const n = this._listeners;
        n[e] === void 0 && (n[e] = []), n[e].indexOf(t) === -1 && n[e].push(t);
    }
    hasEventListener(e, t) {
        const n = this._listeners;
        return n[e] !== void 0 && n[e].indexOf(t) !== -1;
    }
    removeEventListener(e, t) {
        const i = this._listeners[e];
        if (i !== void 0) {
            const s = i.indexOf(t);
            s !== -1 && i.splice(s, 1);
        }
    }
    removeAllEventListeners(e) {
        if (!e) {
            this._listeners = {};
            return;
        }
        Array.isArray(this._listeners[e]) && (this._listeners[e].length = 0);
    }
    dispatchEvent(e) {
        const n = this._listeners[e.type];
        if (n !== void 0) {
            e.target = this;
            const i = n.slice(0);
            for (let s = 0, o = i.length; s < o; s++) i[s].call(this, e);
        }
    }
}
var Rw;
const xZ = '2.10.1',
    i_ = 1 / 8,
    SZ = /Mac/.test(
        (Rw = globalThis == null ? void 0 : globalThis.navigator) === null ||
            Rw === void 0
            ? void 0
            : Rw.platform
    );
let an,
    zP,
    r_,
    Pw,
    $s,
    _n,
    Nn,
    Gd,
    gg,
    pl,
    ml,
    Vf,
    VP,
    HP,
    Ko,
    vg,
    Wd,
    GP,
    Lw,
    WP,
    Iw,
    Dw,
    s_,
    Ow = class KM extends _Z {
        static install(e) {
            (an = e.THREE),
                (zP = Object.freeze(new an.Vector3(0, 0, 0))),
                (r_ = Object.freeze(new an.Vector3(0, 1, 0))),
                (Pw = Object.freeze(new an.Vector3(0, 0, 1))),
                ($s = new an.Vector2()),
                (_n = new an.Vector3()),
                (Nn = new an.Vector3()),
                (Gd = new an.Vector3()),
                (gg = new an.Vector3()),
                (pl = new an.Vector3()),
                (ml = new an.Vector3()),
                (Vf = new an.Vector3()),
                (VP = new an.Vector3()),
                (HP = new an.Vector3()),
                (Ko = new an.Spherical()),
                (vg = new an.Spherical()),
                (Wd = new an.Box3()),
                (GP = new an.Box3()),
                (Lw = new an.Sphere()),
                (WP = new an.Quaternion()),
                (Iw = new an.Quaternion()),
                (Dw = new an.Matrix4()),
                (s_ = new an.Raycaster());
        }
        static get ACTION() {
            return ze;
        }
        set verticalDragToForward(e) {
            console.warn(
                'camera-controls: `verticalDragToForward` was removed. Use `mouseButtons.left = CameraControls.ACTION.SCREEN_PAN` instead.'
            );
        }
        constructor(e, t) {
            super(),
                (this.minPolarAngle = 0),
                (this.maxPolarAngle = Math.PI),
                (this.minAzimuthAngle = -1 / 0),
                (this.maxAzimuthAngle = 1 / 0),
                (this.minDistance = Number.EPSILON),
                (this.maxDistance = 1 / 0),
                (this.infinityDolly = !1),
                (this.minZoom = 0.01),
                (this.maxZoom = 1 / 0),
                (this.smoothTime = 0.25),
                (this.draggingSmoothTime = 0.125),
                (this.maxSpeed = 1 / 0),
                (this.azimuthRotateSpeed = 1),
                (this.polarRotateSpeed = 1),
                (this.dollySpeed = 1),
                (this.dollyDragInverted = !1),
                (this.truckSpeed = 2),
                (this.dollyToCursor = !1),
                (this.dragToOffset = !1),
                (this.boundaryFriction = 0),
                (this.restThreshold = 0.01),
                (this.colliderMeshes = []),
                (this.cancel = () => {}),
                (this._enabled = !0),
                (this._state = ze.NONE),
                (this._viewport = null),
                (this._changedDolly = 0),
                (this._changedZoom = 0),
                (this._hasRested = !0),
                (this._boundaryEnclosesCamera = !1),
                (this._needsUpdate = !0),
                (this._updatedLastTime = !1),
                (this._elementRect = new DOMRect()),
                (this._isDragging = !1),
                (this._dragNeedsUpdate = !0),
                (this._activePointers = []),
                (this._lockedPointer = null),
                (this._interactiveArea = new DOMRect(0, 0, 1, 1)),
                (this._isUserControllingRotate = !1),
                (this._isUserControllingDolly = !1),
                (this._isUserControllingTruck = !1),
                (this._isUserControllingOffset = !1),
                (this._isUserControllingZoom = !1),
                (this._lastDollyDirection = Vd.NONE),
                (this._thetaVelocity = { value: 0 }),
                (this._phiVelocity = { value: 0 }),
                (this._radiusVelocity = { value: 0 }),
                (this._targetVelocity = new an.Vector3()),
                (this._focalOffsetVelocity = new an.Vector3()),
                (this._zoomVelocity = { value: 0 }),
                (this._truckInternal = (x, A, T, b) => {
                    let P, L;
                    if (zf(this._camera)) {
                        const D = _n
                                .copy(this._camera.position)
                                .sub(this._target),
                            O = this._camera.getEffectiveFOV() * dg,
                            I = D.length() * Math.tan(O * 0.5);
                        (P =
                            (this.truckSpeed * x * I) /
                            this._elementRect.height),
                            (L =
                                (this.truckSpeed * A * I) /
                                this._elementRect.height);
                    } else if (mc(this._camera)) {
                        const D = this._camera;
                        (P =
                            (this.truckSpeed * x * (D.right - D.left)) /
                            D.zoom /
                            this._elementRect.width),
                            (L =
                                (this.truckSpeed * A * (D.top - D.bottom)) /
                                D.zoom /
                                this._elementRect.height);
                    } else return;
                    b
                        ? (T
                              ? this.setFocalOffset(
                                    this._focalOffsetEnd.x + P,
                                    this._focalOffsetEnd.y,
                                    this._focalOffsetEnd.z,
                                    !0
                                )
                              : this.truck(P, 0, !0),
                          this.forward(-L, !0))
                        : T
                          ? this.setFocalOffset(
                                this._focalOffsetEnd.x + P,
                                this._focalOffsetEnd.y + L,
                                this._focalOffsetEnd.z,
                                !0
                            )
                          : this.truck(P, L, !0);
                }),
                (this._rotateInternal = (x, A) => {
                    const T =
                            (Hd * this.azimuthRotateSpeed * x) /
                            this._elementRect.height,
                        b =
                            (Hd * this.polarRotateSpeed * A) /
                            this._elementRect.height;
                    this.rotate(T, b, !0);
                }),
                (this._dollyInternal = (x, A, T) => {
                    const b = Math.pow(0.95, -x * this.dollySpeed),
                        P = this._sphericalEnd.radius,
                        L = this._sphericalEnd.radius * b,
                        D = ka(L, this.minDistance, this.maxDistance),
                        O = D - L;
                    this.infinityDolly && this.dollyToCursor
                        ? this._dollyToNoClamp(L, !0)
                        : this.infinityDolly && !this.dollyToCursor
                          ? (this.dollyInFixed(O, !0),
                            this._dollyToNoClamp(D, !0))
                          : this._dollyToNoClamp(D, !0),
                        this.dollyToCursor &&
                            ((this._changedDolly +=
                                (this.infinityDolly ? L : D) - P),
                            this._dollyControlCoord.set(A, T)),
                        (this._lastDollyDirection = Math.sign(-x));
                }),
                (this._zoomInternal = (x, A, T) => {
                    const b = Math.pow(0.95, x * this.dollySpeed),
                        P = this._zoom,
                        L = this._zoom * b;
                    this.zoomTo(L, !0),
                        this.dollyToCursor &&
                            ((this._changedZoom += L - P),
                            this._dollyControlCoord.set(A, T));
                }),
                typeof an > 'u' &&
                    console.error(
                        'camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information.'
                    ),
                (this._camera = e),
                (this._yAxisUpSpace = new an.Quaternion().setFromUnitVectors(
                    this._camera.up,
                    r_
                )),
                (this._yAxisUpSpaceInverse = this._yAxisUpSpace
                    .clone()
                    .invert()),
                (this._state = ze.NONE),
                (this._target = new an.Vector3()),
                (this._targetEnd = this._target.clone()),
                (this._focalOffset = new an.Vector3()),
                (this._focalOffsetEnd = this._focalOffset.clone()),
                (this._spherical = new an.Spherical().setFromVector3(
                    _n
                        .copy(this._camera.position)
                        .applyQuaternion(this._yAxisUpSpace)
                )),
                (this._sphericalEnd = this._spherical.clone()),
                (this._lastDistance = this._spherical.radius),
                (this._zoom = this._camera.zoom),
                (this._zoomEnd = this._zoom),
                (this._lastZoom = this._zoom),
                (this._nearPlaneCorners = [
                    new an.Vector3(),
                    new an.Vector3(),
                    new an.Vector3(),
                    new an.Vector3(),
                ]),
                this._updateNearPlaneCorners(),
                (this._boundary = new an.Box3(
                    new an.Vector3(-1 / 0, -1 / 0, -1 / 0),
                    new an.Vector3(1 / 0, 1 / 0, 1 / 0)
                )),
                (this._cameraUp0 = this._camera.up.clone()),
                (this._target0 = this._target.clone()),
                (this._position0 = this._camera.position.clone()),
                (this._zoom0 = this._zoom),
                (this._focalOffset0 = this._focalOffset.clone()),
                (this._dollyControlCoord = new an.Vector2()),
                (this.mouseButtons = {
                    left: ze.ROTATE,
                    middle: ze.DOLLY,
                    right: ze.TRUCK,
                    wheel: zf(this._camera)
                        ? ze.DOLLY
                        : mc(this._camera)
                          ? ze.ZOOM
                          : ze.NONE,
                }),
                (this.touches = {
                    one: ze.TOUCH_ROTATE,
                    two: zf(this._camera)
                        ? ze.TOUCH_DOLLY_TRUCK
                        : mc(this._camera)
                          ? ze.TOUCH_ZOOM_TRUCK
                          : ze.NONE,
                    three: ze.TOUCH_TRUCK,
                });
            const n = new an.Vector2(),
                i = new an.Vector2(),
                s = new an.Vector2(),
                o = (x) => {
                    if (!this._enabled || !this._domElement) return;
                    if (
                        this._interactiveArea.left !== 0 ||
                        this._interactiveArea.top !== 0 ||
                        this._interactiveArea.width !== 1 ||
                        this._interactiveArea.height !== 1
                    ) {
                        const b = this._domElement.getBoundingClientRect(),
                            P = x.clientX / b.width,
                            L = x.clientY / b.height;
                        if (
                            P < this._interactiveArea.left ||
                            P > this._interactiveArea.right ||
                            L < this._interactiveArea.top ||
                            L > this._interactiveArea.bottom
                        )
                            return;
                    }
                    const A =
                        x.pointerType !== 'mouse'
                            ? null
                            : (x.buttons & Ci.LEFT) === Ci.LEFT
                              ? Ci.LEFT
                              : (x.buttons & Ci.MIDDLE) === Ci.MIDDLE
                                ? Ci.MIDDLE
                                : (x.buttons & Ci.RIGHT) === Ci.RIGHT
                                  ? Ci.RIGHT
                                  : null;
                    if (A !== null) {
                        const b = this._findPointerByMouseButton(A);
                        b && this._disposePointer(b);
                    }
                    if (
                        (x.buttons & Ci.LEFT) === Ci.LEFT &&
                        this._lockedPointer
                    )
                        return;
                    const T = {
                        pointerId: x.pointerId,
                        clientX: x.clientX,
                        clientY: x.clientY,
                        deltaX: 0,
                        deltaY: 0,
                        mouseButton: A,
                    };
                    this._activePointers.push(T),
                        this._domElement.ownerDocument.removeEventListener(
                            'pointermove',
                            a,
                            { passive: !1 }
                        ),
                        this._domElement.ownerDocument.removeEventListener(
                            'pointerup',
                            l
                        ),
                        this._domElement.ownerDocument.addEventListener(
                            'pointermove',
                            a,
                            { passive: !1 }
                        ),
                        this._domElement.ownerDocument.addEventListener(
                            'pointerup',
                            l
                        ),
                        (this._isDragging = !0),
                        m(x);
                },
                a = (x) => {
                    x.cancelable && x.preventDefault();
                    const A = x.pointerId,
                        T = this._lockedPointer || this._findPointerById(A);
                    if (T) {
                        if (
                            ((T.clientX = x.clientX),
                            (T.clientY = x.clientY),
                            (T.deltaX = x.movementX),
                            (T.deltaY = x.movementY),
                            (this._state = 0),
                            x.pointerType === 'touch')
                        )
                            switch (this._activePointers.length) {
                                case 1:
                                    this._state = this.touches.one;
                                    break;
                                case 2:
                                    this._state = this.touches.two;
                                    break;
                                case 3:
                                    this._state = this.touches.three;
                                    break;
                            }
                        else
                            ((!this._isDragging && this._lockedPointer) ||
                                (this._isDragging &&
                                    (x.buttons & Ci.LEFT) === Ci.LEFT)) &&
                                (this._state =
                                    this._state | this.mouseButtons.left),
                                this._isDragging &&
                                    (x.buttons & Ci.MIDDLE) === Ci.MIDDLE &&
                                    (this._state =
                                        this._state | this.mouseButtons.middle),
                                this._isDragging &&
                                    (x.buttons & Ci.RIGHT) === Ci.RIGHT &&
                                    (this._state =
                                        this._state | this.mouseButtons.right);
                        v();
                    }
                },
                l = (x) => {
                    const A = this._findPointerById(x.pointerId);
                    if (!(A && A === this._lockedPointer)) {
                        if (
                            (A && this._disposePointer(A),
                            x.pointerType === 'touch')
                        )
                            switch (this._activePointers.length) {
                                case 0:
                                    this._state = ze.NONE;
                                    break;
                                case 1:
                                    this._state = this.touches.one;
                                    break;
                                case 2:
                                    this._state = this.touches.two;
                                    break;
                                case 3:
                                    this._state = this.touches.three;
                                    break;
                            }
                        else this._state = ze.NONE;
                        _();
                    }
                };
            let u = -1;
            const f = (x) => {
                    if (
                        !this._domElement ||
                        !this._enabled ||
                        this.mouseButtons.wheel === ze.NONE
                    )
                        return;
                    if (
                        this._interactiveArea.left !== 0 ||
                        this._interactiveArea.top !== 0 ||
                        this._interactiveArea.width !== 1 ||
                        this._interactiveArea.height !== 1
                    ) {
                        const L = this._domElement.getBoundingClientRect(),
                            D = x.clientX / L.width,
                            O = x.clientY / L.height;
                        if (
                            D < this._interactiveArea.left ||
                            D > this._interactiveArea.right ||
                            O < this._interactiveArea.top ||
                            O > this._interactiveArea.bottom
                        )
                            return;
                    }
                    if (
                        (x.preventDefault(),
                        this.dollyToCursor ||
                            this.mouseButtons.wheel === ze.ROTATE ||
                            this.mouseButtons.wheel === ze.TRUCK)
                    ) {
                        const L = performance.now();
                        u - L < 1e3 && this._getClientRect(this._elementRect),
                            (u = L);
                    }
                    const A = SZ ? -1 : -3,
                        T =
                            x.deltaMode === 1 || x.ctrlKey
                                ? x.deltaY / A
                                : x.deltaY / (A * 10),
                        b = this.dollyToCursor
                            ? ((x.clientX - this._elementRect.x) /
                                  this._elementRect.width) *
                                  2 -
                              1
                            : 0,
                        P = this.dollyToCursor
                            ? ((x.clientY - this._elementRect.y) /
                                  this._elementRect.height) *
                                  -2 +
                              1
                            : 0;
                    switch (this.mouseButtons.wheel) {
                        case ze.ROTATE: {
                            this._rotateInternal(x.deltaX, x.deltaY),
                                (this._isUserControllingRotate = !0);
                            break;
                        }
                        case ze.TRUCK: {
                            this._truckInternal(x.deltaX, x.deltaY, !1, !1),
                                (this._isUserControllingTruck = !0);
                            break;
                        }
                        case ze.SCREEN_PAN: {
                            this._truckInternal(x.deltaX, x.deltaY, !1, !0),
                                (this._isUserControllingTruck = !0);
                            break;
                        }
                        case ze.OFFSET: {
                            this._truckInternal(x.deltaX, x.deltaY, !0, !1),
                                (this._isUserControllingOffset = !0);
                            break;
                        }
                        case ze.DOLLY: {
                            this._dollyInternal(-T, b, P),
                                (this._isUserControllingDolly = !0);
                            break;
                        }
                        case ze.ZOOM: {
                            this._zoomInternal(-T, b, P),
                                (this._isUserControllingZoom = !0);
                            break;
                        }
                    }
                    this.dispatchEvent({ type: 'control' });
                },
                d = (x) => {
                    if (!(!this._domElement || !this._enabled)) {
                        if (this.mouseButtons.right === KM.ACTION.NONE) {
                            const A =
                                    x instanceof PointerEvent ? x.pointerId : 0,
                                T = this._findPointerById(A);
                            T && this._disposePointer(T),
                                this._domElement.ownerDocument.removeEventListener(
                                    'pointermove',
                                    a,
                                    { passive: !1 }
                                ),
                                this._domElement.ownerDocument.removeEventListener(
                                    'pointerup',
                                    l
                                );
                            return;
                        }
                        x.preventDefault();
                    }
                },
                m = (x) => {
                    if (!this._enabled) return;
                    if (
                        (bw(this._activePointers, $s),
                        this._getClientRect(this._elementRect),
                        n.copy($s),
                        i.copy($s),
                        this._activePointers.length >= 2)
                    ) {
                        const T = $s.x - this._activePointers[1].clientX,
                            b = $s.y - this._activePointers[1].clientY,
                            P = Math.sqrt(T * T + b * b);
                        s.set(0, P);
                        const L =
                                (this._activePointers[0].clientX +
                                    this._activePointers[1].clientX) *
                                0.5,
                            D =
                                (this._activePointers[0].clientY +
                                    this._activePointers[1].clientY) *
                                0.5;
                        i.set(L, D);
                    }
                    if (((this._state = 0), !x))
                        this._lockedPointer &&
                            (this._state =
                                this._state | this.mouseButtons.left);
                    else if ('pointerType' in x && x.pointerType === 'touch')
                        switch (this._activePointers.length) {
                            case 1:
                                this._state = this.touches.one;
                                break;
                            case 2:
                                this._state = this.touches.two;
                                break;
                            case 3:
                                this._state = this.touches.three;
                                break;
                        }
                    else
                        !this._lockedPointer &&
                            (x.buttons & Ci.LEFT) === Ci.LEFT &&
                            (this._state =
                                this._state | this.mouseButtons.left),
                            (x.buttons & Ci.MIDDLE) === Ci.MIDDLE &&
                                (this._state =
                                    this._state | this.mouseButtons.middle),
                            (x.buttons & Ci.RIGHT) === Ci.RIGHT &&
                                (this._state =
                                    this._state | this.mouseButtons.right);
                    ((this._state & ze.ROTATE) === ze.ROTATE ||
                        (this._state & ze.TOUCH_ROTATE) === ze.TOUCH_ROTATE ||
                        (this._state & ze.TOUCH_DOLLY_ROTATE) ===
                            ze.TOUCH_DOLLY_ROTATE ||
                        (this._state & ze.TOUCH_ZOOM_ROTATE) ===
                            ze.TOUCH_ZOOM_ROTATE) &&
                        ((this._sphericalEnd.theta = this._spherical.theta),
                        (this._sphericalEnd.phi = this._spherical.phi),
                        (this._thetaVelocity.value = 0),
                        (this._phiVelocity.value = 0)),
                        ((this._state & ze.TRUCK) === ze.TRUCK ||
                            (this._state & ze.SCREEN_PAN) === ze.SCREEN_PAN ||
                            (this._state & ze.TOUCH_TRUCK) === ze.TOUCH_TRUCK ||
                            (this._state & ze.TOUCH_SCREEN_PAN) ===
                                ze.TOUCH_SCREEN_PAN ||
                            (this._state & ze.TOUCH_DOLLY_TRUCK) ===
                                ze.TOUCH_DOLLY_TRUCK ||
                            (this._state & ze.TOUCH_DOLLY_SCREEN_PAN) ===
                                ze.TOUCH_DOLLY_SCREEN_PAN ||
                            (this._state & ze.TOUCH_ZOOM_TRUCK) ===
                                ze.TOUCH_ZOOM_TRUCK ||
                            (this._state & ze.TOUCH_ZOOM_SCREEN_PAN) ===
                                ze.TOUCH_DOLLY_SCREEN_PAN) &&
                            (this._targetEnd.copy(this._target),
                            this._targetVelocity.set(0, 0, 0)),
                        ((this._state & ze.DOLLY) === ze.DOLLY ||
                            (this._state & ze.TOUCH_DOLLY) === ze.TOUCH_DOLLY ||
                            (this._state & ze.TOUCH_DOLLY_TRUCK) ===
                                ze.TOUCH_DOLLY_TRUCK ||
                            (this._state & ze.TOUCH_DOLLY_SCREEN_PAN) ===
                                ze.TOUCH_DOLLY_SCREEN_PAN ||
                            (this._state & ze.TOUCH_DOLLY_OFFSET) ===
                                ze.TOUCH_DOLLY_OFFSET ||
                            (this._state & ze.TOUCH_DOLLY_ROTATE) ===
                                ze.TOUCH_DOLLY_ROTATE) &&
                            ((this._sphericalEnd.radius =
                                this._spherical.radius),
                            (this._radiusVelocity.value = 0)),
                        ((this._state & ze.ZOOM) === ze.ZOOM ||
                            (this._state & ze.TOUCH_ZOOM) === ze.TOUCH_ZOOM ||
                            (this._state & ze.TOUCH_ZOOM_TRUCK) ===
                                ze.TOUCH_ZOOM_TRUCK ||
                            (this._state & ze.TOUCH_ZOOM_SCREEN_PAN) ===
                                ze.TOUCH_ZOOM_SCREEN_PAN ||
                            (this._state & ze.TOUCH_ZOOM_OFFSET) ===
                                ze.TOUCH_ZOOM_OFFSET ||
                            (this._state & ze.TOUCH_ZOOM_ROTATE) ===
                                ze.TOUCH_ZOOM_ROTATE) &&
                            ((this._zoomEnd = this._zoom),
                            (this._zoomVelocity.value = 0)),
                        ((this._state & ze.OFFSET) === ze.OFFSET ||
                            (this._state & ze.TOUCH_OFFSET) ===
                                ze.TOUCH_OFFSET ||
                            (this._state & ze.TOUCH_DOLLY_OFFSET) ===
                                ze.TOUCH_DOLLY_OFFSET ||
                            (this._state & ze.TOUCH_ZOOM_OFFSET) ===
                                ze.TOUCH_ZOOM_OFFSET) &&
                            (this._focalOffsetEnd.copy(this._focalOffset),
                            this._focalOffsetVelocity.set(0, 0, 0)),
                        this.dispatchEvent({ type: 'controlstart' });
                },
                v = () => {
                    if (!this._enabled || !this._dragNeedsUpdate) return;
                    (this._dragNeedsUpdate = !1), bw(this._activePointers, $s);
                    const A =
                            this._domElement &&
                            this._domElement.ownerDocument
                                .pointerLockElement === this._domElement
                                ? this._lockedPointer || this._activePointers[0]
                                : null,
                        T = A ? -A.deltaX : i.x - $s.x,
                        b = A ? -A.deltaY : i.y - $s.y;
                    if (
                        (i.copy($s),
                        ((this._state & ze.ROTATE) === ze.ROTATE ||
                            (this._state & ze.TOUCH_ROTATE) ===
                                ze.TOUCH_ROTATE ||
                            (this._state & ze.TOUCH_DOLLY_ROTATE) ===
                                ze.TOUCH_DOLLY_ROTATE ||
                            (this._state & ze.TOUCH_ZOOM_ROTATE) ===
                                ze.TOUCH_ZOOM_ROTATE) &&
                            (this._rotateInternal(T, b),
                            (this._isUserControllingRotate = !0)),
                        (this._state & ze.DOLLY) === ze.DOLLY ||
                            (this._state & ze.ZOOM) === ze.ZOOM)
                    ) {
                        const P = this.dollyToCursor
                                ? ((n.x - this._elementRect.x) /
                                      this._elementRect.width) *
                                      2 -
                                  1
                                : 0,
                            L = this.dollyToCursor
                                ? ((n.y - this._elementRect.y) /
                                      this._elementRect.height) *
                                      -2 +
                                  1
                                : 0,
                            D = this.dollyDragInverted ? -1 : 1;
                        (this._state & ze.DOLLY) === ze.DOLLY
                            ? (this._dollyInternal(D * b * i_, P, L),
                              (this._isUserControllingDolly = !0))
                            : (this._zoomInternal(D * b * i_, P, L),
                              (this._isUserControllingZoom = !0));
                    }
                    if (
                        (this._state & ze.TOUCH_DOLLY) === ze.TOUCH_DOLLY ||
                        (this._state & ze.TOUCH_ZOOM) === ze.TOUCH_ZOOM ||
                        (this._state & ze.TOUCH_DOLLY_TRUCK) ===
                            ze.TOUCH_DOLLY_TRUCK ||
                        (this._state & ze.TOUCH_ZOOM_TRUCK) ===
                            ze.TOUCH_ZOOM_TRUCK ||
                        (this._state & ze.TOUCH_DOLLY_SCREEN_PAN) ===
                            ze.TOUCH_DOLLY_SCREEN_PAN ||
                        (this._state & ze.TOUCH_ZOOM_SCREEN_PAN) ===
                            ze.TOUCH_ZOOM_SCREEN_PAN ||
                        (this._state & ze.TOUCH_DOLLY_OFFSET) ===
                            ze.TOUCH_DOLLY_OFFSET ||
                        (this._state & ze.TOUCH_ZOOM_OFFSET) ===
                            ze.TOUCH_ZOOM_OFFSET ||
                        (this._state & ze.TOUCH_DOLLY_ROTATE) ===
                            ze.TOUCH_DOLLY_ROTATE ||
                        (this._state & ze.TOUCH_ZOOM_ROTATE) ===
                            ze.TOUCH_ZOOM_ROTATE
                    ) {
                        const P = $s.x - this._activePointers[1].clientX,
                            L = $s.y - this._activePointers[1].clientY,
                            D = Math.sqrt(P * P + L * L),
                            O = s.y - D;
                        s.set(0, D);
                        const I = this.dollyToCursor
                                ? ((i.x - this._elementRect.x) /
                                      this._elementRect.width) *
                                      2 -
                                  1
                                : 0,
                            U = this.dollyToCursor
                                ? ((i.y - this._elementRect.y) /
                                      this._elementRect.height) *
                                      -2 +
                                  1
                                : 0;
                        (this._state & ze.TOUCH_DOLLY) === ze.TOUCH_DOLLY ||
                        (this._state & ze.TOUCH_DOLLY_ROTATE) ===
                            ze.TOUCH_DOLLY_ROTATE ||
                        (this._state & ze.TOUCH_DOLLY_TRUCK) ===
                            ze.TOUCH_DOLLY_TRUCK ||
                        (this._state & ze.TOUCH_DOLLY_SCREEN_PAN) ===
                            ze.TOUCH_DOLLY_SCREEN_PAN ||
                        (this._state & ze.TOUCH_DOLLY_OFFSET) ===
                            ze.TOUCH_DOLLY_OFFSET
                            ? (this._dollyInternal(O * i_, I, U),
                              (this._isUserControllingDolly = !0))
                            : (this._zoomInternal(O * i_, I, U),
                              (this._isUserControllingZoom = !0));
                    }
                    ((this._state & ze.TRUCK) === ze.TRUCK ||
                        (this._state & ze.TOUCH_TRUCK) === ze.TOUCH_TRUCK ||
                        (this._state & ze.TOUCH_DOLLY_TRUCK) ===
                            ze.TOUCH_DOLLY_TRUCK ||
                        (this._state & ze.TOUCH_ZOOM_TRUCK) ===
                            ze.TOUCH_ZOOM_TRUCK) &&
                        (this._truckInternal(T, b, !1, !1),
                        (this._isUserControllingTruck = !0)),
                        ((this._state & ze.SCREEN_PAN) === ze.SCREEN_PAN ||
                            (this._state & ze.TOUCH_SCREEN_PAN) ===
                                ze.TOUCH_SCREEN_PAN ||
                            (this._state & ze.TOUCH_DOLLY_SCREEN_PAN) ===
                                ze.TOUCH_DOLLY_SCREEN_PAN ||
                            (this._state & ze.TOUCH_ZOOM_SCREEN_PAN) ===
                                ze.TOUCH_ZOOM_SCREEN_PAN) &&
                            (this._truckInternal(T, b, !1, !0),
                            (this._isUserControllingTruck = !0)),
                        ((this._state & ze.OFFSET) === ze.OFFSET ||
                            (this._state & ze.TOUCH_OFFSET) ===
                                ze.TOUCH_OFFSET ||
                            (this._state & ze.TOUCH_DOLLY_OFFSET) ===
                                ze.TOUCH_DOLLY_OFFSET ||
                            (this._state & ze.TOUCH_ZOOM_OFFSET) ===
                                ze.TOUCH_ZOOM_OFFSET) &&
                            (this._truckInternal(T, b, !0, !1),
                            (this._isUserControllingOffset = !0)),
                        this.dispatchEvent({ type: 'control' });
                },
                _ = () => {
                    bw(this._activePointers, $s),
                        i.copy($s),
                        (this._dragNeedsUpdate = !1),
                        (this._activePointers.length === 0 ||
                            (this._activePointers.length === 1 &&
                                this._activePointers[0] ===
                                    this._lockedPointer)) &&
                            (this._isDragging = !1),
                        this._activePointers.length === 0 &&
                            this._domElement &&
                            (this._domElement.ownerDocument.removeEventListener(
                                'pointermove',
                                a,
                                { passive: !1 }
                            ),
                            this._domElement.ownerDocument.removeEventListener(
                                'pointerup',
                                l
                            ),
                            this.dispatchEvent({ type: 'controlend' }));
                };
            (this.lockPointer = () => {
                !this._enabled ||
                    !this._domElement ||
                    (this.cancel(),
                    (this._lockedPointer = {
                        pointerId: -1,
                        clientX: 0,
                        clientY: 0,
                        deltaX: 0,
                        deltaY: 0,
                        mouseButton: null,
                    }),
                    this._activePointers.push(this._lockedPointer),
                    this._domElement.ownerDocument.removeEventListener(
                        'pointermove',
                        a,
                        { passive: !1 }
                    ),
                    this._domElement.ownerDocument.removeEventListener(
                        'pointerup',
                        l
                    ),
                    this._domElement.requestPointerLock(),
                    this._domElement.ownerDocument.addEventListener(
                        'pointerlockchange',
                        S
                    ),
                    this._domElement.ownerDocument.addEventListener(
                        'pointerlockerror',
                        w
                    ),
                    this._domElement.ownerDocument.addEventListener(
                        'pointermove',
                        a,
                        { passive: !1 }
                    ),
                    this._domElement.ownerDocument.addEventListener(
                        'pointerup',
                        l
                    ),
                    m());
            }),
                (this.unlockPointer = () => {
                    var x, A, T;
                    this._lockedPointer !== null &&
                        (this._disposePointer(this._lockedPointer),
                        (this._lockedPointer = null)),
                        (x = this._domElement) === null ||
                            x === void 0 ||
                            x.ownerDocument.exitPointerLock(),
                        (A = this._domElement) === null ||
                            A === void 0 ||
                            A.ownerDocument.removeEventListener(
                                'pointerlockchange',
                                S
                            ),
                        (T = this._domElement) === null ||
                            T === void 0 ||
                            T.ownerDocument.removeEventListener(
                                'pointerlockerror',
                                w
                            ),
                        this.cancel();
                });
            const S = () => {
                    (this._domElement &&
                        this._domElement.ownerDocument.pointerLockElement ===
                            this._domElement) ||
                        this.unlockPointer();
                },
                w = () => {
                    this.unlockPointer();
                };
            (this._addAllEventListeners = (x) => {
                (this._domElement = x),
                    (this._domElement.style.touchAction = 'none'),
                    (this._domElement.style.userSelect = 'none'),
                    (this._domElement.style.webkitUserSelect = 'none'),
                    this._domElement.addEventListener('pointerdown', o),
                    this._domElement.addEventListener('pointercancel', l),
                    this._domElement.addEventListener('wheel', f, {
                        passive: !1,
                    }),
                    this._domElement.addEventListener('contextmenu', d);
            }),
                (this._removeAllEventListeners = () => {
                    this._domElement &&
                        ((this._domElement.style.touchAction = ''),
                        (this._domElement.style.userSelect = ''),
                        (this._domElement.style.webkitUserSelect = ''),
                        this._domElement.removeEventListener('pointerdown', o),
                        this._domElement.removeEventListener(
                            'pointercancel',
                            l
                        ),
                        this._domElement.removeEventListener('wheel', f, {
                            passive: !1,
                        }),
                        this._domElement.removeEventListener('contextmenu', d),
                        this._domElement.ownerDocument.removeEventListener(
                            'pointermove',
                            a,
                            { passive: !1 }
                        ),
                        this._domElement.ownerDocument.removeEventListener(
                            'pointerup',
                            l
                        ),
                        this._domElement.ownerDocument.removeEventListener(
                            'pointerlockchange',
                            S
                        ),
                        this._domElement.ownerDocument.removeEventListener(
                            'pointerlockerror',
                            w
                        ));
                }),
                (this.cancel = () => {
                    this._state !== ze.NONE &&
                        ((this._state = ze.NONE),
                        (this._activePointers.length = 0),
                        _());
                }),
                t && this.connect(t),
                this.update(0);
        }
        get camera() {
            return this._camera;
        }
        set camera(e) {
            (this._camera = e),
                this.updateCameraUp(),
                this._camera.updateProjectionMatrix(),
                this._updateNearPlaneCorners(),
                (this._needsUpdate = !0);
        }
        get enabled() {
            return this._enabled;
        }
        set enabled(e) {
            (this._enabled = e),
                this._domElement &&
                    (e
                        ? ((this._domElement.style.touchAction = 'none'),
                          (this._domElement.style.userSelect = 'none'),
                          (this._domElement.style.webkitUserSelect = 'none'))
                        : (this.cancel(),
                          (this._domElement.style.touchAction = ''),
                          (this._domElement.style.userSelect = ''),
                          (this._domElement.style.webkitUserSelect = '')));
        }
        get active() {
            return !this._hasRested;
        }
        get currentAction() {
            return this._state;
        }
        get distance() {
            return this._spherical.radius;
        }
        set distance(e) {
            (this._spherical.radius === e && this._sphericalEnd.radius === e) ||
                ((this._spherical.radius = e),
                (this._sphericalEnd.radius = e),
                (this._needsUpdate = !0));
        }
        get azimuthAngle() {
            return this._spherical.theta;
        }
        set azimuthAngle(e) {
            (this._spherical.theta === e && this._sphericalEnd.theta === e) ||
                ((this._spherical.theta = e),
                (this._sphericalEnd.theta = e),
                (this._needsUpdate = !0));
        }
        get polarAngle() {
            return this._spherical.phi;
        }
        set polarAngle(e) {
            (this._spherical.phi === e && this._sphericalEnd.phi === e) ||
                ((this._spherical.phi = e),
                (this._sphericalEnd.phi = e),
                (this._needsUpdate = !0));
        }
        get boundaryEnclosesCamera() {
            return this._boundaryEnclosesCamera;
        }
        set boundaryEnclosesCamera(e) {
            (this._boundaryEnclosesCamera = e), (this._needsUpdate = !0);
        }
        set interactiveArea(e) {
            (this._interactiveArea.width = ka(e.width, 0, 1)),
                (this._interactiveArea.height = ka(e.height, 0, 1)),
                (this._interactiveArea.x = ka(
                    e.x,
                    0,
                    1 - this._interactiveArea.width
                )),
                (this._interactiveArea.y = ka(
                    e.y,
                    0,
                    1 - this._interactiveArea.height
                ));
        }
        addEventListener(e, t) {
            super.addEventListener(e, t);
        }
        removeEventListener(e, t) {
            super.removeEventListener(e, t);
        }
        rotate(e, t, n = !1) {
            return this.rotateTo(
                this._sphericalEnd.theta + e,
                this._sphericalEnd.phi + t,
                n
            );
        }
        rotateAzimuthTo(e, t = !1) {
            return this.rotateTo(e, this._sphericalEnd.phi, t);
        }
        rotatePolarTo(e, t = !1) {
            return this.rotateTo(this._sphericalEnd.theta, e, t);
        }
        rotateTo(e, t, n = !1) {
            this._isUserControllingRotate = !1;
            const i = ka(e, this.minAzimuthAngle, this.maxAzimuthAngle),
                s = ka(t, this.minPolarAngle, this.maxPolarAngle);
            (this._sphericalEnd.theta = i),
                (this._sphericalEnd.phi = s),
                this._sphericalEnd.makeSafe(),
                (this._needsUpdate = !0),
                n ||
                    ((this._spherical.theta = this._sphericalEnd.theta),
                    (this._spherical.phi = this._sphericalEnd.phi));
            const o =
                !n ||
                (Wn(
                    this._spherical.theta,
                    this._sphericalEnd.theta,
                    this.restThreshold
                ) &&
                    Wn(
                        this._spherical.phi,
                        this._sphericalEnd.phi,
                        this.restThreshold
                    ));
            return this._createOnRestPromise(o);
        }
        dolly(e, t = !1) {
            return this.dollyTo(this._sphericalEnd.radius - e, t);
        }
        dollyTo(e, t = !1) {
            return (
                (this._isUserControllingDolly = !1),
                (this._lastDollyDirection = Vd.NONE),
                (this._changedDolly = 0),
                this._dollyToNoClamp(
                    ka(e, this.minDistance, this.maxDistance),
                    t
                )
            );
        }
        _dollyToNoClamp(e, t = !1) {
            const n = this._sphericalEnd.radius;
            if (this.colliderMeshes.length >= 1) {
                const o = this._collisionTest(),
                    a = Wn(o, this._spherical.radius);
                if (!(n > e) && a) return Promise.resolve();
                this._sphericalEnd.radius = Math.min(e, o);
            } else this._sphericalEnd.radius = e;
            (this._needsUpdate = !0),
                t || (this._spherical.radius = this._sphericalEnd.radius);
            const s =
                !t ||
                Wn(
                    this._spherical.radius,
                    this._sphericalEnd.radius,
                    this.restThreshold
                );
            return this._createOnRestPromise(s);
        }
        dollyInFixed(e, t = !1) {
            this._targetEnd.add(this._getCameraDirection(gg).multiplyScalar(e)),
                t || this._target.copy(this._targetEnd);
            const n =
                !t ||
                (Wn(this._target.x, this._targetEnd.x, this.restThreshold) &&
                    Wn(this._target.y, this._targetEnd.y, this.restThreshold) &&
                    Wn(this._target.z, this._targetEnd.z, this.restThreshold));
            return this._createOnRestPromise(n);
        }
        zoom(e, t = !1) {
            return this.zoomTo(this._zoomEnd + e, t);
        }
        zoomTo(e, t = !1) {
            (this._isUserControllingZoom = !1),
                (this._zoomEnd = ka(e, this.minZoom, this.maxZoom)),
                (this._needsUpdate = !0),
                t || (this._zoom = this._zoomEnd);
            const n = !t || Wn(this._zoom, this._zoomEnd, this.restThreshold);
            return (this._changedZoom = 0), this._createOnRestPromise(n);
        }
        pan(e, t, n = !1) {
            return (
                console.warn('`pan` has been renamed to `truck`'),
                this.truck(e, t, n)
            );
        }
        truck(e, t, n = !1) {
            this._camera.updateMatrix(),
                pl.setFromMatrixColumn(this._camera.matrix, 0),
                ml.setFromMatrixColumn(this._camera.matrix, 1),
                pl.multiplyScalar(e),
                ml.multiplyScalar(-t);
            const i = _n.copy(pl).add(ml),
                s = Nn.copy(this._targetEnd).add(i);
            return this.moveTo(s.x, s.y, s.z, n);
        }
        forward(e, t = !1) {
            _n.setFromMatrixColumn(this._camera.matrix, 0),
                _n.crossVectors(this._camera.up, _n),
                _n.multiplyScalar(e);
            const n = Nn.copy(this._targetEnd).add(_n);
            return this.moveTo(n.x, n.y, n.z, t);
        }
        elevate(e, t = !1) {
            return (
                _n.copy(this._camera.up).multiplyScalar(e),
                this.moveTo(
                    this._targetEnd.x + _n.x,
                    this._targetEnd.y + _n.y,
                    this._targetEnd.z + _n.z,
                    t
                )
            );
        }
        moveTo(e, t, n, i = !1) {
            this._isUserControllingTruck = !1;
            const s = _n.set(e, t, n).sub(this._targetEnd);
            this._encloseToBoundary(this._targetEnd, s, this.boundaryFriction),
                (this._needsUpdate = !0),
                i || this._target.copy(this._targetEnd);
            const o =
                !i ||
                (Wn(this._target.x, this._targetEnd.x, this.restThreshold) &&
                    Wn(this._target.y, this._targetEnd.y, this.restThreshold) &&
                    Wn(this._target.z, this._targetEnd.z, this.restThreshold));
            return this._createOnRestPromise(o);
        }
        lookInDirectionOf(e, t, n, i = !1) {
            const a = _n
                .set(e, t, n)
                .sub(this._targetEnd)
                .normalize()
                .multiplyScalar(-this._sphericalEnd.radius)
                .add(this._targetEnd);
            return this.setPosition(a.x, a.y, a.z, i);
        }
        fitToBox(
            e,
            t,
            {
                cover: n = !1,
                paddingLeft: i = 0,
                paddingRight: s = 0,
                paddingBottom: o = 0,
                paddingTop: a = 0,
            } = {}
        ) {
            const l = [],
                u = e.isBox3 ? Wd.copy(e) : Wd.setFromObject(e);
            u.isEmpty() &&
                (console.warn(
                    'camera-controls: fitTo() cannot be used with an empty box. Aborting'
                ),
                Promise.resolve());
            const f = FP(this._sphericalEnd.theta, NP),
                d = FP(this._sphericalEnd.phi, NP);
            l.push(this.rotateTo(f, d, t));
            const m = _n.setFromSpherical(this._sphericalEnd).normalize(),
                v = WP.setFromUnitVectors(m, Pw),
                _ = Wn(Math.abs(m.y), 1);
            _ && v.multiply(Iw.setFromAxisAngle(r_, f)),
                v.multiply(this._yAxisUpSpaceInverse);
            const S = GP.makeEmpty();
            Nn.copy(u.min).applyQuaternion(v),
                S.expandByPoint(Nn),
                Nn.copy(u.min).setX(u.max.x).applyQuaternion(v),
                S.expandByPoint(Nn),
                Nn.copy(u.min).setY(u.max.y).applyQuaternion(v),
                S.expandByPoint(Nn),
                Nn.copy(u.max).setZ(u.min.z).applyQuaternion(v),
                S.expandByPoint(Nn),
                Nn.copy(u.min).setZ(u.max.z).applyQuaternion(v),
                S.expandByPoint(Nn),
                Nn.copy(u.max).setY(u.min.y).applyQuaternion(v),
                S.expandByPoint(Nn),
                Nn.copy(u.max).setX(u.min.x).applyQuaternion(v),
                S.expandByPoint(Nn),
                Nn.copy(u.max).applyQuaternion(v),
                S.expandByPoint(Nn),
                (S.min.x -= i),
                (S.min.y -= o),
                (S.max.x += s),
                (S.max.y += a),
                v.setFromUnitVectors(Pw, m),
                _ && v.premultiply(Iw.invert()),
                v.premultiply(this._yAxisUpSpace);
            const w = S.getSize(_n),
                x = S.getCenter(Nn).applyQuaternion(v);
            if (zf(this._camera)) {
                const A = this.getDistanceToFitBox(w.x, w.y, w.z, n);
                l.push(this.moveTo(x.x, x.y, x.z, t)),
                    l.push(this.dollyTo(A, t)),
                    l.push(this.setFocalOffset(0, 0, 0, t));
            } else if (mc(this._camera)) {
                const A = this._camera,
                    T = A.right - A.left,
                    b = A.top - A.bottom,
                    P = n
                        ? Math.max(T / w.x, b / w.y)
                        : Math.min(T / w.x, b / w.y);
                l.push(this.moveTo(x.x, x.y, x.z, t)),
                    l.push(this.zoomTo(P, t)),
                    l.push(this.setFocalOffset(0, 0, 0, t));
            }
            return Promise.all(l);
        }
        fitToSphere(e, t) {
            const n = [],
                s =
                    'isObject3D' in e
                        ? KM.createBoundingSphere(e, Lw)
                        : Lw.copy(e);
            if (
                (n.push(this.moveTo(s.center.x, s.center.y, s.center.z, t)),
                zf(this._camera))
            ) {
                const o = this.getDistanceToFitSphere(s.radius);
                n.push(this.dollyTo(o, t));
            } else if (mc(this._camera)) {
                const o = this._camera.right - this._camera.left,
                    a = this._camera.top - this._camera.bottom,
                    l = 2 * s.radius,
                    u = Math.min(o / l, a / l);
                n.push(this.zoomTo(u, t));
            }
            return n.push(this.setFocalOffset(0, 0, 0, t)), Promise.all(n);
        }
        setLookAt(e, t, n, i, s, o, a = !1) {
            (this._isUserControllingRotate = !1),
                (this._isUserControllingDolly = !1),
                (this._isUserControllingTruck = !1),
                (this._lastDollyDirection = Vd.NONE),
                (this._changedDolly = 0);
            const l = Nn.set(i, s, o),
                u = _n.set(e, t, n);
            this._targetEnd.copy(l),
                this._sphericalEnd.setFromVector3(
                    u.sub(l).applyQuaternion(this._yAxisUpSpace)
                ),
                this.normalizeRotations(),
                (this._needsUpdate = !0),
                a ||
                    (this._target.copy(this._targetEnd),
                    this._spherical.copy(this._sphericalEnd));
            const f =
                !a ||
                (Wn(this._target.x, this._targetEnd.x, this.restThreshold) &&
                    Wn(this._target.y, this._targetEnd.y, this.restThreshold) &&
                    Wn(this._target.z, this._targetEnd.z, this.restThreshold) &&
                    Wn(
                        this._spherical.theta,
                        this._sphericalEnd.theta,
                        this.restThreshold
                    ) &&
                    Wn(
                        this._spherical.phi,
                        this._sphericalEnd.phi,
                        this.restThreshold
                    ) &&
                    Wn(
                        this._spherical.radius,
                        this._sphericalEnd.radius,
                        this.restThreshold
                    ));
            return this._createOnRestPromise(f);
        }
        lerpLookAt(e, t, n, i, s, o, a, l, u, f, d, m, v, _ = !1) {
            (this._isUserControllingRotate = !1),
                (this._isUserControllingDolly = !1),
                (this._isUserControllingTruck = !1),
                (this._lastDollyDirection = Vd.NONE),
                (this._changedDolly = 0);
            const S = _n.set(i, s, o),
                w = Nn.set(e, t, n);
            Ko.setFromVector3(w.sub(S).applyQuaternion(this._yAxisUpSpace));
            const x = Gd.set(f, d, m),
                A = Nn.set(a, l, u);
            vg.setFromVector3(A.sub(x).applyQuaternion(this._yAxisUpSpace)),
                this._targetEnd.copy(S.lerp(x, v));
            const T = vg.theta - Ko.theta,
                b = vg.phi - Ko.phi,
                P = vg.radius - Ko.radius;
            this._sphericalEnd.set(
                Ko.radius + P * v,
                Ko.phi + b * v,
                Ko.theta + T * v
            ),
                this.normalizeRotations(),
                (this._needsUpdate = !0),
                _ ||
                    (this._target.copy(this._targetEnd),
                    this._spherical.copy(this._sphericalEnd));
            const L =
                !_ ||
                (Wn(this._target.x, this._targetEnd.x, this.restThreshold) &&
                    Wn(this._target.y, this._targetEnd.y, this.restThreshold) &&
                    Wn(this._target.z, this._targetEnd.z, this.restThreshold) &&
                    Wn(
                        this._spherical.theta,
                        this._sphericalEnd.theta,
                        this.restThreshold
                    ) &&
                    Wn(
                        this._spherical.phi,
                        this._sphericalEnd.phi,
                        this.restThreshold
                    ) &&
                    Wn(
                        this._spherical.radius,
                        this._sphericalEnd.radius,
                        this.restThreshold
                    ));
            return this._createOnRestPromise(L);
        }
        setPosition(e, t, n, i = !1) {
            return this.setLookAt(
                e,
                t,
                n,
                this._targetEnd.x,
                this._targetEnd.y,
                this._targetEnd.z,
                i
            );
        }
        setTarget(e, t, n, i = !1) {
            const s = this.getPosition(_n),
                o = this.setLookAt(s.x, s.y, s.z, e, t, n, i);
            return (
                (this._sphericalEnd.phi = ka(
                    this._sphericalEnd.phi,
                    this.minPolarAngle,
                    this.maxPolarAngle
                )),
                o
            );
        }
        setFocalOffset(e, t, n, i = !1) {
            (this._isUserControllingOffset = !1),
                this._focalOffsetEnd.set(e, t, n),
                (this._needsUpdate = !0),
                i || this._focalOffset.copy(this._focalOffsetEnd);
            const s =
                !i ||
                (Wn(
                    this._focalOffset.x,
                    this._focalOffsetEnd.x,
                    this.restThreshold
                ) &&
                    Wn(
                        this._focalOffset.y,
                        this._focalOffsetEnd.y,
                        this.restThreshold
                    ) &&
                    Wn(
                        this._focalOffset.z,
                        this._focalOffsetEnd.z,
                        this.restThreshold
                    ));
            return this._createOnRestPromise(s);
        }
        setOrbitPoint(e, t, n) {
            this._camera.updateMatrixWorld(),
                pl.setFromMatrixColumn(this._camera.matrixWorldInverse, 0),
                ml.setFromMatrixColumn(this._camera.matrixWorldInverse, 1),
                Vf.setFromMatrixColumn(this._camera.matrixWorldInverse, 2);
            const i = _n.set(e, t, n),
                s = i.distanceTo(this._camera.position),
                o = i.sub(this._camera.position);
            pl.multiplyScalar(o.x),
                ml.multiplyScalar(o.y),
                Vf.multiplyScalar(o.z),
                _n.copy(pl).add(ml).add(Vf),
                (_n.z = _n.z + s),
                this.dollyTo(s, !1),
                this.setFocalOffset(-_n.x, _n.y, -_n.z, !1),
                this.moveTo(e, t, n, !1);
        }
        setBoundary(e) {
            if (!e) {
                this._boundary.min.set(-1 / 0, -1 / 0, -1 / 0),
                    this._boundary.max.set(1 / 0, 1 / 0, 1 / 0),
                    (this._needsUpdate = !0);
                return;
            }
            this._boundary.copy(e),
                this._boundary.clampPoint(this._targetEnd, this._targetEnd),
                (this._needsUpdate = !0);
        }
        setViewport(e, t, n, i) {
            if (e === null) {
                this._viewport = null;
                return;
            }
            (this._viewport = this._viewport || new an.Vector4()),
                typeof e == 'number'
                    ? this._viewport.set(e, t, n, i)
                    : this._viewport.copy(e);
        }
        getDistanceToFitBox(e, t, n, i = !1) {
            if (Cw(this._camera, 'getDistanceToFitBox'))
                return this._spherical.radius;
            const s = e / t,
                o = this._camera.getEffectiveFOV() * dg,
                a = this._camera.aspect;
            return (
                (((i ? s > a : s < a) ? t : e / a) * 0.5) / Math.tan(o * 0.5) +
                n * 0.5
            );
        }
        getDistanceToFitSphere(e) {
            if (Cw(this._camera, 'getDistanceToFitSphere'))
                return this._spherical.radius;
            const t = this._camera.getEffectiveFOV() * dg,
                n = Math.atan(Math.tan(t * 0.5) * this._camera.aspect) * 2,
                i = 1 < this._camera.aspect ? t : n;
            return e / Math.sin(i * 0.5);
        }
        getTarget(e, t = !0) {
            return (e && e.isVector3 ? e : new an.Vector3()).copy(
                t ? this._targetEnd : this._target
            );
        }
        getPosition(e, t = !0) {
            return (e && e.isVector3 ? e : new an.Vector3())
                .setFromSpherical(t ? this._sphericalEnd : this._spherical)
                .applyQuaternion(this._yAxisUpSpaceInverse)
                .add(t ? this._targetEnd : this._target);
        }
        getSpherical(e, t = !0) {
            return (e || new an.Spherical()).copy(
                t ? this._sphericalEnd : this._spherical
            );
        }
        getFocalOffset(e, t = !0) {
            return (e && e.isVector3 ? e : new an.Vector3()).copy(
                t ? this._focalOffsetEnd : this._focalOffset
            );
        }
        normalizeRotations() {
            (this._sphericalEnd.theta = this._sphericalEnd.theta % Hd),
                this._sphericalEnd.theta < 0 &&
                    (this._sphericalEnd.theta += Hd),
                (this._spherical.theta +=
                    Hd *
                    Math.round(
                        (this._sphericalEnd.theta - this._spherical.theta) / Hd
                    ));
        }
        stop() {
            this._focalOffset.copy(this._focalOffsetEnd),
                this._target.copy(this._targetEnd),
                this._spherical.copy(this._sphericalEnd),
                (this._zoom = this._zoomEnd);
        }
        reset(e = !1) {
            if (
                !Wn(this._camera.up.x, this._cameraUp0.x) ||
                !Wn(this._camera.up.y, this._cameraUp0.y) ||
                !Wn(this._camera.up.z, this._cameraUp0.z)
            ) {
                this._camera.up.copy(this._cameraUp0);
                const n = this.getPosition(_n);
                this.updateCameraUp(), this.setPosition(n.x, n.y, n.z);
            }
            const t = [
                this.setLookAt(
                    this._position0.x,
                    this._position0.y,
                    this._position0.z,
                    this._target0.x,
                    this._target0.y,
                    this._target0.z,
                    e
                ),
                this.setFocalOffset(
                    this._focalOffset0.x,
                    this._focalOffset0.y,
                    this._focalOffset0.z,
                    e
                ),
                this.zoomTo(this._zoom0, e),
            ];
            return Promise.all(t);
        }
        saveState() {
            this._cameraUp0.copy(this._camera.up),
                this.getTarget(this._target0),
                this.getPosition(this._position0),
                (this._zoom0 = this._zoom),
                this._focalOffset0.copy(this._focalOffset);
        }
        updateCameraUp() {
            this._yAxisUpSpace.setFromUnitVectors(this._camera.up, r_),
                this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert();
        }
        applyCameraUp() {
            const e = _n
                    .subVectors(this._target, this._camera.position)
                    .normalize(),
                t = Nn.crossVectors(e, this._camera.up);
            this._camera.up.crossVectors(t, e).normalize(),
                this._camera.updateMatrixWorld();
            const n = this.getPosition(_n);
            this.updateCameraUp(), this.setPosition(n.x, n.y, n.z);
        }
        update(e) {
            const t = this._sphericalEnd.theta - this._spherical.theta,
                n = this._sphericalEnd.phi - this._spherical.phi,
                i = this._sphericalEnd.radius - this._spherical.radius,
                s = VP.subVectors(this._targetEnd, this._target),
                o = HP.subVectors(this._focalOffsetEnd, this._focalOffset),
                a = this._zoomEnd - this._zoom;
            if (ui(t))
                (this._thetaVelocity.value = 0),
                    (this._spherical.theta = this._sphericalEnd.theta);
            else {
                const d = this._isUserControllingRotate
                    ? this.draggingSmoothTime
                    : this.smoothTime;
                (this._spherical.theta = n_(
                    this._spherical.theta,
                    this._sphericalEnd.theta,
                    this._thetaVelocity,
                    d,
                    1 / 0,
                    e
                )),
                    (this._needsUpdate = !0);
            }
            if (ui(n))
                (this._phiVelocity.value = 0),
                    (this._spherical.phi = this._sphericalEnd.phi);
            else {
                const d = this._isUserControllingRotate
                    ? this.draggingSmoothTime
                    : this.smoothTime;
                (this._spherical.phi = n_(
                    this._spherical.phi,
                    this._sphericalEnd.phi,
                    this._phiVelocity,
                    d,
                    1 / 0,
                    e
                )),
                    (this._needsUpdate = !0);
            }
            if (ui(i))
                (this._radiusVelocity.value = 0),
                    (this._spherical.radius = this._sphericalEnd.radius);
            else {
                const d = this._isUserControllingDolly
                    ? this.draggingSmoothTime
                    : this.smoothTime;
                (this._spherical.radius = n_(
                    this._spherical.radius,
                    this._sphericalEnd.radius,
                    this._radiusVelocity,
                    d,
                    this.maxSpeed,
                    e
                )),
                    (this._needsUpdate = !0);
            }
            if (ui(s.x) && ui(s.y) && ui(s.z))
                this._targetVelocity.set(0, 0, 0),
                    this._target.copy(this._targetEnd);
            else {
                const d = this._isUserControllingTruck
                    ? this.draggingSmoothTime
                    : this.smoothTime;
                BP(
                    this._target,
                    this._targetEnd,
                    this._targetVelocity,
                    d,
                    this.maxSpeed,
                    e,
                    this._target
                ),
                    (this._needsUpdate = !0);
            }
            if (ui(o.x) && ui(o.y) && ui(o.z))
                this._focalOffsetVelocity.set(0, 0, 0),
                    this._focalOffset.copy(this._focalOffsetEnd);
            else {
                const d = this._isUserControllingOffset
                    ? this.draggingSmoothTime
                    : this.smoothTime;
                BP(
                    this._focalOffset,
                    this._focalOffsetEnd,
                    this._focalOffsetVelocity,
                    d,
                    this.maxSpeed,
                    e,
                    this._focalOffset
                ),
                    (this._needsUpdate = !0);
            }
            if (ui(a))
                (this._zoomVelocity.value = 0), (this._zoom = this._zoomEnd);
            else {
                const d = this._isUserControllingZoom
                    ? this.draggingSmoothTime
                    : this.smoothTime;
                this._zoom = n_(
                    this._zoom,
                    this._zoomEnd,
                    this._zoomVelocity,
                    d,
                    1 / 0,
                    e
                );
            }
            if (this.dollyToCursor) {
                if (zf(this._camera) && this._changedDolly !== 0) {
                    const d = this._spherical.radius - this._lastDistance,
                        m = this._camera,
                        v = this._getCameraDirection(gg),
                        _ = _n.copy(v).cross(m.up).normalize();
                    _.lengthSq() === 0 && (_.x = 1);
                    const S = Nn.crossVectors(_, v),
                        w =
                            this._sphericalEnd.radius *
                            Math.tan(m.getEffectiveFOV() * dg * 0.5),
                        A =
                            (this._sphericalEnd.radius -
                                d -
                                this._sphericalEnd.radius) /
                            this._sphericalEnd.radius,
                        T = Gd.copy(this._targetEnd)
                            .add(
                                _.multiplyScalar(
                                    this._dollyControlCoord.x * w * m.aspect
                                )
                            )
                            .add(
                                S.multiplyScalar(this._dollyControlCoord.y * w)
                            ),
                        b = _n.copy(this._targetEnd).lerp(T, A),
                        P =
                            this._lastDollyDirection === Vd.IN &&
                            this._spherical.radius <= this.minDistance,
                        L =
                            this._lastDollyDirection === Vd.OUT &&
                            this.maxDistance <= this._spherical.radius;
                    if (this.infinityDolly && (P || L)) {
                        (this._sphericalEnd.radius -= d),
                            (this._spherical.radius -= d);
                        const O = Nn.copy(v).multiplyScalar(-d);
                        b.add(O);
                    }
                    this._boundary.clampPoint(b, b);
                    const D = Nn.subVectors(b, this._targetEnd);
                    this._targetEnd.copy(b),
                        this._target.add(D),
                        (this._changedDolly -= d),
                        ui(this._changedDolly) && (this._changedDolly = 0);
                } else if (mc(this._camera) && this._changedZoom !== 0) {
                    const d = this._zoom - this._lastZoom,
                        m = this._camera,
                        v = _n
                            .set(
                                this._dollyControlCoord.x,
                                this._dollyControlCoord.y,
                                (m.near + m.far) / (m.near - m.far)
                            )
                            .unproject(m),
                        _ = Nn.set(0, 0, -1).applyQuaternion(m.quaternion),
                        S = Gd.copy(v).add(_.multiplyScalar(-v.dot(m.up))),
                        x = -(this._zoom - d - this._zoom) / this._zoom,
                        A = this._getCameraDirection(gg),
                        T = this._targetEnd.dot(A),
                        b = _n.copy(this._targetEnd).lerp(S, x),
                        P = b.dot(A),
                        L = A.multiplyScalar(P - T);
                    b.sub(L), this._boundary.clampPoint(b, b);
                    const D = Nn.subVectors(b, this._targetEnd);
                    this._targetEnd.copy(b),
                        this._target.add(D),
                        (this._changedZoom -= d),
                        ui(this._changedZoom) && (this._changedZoom = 0);
                }
            }
            this._camera.zoom !== this._zoom &&
                ((this._camera.zoom = this._zoom),
                this._camera.updateProjectionMatrix(),
                this._updateNearPlaneCorners(),
                (this._needsUpdate = !0)),
                (this._dragNeedsUpdate = !0);
            const l = this._collisionTest();
            (this._spherical.radius = Math.min(this._spherical.radius, l)),
                this._spherical.makeSafe(),
                this._camera.position
                    .setFromSpherical(this._spherical)
                    .applyQuaternion(this._yAxisUpSpaceInverse)
                    .add(this._target),
                this._camera.lookAt(this._target),
                (!ui(this._focalOffset.x) ||
                    !ui(this._focalOffset.y) ||
                    !ui(this._focalOffset.z)) &&
                    (pl.setFromMatrixColumn(this._camera.matrix, 0),
                    ml.setFromMatrixColumn(this._camera.matrix, 1),
                    Vf.setFromMatrixColumn(this._camera.matrix, 2),
                    pl.multiplyScalar(this._focalOffset.x),
                    ml.multiplyScalar(-this._focalOffset.y),
                    Vf.multiplyScalar(this._focalOffset.z),
                    _n.copy(pl).add(ml).add(Vf),
                    this._camera.position.add(_n),
                    this._camera.updateMatrixWorld()),
                this._boundaryEnclosesCamera &&
                    this._encloseToBoundary(
                        this._camera.position.copy(this._target),
                        _n
                            .setFromSpherical(this._spherical)
                            .applyQuaternion(this._yAxisUpSpaceInverse),
                        1
                    );
            const f = this._needsUpdate;
            return (
                f && !this._updatedLastTime
                    ? ((this._hasRested = !1),
                      this.dispatchEvent({ type: 'wake' }),
                      this.dispatchEvent({ type: 'update' }))
                    : f
                      ? (this.dispatchEvent({ type: 'update' }),
                        ui(t, this.restThreshold) &&
                            ui(n, this.restThreshold) &&
                            ui(i, this.restThreshold) &&
                            ui(s.x, this.restThreshold) &&
                            ui(s.y, this.restThreshold) &&
                            ui(s.z, this.restThreshold) &&
                            ui(o.x, this.restThreshold) &&
                            ui(o.y, this.restThreshold) &&
                            ui(o.z, this.restThreshold) &&
                            ui(a, this.restThreshold) &&
                            !this._hasRested &&
                            ((this._hasRested = !0),
                            this.dispatchEvent({ type: 'rest' })))
                      : !f &&
                        this._updatedLastTime &&
                        this.dispatchEvent({ type: 'sleep' }),
                (this._lastDistance = this._spherical.radius),
                (this._lastZoom = this._zoom),
                (this._updatedLastTime = f),
                (this._needsUpdate = !1),
                f
            );
        }
        toJSON() {
            return JSON.stringify({
                enabled: this._enabled,
                minDistance: this.minDistance,
                maxDistance: pg(this.maxDistance),
                minZoom: this.minZoom,
                maxZoom: pg(this.maxZoom),
                minPolarAngle: this.minPolarAngle,
                maxPolarAngle: pg(this.maxPolarAngle),
                minAzimuthAngle: pg(this.minAzimuthAngle),
                maxAzimuthAngle: pg(this.maxAzimuthAngle),
                smoothTime: this.smoothTime,
                draggingSmoothTime: this.draggingSmoothTime,
                dollySpeed: this.dollySpeed,
                truckSpeed: this.truckSpeed,
                dollyToCursor: this.dollyToCursor,
                target: this._targetEnd.toArray(),
                position: _n
                    .setFromSpherical(this._sphericalEnd)
                    .add(this._targetEnd)
                    .toArray(),
                zoom: this._zoomEnd,
                focalOffset: this._focalOffsetEnd.toArray(),
                target0: this._target0.toArray(),
                position0: this._position0.toArray(),
                zoom0: this._zoom0,
                focalOffset0: this._focalOffset0.toArray(),
            });
        }
        fromJSON(e, t = !1) {
            const n = JSON.parse(e);
            (this.enabled = n.enabled),
                (this.minDistance = n.minDistance),
                (this.maxDistance = mg(n.maxDistance)),
                (this.minZoom = n.minZoom),
                (this.maxZoom = mg(n.maxZoom)),
                (this.minPolarAngle = n.minPolarAngle),
                (this.maxPolarAngle = mg(n.maxPolarAngle)),
                (this.minAzimuthAngle = mg(n.minAzimuthAngle)),
                (this.maxAzimuthAngle = mg(n.maxAzimuthAngle)),
                (this.smoothTime = n.smoothTime),
                (this.draggingSmoothTime = n.draggingSmoothTime),
                (this.dollySpeed = n.dollySpeed),
                (this.truckSpeed = n.truckSpeed),
                (this.dollyToCursor = n.dollyToCursor),
                this._target0.fromArray(n.target0),
                this._position0.fromArray(n.position0),
                (this._zoom0 = n.zoom0),
                this._focalOffset0.fromArray(n.focalOffset0),
                this.moveTo(n.target[0], n.target[1], n.target[2], t),
                Ko.setFromVector3(
                    _n
                        .fromArray(n.position)
                        .sub(this._targetEnd)
                        .applyQuaternion(this._yAxisUpSpace)
                ),
                this.rotateTo(Ko.theta, Ko.phi, t),
                this.dollyTo(Ko.radius, t),
                this.zoomTo(n.zoom, t),
                this.setFocalOffset(
                    n.focalOffset[0],
                    n.focalOffset[1],
                    n.focalOffset[2],
                    t
                ),
                (this._needsUpdate = !0);
        }
        connect(e) {
            if (this._domElement) {
                console.warn('camera-controls is already connected.');
                return;
            }
            e.setAttribute('data-camera-controls-version', xZ),
                this._addAllEventListeners(e),
                this._getClientRect(this._elementRect);
        }
        disconnect() {
            this.cancel(),
                this._removeAllEventListeners(),
                this._domElement &&
                    (this._domElement.removeAttribute(
                        'data-camera-controls-version'
                    ),
                    (this._domElement = void 0));
        }
        dispose() {
            this.removeAllEventListeners(), this.disconnect();
        }
        _getTargetDirection(e) {
            return e
                .setFromSpherical(this._spherical)
                .divideScalar(this._spherical.radius)
                .applyQuaternion(this._yAxisUpSpaceInverse);
        }
        _getCameraDirection(e) {
            return this._getTargetDirection(e).negate();
        }
        _findPointerById(e) {
            return this._activePointers.find((t) => t.pointerId === e);
        }
        _findPointerByMouseButton(e) {
            return this._activePointers.find((t) => t.mouseButton === e);
        }
        _disposePointer(e) {
            this._activePointers.splice(this._activePointers.indexOf(e), 1);
        }
        _encloseToBoundary(e, t, n) {
            const i = t.lengthSq();
            if (i === 0) return e;
            const s = Nn.copy(t).add(e),
                a = this._boundary.clampPoint(s, Gd).sub(s),
                l = a.lengthSq();
            if (l === 0) return e.add(t);
            if (l === i) return e;
            if (n === 0) return e.add(t).add(a);
            {
                const u = 1 + (n * l) / t.dot(a);
                return e
                    .add(Nn.copy(t).multiplyScalar(u))
                    .add(a.multiplyScalar(1 - n));
            }
        }
        _updateNearPlaneCorners() {
            if (zf(this._camera)) {
                const e = this._camera,
                    t = e.near,
                    n = e.getEffectiveFOV() * dg,
                    i = Math.tan(n * 0.5) * t,
                    s = i * e.aspect;
                this._nearPlaneCorners[0].set(-s, -i, 0),
                    this._nearPlaneCorners[1].set(s, -i, 0),
                    this._nearPlaneCorners[2].set(s, i, 0),
                    this._nearPlaneCorners[3].set(-s, i, 0);
            } else if (mc(this._camera)) {
                const e = this._camera,
                    t = 1 / e.zoom,
                    n = e.left * t,
                    i = e.right * t,
                    s = e.top * t,
                    o = e.bottom * t;
                this._nearPlaneCorners[0].set(n, s, 0),
                    this._nearPlaneCorners[1].set(i, s, 0),
                    this._nearPlaneCorners[2].set(i, o, 0),
                    this._nearPlaneCorners[3].set(n, o, 0);
            }
        }
        _collisionTest() {
            let e = 1 / 0;
            if (
                !(this.colliderMeshes.length >= 1) ||
                Cw(this._camera, '_collisionTest')
            )
                return e;
            const n = this._getTargetDirection(gg);
            Dw.lookAt(zP, n, this._camera.up);
            for (let i = 0; i < 4; i++) {
                const s = Nn.copy(this._nearPlaneCorners[i]);
                s.applyMatrix4(Dw);
                const o = Gd.addVectors(this._target, s);
                s_.set(o, n), (s_.far = this._spherical.radius + 1);
                const a = s_.intersectObjects(this.colliderMeshes);
                a.length !== 0 && a[0].distance < e && (e = a[0].distance);
            }
            return e;
        }
        _getClientRect(e) {
            if (!this._domElement) return;
            const t = this._domElement.getBoundingClientRect();
            return (
                (e.x = t.left),
                (e.y = t.top),
                this._viewport
                    ? ((e.x += this._viewport.x),
                      (e.y += t.height - this._viewport.w - this._viewport.y),
                      (e.width = this._viewport.z),
                      (e.height = this._viewport.w))
                    : ((e.width = t.width), (e.height = t.height)),
                e
            );
        }
        _createOnRestPromise(e) {
            return e
                ? Promise.resolve()
                : ((this._hasRested = !1),
                  this.dispatchEvent({ type: 'transitionstart' }),
                  new Promise((t) => {
                      const n = () => {
                          this.removeEventListener('rest', n), t();
                      };
                      this.addEventListener('rest', n);
                  }));
        }
        _addAllEventListeners(e) {}
        _removeAllEventListeners() {}
        get dampingFactor() {
            return (
                console.warn(
                    '.dampingFactor has been deprecated. use smoothTime (in seconds) instead.'
                ),
                0
            );
        }
        set dampingFactor(e) {
            console.warn(
                '.dampingFactor has been deprecated. use smoothTime (in seconds) instead.'
            );
        }
        get draggingDampingFactor() {
            return (
                console.warn(
                    '.draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.'
                ),
                0
            );
        }
        set draggingDampingFactor(e) {
            console.warn(
                '.draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.'
            );
        }
        static createBoundingSphere(e, t = new an.Sphere()) {
            const n = t,
                i = n.center;
            Wd.makeEmpty(),
                e.traverseVisible((o) => {
                    o.isMesh && Wd.expandByObject(o);
                }),
                Wd.getCenter(i);
            let s = 0;
            return (
                e.traverseVisible((o) => {
                    if (!o.isMesh) return;
                    const a = o;
                    if (!a.geometry) return;
                    const l = a.geometry.clone();
                    l.applyMatrix4(a.matrixWorld);
                    const f = l.attributes.position;
                    for (let d = 0, m = f.count; d < m; d++)
                        _n.fromBufferAttribute(f, d),
                            (s = Math.max(s, i.distanceToSquared(_n)));
                }),
                (n.radius = Math.sqrt(s)),
                n
            );
        }
    };
const wZ = Y.forwardRef((r, e) => {
    Y.useMemo(() => {
        const P = {
            Box3: Ar,
            MathUtils: { clamp: AT.clamp },
            Matrix4: qt,
            Quaternion: mr,
            Raycaster: d1,
            Sphere: Fr,
            Spherical: tA,
            Vector2: tt,
            Vector3: re,
            Vector4: En,
        };
        Ow.install({ THREE: P }), iv({ CameraControlsImpl: Ow });
    }, []);
    const {
            camera: t,
            domElement: n,
            makeDefault: i,
            onStart: s,
            onEnd: o,
            onChange: a,
            regress: l,
            ...u
        } = r,
        f = zi((P) => P.camera),
        d = zi((P) => P.gl),
        m = zi((P) => P.invalidate),
        v = zi((P) => P.events),
        _ = zi((P) => P.setEvents),
        S = zi((P) => P.set),
        w = zi((P) => P.get),
        x = zi((P) => P.performance),
        A = t || f,
        T = n || v.connected || d.domElement,
        b = Y.useMemo(() => new Ow(A), [A]);
    return (
        Yp((P, L) => {
            b.enabled && b.update(L);
        }, -1),
        Y.useEffect(() => (b.connect(T), () => void b.disconnect()), [T, b]),
        Y.useEffect(() => {
            const P = (O) => {
                    m(), l && x.regress(), a && a(O);
                },
                L = (O) => {
                    s && s(O);
                },
                D = (O) => {
                    o && o(O);
                };
            return (
                b.addEventListener('update', P),
                b.addEventListener('controlstart', L),
                b.addEventListener('controlend', D),
                b.addEventListener('control', P),
                b.addEventListener('transitionstart', P),
                b.addEventListener('wake', P),
                () => {
                    b.removeEventListener('update', P),
                        b.removeEventListener('controlstart', L),
                        b.removeEventListener('controlend', D),
                        b.removeEventListener('control', P),
                        b.removeEventListener('transitionstart', P),
                        b.removeEventListener('wake', P);
                }
            );
        }, [b, s, o, m, _, l, a]),
        Y.useEffect(() => {
            if (i) {
                const P = w().controls;
                return S({ controls: b }), () => S({ controls: P });
            }
        }, [i, b]),
        Y.createElement('primitive', Oc({ ref: e, object: b }, u))
    );
});
function MZ(r) {
    const e = Y.useRef(null),
        t = Y.useRef(!1),
        n = Y.useRef(!1),
        i = Y.useRef(r);
    return (
        Y.useLayoutEffect(() => void (i.current = r), [r]),
        Y.useEffect(() => {
            const s = e.current;
            if (s) {
                const o = tq(() => ((t.current = !1), !0)),
                    a = s.onBeforeRender;
                s.onBeforeRender = () => (t.current = !0);
                const l = nq(
                    () => (
                        t.current !== n.current &&
                            (i.current == null ||
                                i.current((n.current = t.current))),
                        !0
                    )
                );
                return () => {
                    (s.onBeforeRender = a), o(), l();
                };
            }
        }, []),
        e
    );
}
const EZ = 3e3,
    TZ = 3001,
    gl = 1e-5;
function AZ(r, e, t) {
    const n = new Ac(),
        i = t - gl;
    return (
        n.absarc(gl, gl, gl, -Math.PI / 2, -Math.PI, !0),
        n.absarc(gl, e - i * 2, gl, Math.PI, Math.PI / 2, !0),
        n.absarc(r - i * 2, e - i * 2, gl, Math.PI / 2, 0, !0),
        n.absarc(r - i * 2, gl, gl, 0, -Math.PI / 2, !0),
        n
    );
}
const bZ = Y.forwardRef(function (
        {
            args: [e = 1, t = 1, n = 1] = [],
            radius: i = 0.05,
            steps: s = 1,
            smoothness: o = 4,
            bevelSegments: a = 4,
            creaseAngle: l = 0.4,
            children: u,
            ...f
        },
        d
    ) {
        const m = Y.useMemo(() => AZ(e, t, i), [e, t, i]),
            v = Y.useMemo(
                () => ({
                    depth: n - i * 2,
                    bevelEnabled: !0,
                    bevelSegments: a * 2,
                    steps: s,
                    bevelSize: i - gl,
                    bevelThickness: i,
                    curveSegments: o,
                }),
                [n, i, o]
            ),
            _ = Y.useRef(null);
        return (
            Y.useLayoutEffect(() => {
                _.current && (_.current.center(), iK(_.current, l));
            }, [m, v]),
            Y.createElement(
                'mesh',
                Oc({ ref: d }, f),
                Y.createElement('extrudeGeometry', { ref: _, args: [m, v] }),
                u
            )
        );
    }),
    gk = (r, e, t) => {
        let n;
        switch (r) {
            case so:
                n = new Uint8ClampedArray(e * t * 4);
                break;
            case Er:
                n = new Uint16Array(e * t * 4);
                break;
            case Ll:
                n = new Uint32Array(e * t * 4);
                break;
            case Dx:
                n = new Int8Array(e * t * 4);
                break;
            case Ox:
                n = new Int16Array(e * t * 4);
                break;
            case W0:
                n = new Int32Array(e * t * 4);
                break;
            case ri:
                n = new Float32Array(e * t * 4);
                break;
            default:
                throw new Error('Unsupported data type');
        }
        return n;
    };
let o_;
const CZ = (r, e, t, n) => {
    if (o_ !== void 0) return o_;
    const i = new Ji(1, 1, n);
    e.setRenderTarget(i);
    const s = new Jn(new ra(), new ja({ color: 16777215 }));
    e.render(s, t), e.setRenderTarget(null);
    const o = gk(r, i.width, i.height);
    return (
        e.readRenderTargetPixels(i, 0, 0, i.width, i.height, o),
        i.dispose(),
        s.geometry.dispose(),
        s.material.dispose(),
        (o_ = o[0] !== 0),
        o_
    );
};
class lA {
    constructor(e) {
        var t, n, i, s, o, a, l, u, f, d, m, v, _, S, w, x;
        (this._rendererIsDisposable = !1),
            (this._supportsReadPixels = !0),
            (this.render = () => {
                this._renderer.setRenderTarget(this._renderTarget);
                try {
                    this._renderer.render(this._scene, this._camera);
                } catch (T) {
                    throw (this._renderer.setRenderTarget(null), T);
                }
                this._renderer.setRenderTarget(null);
            }),
            (this._width = e.width),
            (this._height = e.height),
            (this._type = e.type),
            (this._colorSpace = e.colorSpace);
        const A = {
            format: er,
            depthBuffer: !1,
            stencilBuffer: !1,
            type: this._type,
            colorSpace: this._colorSpace,
            anisotropy:
                ((t = e.renderTargetOptions) === null || t === void 0
                    ? void 0
                    : t.anisotropy) !== void 0
                    ? (n = e.renderTargetOptions) === null || n === void 0
                        ? void 0
                        : n.anisotropy
                    : 1,
            generateMipmaps:
                ((i = e.renderTargetOptions) === null || i === void 0
                    ? void 0
                    : i.generateMipmaps) !== void 0
                    ? (s = e.renderTargetOptions) === null || s === void 0
                        ? void 0
                        : s.generateMipmaps
                    : !1,
            magFilter:
                ((o = e.renderTargetOptions) === null || o === void 0
                    ? void 0
                    : o.magFilter) !== void 0
                    ? (a = e.renderTargetOptions) === null || a === void 0
                        ? void 0
                        : a.magFilter
                    : Cn,
            minFilter:
                ((l = e.renderTargetOptions) === null || l === void 0
                    ? void 0
                    : l.minFilter) !== void 0
                    ? (u = e.renderTargetOptions) === null || u === void 0
                        ? void 0
                        : u.minFilter
                    : Cn,
            samples:
                ((f = e.renderTargetOptions) === null || f === void 0
                    ? void 0
                    : f.samples) !== void 0
                    ? (d = e.renderTargetOptions) === null || d === void 0
                        ? void 0
                        : d.samples
                    : void 0,
            wrapS:
                ((m = e.renderTargetOptions) === null || m === void 0
                    ? void 0
                    : m.wrapS) !== void 0
                    ? (v = e.renderTargetOptions) === null || v === void 0
                        ? void 0
                        : v.wrapS
                    : pr,
            wrapT:
                ((_ = e.renderTargetOptions) === null || _ === void 0
                    ? void 0
                    : _.wrapT) !== void 0
                    ? (S = e.renderTargetOptions) === null || S === void 0
                        ? void 0
                        : S.wrapT
                    : pr,
        };
        if (
            ((this._material = e.material),
            e.renderer
                ? (this._renderer = e.renderer)
                : ((this._renderer = lA.instantiateRenderer()),
                  (this._rendererIsDisposable = !0)),
            (this._scene = new jp()),
            (this._camera = new zc()),
            this._camera.position.set(0, 0, 10),
            (this._camera.left = -0.5),
            (this._camera.right = 0.5),
            (this._camera.top = 0.5),
            (this._camera.bottom = -0.5),
            this._camera.updateProjectionMatrix(),
            !CZ(this._type, this._renderer, this._camera, A))
        ) {
            let T;
            switch (this._type) {
                case Er:
                    T = this._renderer.extensions.has('EXT_color_buffer_float')
                        ? ri
                        : void 0;
                    break;
            }
            T !== void 0
                ? (console.warn(
                      `This browser does not support reading pixels from ${this._type} RenderTargets, switching to ${ri}`
                  ),
                  (this._type = T))
                : ((this._supportsReadPixels = !1),
                  console.warn(
                      'This browser dos not support toArray or toDataTexture, calls to those methods will result in an error thrown'
                  ));
        }
        (this._quad = new Jn(new ra(), this._material)),
            this._quad.geometry.computeBoundingBox(),
            this._scene.add(this._quad),
            (this._renderTarget = new Ji(this.width, this.height, A)),
            (this._renderTarget.texture.mapping =
                ((w = e.renderTargetOptions) === null || w === void 0
                    ? void 0
                    : w.mapping) !== void 0
                    ? (x = e.renderTargetOptions) === null || x === void 0
                        ? void 0
                        : x.mapping
                    : Lc);
    }
    static instantiateRenderer() {
        const e = new DT();
        return e.setSize(128, 128), e;
    }
    toArray() {
        if (!this._supportsReadPixels)
            throw new Error("Can't read pixels in this browser");
        const e = gk(this._type, this._width, this._height);
        return (
            this._renderer.readRenderTargetPixels(
                this._renderTarget,
                0,
                0,
                this._width,
                this._height,
                e
            ),
            e
        );
    }
    toDataTexture(e) {
        const t = new Va(
            this.toArray(),
            this.width,
            this.height,
            er,
            this._type,
            (e == null ? void 0 : e.mapping) || Lc,
            (e == null ? void 0 : e.wrapS) || pr,
            (e == null ? void 0 : e.wrapT) || pr,
            (e == null ? void 0 : e.magFilter) || Cn,
            (e == null ? void 0 : e.minFilter) || Cn,
            (e == null ? void 0 : e.anisotropy) || 1,
            na
        );
        return (
            (t.generateMipmaps =
                (e == null ? void 0 : e.generateMipmaps) !== void 0
                    ? e == null
                        ? void 0
                        : e.generateMipmaps
                    : !1),
            t
        );
    }
    disposeOnDemandRenderer() {
        this._renderer.setRenderTarget(null),
            this._rendererIsDisposable &&
                (this._renderer.dispose(), this._renderer.forceContextLoss());
    }
    dispose(e) {
        this.disposeOnDemandRenderer(),
            e && this.renderTarget.dispose(),
            this.material instanceof Qi &&
                Object.values(this.material.uniforms).forEach((t) => {
                    t.value instanceof Vn && t.value.dispose();
                }),
            Object.values(this.material).forEach((t) => {
                t instanceof Vn && t.dispose();
            }),
            this.material.dispose(),
            this._quad.geometry.dispose();
    }
    get width() {
        return this._width;
    }
    set width(e) {
        (this._width = e),
            this._renderTarget.setSize(this._width, this._height);
    }
    get height() {
        return this._height;
    }
    set height(e) {
        (this._height = e),
            this._renderTarget.setSize(this._width, this._height);
    }
    get renderer() {
        return this._renderer;
    }
    get renderTarget() {
        return this._renderTarget;
    }
    set renderTarget(e) {
        (this._renderTarget = e),
            (this._width = e.width),
            (this._height = e.height);
    }
    get material() {
        return this._material;
    }
    get type() {
        return this._type;
    }
    get colorSpace() {
        return this._colorSpace;
    }
}
const RZ = `
varying vec2 vUv;

void main() {
  vUv = uv;
  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}
`,
    PZ = `
// min half float value
#define HALF_FLOAT_MIN vec3( -65504, -65504, -65504 )
// max half float value
#define HALF_FLOAT_MAX vec3( 65504, 65504, 65504 )

uniform sampler2D sdr;
uniform sampler2D gainMap;
uniform vec3 gamma;
uniform vec3 offsetHdr;
uniform vec3 offsetSdr;
uniform vec3 gainMapMin;
uniform vec3 gainMapMax;
uniform float weightFactor;

varying vec2 vUv;

void main() {
  vec3 rgb = texture2D( sdr, vUv ).rgb;
  vec3 recovery = texture2D( gainMap, vUv ).rgb;
  vec3 logRecovery = pow( recovery, gamma );
  vec3 logBoost = gainMapMin * ( 1.0 - logRecovery ) + gainMapMax * logRecovery;
  vec3 hdrColor = (rgb + offsetSdr) * exp2( logBoost * weightFactor ) - offsetHdr;
  vec3 clampedHdrColor = max( HALF_FLOAT_MIN, min( HALF_FLOAT_MAX, hdrColor ));
  gl_FragColor = vec4( clampedHdrColor , 1.0 );
}
`;
class LZ extends Qi {
    constructor({
        gamma: e,
        offsetHdr: t,
        offsetSdr: n,
        gainMapMin: i,
        gainMapMax: s,
        maxDisplayBoost: o,
        hdrCapacityMin: a,
        hdrCapacityMax: l,
        sdr: u,
        gainMap: f,
    }) {
        super({
            name: 'GainMapDecoderMaterial',
            vertexShader: RZ,
            fragmentShader: PZ,
            uniforms: {
                sdr: { value: u },
                gainMap: { value: f },
                gamma: { value: new re(1 / e[0], 1 / e[1], 1 / e[2]) },
                offsetHdr: { value: new re().fromArray(t) },
                offsetSdr: { value: new re().fromArray(n) },
                gainMapMin: { value: new re().fromArray(i) },
                gainMapMax: { value: new re().fromArray(s) },
                weightFactor: { value: (Math.log2(o) - a) / (l - a) },
            },
            blending: Al,
            depthTest: !1,
            depthWrite: !1,
        }),
            (this._maxDisplayBoost = o),
            (this._hdrCapacityMin = a),
            (this._hdrCapacityMax = l),
            (this.needsUpdate = !0),
            (this.uniformsNeedUpdate = !0);
    }
    get sdr() {
        return this.uniforms.sdr.value;
    }
    set sdr(e) {
        this.uniforms.sdr.value = e;
    }
    get gainMap() {
        return this.uniforms.gainMap.value;
    }
    set gainMap(e) {
        this.uniforms.gainMap.value = e;
    }
    get offsetHdr() {
        return this.uniforms.offsetHdr.value.toArray();
    }
    set offsetHdr(e) {
        this.uniforms.offsetHdr.value.fromArray(e);
    }
    get offsetSdr() {
        return this.uniforms.offsetSdr.value.toArray();
    }
    set offsetSdr(e) {
        this.uniforms.offsetSdr.value.fromArray(e);
    }
    get gainMapMin() {
        return this.uniforms.gainMapMin.value.toArray();
    }
    set gainMapMin(e) {
        this.uniforms.gainMapMin.value.fromArray(e);
    }
    get gainMapMax() {
        return this.uniforms.gainMapMax.value.toArray();
    }
    set gainMapMax(e) {
        this.uniforms.gainMapMax.value.fromArray(e);
    }
    get gamma() {
        const e = this.uniforms.gamma.value;
        return [1 / e.x, 1 / e.y, 1 / e.z];
    }
    set gamma(e) {
        const t = this.uniforms.gamma.value;
        (t.x = 1 / e[0]), (t.y = 1 / e[1]), (t.z = 1 / e[2]);
    }
    get hdrCapacityMin() {
        return this._hdrCapacityMin;
    }
    set hdrCapacityMin(e) {
        (this._hdrCapacityMin = e), this.calculateWeight();
    }
    get hdrCapacityMax() {
        return this._hdrCapacityMax;
    }
    set hdrCapacityMax(e) {
        (this._hdrCapacityMax = e), this.calculateWeight();
    }
    get maxDisplayBoost() {
        return this._maxDisplayBoost;
    }
    set maxDisplayBoost(e) {
        (this._maxDisplayBoost = Math.max(1, Math.min(65504, e))),
            this.calculateWeight();
    }
    calculateWeight() {
        const e =
            (Math.log2(this._maxDisplayBoost) - this._hdrCapacityMin) /
            (this._hdrCapacityMax - this._hdrCapacityMin);
        this.uniforms.weightFactor.value = Math.max(0, Math.min(1, e));
    }
}
class vk extends Error {}
class yk extends Error {}
const yg = (r, e, t) => {
        const n = new RegExp(`${e}="([^"]*)"`, 'i').exec(r);
        if (n) return n[1];
        const i = new RegExp(`<${e}[^>]*>([\\s\\S]*?)</${e}>`, 'i').exec(r);
        if (i) {
            const s = i[1].match(/<rdf:li>([^<]*)<\/rdf:li>/g);
            return s && s.length === 3
                ? s.map((o) => o.replace(/<\/?rdf:li>/g, ''))
                : i[1].trim();
        }
        if (t !== void 0) return t;
        throw new Error(`Can't find ${e} in gainmap metadata`);
    },
    IZ = (r) => {
        let e;
        typeof TextDecoder < 'u'
            ? (e = new TextDecoder().decode(r))
            : (e = r.toString());
        let t = e.indexOf('<x:xmpmeta');
        for (; t !== -1; ) {
            const n = e.indexOf('x:xmpmeta>', t),
                i = e.slice(t, n + 10);
            try {
                const s = yg(i, 'hdrgm:GainMapMin', '0'),
                    o = yg(i, 'hdrgm:GainMapMax'),
                    a = yg(i, 'hdrgm:Gamma', '1'),
                    l = yg(i, 'hdrgm:OffsetSDR', '0.015625'),
                    u = yg(i, 'hdrgm:OffsetHDR', '0.015625'),
                    f = /hdrgm:HDRCapacityMin="([^"]*)"/.exec(i),
                    d = f ? f[1] : '0',
                    m = /hdrgm:HDRCapacityMax="([^"]*)"/.exec(i);
                if (!m) throw new Error('Incomplete gainmap metadata');
                const v = m[1];
                return {
                    gainMapMin: Array.isArray(s)
                        ? s.map((_) => parseFloat(_))
                        : [parseFloat(s), parseFloat(s), parseFloat(s)],
                    gainMapMax: Array.isArray(o)
                        ? o.map((_) => parseFloat(_))
                        : [parseFloat(o), parseFloat(o), parseFloat(o)],
                    gamma: Array.isArray(a)
                        ? a.map((_) => parseFloat(_))
                        : [parseFloat(a), parseFloat(a), parseFloat(a)],
                    offsetSdr: Array.isArray(l)
                        ? l.map((_) => parseFloat(_))
                        : [parseFloat(l), parseFloat(l), parseFloat(l)],
                    offsetHdr: Array.isArray(u)
                        ? u.map((_) => parseFloat(_))
                        : [parseFloat(u), parseFloat(u), parseFloat(u)],
                    hdrCapacityMin: parseFloat(d),
                    hdrCapacityMax: parseFloat(v),
                };
            } catch {}
            t = e.indexOf('<x:xmpmeta', n);
        }
    };
class DZ {
    constructor(e) {
        this.options = {
            debug: e && e.debug !== void 0 ? e.debug : !1,
            extractFII: e && e.extractFII !== void 0 ? e.extractFII : !0,
            extractNonFII:
                e && e.extractNonFII !== void 0 ? e.extractNonFII : !0,
        };
    }
    extract(e) {
        return new Promise((t, n) => {
            const i = this.options.debug,
                s = new DataView(e.buffer);
            if (s.getUint16(0) !== 65496) {
                n(new Error('Not a valid jpeg'));
                return;
            }
            const o = s.byteLength;
            let a = 2,
                l = 0,
                u;
            for (; a < o; ) {
                if (++l > 250) {
                    n(new Error(`Found no marker after ${l} loops 😵`));
                    return;
                }
                if (s.getUint8(a) !== 255) {
                    n(
                        new Error(
                            `Not a valid marker at offset 0x${a.toString(16)}, found: 0x${s.getUint8(a).toString(16)}`
                        )
                    );
                    return;
                }
                if (
                    ((u = s.getUint8(a + 1)),
                    i && console.log(`Marker: ${u.toString(16)}`),
                    u === 226)
                ) {
                    i && console.log('Found APP2 marker (0xffe2)');
                    const f = a + 4;
                    if (s.getUint32(f) === 1297106432) {
                        const d = f + 4;
                        let m;
                        if (s.getUint16(d) === 18761) m = !1;
                        else if (s.getUint16(d) === 19789) m = !0;
                        else {
                            n(
                                new Error(
                                    'No valid endianness marker found in TIFF header'
                                )
                            );
                            return;
                        }
                        if (s.getUint16(d + 2, !m) !== 42) {
                            n(
                                new Error(
                                    'Not valid TIFF data! (no 0x002A marker)'
                                )
                            );
                            return;
                        }
                        const v = s.getUint32(d + 4, !m);
                        if (v < 8) {
                            n(
                                new Error(
                                    'Not valid TIFF data! (First offset less than 8)'
                                )
                            );
                            return;
                        }
                        const _ = d + v,
                            S = s.getUint16(_, !m),
                            w = _ + 2;
                        let x = 0;
                        for (let P = w; P < w + 12 * S; P += 12)
                            s.getUint16(P, !m) === 45057 &&
                                (x = s.getUint32(P + 8, !m));
                        const T = _ + 2 + S * 12 + 4,
                            b = [];
                        for (let P = T; P < T + x * 16; P += 16) {
                            const L = {
                                MPType: s.getUint32(P, !m),
                                size: s.getUint32(P + 4, !m),
                                dataOffset: s.getUint32(P + 8, !m),
                                dependantImages: s.getUint32(P + 12, !m),
                                start: -1,
                                end: -1,
                                isFII: !1,
                            };
                            L.dataOffset
                                ? ((L.start = d + L.dataOffset), (L.isFII = !1))
                                : ((L.start = 0), (L.isFII = !0)),
                                (L.end = L.start + L.size),
                                b.push(L);
                        }
                        if (this.options.extractNonFII && b.length) {
                            const P = new Blob([s]),
                                L = [];
                            for (const D of b) {
                                if (D.isFII && !this.options.extractFII)
                                    continue;
                                const O = P.slice(
                                    D.start,
                                    D.end + 1,
                                    'image/jpeg'
                                );
                                L.push(O);
                            }
                            t(L);
                        }
                    }
                }
                a += 2 + s.getUint16(a + 2);
            }
        });
    }
}
const OZ = async (r) => {
        const e = IZ(r);
        if (!e) throw new yk('Gain map XMP metadata not found');
        const n = await new DZ({ extractFII: !0, extractNonFII: !0 }).extract(
            r
        );
        if (n.length !== 2) throw new vk('Gain map recovery image not found');
        return {
            sdr: new Uint8Array(await n[0].arrayBuffer()),
            gainMap: new Uint8Array(await n[1].arrayBuffer()),
            metadata: e,
        };
    },
    jP = (r) =>
        new Promise((e, t) => {
            const n = document.createElement('img');
            (n.onload = () => {
                e(n);
            }),
                (n.onerror = (i) => {
                    t(i);
                }),
                (n.src = URL.createObjectURL(r));
        });
class _k extends Ns {
    constructor(e, t) {
        super(t),
            e && (this._renderer = e),
            (this._internalLoadingManager = new f1());
    }
    setRenderer(e) {
        return (this._renderer = e), this;
    }
    setRenderTargetOptions(e) {
        return (this._renderTargetOptions = e), this;
    }
    prepareQuadRenderer() {
        this._renderer ||
            console.warn(
                'WARNING: An existing WebGL Renderer was not passed to this Loader constructor or in setRenderer, the result of this Loader will need to be converted to a Data Texture with toDataTexture() before you can use it in your renderer.'
            );
        const e = new LZ({
            gainMapMax: [1, 1, 1],
            gainMapMin: [0, 0, 0],
            gamma: [1, 1, 1],
            offsetHdr: [1, 1, 1],
            offsetSdr: [1, 1, 1],
            hdrCapacityMax: 1,
            hdrCapacityMin: 0,
            maxDisplayBoost: 1,
            gainMap: new Vn(),
            sdr: new Vn(),
        });
        return new lA({
            width: 16,
            height: 16,
            type: Er,
            colorSpace: na,
            material: e,
            renderer: this._renderer,
            renderTargetOptions: this._renderTargetOptions,
        });
    }
    async render(e, t, n, i) {
        const s = i ? new Blob([i], { type: 'image/jpeg' }) : void 0,
            o = new Blob([n], { type: 'image/jpeg' });
        let a,
            l,
            u = !1;
        if (typeof createImageBitmap > 'u') {
            const m = await Promise.all([
                s ? jP(s) : Promise.resolve(void 0),
                jP(o),
            ]);
            (l = m[0]), (a = m[1]), (u = !0);
        } else {
            const m = await Promise.all([
                s
                    ? createImageBitmap(s, { imageOrientation: 'flipY' })
                    : Promise.resolve(void 0),
                createImageBitmap(o, { imageOrientation: 'flipY' }),
            ]);
            (l = m[0]), (a = m[1]);
        }
        const f = new Vn(
            l || new ImageData(2, 2),
            Lc,
            pr,
            pr,
            Cn,
            bM,
            er,
            so,
            1,
            na
        );
        (f.flipY = u), (f.needsUpdate = !0);
        const d = new Vn(a, Lc, pr, pr, Cn, bM, er, so, 1, Mo);
        (d.flipY = u),
            (d.needsUpdate = !0),
            (e.width = a.width),
            (e.height = a.height),
            (e.material.gainMap = f),
            (e.material.sdr = d),
            (e.material.gainMapMin = t.gainMapMin),
            (e.material.gainMapMax = t.gainMapMax),
            (e.material.offsetHdr = t.offsetHdr),
            (e.material.offsetSdr = t.offsetSdr),
            (e.material.gamma = t.gamma),
            (e.material.hdrCapacityMin = t.hdrCapacityMin),
            (e.material.hdrCapacityMax = t.hdrCapacityMax),
            (e.material.maxDisplayBoost = Math.pow(2, t.hdrCapacityMax)),
            (e.material.needsUpdate = !0),
            e.render();
    }
}
class UZ extends _k {
    load([e, t, n], i, s, o) {
        const a = this.prepareQuadRenderer();
        let l, u, f;
        const d = async () => {
            if (l && u && f) {
                try {
                    await this.render(a, f, l, u);
                } catch (I) {
                    this.manager.itemError(e),
                        this.manager.itemError(t),
                        this.manager.itemError(n),
                        typeof o == 'function' && o(I),
                        a.disposeOnDemandRenderer();
                    return;
                }
                typeof i == 'function' && i(a),
                    this.manager.itemEnd(e),
                    this.manager.itemEnd(t),
                    this.manager.itemEnd(n),
                    a.disposeOnDemandRenderer();
            }
        };
        let m = !0,
            v = 0,
            _ = 0,
            S = !0,
            w = 0,
            x = 0,
            A = !0,
            T = 0,
            b = 0;
        const P = () => {
            if (typeof s == 'function') {
                const I = v + w + T,
                    U = _ + x + b,
                    H = m && S && A;
                s(
                    new ProgressEvent('progress', {
                        lengthComputable: H,
                        loaded: U,
                        total: I,
                    })
                );
            }
        };
        this.manager.itemStart(e),
            this.manager.itemStart(t),
            this.manager.itemStart(n);
        const L = new Po(this._internalLoadingManager);
        L.setResponseType('arraybuffer'),
            L.setRequestHeader(this.requestHeader),
            L.setPath(this.path),
            L.setWithCredentials(this.withCredentials),
            L.load(
                e,
                async (I) => {
                    if (typeof I == 'string')
                        throw new Error('Invalid sdr buffer');
                    (l = I), await d();
                },
                (I) => {
                    (m = I.lengthComputable),
                        (_ = I.loaded),
                        (v = I.total),
                        P();
                },
                (I) => {
                    this.manager.itemError(e), typeof o == 'function' && o(I);
                }
            );
        const D = new Po(this._internalLoadingManager);
        D.setResponseType('arraybuffer'),
            D.setRequestHeader(this.requestHeader),
            D.setPath(this.path),
            D.setWithCredentials(this.withCredentials),
            D.load(
                t,
                async (I) => {
                    if (typeof I == 'string')
                        throw new Error('Invalid gainmap buffer');
                    (u = I), await d();
                },
                (I) => {
                    (S = I.lengthComputable),
                        (x = I.loaded),
                        (w = I.total),
                        P();
                },
                (I) => {
                    this.manager.itemError(t), typeof o == 'function' && o(I);
                }
            );
        const O = new Po(this._internalLoadingManager);
        return (
            O.setRequestHeader(this.requestHeader),
            O.setPath(this.path),
            O.setWithCredentials(this.withCredentials),
            O.load(
                n,
                async (I) => {
                    if (typeof I != 'string')
                        throw new Error('Invalid metadata string');
                    (f = JSON.parse(I)), await d();
                },
                (I) => {
                    (A = I.lengthComputable),
                        (b = I.loaded),
                        (T = I.total),
                        P();
                },
                (I) => {
                    this.manager.itemError(n), typeof o == 'function' && o(I);
                }
            ),
            a
        );
    }
}
class kZ extends _k {
    load(e, t, n, i) {
        const s = this.prepareQuadRenderer(),
            o = new Po(this._internalLoadingManager);
        return (
            o.setResponseType('arraybuffer'),
            o.setRequestHeader(this.requestHeader),
            o.setPath(this.path),
            o.setWithCredentials(this.withCredentials),
            this.manager.itemStart(e),
            o.load(
                e,
                async (a) => {
                    if (typeof a == 'string')
                        throw new Error(
                            'Invalid buffer, received [string], was expecting [ArrayBuffer]'
                        );
                    const l = new Uint8Array(a);
                    let u, f, d;
                    try {
                        const m = await OZ(l);
                        (u = m.sdr), (f = m.gainMap), (d = m.metadata);
                    } catch (m) {
                        if (m instanceof yk || m instanceof vk)
                            console.warn(
                                `Failure to reconstruct an HDR image from ${e}: Gain map metadata not found in the file, HDRJPGLoader will render the SDR jpeg`
                            ),
                                (d = {
                                    gainMapMin: [0, 0, 0],
                                    gainMapMax: [1, 1, 1],
                                    gamma: [1, 1, 1],
                                    hdrCapacityMin: 0,
                                    hdrCapacityMax: 1,
                                    offsetHdr: [0, 0, 0],
                                    offsetSdr: [0, 0, 0],
                                }),
                                (u = l);
                        else throw m;
                    }
                    try {
                        await this.render(s, d, u, f);
                    } catch (m) {
                        this.manager.itemError(e),
                            typeof i == 'function' && i(m),
                            s.disposeOnDemandRenderer();
                        return;
                    }
                    typeof t == 'function' && t(s),
                        this.manager.itemEnd(e),
                        s.disposeOnDemandRenderer();
                },
                n,
                (a) => {
                    this.manager.itemError(e), typeof i == 'function' && i(a);
                }
            ),
            s
        );
    }
}
const D0 = {
        apartment: 'lebombo_1k.hdr',
        city: 'potsdamer_platz_1k.hdr',
        dawn: 'kiara_1_dawn_1k.hdr',
        forest: 'forest_slope_1k.hdr',
        lobby: 'st_fagans_interior_1k.hdr',
        night: 'dikhololo_night_1k.hdr',
        park: 'rooitou_park_1k.hdr',
        studio: 'studio_small_03_1k.hdr',
        sunset: 'venice_sunset_1k.hdr',
        warehouse: 'empty_warehouse_01_1k.hdr',
    },
    xk =
        'https://raw.githack.com/pmndrs/drei-assets/456060a26bbeb8fdf79326f224b6d99b8bcce736/hdri/',
    yp = (r) => Array.isArray(r),
    uA = ['/px.png', '/nx.png', '/py.png', '/ny.png', '/pz.png', '/nz.png'];
function m1({
    files: r = uA,
    path: e = '',
    preset: t = void 0,
    encoding: n = void 0,
    extensions: i,
} = {}) {
    let s = null,
        o = !1;
    t && (cA(t), (r = D0[t]), (e = xk)), (o = yp(r));
    const { extension: a, isCubemap: l } = fA(r);
    if (((s = hA(a)), !s))
        throw new Error('useEnvironment: Unrecognized file extension: ' + r);
    const u = zi((v) => v.gl);
    Y.useLayoutEffect(() => {
        if (a !== 'webp' && a !== 'jpg' && a !== 'jpeg') return;
        function v() {
            Il.clear(s, o ? [r] : r);
        }
        u.domElement.addEventListener('webglcontextlost', v, { once: !0 });
    }, [r, u.domElement]);
    const f = Il(s, o ? [r] : r, (v) => {
        (a === 'webp' || a === 'jpg' || a === 'jpeg') && v.setRenderer(u),
            v.setPath == null || v.setPath(e),
            i && i(v);
    });
    let d = o ? f[0] : f;
    if (a === 'jpg' || a === 'jpeg' || a === 'webp') {
        var m;
        d = (m = d.renderTarget) == null ? void 0 : m.texture;
    }
    return (
        (d.mapping = l ? Pl : Rp),
        'colorSpace' in d
            ? (d.colorSpace = (n ?? l) ? 'srgb' : 'srgb-linear')
            : (d.encoding = (n ?? l) ? TZ : EZ),
        d
    );
}
const NZ = { files: uA, path: '', preset: void 0, extensions: void 0 };
m1.preload = (r) => {
    const e = { ...NZ, ...r };
    let { files: t, path: n = '' } = e;
    const { preset: i, extensions: s } = e;
    i && (cA(i), (t = D0[i]), (n = xk));
    const { extension: o } = fA(t);
    if (o === 'webp' || o === 'jpg' || o === 'jpeg')
        throw new Error('useEnvironment: Preloading gainmaps is not supported');
    const a = hA(o);
    if (!a)
        throw new Error('useEnvironment: Unrecognized file extension: ' + t);
    Il.preload(a, yp(t) ? [t] : t, (l) => {
        l.setPath == null || l.setPath(n), s && s(l);
    });
};
const FZ = { files: uA, preset: void 0 };
m1.clear = (r) => {
    const e = { ...FZ, ...r };
    let { files: t } = e;
    const { preset: n } = e;
    n && (cA(n), (t = D0[n]));
    const { extension: i } = fA(t),
        s = hA(i);
    if (!s)
        throw new Error('useEnvironment: Unrecognized file extension: ' + t);
    Il.clear(s, yp(t) ? [t] : t);
};
function cA(r) {
    if (!(r in D0))
        throw new Error('Preset must be one of: ' + Object.keys(D0).join(', '));
}
function fA(r) {
    var e;
    const t = yp(r) && r.length === 6,
        n = yp(r) && r.length === 3 && r.some((o) => o.endsWith('json')),
        i = yp(r) ? r[0] : r;
    return {
        extension: t
            ? 'cube'
            : n
              ? 'webp'
              : i.startsWith('data:application/exr')
                ? 'exr'
                : i.startsWith('data:application/hdr')
                  ? 'hdr'
                  : i.startsWith('data:image/jpeg')
                    ? 'jpg'
                    : (e = i.split('.').pop()) == null ||
                        (e = e.split('?')) == null ||
                        (e = e.shift()) == null
                      ? void 0
                      : e.toLowerCase(),
        isCubemap: t,
        isGainmap: n,
    };
}
function hA(r) {
    return r === 'cube'
        ? oU
        : r === 'hdr'
          ? SK
          : r === 'exr'
            ? wK
            : r === 'jpg' || r === 'jpeg'
              ? kZ
              : r === 'webp'
                ? UZ
                : null;
}
const BZ = (r) => r.current && r.current.isScene,
    zZ = (r) => (BZ(r) ? r.current : r);
function dA(r, e, t, n, i = {}) {
    var s, o, a, l;
    i = {
        backgroundBlurriness: 0,
        backgroundIntensity: 1,
        backgroundRotation: [0, 0, 0],
        environmentIntensity: 1,
        environmentRotation: [0, 0, 0],
        ...i,
    };
    const u = zZ(e || t),
        f = u.background,
        d = u.environment,
        m = {
            backgroundBlurriness: u.backgroundBlurriness,
            backgroundIntensity: u.backgroundIntensity,
            backgroundRotation:
                (s =
                    (o = u.backgroundRotation) == null || o.clone == null
                        ? void 0
                        : o.clone()) !== null && s !== void 0
                    ? s
                    : [0, 0, 0],
            environmentIntensity: u.environmentIntensity,
            environmentRotation:
                (a =
                    (l = u.environmentRotation) == null || l.clone == null
                        ? void 0
                        : l.clone()) !== null && a !== void 0
                    ? a
                    : [0, 0, 0],
        };
    return (
        r !== 'only' && (u.environment = n),
        r && (u.background = n),
        vc(u, i),
        () => {
            r !== 'only' && (u.environment = d),
                r && (u.background = f),
                vc(u, m);
        }
    );
}
function pA({ scene: r, background: e = !1, map: t, ...n }) {
    const i = zi((s) => s.scene);
    return (
        Y.useLayoutEffect(() => {
            if (t) return dA(e, r, i, t, n);
        }),
        null
    );
}
function Sk({
    background: r = !1,
    scene: e,
    blur: t,
    backgroundBlurriness: n,
    backgroundIntensity: i,
    backgroundRotation: s,
    environmentIntensity: o,
    environmentRotation: a,
    ...l
}) {
    const u = m1(l),
        f = zi((d) => d.scene);
    return (
        Y.useLayoutEffect(() =>
            dA(r, e, f, u, {
                backgroundBlurriness: t ?? n,
                backgroundIntensity: i,
                backgroundRotation: s,
                environmentIntensity: o,
                environmentRotation: a,
            })
        ),
        Y.useEffect(
            () => () => {
                u.dispose();
            },
            [u]
        ),
        null
    );
}
function VZ({
    children: r,
    near: e = 0.1,
    far: t = 1e3,
    resolution: n = 256,
    frames: i = 1,
    map: s,
    background: o = !1,
    blur: a,
    backgroundBlurriness: l,
    backgroundIntensity: u,
    backgroundRotation: f,
    environmentIntensity: d,
    environmentRotation: m,
    scene: v,
    files: _,
    path: S,
    preset: w = void 0,
    extensions: x,
}) {
    const A = zi((O) => O.gl),
        T = zi((O) => O.scene),
        b = Y.useRef(null),
        [P] = Y.useState(() => new jp()),
        L = Y.useMemo(() => {
            const O = new LT(n);
            return (O.texture.type = Er), O;
        }, [n]);
    Y.useEffect(
        () => () => {
            L.dispose();
        },
        [L]
    ),
        Y.useLayoutEffect(() => {
            if (i === 1) {
                const O = A.autoClear;
                (A.autoClear = !0), b.current.update(A, P), (A.autoClear = O);
            }
            return dA(o, v, T, L.texture, {
                backgroundBlurriness: a ?? l,
                backgroundIntensity: u,
                backgroundRotation: f,
                environmentIntensity: d,
                environmentRotation: m,
            });
        }, [r, P, L.texture, v, T, o, i, A]);
    let D = 1;
    return (
        Yp(() => {
            if (i === 1 / 0 || D < i) {
                const O = A.autoClear;
                (A.autoClear = !0),
                    b.current.update(A, P),
                    (A.autoClear = O),
                    D++;
            }
        }),
        Y.createElement(
            Y.Fragment,
            null,
            zU(
                Y.createElement(
                    Y.Fragment,
                    null,
                    r,
                    Y.createElement('cubeCamera', { ref: b, args: [e, t, L] }),
                    _ || w
                        ? Y.createElement(Sk, {
                              background: !0,
                              files: _,
                              preset: w,
                              path: S,
                              extensions: x,
                          })
                        : s
                          ? Y.createElement(pA, {
                                background: !0,
                                map: s,
                                extensions: x,
                            })
                          : null
                ),
                P
            )
        )
    );
}
function HZ(r) {
    var e, t, n, i;
    const s = m1(r),
        o = r.map || s;
    Y.useMemo(() => iv({ GroundProjectedEnvImpl: yK }), []),
        Y.useEffect(
            () => () => {
                s.dispose();
            },
            [s]
        );
    const a = Y.useMemo(() => [o], [o]),
        l = (e = r.ground) == null ? void 0 : e.height,
        u = (t = r.ground) == null ? void 0 : t.radius,
        f =
            (n = (i = r.ground) == null ? void 0 : i.scale) !== null &&
            n !== void 0
                ? n
                : 1e3;
    return Y.createElement(
        Y.Fragment,
        null,
        Y.createElement(pA, Oc({}, r, { map: o })),
        Y.createElement('groundProjectedEnvImpl', {
            args: a,
            scale: f,
            height: l,
            radius: u,
        })
    );
}
function wk(r) {
    return r.ground
        ? Y.createElement(HZ, r)
        : r.map
          ? Y.createElement(pA, r)
          : r.children
            ? Y.createElement(VZ, r)
            : Y.createElement(Sk, r);
}
const GZ = Y.forwardRef(
    (
        {
            children: r,
            compute: e,
            width: t,
            height: n,
            samples: i = 8,
            renderPriority: s = 0,
            eventPriority: o = 0,
            frames: a = 1 / 0,
            stencilBuffer: l = !1,
            depthBuffer: u = !0,
            generateMipmaps: f = !1,
            ...d
        },
        m
    ) => {
        const { size: v, viewport: _ } = zi(),
            S = gx((t || v.width) * _.dpr, (n || v.height) * _.dpr, {
                samples: i,
                stencilBuffer: l,
                depthBuffer: u,
                generateMipmaps: f,
            }),
            [w] = Y.useState(() => new jp()),
            x = Y.useCallback((A, T, b) => {
                var P, L;
                let D = (P = S.texture) == null ? void 0 : P.__r3f.parent;
                for (; D && !(D instanceof In); ) D = D.__r3f.parent;
                if (!D) return !1;
                b.raycaster.camera ||
                    b.events.compute(
                        A,
                        b,
                        (L = b.previousRoot) == null ? void 0 : L.getState()
                    );
                const [O] = b.raycaster.intersectObject(D);
                if (!O) return !1;
                const I = O.uv;
                if (!I) return !1;
                T.raycaster.setFromCamera(
                    T.pointer.set(I.x * 2 - 1, I.y * 2 - 1),
                    T.camera
                );
            }, []);
        return (
            Y.useImperativeHandle(m, () => S.texture, [S]),
            Y.createElement(
                Y.Fragment,
                null,
                zU(
                    Y.createElement(
                        WZ,
                        { renderPriority: s, frames: a, fbo: S },
                        r,
                        Y.createElement('group', { onPointerOver: () => null })
                    ),
                    w,
                    { events: { compute: e || x, priority: o } }
                ),
                Y.createElement('primitive', Oc({ object: S.texture }, d))
            )
        );
    }
);
function WZ({ frames: r, renderPriority: e, children: t, fbo: n }) {
    let i = 0,
        s,
        o,
        a,
        l;
    return (
        Yp((u) => {
            (r === 1 / 0 || i < r) &&
                ((s = u.gl.autoClear),
                (o = u.gl.xr.enabled),
                (a = u.gl.getRenderTarget()),
                (l = u.gl.xr.isPresenting),
                (u.gl.autoClear = !0),
                (u.gl.xr.enabled = !1),
                (u.gl.xr.isPresenting = !1),
                u.gl.setRenderTarget(n),
                u.gl.render(u.scene, u.camera),
                u.gl.setRenderTarget(a),
                (u.gl.autoClear = s),
                (u.gl.xr.enabled = o),
                (u.gl.xr.isPresenting = l),
                i++);
        }, e),
        Y.createElement(Y.Fragment, null, t)
    );
}
const jZ = dk(
        {
            blur: 0,
            map: null,
            sdf: null,
            blend: 0,
            size: 0,
            resolution: new tt(),
        },
        `varying vec2 vUv;
   void main() {
     gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
     vUv = uv;
   }`,
        `uniform sampler2D sdf;
   uniform sampler2D map;
   uniform float blur;
   uniform float size;
   uniform float time;
   uniform vec2 resolution;
   varying vec2 vUv;
   #include <packing>
   void main() {
     vec2 uv = gl_FragCoord.xy / resolution.xy;
     vec4 t = texture2D(map, uv);
     float k = blur;
     float d = texture2D(sdf, vUv).r/size;
     float alpha = 1.0 - smoothstep(0.0, 1.0, clamp(d/k + 1.0, 0.0, 1.0));
     gl_FragColor = vec4(t.rgb, blur == 0.0 ? t.a : t.a * alpha);
     #include <tonemapping_fragment>
     #include <${pk >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>
   }`
    ),
    XZ = Y.forwardRef(
        (
            {
                children: r,
                events: e = void 0,
                blur: t = 0,
                eventPriority: n = 0,
                renderPriority: i = 0,
                worldUnits: s = !1,
                resolution: o = 512,
                ...a
            },
            l
        ) => {
            iv({ PortalMaterialImpl: jZ });
            const u = Y.useRef(null),
                { scene: f, gl: d, size: m, viewport: v, setEvents: _ } = zi(),
                S = gx(o, o),
                [w, x] = Y.useState(0);
            Yp(() => {
                const L = u.current.blend > 0 ? Math.max(1, i) : 0;
                w !== L && x(L);
            }),
                Y.useEffect(() => {
                    e !== void 0 && _({ enabled: !e });
                }, [e]);
            const [A, T] = Y.useState(!0),
                b = MZ(T);
            Y.useLayoutEffect(() => {
                var L;
                b.current = (L = u.current) == null ? void 0 : L.__r3f.parent;
            }, []),
                Y.useLayoutEffect(() => {
                    if (b.current && t && u.current.sdf === null) {
                        const L = new Jn(b.current.geometry, new ja()),
                            D = new Ar().setFromBufferAttribute(
                                L.geometry.attributes.position
                            ),
                            O = new zc(
                                D.min.x * (1 + 2 / o),
                                D.max.x * (1 + 2 / o),
                                D.max.y * (1 + 2 / o),
                                D.min.y * (1 + 2 / o),
                                0.1,
                                1e3
                            );
                        O.position.set(0, 0, 1),
                            O.lookAt(0, 0, 0),
                            d.setRenderTarget(S),
                            d.render(L, O);
                        const U = qZ(o, o, d)(S.texture),
                            H = new Float32Array(o * o);
                        d.readRenderTargetPixels(U, 0, 0, o, o, H);
                        let W = 1 / 0;
                        for (let q = 0; q < H.length; q++)
                            H[q] < W && (W = H[q]);
                        (W = -W),
                            (u.current.size = W),
                            (u.current.sdf = U.texture),
                            d.setRenderTarget(null);
                    }
                }, [o, t]),
                Y.useImperativeHandle(l, () => u.current);
            const P = Y.useCallback((L, D, O) => {
                var I;
                if (!b.current) return !1;
                if (
                    (D.pointer.set(
                        (L.offsetX / D.size.width) * 2 - 1,
                        -(L.offsetY / D.size.height) * 2 + 1
                    ),
                    D.raycaster.setFromCamera(D.pointer, D.camera),
                    ((I = u.current) == null ? void 0 : I.blend) === 0)
                ) {
                    const [U] = D.raycaster.intersectObject(b.current);
                    if (!U) return (D.raycaster.camera = void 0), !1;
                }
            }, []);
            return Y.createElement(
                'portalMaterialImpl',
                Oc(
                    {
                        ref: u,
                        blur: t,
                        blend: 0,
                        resolution: [m.width * v.dpr, m.height * v.dpr],
                        attach: 'material',
                    },
                    a
                ),
                Y.createElement(
                    GZ,
                    {
                        attach: 'map',
                        frames: A ? 1 / 0 : 0,
                        eventPriority: n,
                        renderPriority: i,
                        compute: P,
                    },
                    r,
                    Y.createElement(YZ, {
                        events: e,
                        rootScene: f,
                        priority: w,
                        material: u,
                        worldUnits: s,
                    })
                )
            );
        }
    );
function YZ({
    events: r = void 0,
    rootScene: e,
    material: t,
    priority: n,
    worldUnits: i,
}) {
    const s = zi((d) => d.scene),
        o = zi((d) => d.setEvents),
        a = gx(),
        l = gx();
    Y.useLayoutEffect(() => {
        s.matrixAutoUpdate = !1;
    }, []),
        Y.useEffect(() => {
            r !== void 0 && o({ enabled: r });
        }, [r]);
    const [u, f] = Y.useMemo(() => {
        const d = { value: 0 };
        return [
            new $d(
                new Qi({
                    uniforms: {
                        a: { value: a.texture },
                        b: { value: l.texture },
                        blend: d,
                    },
                    vertexShader: `
          varying vec2 vUv;
          void main() {
            vUv = uv;
            gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
          }`,
                    fragmentShader: `
          uniform sampler2D a;
          uniform sampler2D b;
          uniform float blend;
          varying vec2 vUv;
          #include <packing>
          void main() {
            vec4 ta = texture2D(a, vUv);
            vec4 tb = texture2D(b, vUv);
            gl_FragColor = mix(tb, ta, blend);
            #include <tonemapping_fragment>
            #include <${pk >= 154 ? 'colorspace_fragment' : 'encodings_fragment'}>
          }`,
                })
            ),
            d,
        ];
    }, []);
    return (
        Yp((d) => {
            var m;
            let v =
                t == null || (m = t.current) == null ? void 0 : m.__r3f.parent;
            if (v) {
                if (i) s.matrixWorld.identity();
                else {
                    var _;
                    n &&
                        ((_ = t.current) == null ? void 0 : _.blend) === 1 &&
                        v.updateWorldMatrix(!0, !1),
                        s.matrixWorld.copy(v.matrixWorld);
                }
                if (n) {
                    var S, w, x;
                    ((S = t.current) == null ? void 0 : S.blend) > 0 &&
                    ((w = t.current) == null ? void 0 : w.blend) < 1
                        ? ((f.value = t.current.blend),
                          d.gl.setRenderTarget(a),
                          d.gl.render(s, d.camera),
                          d.gl.setRenderTarget(l),
                          d.gl.render(e, d.camera),
                          d.gl.setRenderTarget(null),
                          u.render(d.gl))
                        : ((x = t.current) == null ? void 0 : x.blend) === 1 &&
                          d.gl.render(s, d.camera);
                }
            }
        }, n),
        Y.createElement(Y.Fragment, null)
    );
}
const qZ = (r, e, t) => {
        let n = new Ji(r, e, {
                minFilter: za,
                magFilter: Cn,
                type: ri,
                format: Tc,
                generateMipmaps: !0,
            }),
            i = new Ji(r, e, { minFilter: Fn, magFilter: Fn }),
            s = new Ji(r, e, { minFilter: Fn, magFilter: Fn }),
            o = new Ji(r, e, { minFilter: Fn, magFilter: Fn }),
            a = new Ji(r, e, { minFilter: Fn, magFilter: Fn }),
            l = new Ji(r, e, {
                minFilter: Fn,
                magFilter: Fn,
                type: ri,
                format: Tc,
            }),
            u = new Ji(r, e, {
                minFilter: Fn,
                magFilter: Fn,
                type: ri,
                format: Tc,
            });
        const f = new $d(
                new Qi({
                    uniforms: { tex: { value: null } },
                    vertexShader: `
        varying vec2 vUv;
        void main() {
          vUv = uv;
          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        }`,
                    fragmentShader: `
        uniform sampler2D tex;
        varying vec2 vUv;
        #include <packing>
        void main() {
          gl_FragColor = pack2HalfToRGBA(vUv * (round(texture2D(tex, vUv).x)));
        }`,
                })
            ),
            d = new $d(
                new Qi({
                    uniforms: { tex: { value: null } },
                    vertexShader: `
        varying vec2 vUv;
        void main() {
          vUv = uv;
          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        }`,
                    fragmentShader: `
        uniform sampler2D tex;
        varying vec2 vUv;
        #include <packing>
        void main() {
          gl_FragColor = pack2HalfToRGBA(vUv * (1.0 - round(texture2D(tex, vUv).x)));
        }`,
                })
            ),
            m = new $d(
                new Qi({
                    uniforms: {
                        tex: { value: null },
                        offset: { value: 0 },
                        level: { value: 0 },
                        maxSteps: { value: 0 },
                    },
                    vertexShader: `
        varying vec2 vUv;
        void main() {
          vUv = uv;
          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        }`,
                    fragmentShader: `
        varying vec2 vUv;
        uniform sampler2D tex;
        uniform float offset;
        uniform float level;
        uniform float maxSteps;
        #include <packing>
        void main() {
          float closestDist = 9999999.9;
          vec2 closestPos = vec2(0.0);
          for (float x = -1.0; x <= 1.0; x += 1.0) {
            for (float y = -1.0; y <= 1.0; y += 1.0) {
              vec2 voffset = vUv;
              voffset += vec2(x, y) * vec2(${1 / r}, ${1 / e}) * offset;
              vec2 pos = unpackRGBATo2Half(texture2D(tex, voffset));
              float dist = distance(pos.xy, vUv);
              if(pos.x != 0.0 && pos.y != 0.0 && dist < closestDist) {
                closestDist = dist;
                closestPos = pos;
              }
            }
          }
          gl_FragColor = pack2HalfToRGBA(closestPos);
        }`,
                })
            ),
            v = new $d(
                new Qi({
                    uniforms: {
                        tex: { value: null },
                        size: { value: new tt(r, e) },
                    },
                    vertexShader: `
        varying vec2 vUv;
        void main() {
          vUv = uv;
          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        }`,
                    fragmentShader: `
        varying vec2 vUv;
        uniform sampler2D tex;
        uniform vec2 size;
        #include <packing>
        void main() {
          gl_FragColor = vec4(distance(size * unpackRGBATo2Half(texture2D(tex, vUv)), size * vUv), 0.0, 0.0, 0.0);
        }`,
                })
            ),
            _ = new $d(
                new Qi({
                    uniforms: {
                        inside: { value: u.texture },
                        outside: { value: l.texture },
                        tex: { value: null },
                    },
                    vertexShader: `
        varying vec2 vUv;
        void main() {
          vUv = uv;
          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
        }`,
                    fragmentShader: `
        varying vec2 vUv;
        uniform sampler2D inside;
        uniform sampler2D outside;
        uniform sampler2D tex;
        #include <packing>
        void main() {
          float i = texture2D(inside, vUv).x;
          float o =texture2D(outside, vUv).x;
          if (texture2D(tex, vUv).x == 0.0) {
            gl_FragColor = vec4(o, 0.0, 0.0, 0.0);
          } else {
            gl_FragColor = vec4(-i, 0.0, 0.0, 0.0);
          }
        }`,
                })
            );
        return (S) => {
            let w = n;
            (S.minFilter = Fn),
                (S.magFilter = Fn),
                (f.material.uniforms.tex.value = S),
                t.setRenderTarget(i),
                f.render(t);
            const x = Math.ceil(Math.log(Math.max(r, e)) / Math.log(2));
            let A = i,
                T = null;
            for (let b = 0; b < x; b++) {
                const P = Math.pow(2, x - b - 1);
                (T = A === i ? o : i),
                    (m.material.uniforms.level.value = b),
                    (m.material.uniforms.maxSteps.value = x),
                    (m.material.uniforms.offset.value = P),
                    (m.material.uniforms.tex.value = A.texture),
                    t.setRenderTarget(T),
                    m.render(t),
                    (A = T);
            }
            t.setRenderTarget(l),
                (v.material.uniforms.tex.value = T.texture),
                v.render(t),
                (d.material.uniforms.tex.value = S),
                t.setRenderTarget(s),
                d.render(t),
                (A = s);
            for (let b = 0; b < x; b++) {
                const P = Math.pow(2, x - b - 1);
                (T = A === s ? a : s),
                    (m.material.uniforms.level.value = b),
                    (m.material.uniforms.maxSteps.value = x),
                    (m.material.uniforms.offset.value = P),
                    (m.material.uniforms.tex.value = A.texture),
                    t.setRenderTarget(T),
                    m.render(t),
                    (A = T);
            }
            return (
                t.setRenderTarget(u),
                (v.material.uniforms.tex.value = T.texture),
                v.render(t),
                t.setRenderTarget(w),
                (_.material.uniforms.tex.value = S),
                _.render(t),
                t.setRenderTarget(null),
                w
            );
        };
    },
    KZ = dk(
        {
            uTime: 0,
            uDistort: 0.3,
            uSpeed: 1,
            colorA: new Tt('#ff69b4'),
            colorB: new Tt('#0000ff'),
        },
        `
  uniform float uTime;
  uniform float uDistort;
  uniform float uSpeed;
  varying vec2 vUv;
  varying float vDistort;

  void main() {
    vUv = uv;
    vec3 newPosition = position + normal * sin(position.y * 10.0 + uTime * uSpeed) * uDistort;
    vDistort = newPosition.y;
    gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);
  }
  `,
        `
  uniform vec3 colorA;
  uniform vec3 colorB;
  varying vec2 vUv;
  varying float vDistort;

  void main() {
    float strength = smoothstep(-1.0, 1.0, vDistort);
    vec3 color = mix(colorA, colorB, strength);
    gl_FragColor = vec4(color, 1.0);
  }
  `
    );
iv({ DistortGradientMaterial: KZ });
/**
 * @license lucide-react v0.509.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ const ZZ = (r) => r.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase(),
    $Z = (r) =>
        r.replace(/^([A-Z])|[\s-_]+(\w)/g, (e, t, n) =>
            n ? n.toUpperCase() : t.toLowerCase()
        ),
    XP = (r) => {
        const e = $Z(r);
        return e.charAt(0).toUpperCase() + e.slice(1);
    },
    Mk = (...r) =>
        r
            .filter((e, t, n) => !!e && e.trim() !== '' && n.indexOf(e) === t)
            .join(' ')
            .trim(),
    JZ = (r) => {
        for (const e in r)
            if (e.startsWith('aria-') || e === 'role' || e === 'title')
                return !0;
    };
/**
 * @license lucide-react v0.509.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ var QZ = {
    xmlns: 'http://www.w3.org/2000/svg',
    width: 24,
    height: 24,
    viewBox: '0 0 24 24',
    fill: 'none',
    stroke: 'currentColor',
    strokeWidth: 2,
    strokeLinecap: 'round',
    strokeLinejoin: 'round',
};
/**
 * @license lucide-react v0.509.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ const e$ = Y.forwardRef(
    (
        {
            color: r = 'currentColor',
            size: e = 24,
            strokeWidth: t = 2,
            absoluteStrokeWidth: n,
            className: i = '',
            children: s,
            iconNode: o,
            ...a
        },
        l
    ) =>
        Y.createElement(
            'svg',
            {
                ref: l,
                ...QZ,
                width: e,
                height: e,
                stroke: r,
                strokeWidth: n ? (Number(t) * 24) / Number(e) : t,
                className: Mk('lucide', i),
                ...(!s && !JZ(a) && { 'aria-hidden': 'true' }),
                ...a,
            },
            [
                ...o.map(([u, f]) => Y.createElement(u, f)),
                ...(Array.isArray(s) ? s : [s]),
            ]
        )
);
/**
 * @license lucide-react v0.509.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ const qa = (r, e) => {
    const t = Y.forwardRef(({ className: n, ...i }, s) =>
        Y.createElement(e$, {
            ref: s,
            iconNode: e,
            className: Mk(`lucide-${ZZ(XP(r))}`, `lucide-${r}`, n),
            ...i,
        })
    );
    return (t.displayName = XP(r)), t;
};
/**
 * @license lucide-react v0.509.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ const t$ = [
        ['path', { d: 'M12 5v14', key: 's699le' }],
        ['path', { d: 'm19 12-7 7-7-7', key: '1idqje' }],
    ],
    Ek = qa('arrow-down', t$);
/**
 * @license lucide-react v0.509.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ const n$ = [
        ['path', { d: 'm12 19-7-7 7-7', key: '1l729n' }],
        ['path', { d: 'M19 12H5', key: 'x3x0zl' }],
    ],
    i$ = qa('arrow-left', n$);
/**
 * @license lucide-react v0.509.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ const r$ = [
        ['path', { d: 'm5 12 7-7 7 7', key: 'hav0vg' }],
        ['path', { d: 'M12 19V5', key: 'x0mq9r' }],
    ],
    Tk = qa('arrow-up', r$);
/**
 * @license lucide-react v0.509.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ const s$ = [['path', { d: 'M20 6 9 17l-5-5', key: '1gmf2c' }]],
    o$ = qa('check', s$);
/**
 * @license lucide-react v0.509.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ const a$ = [
        ['circle', { cx: '12', cy: '12', r: '10', key: '1mglay' }],
        ['line', { x1: '12', x2: '12', y1: '8', y2: '12', key: '1pkeuh' }],
        ['line', { x1: '12', x2: '12.01', y1: '16', y2: '16', key: '4dfq90' }],
    ],
    l$ = qa('circle-alert', a$);
/**
 * @license lucide-react v0.509.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ const u$ = [
        [
            'path',
            {
                d: 'M11.562 3.266a.5.5 0 0 1 .876 0L15.39 8.87a1 1 0 0 0 1.516.294L21.183 5.5a.5.5 0 0 1 .798.519l-2.834 10.246a1 1 0 0 1-.956.734H5.81a1 1 0 0 1-.957-.734L2.02 6.02a.5.5 0 0 1 .798-.519l4.276 3.664a1 1 0 0 0 1.516-.294z',
                key: '1vdc57',
            },
        ],
        ['path', { d: 'M5 21h14', key: '11awu3' }],
    ],
    c$ = qa('crown', u$);
/**
 * @license lucide-react v0.509.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ const f$ = [
        ['circle', { cx: '12', cy: '12', r: '10', key: '1mglay' }],
        ['path', { d: 'M16 16s-1.5-2-4-2-4 2-4 2', key: 'epbg0q' }],
        ['line', { x1: '9', x2: '9.01', y1: '9', y2: '9', key: 'yxxnd0' }],
        ['line', { x1: '15', x2: '15.01', y1: '9', y2: '9', key: '1p4y9e' }],
    ],
    h$ = qa('frown', f$);
/**
 * @license lucide-react v0.509.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ const d$ = [
        ['circle', { cx: '12', cy: '12', r: '10', key: '1mglay' }],
        ['path', { d: 'M12 16v-4', key: '1dtifu' }],
        ['path', { d: 'M12 8h.01', key: 'e9boi3' }],
    ],
    p$ = qa('info', d$);
/**
 * @license lucide-react v0.509.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ const m$ = [
        ['circle', { cx: '12', cy: '12', r: '10', key: '1mglay' }],
        ['line', { x1: '8', x2: '16', y1: '15', y2: '15', key: '1xb1d9' }],
        ['line', { x1: '9', x2: '9.01', y1: '9', y2: '9', key: 'yxxnd0' }],
        ['line', { x1: '15', x2: '15.01', y1: '9', y2: '9', key: '1p4y9e' }],
    ],
    g$ = qa('meh', m$);
/**
 * @license lucide-react v0.509.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ const v$ = [
        ['circle', { cx: '12', cy: '12', r: '10', key: '1mglay' }],
        ['path', { d: 'M8 14s1.5 2 4 2 4-2 4-2', key: '1y1vjs' }],
        ['line', { x1: '9', x2: '9.01', y1: '9', y2: '9', key: 'yxxnd0' }],
        ['line', { x1: '15', x2: '15.01', y1: '9', y2: '9', key: '1p4y9e' }],
    ],
    y$ = qa('smile', v$);
/**
 * @license lucide-react v0.509.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */ const _$ = [
        ['path', { d: 'M18 6 6 18', key: '1bl5f8' }],
        ['path', { d: 'm6 6 12 12', key: 'd8bk6v' }],
    ],
    x$ = qa('x', _$),
    Jd = '0.22.0';
let YP = !1,
    Kg,
    Ak,
    bk,
    ZM,
    Ck,
    Rk,
    Pk,
    Lk,
    Ik;
function S$(r, e = { auto: !1 }) {
    if (YP)
        throw new Error(
            `you must \`import 'groq-sdk/shims/${r.kind}'\` before importing anything else from groq-sdk`
        );
    if (Kg)
        throw new Error(
            `can't \`import 'groq-sdk/shims/${r.kind}'\` after \`import 'groq-sdk/shims/${Kg}'\``
        );
    (YP = e.auto),
        (Kg = r.kind),
        (Ak = r.fetch),
        (bk = r.FormData),
        (ZM = r.File),
        (Ck = r.ReadableStream),
        (Rk = r.getMultipartRequestOptions),
        (Pk = r.getDefaultAgent),
        (Lk = r.fileFromPath),
        (Ik = r.isFsReadStream);
}
class w$ {
    constructor(e) {
        this.body = e;
    }
    get [Symbol.toStringTag]() {
        return 'MultipartBody';
    }
}
function M$({ manuallyImported: r } = {}) {
    const e = r
        ? 'You may need to use polyfills'
        : "Add one of these imports before your first `import … from 'groq-sdk'`:\n- `import 'groq-sdk/shims/node'` (if you're running on Node)\n- `import 'groq-sdk/shims/web'` (otherwise)\n";
    let t, n, i, s;
    try {
        (t = fetch), (n = Request), (i = Response), (s = Headers);
    } catch (o) {
        throw new Error(
            `this environment is missing the following Web Fetch API type: ${o.message}. ${e}`
        );
    }
    return {
        kind: 'web',
        fetch: t,
        Request: n,
        Response: i,
        Headers: s,
        FormData:
            typeof FormData < 'u'
                ? FormData
                : class {
                      constructor() {
                          throw new Error(
                              `file uploads aren't supported in this environment yet as 'FormData' is undefined. ${e}`
                          );
                      }
                  },
        Blob:
            typeof Blob < 'u'
                ? Blob
                : class {
                      constructor() {
                          throw new Error(
                              `file uploads aren't supported in this environment yet as 'Blob' is undefined. ${e}`
                          );
                      }
                  },
        File:
            typeof File < 'u'
                ? File
                : class {
                      constructor() {
                          throw new Error(
                              `file uploads aren't supported in this environment yet as 'File' is undefined. ${e}`
                          );
                      }
                  },
        ReadableStream:
            typeof ReadableStream < 'u'
                ? ReadableStream
                : class {
                      constructor() {
                          throw new Error(
                              `streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${e}`
                          );
                      }
                  },
        getMultipartRequestOptions: async (o, a) => ({ ...a, body: new w$(o) }),
        getDefaultAgent: (o) => {},
        fileFromPath: () => {
            throw new Error(
                'The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/groq/groq-typescript#file-uploads'
            );
        },
        isFsReadStream: (o) => !1,
    };
}
const Dk = () => {
    Kg || S$(M$(), { auto: !0 });
};
Dk();
class Ha extends Error {}
class ms extends Ha {
    constructor(e, t, n, i) {
        super(`${ms.makeMessage(e, t, n)}`),
            (this.status = e),
            (this.headers = i),
            (this.error = t);
    }
    static makeMessage(e, t, n) {
        const i =
            t != null && t.message
                ? typeof t.message == 'string'
                    ? t.message
                    : JSON.stringify(t.message)
                : t
                  ? JSON.stringify(t)
                  : n;
        return e && i
            ? `${e} ${i}`
            : e
              ? `${e} status code (no body)`
              : i || '(no status code or body)';
    }
    static generate(e, t, n, i) {
        if (!e || !i) return new g1({ message: n, cause: QM(t) });
        const s = t;
        return e === 400
            ? new Uk(e, s, n, i)
            : e === 401
              ? new kk(e, s, n, i)
              : e === 403
                ? new Nk(e, s, n, i)
                : e === 404
                  ? new Fk(e, s, n, i)
                  : e === 409
                    ? new Bk(e, s, n, i)
                    : e === 422
                      ? new zk(e, s, n, i)
                      : e === 429
                        ? new Vk(e, s, n, i)
                        : e >= 500
                          ? new Hk(e, s, n, i)
                          : new ms(e, s, n, i);
    }
}
class $M extends ms {
    constructor({ message: e } = {}) {
        super(void 0, void 0, e || 'Request was aborted.', void 0);
    }
}
class g1 extends ms {
    constructor({ message: e, cause: t }) {
        super(void 0, void 0, e || 'Connection error.', void 0),
            t && (this.cause = t);
    }
}
class Ok extends g1 {
    constructor({ message: e } = {}) {
        super({ message: e ?? 'Request timed out.' });
    }
}
class Uk extends ms {}
class kk extends ms {}
class Nk extends ms {}
class Fk extends ms {}
class Bk extends ms {}
class zk extends ms {}
class Vk extends ms {}
class Hk extends ms {}
class hp {
    constructor(e, t) {
        (this.iterator = e), (this.controller = t);
    }
    static fromSSEResponse(e, t) {
        let n = !1;
        const i = new E$();
        async function* s() {
            if (!e.body)
                throw (
                    (t.abort(),
                    new Ha('Attempted to iterate over a response with no body'))
                );
            const a = new _h(),
                l = qP(e.body);
            for await (const u of l)
                for (const f of a.decode(u)) {
                    const d = i.decode(f);
                    d && (yield d);
                }
            for (const u of a.flush()) {
                const f = i.decode(u);
                f && (yield f);
            }
        }
        async function* o() {
            if (n)
                throw new Error(
                    'Cannot iterate over a consumed stream, use `.tee()` to split the stream.'
                );
            n = !0;
            let a = !1;
            try {
                for await (const l of s())
                    if (!a) {
                        if (l.data.startsWith('[DONE]')) {
                            a = !0;
                            continue;
                        }
                        if (l.event === null || l.event === 'error') {
                            let u;
                            try {
                                u = JSON.parse(l.data);
                            } catch (f) {
                                throw (
                                    (console.error(
                                        'Could not parse message into JSON:',
                                        l.data
                                    ),
                                    console.error('From chunk:', l.raw),
                                    f)
                                );
                            }
                            if (u && u.error)
                                throw new ms(
                                    u.error.status_code,
                                    u.error,
                                    u.error.message,
                                    void 0
                                );
                            yield u;
                        }
                    }
                a = !0;
            } catch (l) {
                if (l instanceof Error && l.name === 'AbortError') return;
                throw l;
            } finally {
                a || t.abort();
            }
        }
        return new hp(o, t);
    }
    static fromReadableStream(e, t) {
        let n = !1;
        async function* i() {
            const o = new _h(),
                a = qP(e);
            for await (const l of a) for (const u of o.decode(l)) yield u;
            for (const l of o.flush()) yield l;
        }
        async function* s() {
            if (n)
                throw new Error(
                    'Cannot iterate over a consumed stream, use `.tee()` to split the stream.'
                );
            n = !0;
            let o = !1;
            try {
                for await (const a of i()) o || (a && (yield JSON.parse(a)));
                o = !0;
            } catch (a) {
                if (a instanceof Error && a.name === 'AbortError') return;
                throw a;
            } finally {
                o || t.abort();
            }
        }
        return new hp(s, t);
    }
    [Symbol.asyncIterator]() {
        return this.iterator();
    }
    tee() {
        const e = [],
            t = [],
            n = this.iterator(),
            i = (s) => ({
                next: () => {
                    if (s.length === 0) {
                        const o = n.next();
                        e.push(o), t.push(o);
                    }
                    return s.shift();
                },
            });
        return [
            new hp(() => i(e), this.controller),
            new hp(() => i(t), this.controller),
        ];
    }
    toReadableStream() {
        const e = this;
        let t;
        const n = new TextEncoder();
        return new Ck({
            async start() {
                t = e[Symbol.asyncIterator]();
            },
            async pull(i) {
                try {
                    const { value: s, done: o } = await t.next();
                    if (o) return i.close();
                    const a = n.encode(
                        JSON.stringify(s) +
                            `
`
                    );
                    i.enqueue(a);
                } catch (s) {
                    i.error(s);
                }
            },
            async cancel() {
                var i;
                await ((i = t.return) == null ? void 0 : i.call(t));
            },
        });
    }
}
class E$ {
    constructor() {
        (this.event = null), (this.data = []), (this.chunks = []);
    }
    decode(e) {
        if ((e.endsWith('\r') && (e = e.substring(0, e.length - 1)), !e)) {
            if (!this.event && !this.data.length) return null;
            const s = {
                event: this.event,
                data: this.data.join(`
`),
                raw: this.chunks,
            };
            return (this.event = null), (this.data = []), (this.chunks = []), s;
        }
        if ((this.chunks.push(e), e.startsWith(':'))) return null;
        let [t, n, i] = T$(e, ':');
        return (
            i.startsWith(' ') && (i = i.substring(1)),
            t === 'event'
                ? (this.event = i)
                : t === 'data' && this.data.push(i),
            null
        );
    }
}
class _h {
    constructor() {
        (this.buffer = []), (this.trailingCR = !1);
    }
    decode(e) {
        let t = this.decodeText(e);
        if (
            (this.trailingCR && ((t = '\r' + t), (this.trailingCR = !1)),
            t.endsWith('\r') && ((this.trailingCR = !0), (t = t.slice(0, -1))),
            !t)
        )
            return [];
        const n = _h.NEWLINE_CHARS.has(t[t.length - 1] || '');
        let i = t.split(_h.NEWLINE_REGEXP);
        return i.length === 1 && !n
            ? (this.buffer.push(i[0]), [])
            : (this.buffer.length > 0 &&
                  ((i = [this.buffer.join('') + i[0], ...i.slice(1)]),
                  (this.buffer = [])),
              n || (this.buffer = [i.pop() || '']),
              i);
    }
    decodeText(e) {
        if (e == null) return '';
        if (typeof e == 'string') return e;
        if (typeof Buffer < 'u') {
            if (e instanceof Buffer) return e.toString();
            if (e instanceof Uint8Array) return Buffer.from(e).toString();
            throw new Ha(
                `Unexpected: received non-Uint8Array (${e.constructor.name}) stream chunk in an environment with a global "Buffer" defined, which this library assumes to be Node. Please report this error.`
            );
        }
        if (typeof TextDecoder < 'u') {
            if (e instanceof Uint8Array || e instanceof ArrayBuffer)
                return (
                    this.textDecoder ??
                        (this.textDecoder = new TextDecoder('utf8')),
                    this.textDecoder.decode(e)
                );
            throw new Ha(
                `Unexpected: received non-Uint8Array/ArrayBuffer (${e.constructor.name}) in a web platform. Please report this error.`
            );
        }
        throw new Ha(
            'Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.'
        );
    }
    flush() {
        if (!this.buffer.length && !this.trailingCR) return [];
        const e = [this.buffer.join('')];
        return (this.buffer = []), (this.trailingCR = !1), e;
    }
}
_h.NEWLINE_CHARS = new Set([
    `
`,
    '\r',
    '\v',
    '\f',
    '',
    '',
    '',
    '',
    '\u2028',
    '\u2029',
]);
_h.NEWLINE_REGEXP = /\r\n|[\n\r\x0b\x0c\x1c\x1d\x1e\x85\u2028\u2029]/g;
function T$(r, e) {
    const t = r.indexOf(e);
    return t !== -1
        ? [r.substring(0, t), e, r.substring(t + e.length)]
        : [r, '', ''];
}
function qP(r) {
    if (r[Symbol.asyncIterator]) return r;
    const e = r.getReader();
    return {
        async next() {
            try {
                const t = await e.read();
                return t != null && t.done && e.releaseLock(), t;
            } catch (t) {
                throw (e.releaseLock(), t);
            }
        },
        async return() {
            const t = e.cancel();
            return e.releaseLock(), await t, { done: !0, value: void 0 };
        },
        [Symbol.asyncIterator]() {
            return this;
        },
    };
}
const Gk = (r) =>
        r != null &&
        typeof r == 'object' &&
        typeof r.url == 'string' &&
        typeof r.blob == 'function',
    Wk = (r) =>
        r != null &&
        typeof r == 'object' &&
        typeof r.name == 'string' &&
        typeof r.lastModified == 'number' &&
        v1(r),
    v1 = (r) =>
        r != null &&
        typeof r == 'object' &&
        typeof r.size == 'number' &&
        typeof r.type == 'string' &&
        typeof r.text == 'function' &&
        typeof r.slice == 'function' &&
        typeof r.arrayBuffer == 'function',
    A$ = (r) => Wk(r) || Gk(r) || Ik(r);
async function jk(r, e, t) {
    var i;
    if (((r = await r), Wk(r))) return r;
    if (Gk(r)) {
        const s = await r.blob();
        e ||
            (e =
                new URL(r.url).pathname.split(/[\\/]/).pop() ?? 'unknown_file');
        const o = v1(s) ? [await s.arrayBuffer()] : [s];
        return new ZM(o, e, t);
    }
    const n = await b$(r);
    if ((e || (e = R$(r) ?? 'unknown_file'), !(t != null && t.type))) {
        const s = (i = n[0]) == null ? void 0 : i.type;
        typeof s == 'string' && (t = { ...t, type: s });
    }
    return new ZM(n, e, t);
}
async function b$(r) {
    var t;
    let e = [];
    if (
        typeof r == 'string' ||
        ArrayBuffer.isView(r) ||
        r instanceof ArrayBuffer
    )
        e.push(r);
    else if (v1(r)) e.push(await r.arrayBuffer());
    else if (P$(r)) for await (const n of r) e.push(n);
    else
        throw new Error(
            `Unexpected data type: ${typeof r}; constructor: ${(t = r == null ? void 0 : r.constructor) == null ? void 0 : t.name}; props: ${C$(r)}`
        );
    return e;
}
function C$(r) {
    return `[${Object.getOwnPropertyNames(r)
        .map((t) => `"${t}"`)
        .join(', ')}]`;
}
function R$(r) {
    var e;
    return (
        Uw(r.name) ||
        Uw(r.filename) ||
        ((e = Uw(r.path)) == null ? void 0 : e.split(/[\\/]/).pop())
    );
}
const Uw = (r) => {
        if (typeof r == 'string') return r;
        if (typeof Buffer < 'u' && r instanceof Buffer) return String(r);
    },
    P$ = (r) =>
        r != null &&
        typeof r == 'object' &&
        typeof r[Symbol.asyncIterator] == 'function',
    KP = (r) =>
        r &&
        typeof r == 'object' &&
        r.body &&
        r[Symbol.toStringTag] === 'MultipartBody',
    mA = async (r) => {
        const e = await L$(r.body);
        return Rk(e, r);
    },
    L$ = async (r) => {
        const e = new bk();
        return (
            await Promise.all(
                Object.entries(r || {}).map(([t, n]) => JM(e, t, n))
            ),
            e
        );
    },
    JM = async (r, e, t) => {
        if (t !== void 0) {
            if (t == null)
                throw new TypeError(
                    `Received null for "${e}"; to pass null in FormData, you must use the string 'null'`
                );
            if (
                typeof t == 'string' ||
                typeof t == 'number' ||
                typeof t == 'boolean'
            )
                r.append(e, String(t));
            else if (A$(t)) {
                const n = await jk(t);
                r.append(e, n);
            } else if (Array.isArray(t))
                await Promise.all(t.map((n) => JM(r, e + '[]', n)));
            else if (typeof t == 'object')
                await Promise.all(
                    Object.entries(t).map(([n, i]) => JM(r, `${e}[${n}]`, i))
                );
            else
                throw new TypeError(
                    `Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${t} instead`
                );
        }
    };
var _p = {};
Dk();
async function Xk(r) {
    var o;
    const { response: e } = r;
    if (r.options.stream)
        return (
            xp('response', e.status, e.url, e.headers, e.body),
            r.options.__streamClass
                ? r.options.__streamClass.fromSSEResponse(e, r.controller)
                : hp.fromSSEResponse(e, r.controller)
        );
    if (e.status === 204) return null;
    if (r.options.__binaryResponse) return e;
    const t = e.headers.get('content-type'),
        n =
            (o = t == null ? void 0 : t.split(';')[0]) == null
                ? void 0
                : o.trim();
    if (
        (n == null ? void 0 : n.includes('application/json')) ||
        (n == null ? void 0 : n.endsWith('+json'))
    ) {
        const a = await e.json();
        return xp('response', e.status, e.url, e.headers, a), a;
    }
    const s = await e.text();
    return xp('response', e.status, e.url, e.headers, s), s;
}
class y1 extends Promise {
    constructor(e, t = Xk) {
        super((n) => {
            n(null);
        }),
            (this.responsePromise = e),
            (this.parseResponse = t);
    }
    _thenUnwrap(e) {
        return new y1(this.responsePromise, async (t) =>
            e(await this.parseResponse(t), t)
        );
    }
    asResponse() {
        return this.responsePromise.then((e) => e.response);
    }
    async withResponse() {
        const [e, t] = await Promise.all([this.parse(), this.asResponse()]);
        return { data: e, response: t };
    }
    parse() {
        return (
            this.parsedPromise ||
                (this.parsedPromise = this.responsePromise.then(
                    this.parseResponse
                )),
            this.parsedPromise
        );
    }
    then(e, t) {
        return this.parse().then(e, t);
    }
    catch(e) {
        return this.parse().catch(e);
    }
    finally(e) {
        return this.parse().finally(e);
    }
}
class I$ {
    constructor({
        baseURL: e,
        maxRetries: t = 2,
        timeout: n = 6e4,
        httpAgent: i,
        fetch: s,
    }) {
        (this.baseURL = e),
            (this.maxRetries = kw('maxRetries', t)),
            (this.timeout = kw('timeout', n)),
            (this.httpAgent = i),
            (this.fetch = s ?? Ak);
    }
    authHeaders(e) {
        return {};
    }
    defaultHeaders(e) {
        return {
            Accept: 'application/json',
            'Content-Type': 'application/json',
            'User-Agent': this.getUserAgent(),
            ...N$(),
            ...this.authHeaders(e),
        };
    }
    validateHeaders(e, t) {}
    defaultIdempotencyKey() {
        return `stainless-node-retry-${W$()}`;
    }
    get(e, t) {
        return this.methodRequest('get', e, t);
    }
    post(e, t) {
        return this.methodRequest('post', e, t);
    }
    patch(e, t) {
        return this.methodRequest('patch', e, t);
    }
    put(e, t) {
        return this.methodRequest('put', e, t);
    }
    delete(e, t) {
        return this.methodRequest('delete', e, t);
    }
    methodRequest(e, t, n) {
        return this.request(
            Promise.resolve(n).then(async (i) => {
                const s =
                    i && v1(i == null ? void 0 : i.body)
                        ? new DataView(await i.body.arrayBuffer())
                        : (i == null ? void 0 : i.body) instanceof DataView
                          ? i.body
                          : (i == null ? void 0 : i.body) instanceof ArrayBuffer
                            ? new DataView(i.body)
                            : i &&
                                ArrayBuffer.isView(i == null ? void 0 : i.body)
                              ? new DataView(i.body.buffer)
                              : i == null
                                ? void 0
                                : i.body;
                return { method: e, path: t, ...i, body: s };
            })
        );
    }
    getAPIList(e, t, n) {
        return this.requestAPIList(t, { method: 'get', path: e, ...n });
    }
    calculateContentLength(e) {
        if (typeof e == 'string') {
            if (typeof Buffer < 'u')
                return Buffer.byteLength(e, 'utf8').toString();
            if (typeof TextEncoder < 'u')
                return new TextEncoder().encode(e).length.toString();
        } else if (ArrayBuffer.isView(e)) return e.byteLength.toString();
        return null;
    }
    buildRequest(e, { retryCount: t = 0 } = {}) {
        var S;
        const n = { ...e },
            { method: i, path: s, query: o, headers: a = {} } = n,
            l =
                ArrayBuffer.isView(n.body) ||
                (n.__binaryRequest && typeof n.body == 'string')
                    ? n.body
                    : KP(n.body)
                      ? n.body.body
                      : n.body
                        ? JSON.stringify(n.body, null, 2)
                        : null,
            u = this.calculateContentLength(l),
            f = this.buildURL(s, o);
        'timeout' in n && kw('timeout', n.timeout),
            (n.timeout = n.timeout ?? this.timeout);
        const d = n.httpAgent ?? this.httpAgent ?? Pk(f),
            m = n.timeout + 1e3;
        typeof ((S = d == null ? void 0 : d.options) == null
            ? void 0
            : S.timeout) == 'number' &&
            m > (d.options.timeout ?? 0) &&
            (d.options.timeout = m),
            this.idempotencyHeader &&
                i !== 'get' &&
                (e.idempotencyKey ||
                    (e.idempotencyKey = this.defaultIdempotencyKey()),
                (a[this.idempotencyHeader] = e.idempotencyKey));
        const v = this.buildHeaders({
            options: n,
            headers: a,
            contentLength: u,
            retryCount: t,
        });
        return {
            req: {
                method: i,
                ...(l && { body: l }),
                headers: v,
                ...(d && { agent: d }),
                signal: n.signal ?? null,
            },
            url: f,
            timeout: n.timeout,
        };
    }
    buildHeaders({ options: e, headers: t, contentLength: n, retryCount: i }) {
        const s = {};
        n && (s['content-length'] = n);
        const o = this.defaultHeaders(e);
        return (
            eL(s, o),
            eL(s, t),
            KP(e.body) && Kg !== 'node' && delete s['content-type'],
            a_(o, 'x-stainless-retry-count') === void 0 &&
                a_(t, 'x-stainless-retry-count') === void 0 &&
                (s['x-stainless-retry-count'] = String(i)),
            a_(o, 'x-stainless-timeout') === void 0 &&
                a_(t, 'x-stainless-timeout') === void 0 &&
                e.timeout &&
                (s['x-stainless-timeout'] = String(
                    Math.trunc(e.timeout / 1e3)
                )),
            this.validateHeaders(s, t),
            s
        );
    }
    async prepareOptions(e) {}
    async prepareRequest(e, { url: t, options: n }) {}
    parseHeaders(e) {
        return e
            ? Symbol.iterator in e
                ? Object.fromEntries(Array.from(e).map((t) => [...t]))
                : { ...e }
            : {};
    }
    makeStatusError(e, t, n, i) {
        return ms.generate(e, t, n, i);
    }
    request(e, t = null) {
        return new y1(this.makeRequest(e, t));
    }
    async makeRequest(e, t) {
        var d, m;
        const n = await e,
            i = n.maxRetries ?? this.maxRetries;
        t == null && (t = i), await this.prepareOptions(n);
        const {
            req: s,
            url: o,
            timeout: a,
        } = this.buildRequest(n, { retryCount: i - t });
        if (
            (await this.prepareRequest(s, { url: o, options: n }),
            xp('request', o, n, s.headers),
            (d = n.signal) != null && d.aborted)
        )
            throw new $M();
        const l = new AbortController(),
            u = await this.fetchWithTimeout(o, s, a, l).catch(QM);
        if (u instanceof Error) {
            if ((m = n.signal) != null && m.aborted) throw new $M();
            if (t) return this.retryRequest(n, t);
            throw u.name === 'AbortError' ? new Ok() : new g1({ cause: u });
        }
        const f = O$(u.headers);
        if (!u.ok) {
            if (t && this.shouldRetry(u)) {
                const A = `retrying, ${t} attempts remaining`;
                return (
                    xp(`response (error; ${A})`, u.status, o, f),
                    this.retryRequest(n, t, f)
                );
            }
            const v = await u.text().catch((A) => QM(A).message),
                _ = F$(v),
                S = _ ? void 0 : v;
            throw (
                (xp(
                    `response (error; ${t ? '(error; no more retries left)' : '(error; not retryable)'})`,
                    u.status,
                    o,
                    f,
                    S
                ),
                this.makeStatusError(u.status, _, S, f))
            );
        }
        return { response: u, options: n, controller: l };
    }
    requestAPIList(e, t) {
        const n = this.makeRequest(t, null);
        return new D$(this, n, e);
    }
    buildURL(e, t) {
        const n = z$(e)
                ? new URL(e)
                : new URL(
                      this.baseURL +
                          (this.baseURL.endsWith('/') && e.startsWith('/')
                              ? e.slice(1)
                              : e)
                  ),
            i = this.defaultQuery();
        return (
            H$(i) || (t = { ...i, ...t }),
            typeof t == 'object' &&
                t &&
                !Array.isArray(t) &&
                (n.search = this.stringifyQuery(t)),
            n.toString()
        );
    }
    stringifyQuery(e) {
        return Object.entries(e)
            .filter(([t, n]) => typeof n < 'u')
            .map(([t, n]) => {
                if (
                    typeof n == 'string' ||
                    typeof n == 'number' ||
                    typeof n == 'boolean'
                )
                    return `${encodeURIComponent(t)}=${encodeURIComponent(n)}`;
                if (n === null) return `${encodeURIComponent(t)}=`;
                throw new Ha(
                    `Cannot stringify type ${typeof n}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`
                );
            })
            .join('&');
    }
    async fetchWithTimeout(e, t, n, i) {
        const { signal: s, ...o } = t || {};
        s && s.addEventListener('abort', () => i.abort());
        const a = setTimeout(() => i.abort(), n),
            l = { signal: i.signal, ...o };
        return (
            l.method && (l.method = l.method.toUpperCase()),
            this.fetch.call(void 0, e, l).finally(() => {
                clearTimeout(a);
            })
        );
    }
    shouldRetry(e) {
        const t = e.headers.get('x-should-retry');
        return t === 'true'
            ? !0
            : t === 'false'
              ? !1
              : e.status === 408 ||
                e.status === 409 ||
                e.status === 429 ||
                e.status >= 500;
    }
    async retryRequest(e, t, n) {
        let i;
        const s = n == null ? void 0 : n['retry-after-ms'];
        if (s) {
            const a = parseFloat(s);
            Number.isNaN(a) || (i = a);
        }
        const o = n == null ? void 0 : n['retry-after'];
        if (o && !i) {
            const a = parseFloat(o);
            Number.isNaN(a) ? (i = Date.parse(o) - Date.now()) : (i = a * 1e3);
        }
        if (!(i && 0 <= i && i < 60 * 1e3)) {
            const a = e.maxRetries ?? this.maxRetries;
            i = this.calculateDefaultRetryTimeoutMillis(t, a);
        }
        return await V$(i), this.makeRequest(e, t - 1);
    }
    calculateDefaultRetryTimeoutMillis(e, t) {
        const s = t - e,
            o = Math.min(0.5 * Math.pow(2, s), 8),
            a = 1 - Math.random() * 0.25;
        return o * a * 1e3;
    }
    getUserAgent() {
        return `${this.constructor.name}/JS ${Jd}`;
    }
}
class D$ extends y1 {
    constructor(e, t, n) {
        super(t, async (i) => new n(e, i.response, await Xk(i), i.options));
    }
    async *[Symbol.asyncIterator]() {
        const e = await this;
        for await (const t of e) yield t;
    }
}
const O$ = (r) =>
        new Proxy(Object.fromEntries(r.entries()), {
            get(e, t) {
                const n = t.toString();
                return e[n.toLowerCase()] || e[n];
            },
        }),
    U$ = () => {
        var e;
        if (typeof Deno < 'u' && Deno.build != null)
            return {
                'X-Stainless-Lang': 'js',
                'X-Stainless-Package-Version': Jd,
                'X-Stainless-OS': $P(Deno.build.os),
                'X-Stainless-Arch': ZP(Deno.build.arch),
                'X-Stainless-Runtime': 'deno',
                'X-Stainless-Runtime-Version':
                    typeof Deno.version == 'string'
                        ? Deno.version
                        : (((e = Deno.version) == null ? void 0 : e.deno) ??
                          'unknown'),
            };
        if (typeof EdgeRuntime < 'u')
            return {
                'X-Stainless-Lang': 'js',
                'X-Stainless-Package-Version': Jd,
                'X-Stainless-OS': 'Unknown',
                'X-Stainless-Arch': `other:${EdgeRuntime}`,
                'X-Stainless-Runtime': 'edge',
                'X-Stainless-Runtime-Version': process.version,
            };
        if (
            Object.prototype.toString.call(
                typeof process < 'u' ? process : 0
            ) === '[object process]'
        )
            return {
                'X-Stainless-Lang': 'js',
                'X-Stainless-Package-Version': Jd,
                'X-Stainless-OS': $P(process.platform),
                'X-Stainless-Arch': ZP(process.arch),
                'X-Stainless-Runtime': 'node',
                'X-Stainless-Runtime-Version': process.version,
            };
        const r = k$();
        return r
            ? {
                  'X-Stainless-Lang': 'js',
                  'X-Stainless-Package-Version': Jd,
                  'X-Stainless-OS': 'Unknown',
                  'X-Stainless-Arch': 'unknown',
                  'X-Stainless-Runtime': `browser:${r.browser}`,
                  'X-Stainless-Runtime-Version': r.version,
              }
            : {
                  'X-Stainless-Lang': 'js',
                  'X-Stainless-Package-Version': Jd,
                  'X-Stainless-OS': 'Unknown',
                  'X-Stainless-Arch': 'unknown',
                  'X-Stainless-Runtime': 'unknown',
                  'X-Stainless-Runtime-Version': 'unknown',
              };
    };
function k$() {
    if (typeof navigator > 'u' || !navigator) return null;
    const r = [
        { key: 'edge', pattern: /Edge(?:\W+(\d+)\.(\d+)(?:\.(\d+))?)?/ },
        { key: 'ie', pattern: /MSIE(?:\W+(\d+)\.(\d+)(?:\.(\d+))?)?/ },
        { key: 'ie', pattern: /Trident(?:.*rv\:(\d+)\.(\d+)(?:\.(\d+))?)?/ },
        { key: 'chrome', pattern: /Chrome(?:\W+(\d+)\.(\d+)(?:\.(\d+))?)?/ },
        { key: 'firefox', pattern: /Firefox(?:\W+(\d+)\.(\d+)(?:\.(\d+))?)?/ },
        {
            key: 'safari',
            pattern:
                /(?:Version\W+(\d+)\.(\d+)(?:\.(\d+))?)?(?:\W+Mobile\S*)?\W+Safari/,
        },
    ];
    for (const { key: e, pattern: t } of r) {
        const n = t.exec(navigator.userAgent);
        if (n) {
            const i = n[1] || 0,
                s = n[2] || 0,
                o = n[3] || 0;
            return { browser: e, version: `${i}.${s}.${o}` };
        }
    }
    return null;
}
const ZP = (r) =>
        r === 'x32'
            ? 'x32'
            : r === 'x86_64' || r === 'x64'
              ? 'x64'
              : r === 'arm'
                ? 'arm'
                : r === 'aarch64' || r === 'arm64'
                  ? 'arm64'
                  : r
                    ? `other:${r}`
                    : 'unknown',
    $P = (r) => (
        (r = r.toLowerCase()),
        r.includes('ios')
            ? 'iOS'
            : r === 'android'
              ? 'Android'
              : r === 'darwin'
                ? 'MacOS'
                : r === 'win32'
                  ? 'Windows'
                  : r === 'freebsd'
                    ? 'FreeBSD'
                    : r === 'openbsd'
                      ? 'OpenBSD'
                      : r === 'linux'
                        ? 'Linux'
                        : r
                          ? `Other:${r}`
                          : 'Unknown'
    );
let JP;
const N$ = () => JP ?? (JP = U$()),
    F$ = (r) => {
        try {
            return JSON.parse(r);
        } catch {
            return;
        }
    },
    B$ = /^[a-z][a-z0-9+.-]*:/i,
    z$ = (r) => B$.test(r),
    V$ = (r) => new Promise((e) => setTimeout(e, r)),
    kw = (r, e) => {
        if (typeof e != 'number' || !Number.isInteger(e))
            throw new Ha(`${r} must be an integer`);
        if (e < 0) throw new Ha(`${r} must be a positive integer`);
        return e;
    },
    QM = (r) => {
        if (r instanceof Error) return r;
        if (typeof r == 'object' && r !== null)
            try {
                return new Error(JSON.stringify(r));
            } catch {}
        return new Error(r);
    },
    QP = (r) => {
        var e, t, n, i;
        if (typeof process < 'u')
            return (
                ((e = _p == null ? void 0 : _p[r]) == null
                    ? void 0
                    : e.trim()) ?? void 0
            );
        if (typeof Deno < 'u')
            return (i =
                (n = (t = Deno.env) == null ? void 0 : t.get) == null
                    ? void 0
                    : n.call(t, r)) == null
                ? void 0
                : i.trim();
    };
function H$(r) {
    if (!r) return !0;
    for (const e in r) return !1;
    return !0;
}
function G$(r, e) {
    return Object.prototype.hasOwnProperty.call(r, e);
}
function eL(r, e) {
    for (const t in e) {
        if (!G$(e, t)) continue;
        const n = t.toLowerCase();
        if (!n) continue;
        const i = e[t];
        i === null ? delete r[n] : i !== void 0 && (r[n] = i);
    }
}
function xp(r, ...e) {
    typeof process < 'u' &&
        (_p == null ? void 0 : _p.DEBUG) === 'true' &&
        console.log(`Groq:DEBUG:${r}`, ...e);
}
const W$ = () =>
        'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (r) => {
            const e = (Math.random() * 16) | 0;
            return (r === 'x' ? e : (e & 3) | 8).toString(16);
        }),
    j$ = () =>
        typeof window < 'u' &&
        typeof window.document < 'u' &&
        typeof navigator < 'u',
    X$ = (r) => typeof (r == null ? void 0 : r.get) == 'function',
    a_ = (r, e) => {
        var n;
        const t = e.toLowerCase();
        if (X$(r)) {
            const i =
                ((n = e[0]) == null ? void 0 : n.toUpperCase()) +
                e
                    .substring(1)
                    .replace(/([^\w])(\w)/g, (s, o, a) => o + a.toUpperCase());
            for (const s of [e, t, e.toUpperCase(), i]) {
                const o = r.get(s);
                if (o) return o;
            }
        }
        for (const [i, s] of Object.entries(r))
            if (i.toLowerCase() === t)
                return Array.isArray(s)
                    ? (s.length <= 1 ||
                          console.warn(
                              `Received ${s.length} entries for the ${e} header, using the first entry.`
                          ),
                      s[0])
                    : s;
    };
class Ka {
    constructor(e) {
        this._client = e;
    }
}
class Yk extends Ka {
    create(e, t) {
        return this._client.post('/openai/v1/audio/speech', {
            body: e,
            ...t,
            headers: {
                Accept: 'audio/wav',
                ...(t == null ? void 0 : t.headers),
            },
            __binaryResponse: !0,
        });
    }
}
class qk extends Ka {
    create(e, t) {
        return this._client.post(
            '/openai/v1/audio/transcriptions',
            mA({ body: e, ...t })
        );
    }
}
class Kk extends Ka {
    create(e, t) {
        return this._client.post(
            '/openai/v1/audio/translations',
            mA({ body: e, ...t })
        );
    }
}
let ov = class extends Ka {
    constructor() {
        super(...arguments),
            (this.speech = new Yk(this._client)),
            (this.transcriptions = new qk(this._client)),
            (this.translations = new Kk(this._client));
    }
};
ov.Speech = Yk;
ov.Transcriptions = qk;
ov.Translations = Kk;
class Zk extends Ka {
    create(e, t) {
        return this._client.post('/openai/v1/batches', { body: e, ...t });
    }
    retrieve(e, t) {
        return this._client.get(`/openai/v1/batches/${e}`, t);
    }
    list(e) {
        return this._client.get('/openai/v1/batches', e);
    }
    cancel(e, t) {
        return this._client.post(`/openai/v1/batches/${e}/cancel`, t);
    }
}
let $k = class extends Ka {
    create(e, t) {
        return this._client.post('/openai/v1/chat/completions', {
            body: e,
            ...t,
            stream: e.stream ?? !1,
        });
    }
};
class gA extends Ka {
    constructor() {
        super(...arguments), (this.completions = new $k(this._client));
    }
}
gA.Completions = $k;
class Jk extends Ka {}
class Qk extends Ka {
    create(e, t) {
        return this._client.post('/openai/v1/embeddings', { body: e, ...t });
    }
}
class eN extends Ka {
    create(e, t) {
        return this._client.post('/openai/v1/files', mA({ body: e, ...t }));
    }
    list(e) {
        return this._client.get('/openai/v1/files', e);
    }
    delete(e, t) {
        return this._client.delete(`/openai/v1/files/${e}`, t);
    }
    content(e, t) {
        return this._client.get(`/openai/v1/files/${e}/content`, {
            ...t,
            headers: {
                Accept: 'application/octet-stream',
                ...(t == null ? void 0 : t.headers),
            },
            __binaryResponse: !0,
        });
    }
    info(e, t) {
        return this._client.get(`/openai/v1/files/${e}`, t);
    }
}
class tN extends Ka {
    retrieve(e, t) {
        return this._client.get(`/openai/v1/models/${e}`, t);
    }
    list(e) {
        return this._client.get('/openai/v1/models', e);
    }
    delete(e, t) {
        return this._client.delete(`/openai/v1/models/${e}`, t);
    }
}
var nN;
class hi extends I$ {
    constructor({
        baseURL: e = QP('GROQ_BASE_URL'),
        apiKey: t = QP('GROQ_API_KEY'),
        ...n
    } = {}) {
        if (t === void 0)
            throw new Ha(
                "The GROQ_API_KEY environment variable is missing or empty; either provide it, or instantiate the Groq client with an apiKey option, like new Groq({ apiKey: 'My API Key' })."
            );
        const i = { apiKey: t, ...n, baseURL: e || 'https://api.groq.com' };
        if (!i.dangerouslyAllowBrowser && j$())
            throw new Ha(`It looks like you're running in a browser-like environment.

This is disabled by default, as it risks exposing your secret API credentials to attackers.
If you understand the risks and have appropriate mitigations in place,
you can set the \`dangerouslyAllowBrowser\` option to \`true\`, e.g.,

new Groq({ apiKey, dangerouslyAllowBrowser: true })`);
        super({
            baseURL: i.baseURL,
            timeout: i.timeout ?? 6e4,
            httpAgent: i.httpAgent,
            maxRetries: i.maxRetries,
            fetch: i.fetch,
        }),
            (this.completions = new Jk(this)),
            (this.chat = new gA(this)),
            (this.embeddings = new Qk(this)),
            (this.audio = new ov(this)),
            (this.models = new tN(this)),
            (this.batches = new Zk(this)),
            (this.files = new eN(this)),
            (this._options = i),
            (this.apiKey = t);
    }
    defaultQuery() {
        return this._options.defaultQuery;
    }
    defaultHeaders(e) {
        return { ...super.defaultHeaders(e), ...this._options.defaultHeaders };
    }
    authHeaders(e) {
        return { Authorization: `Bearer ${this.apiKey}` };
    }
}
nN = hi;
hi.Groq = nN;
hi.DEFAULT_TIMEOUT = 6e4;
hi.GroqError = Ha;
hi.APIError = ms;
hi.APIConnectionError = g1;
hi.APIConnectionTimeoutError = Ok;
hi.APIUserAbortError = $M;
hi.NotFoundError = Fk;
hi.ConflictError = Bk;
hi.RateLimitError = Vk;
hi.BadRequestError = Uk;
hi.AuthenticationError = kk;
hi.InternalServerError = Hk;
hi.PermissionDeniedError = Nk;
hi.UnprocessableEntityError = zk;
hi.toFile = jk;
hi.fileFromPath = Lk;
hi.Completions = Jk;
hi.Chat = gA;
hi.Embeddings = Qk;
hi.Audio = ov;
hi.Models = tN;
hi.Batches = Zk;
hi.Files = eN;
const Y$ = new hi({
    apiKey: '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',
    dangerouslyAllowBrowser: !0,
});
async function HQ(r, e) {
    var n, i;
    return (
        ((i = (n = (await q$(r, e)).choices[0]) == null ? void 0 : n.message) ==
        null
            ? void 0
            : i.content) || ''
    );
}
async function q$(r, e = '') {
    return Y$.chat.completions.create({
        messages: [{ role: 'user', content: r + e }],
        model: 'llama3-70b-8192',
    });
}
const K$ = ({ images: r, descriptions: e = [] }) => {
        const t = Il(nv, r),
            n = Y.useRef([]);
        return (
            n.current.length === 0 &&
                (n.current = t.map((s, o) => {
                    const a = (o / t.length) * Math.PI * 2,
                        l = Math.cos(a) * 1.8,
                        u = Math.sin(a) * 1.8,
                        f = -Math.random() * 2;
                    return [l, u, f];
                })),
            we.jsx(we.Fragment, {
                children: t.map((i, s) =>
                    we.jsxs(
                        'group',
                        {
                            position: n.current[s],
                            rotation: [0, 0, 0],
                            children: [
                                we.jsxs('mesh', {
                                    rotation: [0, 0, 0],
                                    children: [
                                        we.jsx('planeGeometry', {
                                            args: [1.4, 0.8],
                                        }),
                                        we.jsx('meshBasicMaterial', { map: i }),
                                    ],
                                }),
                                we.jsx(hk, {
                                    position: [0, -1.3, 0],
                                    fontSize: 0.3,
                                    color: 'white',
                                    anchorX: 'center',
                                    anchorY: 'middle',
                                    children: e[s] || '',
                                }),
                            ],
                        },
                        s
                    )
                ),
            })
        );
    },
    tL = [
        {
            id: '01',
            name: 'occasion',
            author: 'Projet pour les occasions',
            bg: '#e4cdac',
            width: 1,
            height: 1.618,
            modelScale: 8,
            modelPosition: [0, -0.7, -2],
            texture: '/images/room.jpg',
            images: [
                '/images/work/img-4.jfif',
                '/images/work/img-5.jfif',
                '/images/work/img-6.jfif',
            ],
        },
        {
            id: '02',
            name: 'Job',
            author: 'Dans mon environment de travail',
            bg: '#f5f5f5',
            width: 1,
            height: 1.618,
            modelSrc: 'fiesta_tea-transformed.glb',
            modelScale: 1,
            modelPosition: [0, -2, -3],
            texture: '/images/room1.jpg',
            images: [
                '/images/work/img-3.jfif',
                '/images/work/img-2.jfif',
                '/images/work/img-1.jfif',
            ],
        },
    ];
function Z$() {
    return we.jsxs('mesh', {
        rotation: [-Math.PI / 2, 0, 0],
        position: [0, -4, 0],
        receiveShadow: !0,
        children: [
            we.jsx('planeGeometry', { args: [100, 100] }),
            we.jsx('meshStandardMaterial', { color: '#eeeeee' }),
        ],
    });
}
const $$ = () => {
        const [r, e] = Y.useState(null),
            [t, n] = Y.useState(null);
        Aq(t);
        const i = Y.useRef(),
            s = zi((o) => o.scene);
        return (
            Y.useEffect(() => {
                var o;
                if (r) {
                    const a = new re();
                    (o = s.getObjectByName(r)) == null || o.getWorldPosition(a),
                        i.current.setLookAt(0, 0, 5, a.x, a.y, a.z, !0);
                } else i.current.setLookAt(0, 0, 10, 0, 0, 0, !0);
            }, [r]),
            we.jsxs(we.Fragment, {
                children: [
                    we.jsx('ambientLight', { intensity: 0.5 }),
                    we.jsx(wk, { preset: 'sunset' }),
                    we.jsx(wZ, { ref: i }),
                    tL.map((o, a) =>
                        we.jsx(
                            J$,
                            {
                                name: o.name,
                                color: '#000000',
                                texture: o.texture,
                                'position-x': a * 3 - (tL.length - 1),
                                'rotation-y': -Math.PI / 16,
                                active: r,
                                setActive: e,
                                hovered: t,
                                setHovered: n,
                                children: we.jsx(K$, { images: o.images }),
                            },
                            o.id
                        )
                    ),
                    we.jsx(Z$, {}),
                ],
            })
        );
    },
    J$ = ({
        children: r,
        texture: e,
        name: t,
        active: n,
        setActive: i,
        setHovered: s,
        ...o
    }) => {
        const a = aA(e),
            l = Y.useRef();
        return (
            Yp((u, f) => {
                const d = n === t;
                nK.damp(l.current, 'blend', d ? 1 : 0, 0.2, f);
            }),
            we.jsxs('group', {
                ...o,
                children: [
                    we.jsxs(hk, {
                        fontSize: 0.3,
                        position: [0, -1.3, 0.051],
                        anchorY: 'bottom',
                        children: [
                            t,
                            we.jsx('meshBasicMaterial', {
                                color: '#000000',
                                toneMapped: !0,
                            }),
                        ],
                    }),
                    we.jsx(bZ, {
                        name: t,
                        args: [2, 3, 0.1],
                        onDoubleClick: () => i(n === t ? null : t),
                        onPointerEnter: () => s(t),
                        onPointerLeave: () => s(null),
                        children: we.jsxs(XZ, {
                            ref: l,
                            side: To,
                            children: [
                                we.jsx('ambientLight', { intensity: 1 }),
                                we.jsx(wk, { preset: 'sunset' }),
                                r,
                                we.jsxs('mesh', {
                                    children: [
                                        we.jsx('sphereGeometry', {
                                            args: [5, 64, 64],
                                        }),
                                        we.jsx('meshStandardMaterial', {
                                            map: a,
                                            side: ps,
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    }),
                ],
            })
        );
    };
function Q$() {
    return we.jsxs(we.Fragment, {
        children: [
            we.jsxs('div', {
                children: [
                    we.jsx('div', {
                        className: 'absolute top-4 left-4 z-10',
                        children: we.jsxs('button', {
                            onClick: () => window.history.back(),
                            className:
                                'flex cursor-pointer items-center space-x-2 rounded-full bg-purple-600 px-6 py-2 text-white shadow-lg transition-all duration-300 hover:scale-105 hover:bg-purple-700',
                            children: [
                                we.jsx('span', { children: '←' }),
                                we.jsx('span', { children: 'Return' }),
                            ],
                        }),
                    }),
                    we.jsxs('div', {
                        className:
                            'bg-opacity-50 fade absolute right-6 bottom-8 z-10 w-[400px] -translate-x-[30px] transform rounded-2xl bg-black/80 p-8 text-left backdrop-blur-sm',
                        children: [
                            we.jsx('h1', {
                                className:
                                    'drop-shadow-glow mb-6 text-5xl font-extrabold tracking-tight text-purple-400',
                                children: 'Cimetière de projets',
                            }),
                            we.jsx('p', {
                                className:
                                    'mx-auto max-w-2xl text-sm leading-loose font-medium text-purple-100',
                                children:
                                    "Bienvenue dans le lieu de repos numérique des rêves abandonnés et du code oublié. Ici reposent les projets qui ont façonné notre voyage, bien qu'ils n'aient jamais vu la lumière du déploiement.",
                            }),
                        ],
                    }),
                ],
            }),
            we.jsxs(Tq, {
                shadows: !0,
                camera: { position: [0, 2, 10], fov: 30 },
                style: { width: '100vw', height: '100vh' },
                children: [
                    we.jsx('ambientLight', { intensity: 0.5 }),
                    we.jsx('directionalLight', {
                        position: [5, 10, 5],
                        intensity: 1,
                        castShadow: !0,
                    }),
                    we.jsx($$, {}),
                ],
            }),
        ],
    });
}
function eJ({ data: r, prevPositions: e }) {
    return we.jsx('div', {
        className: 'mt-10 w-full max-w-xl',
        children: we.jsx(LE, {
            children: r.map((t, n) => {
                const i = e[t.id],
                    s = i !== void 0 ? i - n : 0;
                return we.jsxs(
                    tI.div,
                    {
                        layout: !0,
                        initial: { opacity: 0, y: 30 },
                        animate: { opacity: 1, y: 0 },
                        exit: { opacity: 0, y: -20 },
                        transition: { duration: 0.5 },
                        className:
                            'mb-2 flex items-center justify-between rounded-lg border border-dotted border-gray-500 bg-white px-4 py-2',
                        children: [
                            we.jsxs('div', {
                                className: 'flex items-center gap-4',
                                children: [
                                    we.jsxs('span', {
                                        className:
                                            'text-lg font-bold text-gray-700',
                                        children: [n + 4, '.'],
                                    }),
                                    we.jsxs('div', {
                                        children: [
                                            we.jsx('div', {
                                                className:
                                                    'font-semibold text-gray-800',
                                                children: t.name,
                                            }),
                                            we.jsx('div', {
                                                className:
                                                    'text-sm text-gray-500 italic',
                                                children: t.description,
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                            we.jsxs('div', {
                                className: 'flex items-center gap-5',
                                children: [
                                    we.jsxs('div', {
                                        className: 'flex flex-col',
                                        children: [
                                            we.jsxs('div', {
                                                className:
                                                    'flex items-center gap-1 text-green-600',
                                                children: [
                                                    we.jsx(Tk, { size: 14 }),
                                                    we.jsx('span', {
                                                        className:
                                                            'text-[11px]',
                                                        children: t.positive,
                                                    }),
                                                ],
                                            }),
                                            we.jsxs('div', {
                                                className:
                                                    'flex items-center gap-1 text-red-500',
                                                children: [
                                                    we.jsx(Ek, { size: 14 }),
                                                    we.jsx('span', {
                                                        className:
                                                            'text-[11px]',
                                                        children: t.negative,
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                    s !== 0 &&
                                        we.jsx('div', {
                                            className: `mt-1 text-[20px] font-medium ${s > 0 ? 'text-green-500' : 'text-red-500'}`,
                                            children: s > 0 ? `+${s}` : s,
                                        }),
                                ],
                            }),
                        ],
                    },
                    t.id
                );
            }),
        }),
    });
}
const tJ = [
        {
            name: 'Alice Dupont',
            emotion: 'Soulagée',
            description: 'A quitté son emploi toxique avec grâce.',
            positive: 120,
            negative: 5,
        },
        {
            name: 'Bruno Martin',
            emotion: 'Motivé',
            description: 'A quitté pour lancer sa propre start-up.',
            positive: 105,
            negative: 10,
        },
        {
            name: 'Claire Renault',
            emotion: 'Triste',
            description: "A quitté une équipe qu'elle adorait.",
            positive: 95,
            negative: 20,
        },
        {
            name: 'David Petit',
            emotion: 'Soulagé',
            description: 'A quitté après un burn-out évité de justesse.',
            positive: 90,
            negative: 12,
        },
        {
            name: 'Emma Laurent',
            emotion: 'Motivée',
            description: 'A quitté pour voyager autour du monde.',
            positive: 85,
            negative: 15,
        },
        {
            name: 'Fabien Morel',
            emotion: 'Déterminé',
            description: 'A quitté pour reprendre ses études.',
            positive: 88,
            negative: 9,
        },
        {
            name: 'Gisèle Robin',
            emotion: 'Apaisée',
            description: 'A quitté un poste trop stressant.',
            positive: 78,
            negative: 6,
        },
        {
            name: 'Hugo Bernard',
            emotion: 'Excité',
            description: 'A quitté pour un nouveau poste à l’étranger.',
            positive: 110,
            negative: 8,
        },
        {
            name: 'Inès Faure',
            emotion: 'Nostalgique',
            description: 'A quitté après 10 ans dans la même entreprise.',
            positive: 70,
            negative: 14,
        },
        {
            name: 'Julien Lefèvre',
            emotion: 'Frustré',
            description: 'A quitté à cause d’un manque de reconnaissance.',
            positive: 65,
            negative: 25,
        },
        {
            name: 'Karima Boucher',
            emotion: 'Libérée',
            description: 'A quitté un environnement sexiste.',
            positive: 130,
            negative: 4,
        },
        {
            name: 'Loïc Dubois',
            emotion: 'Serein',
            description: 'A quitté en bons termes pour changer de voie.',
            positive: 92,
            negative: 7,
        },
        {
            name: 'Mélanie Girard',
            emotion: 'Optimiste',
            description: 'A quitté pour se lancer dans l’artisanat.',
            positive: 84,
            negative: 6,
        },
        {
            name: 'Nicolas Lemaitre',
            emotion: 'Indécis',
            description: 'A quitté sans plan précis, en quête de sens.',
            positive: 55,
            negative: 30,
        },
        {
            name: 'Océane Vidal',
            emotion: 'Heureuse',
            description: 'A quitté pour fonder une famille.',
            positive: 98,
            negative: 3,
        },
        {
            name: 'Paul Caron',
            emotion: 'Épuisé',
            description: 'A quitté après des mois de surcharge.',
            positive: 60,
            negative: 20,
        },
        {
            name: 'Quentin Noël',
            emotion: 'Ambitieux',
            description: 'A quitté pour monter un projet social.',
            positive: 102,
            negative: 9,
        },
        {
            name: 'Rania El Hadi',
            emotion: 'Fière',
            description: 'A quitté après avoir accompli ses objectifs.',
            positive: 99,
            negative: 5,
        },
    ],
    nJ = [
        'linear-gradient(to bottom, #ffffff 50%, #ffe57f 100%)',
        'linear-gradient(to bottom, #e0e0e0 50%, #e8dada 100%)',
        'linear-gradient(to bottom, #ffffff 50%, #ce93d8 100%)',
    ],
    iJ = {
        Heureux: we.jsx(y$, { className: 'text-yellow-700', size: 24 }),
        Calme: we.jsx(g$, { className: 'text-blue-700', size: 24 }),
        Concentré: we.jsx(h$, { className: 'text-purple-700', size: 24 }),
    };
function rJ({ data: r, index: e }) {
    const t = Y.useRef(null),
        n = (s) => {
            const o = t.current,
                a = o.getBoundingClientRect(),
                l = s.clientX - a.left,
                u = s.clientY - a.top,
                f = a.width / 2,
                d = a.height / 2,
                m = ((u - d) / d) * 10,
                v = ((l - f) / f) * 10;
            o.style.transform = `perspective(600px) rotateX(${-m}deg) rotateY(${v}deg) scale(1.03)`;
        },
        i = () => {
            const s = t.current;
            s.style.transform =
                'perspective(600px) rotateX(0deg) rotateY(0deg) scale(1)';
        };
    return we.jsxs('div', {
        ref: t,
        onMouseMove: n,
        onMouseLeave: i,
        className:
            'relative flex h-64 w-64 cursor-pointer flex-col items-center gap-3 rounded-xl p-4 transition-transform duration-200 ease-out',
        style: {
            background: nJ[e],
            transformStyle: 'preserve-3d',
            willChange: 'transform',
        },
        children: [
            e === 0 &&
                we.jsxs(we.Fragment, {
                    children: [
                        we.jsx('div', {
                            className:
                                'pointer-events-none absolute inset-0 z-0 flex items-start justify-center',
                            children: we.jsx('div', {
                                className:
                                    'sun-rays animate-spin-slow h-24 w-24 rounded-full bg-yellow-300 opacity-30 blur-2xl',
                            }),
                        }),
                        we.jsx('img', {
                            src: '/images/sad.GIF',
                            className:
                                'absolute top-[-40px] left-[58%] -translate-x-1/2 transform',
                            width: 60,
                        }),
                        we.jsx('img', {
                            src: '/images/sad.GIF',
                            className: 'absolute bottom-0 left-0',
                            width: 70,
                        }),
                        we.jsx('img', {
                            src: '/images/sad.GIF',
                            className: 'absolute right-0 bottom-0',
                            width: 70,
                        }),
                    ],
                }),
            e === 1 &&
                we.jsxs('div', {
                    className: 'pointer-events-none absolute inset-0 z-0',
                    children: [
                        we.jsx('img', {
                            src: '/images/calm.GIF',
                            className:
                                'absolute top-[-40px] left-[44%] -translate-x-1/2 transform',
                            width: 60,
                        }),
                        we.jsx('img', {
                            src: '/images/calm.GIF',
                            className: 'absolute bottom-0 left-0',
                            width: 70,
                        }),
                        we.jsx('img', {
                            src: '/images/calm.GIF',
                            className: 'absolute right-0 bottom-0',
                            width: 70,
                        }),
                    ],
                }),
            e === 2 &&
                we.jsxs('div', {
                    className: 'pointer-events-none absolute inset-0 z-0',
                    children: [
                        we.jsx('img', {
                            src: '/images/happy.gif',
                            className:
                                'absolute top-[-40px] left-[58%] -translate-x-1/2 transform',
                            width: 60,
                        }),
                        we.jsx('img', {
                            src: '/images/happy.gif',
                            className: 'absolute bottom-0 left-0',
                            width: 70,
                        }),
                        we.jsx('img', {
                            src: '/images/happy.gif',
                            className: 'absolute right-0 bottom-0',
                            width: 70,
                        }),
                    ],
                }),
            we.jsx('div', {
                className:
                    'absolute -top-4 z-10 rounded-full bg-white p-1 shadow-sm',
                children: we.jsx(c$, {
                    size: 24,
                    className:
                        e === 0
                            ? 'text-yellow-500'
                            : e === 1
                              ? 'text-blue-400'
                              : 'text-purple-400',
                }),
            }),
            we.jsx('div', {
                className: 'z-10 mt-4 text-lg font-bold text-gray-800',
                children: `Top ${e + 1}`,
            }),
            we.jsxs('div', {
                className: 'z-10 flex flex-col items-center',
                children: [
                    iJ[r.emotion],
                    we.jsx('span', {
                        className: 'mt-1 text-sm text-gray-700',
                        children: r.emotion,
                    }),
                ],
            }),
            we.jsx('p', {
                className:
                    'z-10 px-2 text-center text-[16px] font-bold text-gray-900',
                children: r.name,
            }),
            we.jsx('p', {
                className: 'z-10 px-2 text-center text-sm text-gray-600 italic',
                children: r.description,
            }),
            we.jsxs('div', {
                className: 'z-10 mt-2 flex items-center justify-between gap-4',
                children: [
                    we.jsxs('div', {
                        className: 'flex items-center gap-1 text-green-600',
                        children: [
                            we.jsx(Tk, { size: 16 }),
                            we.jsx('span', {
                                className: 'text-sm font-medium',
                                children: r.positive,
                            }),
                        ],
                    }),
                    we.jsxs('div', {
                        className: 'flex items-center gap-1 text-red-500',
                        children: [
                            we.jsx(Ek, { size: 16 }),
                            we.jsx('span', {
                                className: 'text-sm font-medium',
                                children: r.negative,
                            }),
                        ],
                    }),
                ],
            }),
        ],
    });
}
function sJ() {
    const [r, e] = Y.useState([]),
        [t, n] = Y.useState([]),
        [i, s] = Y.useState([]),
        [o, a] = Y.useState({});
    return (
        Y.useEffect(() => {
            const l = tJ.map((u, f) => ({ ...u, id: u.name || f }));
            e(l), a(l.reduce((u, f, d) => ((u[f.id] = d), u), {}));
        }, []),
        Y.useEffect(() => {
            const l = setInterval(() => {
                const f = [
                        ...[...r].map((m) => ({
                            ...m,
                            positive:
                                m.positive + Math.floor(Math.random() * 3),
                            negative:
                                m.negative + Math.floor(Math.random() * 2),
                        })),
                    ].sort(
                        (m, v) =>
                            v.positive - v.negative - (m.positive - m.negative)
                    ),
                    d = {};
                f.forEach((m, v) => {
                    d[m.id] = v;
                }),
                    a(d),
                    e(f),
                    n(f.slice(0, 3)),
                    s(f.slice(3));
            }, 2e3);
            return () => clearInterval(l);
        }, [r]),
        t.length === 0
            ? we.jsx('div', {
                  className:
                      'swipeUpDown flex h-screen w-full items-center justify-center',
                  children: we.jsx('div', {
                      className:
                          'h-12 w-12 animate-spin rounded-full border-4 border-gray-300 border-t-blue-600',
                  }),
              })
            : we.jsx('div', {
                  className: 'gradientBack1 swipeUpFade animate-swipe-down',
                  children: we.jsxs('div', {
                      className:
                          'pointBackground flex min-h-screen flex-col items-center justify-center bg-gray-200 py-10',
                      children: [
                          we.jsxs(qE, {
                              to: '/',
                              className:
                                  'fixed top-4 left-4 z-50 flex items-center gap-2 rounded-lg bg-white px-4 py-2 text-gray-700 shadow-md transition-colors hover:bg-gray-50',
                              children: [
                                  we.jsx(i$, { size: 20 }),
                                  we.jsx('span', { children: 'Retour' }),
                              ],
                          }),
                          we.jsx('h1', {
                              className:
                                  'mb-8 text-3xl font-bold text-gray-800',
                              children: 'Leaderboard',
                          }),
                          we.jsx('div', {
                              className: 'flex justify-center gap-6',
                              children: t.map((l, u) =>
                                  we.jsx(rJ, { data: l, index: u }, l.id)
                              ),
                          }),
                          we.jsx(eJ, { data: i, prevPositions: o }),
                      ],
                  }),
              })
    );
}
const oJ = Y.lazy(() => Do(() => import('./index-DnHVd1cl.js'), [])),
    aJ = Y.lazy(() => Do(() => import('./index-CBr9PoMc.js'), [])),
    lJ = Y.lazy(() => Do(() => import('./index-tddfIOAr.js'), [])),
    uJ = Y.lazy(() => Do(() => import('./index-EhSTEtEv.js'), [])),
    cJ = Y.lazy(() => Do(() => import('./index-BIHEAVb6.js'), [])),
    fJ = Y.lazy(() => Do(() => import('./index-DBIyG-bQ.js'), [])),
    hJ = Y.lazy(() => Do(() => import('./index-CJF7RnbO.js'), [])),
    dJ = Y.lazy(() => Do(() => import('./index-Bsn32gx-.js'), [])),
    pJ = Y.lazy(() => Do(() => import('./index-Dar7XAPS.js'), [])),
    mJ = Y.lazy(() => Do(() => import('./index-BXqpzs2A.js'), []));
Y.lazy(() => Do(() => Promise.resolve().then(() => vJ), void 0));
const gJ = Y.lazy(() =>
        Do(
            () => import('./index-BC3zyj99.js'),
            __vite__mapDeps([0, 1, 2, 3, 4, 5])
        )
    ),
    iN = () => (
        QN(),
        we.jsx(e6, {
            children: we.jsxs(LE, {
                mode: 'wait',
                children: [
                    we.jsx(c6, {}),
                    we.jsx(Y.Suspense, {
                        fallback: we.jsx(vD, {}),
                        children: we.jsxs(PV, {
                            children: [
                                we.jsx(ls, {
                                    path: '/',
                                    element: we.jsx(R_, {
                                        to: '/landing',
                                        replace: !0,
                                    }),
                                }),
                                we.jsxs(ls, {
                                    path: '/',
                                    element: we.jsx(oJ, {}),
                                    children: [
                                        we.jsx(ls, {
                                            path: 'landing/*',
                                            element: we.jsx(fJ, {}),
                                        }),
                                        we.jsx(ls, {
                                            path: 'auth/*',
                                            element: localStorage.getItem(
                                                'token'
                                            )
                                                ? we.jsx(R_, {
                                                      to: '/dashboard',
                                                      replace: !0,
                                                  })
                                                : we.jsx(aJ, {}),
                                        }),
                                        we.jsx(ls, {
                                            element: we.jsx(IH, {}),
                                            children: we.jsx(ls, {
                                                path: 'dashboard/*',
                                                element: we.jsx(lJ, {}),
                                            }),
                                        }),
                                        we.jsx(ls, {
                                            path: 'assitance/ai',
                                            element: we.jsx(cJ, {}),
                                        }),
                                        we.jsx(ls, {
                                            path: 'assitance/project-graveyard',
                                            element: we.jsx(Q$, {}),
                                        }),
                                        we.jsx(ls, {
                                            path: 'video/ia',
                                            element: we.jsx(pJ, {}),
                                        }),
                                        we.jsx(ls, {
                                            path: 'builder/*',
                                            element: we.jsx(hJ, {}),
                                        }),
                                        we.jsx(ls, {
                                            path: 'blog/*',
                                            element: we.jsx(dJ, {}),
                                        }),
                                        we.jsx(ls, {
                                            path: 'remember/*',
                                            element: we.jsx(mJ, {}),
                                        }),
                                        we.jsx(ls, {
                                            path: 'leaderboard/*',
                                            element: we.jsx(sJ, {}),
                                        }),
                                        we.jsx(ls, {
                                            path: 'redirect/*',
                                            element: we.jsx(uJ, {}),
                                        }),
                                        we.jsx(ls, {
                                            path: '*',
                                            element: we.jsx(gJ, {}),
                                        }),
                                    ],
                                }),
                            ],
                        }),
                    }),
                ],
            }),
        })
    ),
    vJ = Object.freeze(
        Object.defineProperty(
            { __proto__: null, default: iN },
            Symbol.toStringTag,
            { value: 'Module' }
        )
    ),
    cn = (r) => typeof r == 'string',
    _g = () => {
        let r, e;
        const t = new Promise((n, i) => {
            (r = n), (e = i);
        });
        return (t.resolve = r), (t.reject = e), t;
    },
    nL = (r) => (r == null ? '' : '' + r),
    yJ = (r, e, t) => {
        r.forEach((n) => {
            e[n] && (t[n] = e[n]);
        });
    },
    _J = /###/g,
    iL = (r) => (r && r.indexOf('###') > -1 ? r.replace(_J, '.') : r),
    rL = (r) => !r || cn(r),
    Zg = (r, e, t) => {
        const n = cn(e) ? e.split('.') : e;
        let i = 0;
        for (; i < n.length - 1; ) {
            if (rL(r)) return {};
            const s = iL(n[i]);
            !r[s] && t && (r[s] = new t()),
                Object.prototype.hasOwnProperty.call(r, s)
                    ? (r = r[s])
                    : (r = {}),
                ++i;
        }
        return rL(r) ? {} : { obj: r, k: iL(n[i]) };
    },
    sL = (r, e, t) => {
        const { obj: n, k: i } = Zg(r, e, Object);
        if (n !== void 0 || e.length === 1) {
            n[i] = t;
            return;
        }
        let s = e[e.length - 1],
            o = e.slice(0, e.length - 1),
            a = Zg(r, o, Object);
        for (; a.obj === void 0 && o.length; )
            (s = `${o[o.length - 1]}.${s}`),
                (o = o.slice(0, o.length - 1)),
                (a = Zg(r, o, Object)),
                a != null &&
                    a.obj &&
                    typeof a.obj[`${a.k}.${s}`] < 'u' &&
                    (a.obj = void 0);
        a.obj[`${a.k}.${s}`] = t;
    },
    xJ = (r, e, t, n) => {
        const { obj: i, k: s } = Zg(r, e, Object);
        (i[s] = i[s] || []), i[s].push(t);
    },
    vx = (r, e) => {
        const { obj: t, k: n } = Zg(r, e);
        if (t && Object.prototype.hasOwnProperty.call(t, n)) return t[n];
    },
    SJ = (r, e, t) => {
        const n = vx(r, t);
        return n !== void 0 ? n : vx(e, t);
    },
    rN = (r, e, t) => {
        for (const n in e)
            n !== '__proto__' &&
                n !== 'constructor' &&
                (n in r
                    ? cn(r[n]) ||
                      r[n] instanceof String ||
                      cn(e[n]) ||
                      e[n] instanceof String
                        ? t && (r[n] = e[n])
                        : rN(r[n], e[n], t)
                    : (r[n] = e[n]));
        return r;
    },
    jd = (r) => r.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, '\\$&');
var wJ = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;',
    '/': '&#x2F;',
};
const MJ = (r) => (cn(r) ? r.replace(/[&<>"'\/]/g, (e) => wJ[e]) : r);
class EJ {
    constructor(e) {
        (this.capacity = e),
            (this.regExpMap = new Map()),
            (this.regExpQueue = []);
    }
    getRegExp(e) {
        const t = this.regExpMap.get(e);
        if (t !== void 0) return t;
        const n = new RegExp(e);
        return (
            this.regExpQueue.length === this.capacity &&
                this.regExpMap.delete(this.regExpQueue.shift()),
            this.regExpMap.set(e, n),
            this.regExpQueue.push(e),
            n
        );
    }
}
const TJ = [' ', ',', '?', '!', ';'],
    AJ = new EJ(20),
    bJ = (r, e, t) => {
        (e = e || ''), (t = t || '');
        const n = TJ.filter((o) => e.indexOf(o) < 0 && t.indexOf(o) < 0);
        if (n.length === 0) return !0;
        const i = AJ.getRegExp(
            `(${n.map((o) => (o === '?' ? '\\?' : o)).join('|')})`
        );
        let s = !i.test(r);
        if (!s) {
            const o = r.indexOf(t);
            o > 0 && !i.test(r.substring(0, o)) && (s = !0);
        }
        return s;
    },
    eE = (r, e, t = '.') => {
        if (!r) return;
        if (r[e])
            return Object.prototype.hasOwnProperty.call(r, e) ? r[e] : void 0;
        const n = e.split(t);
        let i = r;
        for (let s = 0; s < n.length; ) {
            if (!i || typeof i != 'object') return;
            let o,
                a = '';
            for (let l = s; l < n.length; ++l)
                if (
                    (l !== s && (a += t), (a += n[l]), (o = i[a]), o !== void 0)
                ) {
                    if (
                        ['string', 'number', 'boolean'].indexOf(typeof o) >
                            -1 &&
                        l < n.length - 1
                    )
                        continue;
                    s += l - s + 1;
                    break;
                }
            i = o;
        }
        return i;
    },
    yx = (r) => (r == null ? void 0 : r.replace('_', '-')),
    CJ = {
        type: 'logger',
        log(r) {
            this.output('log', r);
        },
        warn(r) {
            this.output('warn', r);
        },
        error(r) {
            this.output('error', r);
        },
        output(r, e) {
            var t, n;
            (n =
                (t = console == null ? void 0 : console[r]) == null
                    ? void 0
                    : t.apply) == null || n.call(t, console, e);
        },
    };
class _x {
    constructor(e, t = {}) {
        this.init(e, t);
    }
    init(e, t = {}) {
        (this.prefix = t.prefix || 'i18next:'),
            (this.logger = e || CJ),
            (this.options = t),
            (this.debug = t.debug);
    }
    log(...e) {
        return this.forward(e, 'log', '', !0);
    }
    warn(...e) {
        return this.forward(e, 'warn', '', !0);
    }
    error(...e) {
        return this.forward(e, 'error', '');
    }
    deprecate(...e) {
        return this.forward(e, 'warn', 'WARNING DEPRECATED: ', !0);
    }
    forward(e, t, n, i) {
        return i && !this.debug
            ? null
            : (cn(e[0]) && (e[0] = `${n}${this.prefix} ${e[0]}`),
              this.logger[t](e));
    }
    create(e) {
        return new _x(this.logger, {
            prefix: `${this.prefix}:${e}:`,
            ...this.options,
        });
    }
    clone(e) {
        return (
            (e = e || this.options),
            (e.prefix = e.prefix || this.prefix),
            new _x(this.logger, e)
        );
    }
}
var Sl = new _x();
class _1 {
    constructor() {
        this.observers = {};
    }
    on(e, t) {
        return (
            e.split(' ').forEach((n) => {
                this.observers[n] || (this.observers[n] = new Map());
                const i = this.observers[n].get(t) || 0;
                this.observers[n].set(t, i + 1);
            }),
            this
        );
    }
    off(e, t) {
        if (this.observers[e]) {
            if (!t) {
                delete this.observers[e];
                return;
            }
            this.observers[e].delete(t);
        }
    }
    emit(e, ...t) {
        this.observers[e] &&
            Array.from(this.observers[e].entries()).forEach(([i, s]) => {
                for (let o = 0; o < s; o++) i(...t);
            }),
            this.observers['*'] &&
                Array.from(this.observers['*'].entries()).forEach(([i, s]) => {
                    for (let o = 0; o < s; o++) i.apply(i, [e, ...t]);
                });
    }
}
class oL extends _1 {
    constructor(e, t = { ns: ['translation'], defaultNS: 'translation' }) {
        super(),
            (this.data = e || {}),
            (this.options = t),
            this.options.keySeparator === void 0 &&
                (this.options.keySeparator = '.'),
            this.options.ignoreJSONStructure === void 0 &&
                (this.options.ignoreJSONStructure = !0);
    }
    addNamespaces(e) {
        this.options.ns.indexOf(e) < 0 && this.options.ns.push(e);
    }
    removeNamespaces(e) {
        const t = this.options.ns.indexOf(e);
        t > -1 && this.options.ns.splice(t, 1);
    }
    getResource(e, t, n, i = {}) {
        var u, f;
        const s =
                i.keySeparator !== void 0
                    ? i.keySeparator
                    : this.options.keySeparator,
            o =
                i.ignoreJSONStructure !== void 0
                    ? i.ignoreJSONStructure
                    : this.options.ignoreJSONStructure;
        let a;
        e.indexOf('.') > -1
            ? (a = e.split('.'))
            : ((a = [e, t]),
              n &&
                  (Array.isArray(n)
                      ? a.push(...n)
                      : cn(n) && s
                        ? a.push(...n.split(s))
                        : a.push(n)));
        const l = vx(this.data, a);
        return (
            !l &&
                !t &&
                !n &&
                e.indexOf('.') > -1 &&
                ((e = a[0]), (t = a[1]), (n = a.slice(2).join('.'))),
            l || !o || !cn(n)
                ? l
                : eE(
                      (f = (u = this.data) == null ? void 0 : u[e]) == null
                          ? void 0
                          : f[t],
                      n,
                      s
                  )
        );
    }
    addResource(e, t, n, i, s = { silent: !1 }) {
        const o =
            s.keySeparator !== void 0
                ? s.keySeparator
                : this.options.keySeparator;
        let a = [e, t];
        n && (a = a.concat(o ? n.split(o) : n)),
            e.indexOf('.') > -1 && ((a = e.split('.')), (i = t), (t = a[1])),
            this.addNamespaces(t),
            sL(this.data, a, i),
            s.silent || this.emit('added', e, t, n, i);
    }
    addResources(e, t, n, i = { silent: !1 }) {
        for (const s in n)
            (cn(n[s]) || Array.isArray(n[s])) &&
                this.addResource(e, t, s, n[s], { silent: !0 });
        i.silent || this.emit('added', e, t, n);
    }
    addResourceBundle(e, t, n, i, s, o = { silent: !1, skipCopy: !1 }) {
        let a = [e, t];
        e.indexOf('.') > -1 &&
            ((a = e.split('.')), (i = n), (n = t), (t = a[1])),
            this.addNamespaces(t);
        let l = vx(this.data, a) || {};
        o.skipCopy || (n = JSON.parse(JSON.stringify(n))),
            i ? rN(l, n, s) : (l = { ...l, ...n }),
            sL(this.data, a, l),
            o.silent || this.emit('added', e, t, n);
    }
    removeResourceBundle(e, t) {
        this.hasResourceBundle(e, t) && delete this.data[e][t],
            this.removeNamespaces(t),
            this.emit('removed', e, t);
    }
    hasResourceBundle(e, t) {
        return this.getResource(e, t) !== void 0;
    }
    getResourceBundle(e, t) {
        return t || (t = this.options.defaultNS), this.getResource(e, t);
    }
    getDataByLanguage(e) {
        return this.data[e];
    }
    hasLanguageSomeTranslations(e) {
        const t = this.getDataByLanguage(e);
        return !!((t && Object.keys(t)) || []).find(
            (i) => t[i] && Object.keys(t[i]).length > 0
        );
    }
    toJSON() {
        return this.data;
    }
}
var sN = {
    processors: {},
    addPostProcessor(r) {
        this.processors[r.name] = r;
    },
    handle(r, e, t, n, i) {
        return (
            r.forEach((s) => {
                var o;
                e =
                    ((o = this.processors[s]) == null
                        ? void 0
                        : o.process(e, t, n, i)) ?? e;
            }),
            e
        );
    },
};
const aL = {},
    lL = (r) => !cn(r) && typeof r != 'boolean' && typeof r != 'number';
class xx extends _1 {
    constructor(e, t = {}) {
        super(),
            yJ(
                [
                    'resourceStore',
                    'languageUtils',
                    'pluralResolver',
                    'interpolator',
                    'backendConnector',
                    'i18nFormat',
                    'utils',
                ],
                e,
                this
            ),
            (this.options = t),
            this.options.keySeparator === void 0 &&
                (this.options.keySeparator = '.'),
            (this.logger = Sl.create('translator'));
    }
    changeLanguage(e) {
        e && (this.language = e);
    }
    exists(e, t = { interpolation: {} }) {
        const n = { ...t };
        if (e == null) return !1;
        const i = this.resolve(e, n);
        return (i == null ? void 0 : i.res) !== void 0;
    }
    extractFromKey(e, t) {
        let n =
            t.nsSeparator !== void 0 ? t.nsSeparator : this.options.nsSeparator;
        n === void 0 && (n = ':');
        const i =
            t.keySeparator !== void 0
                ? t.keySeparator
                : this.options.keySeparator;
        let s = t.ns || this.options.defaultNS || [];
        const o = n && e.indexOf(n) > -1,
            a =
                !this.options.userDefinedKeySeparator &&
                !t.keySeparator &&
                !this.options.userDefinedNsSeparator &&
                !t.nsSeparator &&
                !bJ(e, n, i);
        if (o && !a) {
            const l = e.match(this.interpolator.nestingRegexp);
            if (l && l.length > 0)
                return { key: e, namespaces: cn(s) ? [s] : s };
            const u = e.split(n);
            (n !== i || (n === i && this.options.ns.indexOf(u[0]) > -1)) &&
                (s = u.shift()),
                (e = u.join(i));
        }
        return { key: e, namespaces: cn(s) ? [s] : s };
    }
    translate(e, t, n) {
        let i = typeof t == 'object' ? { ...t } : t;
        if (
            (typeof i != 'object' &&
                this.options.overloadTranslationOptionHandler &&
                (i = this.options.overloadTranslationOptionHandler(arguments)),
            typeof options == 'object' && (i = { ...i }),
            i || (i = {}),
            e == null)
        )
            return '';
        Array.isArray(e) || (e = [String(e)]);
        const s =
                i.returnDetails !== void 0
                    ? i.returnDetails
                    : this.options.returnDetails,
            o =
                i.keySeparator !== void 0
                    ? i.keySeparator
                    : this.options.keySeparator,
            { key: a, namespaces: l } = this.extractFromKey(e[e.length - 1], i),
            u = l[l.length - 1];
        let f =
            i.nsSeparator !== void 0 ? i.nsSeparator : this.options.nsSeparator;
        f === void 0 && (f = ':');
        const d = i.lng || this.language,
            m =
                i.appendNamespaceToCIMode ||
                this.options.appendNamespaceToCIMode;
        if ((d == null ? void 0 : d.toLowerCase()) === 'cimode')
            return m
                ? s
                    ? {
                          res: `${u}${f}${a}`,
                          usedKey: a,
                          exactUsedKey: a,
                          usedLng: d,
                          usedNS: u,
                          usedParams: this.getUsedParamsDetails(i),
                      }
                    : `${u}${f}${a}`
                : s
                  ? {
                        res: a,
                        usedKey: a,
                        exactUsedKey: a,
                        usedLng: d,
                        usedNS: u,
                        usedParams: this.getUsedParamsDetails(i),
                    }
                  : a;
        const v = this.resolve(e, i);
        let _ = v == null ? void 0 : v.res;
        const S = (v == null ? void 0 : v.usedKey) || a,
            w = (v == null ? void 0 : v.exactUsedKey) || a,
            x = ['[object Number]', '[object Function]', '[object RegExp]'],
            A =
                i.joinArrays !== void 0
                    ? i.joinArrays
                    : this.options.joinArrays,
            T = !this.i18nFormat || this.i18nFormat.handleAsObject,
            b = i.count !== void 0 && !cn(i.count),
            P = xx.hasDefaultValue(i),
            L = b ? this.pluralResolver.getSuffix(d, i.count, i) : '',
            D =
                i.ordinal && b
                    ? this.pluralResolver.getSuffix(d, i.count, { ordinal: !1 })
                    : '',
            O = b && !i.ordinal && i.count === 0,
            I =
                (O && i[`defaultValue${this.options.pluralSeparator}zero`]) ||
                i[`defaultValue${L}`] ||
                i[`defaultValue${D}`] ||
                i.defaultValue;
        let U = _;
        T && !_ && P && (U = I);
        const H = lL(U),
            W = Object.prototype.toString.apply(U);
        if (T && U && H && x.indexOf(W) < 0 && !(cn(A) && Array.isArray(U))) {
            if (!i.returnObjects && !this.options.returnObjects) {
                this.options.returnedObjectHandler ||
                    this.logger.warn(
                        'accessing an object - but returnObjects options is not enabled!'
                    );
                const q = this.options.returnedObjectHandler
                    ? this.options.returnedObjectHandler(S, U, { ...i, ns: l })
                    : `key '${a} (${this.language})' returned an object instead of string.`;
                return s
                    ? ((v.res = q),
                      (v.usedParams = this.getUsedParamsDetails(i)),
                      v)
                    : q;
            }
            if (o) {
                const q = Array.isArray(U),
                    K = q ? [] : {},
                    le = q ? w : S;
                for (const ee in U)
                    if (Object.prototype.hasOwnProperty.call(U, ee)) {
                        const de = `${le}${o}${ee}`;
                        P && !_
                            ? (K[ee] = this.translate(de, {
                                  ...i,
                                  defaultValue: lL(I) ? I[ee] : void 0,
                                  joinArrays: !1,
                                  ns: l,
                              }))
                            : (K[ee] = this.translate(de, {
                                  ...i,
                                  joinArrays: !1,
                                  ns: l,
                              })),
                            K[ee] === de && (K[ee] = U[ee]);
                    }
                _ = K;
            }
        } else if (T && cn(A) && Array.isArray(_))
            (_ = _.join(A)), _ && (_ = this.extendTranslation(_, e, i, n));
        else {
            let q = !1,
                K = !1;
            !this.isValidLookup(_) && P && ((q = !0), (_ = I)),
                this.isValidLookup(_) || ((K = !0), (_ = a));
            const ee =
                    (i.missingKeyNoValueFallbackToKey ||
                        this.options.missingKeyNoValueFallbackToKey) &&
                    K
                        ? void 0
                        : _,
                de = P && I !== _ && this.options.updateMissing;
            if (K || q || de) {
                if (
                    (this.logger.log(
                        de ? 'updateKey' : 'missingKey',
                        d,
                        u,
                        a,
                        de ? I : _
                    ),
                    o)
                ) {
                    const F = this.resolve(a, { ...i, keySeparator: !1 });
                    F &&
                        F.res &&
                        this.logger.warn(
                            'Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.'
                        );
                }
                let Z = [];
                const se = this.languageUtils.getFallbackCodes(
                    this.options.fallbackLng,
                    i.lng || this.language
                );
                if (this.options.saveMissingTo === 'fallback' && se && se[0])
                    for (let F = 0; F < se.length; F++) Z.push(se[F]);
                else
                    this.options.saveMissingTo === 'all'
                        ? (Z = this.languageUtils.toResolveHierarchy(
                              i.lng || this.language
                          ))
                        : Z.push(i.lng || this.language);
                const J = (F, $, fe) => {
                    var ae;
                    const ne = P && fe !== _ ? fe : ee;
                    this.options.missingKeyHandler
                        ? this.options.missingKeyHandler(F, u, $, ne, de, i)
                        : (ae = this.backendConnector) != null &&
                          ae.saveMissing &&
                          this.backendConnector.saveMissing(F, u, $, ne, de, i),
                        this.emit('missingKey', F, u, $, _);
                };
                this.options.saveMissing &&
                    (this.options.saveMissingPlurals && b
                        ? Z.forEach((F) => {
                              const $ = this.pluralResolver.getSuffixes(F, i);
                              O &&
                                  i[
                                      `defaultValue${this.options.pluralSeparator}zero`
                                  ] &&
                                  $.indexOf(
                                      `${this.options.pluralSeparator}zero`
                                  ) < 0 &&
                                  $.push(`${this.options.pluralSeparator}zero`),
                                  $.forEach((fe) => {
                                      J(
                                          [F],
                                          a + fe,
                                          i[`defaultValue${fe}`] || I
                                      );
                                  });
                          })
                        : J(Z, a, I));
            }
            (_ = this.extendTranslation(_, e, i, v, n)),
                K &&
                    _ === a &&
                    this.options.appendNamespaceToMissingKey &&
                    (_ = `${u}${f}${a}`),
                (K || q) &&
                    this.options.parseMissingKeyHandler &&
                    (_ = this.options.parseMissingKeyHandler(
                        this.options.appendNamespaceToMissingKey
                            ? `${u}${f}${a}`
                            : a,
                        q ? _ : void 0,
                        i
                    ));
        }
        return s
            ? ((v.res = _), (v.usedParams = this.getUsedParamsDetails(i)), v)
            : _;
    }
    extendTranslation(e, t, n, i, s) {
        var l, u;
        if ((l = this.i18nFormat) != null && l.parse)
            e = this.i18nFormat.parse(
                e,
                { ...this.options.interpolation.defaultVariables, ...n },
                n.lng || this.language || i.usedLng,
                i.usedNS,
                i.usedKey,
                { resolved: i }
            );
        else if (!n.skipInterpolation) {
            n.interpolation &&
                this.interpolator.init({
                    ...n,
                    interpolation: {
                        ...this.options.interpolation,
                        ...n.interpolation,
                    },
                });
            const f =
                cn(e) &&
                (((u = n == null ? void 0 : n.interpolation) == null
                    ? void 0
                    : u.skipOnVariables) !== void 0
                    ? n.interpolation.skipOnVariables
                    : this.options.interpolation.skipOnVariables);
            let d;
            if (f) {
                const v = e.match(this.interpolator.nestingRegexp);
                d = v && v.length;
            }
            let m = n.replace && !cn(n.replace) ? n.replace : n;
            if (
                (this.options.interpolation.defaultVariables &&
                    (m = {
                        ...this.options.interpolation.defaultVariables,
                        ...m,
                    }),
                (e = this.interpolator.interpolate(
                    e,
                    m,
                    n.lng || this.language || i.usedLng,
                    n
                )),
                f)
            ) {
                const v = e.match(this.interpolator.nestingRegexp),
                    _ = v && v.length;
                d < _ && (n.nest = !1);
            }
            !n.lng && i && i.res && (n.lng = this.language || i.usedLng),
                n.nest !== !1 &&
                    (e = this.interpolator.nest(
                        e,
                        (...v) =>
                            (s == null ? void 0 : s[0]) === v[0] && !n.context
                                ? (this.logger.warn(
                                      `It seems you are nesting recursively key: ${v[0]} in key: ${t[0]}`
                                  ),
                                  null)
                                : this.translate(...v, t),
                        n
                    )),
                n.interpolation && this.interpolator.reset();
        }
        const o = n.postProcess || this.options.postProcess,
            a = cn(o) ? [o] : o;
        return (
            e != null &&
                a != null &&
                a.length &&
                n.applyPostProcessor !== !1 &&
                (e = sN.handle(
                    a,
                    e,
                    t,
                    this.options && this.options.postProcessPassResolved
                        ? {
                              i18nResolved: {
                                  ...i,
                                  usedParams: this.getUsedParamsDetails(n),
                              },
                              ...n,
                          }
                        : n,
                    this
                )),
            e
        );
    }
    resolve(e, t = {}) {
        let n, i, s, o, a;
        return (
            cn(e) && (e = [e]),
            e.forEach((l) => {
                if (this.isValidLookup(n)) return;
                const u = this.extractFromKey(l, t),
                    f = u.key;
                i = f;
                let d = u.namespaces;
                this.options.fallbackNS &&
                    (d = d.concat(this.options.fallbackNS));
                const m = t.count !== void 0 && !cn(t.count),
                    v = m && !t.ordinal && t.count === 0,
                    _ =
                        t.context !== void 0 &&
                        (cn(t.context) || typeof t.context == 'number') &&
                        t.context !== '',
                    S = t.lngs
                        ? t.lngs
                        : this.languageUtils.toResolveHierarchy(
                              t.lng || this.language,
                              t.fallbackLng
                          );
                d.forEach((w) => {
                    var x, A;
                    this.isValidLookup(n) ||
                        ((a = w),
                        !aL[`${S[0]}-${w}`] &&
                            (x = this.utils) != null &&
                            x.hasLoadedNamespace &&
                            !(
                                (A = this.utils) != null &&
                                A.hasLoadedNamespace(a)
                            ) &&
                            ((aL[`${S[0]}-${w}`] = !0),
                            this.logger.warn(
                                `key "${i}" for languages "${S.join(', ')}" won't get resolved as namespace "${a}" was not yet loaded`,
                                'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!'
                            )),
                        S.forEach((T) => {
                            var L;
                            if (this.isValidLookup(n)) return;
                            o = T;
                            const b = [f];
                            if (
                                (L = this.i18nFormat) != null &&
                                L.addLookupKeys
                            )
                                this.i18nFormat.addLookupKeys(b, f, T, w, t);
                            else {
                                let D;
                                m &&
                                    (D = this.pluralResolver.getSuffix(
                                        T,
                                        t.count,
                                        t
                                    ));
                                const O = `${this.options.pluralSeparator}zero`,
                                    I = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;
                                if (
                                    (m &&
                                        (b.push(f + D),
                                        t.ordinal &&
                                            D.indexOf(I) === 0 &&
                                            b.push(
                                                f +
                                                    D.replace(
                                                        I,
                                                        this.options
                                                            .pluralSeparator
                                                    )
                                            ),
                                        v && b.push(f + O)),
                                    _)
                                ) {
                                    const U = `${f}${this.options.contextSeparator}${t.context}`;
                                    b.push(U),
                                        m &&
                                            (b.push(U + D),
                                            t.ordinal &&
                                                D.indexOf(I) === 0 &&
                                                b.push(
                                                    U +
                                                        D.replace(
                                                            I,
                                                            this.options
                                                                .pluralSeparator
                                                        )
                                                ),
                                            v && b.push(U + O));
                                }
                            }
                            let P;
                            for (; (P = b.pop()); )
                                this.isValidLookup(n) ||
                                    ((s = P),
                                    (n = this.getResource(T, w, P, t)));
                        }));
                });
            }),
            { res: n, usedKey: i, exactUsedKey: s, usedLng: o, usedNS: a }
        );
    }
    isValidLookup(e) {
        return (
            e !== void 0 &&
            !(!this.options.returnNull && e === null) &&
            !(!this.options.returnEmptyString && e === '')
        );
    }
    getResource(e, t, n, i = {}) {
        var s;
        return (s = this.i18nFormat) != null && s.getResource
            ? this.i18nFormat.getResource(e, t, n, i)
            : this.resourceStore.getResource(e, t, n, i);
    }
    getUsedParamsDetails(e = {}) {
        const t = [
                'defaultValue',
                'ordinal',
                'context',
                'replace',
                'lng',
                'lngs',
                'fallbackLng',
                'ns',
                'keySeparator',
                'nsSeparator',
                'returnObjects',
                'returnDetails',
                'joinArrays',
                'postProcess',
                'interpolation',
            ],
            n = e.replace && !cn(e.replace);
        let i = n ? e.replace : e;
        if (
            (n && typeof e.count < 'u' && (i.count = e.count),
            this.options.interpolation.defaultVariables &&
                (i = { ...this.options.interpolation.defaultVariables, ...i }),
            !n)
        ) {
            i = { ...i };
            for (const s of t) delete i[s];
        }
        return i;
    }
    static hasDefaultValue(e) {
        const t = 'defaultValue';
        for (const n in e)
            if (
                Object.prototype.hasOwnProperty.call(e, n) &&
                t === n.substring(0, t.length) &&
                e[n] !== void 0
            )
                return !0;
        return !1;
    }
}
class uL {
    constructor(e) {
        (this.options = e),
            (this.supportedLngs = this.options.supportedLngs || !1),
            (this.logger = Sl.create('languageUtils'));
    }
    getScriptPartFromCode(e) {
        if (((e = yx(e)), !e || e.indexOf('-') < 0)) return null;
        const t = e.split('-');
        return t.length === 2 ||
            (t.pop(), t[t.length - 1].toLowerCase() === 'x')
            ? null
            : this.formatLanguageCode(t.join('-'));
    }
    getLanguagePartFromCode(e) {
        if (((e = yx(e)), !e || e.indexOf('-') < 0)) return e;
        const t = e.split('-');
        return this.formatLanguageCode(t[0]);
    }
    formatLanguageCode(e) {
        if (cn(e) && e.indexOf('-') > -1) {
            let t;
            try {
                t = Intl.getCanonicalLocales(e)[0];
            } catch {}
            return (
                t && this.options.lowerCaseLng && (t = t.toLowerCase()),
                t || (this.options.lowerCaseLng ? e.toLowerCase() : e)
            );
        }
        return this.options.cleanCode || this.options.lowerCaseLng
            ? e.toLowerCase()
            : e;
    }
    isSupportedCode(e) {
        return (
            (this.options.load === 'languageOnly' ||
                this.options.nonExplicitSupportedLngs) &&
                (e = this.getLanguagePartFromCode(e)),
            !this.supportedLngs ||
                !this.supportedLngs.length ||
                this.supportedLngs.indexOf(e) > -1
        );
    }
    getBestMatchFromCodes(e) {
        if (!e) return null;
        let t;
        return (
            e.forEach((n) => {
                if (t) return;
                const i = this.formatLanguageCode(n);
                (!this.options.supportedLngs || this.isSupportedCode(i)) &&
                    (t = i);
            }),
            !t &&
                this.options.supportedLngs &&
                e.forEach((n) => {
                    if (t) return;
                    const i = this.getScriptPartFromCode(n);
                    if (this.isSupportedCode(i)) return (t = i);
                    const s = this.getLanguagePartFromCode(n);
                    if (this.isSupportedCode(s)) return (t = s);
                    t = this.options.supportedLngs.find((o) => {
                        if (o === s) return o;
                        if (
                            !(o.indexOf('-') < 0 && s.indexOf('-') < 0) &&
                            ((o.indexOf('-') > 0 &&
                                s.indexOf('-') < 0 &&
                                o.substring(0, o.indexOf('-')) === s) ||
                                (o.indexOf(s) === 0 && s.length > 1))
                        )
                            return o;
                    });
                }),
            t || (t = this.getFallbackCodes(this.options.fallbackLng)[0]),
            t
        );
    }
    getFallbackCodes(e, t) {
        if (!e) return [];
        if (
            (typeof e == 'function' && (e = e(t)),
            cn(e) && (e = [e]),
            Array.isArray(e))
        )
            return e;
        if (!t) return e.default || [];
        let n = e[t];
        return (
            n || (n = e[this.getScriptPartFromCode(t)]),
            n || (n = e[this.formatLanguageCode(t)]),
            n || (n = e[this.getLanguagePartFromCode(t)]),
            n || (n = e.default),
            n || []
        );
    }
    toResolveHierarchy(e, t) {
        const n = this.getFallbackCodes(t || this.options.fallbackLng || [], e),
            i = [],
            s = (o) => {
                o &&
                    (this.isSupportedCode(o)
                        ? i.push(o)
                        : this.logger.warn(
                              `rejecting language code not found in supportedLngs: ${o}`
                          ));
            };
        return (
            cn(e) && (e.indexOf('-') > -1 || e.indexOf('_') > -1)
                ? (this.options.load !== 'languageOnly' &&
                      s(this.formatLanguageCode(e)),
                  this.options.load !== 'languageOnly' &&
                      this.options.load !== 'currentOnly' &&
                      s(this.getScriptPartFromCode(e)),
                  this.options.load !== 'currentOnly' &&
                      s(this.getLanguagePartFromCode(e)))
                : cn(e) && s(this.formatLanguageCode(e)),
            n.forEach((o) => {
                i.indexOf(o) < 0 && s(this.formatLanguageCode(o));
            }),
            i
        );
    }
}
const cL = { zero: 0, one: 1, two: 2, few: 3, many: 4, other: 5 },
    fL = {
        select: (r) => (r === 1 ? 'one' : 'other'),
        resolvedOptions: () => ({ pluralCategories: ['one', 'other'] }),
    };
class RJ {
    constructor(e, t = {}) {
        (this.languageUtils = e),
            (this.options = t),
            (this.logger = Sl.create('pluralResolver')),
            (this.pluralRulesCache = {});
    }
    addRule(e, t) {
        this.rules[e] = t;
    }
    clearCache() {
        this.pluralRulesCache = {};
    }
    getRule(e, t = {}) {
        const n = yx(e === 'dev' ? 'en' : e),
            i = t.ordinal ? 'ordinal' : 'cardinal',
            s = JSON.stringify({ cleanedCode: n, type: i });
        if (s in this.pluralRulesCache) return this.pluralRulesCache[s];
        let o;
        try {
            o = new Intl.PluralRules(n, { type: i });
        } catch {
            if (!Intl)
                return (
                    this.logger.error(
                        'No Intl support, please use an Intl polyfill!'
                    ),
                    fL
                );
            if (!e.match(/-|_/)) return fL;
            const l = this.languageUtils.getLanguagePartFromCode(e);
            o = this.getRule(l, t);
        }
        return (this.pluralRulesCache[s] = o), o;
    }
    needsPlural(e, t = {}) {
        let n = this.getRule(e, t);
        return (
            n || (n = this.getRule('dev', t)),
            (n == null ? void 0 : n.resolvedOptions().pluralCategories.length) >
                1
        );
    }
    getPluralFormsOfKey(e, t, n = {}) {
        return this.getSuffixes(e, n).map((i) => `${t}${i}`);
    }
    getSuffixes(e, t = {}) {
        let n = this.getRule(e, t);
        return (
            n || (n = this.getRule('dev', t)),
            n
                ? n
                      .resolvedOptions()
                      .pluralCategories.sort((i, s) => cL[i] - cL[s])
                      .map(
                          (i) =>
                              `${this.options.prepend}${t.ordinal ? `ordinal${this.options.prepend}` : ''}${i}`
                      )
                : []
        );
    }
    getSuffix(e, t, n = {}) {
        const i = this.getRule(e, n);
        return i
            ? `${this.options.prepend}${n.ordinal ? `ordinal${this.options.prepend}` : ''}${i.select(t)}`
            : (this.logger.warn(`no plural rule found for: ${e}`),
              this.getSuffix('dev', t, n));
    }
}
const hL = (r, e, t, n = '.', i = !0) => {
        let s = SJ(r, e, t);
        return (
            !s &&
                i &&
                cn(t) &&
                ((s = eE(r, t, n)), s === void 0 && (s = eE(e, t, n))),
            s
        );
    },
    Nw = (r) => r.replace(/\$/g, '$$$$');
class PJ {
    constructor(e = {}) {
        var t;
        (this.logger = Sl.create('interpolator')),
            (this.options = e),
            (this.format =
                ((t = e == null ? void 0 : e.interpolation) == null
                    ? void 0
                    : t.format) || ((n) => n)),
            this.init(e);
    }
    init(e = {}) {
        e.interpolation || (e.interpolation = { escapeValue: !0 });
        const {
            escape: t,
            escapeValue: n,
            useRawValueToEscape: i,
            prefix: s,
            prefixEscaped: o,
            suffix: a,
            suffixEscaped: l,
            formatSeparator: u,
            unescapeSuffix: f,
            unescapePrefix: d,
            nestingPrefix: m,
            nestingPrefixEscaped: v,
            nestingSuffix: _,
            nestingSuffixEscaped: S,
            nestingOptionsSeparator: w,
            maxReplaces: x,
            alwaysFormat: A,
        } = e.interpolation;
        (this.escape = t !== void 0 ? t : MJ),
            (this.escapeValue = n !== void 0 ? n : !0),
            (this.useRawValueToEscape = i !== void 0 ? i : !1),
            (this.prefix = s ? jd(s) : o || '{{'),
            (this.suffix = a ? jd(a) : l || '}}'),
            (this.formatSeparator = u || ','),
            (this.unescapePrefix = f ? '' : d || '-'),
            (this.unescapeSuffix = this.unescapePrefix ? '' : f || ''),
            (this.nestingPrefix = m ? jd(m) : v || jd('$t(')),
            (this.nestingSuffix = _ ? jd(_) : S || jd(')')),
            (this.nestingOptionsSeparator = w || ','),
            (this.maxReplaces = x || 1e3),
            (this.alwaysFormat = A !== void 0 ? A : !1),
            this.resetRegExp();
    }
    reset() {
        this.options && this.init(this.options);
    }
    resetRegExp() {
        const e = (t, n) =>
            (t == null ? void 0 : t.source) === n
                ? ((t.lastIndex = 0), t)
                : new RegExp(n, 'g');
        (this.regexp = e(this.regexp, `${this.prefix}(.+?)${this.suffix}`)),
            (this.regexpUnescape = e(
                this.regexpUnescape,
                `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`
            )),
            (this.nestingRegexp = e(
                this.nestingRegexp,
                `${this.nestingPrefix}(.+?)${this.nestingSuffix}`
            ));
    }
    interpolate(e, t, n, i) {
        var v;
        let s, o, a;
        const l =
                (this.options &&
                    this.options.interpolation &&
                    this.options.interpolation.defaultVariables) ||
                {},
            u = (_) => {
                if (_.indexOf(this.formatSeparator) < 0) {
                    const A = hL(
                        t,
                        l,
                        _,
                        this.options.keySeparator,
                        this.options.ignoreJSONStructure
                    );
                    return this.alwaysFormat
                        ? this.format(A, void 0, n, {
                              ...i,
                              ...t,
                              interpolationkey: _,
                          })
                        : A;
                }
                const S = _.split(this.formatSeparator),
                    w = S.shift().trim(),
                    x = S.join(this.formatSeparator).trim();
                return this.format(
                    hL(
                        t,
                        l,
                        w,
                        this.options.keySeparator,
                        this.options.ignoreJSONStructure
                    ),
                    x,
                    n,
                    { ...i, ...t, interpolationkey: w }
                );
            };
        this.resetRegExp();
        const f =
                (i == null ? void 0 : i.missingInterpolationHandler) ||
                this.options.missingInterpolationHandler,
            d =
                ((v = i == null ? void 0 : i.interpolation) == null
                    ? void 0
                    : v.skipOnVariables) !== void 0
                    ? i.interpolation.skipOnVariables
                    : this.options.interpolation.skipOnVariables;
        return (
            [
                { regex: this.regexpUnescape, safeValue: (_) => Nw(_) },
                {
                    regex: this.regexp,
                    safeValue: (_) =>
                        this.escapeValue ? Nw(this.escape(_)) : Nw(_),
                },
            ].forEach((_) => {
                for (a = 0; (s = _.regex.exec(e)); ) {
                    const S = s[1].trim();
                    if (((o = u(S)), o === void 0))
                        if (typeof f == 'function') {
                            const x = f(e, s, i);
                            o = cn(x) ? x : '';
                        } else if (
                            i &&
                            Object.prototype.hasOwnProperty.call(i, S)
                        )
                            o = '';
                        else if (d) {
                            o = s[0];
                            continue;
                        } else
                            this.logger.warn(
                                `missed to pass in variable ${S} for interpolating ${e}`
                            ),
                                (o = '');
                    else !cn(o) && !this.useRawValueToEscape && (o = nL(o));
                    const w = _.safeValue(o);
                    if (
                        ((e = e.replace(s[0], w)),
                        d
                            ? ((_.regex.lastIndex += o.length),
                              (_.regex.lastIndex -= s[0].length))
                            : (_.regex.lastIndex = 0),
                        a++,
                        a >= this.maxReplaces)
                    )
                        break;
                }
            }),
            e
        );
    }
    nest(e, t, n = {}) {
        let i, s, o;
        const a = (l, u) => {
            const f = this.nestingOptionsSeparator;
            if (l.indexOf(f) < 0) return l;
            const d = l.split(new RegExp(`${f}[ ]*{`));
            let m = `{${d[1]}`;
            (l = d[0]), (m = this.interpolate(m, o));
            const v = m.match(/'/g),
                _ = m.match(/"/g);
            ((((v == null ? void 0 : v.length) ?? 0) % 2 === 0 && !_) ||
                _.length % 2 !== 0) &&
                (m = m.replace(/'/g, '"'));
            try {
                (o = JSON.parse(m)), u && (o = { ...u, ...o });
            } catch (S) {
                return (
                    this.logger.warn(
                        `failed parsing options string in nesting for key ${l}`,
                        S
                    ),
                    `${l}${f}${m}`
                );
            }
            return (
                o.defaultValue &&
                    o.defaultValue.indexOf(this.prefix) > -1 &&
                    delete o.defaultValue,
                l
            );
        };
        for (; (i = this.nestingRegexp.exec(e)); ) {
            let l = [];
            (o = { ...n }),
                (o = o.replace && !cn(o.replace) ? o.replace : o),
                (o.applyPostProcessor = !1),
                delete o.defaultValue;
            let u = !1;
            if (
                i[0].indexOf(this.formatSeparator) !== -1 &&
                !/{.*}/.test(i[1])
            ) {
                const f = i[1].split(this.formatSeparator).map((d) => d.trim());
                (i[1] = f.shift()), (l = f), (u = !0);
            }
            if (
                ((s = t(a.call(this, i[1].trim(), o), o)),
                s && i[0] === e && !cn(s))
            )
                return s;
            cn(s) || (s = nL(s)),
                s ||
                    (this.logger.warn(
                        `missed to resolve ${i[1]} for nesting ${e}`
                    ),
                    (s = '')),
                u &&
                    (s = l.reduce(
                        (f, d) =>
                            this.format(f, d, n.lng, {
                                ...n,
                                interpolationkey: i[1].trim(),
                            }),
                        s.trim()
                    )),
                (e = e.replace(i[0], s)),
                (this.regexp.lastIndex = 0);
        }
        return e;
    }
}
const LJ = (r) => {
        let e = r.toLowerCase().trim();
        const t = {};
        if (r.indexOf('(') > -1) {
            const n = r.split('(');
            e = n[0].toLowerCase().trim();
            const i = n[1].substring(0, n[1].length - 1);
            e === 'currency' && i.indexOf(':') < 0
                ? t.currency || (t.currency = i.trim())
                : e === 'relativetime' && i.indexOf(':') < 0
                  ? t.range || (t.range = i.trim())
                  : i.split(';').forEach((o) => {
                        if (o) {
                            const [a, ...l] = o.split(':'),
                                u = l
                                    .join(':')
                                    .trim()
                                    .replace(/^'+|'+$/g, ''),
                                f = a.trim();
                            t[f] || (t[f] = u),
                                u === 'false' && (t[f] = !1),
                                u === 'true' && (t[f] = !0),
                                isNaN(u) || (t[f] = parseInt(u, 10));
                        }
                    });
        }
        return { formatName: e, formatOptions: t };
    },
    Xd = (r) => {
        const e = {};
        return (t, n, i) => {
            let s = i;
            i &&
                i.interpolationkey &&
                i.formatParams &&
                i.formatParams[i.interpolationkey] &&
                i[i.interpolationkey] &&
                (s = { ...s, [i.interpolationkey]: void 0 });
            const o = n + JSON.stringify(s);
            let a = e[o];
            return a || ((a = r(yx(n), i)), (e[o] = a)), a(t);
        };
    };
class IJ {
    constructor(e = {}) {
        (this.logger = Sl.create('formatter')),
            (this.options = e),
            (this.formats = {
                number: Xd((t, n) => {
                    const i = new Intl.NumberFormat(t, { ...n });
                    return (s) => i.format(s);
                }),
                currency: Xd((t, n) => {
                    const i = new Intl.NumberFormat(t, {
                        ...n,
                        style: 'currency',
                    });
                    return (s) => i.format(s);
                }),
                datetime: Xd((t, n) => {
                    const i = new Intl.DateTimeFormat(t, { ...n });
                    return (s) => i.format(s);
                }),
                relativetime: Xd((t, n) => {
                    const i = new Intl.RelativeTimeFormat(t, { ...n });
                    return (s) => i.format(s, n.range || 'day');
                }),
                list: Xd((t, n) => {
                    const i = new Intl.ListFormat(t, { ...n });
                    return (s) => i.format(s);
                }),
            }),
            this.init(e);
    }
    init(e, t = { interpolation: {} }) {
        this.formatSeparator = t.interpolation.formatSeparator || ',';
    }
    add(e, t) {
        this.formats[e.toLowerCase().trim()] = t;
    }
    addCached(e, t) {
        this.formats[e.toLowerCase().trim()] = Xd(t);
    }
    format(e, t, n, i = {}) {
        const s = t.split(this.formatSeparator);
        if (
            s.length > 1 &&
            s[0].indexOf('(') > 1 &&
            s[0].indexOf(')') < 0 &&
            s.find((a) => a.indexOf(')') > -1)
        ) {
            const a = s.findIndex((l) => l.indexOf(')') > -1);
            s[0] = [s[0], ...s.splice(1, a)].join(this.formatSeparator);
        }
        return s.reduce((a, l) => {
            var d;
            const { formatName: u, formatOptions: f } = LJ(l);
            if (this.formats[u]) {
                let m = a;
                try {
                    const v =
                            ((d = i == null ? void 0 : i.formatParams) == null
                                ? void 0
                                : d[i.interpolationkey]) || {},
                        _ = v.locale || v.lng || i.locale || i.lng || n;
                    m = this.formats[u](a, _, { ...f, ...i, ...v });
                } catch (v) {
                    this.logger.warn(v);
                }
                return m;
            } else this.logger.warn(`there was no format function for ${u}`);
            return a;
        }, e);
    }
}
const DJ = (r, e) => {
    r.pending[e] !== void 0 && (delete r.pending[e], r.pendingCount--);
};
class OJ extends _1 {
    constructor(e, t, n, i = {}) {
        var s, o;
        super(),
            (this.backend = e),
            (this.store = t),
            (this.services = n),
            (this.languageUtils = n.languageUtils),
            (this.options = i),
            (this.logger = Sl.create('backendConnector')),
            (this.waitingReads = []),
            (this.maxParallelReads = i.maxParallelReads || 10),
            (this.readingCalls = 0),
            (this.maxRetries = i.maxRetries >= 0 ? i.maxRetries : 5),
            (this.retryTimeout = i.retryTimeout >= 1 ? i.retryTimeout : 350),
            (this.state = {}),
            (this.queue = []),
            (o = (s = this.backend) == null ? void 0 : s.init) == null ||
                o.call(s, n, i.backend, i);
    }
    queueLoad(e, t, n, i) {
        const s = {},
            o = {},
            a = {},
            l = {};
        return (
            e.forEach((u) => {
                let f = !0;
                t.forEach((d) => {
                    const m = `${u}|${d}`;
                    !n.reload && this.store.hasResourceBundle(u, d)
                        ? (this.state[m] = 2)
                        : this.state[m] < 0 ||
                          (this.state[m] === 1
                              ? o[m] === void 0 && (o[m] = !0)
                              : ((this.state[m] = 1),
                                (f = !1),
                                o[m] === void 0 && (o[m] = !0),
                                s[m] === void 0 && (s[m] = !0),
                                l[d] === void 0 && (l[d] = !0)));
                }),
                    f || (a[u] = !0);
            }),
            (Object.keys(s).length || Object.keys(o).length) &&
                this.queue.push({
                    pending: o,
                    pendingCount: Object.keys(o).length,
                    loaded: {},
                    errors: [],
                    callback: i,
                }),
            {
                toLoad: Object.keys(s),
                pending: Object.keys(o),
                toLoadLanguages: Object.keys(a),
                toLoadNamespaces: Object.keys(l),
            }
        );
    }
    loaded(e, t, n) {
        const i = e.split('|'),
            s = i[0],
            o = i[1];
        t && this.emit('failedLoading', s, o, t),
            !t &&
                n &&
                this.store.addResourceBundle(s, o, n, void 0, void 0, {
                    skipCopy: !0,
                }),
            (this.state[e] = t ? -1 : 2),
            t && n && (this.state[e] = 0);
        const a = {};
        this.queue.forEach((l) => {
            xJ(l.loaded, [s], o),
                DJ(l, e),
                t && l.errors.push(t),
                l.pendingCount === 0 &&
                    !l.done &&
                    (Object.keys(l.loaded).forEach((u) => {
                        a[u] || (a[u] = {});
                        const f = l.loaded[u];
                        f.length &&
                            f.forEach((d) => {
                                a[u][d] === void 0 && (a[u][d] = !0);
                            });
                    }),
                    (l.done = !0),
                    l.errors.length ? l.callback(l.errors) : l.callback());
        }),
            this.emit('loaded', a),
            (this.queue = this.queue.filter((l) => !l.done));
    }
    read(e, t, n, i = 0, s = this.retryTimeout, o) {
        if (!e.length) return o(null, {});
        if (this.readingCalls >= this.maxParallelReads) {
            this.waitingReads.push({
                lng: e,
                ns: t,
                fcName: n,
                tried: i,
                wait: s,
                callback: o,
            });
            return;
        }
        this.readingCalls++;
        const a = (u, f) => {
                if ((this.readingCalls--, this.waitingReads.length > 0)) {
                    const d = this.waitingReads.shift();
                    this.read(
                        d.lng,
                        d.ns,
                        d.fcName,
                        d.tried,
                        d.wait,
                        d.callback
                    );
                }
                if (u && f && i < this.maxRetries) {
                    setTimeout(() => {
                        this.read.call(this, e, t, n, i + 1, s * 2, o);
                    }, s);
                    return;
                }
                o(u, f);
            },
            l = this.backend[n].bind(this.backend);
        if (l.length === 2) {
            try {
                const u = l(e, t);
                u && typeof u.then == 'function'
                    ? u.then((f) => a(null, f)).catch(a)
                    : a(null, u);
            } catch (u) {
                a(u);
            }
            return;
        }
        return l(e, t, a);
    }
    prepareLoading(e, t, n = {}, i) {
        if (!this.backend)
            return (
                this.logger.warn(
                    'No backend was added via i18next.use. Will not load resources.'
                ),
                i && i()
            );
        cn(e) && (e = this.languageUtils.toResolveHierarchy(e)),
            cn(t) && (t = [t]);
        const s = this.queueLoad(e, t, n, i);
        if (!s.toLoad.length) return s.pending.length || i(), null;
        s.toLoad.forEach((o) => {
            this.loadOne(o);
        });
    }
    load(e, t, n) {
        this.prepareLoading(e, t, {}, n);
    }
    reload(e, t, n) {
        this.prepareLoading(e, t, { reload: !0 }, n);
    }
    loadOne(e, t = '') {
        const n = e.split('|'),
            i = n[0],
            s = n[1];
        this.read(i, s, 'read', void 0, void 0, (o, a) => {
            o &&
                this.logger.warn(
                    `${t}loading namespace ${s} for language ${i} failed`,
                    o
                ),
                !o &&
                    a &&
                    this.logger.log(
                        `${t}loaded namespace ${s} for language ${i}`,
                        a
                    ),
                this.loaded(e, o, a);
        });
    }
    saveMissing(e, t, n, i, s, o = {}, a = () => {}) {
        var l, u, f, d, m;
        if (
            (u = (l = this.services) == null ? void 0 : l.utils) != null &&
            u.hasLoadedNamespace &&
            !(
                (d = (f = this.services) == null ? void 0 : f.utils) != null &&
                d.hasLoadedNamespace(t)
            )
        ) {
            this.logger.warn(
                `did not save key "${n}" as the namespace "${t}" was not yet loaded`,
                'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!'
            );
            return;
        }
        if (!(n == null || n === '')) {
            if ((m = this.backend) != null && m.create) {
                const v = { ...o, isUpdate: s },
                    _ = this.backend.create.bind(this.backend);
                if (_.length < 6)
                    try {
                        let S;
                        _.length === 5
                            ? (S = _(e, t, n, i, v))
                            : (S = _(e, t, n, i)),
                            S && typeof S.then == 'function'
                                ? S.then((w) => a(null, w)).catch(a)
                                : a(null, S);
                    } catch (S) {
                        a(S);
                    }
                else _(e, t, n, i, a, v);
            }
            !e || !e[0] || this.store.addResource(e[0], t, n, i);
        }
    }
}
const dL = () => ({
        debug: !1,
        initAsync: !0,
        ns: ['translation'],
        defaultNS: ['translation'],
        fallbackLng: ['dev'],
        fallbackNS: !1,
        supportedLngs: !1,
        nonExplicitSupportedLngs: !1,
        load: 'all',
        preload: !1,
        simplifyPluralSuffix: !0,
        keySeparator: '.',
        nsSeparator: ':',
        pluralSeparator: '_',
        contextSeparator: '_',
        partialBundledLanguages: !1,
        saveMissing: !1,
        updateMissing: !1,
        saveMissingTo: 'fallback',
        saveMissingPlurals: !0,
        missingKeyHandler: !1,
        missingInterpolationHandler: !1,
        postProcess: !1,
        postProcessPassResolved: !1,
        returnNull: !1,
        returnEmptyString: !0,
        returnObjects: !1,
        joinArrays: !1,
        returnedObjectHandler: !1,
        parseMissingKeyHandler: !1,
        appendNamespaceToMissingKey: !1,
        appendNamespaceToCIMode: !1,
        overloadTranslationOptionHandler: (r) => {
            let e = {};
            if (
                (typeof r[1] == 'object' && (e = r[1]),
                cn(r[1]) && (e.defaultValue = r[1]),
                cn(r[2]) && (e.tDescription = r[2]),
                typeof r[2] == 'object' || typeof r[3] == 'object')
            ) {
                const t = r[3] || r[2];
                Object.keys(t).forEach((n) => {
                    e[n] = t[n];
                });
            }
            return e;
        },
        interpolation: {
            escapeValue: !0,
            format: (r) => r,
            prefix: '{{',
            suffix: '}}',
            formatSeparator: ',',
            unescapePrefix: '-',
            nestingPrefix: '$t(',
            nestingSuffix: ')',
            nestingOptionsSeparator: ',',
            maxReplaces: 1e3,
            skipOnVariables: !0,
        },
    }),
    pL = (r) => {
        var e, t;
        return (
            cn(r.ns) && (r.ns = [r.ns]),
            cn(r.fallbackLng) && (r.fallbackLng = [r.fallbackLng]),
            cn(r.fallbackNS) && (r.fallbackNS = [r.fallbackNS]),
            ((t = (e = r.supportedLngs) == null ? void 0 : e.indexOf) == null
                ? void 0
                : t.call(e, 'cimode')) < 0 &&
                (r.supportedLngs = r.supportedLngs.concat(['cimode'])),
            typeof r.initImmediate == 'boolean' &&
                (r.initAsync = r.initImmediate),
            r
        );
    },
    l_ = () => {},
    UJ = (r) => {
        Object.getOwnPropertyNames(Object.getPrototypeOf(r)).forEach((t) => {
            typeof r[t] == 'function' && (r[t] = r[t].bind(r));
        });
    };
class O0 extends _1 {
    constructor(e = {}, t) {
        if (
            (super(),
            (this.options = pL(e)),
            (this.services = {}),
            (this.logger = Sl),
            (this.modules = { external: [] }),
            UJ(this),
            t && !this.isInitialized && !e.isClone)
        ) {
            if (!this.options.initAsync) return this.init(e, t), this;
            setTimeout(() => {
                this.init(e, t);
            }, 0);
        }
    }
    init(e = {}, t) {
        (this.isInitializing = !0),
            typeof e == 'function' && ((t = e), (e = {})),
            e.defaultNS == null &&
                e.ns &&
                (cn(e.ns)
                    ? (e.defaultNS = e.ns)
                    : e.ns.indexOf('translation') < 0 &&
                      (e.defaultNS = e.ns[0]));
        const n = dL();
        (this.options = { ...n, ...this.options, ...pL(e) }),
            (this.options.interpolation = {
                ...n.interpolation,
                ...this.options.interpolation,
            }),
            e.keySeparator !== void 0 &&
                (this.options.userDefinedKeySeparator = e.keySeparator),
            e.nsSeparator !== void 0 &&
                (this.options.userDefinedNsSeparator = e.nsSeparator);
        const i = (u) => (u ? (typeof u == 'function' ? new u() : u) : null);
        if (!this.options.isClone) {
            this.modules.logger
                ? Sl.init(i(this.modules.logger), this.options)
                : Sl.init(null, this.options);
            let u;
            this.modules.formatter ? (u = this.modules.formatter) : (u = IJ);
            const f = new uL(this.options);
            this.store = new oL(this.options.resources, this.options);
            const d = this.services;
            (d.logger = Sl),
                (d.resourceStore = this.store),
                (d.languageUtils = f),
                (d.pluralResolver = new RJ(f, {
                    prepend: this.options.pluralSeparator,
                    simplifyPluralSuffix: this.options.simplifyPluralSuffix,
                })),
                u &&
                    (!this.options.interpolation.format ||
                        this.options.interpolation.format ===
                            n.interpolation.format) &&
                    ((d.formatter = i(u)),
                    d.formatter.init(d, this.options),
                    (this.options.interpolation.format =
                        d.formatter.format.bind(d.formatter))),
                (d.interpolator = new PJ(this.options)),
                (d.utils = {
                    hasLoadedNamespace: this.hasLoadedNamespace.bind(this),
                }),
                (d.backendConnector = new OJ(
                    i(this.modules.backend),
                    d.resourceStore,
                    d,
                    this.options
                )),
                d.backendConnector.on('*', (m, ...v) => {
                    this.emit(m, ...v);
                }),
                this.modules.languageDetector &&
                    ((d.languageDetector = i(this.modules.languageDetector)),
                    d.languageDetector.init &&
                        d.languageDetector.init(
                            d,
                            this.options.detection,
                            this.options
                        )),
                this.modules.i18nFormat &&
                    ((d.i18nFormat = i(this.modules.i18nFormat)),
                    d.i18nFormat.init && d.i18nFormat.init(this)),
                (this.translator = new xx(this.services, this.options)),
                this.translator.on('*', (m, ...v) => {
                    this.emit(m, ...v);
                }),
                this.modules.external.forEach((m) => {
                    m.init && m.init(this);
                });
        }
        if (
            ((this.format = this.options.interpolation.format),
            t || (t = l_),
            this.options.fallbackLng &&
                !this.services.languageDetector &&
                !this.options.lng)
        ) {
            const u = this.services.languageUtils.getFallbackCodes(
                this.options.fallbackLng
            );
            u.length > 0 && u[0] !== 'dev' && (this.options.lng = u[0]);
        }
        !this.services.languageDetector &&
            !this.options.lng &&
            this.logger.warn(
                'init: no languageDetector is used and no lng is defined'
            ),
            [
                'getResource',
                'hasResourceBundle',
                'getResourceBundle',
                'getDataByLanguage',
            ].forEach((u) => {
                this[u] = (...f) => this.store[u](...f);
            }),
            [
                'addResource',
                'addResources',
                'addResourceBundle',
                'removeResourceBundle',
            ].forEach((u) => {
                this[u] = (...f) => (this.store[u](...f), this);
            });
        const a = _g(),
            l = () => {
                const u = (f, d) => {
                    (this.isInitializing = !1),
                        this.isInitialized &&
                            !this.initializedStoreOnce &&
                            this.logger.warn(
                                'init: i18next is already initialized. You should call init just once!'
                            ),
                        (this.isInitialized = !0),
                        this.options.isClone ||
                            this.logger.log('initialized', this.options),
                        this.emit('initialized', this.options),
                        a.resolve(d),
                        t(f, d);
                };
                if (this.languages && !this.isInitialized)
                    return u(null, this.t.bind(this));
                this.changeLanguage(this.options.lng, u);
            };
        return (
            this.options.resources || !this.options.initAsync
                ? l()
                : setTimeout(l, 0),
            a
        );
    }
    loadResources(e, t = l_) {
        var s, o;
        let n = t;
        const i = cn(e) ? e : this.language;
        if (
            (typeof e == 'function' && (n = e),
            !this.options.resources || this.options.partialBundledLanguages)
        ) {
            if (
                (i == null ? void 0 : i.toLowerCase()) === 'cimode' &&
                (!this.options.preload || this.options.preload.length === 0)
            )
                return n();
            const a = [],
                l = (u) => {
                    if (!u || u === 'cimode') return;
                    this.services.languageUtils
                        .toResolveHierarchy(u)
                        .forEach((d) => {
                            d !== 'cimode' && a.indexOf(d) < 0 && a.push(d);
                        });
                };
            i
                ? l(i)
                : this.services.languageUtils
                      .getFallbackCodes(this.options.fallbackLng)
                      .forEach((f) => l(f)),
                (o = (s = this.options.preload) == null ? void 0 : s.forEach) ==
                    null || o.call(s, (u) => l(u)),
                this.services.backendConnector.load(a, this.options.ns, (u) => {
                    !u &&
                        !this.resolvedLanguage &&
                        this.language &&
                        this.setResolvedLanguage(this.language),
                        n(u);
                });
        } else n(null);
    }
    reloadResources(e, t, n) {
        const i = _g();
        return (
            typeof e == 'function' && ((n = e), (e = void 0)),
            typeof t == 'function' && ((n = t), (t = void 0)),
            e || (e = this.languages),
            t || (t = this.options.ns),
            n || (n = l_),
            this.services.backendConnector.reload(e, t, (s) => {
                i.resolve(), n(s);
            }),
            i
        );
    }
    use(e) {
        if (!e)
            throw new Error(
                'You are passing an undefined module! Please check the object you are passing to i18next.use()'
            );
        if (!e.type)
            throw new Error(
                'You are passing a wrong module! Please check the object you are passing to i18next.use()'
            );
        return (
            e.type === 'backend' && (this.modules.backend = e),
            (e.type === 'logger' || (e.log && e.warn && e.error)) &&
                (this.modules.logger = e),
            e.type === 'languageDetector' &&
                (this.modules.languageDetector = e),
            e.type === 'i18nFormat' && (this.modules.i18nFormat = e),
            e.type === 'postProcessor' && sN.addPostProcessor(e),
            e.type === 'formatter' && (this.modules.formatter = e),
            e.type === '3rdParty' && this.modules.external.push(e),
            this
        );
    }
    setResolvedLanguage(e) {
        if (!(!e || !this.languages) && !(['cimode', 'dev'].indexOf(e) > -1)) {
            for (let t = 0; t < this.languages.length; t++) {
                const n = this.languages[t];
                if (
                    !(['cimode', 'dev'].indexOf(n) > -1) &&
                    this.store.hasLanguageSomeTranslations(n)
                ) {
                    this.resolvedLanguage = n;
                    break;
                }
            }
            !this.resolvedLanguage &&
                this.languages.indexOf(e) < 0 &&
                this.store.hasLanguageSomeTranslations(e) &&
                ((this.resolvedLanguage = e), this.languages.unshift(e));
        }
    }
    changeLanguage(e, t) {
        this.isLanguageChangingTo = e;
        const n = _g();
        this.emit('languageChanging', e);
        const i = (a) => {
                (this.language = a),
                    (this.languages =
                        this.services.languageUtils.toResolveHierarchy(a)),
                    (this.resolvedLanguage = void 0),
                    this.setResolvedLanguage(a);
            },
            s = (a, l) => {
                l
                    ? this.isLanguageChangingTo === e &&
                      (i(l),
                      this.translator.changeLanguage(l),
                      (this.isLanguageChangingTo = void 0),
                      this.emit('languageChanged', l),
                      this.logger.log('languageChanged', l))
                    : (this.isLanguageChangingTo = void 0),
                    n.resolve((...u) => this.t(...u)),
                    t && t(a, (...u) => this.t(...u));
            },
            o = (a) => {
                var f, d;
                !e && !a && this.services.languageDetector && (a = []);
                const l = cn(a) ? a : a && a[0],
                    u = this.store.hasLanguageSomeTranslations(l)
                        ? l
                        : this.services.languageUtils.getBestMatchFromCodes(
                              cn(a) ? [a] : a
                          );
                u &&
                    (this.language || i(u),
                    this.translator.language ||
                        this.translator.changeLanguage(u),
                    (d =
                        (f = this.services.languageDetector) == null
                            ? void 0
                            : f.cacheUserLanguage) == null || d.call(f, u)),
                    this.loadResources(u, (m) => {
                        s(m, u);
                    });
            };
        return (
            !e &&
            this.services.languageDetector &&
            !this.services.languageDetector.async
                ? o(this.services.languageDetector.detect())
                : !e &&
                    this.services.languageDetector &&
                    this.services.languageDetector.async
                  ? this.services.languageDetector.detect.length === 0
                      ? this.services.languageDetector.detect().then(o)
                      : this.services.languageDetector.detect(o)
                  : o(e),
            n
        );
    }
    getFixedT(e, t, n) {
        const i = (s, o, ...a) => {
            let l;
            typeof o != 'object'
                ? (l = this.options.overloadTranslationOptionHandler(
                      [s, o].concat(a)
                  ))
                : (l = { ...o }),
                (l.lng = l.lng || i.lng),
                (l.lngs = l.lngs || i.lngs),
                (l.ns = l.ns || i.ns),
                l.keyPrefix !== '' &&
                    (l.keyPrefix = l.keyPrefix || n || i.keyPrefix);
            const u = this.options.keySeparator || '.';
            let f;
            return (
                l.keyPrefix && Array.isArray(s)
                    ? (f = s.map((d) => `${l.keyPrefix}${u}${d}`))
                    : (f = l.keyPrefix ? `${l.keyPrefix}${u}${s}` : s),
                this.t(f, l)
            );
        };
        return (
            cn(e) ? (i.lng = e) : (i.lngs = e), (i.ns = t), (i.keyPrefix = n), i
        );
    }
    t(...e) {
        var t;
        return (t = this.translator) == null ? void 0 : t.translate(...e);
    }
    exists(...e) {
        var t;
        return (t = this.translator) == null ? void 0 : t.exists(...e);
    }
    setDefaultNamespace(e) {
        this.options.defaultNS = e;
    }
    hasLoadedNamespace(e, t = {}) {
        if (!this.isInitialized)
            return (
                this.logger.warn(
                    'hasLoadedNamespace: i18next was not initialized',
                    this.languages
                ),
                !1
            );
        if (!this.languages || !this.languages.length)
            return (
                this.logger.warn(
                    'hasLoadedNamespace: i18n.languages were undefined or empty',
                    this.languages
                ),
                !1
            );
        const n = t.lng || this.resolvedLanguage || this.languages[0],
            i = this.options ? this.options.fallbackLng : !1,
            s = this.languages[this.languages.length - 1];
        if (n.toLowerCase() === 'cimode') return !0;
        const o = (a, l) => {
            const u = this.services.backendConnector.state[`${a}|${l}`];
            return u === -1 || u === 0 || u === 2;
        };
        if (t.precheck) {
            const a = t.precheck(this, o);
            if (a !== void 0) return a;
        }
        return !!(
            this.hasResourceBundle(n, e) ||
            !this.services.backendConnector.backend ||
            (this.options.resources && !this.options.partialBundledLanguages) ||
            (o(n, e) && (!i || o(s, e)))
        );
    }
    loadNamespaces(e, t) {
        const n = _g();
        return this.options.ns
            ? (cn(e) && (e = [e]),
              e.forEach((i) => {
                  this.options.ns.indexOf(i) < 0 && this.options.ns.push(i);
              }),
              this.loadResources((i) => {
                  n.resolve(), t && t(i);
              }),
              n)
            : (t && t(), Promise.resolve());
    }
    loadLanguages(e, t) {
        const n = _g();
        cn(e) && (e = [e]);
        const i = this.options.preload || [],
            s = e.filter(
                (o) =>
                    i.indexOf(o) < 0 &&
                    this.services.languageUtils.isSupportedCode(o)
            );
        return s.length
            ? ((this.options.preload = i.concat(s)),
              this.loadResources((o) => {
                  n.resolve(), t && t(o);
              }),
              n)
            : (t && t(), Promise.resolve());
    }
    dir(e) {
        var i, s;
        if (
            (e ||
                (e =
                    this.resolvedLanguage ||
                    (((i = this.languages) == null ? void 0 : i.length) > 0
                        ? this.languages[0]
                        : this.language)),
            !e)
        )
            return 'rtl';
        const t = [
                'ar',
                'shu',
                'sqr',
                'ssh',
                'xaa',
                'yhd',
                'yud',
                'aao',
                'abh',
                'abv',
                'acm',
                'acq',
                'acw',
                'acx',
                'acy',
                'adf',
                'ads',
                'aeb',
                'aec',
                'afb',
                'ajp',
                'apc',
                'apd',
                'arb',
                'arq',
                'ars',
                'ary',
                'arz',
                'auz',
                'avl',
                'ayh',
                'ayl',
                'ayn',
                'ayp',
                'bbz',
                'pga',
                'he',
                'iw',
                'ps',
                'pbt',
                'pbu',
                'pst',
                'prp',
                'prd',
                'ug',
                'ur',
                'ydd',
                'yds',
                'yih',
                'ji',
                'yi',
                'hbo',
                'men',
                'xmn',
                'fa',
                'jpr',
                'peo',
                'pes',
                'prs',
                'dv',
                'sam',
                'ckb',
            ],
            n =
                ((s = this.services) == null ? void 0 : s.languageUtils) ||
                new uL(dL());
        return t.indexOf(n.getLanguagePartFromCode(e)) > -1 ||
            e.toLowerCase().indexOf('-arab') > 1
            ? 'rtl'
            : 'ltr';
    }
    static createInstance(e = {}, t) {
        return new O0(e, t);
    }
    cloneInstance(e = {}, t = l_) {
        const n = e.forkResourceStore;
        n && delete e.forkResourceStore;
        const i = { ...this.options, ...e, isClone: !0 },
            s = new O0(i);
        if (
            ((e.debug !== void 0 || e.prefix !== void 0) &&
                (s.logger = s.logger.clone(e)),
            ['store', 'services', 'language'].forEach((a) => {
                s[a] = this[a];
            }),
            (s.services = { ...this.services }),
            (s.services.utils = {
                hasLoadedNamespace: s.hasLoadedNamespace.bind(s),
            }),
            n)
        ) {
            const a = Object.keys(this.store.data).reduce(
                (l, u) => (
                    (l[u] = { ...this.store.data[u] }),
                    (l[u] = Object.keys(l[u]).reduce(
                        (f, d) => ((f[d] = { ...l[u][d] }), f),
                        l[u]
                    )),
                    l
                ),
                {}
            );
            (s.store = new oL(a, i)), (s.services.resourceStore = s.store);
        }
        return (
            (s.translator = new xx(s.services, i)),
            s.translator.on('*', (a, ...l) => {
                s.emit(a, ...l);
            }),
            s.init(i, t),
            (s.translator.options = i),
            (s.translator.backendConnector.services.utils = {
                hasLoadedNamespace: s.hasLoadedNamespace.bind(s),
            }),
            s
        );
    }
    toJSON() {
        return {
            options: this.options,
            store: this.store,
            language: this.language,
            languages: this.languages,
            resolvedLanguage: this.resolvedLanguage,
        };
    }
}
const vs = O0.createInstance();
vs.createInstance = O0.createInstance;
vs.createInstance;
vs.dir;
vs.init;
vs.loadResources;
vs.reloadResources;
vs.use;
vs.changeLanguage;
vs.getFixedT;
vs.t;
vs.exists;
vs.setDefaultNamespace;
vs.hasLoadedNamespace;
vs.loadNamespaces;
vs.loadLanguages;
const kJ =
        /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g,
    NJ = {
        '&amp;': '&',
        '&#38;': '&',
        '&lt;': '<',
        '&#60;': '<',
        '&gt;': '>',
        '&#62;': '>',
        '&apos;': "'",
        '&#39;': "'",
        '&quot;': '"',
        '&#34;': '"',
        '&nbsp;': ' ',
        '&#160;': ' ',
        '&copy;': '©',
        '&#169;': '©',
        '&reg;': '®',
        '&#174;': '®',
        '&hellip;': '…',
        '&#8230;': '…',
        '&#x2F;': '/',
        '&#47;': '/',
    },
    FJ = (r) => NJ[r],
    BJ = (r) => r.replace(kJ, FJ);
let tE = {
    bindI18n: 'languageChanged',
    bindI18nStore: '',
    transEmptyNodeValue: '',
    transSupportBasicHtmlNodes: !0,
    transWrapTextNodes: '',
    transKeepBasicHtmlNodesFor: ['br', 'strong', 'i', 'p'],
    useSuspense: !0,
    unescape: BJ,
};
const zJ = (r = {}) => {
        tE = { ...tE, ...r };
    },
    GQ = () => tE;
let oN;
const VJ = (r) => {
        oN = r;
    },
    WQ = () => oN,
    HJ = {
        type: '3rdParty',
        init(r) {
            zJ(r.options.react), VJ(r);
        },
    };
function nE(r) {
    '@babel/helpers - typeof';
    return (
        (nE =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (e) {
                      return typeof e;
                  }
                : function (e) {
                      return e &&
                          typeof Symbol == 'function' &&
                          e.constructor === Symbol &&
                          e !== Symbol.prototype
                          ? 'symbol'
                          : typeof e;
                  }),
        nE(r)
    );
}
function aN() {
    return (
        typeof XMLHttpRequest == 'function' ||
        (typeof XMLHttpRequest > 'u' ? 'undefined' : nE(XMLHttpRequest)) ===
            'object'
    );
}
function GJ(r) {
    return !!r && typeof r.then == 'function';
}
function WJ(r) {
    return GJ(r) ? r : Promise.resolve(r);
}
function mL(r, e) {
    var t = Object.keys(r);
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(r);
        e &&
            (n = n.filter(function (i) {
                return Object.getOwnPropertyDescriptor(r, i).enumerable;
            })),
            t.push.apply(t, n);
    }
    return t;
}
function gL(r) {
    for (var e = 1; e < arguments.length; e++) {
        var t = arguments[e] != null ? arguments[e] : {};
        e % 2
            ? mL(Object(t), !0).forEach(function (n) {
                  jJ(r, n, t[n]);
              })
            : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(r, Object.getOwnPropertyDescriptors(t))
              : mL(Object(t)).forEach(function (n) {
                    Object.defineProperty(
                        r,
                        n,
                        Object.getOwnPropertyDescriptor(t, n)
                    );
                });
    }
    return r;
}
function jJ(r, e, t) {
    return (
        (e = XJ(e)) in r
            ? Object.defineProperty(r, e, {
                  value: t,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (r[e] = t),
        r
    );
}
function XJ(r) {
    var e = YJ(r, 'string');
    return xh(e) == 'symbol' ? e : e + '';
}
function YJ(r, e) {
    if (xh(r) != 'object' || !r) return r;
    var t = r[Symbol.toPrimitive];
    if (t !== void 0) {
        var n = t.call(r, e);
        if (xh(n) != 'object') return n;
        throw new TypeError('@@toPrimitive must return a primitive value.');
    }
    return (e === 'string' ? String : Number)(r);
}
function xh(r) {
    '@babel/helpers - typeof';
    return (
        (xh =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (e) {
                      return typeof e;
                  }
                : function (e) {
                      return e &&
                          typeof Symbol == 'function' &&
                          e.constructor === Symbol &&
                          e !== Symbol.prototype
                          ? 'symbol'
                          : typeof e;
                  }),
        xh(r)
    );
}
var Uc = typeof fetch == 'function' ? fetch : void 0;
typeof global < 'u' && global.fetch
    ? (Uc = global.fetch)
    : typeof window < 'u' && window.fetch && (Uc = window.fetch);
var U0;
aN() &&
    (typeof global < 'u' && global.XMLHttpRequest
        ? (U0 = global.XMLHttpRequest)
        : typeof window < 'u' &&
          window.XMLHttpRequest &&
          (U0 = window.XMLHttpRequest));
var Sx;
typeof ActiveXObject == 'function' &&
    (typeof global < 'u' && global.ActiveXObject
        ? (Sx = global.ActiveXObject)
        : typeof window < 'u' &&
          window.ActiveXObject &&
          (Sx = window.ActiveXObject));
typeof Uc != 'function' && (Uc = void 0);
if (!Uc && !U0 && !Sx)
    try {
        Do(() => import('./browser-ponyfill-XGG3Misi.js').then((r) => r.b), [])
            .then(function (r) {
                Uc = r.default;
            })
            .catch(function () {});
    } catch {}
var iE = function (e, t) {
        if (t && xh(t) === 'object') {
            var n = '';
            for (var i in t)
                n +=
                    '&' +
                    encodeURIComponent(i) +
                    '=' +
                    encodeURIComponent(t[i]);
            if (!n) return e;
            e = e + (e.indexOf('?') !== -1 ? '&' : '?') + n.slice(1);
        }
        return e;
    },
    vL = function (e, t, n, i) {
        var s = function (l) {
            if (!l.ok) return n(l.statusText || 'Error', { status: l.status });
            l.text()
                .then(function (u) {
                    n(null, { status: l.status, data: u });
                })
                .catch(n);
        };
        if (i) {
            var o = i(e, t);
            if (o instanceof Promise) {
                o.then(s).catch(n);
                return;
            }
        }
        typeof fetch == 'function'
            ? fetch(e, t).then(s).catch(n)
            : Uc(e, t).then(s).catch(n);
    },
    yL = !1,
    qJ = function (e, t, n, i) {
        e.queryStringParams && (t = iE(t, e.queryStringParams));
        var s = gL(
            {},
            typeof e.customHeaders == 'function'
                ? e.customHeaders()
                : e.customHeaders
        );
        typeof window > 'u' &&
            typeof global < 'u' &&
            typeof global.process < 'u' &&
            global.process.versions &&
            global.process.versions.node &&
            (s['User-Agent'] = 'i18next-http-backend (node/'
                .concat(global.process.version, '; ')
                .concat(global.process.platform, ' ')
                .concat(global.process.arch, ')')),
            n && (s['Content-Type'] = 'application/json');
        var o =
                typeof e.requestOptions == 'function'
                    ? e.requestOptions(n)
                    : e.requestOptions,
            a = gL(
                {
                    method: n ? 'POST' : 'GET',
                    body: n ? e.stringify(n) : void 0,
                    headers: s,
                },
                yL ? {} : o
            ),
            l =
                typeof e.alternateFetch == 'function' &&
                e.alternateFetch.length >= 1
                    ? e.alternateFetch
                    : void 0;
        try {
            vL(t, a, i, l);
        } catch (u) {
            if (
                !o ||
                Object.keys(o).length === 0 ||
                !u.message ||
                u.message.indexOf('not implemented') < 0
            )
                return i(u);
            try {
                Object.keys(o).forEach(function (f) {
                    delete a[f];
                }),
                    vL(t, a, i, l),
                    (yL = !0);
            } catch (f) {
                i(f);
            }
        }
    },
    KJ = function (e, t, n, i) {
        n && xh(n) === 'object' && (n = iE('', n).slice(1)),
            e.queryStringParams && (t = iE(t, e.queryStringParams));
        try {
            var s = U0 ? new U0() : new Sx('MSXML2.XMLHTTP.3.0');
            s.open(n ? 'POST' : 'GET', t, 1),
                e.crossDomain ||
                    s.setRequestHeader('X-Requested-With', 'XMLHttpRequest'),
                (s.withCredentials = !!e.withCredentials),
                n &&
                    s.setRequestHeader(
                        'Content-Type',
                        'application/x-www-form-urlencoded'
                    ),
                s.overrideMimeType && s.overrideMimeType('application/json');
            var o = e.customHeaders;
            if (((o = typeof o == 'function' ? o() : o), o))
                for (var a in o) s.setRequestHeader(a, o[a]);
            (s.onreadystatechange = function () {
                s.readyState > 3 &&
                    i(s.status >= 400 ? s.statusText : null, {
                        status: s.status,
                        data: s.responseText,
                    });
            }),
                s.send(n);
        } catch (l) {
            console && console.log(l);
        }
    },
    ZJ = function (e, t, n, i) {
        if (
            (typeof n == 'function' && ((i = n), (n = void 0)),
            (i = i || function () {}),
            Uc && t.indexOf('file:') !== 0)
        )
            return qJ(e, t, n, i);
        if (aN() || typeof ActiveXObject == 'function') return KJ(e, t, n, i);
        i(new Error('No fetch and no xhr implementation found!'));
    };
function Op(r) {
    '@babel/helpers - typeof';
    return (
        (Op =
            typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol'
                ? function (e) {
                      return typeof e;
                  }
                : function (e) {
                      return e &&
                          typeof Symbol == 'function' &&
                          e.constructor === Symbol &&
                          e !== Symbol.prototype
                          ? 'symbol'
                          : typeof e;
                  }),
        Op(r)
    );
}
function _L(r, e) {
    var t = Object.keys(r);
    if (Object.getOwnPropertySymbols) {
        var n = Object.getOwnPropertySymbols(r);
        e &&
            (n = n.filter(function (i) {
                return Object.getOwnPropertyDescriptor(r, i).enumerable;
            })),
            t.push.apply(t, n);
    }
    return t;
}
function Fw(r) {
    for (var e = 1; e < arguments.length; e++) {
        var t = arguments[e] != null ? arguments[e] : {};
        e % 2
            ? _L(Object(t), !0).forEach(function (n) {
                  lN(r, n, t[n]);
              })
            : Object.getOwnPropertyDescriptors
              ? Object.defineProperties(r, Object.getOwnPropertyDescriptors(t))
              : _L(Object(t)).forEach(function (n) {
                    Object.defineProperty(
                        r,
                        n,
                        Object.getOwnPropertyDescriptor(t, n)
                    );
                });
    }
    return r;
}
function $J(r, e) {
    if (!(r instanceof e))
        throw new TypeError('Cannot call a class as a function');
}
function JJ(r, e) {
    for (var t = 0; t < e.length; t++) {
        var n = e[t];
        (n.enumerable = n.enumerable || !1),
            (n.configurable = !0),
            'value' in n && (n.writable = !0),
            Object.defineProperty(r, uN(n.key), n);
    }
}
function QJ(r, e, t) {
    return (
        e && JJ(r.prototype, e),
        Object.defineProperty(r, 'prototype', { writable: !1 }),
        r
    );
}
function lN(r, e, t) {
    return (
        (e = uN(e)) in r
            ? Object.defineProperty(r, e, {
                  value: t,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
              })
            : (r[e] = t),
        r
    );
}
function uN(r) {
    var e = eQ(r, 'string');
    return Op(e) == 'symbol' ? e : e + '';
}
function eQ(r, e) {
    if (Op(r) != 'object' || !r) return r;
    var t = r[Symbol.toPrimitive];
    if (t !== void 0) {
        var n = t.call(r, e);
        if (Op(n) != 'object') return n;
        throw new TypeError('@@toPrimitive must return a primitive value.');
    }
    return String(r);
}
var tQ = function () {
        return {
            loadPath: '/locales/{{lng}}/{{ns}}.json',
            addPath: '/locales/add/{{lng}}/{{ns}}',
            parse: function (t) {
                return JSON.parse(t);
            },
            stringify: JSON.stringify,
            parsePayload: function (t, n, i) {
                return lN({}, n, i || '');
            },
            parseLoadPayload: function (t, n) {},
            request: ZJ,
            reloadInterval: typeof window < 'u' ? !1 : 60 * 60 * 1e3,
            customHeaders: {},
            queryStringParams: {},
            crossDomain: !1,
            withCredentials: !1,
            overrideMimeType: !1,
            requestOptions: {
                mode: 'cors',
                credentials: 'same-origin',
                cache: 'default',
            },
        };
    },
    cN = (function () {
        function r(e) {
            var t =
                    arguments.length > 1 && arguments[1] !== void 0
                        ? arguments[1]
                        : {},
                n =
                    arguments.length > 2 && arguments[2] !== void 0
                        ? arguments[2]
                        : {};
            $J(this, r),
                (this.services = e),
                (this.options = t),
                (this.allOptions = n),
                (this.type = 'backend'),
                this.init(e, t, n);
        }
        return QJ(r, [
            {
                key: 'init',
                value: function (t) {
                    var n = this,
                        i =
                            arguments.length > 1 && arguments[1] !== void 0
                                ? arguments[1]
                                : {},
                        s =
                            arguments.length > 2 && arguments[2] !== void 0
                                ? arguments[2]
                                : {};
                    if (
                        ((this.services = t),
                        (this.options = Fw(
                            Fw(Fw({}, tQ()), this.options || {}),
                            i
                        )),
                        (this.allOptions = s),
                        this.services && this.options.reloadInterval)
                    ) {
                        var o = setInterval(function () {
                            return n.reload();
                        }, this.options.reloadInterval);
                        Op(o) === 'object' &&
                            typeof o.unref == 'function' &&
                            o.unref();
                    }
                },
            },
            {
                key: 'readMulti',
                value: function (t, n, i) {
                    this._readAny(t, t, n, n, i);
                },
            },
            {
                key: 'read',
                value: function (t, n, i) {
                    this._readAny([t], t, [n], n, i);
                },
            },
            {
                key: '_readAny',
                value: function (t, n, i, s, o) {
                    var a = this,
                        l = this.options.loadPath;
                    typeof this.options.loadPath == 'function' &&
                        (l = this.options.loadPath(t, i)),
                        (l = WJ(l)),
                        l.then(function (u) {
                            if (!u) return o(null, {});
                            var f = a.services.interpolator.interpolate(u, {
                                lng: t.join('+'),
                                ns: i.join('+'),
                            });
                            a.loadUrl(f, o, n, s);
                        });
                },
            },
            {
                key: 'loadUrl',
                value: function (t, n, i, s) {
                    var o = this,
                        a = typeof i == 'string' ? [i] : i,
                        l = typeof s == 'string' ? [s] : s,
                        u = this.options.parseLoadPayload(a, l);
                    this.options.request(this.options, t, u, function (f, d) {
                        if (
                            d &&
                            ((d.status >= 500 && d.status < 600) || !d.status)
                        )
                            return n(
                                'failed loading ' +
                                    t +
                                    '; status code: ' +
                                    d.status,
                                !0
                            );
                        if (d && d.status >= 400 && d.status < 500)
                            return n(
                                'failed loading ' +
                                    t +
                                    '; status code: ' +
                                    d.status,
                                !1
                            );
                        if (!d && f && f.message) {
                            var m = f.message.toLowerCase(),
                                v = ['failed', 'fetch', 'network', 'load'].find(
                                    function (w) {
                                        return m.indexOf(w) > -1;
                                    }
                                );
                            if (v)
                                return n(
                                    'failed loading ' + t + ': ' + f.message,
                                    !0
                                );
                        }
                        if (f) return n(f, !1);
                        var _, S;
                        try {
                            typeof d.data == 'string'
                                ? (_ = o.options.parse(d.data, i, s))
                                : (_ = d.data);
                        } catch {
                            S = 'failed parsing ' + t + ' to json';
                        }
                        if (S) return n(S, !1);
                        n(null, _);
                    });
                },
            },
            {
                key: 'create',
                value: function (t, n, i, s, o) {
                    var a = this;
                    if (this.options.addPath) {
                        typeof t == 'string' && (t = [t]);
                        var l = this.options.parsePayload(n, i, s),
                            u = 0,
                            f = [],
                            d = [];
                        t.forEach(function (m) {
                            var v = a.options.addPath;
                            typeof a.options.addPath == 'function' &&
                                (v = a.options.addPath(m, n));
                            var _ = a.services.interpolator.interpolate(v, {
                                lng: m,
                                ns: n,
                            });
                            a.options.request(a.options, _, l, function (S, w) {
                                (u += 1),
                                    f.push(S),
                                    d.push(w),
                                    u === t.length &&
                                        typeof o == 'function' &&
                                        o(f, d);
                            });
                        });
                    }
                },
            },
            {
                key: 'reload',
                value: function () {
                    var t = this,
                        n = this.services,
                        i = n.backendConnector,
                        s = n.languageUtils,
                        o = n.logger,
                        a = i.language;
                    if (!(a && a.toLowerCase() === 'cimode')) {
                        var l = [],
                            u = function (d) {
                                var m = s.toResolveHierarchy(d);
                                m.forEach(function (v) {
                                    l.indexOf(v) < 0 && l.push(v);
                                });
                            };
                        u(a),
                            this.allOptions.preload &&
                                this.allOptions.preload.forEach(function (f) {
                                    return u(f);
                                }),
                            l.forEach(function (f) {
                                t.allOptions.ns.forEach(function (d) {
                                    i.read(
                                        f,
                                        d,
                                        'read',
                                        null,
                                        null,
                                        function (m, v) {
                                            m &&
                                                o.warn(
                                                    'loading namespace '
                                                        .concat(
                                                            d,
                                                            ' for language '
                                                        )
                                                        .concat(f, ' failed'),
                                                    m
                                                ),
                                                !m &&
                                                    v &&
                                                    o.log(
                                                        'loaded namespace '
                                                            .concat(
                                                                d,
                                                                ' for language '
                                                            )
                                                            .concat(f),
                                                        v
                                                    ),
                                                i.loaded(
                                                    ''.concat(f, '|').concat(d),
                                                    m,
                                                    v
                                                );
                                        }
                                    );
                                });
                            });
                    }
                },
            },
        ]);
    })();
cN.type = 'backend';
const { slice: nQ, forEach: iQ } = [];
function rQ(r) {
    return (
        iQ.call(nQ.call(arguments, 1), (e) => {
            if (e) for (const t in e) r[t] === void 0 && (r[t] = e[t]);
        }),
        r
    );
}
function sQ(r) {
    return typeof r != 'string'
        ? !1
        : [
              /<\s*script.*?>/i,
              /<\s*\/\s*script\s*>/i,
              /<\s*img.*?on\w+\s*=/i,
              /<\s*\w+\s*on\w+\s*=.*?>/i,
              /javascript\s*:/i,
              /vbscript\s*:/i,
              /expression\s*\(/i,
              /eval\s*\(/i,
              /alert\s*\(/i,
              /document\.cookie/i,
              /document\.write\s*\(/i,
              /window\.location/i,
              /innerHTML/i,
          ].some((t) => t.test(r));
}
const xL = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/,
    oQ = function (r, e) {
        const n =
                arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : { path: '/' },
            i = encodeURIComponent(e);
        let s = `${r}=${i}`;
        if (n.maxAge > 0) {
            const o = n.maxAge - 0;
            if (Number.isNaN(o)) throw new Error('maxAge should be a Number');
            s += `; Max-Age=${Math.floor(o)}`;
        }
        if (n.domain) {
            if (!xL.test(n.domain))
                throw new TypeError('option domain is invalid');
            s += `; Domain=${n.domain}`;
        }
        if (n.path) {
            if (!xL.test(n.path)) throw new TypeError('option path is invalid');
            s += `; Path=${n.path}`;
        }
        if (n.expires) {
            if (typeof n.expires.toUTCString != 'function')
                throw new TypeError('option expires is invalid');
            s += `; Expires=${n.expires.toUTCString()}`;
        }
        if (
            (n.httpOnly && (s += '; HttpOnly'),
            n.secure && (s += '; Secure'),
            n.sameSite)
        )
            switch (
                typeof n.sameSite == 'string'
                    ? n.sameSite.toLowerCase()
                    : n.sameSite
            ) {
                case !0:
                    s += '; SameSite=Strict';
                    break;
                case 'lax':
                    s += '; SameSite=Lax';
                    break;
                case 'strict':
                    s += '; SameSite=Strict';
                    break;
                case 'none':
                    s += '; SameSite=None';
                    break;
                default:
                    throw new TypeError('option sameSite is invalid');
            }
        return n.partitioned && (s += '; Partitioned'), s;
    },
    SL = {
        create(r, e, t, n) {
            let i =
                arguments.length > 4 && arguments[4] !== void 0
                    ? arguments[4]
                    : { path: '/', sameSite: 'strict' };
            t &&
                ((i.expires = new Date()),
                i.expires.setTime(i.expires.getTime() + t * 60 * 1e3)),
                n && (i.domain = n),
                (document.cookie = oQ(r, encodeURIComponent(e), i));
        },
        read(r) {
            const e = `${r}=`,
                t = document.cookie.split(';');
            for (let n = 0; n < t.length; n++) {
                let i = t[n];
                for (; i.charAt(0) === ' '; ) i = i.substring(1, i.length);
                if (i.indexOf(e) === 0) return i.substring(e.length, i.length);
            }
            return null;
        },
        remove(r) {
            this.create(r, '', -1);
        },
    };
var aQ = {
        name: 'cookie',
        lookup(r) {
            let { lookupCookie: e } = r;
            if (e && typeof document < 'u') return SL.read(e) || void 0;
        },
        cacheUserLanguage(r, e) {
            let {
                lookupCookie: t,
                cookieMinutes: n,
                cookieDomain: i,
                cookieOptions: s,
            } = e;
            t && typeof document < 'u' && SL.create(t, r, n, i, s);
        },
    },
    lQ = {
        name: 'querystring',
        lookup(r) {
            var n;
            let { lookupQuerystring: e } = r,
                t;
            if (typeof window < 'u') {
                let { search: i } = window.location;
                !window.location.search &&
                    ((n = window.location.hash) == null
                        ? void 0
                        : n.indexOf('?')) > -1 &&
                    (i = window.location.hash.substring(
                        window.location.hash.indexOf('?')
                    ));
                const o = i.substring(1).split('&');
                for (let a = 0; a < o.length; a++) {
                    const l = o[a].indexOf('=');
                    l > 0 &&
                        o[a].substring(0, l) === e &&
                        (t = o[a].substring(l + 1));
                }
            }
            return t;
        },
    };
let Yd = null;
const wL = () => {
    if (Yd !== null) return Yd;
    try {
        if (((Yd = typeof window < 'u' && window.localStorage !== null), !Yd))
            return !1;
        const r = 'i18next.translate.boo';
        window.localStorage.setItem(r, 'foo'),
            window.localStorage.removeItem(r);
    } catch {
        Yd = !1;
    }
    return Yd;
};
var uQ = {
    name: 'localStorage',
    lookup(r) {
        let { lookupLocalStorage: e } = r;
        if (e && wL()) return window.localStorage.getItem(e) || void 0;
    },
    cacheUserLanguage(r, e) {
        let { lookupLocalStorage: t } = e;
        t && wL() && window.localStorage.setItem(t, r);
    },
};
let qd = null;
const ML = () => {
    if (qd !== null) return qd;
    try {
        if (((qd = typeof window < 'u' && window.sessionStorage !== null), !qd))
            return !1;
        const r = 'i18next.translate.boo';
        window.sessionStorage.setItem(r, 'foo'),
            window.sessionStorage.removeItem(r);
    } catch {
        qd = !1;
    }
    return qd;
};
var cQ = {
        name: 'sessionStorage',
        lookup(r) {
            let { lookupSessionStorage: e } = r;
            if (e && ML()) return window.sessionStorage.getItem(e) || void 0;
        },
        cacheUserLanguage(r, e) {
            let { lookupSessionStorage: t } = e;
            t && ML() && window.sessionStorage.setItem(t, r);
        },
    },
    fQ = {
        name: 'navigator',
        lookup(r) {
            const e = [];
            if (typeof navigator < 'u') {
                const {
                    languages: t,
                    userLanguage: n,
                    language: i,
                } = navigator;
                if (t) for (let s = 0; s < t.length; s++) e.push(t[s]);
                n && e.push(n), i && e.push(i);
            }
            return e.length > 0 ? e : void 0;
        },
    },
    hQ = {
        name: 'htmlTag',
        lookup(r) {
            let { htmlTag: e } = r,
                t;
            const n =
                e || (typeof document < 'u' ? document.documentElement : null);
            return (
                n &&
                    typeof n.getAttribute == 'function' &&
                    (t = n.getAttribute('lang')),
                t
            );
        },
    },
    dQ = {
        name: 'path',
        lookup(r) {
            var i;
            let { lookupFromPathIndex: e } = r;
            if (typeof window > 'u') return;
            const t = window.location.pathname.match(/\/([a-zA-Z-]*)/g);
            return Array.isArray(t)
                ? (i = t[typeof e == 'number' ? e : 0]) == null
                    ? void 0
                    : i.replace('/', '')
                : void 0;
        },
    },
    pQ = {
        name: 'subdomain',
        lookup(r) {
            var i, s;
            let { lookupFromSubdomainIndex: e } = r;
            const t = typeof e == 'number' ? e + 1 : 1,
                n =
                    typeof window < 'u' &&
                    ((s =
                        (i = window.location) == null ? void 0 : i.hostname) ==
                    null
                        ? void 0
                        : s.match(
                              /^(\w{2,5})\.(([a-z0-9-]{1,63}\.[a-z]{2,6})|localhost)/i
                          ));
            if (n) return n[t];
        },
    };
let fN = !1;
try {
    document.cookie, (fN = !0);
} catch {}
const hN = [
    'querystring',
    'cookie',
    'localStorage',
    'sessionStorage',
    'navigator',
    'htmlTag',
];
fN || hN.splice(1, 1);
const mQ = () => ({
    order: hN,
    lookupQuerystring: 'lng',
    lookupCookie: 'i18next',
    lookupLocalStorage: 'i18nextLng',
    lookupSessionStorage: 'i18nextLng',
    caches: ['localStorage'],
    excludeCacheFor: ['cimode'],
    convertDetectedLanguage: (r) => r,
});
class dN {
    constructor(e) {
        let t =
            arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
        (this.type = 'languageDetector'),
            (this.detectors = {}),
            this.init(e, t);
    }
    init() {
        let e =
                arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : { languageUtils: {} },
            t =
                arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : {},
            n =
                arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : {};
        (this.services = e),
            (this.options = rQ(t, this.options || {}, mQ())),
            typeof this.options.convertDetectedLanguage == 'string' &&
                this.options.convertDetectedLanguage.indexOf('15897') > -1 &&
                (this.options.convertDetectedLanguage = (i) =>
                    i.replace('-', '_')),
            this.options.lookupFromUrlIndex &&
                (this.options.lookupFromPathIndex =
                    this.options.lookupFromUrlIndex),
            (this.i18nOptions = n),
            this.addDetector(aQ),
            this.addDetector(lQ),
            this.addDetector(uQ),
            this.addDetector(cQ),
            this.addDetector(fQ),
            this.addDetector(hQ),
            this.addDetector(dQ),
            this.addDetector(pQ);
    }
    addDetector(e) {
        return (this.detectors[e.name] = e), this;
    }
    detect() {
        let e =
                arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : this.options.order,
            t = [];
        return (
            e.forEach((n) => {
                if (this.detectors[n]) {
                    let i = this.detectors[n].lookup(this.options);
                    i && typeof i == 'string' && (i = [i]),
                        i && (t = t.concat(i));
                }
            }),
            (t = t
                .filter((n) => n != null && !sQ(n))
                .map((n) => this.options.convertDetectedLanguage(n))),
            this.services &&
            this.services.languageUtils &&
            this.services.languageUtils.getBestMatchFromCodes
                ? t
                : t.length > 0
                  ? t[0]
                  : null
        );
    }
    cacheUserLanguage(e) {
        let t =
            arguments.length > 1 && arguments[1] !== void 0
                ? arguments[1]
                : this.options.caches;
        t &&
            ((this.options.excludeCacheFor &&
                this.options.excludeCacheFor.indexOf(e) > -1) ||
                t.forEach((n) => {
                    this.detectors[n] &&
                        this.detectors[n].cacheUserLanguage(e, this.options);
                }));
    }
}
dN.type = 'languageDetector';
vs.use(cN)
    .use(dN)
    .use(HJ)
    .init({
        debug: !0,
        fallbackLng: 'fr',
        backend: { loadPath: '/locales/{{lng}}/translation.json' },
    });
const pN = Y.createContext(),
    gQ = new URL('/assets/notification-wBGf4-Tp.mp3', import.meta.url).href,
    vQ = ({ children: r }) => {
        const [e, t] = Y.useState([]),
            [n, i] = Y.useState(null);
        Y.useEffect(() => {
            const l = new Audio(gQ);
            return (
                i(l),
                l.load(),
                () => {
                    l && (l.pause(), (l.src = ''));
                }
            );
        }, []);
        const s = Y.useCallback(async () => {
                if (n)
                    try {
                        (n.currentTime = 0), await n.play();
                    } catch (l) {
                        console.warn('Could not play notification sound:', l);
                    }
            }, [n]),
            o = Y.useCallback(
                (l, u = 'info') => {
                    const f = Date.now().toString();
                    t((m) => [...m, { id: f, message: l, type: u }]), s();
                    const d = setTimeout(() => {
                        t((m) => m.filter((v) => v.id !== f));
                    }, 3e3);
                    return () => clearTimeout(d);
                },
                [s]
            ),
            a = Y.useCallback((l) => {
                t((u) => u.filter((f) => f.id !== l));
            }, []);
        return we.jsxs(pN.Provider, {
            value: { addToast: o, removeToast: a },
            children: [
                r,
                we.jsx('div', {
                    className: 'fixed top-4 right-4 z-50 flex flex-col gap-2',
                    children: we.jsx(LE, {
                        mode: 'popLayout',
                        children: e.map((l) =>
                            we.jsx(xQ, { ...l, onRemove: () => a(l.id) }, l.id)
                        ),
                    }),
                }),
            ],
        });
    },
    yQ = {
        success: we.jsx(o$, { className: 'h-5 w-5 text-green-50' }),
        error: we.jsx(x$, { className: 'h-5 w-5 text-red-50' }),
        warning: we.jsx(l$, { className: 'h-5 w-5 text-yellow-50' }),
        info: we.jsx(p$, { className: 'h-5 w-5 text-blue-50' }),
    },
    _Q = {
        success: 'bg-green-600/80  backdrop-blur-md text-green-50',
        error: 'bg-red-600/80  backdrop-blur-md text-red-50',
        warning: 'bg-yellow-600/80  backdrop-blur-md text-yellow-50',
        info: 'bg-blue-600/80  backdrop-blur-md text-blue-50',
    },
    xQ = ({ id: r, message: e, type: t, onRemove: n }) =>
        we.jsxs(tI.div, {
            layout: !0,
            initial: { opacity: 0, y: 50, scale: 0.3 },
            animate: { opacity: 1, y: 0, scale: 1 },
            exit: { opacity: 0, scale: 0.5, transition: { duration: 0.5 } },
            className: `flex w-[250px] items-center gap-3 rounded-2xl p-4 shadow-lg ${_Q[t]} cursor-pointer`,
            onClick: n,
            id: `toast-${r}`,
            role: 'alert',
            'aria-live': 'polite',
            children: [
                yQ[t],
                we.jsx('span', {
                    className: 'text-sm font-medium',
                    children: e,
                }),
            ],
        }),
    jQ = () => {
        const r = Y.useContext(pN);
        if (!r) throw new Error('useToast must be used within a ToastProvider');
        return r;
    },
    mN = Y.createContext(null),
    SQ = ({ children: r }) => {
        const e = {
                id: 'temp-' + Date.now().toString(),
                tone: null,
                elements: [],
                background: 'dramatic-bg',
                music: void 0,
            },
            [t, n] = Y.useState(e),
            i = (_) => {
                switch (_) {
                    case 'dramatic':
                        return 'As the curtain falls on this digital chapter, I bid thee farewell...';
                    case 'ironic':
                        return 'Oh no... anyway';
                    case 'cringe':
                        return "OMG can't believe I'm actually leaving!! 😭😭😭";
                    case 'classy':
                        return 'With gratitude for our time together, I take my leave.';
                    case 'absurd':
                        return 'I have been ABDUCTED by ALIEN DUCKS and must depart this DIMENSION!!!';
                    default:
                        return 'Farewell, my friends...';
                }
            },
            s = (_) => {
                switch (_) {
                    case 'dramatic':
                        return 'handwritten';
                    case 'ironic':
                        return 'retro-font';
                    case 'cringe':
                        return 'comic-sans';
                    case 'classy':
                        return 'handwritten';
                    case 'absurd':
                        return 'pixel-font';
                    default:
                        return 'retro-font';
                }
            },
            o = (_) => {
                n((S) => {
                    let w = S.background;
                    return (
                        _ === 'dramatic' && (w = 'dramatic-bg'),
                        _ === 'ironic' && (w = 'ironic-bg'),
                        _ === 'cringe' && (w = 'cringe-bg'),
                        _ === 'classy' && (w = 'classy-bg'),
                        _ === 'absurd' && (w = 'absurd-bg'),
                        {
                            ...S,
                            tone: _,
                            background: w,
                            elements: [
                                ...S.elements,
                                {
                                    id: 'default-text-' + Date.now(),
                                    type: 'text',
                                    content: i(_),
                                    style: {
                                        font: s(_),
                                        size: '2xl',
                                        color: 'white',
                                    },
                                    position: { x: 50, y: 50 },
                                },
                            ],
                        }
                    );
                });
            },
            a = (_) => {
                const S = {
                    ..._,
                    id: `${_.type}-${Date.now()}-${Math.floor(Math.random() * 1e3)}`,
                };
                n((w) => ({ ...w, elements: [...w.elements, S] })),
                    _.type === 'image' && console.log('Image added:', S);
            },
            l = (_, S) => {
                n((w) => ({
                    ...w,
                    elements: w.elements.map((x) =>
                        x.id === _ ? { ...x, ...S } : x
                    ),
                }));
            },
            u = (_) => {
                n((S) => ({
                    ...S,
                    elements: S.elements.filter((w) => w.id !== _),
                }));
            },
            f = (_) => {
                n((S) => ({ ...S, background: _ }));
            },
            d = (_) => {
                n((S) => ({ ...S, music: _ }));
            },
            m = (_, S) => {
                n((w) => ({
                    ...w,
                    elements: w.elements.map((x) =>
                        x.id === _ ? { ...x, position: S } : x
                    ),
                }));
            },
            v = () => {
                n(e);
            };
        return we.jsx(mN.Provider, {
            value: {
                farewellPage: t,
                setTone: o,
                addElement: a,
                updateElement: l,
                removeElement: u,
                setBackground: f,
                setMusic: d,
                moveElement: m,
                resetPage: v,
            },
            children: r,
        });
    },
    XQ = () => {
        const r = Y.useContext(mN);
        if (!r)
            throw new Error(
                'useFarewell must be used within a FarewellProvider'
            );
        return r;
    };
function wQ(r = {}) {
    const { nonce: e, onScriptLoadSuccess: t, onScriptLoadError: n } = r,
        [i, s] = Y.useState(!1),
        o = Y.useRef(t);
    o.current = t;
    const a = Y.useRef(n);
    return (
        (a.current = n),
        Y.useEffect(() => {
            const l = document.createElement('script');
            return (
                (l.src = 'https://accounts.google.com/gsi/client'),
                (l.async = !0),
                (l.defer = !0),
                (l.nonce = e),
                (l.onload = () => {
                    var u;
                    s(!0),
                        (u = o.current) === null || u === void 0 || u.call(o);
                }),
                (l.onerror = () => {
                    var u;
                    s(!1),
                        (u = a.current) === null || u === void 0 || u.call(a);
                }),
                document.body.appendChild(l),
                () => {
                    document.body.removeChild(l);
                }
            );
        }, [e]),
        i
    );
}
const gN = Y.createContext(null);
function MQ({
    clientId: r,
    nonce: e,
    onScriptLoadSuccess: t,
    onScriptLoadError: n,
    children: i,
}) {
    const s = wQ({ nonce: e, onScriptLoadSuccess: t, onScriptLoadError: n }),
        o = Y.useMemo(
            () => ({ clientId: r, scriptLoadedSuccessfully: s }),
            [r, s]
        );
    return EL.createElement(gN.Provider, { value: o }, i);
}
function EQ() {
    const r = Y.useContext(gN);
    if (!r)
        throw new Error(
            'Google OAuth components must be used within GoogleOAuthProvider'
        );
    return r;
}
function TQ(r) {
    var e;
    return (e = r == null ? void 0 : r.clientId) !== null && e !== void 0
        ? e
        : r == null
          ? void 0
          : r.client_id;
}
const AQ = { large: 40, medium: 32, small: 20 };
function YQ({
    onSuccess: r,
    onError: e,
    useOneTap: t,
    promptMomentNotification: n,
    type: i = 'standard',
    theme: s = 'outline',
    size: o = 'large',
    text: a,
    shape: l,
    logo_alignment: u,
    width: f,
    locale: d,
    click_listener: m,
    containerProps: v,
    ..._
}) {
    const S = Y.useRef(null),
        { clientId: w, scriptLoadedSuccessfully: x } = EQ(),
        A = Y.useRef(r);
    A.current = r;
    const T = Y.useRef(e);
    T.current = e;
    const b = Y.useRef(n);
    return (
        (b.current = n),
        Y.useEffect(() => {
            var P, L, D, O, I, U, H, W, q;
            if (x)
                return (
                    (D =
                        (L =
                            (P = window == null ? void 0 : window.google) ===
                                null || P === void 0
                                ? void 0
                                : P.accounts) === null || L === void 0
                            ? void 0
                            : L.id) === null ||
                        D === void 0 ||
                        D.initialize({
                            client_id: w,
                            callback: (K) => {
                                var le;
                                if (!(K != null && K.credential))
                                    return (le = T.current) === null ||
                                        le === void 0
                                        ? void 0
                                        : le.call(T);
                                const { credential: ee, select_by: de } = K;
                                A.current({
                                    credential: ee,
                                    clientId: TQ(K),
                                    select_by: de,
                                });
                            },
                            ..._,
                        }),
                    (U =
                        (I =
                            (O = window == null ? void 0 : window.google) ===
                                null || O === void 0
                                ? void 0
                                : O.accounts) === null || I === void 0
                            ? void 0
                            : I.id) === null ||
                        U === void 0 ||
                        U.renderButton(S.current, {
                            type: i,
                            theme: s,
                            size: o,
                            text: a,
                            shape: l,
                            logo_alignment: u,
                            width: f,
                            locale: d,
                            click_listener: m,
                        }),
                    t &&
                        ((q =
                            (W =
                                (H =
                                    window == null ? void 0 : window.google) ===
                                    null || H === void 0
                                    ? void 0
                                    : H.accounts) === null || W === void 0
                                ? void 0
                                : W.id) === null ||
                            q === void 0 ||
                            q.prompt(b.current)),
                    () => {
                        var K, le, ee;
                        t &&
                            ((ee =
                                (le =
                                    (K =
                                        window == null
                                            ? void 0
                                            : window.google) === null ||
                                    K === void 0
                                        ? void 0
                                        : K.accounts) === null || le === void 0
                                    ? void 0
                                    : le.id) === null ||
                                ee === void 0 ||
                                ee.cancel());
                    }
                );
        }, [w, x, t, i, s, o, a, l, u, f, d]),
        EL.createElement('div', {
            ...v,
            ref: S,
            style: { height: AQ[o], ...(v == null ? void 0 : v.style) },
        })
    );
}
const bQ = ZN.createRoot(document.getElementById('root'));
bQ.render(
    we.jsx(Y.StrictMode, {
        children: we.jsx(MQ, {
            clientId:
                '212693773268-vdcde7idcp9nmv978c9q64ogme04s69d.apps.googleusercontent.com',
            children: we.jsx(SQ, {
                children: we.jsx(vQ, { children: we.jsx(iN, {}) }),
            }),
        }),
    })
);
export {
    Nr as $,
    LE as A,
    gD as B,
    Tq as C,
    i$ as D,
    WQ as E,
    GQ as F,
    YQ as G,
    XQ as H,
    YN as I,
    PQ as J,
    sU as K,
    qE as L,
    YO as M,
    R_ as N,
    CV as O,
    IH as P,
    DH as Q,
    PV as R,
    y$ as S,
    OH as T,
    tA as U,
    re as V,
    mr as W,
    x$ as X,
    zc as Y,
    tt as Z,
    Do as _,
    ls as a,
    Gp as a0,
    gc as a1,
    zi as a2,
    AT as a3,
    aA as a4,
    Mo as a5,
    UT as a6,
    Zx as a7,
    GT as a8,
    Tt as a9,
    PO as aa,
    wh as ab,
    nK as ac,
    Aq as ad,
    RT as ae,
    Ht as af,
    wk as ag,
    LQ as ah,
    wx as b,
    qa as c,
    CQ as d,
    bH as e,
    uI as f,
    rE as g,
    RH as h,
    t6 as i,
    we as j,
    EL as k,
    Yp as l,
    tI as m,
    Oc as n,
    HQ as o,
    QN as p,
    jF as q,
    Y as r,
    oE as s,
    Sp as t,
    jQ as u,
    PE as v,
    TL as w,
    Di as x,
    bc as y,
    Sb as z,
};
